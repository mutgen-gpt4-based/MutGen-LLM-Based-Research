LINE:1###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 + STRING_1) + STRING_2)
 ||| Move VariableRead from Example:1 to Example:1
	msg
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:2###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == 0)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_1)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1 != VAR_1)
 ||| 
LINE:3###Insert LocalVariable at Example:1
	TYPE_2 VAR_2 = 
 ||| Insert TypeReference at Example:1
	TYPE_2
 ||| Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_3.METHOD_2()))
 ||| Insert VariableRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Assignment at Example:1
	VAR_2 = 
 ||| Delete Block at Example:1
	{
	    VAR_2 = ;
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    VAR_2 = ;
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:4###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:5###Move If from Example:1 to Example:1
	if (VAR_1 == null) {
	    VAR_1 = new TYPE_1(this, VAR_2);
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| Delete Block at Example:1
	{
	    synchronized(this) {
	
	    }
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    synchronized(this) {
	
	    }
	}
 ||| 
LINE:6###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	VAR_8
 ||| Move FieldRead from Example:1 to Example:1
	type
 ||| Move FieldRead from Example:1 to Example:1
	VAR_5
 ||| Move FieldRead from Example:1 to Example:1
	VAR_7
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:7###Move Invocation from Example:1 to Example:1
	this.METHOD_2().METHOD_3(this)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.METHOD_2() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.METHOD_2() != null) {
	
	}
 ||| 
LINE:8###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 != null)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 != null)
 ||| 
LINE:9###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:10###Update Wra at Example:1
	 to public
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_1
 ||| 
LINE:11###Move Invocation from Example:1 to Example:1
	VAR_2.start()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_1()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_1()) {
	
	}
 ||| 
LINE:12###Insert OperatorAssignment at Example:1
	(VAR_2 &= )
 ||| Insert FieldWrite at Example:1
	VAR_2
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(VAR_2 & )
 ||| 
LINE:13###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:14###Move Invocation from Example:1 to Example:1
	VAR_2.update(TYPE_1.METHOD_1())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:15###Move BinaryOperator from Example:1 to Example:1
	(event.METHOD_2(STRING_1) != null)
 ||| 
LINE:16###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.equals(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (!VAR_2.equals(STRING_1)) {
	    METHOD_2();
	}
 ||| Delete TypeReference at Example:1
	android.content.Intent
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_4)
 ||| Delete LocalVariable at Example:1
	final android.content.Intent intent = METHOD_3(VAR_4)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete Invocation at Example:1
	METHOD_4(intent)
 ||| 
LINE:17###Move If from Example:1 to Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_3();
	    VAR_3 = null;
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:18###Move BinaryOperator from Example:1 to Example:1
	(((double) (VAR_1)) / (VAR_1 + VAR_2))
 ||| Delete TypeReference at Example:1
	double
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 * INT_1
 ||| 
LINE:19###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	METHOD_2() ? null : 
 ||| 
LINE:20###Insert Invocation at Example:1
	.METHOD_1()
 ||| Update ConstructorCall at Example:1
	 to new TYPE_1(this)
 ||| Move ConstructorCall from Example:1 to Example:1
	new TYPE_1(this, VAR_1)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:21###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_1 = false
 ||| Delete Block at Example:1
	{
	    VAR_1 = false;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    VAR_1 = false;
	}
 ||| 
LINE:22###Insert If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_1 = false
 ||| 
LINE:23###Insert If at Example:1
	if () {
	    return false;
	}
 ||| Update BinaryOperator at Example:1
	 to java.lang.Math.abs(VAR_1 - VAR_2) > FLOAT_1
 ||| Move BinaryOperator from Example:1 to Example:1
	java.lang.Math.abs(VAR_1 - VAR_2) <= FLOAT_1
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Literal at Example:1
	true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:24###
LINE:25###Move Assignment from Example:1 to Example:1
	VAR_4 = false
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_5, VAR_6.getValue().toString())
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	!VAR_3
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_3) {
	
	
	}
 ||| 
LINE:26###Move BinaryOperator from Example:1 to Example:1
	temp - INT_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	INT_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, INT_2)
 ||| 
LINE:27###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	VAR_1 ? VAR_2 : 
 ||| 
LINE:28###Move Invocation from Example:1 to Example:1
	listener.METHOD_3(STRING_1, this)
 ||| Move Invocation from Example:1 to Example:1
	listener.METHOD_4(this)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:29###Delete TypeAccess at Example
	Example
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_6()
 ||| Delete Method at Example:1
	public void METHOD_5() {
	    METHOD_6();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_5() {
	        METHOD_6();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_5() {
	        METHOD_6();
	    }
	}
 ||| Delete Invocation at Example:1
	METHOD_4(new TYPE_2() {
	    public void METHOD_5() {
	        METHOD_6();
	    }
	})
 ||| 
LINE:30###Move Invocation from Example:1 to Example:1
	remove(0)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2() > 0) {
	
	}
 ||| 
LINE:31###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 instanceof TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(true)
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2(true);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 instanceof TYPE_1) {
	    VAR_2.METHOD_2(true);
	} else {
	
	}
 ||| 
LINE:32###Move Invocation from Example:1 to Example:1
	java.lang.String.format(STRING_1, METHOD_2())
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	.replaceAll(STRING_2, STRING_3)
 ||| 
LINE:33###Update BinaryOperator at Example:1
	VAR_2 + 1 to VAR_2 - 1
 ||| Update BinaryOperator at Example:1
	VAR_3 - 1 to VAR_3 + 1
 ||| 
LINE:34###Move BinaryOperator from Example:1 to Example:1
	(VAR_2.METHOD_2() == VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == null)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == null) || 
 ||| 
LINE:35###Move Return from Example:1 to Example:1
	return ((TYPE_2) (VAR_1.METHOD_2())).METHOD_3().METHOD_1()
 ||| Delete TypeReference at Example:1
	java.lang.NullPointerException
 ||| Delete CatchVariable at Example:1
	java.lang.NullPointerException VAR_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete Throw at Example:1
	throw new TYPE_1()
 ||| Delete Catch at Example:1
	 catch (java.lang.NullPointerException VAR_2) {
	    throw new TYPE_1();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.NullPointerException VAR_2) {
	    throw new TYPE_1();
	}
 ||| 
LINE:36###Move Invocation from Example:1 to Example:1
	VAR_2.handle(event)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_2(VAR_3)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	    VAR_4.METHOD_2(VAR_3);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	    VAR_4.METHOD_2(VAR_3);
	}
 ||| 
LINE:37###Insert Invocation at Example:1
	TYPE_1.METHOD_1(, 1)
 ||| Insert TypeAccess at Example:1
	TYPE_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| 
LINE:38###Insert BinaryOperator at Example:1
	 == 1
 ||| Update Invocation at Example:1
	 to VAR_1.size()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.isEmpty()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:39###Move Invocation from Example:1 to Example:1
	out.METHOD_3()
 ||| 
LINE:40###Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| 
LINE:41###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:42###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(false)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3).METHOD_4(VAR_4)
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_2 = false
 ||| Delete Block at Example:1
	{
	    METHOD_3(VAR_3).METHOD_4(VAR_4);
	    VAR_2 = false;
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	    METHOD_3(VAR_3).METHOD_4(VAR_4);
	    VAR_2 = false;
	}
 ||| 
LINE:43###Move Assignment from Example:1 to Example:1
	this.index = -1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	this.VAR_1.size() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1.size() > 0) {
	
	}
 ||| 
LINE:44###Move Return from Example:1 to Example:1
	return TYPE_2.METHOD_2(VAR_1, 0, VAR_2.length)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:45###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new java.util.HashMap()
 ||| 
LINE:46###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:47###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(operation)
 ||| Delete TypeReference at Example:1
	TYPE_4
 ||| Delete CatchVariable at Example:1
	TYPE_4 VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (TYPE_4 VAR_2) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_4 VAR_2) {
	    return null;
	}
 ||| 
LINE:48###Move Return from Example:1 to Example:1
	return TYPE_1.METHOD_2(VAR_1).METHOD_3(STRING_1)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1).getString(STRING_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_2(VAR_1).getString(STRING_1) != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(VAR_1).getString(STRING_1) != null) {
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| 
LINE:49###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3().VAR_4.select(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.select(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:50###Insert Invocation at Example:1
	.getName()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:51###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:52###Move Invocation from Example:1 to Example:1
	VAR_1.equals(response)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2 != null)
 ||| 
LINE:53###Insert BinaryOperator at Example:1
	 - 1
 ||| Move BinaryOperator from Example:1 to Example:1
	start + VAR_2
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:54###Update Invocation at Example:1
	 to new TYPE_1().execute(list)
 ||| Move Invocation from Example:1 to Example:1
	list.METHOD_2()
 ||| Move ConstructorCall from Example:1 to Example:1
	new TYPE_1()
 ||| Update WildcardReference at Example:1
	? extends java.lang.Object to java.lang.Object
 ||| Delete Invocation at Example:1
	.execute()
 ||| 
LINE:55###Move If from Example:1 to Example:1
	if (VAR_2.METHOD_2(VAR_3)) {
	    METHOD_3();
	} else {
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 % INT_1)
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 % INT_1) == 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 % INT_1) == 1) {
	
	}
 ||| 
LINE:56###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:57###Insert VirtualEle at Example:1
	
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Insert TypeReference at Example:1
	java.lang.Exception
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| 
LINE:58###Update Method at Example:1
	public static void METHOD_1() {
	    TYPE_1.METHOD_2();
	    TYPE_1.METHOD_3();
	} to public static void init() {
	    TYPE_1.METHOD_2();
	    TYPE_1.METHOD_3();
	}
 ||| 
LINE:59###Delete FieldRead at Example:1
	className
 ||| 
LINE:60###Update BinaryOperator at Example:1
	 to (VAR_1 != null) || ((type != null) && VAR_2.toLowerCase().startsWith(VAR_3))
 ||| Move BinaryOperator from Example:1 to Example:1
	((type == null) && (VAR_1 != null))
 ||| Move BinaryOperator from Example:1 to Example:1
	((type != null) && VAR_2.toLowerCase().startsWith(VAR_3))
 ||| Delete FieldRead at Example:1
	type
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(type == null)
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:61###Insert Invocation at Example:1
	java.lang.Math.abs()
 ||| Insert TypeAccess at Example:1
	java.lang.Math
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1.METHOD_2() / VAR_2
 ||| 
LINE:62###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	name
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(name + STRING_1)
 ||| Delete BinaryOperator at Example:1
	(name + STRING_1) + 
 ||| 
LINE:63###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:64###Move BinaryOperator from Example:1 to Example:1
	((value == null) || (key == null))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.trim()
 ||| Delete Invocation at Example:1
	VAR_1.trim().length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.trim().length() == 0)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1.trim().length() == 0)
 ||| 
LINE:65###Move Invocation from Example:1 to Example:1
	METHOD_2(name)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:66###Move Return from Example:1 to Example:1
	return VAR_3.get(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:67###Move FieldRead from Example:1 to Example:1
	VAR_3.id
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:68###Delete TypeReference at Example:1
	int
 ||| Delete LocalVariable at Example:1
	int result
 ||| Delete VariableWrite at Example:1
	result
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Assignment at Example:1
	result = METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	result
 ||| Delete BinaryOperator at Example:1
	STRING_1 + result
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(VAR_1, STRING_1 + result)
 ||| 
LINE:69###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	VAR_3 == VAR_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 == VAR_4) {
	    METHOD_2();
	} else {
	
	}
 ||| 
LINE:70###Move Invocation from Example:1 to Example:1
	event.METHOD_5(true)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete BinaryOperator at Example:1
	(VAR_2 instanceof TYPE_4)
 ||| Delete BinaryOperator at Example:1
	VAR_3 && (VAR_2 instanceof TYPE_4)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3 && (VAR_2 instanceof TYPE_4))
 ||| 
LINE:71###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, VAR_2, STRING_1)
 ||| 
LINE:72###Move Invocation from Example:1 to Example:1
	b.METHOD_2()
 ||| Delete Wra at Example:1
	
 ||| Delete VariableRead at Example:1
	b
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(b != null)
 ||| Delete BinaryOperator at Example:1
	(b != null) && 
 ||| 
LINE:73###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(new TYPE_3())
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:74###Insert If at Example:1
	if ()
	    return true;
	else
	    return false;
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.remove(VAR_1)
 ||| Insert Block at Example:1
	
	    return true;
 ||| Insert Block at Example:1
	
	    return false;
 ||| Insert Return at Example:1
	return true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:75###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2())
 ||| 
LINE:76###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:77###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeReference at Example
	TYPE_1
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Method at Example:1
	public void METHOD_1() {
	    METHOD_3();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_1() {
	        METHOD_3();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_1() {
	    public void METHOD_1() {
	        METHOD_3();
	    }
	}
 ||| Delete Invocation at Example:1
	this.METHOD_2(new TYPE_1() {
	    public void METHOD_1() {
	        METHOD_3();
	    }
	})
 ||| 
LINE:78###Move Invocation from Example:1 to Example:1
	METHOD_2(METHOD_3(), METHOD_4())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:79###Insert ConstructorCall at Example:1
	new TYPE_2(, )
 ||| Update ConstructorCall at Example:1
	 to new java.util.HashSet<>(java.util.Arrays.asList(STRING_1, STRING_2))
 ||| Move ConstructorCall from Example:1 to Example:1
	new TYPE_2(TYPE_3.METHOD_2(STRING_1, STRING_2), INT_1)
 ||| Move FieldRead from Example:1 to Example:1
	INT_1
 ||| Update Invocation at Example:1
	TYPE_3.METHOD_2(STRING_1, STRING_2) to java.util.Arrays.asList(STRING_1, STRING_2)
 ||| Insert TypeReference at Example
	java.lang.Object
 ||| Update TypeAccess at Example:1
	TYPE_3 to java.util.Arrays
 ||| 
LINE:80###Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	( * VAR_4)
 ||| 
LINE:81###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1, CHAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:82###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:83###ERROR: Gumtree failed to process. Message: 
LINE:84###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	
	    METHOD_3();
 ||| Delete If at Example:1
	if (METHOD_2())
	    METHOD_3();
 ||| 
LINE:85###Update BinaryOperator at Example:1
	 to 1.0F / ((float) (TYPE_1.METHOD_2((-VAR_1) + 1)))
 ||| Move BinaryOperator from Example:1 to Example:1
	(((float) (TYPE_1.METHOD_2((-VAR_1) + 1))) + 1)
 ||| Move Literal from Example:1 to Example:1
	1.0F
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 / 
 ||| 
LINE:86###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_3()
 ||| Delete Invocation at Example:1
	this.METHOD_3().METHOD_1()
 ||| Delete Return at Example:1
	return this.METHOD_3().METHOD_1()
 ||| Delete Block at Example:1
	{
	    return this.METHOD_3().METHOD_1();
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	    return this.METHOD_3().METHOD_1();
	}
 ||| 
LINE:87###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| 
LINE:88###Update BinaryOperator at Example:1
	 to (number / VAR_2) - (VAR_1 / VAR_2)
 ||| Move BinaryOperator from Example:1 to Example:1
	((number - 1) / VAR_2)
 ||| Update BinaryOperator at Example:1
	(number - 1) to (number / VAR_2)
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 / VAR_2)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 
 ||| 
LINE:89###Insert Invocation at Example:1
	.toString()
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2(query)
 ||| 
LINE:90###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_2 = new TYPE_1()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.execute(VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	
	}
 ||| 
LINE:91###Insert If at Example:1
	if (VAR_5 == null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_5 == null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	VAR_5
 ||| Insert Literal at Example:1
	null
 ||| Move Assignment from Example:1 to Example:1
	VAR_5 = this
 ||| 
LINE:92###Update Method at Example:1
	public void remove(TYPE_1 VAR_1) {
	    if (METHOD_1(VAR_1)) {
	
	        METHOD_3(VAR_1.METHOD_2(), VAR_3);
	    }
	} to public java.lang.Boolean METHOD_1(TYPE_1 VAR_1) {
	    return METHOD_1(VAR_1.METHOD_2());
	}
 ||| Update TypeReference at Example:1
	void to java.lang.Boolean
 ||| Insert Return at Example:1
	return 
 ||| Update Invocation at Example:1
	 to METHOD_1(VAR_1.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.remove(VAR_1.METHOD_2())
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_1.METHOD_2(), VAR_3)
 ||| Delete Block at Example:1
	{
	
	    METHOD_3(VAR_1.METHOD_2(), VAR_3);
	}
 ||| Delete If at Example:1
	if (METHOD_1(VAR_1)) {
	
	    METHOD_3(VAR_1.METHOD_2(), VAR_3);
	}
 ||| 
LINE:93###Move Invocation from Example:1 to Example:1
	VAR_3.add(0, VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(0)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_3.contains(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	METHOD_2(0)
 ||| Delete Block at Example:1
	{
	    METHOD_2(0);
	}
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_3.contains(VAR_2)) {
	    METHOD_2(0);
	} else {
	
	
	}
 ||| 
LINE:94###Move Assignment from Example:1 to Example:1
	VAR_1 = value
 ||| 
LINE:95###Update Invocation at Example:1
	 to TYPE_1.METHOD_1(this).add(STRING_1, VAR_1).add(STRING_2, VAR_2).toString()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(this).add(STRING_1, VAR_1).add(STRING_2, VAR_2).add(STRING_3, id)
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete FieldRead at Example:1
	id
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:96###Move LocalVariable from Example:1 to Example:1
	TYPE_2 VAR_2 = new TYPE_2(this.getContext())
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.execute(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:97###Update TypeReference at Example:1
	long to java.lang.Long
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	VAR_1 == null ? VAR_2 : 
 ||| 
LINE:98###Move Try from Example:1 to Example:1
	try {
	    VAR_2.METHOD_3();
	} catch (TYPE_1 VAR_3) {
	    TYPE_2.METHOD_4(VAR_3);
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2()) {
	
	}
 ||| 
LINE:99###Move ArrayRead from Example:1 to Example:1
	data[VAR_1++]
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	INT_1 & 
 ||| 
LINE:100###Move Invocation from Example:1 to Example:1
	VAR_4.setText(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:101###Move Invocation from Example:1 to Example:1
	java.lang.String.METHOD_2(VAR_3)
 ||| 
LINE:102###Insert VirtualEle at Example:1
	
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_2(VAR_1)
 ||| Insert TypeReference at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_3();
	}
 ||| 
LINE:103###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1.METHOD_2().METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:104###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(++VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_4(this, VAR_5)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	
	
	}
 ||| 
LINE:105###Move Invocation from Example:1 to Example:1
	VAR_4.remove(VAR_2)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_1()
 ||| 
LINE:106###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete UnaryOperator at Example:1
	!this.VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!this.VAR_2) {
	
	}
 ||| 
LINE:107###Delete FieldWrite at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_2, VAR_3)
 ||| Delete Assignment at Example:1
	VAR_1 = new TYPE_1(VAR_2, VAR_3)
 ||| 
LINE:108###Delete FieldWrite at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| Delete Invocation at Example:1
	java.lang.Integer.toString(INT_1)
 ||| Delete Assignment at Example:1
	VAR_3 = java.lang.Integer.toString(INT_1)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_4.setText(VAR_3)
 ||| 
LINE:109###Insert If at Example:1
	if () {
	    return false;
	}
 ||| Update BinaryOperator at Example:1
	 to java.lang.Math.abs(METHOD_2()) > VAR_1
 ||| Move BinaryOperator from Example:1 to Example:1
	(java.lang.Math.abs(METHOD_2()) <= VAR_1)
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:110###Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 >= VAR_3.METHOD_2())
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete BinaryOperator at Example:1
	(VAR_2 >= METHOD_3())
 ||| Delete BinaryOperator at Example:1
	(VAR_1 >= VAR_3.METHOD_2()) || (VAR_2 >= METHOD_3())
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete Throw at Example:1
	throw new TYPE_1()
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1();
	}
 ||| Delete If at Example:1
	if ((VAR_1 >= VAR_3.METHOD_2()) || (VAR_2 >= METHOD_3())) {
	    throw new TYPE_1();
	}
 ||| 
LINE:111###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.METHOD_2()) {
	
	}
 ||| 
LINE:112###Delete Literal at Example:1
	true
 ||| 
LINE:113###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(METHOD_3())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:114###Move For from Example:1 to Example:1
	for (int i = 0; i < VAR_1.size(); i++) {
	    VAR_1.set(i, VAR_2);
	}
 ||| Delete TypeReference at Example:1
	java.lang.NullPointerException
 ||| Delete CatchVariable at Example:1
	java.lang.NullPointerException VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.NullPointerException VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.NullPointerException VAR_3) {
	}
 ||| 
LINE:115###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().startsWith(STRING_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2().equals(STRING_2)
 ||| Delete BinaryOperator at Example:1
	 || VAR_1.METHOD_2().equals(STRING_2)
 ||| 
LINE:116###Insert If at Example:1
	if () {
	    return true;
	} else {
	    return false;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	METHOD_2(VAR_1) || METHOD_3(VAR_1)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Return at Example:1
	return true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:117###Move Return from Example:1 to Example:1
	return VAR_1.get(position).VAR_2
 ||| Delete FieldRead at Example:1
	data
 ||| Delete Synchronized at Example:1
	synchronized(data) {
	
	}
 ||| 
LINE:118###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(n, 1.0)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:119###Insert If at Example:1
	if (VAR_2 != null)
 ||| Insert Return at Example:1
	return null
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Block at Example:1
 ||| Insert Literal at Example:1
	null
 ||| Insert VariableRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Move Return from Example:1 to Example:1
	return VAR_2
 ||| 
LINE:120###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:121###Move Invocation from Example:1 to Example:1
	VAR_2.substring(VAR_1, VAR_1 + INT_2)
 ||| Delete Invocation at Example:1
	.trim()
 ||| 
LINE:122###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	( + 1)
 ||| 
LINE:123###Move BinaryOperator from Example:1 to Example:1
	(this.VAR_1.METHOD_2() != null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null) && 
 ||| 
LINE:124###Insert Wra at Example:1
	
 ||| 
LINE:125###Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if (METHOD_3(VAR_1)) {
	    return true;
	}
 ||| 
LINE:126###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:127###Insert Assignment at Example:1
	delete = true
 ||| Insert FieldWrite at Example:1
	delete
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:128###Move Assignment from Example:1 to Example:1
	VAR_3[VAR_4] = java.lang.Double.METHOD_2(VAR_2.toString())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.length() > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.length() > 0)
 ||| 
LINE:129###Insert BinaryOperator at Example:1
	 - 1
 ||| Move FieldRead from Example:1 to Example:1
	size
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:130###Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	add(VAR_1)
 ||| 
LINE:131###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2.equals(VAR_1))
 ||| Delete Literal at Example:1
	null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(null != VAR_1)
 ||| Delete BinaryOperator at Example:1
	(null != VAR_1) && 
 ||| 
LINE:132###Move Invocation from Example:1 to Example:1
	VAR_2.setText(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3(VAR_5)
 ||| Delete VariableRead at Example:1
	response
 ||| Delete Invocation at Example:1
	response.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (response.METHOD_2()) {
	
	
	}
 ||| 
LINE:133###Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| 
LINE:134###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null) && VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_2 != null) && VAR_2.METHOD_2()) {
	
	}
 ||| 
LINE:135###Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:136###Move Invocation from Example:1 to Example:1
	VAR_1.add(result)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete VariableRead at Example:1
	result
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete BinaryOperator at Example:1
	result != (-1)
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (result != (-1)) {
	
	
	
	}
 ||| 
LINE:137###Move Invocation from Example:1 to Example:1
	VAR_3.add(METHOD_2())
 ||| 
LINE:138###Move Invocation from Example:1 to Example:1
	VAR_3.get(VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:139###Insert Assignment at Example:1
	VAR_2 = 
 ||| Insert FieldWrite at Example:1
	VAR_2
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:140###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 >= 0L) && (VAR_1 < VAR_2))
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:141###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_1(key, value)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:142###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	name
 ||| Delete Conditional at Example:1
	VAR_1 == null ? name : 
 ||| 
LINE:143###Insert If at Example:1
	if () {
	    return true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	METHOD_2() == VAR_1
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Literal at Example:1
	false
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:144###Move Return from Example:1 to Example:1
	return VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:145###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_3)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(STRING_1, )
 ||| 
LINE:146###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.isEmpty())
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_2.isEmpty())
 ||| 
LINE:147###Insert BinaryOperator at Example:1
	 - element.METHOD_3()
 ||| Move BinaryOperator from Example:1 to Example:1
	element.METHOD_3() + element.METHOD_4()
 ||| Insert Invocation at Example:1
	element.METHOD_3()
 ||| Insert FieldRead at Example:1
	element
 ||| 
LINE:148###Move If from Example:1 to Example:1
	if (view == VAR_2) {
	    METHOD_3();
	    METHOD_4(new android.content.Intent(this, VAR_3));
	}
 ||| Delete Block at Example:1
 ||| 
LINE:149###Insert Invocation at Example:1
	.toString()
 ||| Insert Invocation at Example:1
	.toString()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.getName()
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.getName()
 ||| 
LINE:150###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2().METHOD_3(new TYPE_1(x, y))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 != VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != VAR_2) {
	
	}
 ||| 
LINE:151###Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_1)
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(VAR_1);
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2(VAR_1)) {
	    TYPE_2.METHOD_3(VAR_1);
	}
 ||| 
LINE:152###Move Return from Example:1 to Example:1
	return java.lang.String.format(STRING_1, VAR_2, VAR_3.substring(0, INT_1), VAR_3.substring(INT_1))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	value
 ||| Delete Return at Example:1
	return value
 ||| Delete Block at Example:1
	{
	    return value;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	} else {
	    return value;
	}
 ||| 
LINE:153###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(VAR_2)
 ||| 
LINE:154###Move Return from Example:1 to Example:1
	return this.METHOD_2().METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.METHOD_2() != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (this.METHOD_2() != null)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:155###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(data)
 ||| Delete VariableRead at Example:1
	data
 ||| Delete Invocation at Example:1
	data.METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	data.METHOD_2() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_4(VAR_3)
 ||| Delete Block at Example:1
	{
	    METHOD_4(VAR_3);
	}
 ||| Delete If at Example:1
	if (data.METHOD_2() > 0) {
	
	} else {
	    METHOD_4(VAR_3);
	}
 ||| 
LINE:156###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	METHOD_2() && 
 ||| 
LINE:157###Insert UnaryOperator at Example:1
	(!)
 ||| Update BinaryOperator at Example:1
	 to (size() > VAR_2)
 ||| Move BinaryOperator from Example:1 to Example:1
	(size() < VAR_2)
 ||| 
LINE:158###Move UnaryOperator from Example:1 to Example:1
	(!METHOD_2())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_2)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1 instanceof TYPE_2)
 ||| 
LINE:159###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() != null) {
	
	
	}
 ||| 
LINE:160###Move BinaryOperator from Example:1 to Example:1
	(VAR_3 != null)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1, VAR_4)
 ||| Delete BinaryOperator at Example:1
	 && TYPE_1.METHOD_2(VAR_1, VAR_4)
 ||| 
LINE:161###Move Return from Example:1 to Example:1
	return VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2(STRING_1) != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Return at Example:1
	return VAR_3
 ||| Delete Block at Example:1
	{
	    return VAR_3;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2(STRING_1) != null) {
	
	} else {
	    return VAR_3;
	}
 ||| 
LINE:162###Update BinaryOperator at Example:1
	 to (VAR_1 != null) && (!VAR_2.isEmpty())
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2.size() > 1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Insert UnaryOperator at Example:1
	(!)
 ||| Update Invocation at Example:1
	 to VAR_2.isEmpty()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:163###Insert FieldRead at Example:1
	this.VAR_1
 ||| Insert ThisAccess at Example:1
	this
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:164###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	VAR_2.get(0)
 ||| 
LINE:165###Delete Wra at Example:1
	
 ||| 
LINE:166###Insert If at Example:1
	if ()
	    return ;
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_5 == null
 ||| Insert Block at Example:1
	
	    return ;
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_5)
 ||| Insert Return at Example:1
	return 
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:167###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_2 != null)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_2 != null)) {
	
	}
 ||| 
LINE:168###Move BinaryOperator from Example:1 to Example:1
	(buffer.METHOD_2() == null)
 ||| Delete VariableRead at Example:1
	buffer
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(buffer == null)
 ||| Delete BinaryOperator at Example:1
	(buffer == null) || 
 ||| 
LINE:169###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:170###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	(-)
 ||| 
LINE:171###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(this.VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null) && 
 ||| 
LINE:172###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2().METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4(VAR_2).getInt(VAR_3, VAR_4)
 ||| Delete Return at Example:1
	return TYPE_1.METHOD_4(VAR_2).getInt(VAR_3, VAR_4)
 ||| 
LINE:173###Update Invocation at Example:1
	METHOD_3(new TYPE_2() {
	    public void METHOD_4() {
	        METHOD_5();
	    }
	}) to METHOD_5()
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Method at Example:1
	public void METHOD_4() {
	    METHOD_5();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4() {
	        METHOD_5();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_4() {
	        METHOD_5();
	    }
	}
 ||| 
LINE:174###Update Invocation at Example:1
	 to java.lang.System.out.println(new TYPE_1(VAR_2[INT_1]).METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	new TYPE_1(VAR_2[INT_1]).METHOD_2().METHOD_3()
 ||| Insert FieldRead at Example:1
	java.lang.System.out
 ||| Insert TypeAccess at Example:1
	java.lang.System
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.assertTrue()
 ||| 
LINE:175###Move Parameter from Example:1 to Example:1
	long VAR_1
 ||| 
LINE:176###Insert Assignment at Example:1
	VAR_1 = 
 ||| Update Wra at Example:1
	 to protected
 ||| Insert VariableWrite at Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| 
LINE:177###Update TypeReference at Example:1
	java.lang.String to int
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2(VAR_1)
 ||| 
LINE:178###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Move Return from Example:1 to Example:1
	return super.METHOD_1(VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(VAR_2.METHOD_3())
 ||| Delete Throw at Example:1
	throw new TYPE_2(VAR_2.METHOD_3())
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    throw new TYPE_2(VAR_2.METHOD_3());
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_2) {
	    throw new TYPE_2(VAR_2.METHOD_3());
	}
 ||| 
LINE:179###Insert BinaryOperator at Example:1
	 != null
 ||| Update Invocation at Example:1
	 to VAR_1.getString(STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.get()
 ||| Insert Literal at Example:1
	null
 ||| Insert TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!.isEmpty()
 ||| 
LINE:180###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(this)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.show()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (this != null) {
	
	
	}
 ||| 
LINE:181###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() == 0
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1.size() == 0) {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:182###Update FieldWrite at Example:1
	VAR_3 to VAR_5
 ||| 
LINE:183###Move Invocation from Example:1 to Example:1
	VAR_3.info(STRING_1, VAR_4.getName())
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_2(VAR_4.getName())
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:184###Update TypeReference at Example:1
	java.lang.Boolean to boolean
 ||| Move BinaryOperator from Example:1 to Example:1
	(line != null) && line.METHOD_2(VAR_1)
 ||| Insert UnaryOperator at Example:1
	(!)
 ||| Move Invocation from Example:1 to Example:1
	line.METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	false
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	 ? false : null
 ||| 
LINE:185###Move VariableRead from Example:1 to Example:1
	label
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:186###Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_2
 ||| 
LINE:187###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : 0
 ||| 
LINE:188###Update TypeReference at Example:1
	void to TYPE_1
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Insert TypeParameterReference at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3().commit()
 ||| 
LINE:189###Move Return from Example:1 to Example:1
	return (VAR_1 != null) && (VAR_1.METHOD_3() == VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Synchronized at Example:1
	synchronized(METHOD_2()) {
	
	}
 ||| 
LINE:190###Insert If at Example:1
	if (VAR_2.isEmpty()) {
	
	}
 ||| Insert Invocation at Example:1
	VAR_2.isEmpty()
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:191###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete UnaryOperator at Example:1
	(!METHOD_3())
 ||| Delete BinaryOperator at Example:1
	(!METHOD_3()) && 
 ||| 
LINE:192###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4()
 ||| 
LINE:193###Move Invocation from Example:1 to Example:1
	VAR_1.add(c)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	c
 ||| Delete Invocation at Example:1
	VAR_1.contains(c)
 ||| Delete UnaryOperator at Example:1
	!VAR_1.contains(c)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.contains(c)) {
	
	}
 ||| 
LINE:194###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    METHOD_3();
	} else {
	    METHOD_2();
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Move Block from Example:1 to Example:1
	{
	    METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:195###Move BinaryOperator from Example:1 to Example:1
	(this.VAR_1.toString() + STRING_1)
 ||| Move VariableRead from Example:1 to Example:1
	fileName
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:196###Insert BinaryOperator at Example:1
	 == 
 ||| Move ArrayRead from Example:1 to Example:1
	VAR_2[i]
 ||| Move VariableRead from Example:1 to Example:1
	name
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:197###Move Invocation from Example:1 to Example:1
	getActivity().METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:198###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(result)
 ||| Delete VariableRead at Example:1
	result
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	result != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(VAR_2)
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3(VAR_2);
	}
 ||| Delete If at Example:1
	if (result != null) {
	
	} else {
	    VAR_1.METHOD_3(VAR_2);
	}
 ||| 
LINE:199###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:200###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	( && (VAR_2 != null))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_1()
 ||| Delete BinaryOperator at Example:1
	( && (VAR_2 != null)) && VAR_2.METHOD_1()
 ||| 
LINE:201###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_4.split(STRING_2), VAR_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3 != null)
 ||| 
LINE:202###Move If from Example:1 to Example:1
	if (VAR_1 != null) {
	    remove(VAR_1);
	}
 ||| 
LINE:203###Move BinaryOperator from Example:1 to Example:1
	((((0 <= VAR_1) && (VAR_1 < INT_1)) && (0 <= VAR_2)) && (VAR_2 < INT_1))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	VAR_3 || 
 ||| 
LINE:204###Move Invocation from Example:1 to Example:1
	java.lang.Integer.toString(VAR_1 / INT_1)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	( + STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_1) + VAR_2
 ||| 
LINE:205###Move Invocation from Example:1 to Example:1
	VAR_2.contains(path)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:206###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:207###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.trim()
 ||| 
LINE:208###Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	java.lang.Integer.toString(VAR_3)
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(java.lang.Integer.toString(VAR_3))
 ||| Delete Invocation at Example:1
	new TYPE_2(java.lang.Integer.toString(VAR_3)).execute()
 ||| 
LINE:209###Update Invocation at Example:1
	 to java.lang.System.err.println(STRING_2 + message.METHOD_4())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(message.METHOD_4())
 ||| Move FieldRead from Example:1 to Example:1
	java.lang.System.err
 ||| Move BinaryOperator from Example:1 to Example:1
	STRING_2 + TYPE_2.METHOD_3(message.METHOD_4())
 ||| Move Invocation from Example:1 to Example:1
	message.METHOD_4()
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	.println()
 ||| 
LINE:210###Delete FieldRead at Example:1
	listener
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	listener != null
 ||| Delete FieldRead at Example:1
	listener
 ||| Delete Invocation at Example:1
	listener.METHOD_3()
 ||| Delete Block at Example:1
	{
	    listener.METHOD_3();
	}
 ||| Delete If at Example:1
	if (listener != null) {
	    listener.METHOD_3();
	}
 ||| 
LINE:211###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getText()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_3.getText().equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!VAR_3.getText().equals(STRING_1))
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_3.getText().equals(STRING_1))
 ||| 
LINE:212###Move Invocation from Example:1 to Example:1
	new java.lang.Double(VAR_1).equals(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	METHOD_2() || 
 ||| 
LINE:213###Move BinaryOperator from Example:1 to Example:1
	((METHOD_2(VAR_1) + METHOD_2(VAR_2)) + METHOD_2(VAR_3))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete BinaryOperator at Example:1
	 + METHOD_3()
 ||| 
LINE:214###Move BinaryOperator from Example:1 to Example:1
	(VAR_4 == 1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 > INT_1)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1 > INT_1)
 ||| 
LINE:215###Insert VirtualEle at Example:1
	
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.add(++index, text)
 ||| Insert Wra at Example:1
	
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() == 0
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	text
 ||| Delete Invocation at Example:1
	METHOD_2(text)
 ||| Delete Block at Example:1
	
	    METHOD_2(text);
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.size() == 0)
	    METHOD_2(text);
	else
 ||| 
LINE:216###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(item)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:217###Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_1(TYPE_2.METHOD_2())
 ||| Delete Block at Example:1
	
	    VAR_3.METHOD_1(TYPE_2.METHOD_2());
 ||| Delete If at Example:1
	if (!VAR_2)
	    VAR_3.METHOD_1(TYPE_2.METHOD_2());
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	true
 ||| Delete Assignment at Example:1
	VAR_2 = true
 ||| 
LINE:218###Move BinaryOperator from Example:1 to Example:1
	(content == null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.trim()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.trim().equals(STRING_1)
 ||| Delete BinaryOperator at Example:1
	 || VAR_1.trim().equals(STRING_1)
 ||| 
LINE:219###Move If from Example:1 to Example:1
	if (VAR_1) {
	    METHOD_1();
	} else {
	    VAR_2 = null;
	    VAR_3 = null;
	    VAR_4 = null;
	}
 ||| Insert Wra at Example:1
	
 ||| Delete FieldRead at Example:1
	buffer
 ||| Delete Synchronized at Example:1
	synchronized(buffer) {
	
	}
 ||| 
LINE:220###Move ForEach from Example:1 to Example:1
	for (java.lang.String VAR_2 : VAR_3.METHOD_3()) {
	    VAR_4.add(VAR_2);
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:221###Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Insert FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_1)
 ||| 
LINE:222###Move Invocation from Example:1 to Example:1
	this.METHOD_2(0.0F).METHOD_3(TYPE_1.METHOD_4())
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4()
 ||| Delete Invocation at Example:1
	.METHOD_5(TYPE_1.METHOD_4())
 ||| 
LINE:223###Move Invocation from Example:1 to Example:1
	node.METHOD_3(TYPE_4.METHOD_4(node))
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete VariableRead at Example:1
	node
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_2(node)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_3.METHOD_2(node)) {
	
	}
 ||| 
LINE:224###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:225###Move Invocation from Example:1 to Example:1
	METHOD_3(filename)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(filename)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete VariableRead at Example:1
	filename
 ||| Delete Invocation at Example:1
	this.VAR_1.METHOD_2(filename)
 ||| Delete UnaryOperator at Example:1
	!this.VAR_1.METHOD_2(filename)
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (!this.VAR_1.METHOD_2(filename)) {
	
	
	
	}
 ||| 
LINE:226###Move Invocation from Example:1 to Example:1
	((TYPE_1) (VAR_1.METHOD_2(STRING_1)))
 ||| Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Delete Invocation at Example:1
	.getValue()
 ||| 
LINE:227###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:228###Insert Invocation at Example:1
	getName()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	name
 ||| 
LINE:229###Insert Invocation at Example:1
	.toString()
 ||| Move Invocation from Example:1 to Example:1
	((java.lang.String) (TYPE_1.METHOD_2(VAR_1)))
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| 
LINE:230###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2
 ||| 
LINE:231###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:232###Update WildcardReference at Example:1
	? extends TYPE_1 to TYPE_1
 ||| Update Invocation at Example:1
	 to VAR_1.METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:233###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(this, STRING_1, VAR_3).show()
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_1)
 ||| 
LINE:234###Insert Literal at Example:1
	false
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	startsWith(VAR_2, VAR_1, 0)
 ||| 
LINE:235###Move Invocation from Example:1 to Example:1
	VAR_2.replace(STRING_1, STRING_2).replace(STRING_3, STRING_4).replace(STRING_5, STRING_6)
 ||| Delete TypeAccess at Example:1
	STRING_7
 ||| Delete TypeAccess at Example:1
	STRING_8
 ||| Delete Invocation at Example:1
	.replace(STRING_7, STRING_8)
 ||| Delete TypeAccess at Example:1
	STRING_9
 ||| Delete TypeAccess at Example:1
	STRING_8
 ||| Delete Invocation at Example:1
	.replace(STRING_7, STRING_8).replace(STRING_9, STRING_8)
 ||| 
LINE:236###Insert BinaryOperator at Example:1
	 >= 0
 ||| Update Invocation at Example:1
	 to VAR_1.METHOD_2(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.contains(VAR_3)
 ||| Insert Literal at Example:1
	0
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:237###Update TypeReference at Example:1
	java.util.Collection<TYPE_1> to java.util.List<TYPE_1>
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_1)
 ||| Delete Invocation at Example:1
	.values()
 ||| 
LINE:238###Move Return from Example:1 to Example:1
	return VAR_3.get()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.get()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.get() == 0
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Return at Example:1
	return VAR_2
 ||| Delete Block at Example:1
	{
	    return VAR_2;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.get() == 0) {
	    return VAR_2;
	} else {
	
	}
 ||| 
LINE:239###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:240###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_2 * INT_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.size()
 ||| Delete BinaryOperator at Example:1
	(VAR_2 * INT_1) <= VAR_3.size()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_2 * INT_1) <= VAR_3.size()) {
	
	}
 ||| 
LINE:241###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_4(VAR_3, VAR_1).METHOD_5(VAR_2)
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:242###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:243###Insert Assignment at Example:1
	 = +
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_1
 ||| Insert UnaryOperator at Example:1
	+
 ||| Update BinaryOperator at Example:1
	java.lang.Math.abs(VAR_1) <  to VAR_1 >= VAR_4
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete OperatorAssignment at Example:1
	 -= 
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.lang.Math.abs(VAR_1)
 ||| 
LINE:244###Update Invocation at Example:1
	 to TYPE_2.METHOD_2(VAR_1, text)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_1, text)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1, )
 ||| 
LINE:245###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:246###Insert UnaryOperator at Example:1
	VAR_1--
 ||| Insert FieldWrite at Example:1
	VAR_1
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.get()
 ||| 
LINE:247###Move BinaryOperator from Example:1 to Example:1
	(((1 - VAR_2) * VAR_5) + VAR_6)
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 - INT_1
 ||| 
LINE:248###Update Invocation at Example:1
	 to VAR_1.assertEquals(1, ((long[]) (VAR_2.get(STRING_1))).length)
 ||| Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_2.get(STRING_1))).size()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Move Literal from Example:1 to Example:1
	1
 ||| Insert FieldRead at Example:1
	.length
 ||| Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_2.get(STRING_1)))
 ||| Update TypeReference at Example:1
	TYPE_2 to long[]
 ||| Delete Invocation at Example:1
	.assertEquals(, )
 ||| 
LINE:249###Move Assignment from Example:1 to Example:1
	VAR_3 = true
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = false
 ||| 
LINE:250###Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_4()
 ||| 
LINE:251###Insert Invocation at Example:1
	METHOD_1()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:252###Insert Parameter at Example:1
	java.lang.String VAR_3
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Insert VariableRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| 
LINE:253###Move UnaryOperator from Example:1 to Example:1
	position++
 ||| 
LINE:254###Insert Assignment at Example:1
	VAR_1 = 
 ||| Insert VariableWrite at Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_1)
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| 
LINE:255###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:256###Insert Assignment at Example:1
	.p = 
 ||| Insert FieldWrite at Example:1
	.p
 ||| Move VariableRead from Example:1 to Example:1
	p
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Delete FieldRead at Example:1
	.VAR_1
 ||| Delete Invocation at Example:1
	.VAR_1.set()
 ||| 
LINE:257###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2.isEmpty(VAR_1))
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_3.equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!VAR_3.equals(STRING_1))
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_3.equals(STRING_1))
 ||| 
LINE:258###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 != true) && (VAR_2 != true))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != true)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 != true)
 ||| 
LINE:259###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:260###Insert FieldRead at Example:1
	type
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getType()
 ||| 
LINE:261###Update Invocation at Example:1
	 to METHOD_1(key)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(key)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| 
LINE:262###Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.Thread
 ||| Delete Invocation at Example:1
	java.lang.Thread.METHOD_2()
 ||| Delete Invocation at Example:1
	java.lang.Thread.METHOD_2().METHOD_3()
 ||| Delete BinaryOperator at Example:1
	 || java.lang.Thread.METHOD_2().METHOD_3()
 ||| 
LINE:263###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:264###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(FLOAT_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:265###Insert FieldRead at Example:1
	VAR_1
 ||| Delete Wra at Example:1
	
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:266###Move Invocation from Example:1 to Example:1
	METHOD_2(--VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 > 0)
 ||| 
LINE:267###Insert Wra at Example:1
	
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(INT_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:268###Update Invocation at Example:1
	 to METHOD_2(VAR_1.METHOD_4())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3().METHOD_4()
 ||| Move TypeAccess from Example to Example
	Example
 ||| Update Invocation at Example:1
	VAR_1.METHOD_3() to VAR_1.METHOD_4()
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:269###Insert UnaryOperator at Example:1
	!(VAR_2 == null)
 ||| Insert BinaryOperator at Example:1
	(VAR_2 == null)
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:270###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move Return from Example:1 to Example:1
	return false
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != 0)
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	( == true)
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != 0) && ( == true)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1.METHOD_2() != 0) && ( == true)) {
	    return true;
	} else {
	
	}
 ||| 
LINE:271###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:272###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2() == 0
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	{
	    return STRING_1;
	}
 ||| Delete If at Example:1
	if (METHOD_2() == 0) {
	    return STRING_1;
	}
 ||| 
LINE:273###Insert Block at Example:1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_6()
 ||| 
LINE:274###Move BinaryOperator from Example:1 to Example:1
	(((double) (VAR_2)) / INT_1)
 ||| Move FieldRead from Example:1 to Example:1
	((double) (length))
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 / 
 ||| 
LINE:275###Update Invocation at Example:1
	((TYPE_4<?>) (METHOD_3())).iterator() to METHOD_3()
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete WildcardReference at Example:1
	?
 ||| Delete TypeReference at Example:1
	TYPE_4<?>
 ||| Delete Invocation at Example:1
	((TYPE_4<?>) (METHOD_3()))
 ||| 
LINE:276###Insert BinaryOperator at Example:1
	 + 
 ||| Move BinaryOperator from Example:1 to Example:1
	(((time + STRING_1) + VAR_1.id) + STRING_1) + VAR_2.id
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2.id
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Insert BinaryOperator at Example:1
	( + STRING_1)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1.id
 ||| Move BinaryOperator from Example:1 to Example:1
	((time + STRING_1) + VAR_1.id)
 ||| Insert FieldRead at Example:1
	STRING_1
 ||| Insert FieldRead at Example:1
	type
 ||| 
LINE:277###Update TypeReference at Example:1
	java.lang.Integer to int
 ||| 
LINE:278###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete NewArray at Example:1
	new TYPE_1[]{  }
 ||| Delete Return at Example:1
	return new TYPE_1[]{  }
 ||| Delete Block at Example:1
	{
	    return new TYPE_1[]{  };
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return new TYPE_1[]{  };
	}
 ||| 
LINE:279###Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 == VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 == VAR_1)
 ||| 
LINE:280###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| 
LINE:281###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(false)
 ||| 
LINE:282###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_1).METHOD_4(value)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2(VAR_1)) {
	
	}
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_5()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	    VAR_3.METHOD_5();
	}
 ||| Delete Try at Example:1
	try {
	    if (METHOD_2(VAR_1)) {
	
	    }
	} catch (java.lang.Exception VAR_3) {
	    VAR_3.METHOD_5();
	}
 ||| 
LINE:283###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Block at Example:1
	
	    VAR_2.METHOD_3();
 ||| Delete If at Example:1
	if (VAR_2 != null)
	    VAR_2.METHOD_3();
 ||| 
LINE:284###Update Invocation at Example:1
	 to METHOD_2().METHOD_4(STRING_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(STRING_1)
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:285###Update BinaryOperator at Example:1
	 to args != null
 ||| Move BinaryOperator from Example:1 to Example:1
	(args == null)
 ||| Move Return from Example:1 to Example:1
	return java.lang.String.format(str, args)
 ||| Move Return from Example:1 to Example:1
	return str
 ||| Delete VariableRead at Example:1
	args
 ||| Delete FieldRead at Example:1
	args.length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(args.length == 0)
 ||| Delete BinaryOperator at Example:1
	 || (args.length == 0)
 ||| 
LINE:286###Move Parameter from Example:1 to Example:1
	TYPE_3 VAR_1
 ||| 
LINE:287###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2 == 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == 1) {
	
	}
 ||| 
LINE:288###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<TYPE_1>()
 ||| Delete Assignment at Example:1
	VAR_2 = new java.util.ArrayList<TYPE_1>()
 ||| Delete Block at Example:1
	{
	    VAR_2 = new java.util.ArrayList<TYPE_1>();
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    VAR_2 = new java.util.ArrayList<TYPE_1>();
	}
 ||| 
LINE:289###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:290###Insert If at Example:1
	if (VAR_2 >= INT_1) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 >= INT_1
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	INT_1
 ||| Move Assignment from Example:1 to Example:1
	VAR_3[INT_2] = VAR_1
 ||| 
LINE:291###Move Block from Example:1 to Example:1
	{
	    VAR_3.METHOD_3();
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_4.list)
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_5 == 1
 ||| Delete If at Example:1
	if (VAR_5 == 1) 
 ||| Delete Block at Example:1
	{
	
	    if (VAR_5 == 1) 
	}
 ||| 
LINE:292###Insert BinaryOperator at Example:1
	 == false
 ||| Insert Block at Example:1
	{
	
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Insert Literal at Example:1
	false
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| 
LINE:293###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    METHOD_2();
	}
 ||| 
LINE:294###Insert ConstructorCall at Example:1
	new java.lang.Integer()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| 
LINE:295###Move If from Example:1 to Example:1
	if (x > VAR_2) {
	    return 1.0;
	} else {
	    return (x - VAR_1) / (VAR_1 - VAR_2);
	}
 ||| Update BinaryOperator at Example:1
	x > VAR_2 to x < VAR_2
 ||| Move If from Example:1 to Example:1
	if (x < VAR_1) {
	    return 0.0;
	} else if (x > VAR_2) {
	    return 1.0;
	} else {
	    return (x - VAR_1) / (VAR_1 - VAR_2);
	}
 ||| Move Return from Example:1 to Example:1
	return (x - VAR_1) / (VAR_1 - VAR_2)
 ||| Move Return from Example:1 to Example:1
	return 0.0
 ||| Move VariableRead from Example:1 to Example:1
	x
 ||| 
LINE:296###Update Invocation at Example:1
	 to METHOD_1(key)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(key)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| 
LINE:297###Insert Block at Example:1
 ||| Move Return from Example:1 to Example:1
	return false
 ||| 
LINE:298###Insert If at Example:1
	if () {
	
	}
 ||| Insert Return at Example:1
	return false
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 >= VAR_2)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Literal at Example:1
	false
 ||| Move Return from Example:1 to Example:1
	return ((VAR_1 >= VAR_2) && METHOD_2()) && TYPE_1.METHOD_3().METHOD_4()
 ||| Move BinaryOperator from Example:1 to Example:1
	((VAR_1 >= VAR_2) && METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3().METHOD_4()
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:299###Move Return from Example:1 to Example:1
	return this.VAR_2.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (this.VAR_2 != null) {
	
	} else {
	    return null;
	}
 ||| 
LINE:300###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3)
 ||| 
LINE:301###Move Invocation from Example:1 to Example:1
	METHOD_1().METHOD_2(VAR_1.getId())
 ||| Update Wra at Example:1
	 to public
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	.METHOD_3(false)
 ||| 
LINE:302###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2)
 ||| 
LINE:303###Update TypeReference at Example:1
	int to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:304###Update TypeAccess at Example:1
	VAR_2 to Example
 ||| 
LINE:305###Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getValue()
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_3(VAR_2.getValue())
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(java.lang.String.METHOD_3(VAR_2.getValue()))
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2(java.lang.String.METHOD_3(VAR_2.getValue()))) {
	    return false;
	}
 ||| 
LINE:306###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	}
 ||| 
LINE:307###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_1(key, VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:308###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1)
 ||| Delete BinaryOperator at Example:1
	 || super.METHOD_1(VAR_1)
 ||| 
LINE:309###Update Invocation at Example:1
	 to METHOD_3().METHOD_4(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2)
 ||| Insert Invocation at Example:1
	METHOD_3()
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.METHOD_4(VAR_2)
 ||| 
LINE:310###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2().METHOD_3()
 ||| Delete Literal at Example:1
	false
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_2().METHOD_3() == false
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2().METHOD_3() == false) {
	
	}
 ||| 
LINE:311###Move Invocation from Example:1 to Example:1
	METHOD_5(-INT_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_3().METHOD_4()
 ||| Delete BinaryOperator at Example:1
	METHOD_2() > METHOD_3().METHOD_4()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2() > METHOD_3().METHOD_4())
 ||| 
LINE:312###Move Return from Example:1 to Example:1
	return true
 ||| Move Return from Example:1 to Example:1
	return false
 ||| 
LINE:313###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_2)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1 instanceof TYPE_2)
 ||| 
LINE:314###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.length == 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || (VAR_2.length == 0)
 ||| Delete FieldRead at Example:1
	context
 ||| Delete Invocation at Example:1
	context.METHOD_1()
 ||| Delete Conditional at Example:1
	(VAR_1 == null) || (VAR_2.length == 0) ? context.METHOD_1() : 
 ||| 
LINE:315###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:316###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| 
LINE:317###Insert Return at Example:1
	return c.METHOD_1()
 ||| Insert Invocation at Example:1
	c.METHOD_1()
 ||| Insert FieldRead at Example:1
	c
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.c
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.c == null
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_1()
 ||| Delete Return at Example:1
	return VAR_2.METHOD_1()
 ||| Delete Block at Example:1
	{
	    return VAR_2.METHOD_1();
	}
 ||| Delete If at Example:1
	if (VAR_1.c == null) {
	    return false;
	} else {
	    return VAR_2.METHOD_1();
	}
 ||| 
LINE:318###Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	0
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	METHOD_3(0, 0)
 ||| 
LINE:319###Insert BinaryOperator at Example:1
	( - 1)
 ||| Move FieldRead from Example:1 to Example:1
	size
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:320###Update Invocation at Example:1
	 to error.METHOD_2().equals(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	error.METHOD_2().toString()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:321###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_1, writer)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(path)
 ||| Delete VariableRead at Example:1
	writer
 ||| Delete TypeReference at Example:1
	java.io.BufferedWriter
 ||| Delete LocalVariable at Example:1
	java.io.BufferedWriter writer = 
 ||| Delete TryWithResource at Example:1
	try (java.io.BufferedWriter writer = ) {
	
	}
 ||| 
LINE:322###Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| 
LINE:323###Move BinaryOperator from Example:1 to Example:1
	(VAR_3 != null)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	 && VAR_4
 ||| 
LINE:324###Update TypeReference at Example:1
	boolean to void
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_4
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	VAR_6
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_3(VAR_6)
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_5.METHOD_3(VAR_6))
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	
	    METHOD_2(VAR_5.METHOD_3(VAR_6));
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	
	    METHOD_2(VAR_5.METHOD_3(VAR_6));
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:325###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1.METHOD_5())
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2().METHOD_3()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	TYPE_2.METHOD_2().METHOD_3() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2().METHOD_3() != null) {
	
	}
 ||| 
LINE:326###Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example
	Example
 ||| 
LINE:327###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    throw new TYPE_2(STRING_1);
	}
 ||| 
LINE:328###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| 
LINE:329###Move Invocation from Example:1 to Example:1
	METHOD_2(STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_2)
 ||| Delete Block at Example:1
	
	    METHOD_2(STRING_2);
 ||| Delete If at Example:1
	if (VAR_2 != null)
	
	else
	    METHOD_2(STRING_2);
 ||| 
LINE:330###ERROR: Gumtree failed to process. Message: 
LINE:331###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	java.util.LinkedList<TYPE_1>
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	((java.util.LinkedList<TYPE_1>) (VAR_1.METHOD_2()))
 ||| 
LINE:332###Insert Invocation at Example:1
	METHOD_1()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:333###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(new TYPE_3(new java.lang.Object[]{ VAR_1 }), true)
 ||| 
LINE:334###Move Invocation from Example:1 to Example:1
	VAR_3.i(VAR_1, TYPE_2.METHOD_2(t))
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_1(VAR_2)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_1(VAR_2))
 ||| 
LINE:335###Insert Invocation at Example:1
	isEmpty(VAR_2)
 ||| Insert TypeAccess at Example
	Example
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!VAR_3.isEmpty())
 ||| 
LINE:336###Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 == VAR_2) {
	    METHOD_2();
	}
 ||| 
LINE:337###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2(STRING_1)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Conditional at Example:1
	(!VAR_1.METHOD_2(STRING_1) ? STRING_1 : STRING_2)
 ||| Delete BinaryOperator at Example:1
	 + (!VAR_1.METHOD_2(STRING_1) ? STRING_1 : STRING_2)
 ||| 
LINE:338###Delete VariableRead at Example:1
	msg
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete BinaryOperator at Example:1
	msg instanceof TYPE_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete VariableRead at Example:1
	((TYPE_3) (msg))
 ||| Delete Invocation at Example:1
	METHOD_2(((TYPE_3) (msg)))
 ||| Delete Block at Example:1
	{
	    METHOD_2(((TYPE_3) (msg)));
	}
 ||| Delete If at Example:1
	if (msg instanceof TYPE_3) {
	    METHOD_2(((TYPE_3) (msg)));
	}
 ||| 
LINE:339###ERROR: Gumtree failed to process. Message: 
LINE:340###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2, VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Conditional at Example:1
	VAR_1 ?  : VAR_4
 ||| 
LINE:341###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	
	}
 ||| 
LINE:342###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_1(VAR_1, name)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:343###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:344###Insert Literal at Example:1
	true
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| 
LINE:345###Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2.length() - 1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(VAR_2.length() - 1)
 ||| Delete FieldRead at Example:1
	CHAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2(VAR_2.length() - 1) != CHAR_1
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 + STRING_1
 ||| Delete Assignment at Example:1
	VAR_1 = VAR_1 + STRING_1
 ||| Delete Block at Example:1
	{
	    VAR_1 = VAR_1 + STRING_1;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2(VAR_2.length() - 1) != CHAR_1) {
	    VAR_1 = VAR_1 + STRING_1;
	}
 ||| 
LINE:346###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	} else {
	    return false;
	}
 ||| 
LINE:347###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    throw new TYPE_2(STRING_1);
	}
 ||| 
LINE:348###Update TypeReference at Example:1
	java.lang.String to void
 ||| Move Assignment from Example:1 to Example:1
	this.type = type
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:349###Update TypeReference at Example:1
	void to boolean
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(null)
 ||| 
LINE:350###Move Invocation from Example:1 to Example:1
	VAR_1.get(STRING_1).equals(STRING_2)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.get(STRING_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.get(STRING_1) != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1.get(STRING_1) != null) && 
 ||| 
LINE:351###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1()
 ||| 
LINE:352###Update TypeReference at Example:1
	float to int
 ||| 
LINE:353###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_3, STRING_1)
 ||| 
LINE:354###Insert If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_3 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_5(this)
 ||| 
LINE:355###Update Invocation at Example:1
	 to java.lang.Long.METHOD_1(METHOD_3(VAR_1), METHOD_3(VAR_2))
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_2(METHOD_3(VAR_1))
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2)
 ||| Delete Invocation at Example:1
	.compareTo()
 ||| 
LINE:356###Move BinaryOperator from Example:1 to Example:1
	(this.METHOD_2() - this.METHOD_3())
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:357###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toString()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_2.toString()
 ||| Delete Invocation at Example:1
	METHOD_3(STRING_1 + VAR_2.toString())
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    METHOD_3(STRING_1 + VAR_2.toString());
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_1) {
	    METHOD_3(STRING_1 + VAR_2.toString());
	}
 ||| 
LINE:358###Move FieldRead from Example:1 to Example:1
	name
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + METHOD_1())
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	((STRING_1 + METHOD_1()) + STRING_2)
 ||| Delete BinaryOperator at Example:1
	(((STRING_1 + METHOD_1()) + STRING_2) + )
 ||| 
LINE:359###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Move Return from Example:1 to Example:1
	return !VAR_2.isEmpty()
 ||| Insert Wra at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	
	}
 ||| 
LINE:360###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2(this);
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:361###Insert If at Example:1
	if (true) {
	
	
	}
 ||| Insert Literal at Example:1
	true
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.append(STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.setText(VAR_2.toString())
 ||| 
LINE:362###Insert BinaryOperator at Example:1
	(VAR_1 == null) || 
 ||| Insert BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1.METHOD_2() == null
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:363###Update BinaryOperator at Example:1
	( + ( * (VAR_1 - ))) /  to min + (((VAR_1 * (VAR_2 - min)) - FLOAT_2) / FLOAT_3)
 ||| Insert FieldRead at Example:1
	min
 ||| Update BinaryOperator at Example:1
	( + ( * (VAR_1 - ))) to (((VAR_1 * (VAR_2 - min)) - FLOAT_2) / FLOAT_3)
 ||| Update BinaryOperator at Example:1
	( * (VAR_1 - )) to ((VAR_1 * (VAR_2 - min)) - FLOAT_2)
 ||| Move FieldRead from Example:1 to Example:1
	FLOAT_3
 ||| Move BinaryOperator from Example:1 to Example:1
	(min * (FLOAT_1 - VAR_1))
 ||| Move FieldRead from Example:1 to Example:1
	FLOAT_2
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	min
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 - )
 ||| 
LINE:364###Update TypeReference at Example:1
	long to int
 ||| Update TypeReference at Example:1
	long to int
 ||| Update TypeReference at Example:1
	long to int
 ||| 
LINE:365###Move LocalVariable from Example:1 to Example:1
	TYPE_2 VAR_3 = new TYPE_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.assertEquals(VAR_1, VAR_2, VAR_5, VAR_6)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete Try at Example:1
	try {
	
	
	} finally {
	
	}
 ||| 
LINE:366###Insert VirtualEle at Example:1
	
 ||| Move LocalVariable from Example:1 to Example:1
	java.util.Properties p = new java.util.Properties()
 ||| Move Invocation from Example:1 to Example:1
	p.METHOD_2(VAR_1.METHOD_3(VAR_2))
 ||| Move Return from Example:1 to Example:1
	return p.METHOD_4(STRING_1)
 ||| Insert TypeReference at Example:1
	java.io.IOException
 ||| Delete TypeReference at Example:1
	java.io.IOException
 ||| Delete CatchVariable at Example:1
	java.io.IOException VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (java.io.IOException VAR_3) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	
	
	} catch (java.io.IOException VAR_3) {
	    return null;
	}
 ||| 
LINE:367###Move Invocation from Example:1 to Example:1
	item.METHOD_3()
 ||| Delete VariableRead at Example:1
	item
 ||| Delete Invocation at Example:1
	item.METHOD_2()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	item.METHOD_2() > 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	item
 ||| Delete Invocation at Example:1
	VAR_1.remove(item)
 ||| Delete Block at Example:1
	{
	    VAR_1.remove(item);
	}
 ||| Delete If at Example:1
	if (item.METHOD_2() > 1) {
	
	} else {
	    VAR_1.remove(item);
	}
 ||| 
LINE:368###Move ForEach from Example:1 to Example:1
	for (final TYPE_1 VAR_2 : VAR_3) {
	    TYPE_2.METHOD_2(VAR_2);
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| 
LINE:369###Insert If at Example:1
	if () {
	    return true;
	} else {
	    return false;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	element == VAR_1.get(0)
 ||| Move VariableRead from Example:1 to Example:1
	element
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Return at Example:1
	return true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:370###Move Invocation from Example:1 to Example:1
	VAR_2.get()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1 == null ? 0 : 
 ||| 
LINE:371###Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| 
LINE:372###Move Return from Example:1 to Example:1
	return VAR_2.format(VAR_1.METHOD_1())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_1() != null
 ||| Delete Block at Example:1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	
	    return STRING_1;
 ||| Delete If at Example:1
	if (VAR_1.METHOD_1() != null)
	
	else
	    return STRING_1;
 ||| 
LINE:373###Move Try from Example:1 to Example:1
	try {
	    VAR_2.set(VAR_3, value);
	} catch (final TYPE_2 VAR_4) {
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:374###Move Invocation from Example:1 to Example:1
	VAR_3.add(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:375###Move Invocation from Example:1 to Example:1
	VAR_1.getTime()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 / INT_1
 ||| 
LINE:376###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:377###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| 
LINE:378###Insert If at Example:1
	if () {
	
	}
 ||| Move UnaryOperator from Example:1 to Example:1
	!VAR_1
 ||| Insert Block at Example:1
	{
	
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete While at Example:1
	while () {
	
	} 
 ||| 
LINE:379###Move Assignment from Example:1 to Example:1
	VAR_3 = METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 == null) {
	
	}
 ||| 
LINE:380###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(INT_1, VAR_2)
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| 
LINE:381###Update Invocation at Example:1
	java.lang.System.out.println( + ) to VAR_2.setText((VAR_2.getText() + STRING_2) + VAR_1)
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Move BinaryOperator from Example:1 to Example:1
	((STRING_1 + VAR_2.getText()) + STRING_2)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	STRING_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:382###Move Assignment from Example:1 to Example:1
	this.VAR_4 = this.VAR_5
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_3
 ||| Delete Synchronized at Example:1
	synchronized(this.VAR_3) {
	
	}
 ||| 
LINE:383###Move Invocation from Example:1 to Example:1
	this.VAR_2.get(VAR_1)
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| Delete Return at Example:1
	return .METHOD_2()
 ||| 
LINE:384###Move Invocation from Example:1 to Example:1
	VAR_1.remove(VAR_2)
 ||| 
LINE:385###Insert Invocation at Example:1
	.set(,  ? VAR_4 : VAR_5)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Insert Conditional at Example:1
	 ? VAR_4 : VAR_5
 ||| Update BinaryOperator at Example:1
	 to position >= INT_1
 ||| Move BinaryOperator from Example:1 to Example:1
	position == INT_1
 ||| Insert FieldRead at Example:1
	VAR_4
 ||| Insert FieldRead at Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	.set(, VAR_4)
 ||| Delete Block at Example:1
	{
	    .set(, VAR_4);
	}
 ||| Delete VariableRead at Example:1
	position
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	position < INT_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_2.set(VAR_3, VAR_5)
 ||| Delete Block at Example:1
	{
	    VAR_2.set(VAR_3, VAR_5);
	}
 ||| Delete If at Example:1
	if (position < INT_1) {
	    VAR_2.set(VAR_3, VAR_5);
	}
 ||| Delete Block at Example:1
	
	    if (position < INT_1) {
	        VAR_2.set(VAR_3, VAR_5);
	    }
 ||| Delete If at Example:1
	if () {
	    .set(, VAR_4);
	} else if (position < INT_1) {
	    VAR_2.set(VAR_3, VAR_5);
	}
 ||| 
LINE:386###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:387###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_4, STRING_1)
 ||| 
LINE:388###Insert BinaryOperator at Example:1
	 + 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:389###Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.length
 ||| Delete BinaryOperator at Example:1
	i < VAR_2.length
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	i
 ||| Delete ArrayWrite at Example:1
	VAR_1[i]
 ||| Delete Literal at Example:1
	0
 ||| Delete Literal at Example:1
	false
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(0, false)
 ||| Delete Assignment at Example:1
	VAR_1[i] = new TYPE_1(0, false)
 ||| Delete For at Example:1
	for (int i = 0; i < VAR_2.length; i++) {
	    VAR_1[i] = new TYPE_1(0, false);
	}
 ||| 
LINE:390###Move Invocation from Example:1 to Example:1
	VAR_2.put(buffer)
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| 
LINE:391###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(this.VAR_2.getText())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:392###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:393###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2.equals(VAR_3, VAR_1))
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete UnaryOperator at Example:1
	(!TYPE_1.METHOD_2(VAR_1))
 ||| Delete BinaryOperator at Example:1
	 && (!TYPE_1.METHOD_2(VAR_1))
 ||| 
LINE:394###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	
	} else {
	    return VAR_1;
	}
 ||| 
LINE:395###Move BinaryOperator from Example:1 to Example:1
	(counter <= 0)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_1() == 0)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1.METHOD_1() == 0)
 ||| 
LINE:396###Update Wra at Example:1
	 to private
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 * INT_1
 ||| 
LINE:397###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(METHOD_4(), this.METHOD_5())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	METHOD_2() && 
 ||| 
LINE:398###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_3.get(position % size))
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.size()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	VAR_3.size() < VAR_4
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.size() < VAR_4) {
	
	}
 ||| 
LINE:399###Insert BinaryOperator at Example:1
	( + 1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(METHOD_2() + METHOD_3())
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:400###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(new TYPE_2())
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() == 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete LocalVariable at Example:1
	TYPE_3 token
 ||| Delete FieldRead at Example:1
	TYPE_4
 ||| Delete VariableRead at Example:1
	token
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	token.METHOD_3(0)
 ||| Delete ForEach at Example:1
	for (TYPE_3 token : TYPE_4) {
	    token.METHOD_3(0);
	}
 ||| Delete Block at Example:1
	{
	    for (TYPE_3 token : TYPE_4) {
	        token.METHOD_3(0);
	    }
	}
 ||| Delete If at Example:1
	if (VAR_1.size() == 0) {
	
	} else {
	    for (TYPE_3 token : TYPE_4) {
	        token.METHOD_3(0);
	    }
	}
 ||| 
LINE:401###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return null;
	}
 ||| 
LINE:402###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_2)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1 instanceof TYPE_2)
 ||| 
LINE:403###Move Return from Example:1 to Example:1
	return VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getText()
 ||| Delete Invocation at Example:1
	getText().toString()
 ||| Delete Return at Example:1
	return getText().toString()
 ||| Delete Block at Example:1
	{
	    return getText().toString();
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	} else {
	    return getText().toString();
	}
 ||| 
LINE:404###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_4()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_2.METHOD_4()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(STRING_1 + VAR_2.METHOD_4())
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    TYPE_1.METHOD_3(STRING_1 + VAR_2.METHOD_4());
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    TYPE_1.METHOD_3(STRING_1 + VAR_2.METHOD_4());
	}
 ||| 
LINE:405###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_1(type, VAR_1, VAR_2, null)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:406###Insert Invocation at Example:1
	.getText()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4()
 ||| 
LINE:407###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1 < 0)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 >= VAR_2.size())
 ||| Delete BinaryOperator at Example:1
	(VAR_1 < 0) || (VAR_1 >= VAR_2.size())
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if ((VAR_1 < 0) || (VAR_1 >= VAR_2.size()))
	    return null;
 ||| 
LINE:408###Move BinaryOperator from Example:1 to Example:1
	((int) (FLOAT_1 * VAR_2))
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| 
LINE:409###Insert If at Example:1
	if ()
	    return;
 ||| Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Insert Block at Example:1
	
	    return;
 ||| Move FieldRead from Example:1 to Example:1
	VAR_5
 ||| Insert Return at Example:1
	return
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| Delete BinaryOperator at Example:1
	(!) && 
 ||| 
LINE:410###Delete VariableRead at Example:1
	view
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	view == VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (view == VAR_2) {
	    METHOD_3();
	} else {
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete Block at Example:1
	
	    if (view == VAR_2) {
	        METHOD_3();
	    } else {
	        throw new TYPE_1(STRING_1);
	    }
 ||| 
LINE:411###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2, VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_7.METHOD_2(VAR_8)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:412###Delete TypeReference at Example:1
	TYPE_3
 ||| Delete Parameter at Example:1
	TYPE_3 VAR_1
 ||| Delete VariableRead at Example:1
	error
 ||| Delete Invocation at Example:1
	error.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(STRING_1, STRING_2)
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3(STRING_1, STRING_2);
	}
 ||| Delete If at Example:1
	if (error.METHOD_2()) {
	    VAR_1.METHOD_3(STRING_1, STRING_2);
	}
 ||| 
LINE:413###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:414###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_4.get(VAR_1), VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_2 == null ? null : 
 ||| 
LINE:415###Delete ConstructorCall at Example:1
	new TYPE_2()
 ||| Delete Throw at Example:1
	throw new TYPE_2()
 ||| 
LINE:416###Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	out
 ||| 
LINE:417###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4()
 ||| Move Assignment from Example:1 to Example:1
	VAR_4 = true
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!METHOD_2()
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	
	    return;
 ||| Delete If at Example:1
	if (!METHOD_2())
	    return;
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_3.METHOD_3()) {
	
	
	}
 ||| 
LINE:418###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:419###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	delete(VAR_1, key, null)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:420###Insert If at Example:1
	if (VAR_2.get() == ) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2.get() == 
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Invocation at Example:1
	VAR_2.get()
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Update Invocation at Example:1
	 to VAR_2.set(METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(null, METHOD_3())
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Update TypeAccess at Example:1
	VAR_1 to VAR_2
 ||| 
LINE:421###Move Invocation from Example:1 to Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:422###Move Invocation from Example:1 to Example:1
	listener.METHOD_2(VAR_2)
 ||| Delete FieldRead at Example:1
	listener
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	listener != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (listener != null) {
	
	}
 ||| 
LINE:423###Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| 
LINE:424###Move ArrayRead from Example:1 to Example:1
	VAR_1[(index * INT_1) + INT_2]
 ||| Move VariableRead from Example:1 to Example:1
	index
 ||| Update BinaryOperator at Example:1
	index * INT_1 to index + 1
 ||| Update BinaryOperator at Example:1
	 to index + INT_2
 ||| Move BinaryOperator from Example:1 to Example:1
	(index * INT_1)
 ||| Move Literal from Example:1 to Example:1
	1
 ||| Move FieldRead from Example:1 to Example:1
	INT_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	( * INT_1)
 ||| Delete BinaryOperator at Example:1
	( * INT_1) + 
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:425###Move BinaryOperator from Example:1 to Example:1
	((VAR_2 >= VAR_1) && (VAR_2 <= VAR_3))
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == 0) || 
 ||| 
LINE:426###Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3(STRING_1, STRING_2)
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_3(STRING_1, STRING_2);
	}
 ||| Delete Block at Example:1
	{
	}
 ||| Delete If at Example:1
	if (VAR_3.METHOD_2(VAR_1)) {
	    VAR_2.METHOD_3(STRING_1, STRING_2);
	} else {
	}
 ||| 
LINE:427###Move Return from Example:1 to Example:1
	return new java.util.HashSet<java.lang.String>(VAR_2.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete ConstructorCall at Example:1
	new java.util.HashSet<java.lang.String>()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:428###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	 | VAR_3
 ||| 
LINE:429###Move Assignment from Example:1 to Example:1
	this.VAR_2 = listener
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2().METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	
	}
 ||| 
LINE:430###Move If from Example:1 to Example:1
	if (!VAR_1) {
	    if (!VAR_2.equals(this.position)) {
	        VAR_1 = true;
	    }
	}
 ||| Insert ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.position
 ||| 
LINE:431###Move Assignment from Example:1 to Example:1
	VAR_2 = METHOD_2(VAR_1, data, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:432###Move BinaryOperator from Example:1 to Example:1
	((((STRING_1 + VAR_1) + STRING_2) + VAR_2) + STRING_2)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	( + VAR_3)
 ||| Delete BinaryOperator at Example:1
	( + VAR_3) + 
 ||| 
LINE:433###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null) && (VAR_1 != null)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ((VAR_2 != null) && (VAR_1 != null))
 ||| 
LINE:434###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:435###Move BinaryOperator from Example:1 to Example:1
	((((((x + STRING_1) + y) + STRING_1) + VAR_1) + STRING_1) + name)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	( + STRING_1)
 ||| Delete FieldRead at Example:1
	index
 ||| Delete BinaryOperator at Example:1
	( + STRING_1) + index
 ||| 
LINE:436###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2
 ||| Move Invocation from Example:1 to Example:1
	select(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:437###Update Invocation at Example:1
	 to c.METHOD_2().equals(name)
 ||| Move Invocation from Example:1 to Example:1
	c.METHOD_2().toLowerCase()
 ||| Insert VariableRead at Example:1
	name
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toLowerCase()
 ||| Delete Invocation at Example:1
	.equals(VAR_2.toLowerCase())
 ||| 
LINE:438###Move Return from Example:1 to Example:1
	return VAR_2.replace(STRING_1, STRING_2).trim()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:439###Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2(key)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_1 = 
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    return null;
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:440###Move Invocation from Example:1 to Example:1
	commit(TYPE_1.METHOD_1())
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_1()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_1() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_1() != null) {
	
	}
 ||| 
LINE:441###Insert UnaryOperator at Example:1
	(!)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:442###Move Assignment from Example:1 to Example:1
	VAR_4.value = value.METHOD_2()
 ||| Delete FieldRead at Example:1
	value
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	value != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (value != null)
 ||| 
LINE:443###Update TypeReference at Example:1
	double to java.lang.Double
 ||| Insert BinaryOperator at Example:1
	 == 
 ||| Move BinaryOperator from Example:1 to Example:1
	TYPE_2.METHOD_3(TYPE_2.METHOD_4(VAR_1)) * TYPE_2.METHOD_3(TYPE_2.METHOD_4(VAR_1))
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, )
 ||| 
LINE:444###Move Assignment from Example:1 to Example:1
	state = VAR_1
 ||| 
LINE:445###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_4 : VAR_2) {
	    VAR_5.METHOD_2(VAR_6.fileName);
	}
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:446###Move Return from Example:1 to Example:1
	return this.list.METHOD_1(c)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:447###Move BinaryOperator from Example:1 to Example:1
	(x == 0)
 ||| Insert Literal at Example:1
	1.0
 ||| Delete VariableRead at Example:1
	x
 ||| Delete Literal at Example:1
	0.0
 ||| Delete BinaryOperator at Example:1
	(x == 0.0)
 ||| Delete BinaryOperator at Example:1
	 || (x == 0.0)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 / INT_1
 ||| 
LINE:448###Move Invocation from Example:1 to Example:1
	VAR_2.append(STRING_1).append(METHOD_2(VAR_1))
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Insert BinaryOperator at Example:1
	(STRING_1 + ) + CHAR_1
 ||| Insert BinaryOperator at Example:1
	(STRING_1 + )
 ||| Insert FieldRead at Example:1
	CHAR_1
 ||| Insert FieldRead at Example:1
	STRING_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.append(STRING_1)
 ||| Delete TypeAccess at Example:1
	CHAR_1
 ||| Delete Invocation at Example:1
	.append(CHAR_1)
 ||| 
LINE:449###Update TypeReference at Example:1
	java.util.List<TYPE_1> to java.lang.String
 ||| Insert Assignment at Example:1
	values = 
 ||| Insert FieldWrite at Example:1
	values
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| 
LINE:450###Update ThisAccess at Example:1
	 to ((TYPE_1) (this))
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Move TypeReference from Example:1 to Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	(() (.VAR_2))
 ||| 
LINE:451###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(VAR_3, VAR_4)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(VAR_3, VAR_4)
 ||| Delete FieldRead at Example:1
	.VAR_5
 ||| Delete FieldRead at Example:1
	.VAR_5
 ||| 
LINE:452###Insert Block at Example:1
	{
	
	}
 ||| Move OperatorAssignment from Example:1 to Example:1
	VAR_1 += step
 ||| 
LINE:453###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:454###Move Try from Example:1 to Example:1
	try {
	    java.lang.System.out.println(STRING_1);
	    VAR_1.METHOD_2();
	} catch (java.io.IOException VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:455###Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| 
LINE:456###Move Invocation from Example:1 to Example:1
	VAR_2.equals(this.VAR_1, VAR_1)
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:457###Update Method at Example:1
	public void update(float VAR_1) {
	} to public void init() {
	}
 ||| Delete TypeReference at Example:1
	float
 ||| Delete Parameter at Example:1
	float VAR_1
 ||| 
LINE:458###Update Invocation at Example:1
	 to VAR_2.add(VAR_1.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.add()
 ||| 
LINE:459###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3()
 ||| Delete TypeReference at Example:1
	java.lang.NullPointerException
 ||| Delete CatchVariable at Example:1
	java.lang.NullPointerException VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.NullPointerException VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.NullPointerException VAR_2) {
	}
 ||| 
LINE:460###Move BinaryOperator from Example:1 to Example:1
	(STRING_1 + fileName) + STRING_2
 ||| 
LINE:461###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.error(VAR_1)
 ||| 
LINE:462###Insert BinaryOperator at Example:1
	 != null
 ||| Move VariableRead from Example:1 to Example:1
	VAR_3
 ||| Insert Literal at Example:1
	null
 ||| Insert Return at Example:1
	return VAR_3
 ||| Insert VariableRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_2()
 ||| 
LINE:463###Update Invocation at Example:1
	 to VAR_2.getText()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.getId()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:464###Update BinaryOperator at Example:1
	 to (VAR_1 != null) && VAR_1.METHOD_1()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_1() || VAR_2)
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:465###Insert TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_2, VAR_3)
 ||| 
LINE:466###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| 
LINE:467###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return null;
	}
 ||| 
LINE:468###Move Assignment from Example:1 to Example:1
	VAR_1 = false
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = false
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = event.METHOD_3()
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_2()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	event.METHOD_2() == 1
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (event.METHOD_2() == 1) {
	
	
	
	}
 ||| 
LINE:469###Insert Conditional at Example:1
	 ?  : 
 ||| Move BinaryOperator from Example:1 to Example:1
	j == null
 ||| Move ConstructorCall from Example:1 to Example:1
	new TYPE_1(VAR_2)
 ||| Move VariableRead from Example:1 to Example:1
	j
 ||| Delete VariableWrite at Example:1
	j
 ||| Delete Assignment at Example:1
	j = 
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	name
 ||| Delete VariableRead at Example:1
	j
 ||| Delete Invocation at Example:1
	VAR_1.put(name, j)
 ||| Delete Block at Example:1
	{
	    j = ;
	    VAR_1.put(name, j);
	}
 ||| Delete If at Example:1
	if () {
	    j = ;
	    VAR_1.put(name, j);
	}
 ||| 
LINE:470###Update Method at Example:1
	public void METHOD_1(TYPE_1 VAR_1) {
	    super.METHOD_1(VAR_1);
	    VAR_2.METHOD_2(new TYPE_2() {
	        public void METHOD_3() {
	            METHOD_4();
	        }
	    }, INT_1);
	} to public void METHOD_3() {
	    VAR_2.METHOD_2(new TYPE_2() {
	        public void METHOD_3() {
	            METHOD_4();
	        }
	    }, INT_1);
	}
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_1
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:471###Update TypeReference at Example:1
	java.lang.String to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(name)
 ||| Delete VariableWrite at Example:1
	name
 ||| Delete Assignment at Example:1
	name = 
 ||| Delete VariableRead at Example:1
	name
 ||| Delete Return at Example:1
	return name
 ||| 
LINE:472###Update Wra at Example:1
	 to public
 ||| 
LINE:473###Insert Invocation at Example:1
	METHOD_2()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| 
LINE:474###Move Invocation from Example:1 to Example:1
	get(x, y).METHOD_1(VAR_1)
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:475###Insert FieldRead at Example:1
	this.VAR_2
 ||| Insert ThisAccess at Example:1
	this
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| 
LINE:476###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_1)
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:477###Move Catch from Example:1 to Example:1
	catch (java.lang.Exception VAR_2) {
	    METHOD_4();
	}
 ||| 
LINE:478###Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	super.METHOD_2(VAR_1)
 ||| Delete Return at Example:1
	return super.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	    return super.METHOD_2(VAR_1);
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	    return super.METHOD_2(VAR_1);
	}
 ||| 
LINE:479###Update Invocation at Example:1
	METHOD_2().METHOD_3() to METHOD_2().show()
 ||| 
LINE:480###Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 <= INT_1
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	VAR_2++
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    VAR_2++;
	    return false;
	}
 ||| Delete If at Example:1
	if (VAR_2 <= INT_1) {
	    VAR_2++;
	    return false;
	}
 ||| 
LINE:481###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_2 + VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Conditional at Example:1
	VAR_1 == null ? STRING_1 : 
 ||| 
LINE:482###Insert Assignment at Example:1
	 = 
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete OperatorAssignment at Example:1
	 += 
 ||| 
LINE:483###Update Method at Example:1
	public void METHOD_1() {
	    METHOD_2().METHOD_3();
	} to public void METHOD_3() {
	    METHOD_2().METHOD_3();
	}
 ||| 
LINE:484###Move BinaryOperator from Example:1 to Example:1
	((p--) > VAR_3.startsWith(p + VAR_4))
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	p
 ||| Delete Invocation at Example:1
	VAR_3.equals(p)
 ||| Delete BinaryOperator at Example:1
	 || VAR_3.equals(p)
 ||| 
LINE:485###Move BinaryOperator from Example:1 to Example:1
	((STRING_1 + STRING_2) + VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_2
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete BinaryOperator at Example:1
	( + STRING_3)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_3) + VAR_2
 ||| 
LINE:486###Update TypeReference at Example:1
	boolean to void
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if (VAR_1 == VAR_2)
	    return false;
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| 
LINE:487###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1.getClass())
 ||| Delete FieldRead at Example:1
	TYPE_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(TYPE_1 != null)
 ||| Delete BinaryOperator at Example:1
	(TYPE_1 != null) && 
 ||| 
LINE:488###Insert If at Example:1
	if () {
	    return true;
	} else
	    return false;
 ||| Move BinaryOperator from Example:1 to Example:1
	this.VAR_1 == this
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Block at Example:1
	
	    return false;
 ||| Insert Return at Example:1
	return true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:489###Update BinaryOperator at Example:1
	 to VAR_1.size() == METHOD_2()
 ||| Move BinaryOperator from Example:1 to Example:1
	(METHOD_2() - 1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 == 
 ||| 
LINE:490###Update Method at Example:1
	public void METHOD_1(final java.lang.Double VAR_1, final java.lang.Double VAR_2, final java.lang.Double VAR_3, final java.lang.Double VAR_4, final java.lang.Double VAR_5, final java.lang.Double VAR_6) {
	    VAR_7.METHOD_1(VAR_1, VAR_2, VAR_3, VAR_4, VAR_5, VAR_6);
	} to public void execute() {
	    VAR_7.METHOD_1(VAR_1, VAR_2, VAR_3, VAR_4, VAR_5, VAR_6);
	}
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Insert TypeAccess at Example:1
	VAR_3
 ||| Insert TypeAccess at Example:1
	VAR_4
 ||| Insert TypeAccess at Example:1
	VAR_5
 ||| Insert TypeAccess at Example:1
	VAR_6
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_1
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_2
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_3
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_4
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_5
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Double VAR_6
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_6
 ||| 
LINE:491###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(TYPE_2.METHOD_2(VAR_1), this, list)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:492###Update BinaryOperator at Example:1
	 to this.VAR_2 != this.VAR_3
 ||| Move BinaryOperator from Example:1 to Example:1
	this.VAR_2 - 1
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_3
 ||| Delete Literal at Example:1
	1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete ArrayRead at Example:1
	VAR_1[]
 ||| Delete BinaryOperator at Example:1
	VAR_1[] != 
 ||| 
LINE:493###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:494###Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| 
LINE:495###Move FieldRead from Example:1 to Example:1
	data
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:496###Move Assignment from Example:1 to Example:1
	this.name = name
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.contains(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	name
 ||| Delete Invocation at Example:1
	METHOD_2(name)
 ||| Delete Block at Example:1
	
	    METHOD_2(name);
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.contains(STRING_1))
	    METHOD_2(name);
	else
 ||| 
LINE:497###Move Invocation from Example:1 to Example:1
	VAR_2.setText(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getText()
 ||| Delete Invocation at Example:1
	VAR_2.getText().isEmpty()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.getText().isEmpty()) {
	
	}
 ||| 
LINE:498###Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_3()
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_2(event.METHOD_3())
 ||| Delete TypeReference at Example:1
	TYPE_5
 ||| Delete CatchVariable at Example:1
	TYPE_5 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (TYPE_5 VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	    TYPE_4.METHOD_2(event.METHOD_3());
	} catch (TYPE_5 VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| 
LINE:499###Insert FieldRead at Example:1
	p
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:500###Insert If at Example:1
	if ()
	    return true;
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.size() - 1) <= this.VAR_2
 ||| Insert Block at Example:1
	
	    return true;
 ||| Insert Literal at Example:1
	false
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:501###Move Invocation from Example:1 to Example:1
	VAR_1.toString()
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	STRING_2 + 
 ||| 
LINE:502###Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_1
 ||| 
LINE:503###Insert Literal at Example:1
	true
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.toString()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_1.toString()
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1 + VAR_1.toString())
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	className
 ||| Delete Invocation at Example:1
	super.METHOD_1(className)
 ||| 
LINE:504###Update Method at Example:1
	private void METHOD_1() {
	    VAR_1 = false;
	    TYPE_1.METHOD_2();
	    this.VAR_2.METHOD_2();
	
	} to protected void METHOD_2() {
	    super.METHOD_2();
	    TYPE_1.METHOD_2();
	    this.VAR_2.METHOD_2();
	}
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_3, STRING_1)
 ||| Update Invocation at Example:1
	 to super.METHOD_2()
 ||| Update Wra at Example:1
	 to protected
 ||| Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_1 = false
 ||| 
LINE:505###Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_3.METHOD_2()).METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_4, STRING_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_5
 ||| Delete VariableRead at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_5()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_5) {
	    VAR_5.METHOD_5();
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_5) {
	    VAR_5.METHOD_5();
	}
 ||| 
LINE:506###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(context.METHOD_3(), message, VAR_1).show()
 ||| Delete VariableRead at Example:1
	context
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	context != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (context != null) {
	
	}
 ||| 
LINE:507###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(values[0])
 ||| Update Invocation at Example:1
	VAR_1.METHOD_3(values[1]) to METHOD_2(values[0])
 ||| Update TypeAccess at Example:1
	VAR_1 to Example
 ||| Update Literal at Example:1
	1 to 0
 ||| 
LINE:508###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2().contains(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete UnaryOperator at Example:1
	(!METHOD_3(VAR_3))
 ||| Delete BinaryOperator at Example:1
	 && (!METHOD_3(VAR_3))
 ||| 
LINE:509###Move Return from Example:1 to Example:1
	return VAR_2.toString()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return null;
	}
 ||| 
LINE:510###Insert TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_2
 ||| 
LINE:511###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(message)
 ||| Insert ConstructorCall at Example:1
	new TYPE_1()
 ||| 
LINE:512###Update TypeReference at Example:1
	void to TYPE_1[]
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| 
LINE:513###Insert Literal at Example:1
	false
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 i
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.name
 ||| Delete TypeAccess at Example
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3.name
 ||| Delete BinaryOperator at Example:1
	VAR_2.name == VAR_3.name
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Return at Example:1
	return VAR_4
 ||| Delete Block at Example:1
	{
	    return VAR_4;
	}
 ||| Delete If at Example:1
	if (VAR_2.name == VAR_3.name) {
	    return VAR_4;
	}
 ||| Delete ForEach at Example:1
	for (TYPE_1 i : VAR_1) {
	    if (VAR_2.name == VAR_3.name) {
	        return VAR_4;
	    }
	}
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete UnaryOperator at Example:1
	!VAR_4
 ||| 
LINE:514###Move Assignment from Example:1 to Example:1
	this.name = name
 ||| Delete VariableRead at Example:1
	name
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(name != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.length() > 0)
 ||| Delete BinaryOperator at Example:1
	(name != null) && (VAR_1.length() > 0)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	
	    throw new TYPE_1(STRING_1);
 ||| Delete If at Example:1
	if ((name != null) && (VAR_1.length() > 0)) {
	
	} else
	    throw new TYPE_1(STRING_1);
 ||| 
LINE:515###Move Invocation from Example:1 to Example:1
	VAR_1.getId()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(VAR_2)
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_4(new TYPE_2(VAR_2))
 ||| 
LINE:516###Delete FieldRead at Example:1
	start
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	start.METHOD_3(true)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3(false)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_4.setText(STRING_1)
 ||| 
LINE:517###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:518###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete ArrayRead at Example:1
	[0]
 ||| 
LINE:519###Move Invocation from Example:1 to Example:1
	VAR_4.add(VAR_3.id)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3.id
 ||| Delete Invocation at Example:1
	VAR_2.contains(VAR_3.id)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.contains(VAR_3.id)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.contains(VAR_3.id)) {
	
	}
 ||| 
LINE:520###Move Invocation from Example:1 to Example:1
	event.METHOD_3().equals(VAR_1)
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_3()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(event.METHOD_3() != null)
 ||| Delete BinaryOperator at Example:1
	(event.METHOD_3() != null) && 
 ||| 
LINE:521###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_4.METHOD_5())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete UnaryOperator at Example:1
	!METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_3()) {
	
	}
 ||| 
LINE:522###Update Method at Example:1
	public void METHOD_1(final android.content.Intent intent, final TYPE_1 VAR_1) {
	    .METHOD_2(intent, );
	} to public void METHOD_3(final android.content.Intent intent) {
	    VAR_3 = $missing$;
	    super.METHOD_1(intent, VAR_1);
	}
 ||| Move Assignment from Example:1 to Example:1
	$missing$ = $missing$
 ||| Update Invocation at Example:1
	.METHOD_2(intent, ) to super.METHOD_1(intent, VAR_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Update FieldWrite at Example:1
	$missing$ to VAR_3
 ||| Insert SuperAccess at Example:1
	super
 ||| Update TypeAccess at Example:1
	 to VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final TYPE_1 VAR_1
 ||| 
LINE:523###Insert BinaryOperator at Example:1
	 + 
 ||| Update BinaryOperator at Example:1
	 to (VAR_2.size() - 1)
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2.size() + STRING_1
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:524###Move FieldRead from Example:1 to Example:1
	INT_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	( + 1)
 ||| 
LINE:525###Move Invocation from Example:1 to Example:1
	buffer.METHOD_2(this.VAR_1.METHOD_3())
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	}
 ||| 
LINE:526###Move Invocation from Example:1 to Example:1
	node.METHOD_2().METHOD_3(this)
 ||| 
LINE:527###Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_2();
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_1.METHOD_2();
	
	}
 ||| 
LINE:528###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_4();
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_3()) {
	    VAR_1.METHOD_4();
	}
 ||| 
LINE:529###Move Invocation from Example:1 to Example:1
	METHOD_2(new TYPE_1())
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	i < INT_1
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete For at Example:1
	for (int i = 0; i < INT_1; i++) {
	
	}
 ||| 
LINE:530###ERROR: Gumtree failed to process. Message: 
LINE:531###Insert Invocation at Example:1
	java.lang.System.out.println()
 ||| Insert FieldRead at Example:1
	java.lang.System.out
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Insert TypeAccess at Example:1
	java.lang.System
 ||| 
LINE:532###Move OperatorAssignment from Example:1 to Example:1
	this.VAR_1 += x
 ||| Move Return from Example:1 to Example:1
	return METHOD_2()
 ||| Delete VariableRead at Example:1
	x
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	x < 0
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new java.lang.Exception(STRING_1)
 ||| Delete Throw at Example:1
	throw new java.lang.Exception(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new java.lang.Exception(STRING_1);
	}
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (x < 0) {
	    throw new java.lang.Exception(STRING_1);
	} else {
	
	
	}
 ||| 
LINE:533###Move FieldRead from Example:1 to Example:1
	path
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:534###Move Invocation from Example:1 to Example:1
	VAR_1.remove(n)
 ||| Insert Wra at Example:1
	
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:535###Move Invocation from Example:1 to Example:1
	VAR_3.getTime()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	(VAR_1 != null) ?  : null
 ||| 
LINE:536###Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Return at Example:1
	return this
 ||| 
LINE:537###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(METHOD_3(VAR_1)).size()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_4(VAR_1)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(METHOD_4(VAR_1))
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(METHOD_4(VAR_1)).size()
 ||| Delete BinaryOperator at Example:1
	 + TYPE_1.METHOD_2(METHOD_4(VAR_1)).size()
 ||| 
LINE:538###Move FieldRead from Example:1 to Example:1
	FLOAT_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	a
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(a)
 ||| Delete BinaryOperator at Example:1
	(TYPE_1.METHOD_2(a) * )
 ||| 
LINE:539###Move Invocation from Example:1 to Example:1
	METHOD_2(id)
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:540###Move Invocation from Example:1 to Example:1
	METHOD_2(METHOD_3())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:541###Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_1).METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:542###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1 + VAR_2.size())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.size()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	
	}
 ||| 
LINE:543###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(null, -1)
 ||| 
LINE:544###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    java.lang.System.out.println(STRING_1);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	    java.lang.System.out.println(STRING_1);
	}
 ||| 
LINE:545###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_3)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4(STRING_1, STRING_2)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	    TYPE_1.METHOD_4(STRING_1, STRING_2);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_4) {
	    TYPE_1.METHOD_4(STRING_1, STRING_2);
	}
 ||| 
LINE:546###Update Wra at Example:1
	 to private
 ||| 
LINE:547###Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = true
 ||| Move If from Example:1 to Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	
	
	}
 ||| 
LINE:548###Update Invocation at Example:1
	METHOD_2(url) to index()
 ||| Delete VariableRead at Example:1
	url
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	METHOD_4(true)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_4(false)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_6()
 ||| 
LINE:549###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    throw new TYPE_2(STRING_1);
	}
 ||| 
LINE:550###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Update TypeAccess at Example:1
	VAR_2 to Example
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(VAR_3)
 ||| Delete Throw at Example:1
	throw new TYPE_3(VAR_3)
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    throw new TYPE_3(VAR_3);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    throw new TYPE_3(VAR_3);
	}
 ||| 
LINE:551###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(msg)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2())
 ||| 
LINE:552###Move VariableRead from Example:1 to Example:1
	value
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:553###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Block at Example:1
	
	    VAR_1.METHOD_3();
 ||| Delete If at Example:1
	if ((VAR_1 != null) && VAR_1.METHOD_2())
	    VAR_1.METHOD_3();
 ||| 
LINE:554###Move Invocation from Example:1 to Example:1
	METHOD_3(METHOD_4(), METHOD_5())
 ||| Move Invocation from Example:1 to Example:1
	remove()
 ||| Move Invocation from Example:1 to Example:1
	this.remove()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_1, STRING_1)
 ||| Delete Block at Example:1
	{
	    new TYPE_1(VAR_1, STRING_1);
	}
 ||| Delete If at Example:1
	if (!METHOD_2()) {
	
	
	
	} else {
	    new TYPE_1(VAR_1, STRING_1);
	}
 ||| 
LINE:555###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(id)
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(id != null)
 ||| Delete BinaryOperator at Example:1
	(id != null) && 
 ||| 
LINE:556###Move Assignment from Example:1 to Example:1
	VAR_2[i] = 1
 ||| Insert FieldRead at Example:1
	i
 ||| Delete TypeReference at Example:1
	void
 ||| Delete VariableRead at Example:1
	i
 ||| 
LINE:557###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_5(0, VAR_1 / INT_1, 0)
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_5)
 ||| 
LINE:558###Insert Literal at Example:1
	0
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:559###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	this == VAR_1
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	
	    return;
 ||| Delete If at Example:1
	if (this == VAR_1)
	    return;
 ||| 
LINE:560###Move ArrayRead from Example:1 to Example:1
	METHOD_2()[INT_1]
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	 / VAR_1
 ||| 
LINE:561###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() == 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || (VAR_2.size() == 0)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	
	    throw new TYPE_2(STRING_1);
 ||| Delete If at Example:1
	if ((VAR_1 == null) || (VAR_2.size() == 0))
	    throw new TYPE_2(STRING_1);
 ||| 
LINE:562###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.type
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.type != null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (this.type != null) {
	    throw new TYPE_2(STRING_1);
	}
 ||| 
LINE:563###Update Method at Example:1
	public java.lang.String getName() {
	    return VAR_1;
	} to public java.lang.String toString() {
	    return name();
	}
 ||| Insert Invocation at Example:1
	name()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:564###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	}
 ||| Delete Block at Example:1
	{
	    if (VAR_1.METHOD_2()) {
	
	    }
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    if (VAR_1.METHOD_2()) {
	
	    }
	}
 ||| 
LINE:565###Move Invocation from Example:1 to Example:1
	VAR_3.format(STRING_1, VAR_4, VAR_5, VAR_6)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
 ||| 
LINE:566###Move BinaryOperator from Example:1 to Example:1
	((((VAR_1 + STRING_1) + VAR_2) + STRING_1) + VAR_3)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_2)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	( + STRING_2) + VAR_4
 ||| 
LINE:567###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 == VAR_3)
 ||| Delete VariableRead at Example:1
	j
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3().METHOD_4()
 ||| Delete BinaryOperator at Example:1
	(j == METHOD_2().METHOD_3().METHOD_4())
 ||| Delete BinaryOperator at Example:1
	 && (j == METHOD_2().METHOD_3().METHOD_4())
 ||| 
LINE:568###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:569###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3(VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:570###Move Conditional from Example:1 to Example:1
	(VAR_2 > VAR_3 ? 1 : 0)
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1.size() + (VAR_2 > VAR_3 ? 1 : 0)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:571###Update BinaryOperator at Example:1
	 to (VAR_1 <= VAR_4) && (VAR_2 >= VAR_3)
 ||| Move BinaryOperator from Example:1 to Example:1
	((VAR_4 - VAR_1) >= 0)
 ||| Update BinaryOperator at Example:1
	( - VAR_1) to (VAR_1 <= VAR_4)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_4
 ||| Update BinaryOperator at Example:1
	 to (VAR_2 >= VAR_3)
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2 - VAR_3)
 ||| Delete Literal at Example:1
	0
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	( >= 0)
 ||| Delete BinaryOperator at Example:1
	 && ( >= 0)
 ||| 
LINE:572###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_2, VAR_3.length)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	0
 ||| Delete NewArray at Example:1
	new TYPE_1[0]
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : new TYPE_1[0]
 ||| 
LINE:573###Update Invocation at Example:1
	 to VAR_2.METHOD_2().replace(VAR_3, VAR_1).commit()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2().replace(VAR_3, VAR_1).METHOD_3(null)
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	.commit()
 ||| 
LINE:574###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_2 : VAR_1) {
	    VAR_2.METHOD_2(VAR_3);
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	
	    return VAR_1;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	    return VAR_1;
	}
 ||| 
LINE:575###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return;
	}
 ||| 
LINE:576###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.contains(VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.contains(VAR_2)) {
	
	}
 ||| 
LINE:577###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	    METHOD_2(VAR_2);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    METHOD_2(VAR_2);
	} else {
	
	}
 ||| 
LINE:578###Move Invocation from Example:1 to Example:1
	VAR_2.getText()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.getText()
 ||| Delete Invocation at Example:1
	.toString()
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:579###Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Assignment at Example:1
	VAR_1 = null
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_2 = false
 ||| 
LINE:580###Insert Invocation at Example:1
	.append()
 ||| Move Invocation from Example:1 to Example:1
	append(VAR_1, start, end)
 ||| Move Literal from Example:1 to Example:1
	"\n"
 ||| Delete FieldRead at Example:1
	stringBuilder
 ||| Delete Invocation at Example:1
	stringBuilder.append()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| 
LINE:581###Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_1, VAR_2)
 ||| Delete Block at Example:1
	{
	    METHOD_3(VAR_1, VAR_2);
	}
 ||| Delete If at Example:1
	if (VAR_3 == null) {
	    METHOD_3(VAR_1, VAR_2);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:582###ERROR: Gumtree failed to process. Message: 
LINE:583###Move ConstructorCall from Example:1 to Example:1
	new TYPE_1(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_1 == null ? null : 
 ||| 
LINE:584###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_2, VAR_1, null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	init()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (init())
 ||| 
LINE:585###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_1(VAR_1, VAR_2, null)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:586###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2.METHOD_2() != null
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2() != null) {
	    return;
	}
 ||| 
LINE:587###Insert If at Example:1
	if () {
	    return false;
	}
 ||| Update BinaryOperator at Example:1
	 to VAR_1.METHOD_2() == VAR_1.METHOD_3()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() != VAR_1.METHOD_3())
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:588###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_5()
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_6()
 ||| Delete Method at Example:1
	public void METHOD_4() {
	    VAR_2.METHOD_5();
	    METHOD_6();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4() {
	        VAR_2.METHOD_5();
	        METHOD_6();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_4() {
	        VAR_2.METHOD_5();
	        METHOD_6();
	    }
	}
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3(new TYPE_2() {
	    public void METHOD_4() {
	        VAR_2.METHOD_5();
	        METHOD_6();
	    }
	})
 ||| 
LINE:589###Move Invocation from Example:1 to Example:1
	VAR_3.setText(time)
 ||| Update BinaryOperator at Example:1
	getView() != null to (VAR_1 = ((TYPE_1) (getView().METHOD_2(VAR_2)))) == null
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = ((TYPE_1) (getView().METHOD_2(VAR_2)))
 ||| Insert Return at Example:1
	return
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getView()
 ||| 
LINE:590###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2();
	}
 ||| 
LINE:591###Insert VirtualEle at Example:1
	
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Insert TypeReference at Example:1
	java.io.IOException
 ||| Delete TypeReference at Example:1
	java.io.IOException
 ||| Delete CatchVariable at Example:1
	java.io.IOException VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(STRING_1, VAR_1, VAR_2)
 ||| Delete Catch at Example:1
	 catch (java.io.IOException VAR_2) {
	    TYPE_2.METHOD_3(STRING_1, VAR_1, VAR_2);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.io.IOException VAR_2) {
	    TYPE_2.METHOD_3(STRING_1, VAR_1, VAR_2);
	}
 ||| 
LINE:592###Update BinaryOperator at Example:1
	VAR_1.size() != ( - 1) to VAR_1.size() < VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	( - 1)
 ||| 
LINE:593###Move Return from Example:1 to Example:1
	return VAR_1.get(name)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	name
 ||| Delete Invocation at Example:1
	VAR_1.get(name)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.get(name) != null
 ||| Delete Block at Example:1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_1)
 ||| Delete VariableRead at Example:1
	name
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(METHOD_2(STRING_1), name)
 ||| Delete Return at Example:1
	return new TYPE_1(METHOD_2(STRING_1), name)
 ||| Delete Block at Example:1
	
	    return new TYPE_1(METHOD_2(STRING_1), name);
 ||| Delete If at Example:1
	if (VAR_1.get(name) != null)
	
	else
	    return new TYPE_1(METHOD_2(STRING_1), name);
 ||| 
LINE:594###Move BinaryOperator from Example:1 to Example:1
	(((STRING_1 + VAR_1) + STRING_2) + VAR_2)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	( + )
 ||| Delete BinaryOperator at Example:1
	( + ) + 
 ||| 
LINE:595###Insert If at Example:1
	if () {
	    return true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	(this instanceof TYPE_1) || (this instanceof TYPE_2)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Literal at Example:1
	false
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:596###Insert BinaryOperator at Example:1
	 == 0
 ||| Move FieldRead from Example:1 to Example:1
	result
 ||| Insert Literal at Example:1
	0
 ||| Delete Literal at Example:1
	"0"
 ||| Delete Invocation at Example:1
	"0".equals()
 ||| 
LINE:597###Insert BinaryOperator at Example:1
	( == VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.getType()
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	.equals(VAR_3)
 ||| 
LINE:598###Insert Literal at Example:1
	0
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete NewArray at Example:1
	new java.lang.String[]{ STRING_1, STRING_1, STRING_1 }
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete NewArray at Example:1
	new java.lang.String[]{ STRING_2 }
 ||| 
LINE:599###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_4 : VAR_3) {
	    VAR_4.METHOD_2(VAR_1, VAR_2);
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_3 != null)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_3 != null)) {
	
	}
 ||| 
LINE:600###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete VariableWrite at Example:1
	VAR_2
 ||| Delete Assignment at Example:1
	VAR_2 = 
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:601###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	
	}
 ||| 
LINE:602###Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_2
 ||| 
LINE:603###Update BinaryOperator at Example:1
	 to index > size
 ||| Move BinaryOperator from Example:1 to Example:1
	(size - 1)
 ||| Move VariableRead from Example:1 to Example:1
	index
 ||| Delete Literal at Example:1
	1
 ||| Delete VariableRead at Example:1
	index
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(index < 0)
 ||| Delete BinaryOperator at Example:1
	( > )
 ||| Delete BinaryOperator at Example:1
	(index < 0) || ( > )
 ||| 
LINE:604###Move If from Example:1 to Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_2(VAR_4);
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_5)
 ||| Delete Block at Example:1
	{
	    METHOD_3(VAR_5);
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	} else {
	    METHOD_3(VAR_5);
	}
 ||| 
LINE:605###Move ForEach from Example:1 to Example:1
	for (TYPE_1 n : VAR_1) {
	    TYPE_2.METHOD_2(VAR_3, STRING_1 + n);
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
 ||| 
LINE:606###Move Return from Example:1 to Example:1
	return VAR_2.contains(new TYPE_1(TYPE_2.METHOD_2(context)))
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.length == 0
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	
	    return true;
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.length == 0)
	    return true;
	else
 ||| 
LINE:607###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2()
 ||| 
LINE:608###Insert BinaryOperator at Example:1
	(METHOD_2() != null) && 
 ||| Insert BinaryOperator at Example:1
	(METHOD_2() != null)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(this, VAR_1, VAR_2.METHOD_4() - METHOD_5())
 ||| Insert Invocation at Example:1
	METHOD_2()
 ||| Insert Literal at Example:1
	null
 ||| Insert TypeAccess at Example
	Example
 ||| 
LINE:609###Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Update Literal at Example:1
	false to true
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:610###Move Invocation from Example:1 to Example:1
	response.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	response
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	response != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (response != null)
 ||| 
LINE:611###Delete TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_1 + VAR_1, VAR_2)
 ||| 
LINE:612###Move Invocation from Example:1 to Example:1
	VAR_2.getValue().isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:613###Insert Invocation at Example:1
	getActivity()
 ||| Move TypeAccess from Example to Example
	Example
 ||| 
LINE:614###Move ConstructorCall from Example:1 to Example:1
	new TYPE_5(TYPE_6.METHOD_2(args))
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_1()
 ||| 
LINE:615###Move BinaryOperator from Example:1 to Example:1
	((this.VAR_1.METHOD_1() ^ this.name.METHOD_1()) ^ ((int) (VAR_2)))
 ||| Move Conditional from Example:1 to Example:1
	(VAR_3 ? 1 : 0)
 ||| Delete TypeReference at Example:1
	int
 ||| Delete FieldRead at Example:1
	((int) (VAR_2))
 ||| Delete BinaryOperator at Example:1
	 ^ 
 ||| 
LINE:616###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	p.METHOD_2()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:617###Move Invocation from Example:1 to Example:1
	VAR_4.put(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	
	}
 ||| 
LINE:618###Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_1)
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(VAR_1);
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2(VAR_1)) {
	    TYPE_2.METHOD_3(VAR_1);
	}
 ||| 
LINE:619###Move Invocation from Example:1 to Example:1
	VAR_4.setText(STRING_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:620###Move Return from Example:1 to Example:1
	return ((int) ((INT_1 * VAR_2) / VAR_1))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 != 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 != 0) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:621###Move Invocation from Example$1:1 to Example:1
	TYPE_6.METHOD_5(VAR_2)
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_2()
 ||| Delete TypeReference at Example
	TYPE_5
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Method at Example:1
	public void METHOD_4() {
	
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4() {
	
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_5() {
	    public void METHOD_4() {
	
	    }
	}
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_2().METHOD_3(new TYPE_5() {
	    public void METHOD_4() {
	
	    }
	})
 ||| 
LINE:622###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(this, METHOD_4())
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:623###Move Invocation from Example:1 to Example:1
	METHOD_4(new android.content.Intent(this, VAR_1))
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_5().METHOD_6()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_3()) {
	
	
	}
 ||| 
LINE:624###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:625###Move Assignment from Example:1 to Example:1
	this.path = TYPE_1.METHOD_2(path, this.path)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.path
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.path != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (this.path != null)
 ||| 
LINE:626###Insert Invocation at Example:1
	.METHOD_2(VAR_1)
 ||| Update Invocation at Example:1
	 to VAR_2.getString(STRING_1, VAR_3).toUpperCase().replace(STRING_2, STRING_3)
 ||| Move Invocation from Example:1 to Example:1
	getActivity().METHOD_2(VAR_4.toUpperCase().replace(STRING_2, STRING_3))
 ||| Move Invocation from Example:1 to Example:1
	getActivity()
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Update Invocation at Example:1
	VAR_4.toUpperCase().replace(, ) to VAR_2.getString(STRING_1, VAR_3).toUpperCase()
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_2
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_3
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.getString(STRING_1, VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.toUpperCase()
 ||| 
LINE:627###Move Return from Example:1 to Example:1
	return TYPE_1.METHOD_2(parameters)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    return VAR_1;
	} else {
	
	}
 ||| 
LINE:628###Insert Invocation at Example:1
	.METHOD_5()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_1 = 
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(STRING_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.toString()
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4(VAR_3.toString())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_5()
 ||| 
LINE:629###Insert Invocation at Example:1
	java.util.Arrays.asList()
 ||| Insert TypeReference at Example
	java.lang.Object
 ||| Insert TypeAccess at Example:1
	java.util.Arrays
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.getName()
 ||| 
LINE:630###Update TypeReference at Example:1
	java.util.List<TYPE_1> to TYPE_1[]
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example
	java.lang.Object
 ||| Delete TypeAccess at Example:1
	java.util.Arrays
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.util.Arrays.asList(VAR_1)
 ||| 
LINE:631###Insert BinaryOperator at Example:1
	 != 
 ||| Update FieldRead at Example:1
	 to this.VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_2
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| Delete UnaryOperator at Example:1
	!.equals()
 ||| 
LINE:632###Move LocalVariable from Example:1 to Example:1
	final java.lang.String VAR_1 = STRING_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(TYPE_1.METHOD_3(VAR_2, VAR_3, VAR_4, java.lang.Integer.METHOD_4(VAR_1), VAR_5, VAR_6))
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_7
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_7) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (TYPE_2 VAR_7) {
	}
 ||| 
LINE:633###Move Throw from Example:1 to Example:1
	throw new TYPE_4()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| 
LINE:634###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:635###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != VAR_3)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2 != VAR_3)
 ||| 
LINE:636###Insert FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.METHOD_1()
 ||| Delete Invocation at Example:1
	this.VAR_1.METHOD_1().toString()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_1.METHOD_1().toString().replaceAll(STRING_1, VAR_2)
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(this.VAR_1.METHOD_1().toString().replaceAll(STRING_1, VAR_2))
 ||| 
LINE:637###Update BinaryOperator at Example:1
	(first < CHAR_1) || (CHAR_2 < first) to (first < CHAR_1) && (CHAR_2 < first)
 ||| 
LINE:638###Move Invocation from Example:1 to Example:1
	VAR_2.show()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Invocation at Example:1
	getActivity().METHOD_4()
 ||| Delete UnaryOperator at Example:1
	!getActivity().METHOD_4()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!getActivity().METHOD_4())
 ||| 
LINE:639###Update TypeParameterReference at Example:1
	TYPE_1 to java.lang.Object
 ||| Delete TypeParameter at Example:1
	TYPE_1
 ||| 
LINE:640###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(STRING_1)
 ||| Insert TypeReference at Example:1
	boolean
 ||| Delete TypeAccess at Example:1
	java.lang.Boolean
 ||| Delete Invocation at Example:1
	.toString()
 ||| Delete Invocation at Example:1
	java.lang.Boolean.METHOD_2(.toString())
 ||| 
LINE:641###Move Return from Example:1 to Example:1
	return ((TYPE_1) (VAR_1.METHOD_2(STRING_1 + VAR_2.METHOD_3()).METHOD_4()))
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    return null;
	}
 ||| 
LINE:642###Move Assignment from Example:1 to Example:1
	VAR_3 = 0
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:643###Move FieldRead from Example:1 to Example:1
	position
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:644###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1, VAR_2, data)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	VAR_1 == TYPE_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == TYPE_1.METHOD_2()) {
	
	}
 ||| 
LINE:645###Insert FieldRead at Example:1
	name
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.get()
 ||| 
LINE:646###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null) && 
 ||| 
LINE:647###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2())
 ||| 
LINE:648###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:649###Insert If at Example:1
	if (VAR_3 == null) {
	
	
	} else {
	    return VAR_3;
	}
 ||| Insert BinaryOperator at Example:1
	VAR_3 == null
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert Block at Example:1
	{
	    return VAR_3;
	}
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(STRING_1)
 ||| Move If from Example:1 to Example:1
	if (VAR_1) {
	    return VAR_2;
	} else {
	    return VAR_3;
	}
 ||| Insert Return at Example:1
	return VAR_3
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| 
LINE:650###Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_4)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_5
 ||| Delete VariableRead at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_5) {
	    VAR_5.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	    METHOD_3(VAR_3);
	    METHOD_3(VAR_4);
	} catch (java.lang.Exception VAR_5) {
	    VAR_5.METHOD_4();
	}
 ||| 
LINE:651###Insert If at Example:1
	if () {
	
	}
 ||| Update BinaryOperator at Example:1
	 to VAR_2 >= INT_1
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 == 1
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 < INT_1
 ||| Insert FieldRead at Example:1
	INT_1
 ||| Move Assignment from Example:1 to Example:1
	VAR_3[1] = VAR_1
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	INT_1
 ||| Delete Literal at Example:1
	1
 ||| 
LINE:652###Move BinaryOperator from Example:1 to Example:1
	(key == VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() != 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2.size() != 0)
 ||| 
LINE:653###Move LocalVariable from Example:1 to Example:1
	TYPE_2 data = VAR_2.METHOD_2(VAR_3, VAR_4)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3(((TYPE_4) (data)))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == 0) {
	
	
	}
 ||| 
LINE:654###Move Invocation from Example:1 to Example:1
	setState(VAR_1 ? VAR_3 : VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	}
 ||| 
LINE:655###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	}
 ||| 
LINE:656###Move Return from Example:1 to Example:1
	return VAR_2.size()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return 0;
	} else {
	
	}
 ||| 
LINE:657###Move Return from Example:1 to Example:1
	return VAR_3.get(VAR_1.METHOD_3()).METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2(VAR_1))
	
	else
	    return false;
 ||| 
LINE:658###Update Invocation at Example:1
	 to METHOD_1(METHOD_2(), VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().getName()
 ||| Move TypeAccess from Example to Example
	Example
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_1(, )
 ||| 
LINE:659###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 != null)
	
	else
	    return null;
 ||| 
LINE:660###Update Invocation at Example:1
	 to VAR_1.METHOD_6(STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_5()
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.METHOD_6()
 ||| 
LINE:661###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:662###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 >= VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1 < 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 < 0) || 
 ||| 
LINE:663###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_3(STRING_2) != null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2(STRING_1)) {
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:664###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.getName()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:665###Move VariableRead from Example:1 to Example:1
	content
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:666###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| 
LINE:667###Move BinaryOperator from Example:1 to Example:1
	VAR_1 - VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, VAR_3)
 ||| 
LINE:668###Move BinaryOperator from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1) - 1
 ||| Move BinaryOperator from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2) - 1
 ||| 
LINE:669###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(data, null)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:670###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5(VAR_7.build(), VAR_6, VAR_8)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:671###Move Invocation from Example:1 to Example:1
	((java.lang.String) (VAR_2.get(key)))
 ||| Update TypeReference at Example:1
	java.lang.String to java.lang.Integer
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete Invocation at Example:1
	java.lang.Integer.parseInt()
 ||| 
LINE:672###Move Assignment from Example:1 to Example:1
	VAR_1 = false
 ||| Move Return from Example:1 to Example:1
	return true
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_3().METHOD_1()
 ||| Delete Return at Example:1
	return METHOD_3().METHOD_1()
 ||| Delete Block at Example:1
	{
	    return METHOD_3().METHOD_1();
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	} else {
	    return METHOD_3().METHOD_1();
	}
 ||| 
LINE:673###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete Return at Example:1
	return INT_1
 ||| Delete Block at Example:1
	{
	    return INT_1;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return INT_1;
	}
 ||| 
LINE:674###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(message)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == VAR_2) {
	
	}
 ||| 
LINE:675###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() || VAR_1.METHOD_3())
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() || VAR_1.METHOD_3()) || 
 ||| 
LINE:676###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_3(VAR_2, id)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Invocation at Example:1
	java.lang.Integer.METHOD_4(id)
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(VAR_2, java.lang.Integer.METHOD_4(id))
 ||| Delete Return at Example:1
	return VAR_1.METHOD_3(VAR_2, java.lang.Integer.METHOD_4(id))
 ||| Delete Block at Example:1
	{
	    return VAR_1.METHOD_3(VAR_2, java.lang.Integer.METHOD_4(id));
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2()) {
	
	} else {
	    return VAR_1.METHOD_3(VAR_2, java.lang.Integer.METHOD_4(id));
	}
 ||| 
LINE:677###Move Invocation from Example:1 to Example:1
	METHOD_1(position, VAR_2.id)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	position
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Invocation at Example:1
	METHOD_1(position, -1)
 ||| Delete Block at Example:1
	{
	    METHOD_1(position, -1);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    METHOD_1(position, -1);
	}
 ||| 
LINE:678###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3 != null)
 ||| 
LINE:679###Insert FieldRead at Example:1
	.title
 ||| Move ArrayRead from Example:1 to Example:1
	VAR_1.values()[position]
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:680###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 != null) && METHOD_2().METHOD_3(VAR_2))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_3 <= 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 <= 0)
 ||| 
LINE:681###Move ConstructorCall from Example:1 to Example:1
	new TYPE_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == VAR_2) {
	
	}
 ||| 
LINE:682###Update TypeReference at Example:1
	int to void
 ||| Update Invocation at Example:1
	 to VAR_4.add(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.put(VAR_2.id, VAR_1)
 ||| Insert Wra at Example:1
	
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.id
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldWrite at Example:1
	VAR_2.id
 ||| Delete UnaryOperator at Example:1
	VAR_2.id++
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.id
 ||| Delete Return at Example:1
	return VAR_2.id
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	
	    return VAR_2.id;
	}
 ||| 
LINE:683###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_1()
 ||| 
LINE:684###Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(VAR_4, STRING_1 + VAR_2)
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_3(VAR_4, STRING_1 + VAR_2);
	}
 ||| 
LINE:685###Move Assignment from Example:1 to Example:1
	VAR_1 = new TYPE_1(context)
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = new TYPE_2(context)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	}
 ||| 
LINE:686###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 != null)
 ||| 
LINE:687###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() >= INT_1
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	true
 ||| Delete Assignment at Example:1
	VAR_2 = true
 ||| Delete Block at Example:1
	{
	    VAR_2 = true;
	}
 ||| Delete If at Example:1
	if (VAR_1.size() >= INT_1) {
	    VAR_2 = true;
	}
 ||| 
LINE:688###Update TypeAccess at Example:1
	VAR_3 to Example
 ||| Insert TypeAccess at Example:1
	VAR_4
 ||| Insert TypeAccess at Example:1
	VAR_5
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_2
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_4 || VAR_1
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_5 || VAR_2
 ||| 
LINE:689###Move If from Example:1 to Example:1
	if (VAR_1 == STRING_2) {
	    return VAR_3;
	} else {
	    throw new TYPE_4();
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 == STRING_1
 ||| Move Block from Example:1 to Example:1
	{
	    return VAR_2;
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == STRING_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Return at Example:1
	return VAR_3
 ||| Delete Block at Example:1
	{
	    return VAR_3;
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:690###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:691###Move BinaryOperator from Example:1 to Example:1
	(((VAR_2 + VAR_3) + INT_1) % INT_1)
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	 - INT_2
 ||| 
LINE:692###Move Invocation from Example:1 to Example:1
	VAR_2.remove(VAR_1)
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = -1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete BinaryOperator at Example:1
	VAR_1 != (-1)
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != (-1)) {
	
	
	
	}
 ||| 
LINE:693###Insert If at Example:1
	if (null != VAR_3) {
	
	}
 ||| Insert BinaryOperator at Example:1
	null != VAR_3
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Literal at Example:1
	null
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1)
 ||| 
LINE:694###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2, ((TYPE_2) (VAR_1)).METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_4();
	}
 ||| Delete If at Example:1
	if () {
	    VAR_3.METHOD_4();
	}
 ||| 
LINE:695###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() && VAR_1.METHOD_3())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_4() == null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1.METHOD_4() == null)
 ||| 
LINE:696###Update TypeReference at Example:1
	java.lang.String to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_2, TYPE_1.METHOD_5())
 ||| Delete Return at Example:1
	return 
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:697###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_2 : this.VAR_1.METHOD_2()) {
	    METHOD_3(VAR_2);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(this.VAR_1) {
	
	}
 ||| 
LINE:698###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(event.METHOD_2()).METHOD_4(event)
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_2()
 ||| Delete FieldRead at Example:1
	event.METHOD_2().VAR_1
 ||| Delete UnaryOperator at Example:1
	!event.METHOD_2().VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!event.METHOD_2().VAR_1)
 ||| 
LINE:699###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:700###Insert Return at Example:1
	return  == 
 ||| Insert BinaryOperator at Example:1
	 == 
 ||| Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(this, VAR_2, VAR_3)
 ||| Delete TypeReference at Example:1
	int
 ||| Delete LocalVariable at Example:1
	int result = 
 ||| Delete VariableRead at Example:1
	result
 ||| Delete BinaryOperator at Example:1
	result == 
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (result == ) {
	    return true;
	} else {
	    return false;
	}
 ||| 
LINE:701###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:702###Insert If at Example:1
	if (status >= 0) {
	
	}
 ||| Insert BinaryOperator at Example:1
	status >= 0
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	status
 ||| Insert Literal at Example:1
	0
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(buffer)
 ||| 
LINE:703###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_1(VAR_3.METHOD_2(), VAR_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_4()
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_3(VAR_4.METHOD_4())
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_4) {
	    VAR_5.METHOD_3(VAR_4.METHOD_4());
	    return STRING_1;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_4) {
	    VAR_5.METHOD_3(VAR_4.METHOD_4());
	    return STRING_1;
	}
 ||| 
LINE:704###Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_2, VAR_3)
 ||| Delete Invocation at Example:1
	VAR_4.setText(TYPE_2.METHOD_2(VAR_2, VAR_3))
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 < INT_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Conditional at Example:1
	VAR_2 < INT_1 ? STRING_1 : STRING_2
 ||| Delete Invocation at Example:1
	VAR_5.setText(VAR_2 < INT_1 ? STRING_1 : STRING_2)
 ||| 
LINE:705###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:706###Insert FieldRead at Example:1
	this.listener
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete TypeReference at Example:1
	java.lang.Throwable
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.lang.Throwable VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:707###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1()
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:708###Move Invocation from Example:1 to Example:1
	VAR_1[0].METHOD_2(true)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2[0].METHOD_2(false)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3().update()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:709###Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Update TypeReference at Example:1
	TYPE_2 to java.lang.String
 ||| 
LINE:710###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2()) {
	
	
	}
 ||| 
LINE:711###Update Method at Example:1
	public boolean METHOD_1(java.lang.String VAR_1) {
	    return "true".equals(this.METHOD_2(VAR_1));
	} to public java.lang.String METHOD_2(java.lang.String VAR_1) {
	    return null;
	}
 ||| Update TypeReference at Example:1
	boolean to java.lang.String
 ||| Insert Literal at Example:1
	null
 ||| Delete Literal at Example:1
	"true"
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	this.METHOD_2(VAR_1)
 ||| Delete Invocation at Example:1
	"true".equals(this.METHOD_2(VAR_1))
 ||| 
LINE:712###Move Invocation from Example:1 to Example:1
	VAR_2.name().substring(0, 1)
 ||| Delete Invocation at Example:1
	.toLowerCase()
 ||| 
LINE:713###Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4.id
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(, VAR_4.id)
 ||| 
LINE:714###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(0L)
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = true
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0L
 ||| Delete BinaryOperator at Example:1
	VAR_1 != 0L
 ||| Delete Block at Example:1
	{
	
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != 0L) {
	
	
	
	
	}
 ||| 
LINE:715###Insert Invocation at Example:1
	METHOD_1()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	output
 ||| 
LINE:716###Move Assignment from Example:1 to Example:1
	startTime = TYPE_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	state
 ||| Delete UnaryOperator at Example:1
	!state
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!state)
 ||| 
LINE:717###Move Invocation from Example:1 to Example:1
	VAR_2.to(VAR_3)
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:718###Move BinaryOperator from Example:1 to Example:1
	(((((STRING_1 + n) + STRING_2) + c) + STRING_3) + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_4
 ||| Delete BinaryOperator at Example:1
	( + STRING_4)
 ||| Delete FieldRead at Example:1
	f
 ||| Delete BinaryOperator at Example:1
	( + STRING_4) + f
 ||| 
LINE:719###Move If from Example:1 to Example:1
	if (!VAR_1.METHOD_2()) {
	    VAR_2.start();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:720###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.METHOD_2())
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_1.METHOD_2())
 ||| 
LINE:721###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_3.setText(VAR_2.METHOD_2());
	    VAR_4.setText(VAR_2.METHOD_3());
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 == INT_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:722###Move BinaryOperator from Example:1 to Example:1
	(INT_1 * VAR_1.get()) / time
 ||| Delete VariableRead at Example:1
	time
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	time == 0
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	time == 0 ? 0 : 
 ||| 
LINE:723###Move Invocation from Example:1 to Example:1
	list.METHOD_2(VAR_2)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_1()
 ||| 
LINE:724###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2.METHOD_3() != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2.METHOD_3() != null)
 ||| 
LINE:725###Update Invocation at Example:1
	 to java.lang.Long.METHOD_1(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_2(VAR_2)
 ||| Update Invocation at Example:1
	 to java.lang.Long.METHOD_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_2(VAR_1)
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:726###Move BinaryOperator from Example:1 to Example:1
	((((((STRING_1 + STRING_2) + name) + CHAR_1) + STRING_3) + size) + STRING_4)
 ||| Move FieldRead from Example:1 to Example:1
	CHAR_2
 ||| Delete FieldRead at Example:1
	STRING_4
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	( + VAR_1)
 ||| Delete BinaryOperator at Example:1
	( + VAR_1) + 
 ||| 
LINE:727###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_1.METHOD_2())
 ||| Delete UnaryOperator at Example:1
	!VAR_2.equals(VAR_1.METHOD_2())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.equals(VAR_1.METHOD_2())) {
	
	}
 ||| 
LINE:728###Insert BinaryOperator at Example:1
	(VAR_3 != STRING_1)
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Insert FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!VAR_3.METHOD_3(STRING_1))
 ||| 
LINE:729###Move FieldRead from Example:1 to Example:1
	this.VAR_2
 ||| 
LINE:730###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:731###Insert ConstructorCall at Example:1
	new TYPE_1(, , , , )
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Delete TypeReference at Example
	TYPE_1
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeReference at Example:1
	android.view.View
 ||| Delete Parameter at Example:1
	android.view.View VAR_5
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Method at Example:1
	public void METHOD_2(android.view.View VAR_5) {
	    METHOD_3();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_2(android.view.View VAR_5) {
	        METHOD_3();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_1(, , , , ) {
	    public void METHOD_2(android.view.View VAR_5) {
	        METHOD_3();
	    }
	}
 ||| 
LINE:732###Move BinaryOperator from Example:1 to Example:1
	(VAR_2.size() < VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.name
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() == this.name)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1.METHOD_2() == this.name)
 ||| 
LINE:733###Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| 
LINE:734###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(true)
 ||| 
LINE:735###Move UnaryOperator from Example:1 to Example:1
	VAR_3++
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:736###Move Invocation from Example:1 to Example:1
	METHOD_4().METHOD_5()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	    METHOD_3();
	
	}
 ||| 
LINE:737###ERROR: Gumtree failed to process. Message: 
LINE:738###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_6()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.size() > 0)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:739###Move Invocation from Example:1 to Example:1
	VAR_4.getView().METHOD_2(string)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3)
 ||| 
LINE:740###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.add(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_3.add(STRING_1)
 ||| 
LINE:741###Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 && VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete VariableRead at Example:1
	id
 ||| Delete BinaryOperator at Example:1
	STRING_2 + id
 ||| Delete Invocation at Example:1
	VAR_3.i(STRING_1, STRING_2 + id)
 ||| Delete Block at Example:1
	
	    VAR_3.i(STRING_1, STRING_2 + id);
 ||| Delete If at Example:1
	if (VAR_1 && VAR_2)
	    VAR_3.i(STRING_1, STRING_2 + id);
 ||| 
LINE:742###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_3.add(this, VAR_1);
	} else {
	    METHOD_2();
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:743###Move Invocation from Example:1 to Example:1
	METHOD_4(true)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2().METHOD_3() > 0
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.METHOD_1()
 ||| Delete Block at Example:1
	{
	    super.METHOD_1();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2().METHOD_3() > 0) {
	    super.METHOD_1();
	} else {
	
	}
 ||| 
LINE:744###Move BinaryOperator from Example:1 to Example:1
	((type + STRING_1) + name)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(( + STRING_2) + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete BinaryOperator at Example:1
	(( + STRING_2) + VAR_1) + STRING_3
 ||| 
LINE:745###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:746###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3.toString())
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_3.toString())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:747###Delete TypeReference at Example:1
	java.lang.String
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	intent.METHOD_2(VAR_1)
 ||| Delete LocalVariable at Example:1
	java.lang.String title = intent.METHOD_2(VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	intent.METHOD_2(VAR_3)
 ||| Delete LocalVariable at Example:1
	java.lang.String VAR_2 = intent.METHOD_2(VAR_3)
 ||| Delete VariableRead at Example:1
	title
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:748###Insert If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(new TYPE_2(VAR_1))
 ||| 
LINE:749###Insert If at Example:1
	if () {
	    return false;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.contains(STRING_1)
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Literal at Example:1
	true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:750###Insert UnaryOperator at Example:1
	(!)
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2()
 ||| 
LINE:751###Delete Wra at Example:1
	
 ||| 
LINE:752###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_2.METHOD_2(), VAR_1)
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:753###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != VAR_2.out)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:754###Move Invocation from Example:1 to Example:1
	VAR_2.iterator().METHOD_1()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:755###Insert Assignment at Example:1
	this.VAR_1 = VAR_1
 ||| Insert FieldWrite at Example:1
	this.VAR_1
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| 
LINE:756###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:757###Move Invocation from Example:1 to Example:1
	VAR_1.remove(listener)
 ||| Delete VariableRead at Example:1
	listener
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	listener != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (listener != null) {
	
	}
 ||| 
LINE:758###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:759###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:760###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	!VAR_3
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_3) {
	
	}
 ||| 
LINE:761###Delete VariableRead at Example:1
	name
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	name == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (name == null) {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:762###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:763###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_3, true)
 ||| 
LINE:764###Move OperatorAssignment from Example:1 to Example:1
	sum -= i * TYPE_1.METHOD_2(i)
 ||| Delete VariableRead at Example:1
	i
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	i > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (i > 0)
 ||| 
LINE:765###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete BinaryOperator at Example:1
	i < VAR_2.size()
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_3.add(false)
 ||| Delete For at Example:1
	for (int i = 0; i < VAR_2.size(); i++) {
	    VAR_3.add(false);
	}
 ||| 
LINE:766###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(VAR_1, null, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:767###Update Invocation at Example:1
	VAR_2.METHOD_2(STRING_1,  ? STRING_2 : STRING_3) to java.lang.System.out.println(VAR_1.METHOD_3())
 ||| Insert FieldRead at Example:1
	java.lang.System.out
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Insert TypeAccess at Example:1
	java.lang.System
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete Conditional at Example:1
	 ? STRING_2 : STRING_3
 ||| 
LINE:768###Insert BinaryOperator at Example:1
	( + 1)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:769###Insert If at Example:1
	if (VAR_1.size() > 0)
	
	else
	    return null;
 ||| Insert BinaryOperator at Example:1
	VAR_1.size() > 0
 ||| Insert Block at Example:1
 ||| Insert Block at Example:1
	
	    return null;
 ||| Insert Invocation at Example:1
	VAR_1.size()
 ||| Insert Literal at Example:1
	0
 ||| Move Return from Example:1 to Example:1
	return VAR_1.get(position)
 ||| Insert Return at Example:1
	return null
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:770###Move Return from Example:1 to Example:1
	return TYPE_1.METHOD_2(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:771###Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_2)
 ||| 
LINE:772###Move Return from Example:1 to Example:1
	return VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else
	    return null;
 ||| 
LINE:773###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_4)
 ||| Delete Invocation at Example:1
	.toUpperCase()
 ||| 
LINE:774###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Parameter at Example:1
	TYPE_2 VAR_1
 ||| 
LINE:775###Insert Block at Example:1
	{
	
	}
 ||| Move Return from Example:1 to Example:1
	return 0L
 ||| 
LINE:776###Update TypeAccess at Example:1
	TYPE_2 to Example
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:777###Move If from Example:1 to Example:1
	if (TYPE_1.METHOD_2(getActivity(), this)) {
	    VAR_2 = VAR_1;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 != VAR_1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(getActivity(), this)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:778###Insert Invocation at Example:1
	new java.lang.StringBuilder().append(VAR_1).append(STRING_1).append(VAR_2).toString()
 ||| Insert Invocation at Example:1
	new java.lang.StringBuilder().append(VAR_1).append(STRING_1).append(VAR_2)
 ||| Insert Invocation at Example:1
	new java.lang.StringBuilder().append(VAR_1).append(STRING_1)
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Insert Invocation at Example:1
	new java.lang.StringBuilder().append(VAR_1)
 ||| Insert TypeAccess at Example:1
	STRING_1
 ||| Insert ConstructorCall at Example:1
	new java.lang.StringBuilder()
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 + STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 + STRING_1) + VAR_2
 ||| 
LINE:779###Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| 
LINE:780###Insert BinaryOperator at Example:1
	 != null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:781###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 instanceof TYPE_3)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_4)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1 instanceof TYPE_4)
 ||| 
LINE:782###Move LocalVariable from Example:1 to Example:1
	android.content.Intent i = new android.content.Intent(this, VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(i)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2 == 1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == 1) {
	
	
	}
 ||| 
LINE:783###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_3()
 ||| 
LINE:784###Move UnaryOperator from Example:1 to Example:1
	VAR_3++
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	
	}
 ||| 
LINE:785###Move Return from Example:1 to Example:1
	return java.lang.Double.METHOD_3(this.VAR_1.get(STRING_1))
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Literal at Example:1
	0.0
 ||| Delete Return at Example:1
	return 0.0
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    return 0.0;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    return 0.0;
	}
 ||| 
LINE:786###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2 != null)
 ||| 
LINE:787###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(position, VAR_1)
 ||| 
LINE:788###Insert ConstructorCall at Example:1
	new java.lang.String()
 ||| Move BinaryOperator from Example:1 to Example:1
	(STRING_1 + STRING_2) + VAR_1.METHOD_2().getValue()
 ||| 
LINE:789###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Literal at Example:1
	1
 ||| Delete Conditional at Example:1
	(VAR_2 ? -1 : 1)
 ||| Delete BinaryOperator at Example:1
	 * (VAR_2 ? -1 : 1)
 ||| 
LINE:790###Insert BinaryOperator at Example:1
	 + 
 ||| Update BinaryOperator at Example:1
	 to ((((y - c) + 0.0) * b) / VAR_1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(((y - c) * b) / VAR_1) + a
 ||| Move FieldRead from Example:1 to Example:1
	a
 ||| Update BinaryOperator at Example:1
	(((y - c) * ) / ) to (((y - c) + 0.0) * b)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Update BinaryOperator at Example:1
	((y - c) * ) to ((y - c) + 0.0)
 ||| Move FieldRead from Example:1 to Example:1
	b
 ||| Insert Literal at Example:1
	0.0
 ||| 
LINE:791###Move Return from Example:1 to Example:1
	return VAR_3.get(0).METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.isEmpty()
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.isEmpty()) {
	    return 0;
	} else {
	
	}
 ||| 
LINE:792###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(METHOD_3())
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	fail()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    fail();
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	    fail();
	    return null;
	}
 ||| 
LINE:793###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:794###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| 
LINE:795###Insert Assert at Example:1
	assert 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(TYPE_1.METHOD_4()).METHOD_5()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.assertTrue()
 ||| 
LINE:796###Move Invocation from Example:1 to Example:1
	obj.METHOD_1(VAR_2)
 ||| Delete TypeReference at Example:1
	java.lang.Throwable
 ||| Delete CatchVariable at Example:1
	java.lang.Throwable t
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Invocation at Example:1
	t.METHOD_2()
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Invocation at Example:1
	VAR_3.error(t.METHOD_2(), t)
 ||| Delete Catch at Example:1
	 catch (java.lang.Throwable t) {
	    VAR_3.error(t.METHOD_2(), t);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Throwable t) {
	    VAR_3.error(t.METHOD_2(), t);
	}
 ||| 
LINE:797###Move Return from Example:1 to Example:1
	return VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2().contains(VAR_1)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && VAR_2.METHOD_2().contains(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && VAR_2.METHOD_2().contains(VAR_1)) {
	
	} else {
	    return null;
	}
 ||| 
LINE:798###Move Invocation from Example:1 to Example:1
	VAR_1.replace("\t", STRING_1).replace("\n", STRING_2).replace(STRING_3, STRING_1)
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_4
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_5
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.replace(, )
 ||| 
LINE:799###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:800###Move ForEach from Example:1 to Example:1
	for (TYPE_2 VAR_3 : VAR_2) {
	    VAR_3.METHOD_1(VAR_1);
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:801###Delete TypeAccess at Example:1
	VAR_7
 ||| Delete Invocation at Example:1
	VAR_7.METHOD_4()
 ||| 
LINE:802###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_2()
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:803###Insert Parameter at Example:1
	final  buffer
 ||| Insert Parameter at Example:1
	final  offset
 ||| Insert Parameter at Example:1
	final  length
 ||| Move ArrayTypeReference from Example:1 to Example:1
	byte[]
 ||| Insert VirtualEle at Example:1
	
 ||| Move TypeReference from Example:1 to Example:1
	int
 ||| Insert VirtualEle at Example:1
	
 ||| Move TypeReference from Example:1 to Example:1
	int
 ||| Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Delete Parameter at Example:1
	 buffer
 ||| Delete Parameter at Example:1
	 offset
 ||| Delete Parameter at Example:1
	 length
 ||| 
LINE:804###Move Invocation from Example:1 to Example:1
	VAR_2.remove(VAR_1)
 ||| Insert Invocation at Example:1
	VAR_2.get(VAR_1)
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| 
LINE:805###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2.add(name, value)
 ||| Delete VariableRead at Example:1
	value
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	value != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (value != null) {
	
	}
 ||| 
LINE:806###Update Parameter at Example:1
	int VAR_1 to float x
 ||| Update Parameter at Example:1
	int VAR_2 to float y
 ||| Update TypeReference at Example:1
	int to float
 ||| Update TypeReference at Example:1
	int to float
 ||| 
LINE:807###Move Return from Example:1 to Example:1
	return METHOD_2(VAR_1.key + 1)
 ||| Delete VariableRead at Example:1
	node
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	node != null
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (node != null)
	
	else
	    return null;
 ||| 
LINE:808###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() == 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2.size() == 0)
 ||| 
LINE:809###Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:810###Insert VariableRead at Example:1
	key
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| 
LINE:811###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : 0
 ||| 
LINE:812###Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_1)
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2()
 ||| 
LINE:813###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + this)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + this) + STRING_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3((STRING_1 + this) + STRING_2)
 ||| Delete Block at Example:1
	
	    TYPE_1.METHOD_3((STRING_1 + this) + STRING_2);
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2())
	    TYPE_1.METHOD_3((STRING_1 + this) + STRING_2);
 ||| 
LINE:814###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| 
LINE:815###Move Invocation from Example:1 to Example:1
	METHOD_1()
 ||| Delete UnaryOperator at Example:1
	!
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (!) {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:816###Update Invocation at Example:1
	 to VAR_1.contains(VAR_2.getType())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.getType().METHOD_2()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.contains()
 ||| 
LINE:817###Move Invocation from Example:1 to Example:1
	this.VAR_3.add(VAR_1)
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_3
 ||| Delete Literal at Example:1
	0
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_3.add(0, VAR_1)
 ||| Delete Block at Example:1
	{
	    this.VAR_3.add(0, VAR_1);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	    this.VAR_3.add(0, VAR_1);
	} else {
	
	}
 ||| 
LINE:818###Move Parameter from Example:1 to Example:1
	long VAR_1
 ||| 
LINE:819###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	((TYPE_1) (METHOD_2()))
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	((TYPE_1) (METHOD_2())).METHOD_3(null)
 ||| 
LINE:820###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this, STRING_1, VAR_2)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this, STRING_1, VAR_2).show()
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_1 = false
 ||| 
LINE:821###Delete VariableRead at Example:1
	context
 ||| Delete VariableRead at Example:1
	context
 ||| Delete VariableRead at Example:1
	context
 ||| 
LINE:822###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!TYPE_3.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!TYPE_3.METHOD_2()) {
	
	
	}
 ||| 
LINE:823###Move Parameter from Example:1 to Example:1
	java.lang.Object VAR_1
 ||| 
LINE:824###Delete FieldRead at Example:1
	VAR_4
 ||| Delete UnaryOperator at Example:1
	!VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_3(STRING_1)
 ||| Delete Block at Example:1
	
	    VAR_5.METHOD_3(STRING_1);
 ||| Delete If at Example:1
	if (!VAR_4)
	    VAR_5.METHOD_3(STRING_1);
 ||| 
LINE:825###Update Invocation at Example:1
	 to TYPE_2.METHOD_2().METHOD_3(this, VAR_3.get(i))
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(this)
 ||| Insert Invocation at Example:1
	.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.get(i)
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:826###Update Invocation at Example:1
	 to VAR_2.METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.getId(VAR_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:827###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2(VAR_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_2
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete LocalVariable at Example:1
	boolean VAR_3 = 
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(null != VAR_2)
 ||| Delete BinaryOperator at Example:1
	VAR_3 && (null != VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_3(VAR_1, VAR_2)
 ||| Delete Block at Example:1
	{
	    VAR_5.METHOD_3(VAR_1, VAR_2);
	}
 ||| Delete If at Example:1
	if (VAR_3 && (null != VAR_2)) {
	    VAR_5.METHOD_3(VAR_1, VAR_2);
	}
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| 
LINE:828###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:829###Insert ConstructorCall at Example:1
	new java.util.ArrayList()
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:830###Update Wra at Example:1
	 to public
 ||| 
LINE:831###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3().METHOD_4()
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| 
LINE:832###Move BinaryOperator from Example:1 to Example:1
	(type != null)
 ||| Insert Invocation at Example:1
	java.lang.System.out.println()
 ||| Insert FieldRead at Example:1
	java.lang.System.out
 ||| Insert TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	 && VAR_1
 ||| 
LINE:833###Insert Conditional at Example:1
	 ? true : false
 ||| Move BinaryOperator from Example:1 to Example:1
	(METHOD_2(op) / INT_1) > VAR_1.METHOD_3(STRING_1)
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:834###Move UnaryOperator from Example:1 to Example:1
	VAR_1++
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_1, VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 > 1) {
	
	
	}
 ||| 
LINE:835###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_5)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_1(VAR_4)
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_1(VAR_4);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == VAR_2) {
	    VAR_3.METHOD_1(VAR_4);
	} else {
	
	}
 ||| 
LINE:836###Move If from Example:1 to Example:1
	if ((VAR_2 < INT_1) & (VAR_2 > 1)) {
	    VAR_2++;
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	
	}
 ||| 
LINE:837###Update Invocation at Example:1
	 to super.METHOD_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	true
 ||| 
LINE:838###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3, VAR_4.start)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	}
 ||| 
LINE:839###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 == null) || (VAR_1.METHOD_2() == null))
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.name().METHOD_3(VAR_1.METHOD_2())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:840###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Update VariableRead at Example:1
	VAR_1 to VAR_2
 ||| Delete VariableWrite at Example:1
	VAR_2
 ||| Delete Assignment at Example:1
	VAR_2 = 
 ||| 
LINE:841###Insert Invocation at Example:1
	TYPE_2.METHOD_1(new TYPE_3(msg))
 ||| Insert TypeAccess at Example:1
	TYPE_2
 ||| Insert ConstructorCall at Example:1
	new TYPE_3(msg)
 ||| Insert VariableRead at Example:1
	msg
 ||| 
LINE:842###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Insert Literal at Example:1
	false
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Return at Example:1
	return this
 ||| 
LINE:843###Move BinaryOperator from Example:1 to Example:1
	VAR_1 - METHOD_2().METHOD_3().height()
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| 
LINE:844###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1, true)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1, VAR_3)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_4
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_4) {
	    VAR_4.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (TYPE_2 VAR_4) {
	    VAR_4.METHOD_4();
	}
 ||| 
LINE:845###Move Assignment from Example:1 to Example:1
	VAR_1 = new TYPE_1(TYPE_2.METHOD_2(VAR_2), VAR_3, STRING_1)
 ||| 
LINE:846###Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_4.get(VAR_1).getId()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:847###Insert If at Example:1
	if ()
 ||| Move UnaryOperator from Example:1 to Example:1
	(!VAR_1.METHOD_2())
 ||| Insert Block at Example:1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| Delete While at Example:1
	while ((VAR_1 != null) && )
 ||| 
LINE:848###Move BinaryOperator from Example:1 to Example:1
	(STRING_2 + STRING_3)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:849###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:850###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2().toString()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:851###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(this)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:852###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2())
 ||| 
LINE:853###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_4
 ||| Move Assignment from Example:1 to Example:1
	VAR_5 = VAR_1[0]
 ||| Move Assignment from Example:1 to Example:1
	VAR_6 = VAR_1[1]
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(this)
 ||| Delete Block at Example:1
	{
	
	
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	
	
	}
 ||| 
LINE:854###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_1.METHOD_3().METHOD_4(), TYPE_3.METHOD_5(VAR_2))
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:855###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 && VAR_2.METHOD_2()
 ||| 
LINE:856###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(TYPE_1.METHOD_3(VAR_1, STRING_1, format, args))
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_1(VAR_2)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_1(VAR_2))
 ||| 
LINE:857###Insert BinaryOperator at Example:1
	VAR_1 == null
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	STRING_1.METHOD_2(VAR_1)
 ||| 
LINE:858###Insert BinaryOperator at Example:1
	 == false
 ||| Update Invocation at Example:1
	 to VAR_2.getText().toString().isEmpty()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2.getText().toString())
 ||| Insert Literal at Example:1
	false
 ||| Update Invocation at Example:1
	 to METHOD_3(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	
	    METHOD_3();
	}
 ||| 
LINE:859###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_3 = TYPE_1.METHOD_2(data)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.add(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_3()
 ||| Delete VariableRead at Example:1
	data
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	data != null
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (data != null) {
	
	
	
	}
 ||| 
LINE:860###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_4) {
	
	
	}
 ||| 
LINE:861###Move Invocation from Example:1 to Example:1
	METHOD_1(this.name, this.VAR_1, this.VAR_2, this.VAR_3, this.VAR_4)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	} else {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:862###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_3 > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 > 0)
 ||| 
LINE:863###Move UnaryOperator from Example:1 to Example:1
	VAR_2--
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.setText(java.lang.Integer.toString(VAR_2))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2 != 1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != 1) {
	
	
	}
 ||| 
LINE:864###Move FieldRead from Example:1 to Example:1
	value
 ||| Delete ConstructorCall at Example:1
	new java.lang.String()
 ||| 
LINE:865###Insert BinaryOperator at Example:1
	( == true)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_1)
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:866###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4().METHOD_5()
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_2, VAR_1.METHOD_4().METHOD_5())
 ||| Delete Block at Example:1
	{
	    METHOD_3(VAR_2, VAR_1.METHOD_4().METHOD_5());
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2()) {
	    METHOD_3(VAR_2, VAR_1.METHOD_4().METHOD_5());
	} else {
	
	}
 ||| 
LINE:867###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1().toString()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_1() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	{
	    return STRING_1;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_1() != null) {
	
	} else {
	    return STRING_1;
	}
 ||| 
LINE:868###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || VAR_2.isEmpty()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if ((VAR_1 == null) || VAR_2.isEmpty())
	    return null;
 ||| 
LINE:869###Delete TypeReference at Example:1
	android.content.Intent
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new android.content.Intent(getActivity(), VAR_1)
 ||| Delete LocalVariable at Example:1
	android.content.Intent i = new android.content.Intent(getActivity(), VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	i
 ||| Delete Invocation at Example:1
	METHOD_2(i)
 ||| 
LINE:870###Move Assignment from Example:1 to Example:1
	VAR_2 = token
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	null != VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (null != VAR_1) {
	
	}
 ||| 
LINE:871###Insert Invocation at Example:1
	.getName()
 ||| Update Invocation at Example:1
	 to VAR_2.getClass()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.getName()
 ||| 
LINE:872###Update BinaryOperator at Example:1
	VAR_2.METHOD_2(VAR_1) == null to VAR_2.METHOD_2(VAR_1) != null
 ||| Move Return from Example:1 to Example:1
	return true
 ||| Move Return from Example:1 to Example:1
	return false
 ||| 
LINE:873###Move Invocation from Example:1 to Example:1
	super.end()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:874###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(true)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == VAR_2) {
	
	}
 ||| 
LINE:875###Insert ConstructorCall at Example:1
	new TYPE_1(, )
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_3).put(VAR_2).array()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, , VAR_4, true)
 ||| 
LINE:876###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == INT_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	(!VAR_2)
 ||| Delete BinaryOperator at Example:1
	(!VAR_2) && 
 ||| 
LINE:877###Move If from Example:1 to Example:1
	if (VAR_2.METHOD_2(VAR_3) >= 0.0F) {
	    VAR_4 = true;
	} else {
	    VAR_4 = false;
	}
 ||| Update Wra at Example:1
	 to protected
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:878###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1, VAR_2)
 ||| Delete FieldWrite at Example:1
	VAR_4
 ||| Delete UnaryOperator at Example:1
	VAR_4++
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    VAR_4++;
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    VAR_4++;
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| 
LINE:879###Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete TypeAccess at Example
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3.length
 ||| Delete BinaryOperator at Example:1
	i < VAR_3.length
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	i
 ||| Delete ArrayWrite at Example:1
	VAR_2[i]
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<java.lang.Integer>(INT_1)
 ||| Delete Assignment at Example:1
	VAR_2[i] = new java.util.ArrayList<java.lang.Integer>(INT_1)
 ||| Delete For at Example:1
	for (int i = 0; i < VAR_3.length; i++)
	    VAR_2[i] = new java.util.ArrayList<java.lang.Integer>(INT_1);
 ||| 
LINE:880###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete ConstructorCall at Example:1
	new TYPE_2()
 ||| Delete Throw at Example:1
	throw new TYPE_2()
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 == 0) {
	    throw new TYPE_2();
	}
 ||| 
LINE:881###Move Return from Example:1 to Example:1
	return VAR_2.substring(0, INT_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2.length() > INT_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	
	    return VAR_1;
 ||| Delete If at Example:1
	if (VAR_2.length() > INT_1) {
	
	} else
	    return VAR_1;
 ||| 
LINE:882###Move Assignment from Example:1 to Example:1
	VAR_4 = VAR_2
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_3(false)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.equals(VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	((TYPE_1) (VAR_3))
 ||| Delete Invocation at Example:1
	((TYPE_1) (VAR_3)).METHOD_2()
 ||| Delete Block at Example:1
	{
	    ((TYPE_1) (VAR_3)).METHOD_2();
	}
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1.equals(VAR_2)) {
	    ((TYPE_1) (VAR_3)).METHOD_2();
	} else {
	
	
	}
 ||| 
LINE:883###Move BinaryOperator from Example:1 to Example:1
	((((getId() + STRING_1) + VAR_1) + STRING_1) + VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1()
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getId()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	( + )
 ||| Delete BinaryOperator at Example:1
	( + ) + 
 ||| 
LINE:884###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:885###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete UnaryOperator at Example:1
	-VAR_1.METHOD_3()
 ||| Delete Return at Example:1
	return -VAR_1.METHOD_3()
 ||| Delete Block at Example:1
	
	    return -VAR_1.METHOD_3();
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2())
	
	else
	    return -VAR_1.METHOD_3();
 ||| 
LINE:886###Move Invocation from Example:1 to Example:1
	VAR_1.set(0)
 ||| Move Invocation from Example:1 to Example:1
	start(VAR_2)
 ||| Delete TypeReference at Example:1
	java.lang.Throwable
 ||| Delete CatchVariable at Example:1
	java.lang.Throwable t
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Invocation at Example:1
	t.METHOD_2()
 ||| Delete Catch at Example:1
	 catch (java.lang.Throwable t) {
	    t.METHOD_2();
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Throwable t) {
	    t.METHOD_2();
	}
 ||| 
LINE:887###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2().METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:888###Move BinaryOperator from Example:1 to Example:1
	(VAR_3.METHOD_1() * VAR_1.METHOD_1())
 ||| Delete FieldRead at Example:1
	id
 ||| Delete BinaryOperator at Example:1
	 + id
 ||| 
LINE:889###Move Literal from Example:1 to Example:1
	false
 ||| Update Literal at Example:1
	 to true
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:890###Move Invocation from Example:1 to Example:1
	this.METHOD_4(VAR_2)
 ||| 
LINE:891###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	
	}
 ||| 
LINE:892###Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:893###Move ConstructorCall from Example:1 to Example:1
	new TYPE_1(VAR_2, VAR_1)
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:894###Move Invocation from Example:1 to Example:1
	this.VAR_2.start()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:895###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_2.get(METHOD_2()))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_2.get(METHOD_2())
 ||| Delete Invocation at Example:1
	VAR_2.get(METHOD_2()).METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_1.isEmpty(VAR_2.get(METHOD_2()).METHOD_3())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.isEmpty(VAR_2.get(METHOD_2()).METHOD_3())) {
	
	}
 ||| 
LINE:896###Update TypeReference at Example:1
	void to boolean
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1, VAR_2, VAR_3, VAR_4, true)
 ||| 
LINE:897###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:898###Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	i < METHOD_2()
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(METHOD_3())
 ||| Delete Invocation at Example:1
	VAR_1.add(new TYPE_1(METHOD_3()))
 ||| Delete For at Example:1
	for (int i = 0; i < METHOD_2(); i++) {
	    VAR_1.add(new TYPE_1(METHOD_3()));
	}
 ||| 
LINE:899###Insert VirtualEle at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| 
LINE:900###Insert ConstructorCall at Example:1
	new TYPE_1(, VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3().METHOD_4().METHOD_5()
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, VAR_2)
 ||| 
LINE:901###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_1)
 ||| 
LINE:902###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:903###Update Method at Example:1
	public static void METHOD_1(int VAR_1, int VAR_2) {
	    java.lang.System.out.println();
	} to public java.lang.String toString(int VAR_1, int VAR_2) {
	    return VAR_3.toString(TYPE_1.METHOD_2(VAR_1, VAR_2));
	}
 ||| Update TypeReference at Example:1
	void to java.lang.String
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.toString(TYPE_1.METHOD_2(VAR_1, VAR_2))
 ||| Delete Wra at Example:1
	
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete Invocation at Example:1
	java.lang.System.out.println()
 ||| 
LINE:904###Move Return from Example:1 to Example:1
	return data == null ? 0 : data.METHOD_1()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(METHOD_3())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(METHOD_3())) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:905###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| 
LINE:906###Move FieldRead from Example:1 to Example:1
	this.message
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:907###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    return VAR_2.METHOD_2();
	} else {
	    return VAR_3;
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Return at Example:1
	return this
 ||| Delete Block at Example:1
	{
	    return this;
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    return this;
	} else 
 ||| 
LINE:908###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| 
LINE:909###Insert OperatorAssignment at Example:1
	this.x -= 
 ||| Insert OperatorAssignment at Example:1
	this.y -= 
 ||| Insert FieldWrite at Example:1
	this.x
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Insert FieldWrite at Example:1
	this.y
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Update ConstructorCall at Example:1
	new TYPE_1(x - , y - ) to new TYPE_1(this)
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Insert TypeAccess at Example
	Example
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	x
 ||| Delete BinaryOperator at Example:1
	x - 
 ||| Delete FieldRead at Example:1
	y
 ||| Delete BinaryOperator at Example:1
	y - 
 ||| 
LINE:910###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	VAR_2 == null ?  : VAR_2
 ||| 
LINE:911###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	id
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + id)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	((STRING_1 + id) + STRING_2)
 ||| Delete BinaryOperator at Example:1
	(((STRING_1 + id) + STRING_2) + )
 ||| 
LINE:912###Move Return from Example:1 to Example:1
	return VAR_3.get(VAR_1).METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2(VAR_1)) {
	
	} else {
	    return false;
	}
 ||| 
LINE:913###Update Parameter at Example:1
	TYPE_1 VAR_1 to java.lang.String message
 ||| Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Insert VariableRead at Example:1
	message
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getText()
 ||| 
LINE:914###Update TypeAccess at Example:1
	VAR_1 to VAR_2
 ||| Update TypeAccess at Example:1
	VAR_1 to VAR_2
 ||| 
LINE:915###Move Return from Example:1 to Example:1
	return METHOD_2(VAR_1, k, null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	k
 ||| Delete Invocation at Example:1
	METHOD_1(k)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_1(k) != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_1(k) != null)
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Return at Example:1
	return -1
 ||| 
LINE:916###Insert BinaryOperator at Example:1
	 == 0
 ||| Update Invocation at Example:1
	 to VAR_4.compareTo(VAR_2.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.equals(VAR_2.METHOD_2())
 ||| Insert Literal at Example:1
	0
 ||| 
LINE:917###
LINE:918###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move ForEach from Example:1 to Example:1
	for (java.lang.String VAR_3 : VAR_1) {
	    VAR_4.add(VAR_3);
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:919###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3().METHOD_4(new TYPE_2(true))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:920###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Block at Example:1
	{
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	} else {
	
	}
 ||| 
LINE:921###Insert Invocation at Example:1
	.toLowerCase()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1()
 ||| 
LINE:922###Move LocalVariable from Example:1 to Example:1
	android.content.Intent VAR_1 = new android.content.Intent(VAR_2, TYPE_1.METHOD_2(VAR_3.METHOD_3()))
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_4) {
	}
 ||| 
LINE:923###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(buffer)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:924###Move Assignment from Example:1 to Example:1
	i = i - 1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:925###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.size() == 0
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_4();
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Block at Example:1
	{
	    METHOD_5();
	}
 ||| Delete If at Example:1
	if (VAR_2.size() == 0) {
	    VAR_1.METHOD_4();
	} else {
	    METHOD_5();
	}
 ||| 
LINE:926###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    throw new TYPE_2(STRING_1);
	}
 ||| 
LINE:927###Update Invocation at Example:1
	 to VAR_3.getType().METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.getType().METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:928###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 & INT_1) << 0)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	(VAR_2 & 1)
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	((VAR_2 & 1) << INT_2)
 ||| Delete BinaryOperator at Example:1
	( | ((VAR_2 & 1) << INT_2))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	(VAR_3 & 1)
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	((VAR_3 & 1) << INT_1)
 ||| Delete BinaryOperator at Example:1
	( | ((VAR_2 & 1) << INT_2)) | ((VAR_3 & 1) << INT_1)
 ||| 
LINE:929###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() > 0
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete LocalVariable at Example:1
	TYPE_2 t
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Invocation at Example:1
	t.METHOD_4()
 ||| Delete ForEach at Example:1
	for (TYPE_2 t : VAR_2) {
	    t.METHOD_4();
	}
 ||| Delete Block at Example:1
	{
	    for (TYPE_2 t : VAR_2) {
	        t.METHOD_4();
	    }
	}
 ||| Delete If at Example:1
	if (VAR_1.size() > 0) {
	    for (TYPE_2 t : VAR_2) {
	        t.METHOD_4();
	    }
	}
 ||| 
LINE:930###Move Assignment from Example:1 to Example:1
	VAR_1 = false
 ||| 
LINE:931###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_2 = TYPE_1.METHOD_2()
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_4
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	
	}
 ||| 
LINE:932###Move Invocation from Example:1 to Example:1
	METHOD_7()
 ||| 
LINE:933###Move If from Example:1 to Example:1
	if (VAR_3) {
	    VAR_3 = false;
	}
 ||| Insert BinaryOperator at Example:1
	 && 
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Move BinaryOperator from Example:1 to Example:1
	null != VAR_2
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:934###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_1(view, VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:935###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(null, VAR_3, position, 0)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:936###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	(!VAR_3)
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_3)
 ||| 
LINE:937###Move BinaryOperator from Example:1 to Example:1
	((string == null) || VAR_1.equals(STRING_1))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_1.equals(STRING_2)
 ||| Delete BinaryOperator at Example:1
	 || VAR_1.equals(STRING_2)
 ||| 
LINE:938###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	
	}
 ||| 
LINE:939###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_3(VAR_2.get().METHOD_4())
 ||| Update TypeReference at Example:1
	TYPE_1<TYPE_2> to TYPE_2
 ||| Update Invocation at Example:1
	 to path.METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	path.METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.get()
 ||| Delete Invocation at Example:1
	VAR_2.get().METHOD_4()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_5()
 ||| Delete Block at Example:1
	{
	    this.METHOD_5();
	}
 ||| Delete If at Example:1
	if () {
	
	} else {
	    this.METHOD_5();
	}
 ||| 
LINE:940###Update Invocation at Example:1
	 to VAR_1.equals(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.trim()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:941###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(this)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_2
 ||| Delete Return at Example:1
	return
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_2) {
	    return;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_2) {
	    return;
	}
 ||| 
LINE:942###Update TypeReference at Example:1
	byte to int
 ||| Insert TypeReference at Example:1
	byte
 ||| 
LINE:943###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2(VAR_1, VAR_2, VAR_3)
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:944###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_2().getString(VAR_3.get(position))
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	null != VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (null != VAR_1) {
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| 
LINE:945###
LINE:946###Move Invocation from Example:1 to Example:1
	remove(TYPE_2.METHOD_2())
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:947###Move If from Example:1 to Example:1
	if (VAR_2 >= INT_1) {
	    VAR_1.METHOD_2();
	} else {
	    VAR_3.start();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:948###Insert FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_5(VAR_3)
 ||| 
LINE:949###Update Method at Example:1
	public void METHOD_1(java.util.List<TYPE_1> VAR_1) {
	    if ((VAR_1 == null) || (VAR_2.size() == 0)) {
	
	        return;
	    }
	    VAR_3.METHOD_1(VAR_1);
	} to public void METHOD_2() {
	    VAR_3.METHOD_2();
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	java.util.List<TYPE_1>
 ||| Delete Parameter at Example:1
	java.util.List<TYPE_1> VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() == 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || (VAR_2.size() == 0)
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	
	    return;
	}
 ||| Delete If at Example:1
	if ((VAR_1 == null) || (VAR_2.size() == 0)) {
	
	    return;
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_1(VAR_1)
 ||| 
LINE:950###Move Invocation from Example:1 to Example:1
	VAR_2.contains(VAR_1.METHOD_2().METHOD_3())
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:951###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_1, VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_1(VAR_1, VAR_2)
 ||| Delete Block at Example:1
	{
	    METHOD_1(VAR_1, VAR_2);
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	} else {
	    METHOD_1(VAR_1, VAR_2);
	}
 ||| 
LINE:952###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(false)
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_2(false);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_1.METHOD_2(false);
	}
 ||| 
LINE:953###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Block at Example:1
	{
	    METHOD_5();
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_3()) {
	
	} else {
	    METHOD_5();
	}
 ||| 
LINE:954###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	listener.METHOD_5()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	
	}
 ||| 
LINE:955###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_1 ?  : null
 ||| 
LINE:956###Insert FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2().METHOD_3(VAR_2, VAR_3)
 ||| 
LINE:957###Move BinaryOperator from Example:1 to Example:1
	(VAR_3[METHOD_2(VAR_1, VAR_2)] == VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1, VAR_2)
 ||| Delete ArrayRead at Example:1
	VAR_3[METHOD_2(VAR_1, VAR_2)]
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete BinaryOperator at Example:1
	(VAR_3[METHOD_2(VAR_1, VAR_2)] == VAR_5)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_3[METHOD_2(VAR_1, VAR_2)] == VAR_5)
 ||| 
LINE:958###Move Parameter from Example:1 to Example:1
	TYPE_2 VAR_1
 ||| Update Parameter at Example:1
	 to java.lang.Integer size
 ||| Update TypeReference at Example:1
	TYPE_2 to java.lang.Integer
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Update VariableRead at Example:1
	 to size
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| 
LINE:959###Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| 
LINE:960###Insert If at Example:1
	if (VAR_1 != null) {
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
	{
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:961###Update Invocation at Example:1
	 to VAR_1.equals(STRING_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.replaceAll(STRING_1, STRING_2)
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	.equals(STRING_2)
 ||| 
LINE:962###Move Invocation from Example:1 to Example:1
	select(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != VAR_1) {
	
	
	}
 ||| 
LINE:963###Move Assignment from Example:1 to Example:1
	this.name = VAR_1.trim()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.isEmpty())
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.trim()
 ||| Delete Invocation at Example:1
	VAR_1.trim().length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.trim().length() > 0)
 ||| Delete BinaryOperator at Example:1
	(!VAR_1.isEmpty()) && (VAR_1.trim().length() > 0)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ((!VAR_1.isEmpty()) && (VAR_1.trim().length() > 0))
 ||| 
LINE:964###Update Wra at Example:1
	 to private
 ||| 
LINE:965###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2.METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_4()
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.METHOD_4())
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_2.METHOD_4())
 ||| 
LINE:966###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:967###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:968###Move Literal from Example:1 to Example:1
	1
 ||| 
LINE:969###Move Invocation from Example:1 to Example:1
	METHOD_2(++VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() - 1)
 ||| Delete BinaryOperator at Example:1
	VAR_1 < (VAR_2.size() - 1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 < (VAR_2.size() - 1))
 ||| 
LINE:970###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_2)
 ||| 
LINE:971###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new java.util.HashMap()
 ||| 
LINE:972###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getId()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_3.getId()
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1 + VAR_3.getId())
 ||| Delete ForEach at Example:1
	for (TYPE_1 VAR_2 : VAR_1) {
	    java.lang.System.out.println(STRING_1 + VAR_3.getId());
	}
 ||| 
LINE:973###Move Invocation from Example:1 to Example:1
	VAR_4.put(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	
	}
 ||| 
LINE:974###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:975###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_2 = false
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	true
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	VAR_3.set(true, 0)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_2 = false;
	    VAR_3.set(true, 0);
	    METHOD_2();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	    VAR_2 = false;
	    VAR_3.set(true, 0);
	    METHOD_2();
	} else {
	
	}
 ||| 
LINE:976###Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| 
LINE:977###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, id)
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	id == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	id == null ? null : 
 ||| 
LINE:978###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1 + result)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:979###Move FieldRead from Example:1 to Example:1
	VAR_6
 ||| 
LINE:980###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return 0;
	}
 ||| 
LINE:981###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1()
 ||| Move If from Example:1 to Example:1
	if (VAR_2.METHOD_2() >= VAR_2.METHOD_3().size()) {
	    METHOD_4();
	} else {
	    VAR_2.METHOD_1();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:982###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2().METHOD_3(TYPE_1.METHOD_4((TYPE_2--) > VAR_2.METHOD_5()))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:983###Delete FieldRead at Example:1
	first
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3()
 ||| Delete Assignment at Example:1
	this.VAR_1 = TYPE_2.METHOD_3()
 ||| Delete FieldWrite at Example:1
	first
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	first = false
 ||| Delete Block at Example:1
	{
	    this.VAR_1 = TYPE_2.METHOD_3();
	    first = false;
	}
 ||| Delete If at Example:1
	if (first) {
	    this.VAR_1 = TYPE_2.METHOD_3();
	    first = false;
	}
 ||| 
LINE:984###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	
	    VAR_2.METHOD_2(VAR_1);
 ||| Delete If at Example:1
	if (VAR_1 != null)
	    VAR_2.METHOD_2(VAR_1);
 ||| 
LINE:985###Move Assignment from Example:1 to Example:1
	TYPE_2.METHOD_2().VAR_2 = null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	TYPE_2.METHOD_2().VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 == TYPE_2.METHOD_2().VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_3(VAR_3, STRING_1)
 ||| Delete Block at Example:1
	{
	    TYPE_3.METHOD_3(VAR_3, STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == TYPE_2.METHOD_2().VAR_2) {
	
	} else {
	    TYPE_3.METHOD_3(VAR_3, STRING_1);
	}
 ||| 
LINE:986###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:987###Update Invocation at Example:1
	 to VAR_1.getName().startsWith(message.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1.getName())
 ||| Move Invocation from Example:1 to Example:1
	message.METHOD_3()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:988###Insert FieldRead at Example:1
	data
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getData()
 ||| 
LINE:989###Update TypeReference at Example:1
	java.lang.String to void
 ||| Insert Invocation at Example:1
	java.lang.System.out.print()
 ||| Insert FieldRead at Example:1
	java.lang.System.out
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.toString()
 ||| Insert TypeAccess at Example:1
	java.lang.System
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:990###Move Invocation from Example:1 to Example:1
	this.VAR_4.METHOD_2().METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_3.size() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.size() > 0) {
	
	}
 ||| 
LINE:991###Move Invocation from Example:1 to Example:1
	this.METHOD_2(VAR_1.replace(replace))
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| 
LINE:992###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 >= 1
 ||| 
LINE:993###Insert Literal at Example:1
	1
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| 
LINE:994###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:995###ERROR: Gumtree failed to process. Message: 
LINE:996###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:997###Move Assignment from Example:1 to Example:1
	state = VAR_2
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| 
LINE:998###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:999###Update FieldRead at Example:1
	((float) (this.VAR_2)) to ((float) (this.VAR_1))
 ||| 
LINE:1000###Delete TypeReference at Example:1
	java.lang.Boolean
 ||| Delete TypeReference at Example:1
	java.util.ArrayList<java.lang.Boolean>
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<>()
 ||| Delete LocalVariable at Example:1
	java.util.ArrayList<java.lang.Boolean> VAR_1 = new java.util.ArrayList<>()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 c
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	c
 ||| Delete Invocation at Example:1
	METHOD_3(c)
 ||| Delete Invocation at Example:1
	VAR_3.add(METHOD_3(c))
 ||| Delete ForEach at Example:1
	for (TYPE_1 c : VAR_2.METHOD_2()) {
	    VAR_3.add(METHOD_3(c));
	}
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_4(VAR_1)
 ||| 
LINE:1001###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_3 : VAR_2) {
	    VAR_4.update();
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1002###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Conditional at Example:1
	VAR_1.METHOD_2() == null ?  : VAR_1.METHOD_2()
 ||| 
LINE:1003###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_3).add(VAR_4.toString())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	(VAR_2--)
 ||| Delete BinaryOperator at Example:1
	(VAR_2--) > 
 ||| Delete Invocation at Example:1
	METHOD_2((VAR_2--) > )
 ||| 
LINE:1004###Move Invocation from Example:1 to Example:1
	super.METHOD_1(text)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	to
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(VAR_1, to)
 ||| Delete Invocation at Example:1
	.METHOD_2(new TYPE_2(VAR_1, to))
 ||| 
LINE:1005###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(args, false)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:1006###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1007###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:1008###Move BinaryOperator from Example:1 to Example:1
	(((((STRING_1 + STRING_2) + value) + STRING_3) + VAR_1) + STRING_4)
 ||| Move FieldRead from Example:1 to Example:1
	CHAR_1
 ||| Delete FieldRead at Example:1
	STRING_4
 ||| Delete FieldRead at Example:1
	STRING_5
 ||| Delete BinaryOperator at Example:1
	( + STRING_5)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(( + STRING_5) + VAR_2)
 ||| Delete BinaryOperator at Example:1
	(( + STRING_5) + VAR_2) + 
 ||| 
LINE:1009###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.remove()
 ||| Delete Try at Example:1
	try {
	
	} finally {
	
	}
 ||| 
LINE:1010###Update Invocation at Example:1
	 to VAR_1.METHOD_2().add(VAR_2.get(i))
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.get(i).METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	.add()
 ||| 
LINE:1011###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_2, METHOD_2(VAR_3), METHOD_3(VAR_3))
 ||| Delete Invocation at Example:1
	VAR_1.add(new TYPE_1(VAR_2, METHOD_2(VAR_3), METHOD_3(VAR_3)))
 ||| 
LINE:1012###Delete TypeReference at Example:1
	java.lang.Throwable
 ||| Delete Parameter at Example:1
	java.lang.Throwable VAR_2
 ||| 
LINE:1013###Insert BinaryOperator at Example:1
	 + 1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3.end
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1014###Insert If at Example:1
	if () {
	
	} else {
	    return ;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Block at Example:1
	{
	    return ;
	}
 ||| Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2() ? METHOD_1(VAR_1.METHOD_3()) : VAR_1
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_1.METHOD_3())
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1015###Update Invocation at Example:1
	 to METHOD_2(new android.content.Intent(METHOD_3(), VAR_1).METHOD_4(VAR_2, VAR_3))
 ||| Move Invocation from Example:1 to Example:1
	new android.content.Intent(METHOD_3(), VAR_1).METHOD_4(VAR_2, VAR_3).METHOD_4(VAR_4, VAR_5)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:1016###Insert BinaryOperator at Example:1
	 == STRING_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2().METHOD_3(VAR_1, 0)
 ||| Insert FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.equals(STRING_1)
 ||| 
LINE:1017###Move Invocation from Example:1 to Example:1
	new TYPE_1().execute(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(this, STRING_1, VAR_3)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(this, STRING_1, VAR_3).show()
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(this, STRING_1, VAR_3).show();
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	} else {
	    TYPE_2.METHOD_3(this, STRING_1, VAR_3).show();
	}
 ||| 
LINE:1018###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_5(VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.METHOD_2() > 0
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3().METHOD_4(false)
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_3().METHOD_4(false);
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2() > 0) {
	    VAR_2.METHOD_3().METHOD_4(false);
	
	}
 ||| 
LINE:1019###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    return null;
	}
 ||| 
LINE:1020###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int time
 ||| 
LINE:1021###Delete FieldRead at Example:1
	data
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	data == null
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	size
 ||| Delete BinaryOperator at Example:1
	STRING_1 + size
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_1(STRING_1 + size)
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_1(STRING_1 + size);
	    return 0;
	}
 ||| Delete If at Example:1
	if (data == null) {
	    TYPE_1.METHOD_1(STRING_1 + size);
	    return 0;
	}
 ||| 
LINE:1022###Move Invocation from Example:1 to Example:1
	VAR_5.getValue().toString()
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1023###Move Invocation from Example:1 to Example:1
	VAR_4.remove(VAR_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_2 = new TYPE_1()
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete LocalVariable at Example:1
	TYPE_2 VAR_3 = 
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_1(this, VAR_3, VAR_1)
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_1(this, VAR_3, VAR_1);
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	    VAR_2.METHOD_1(this, VAR_3, VAR_1);
	}
 ||| 
LINE:1024###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:1025###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || (VAR_2 == null)
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if ((VAR_1 == null) || (VAR_2 == null))
	    return false;
 ||| 
LINE:1026###Move Assignment from Example:1 to Example:1
	VAR_5 = true
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.add(VAR_4.path)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4.path
 ||| Delete Invocation at Example:1
	VAR_3.contains(VAR_4.path)
 ||| Delete UnaryOperator at Example:1
	!VAR_3.contains(VAR_4.path)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_3.contains(VAR_4.path)) {
	
	
	}
 ||| 
LINE:1027###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(TYPE_1.METHOD_3(TYPE_1.METHOD_4(VAR_1)))
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1028###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_1()
 ||| Delete Return at Example:1
	return METHOD_2().METHOD_1()
 ||| Delete Block at Example:1
	{
	    return METHOD_2().METHOD_1();
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    return METHOD_2().METHOD_1();
	}
 ||| 
LINE:1029###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int id
 ||| 
LINE:1030###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1, VAR_2, result)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:1031###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(this)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_3 >= INT_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 >= INT_1) {
	
	}
 ||| 
LINE:1032###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:1033###Insert Block at Example:1
 ||| Move Return from Example:1 to Example:1
	return METHOD_1(VAR_1, p, VAR_2.p, true)
 ||| 
LINE:1034###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1035###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete VariableRead at Example:1
	result
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	result == null
 ||| Delete Block at Example:1
	{
	}
 ||| Delete Block at Example:1
	{
	
	
	
	
	}
 ||| Delete If at Example:1
	if (result == null) {
	} else {
	
	
	
	
	}
 ||| 
LINE:1036###Move LocalVariable from Example:1 to Example:1
	int i = VAR_1.METHOD_3(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.get(i).METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() < VAR_2
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() < VAR_2) {
	
	
	}
 ||| 
LINE:1037###Insert FieldRead at Example:1
	name
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	"name"
 ||| Delete Invocation at Example:1
	getString("name")
 ||| 
LINE:1038###Move FieldRead from Example:1 to Example:1
	path
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 + 
 ||| 
LINE:1039###Move Assignment from Example:1 to Example:1
	VAR_1 = context
 ||| 
LINE:1040###Delete FieldRead at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete BinaryOperator at Example:1
	VAR_4 != VAR_5
 ||| Delete TypeAccess at Example:1
	VAR_6
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_6.METHOD_3(VAR_4)
 ||| Delete Block at Example:1
	{
	    VAR_6.METHOD_3(VAR_4);
	}
 ||| Delete If at Example:1
	if (VAR_4 != VAR_5) {
	    VAR_6.METHOD_3(VAR_4);
	}
 ||| 
LINE:1041###Move Invocation from Example:1 to Example:1
	this.METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1042###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(STRING_1, java.lang.String.METHOD_3(VAR_1))
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_3(VAR_2)
 ||| Delete Invocation at Example:1
	.METHOD_2(STRING_2, java.lang.String.METHOD_3(VAR_2))
 ||| 
LINE:1043###Update Invocation at Example:1
	METHOD_2($missing$ = $missing$) to super.METHOD_1(VAR_1)
 ||| Insert SuperAccess at Example:1
	super
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete FieldWrite at Example:1
	$missing$
 ||| Delete FieldRead at Example:1
	$missing$
 ||| Delete Assignment at Example:1
	$missing$ = $missing$
 ||| 
LINE:1044###Update Invocation at Example:1
	 to VAR_1.toString(VAR_2 + VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2 + VAR_3, INT_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:1045###Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| 
LINE:1046###Update Invocation at Example:1
	VAR_4.METHOD_3(VAR_3.METHOD_2()) to java.util.Collections.sort(VAR_4, VAR_3.METHOD_2())
 ||| Insert TypeReference at Example
	java.lang.Object
 ||| Insert TypeAccess at Example:1
	java.util.Collections
 ||| 
LINE:1047###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(super.getActivity(), message, VAR_1).show()
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.getActivity()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	super.getActivity() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (super.getActivity() != null) {
	
	}
 ||| 
LINE:1048###Insert If at Example:1
	if () {
	    return true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	(id == VAR_1)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1(item)
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:1049###Insert BinaryOperator at Example:1
	VAR_2 - VAR_3
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	java.lang.Integer.METHOD_1(VAR_2, VAR_3)
 ||| 
LINE:1050###Update Invocation at Example:1
	VAR_2.METHOD_2(VAR_3.getClass()) to VAR_4.contains(VAR_1)
 ||| Update Invocation at Example:1
	VAR_4.put(VAR_3.getClass(), VAR_1) to VAR_4.add(VAR_1)
 ||| Update TypeAccess at Example:1
	VAR_2 to VAR_4
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getClass()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getClass()
 ||| 
LINE:1051###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1052###Move TypeAccess from Example:1 to Example:1
	INT_1
 ||| 
LINE:1053###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1)
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| 
LINE:1054###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(text + TYPE_2.METHOD_3(), STRING_1, true)
 ||| Delete UnaryOperator at Example:1
	!
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_2)
 ||| Delete Block at Example:1
	{
	    java.lang.System.out.println(STRING_2);
	}
 ||| Delete If at Example:1
	if (!) {
	    java.lang.System.out.println(STRING_2);
	}
 ||| 
LINE:1055###Move Assignment from Example:1 to Example:1
	this.state = state
 ||| Move ForEach from Example:1 to Example:1
	for (TYPE_2 VAR_1 : VAR_2) {
	    VAR_1.METHOD_1(state);
	}
 ||| Delete VariableRead at Example:1
	state
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.state
 ||| Delete BinaryOperator at Example:1
	state != this.state
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (state != this.state) {
	
	
	}
 ||| 
LINE:1056###Move Invocation from Example:1 to Example:1
	VAR_5.getTime()
 ||| 
LINE:1057###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_1(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_4 != null)
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	    if (VAR_4 != null)
	
	
	}
 ||| 
LINE:1058###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete UnaryOperator at Example:1
	!(VAR_1 == null)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!(VAR_1 == null)) {
	
	}
 ||| 
LINE:1059###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:1060###Move Invocation from Example:1 to Example:1
	METHOD_4(new android.content.Intent(this, VAR_2))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_2()) {
	    METHOD_3();
	} else {
	
	}
 ||| 
LINE:1061###Move Invocation from Example:1 to Example:1
	VAR_2.add(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.contains(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.contains(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.contains(VAR_1)) {
	
	}
 ||| 
LINE:1062###Insert BinaryOperator at Example:1
	(() (VAR_3)) - ((int) (VAR_4))
 ||| Insert FieldRead at Example:1
	(() (VAR_3))
 ||| Insert FieldRead at Example:1
	((int) (VAR_4))
 ||| Move TypeReference from Example:1 to Example:1
	int
 ||| Insert TypeReference at Example:1
	int
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	VAR_3 - VAR_4
 ||| Delete Invocation at Example:1
	(() (TYPE_2.METHOD_1(VAR_3 - VAR_4)))
 ||| 
LINE:1063###Move Invocation from Example:1 to Example:1
	METHOD_3(context, VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:1064###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| 
LINE:1065###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	.getName()
 ||| 
LINE:1066###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| 
LINE:1067###Move BinaryOperator from Example:1 to Example:1
	((((this.VAR_1.toString() + STRING_1) + message) + "\n") + METHOD_1())
 ||| Move Literal from Example:1 to Example:1
	"\n"
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1()
 ||| Move Literal from Example:1 to Example:1
	"\n"
 ||| Move FieldRead from Example:1 to Example:1
	message
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1068###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(VAR_2, VAR_3, VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	
	    return 0;
 ||| Delete If at Example:1
	if (VAR_1 != null)
	
	else
	    return 0;
 ||| 
LINE:1069###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| 
LINE:1070###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 < 0
 ||| Delete FieldRead at Example:1
	method
 ||| Delete Invocation at Example:1
	method.METHOD_2()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	method.METHOD_2() - 1
 ||| Delete Conditional at Example:1
	VAR_1 < 0 ? method.METHOD_2() - 1 : 
 ||| 
LINE:1071###Move LocalVariable from Example:1 to Example:1
	TYPE_2 VAR_2 = this.VAR_3.METHOD_2(VAR_1.METHOD_3())
 ||| 
LINE:1072###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3().delete()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.remove(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:1073###Move BinaryOperator from Example:1 to Example:1
	(element.METHOD_2() && element.METHOD_3().METHOD_4(element))
 ||| Move BinaryOperator from Example:1 to Example:1
	(element != null) && (element.METHOD_2() && element.METHOD_3().METHOD_4(element))
 ||| Move Invocation from Example:1 to Example:1
	element.METHOD_2()
 ||| 
LINE:1074###Insert ConstructorCall at Example:1
	new TYPE_1(.getTime())
 ||| Insert Invocation at Example:1
	.getTime()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete LocalVariable at Example:1
	TYPE_3 date = 
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	date
 ||| Delete Invocation at Example:1
	METHOD_1(date)
 ||| 
LINE:1075###Move BinaryOperator from Example:1 to Example:1
	(value != null)
 ||| Delete VariableRead at Example:1
	value
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.end
 ||| Delete BinaryOperator at Example:1
	(value > this.end)
 ||| Delete BinaryOperator at Example:1
	 && (value > this.end)
 ||| 
LINE:1076###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Return at Example:1
	return VAR_2
 ||| Delete Block at Example:1
	
	    return VAR_2;
 ||| Delete If at Example:1
	if (VAR_1 == 0)
	    return VAR_2;
 ||| 
LINE:1077###Update Invocation at Example:1
	 to TYPE_1.METHOD_3(VAR_4)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_4(VAR_4)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3()
 ||| 
LINE:1078###Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:1079###Update BinaryOperator at Example:1
	 to METHOD_2() || ((VAR_1.METHOD_3() - VAR_2) > VAR_3)
 ||| Move BinaryOperator from Example:1 to Example:1
	(((VAR_1.METHOD_3() - VAR_2) > VAR_3) && (VAR_4 > 0))
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_4 > 0)
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:1080###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_2)
 ||| Delete UnaryOperator at Example:1
	!(VAR_1 instanceof TYPE_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!(VAR_1 instanceof TYPE_2)) {
	
	}
 ||| 
LINE:1081###Insert Return at Example:1
	return size(null, true, null, true)
 ||| Insert Invocation at Example:1
	size(null, true, null, true)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert Literal at Example:1
	null
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	null
 ||| Insert Literal at Example:1
	true
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	count(METHOD_2())
 ||| Delete Return at Example:1
	return count(METHOD_2())
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(VAR_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(VAR_1)
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_1) {
	    throw new TYPE_2(VAR_1);
	}
 ||| Delete Try at Example:1
	try {
	    return count(METHOD_2());
	} catch (TYPE_1 VAR_1) {
	    throw new TYPE_2(VAR_1);
	}
 ||| 
LINE:1082###Insert If at Example:1
	if () {
	    return true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	(build.METHOD_2() == VAR_1) && (METHOD_3(build) == VAR_1)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Literal at Example:1
	false
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:1083###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1084###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 < INT_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1 > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1 > 0)
 ||| 
LINE:1085###Insert If at Example:1
	if (VAR_1 != null)
 ||| Insert BinaryOperator at Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Move If from Example:1 to Example:1
	if (VAR_1.METHOD_2()) {
	    VAR_1.METHOD_3();
	    VAR_2 = VAR_1.METHOD_4();
	    VAR_3 = true;
	}
 ||| 
LINE:1086###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1087###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(new TYPE_1(new TYPE_2(VAR_3)))
 ||| 
LINE:1088###Move If from Example:1 to Example:1
	if (VAR_2.contains(((TYPE_2) (VAR_1)))) {
	    return true;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.contains(((TYPE_2) (VAR_1)))
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1089###Update TypeReference at Example:1
	java.lang.String to void
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2().METHOD_3(VAR_1, false)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1090###Move Invocation from Example:1 to Example:1
	VAR_2.isEmpty(msg)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 || 
 ||| 
LINE:1091###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1)
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = false
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_2).METHOD_3(true)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	
	
	
	}
 ||| 
LINE:1092###Move Return from Example:1 to Example:1
	return num[index]
 ||| Delete VariableRead at Example:1
	index
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.length
 ||| Delete BinaryOperator at Example:1
	index < VAR_1.length
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (index < VAR_1.length) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:1093###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_4, null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getText()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2.getText() != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.getText() != null)
 ||| 
LINE:1094###Insert If at Example:1
	if ()
 ||| Move BinaryOperator from Example:1 to Example:1
	x != 0.0
 ||| Insert Block at Example:1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(TYPE_1.METHOD_1(x))
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1095###Insert BinaryOperator at Example:1
	( + 1)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1096###Update Invocation at Example:1
	VAR_1.get(position) to METHOD_1(position)
 ||| Update TypeAccess at Example:1
	VAR_1 to Example
 ||| 
LINE:1097###Update BinaryOperator at Example:1
	 to VAR_1 <= 0
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 >= INT_1)
 ||| Insert Literal at Example:1
	0
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	(!TYPE_1.METHOD_2())
 ||| Delete BinaryOperator at Example:1
	 && (!TYPE_1.METHOD_2())
 ||| 
LINE:1098###Move If from Example:1 to Example:1
	if (VAR_2 >= VAR_3) {
	    METHOD_2(true);
	}
 ||| Delete Block at Example:1
 ||| 
LINE:1099###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getId()
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_3.getId())
 ||| Delete UnaryOperator at Example:1
	!VAR_2.METHOD_2(VAR_3.getId())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.METHOD_2(VAR_3.getId())) {
	
	}
 ||| 
LINE:1100###Move Invocation from Example:1 to Example:1
	VAR_2.toString().METHOD_2(STRING_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:1101###Update BinaryOperator at Example:1
	 to this.VAR_1 + this.METHOD_3()
 ||| Move BinaryOperator from Example:1 to Example:1
	(this.count * this.VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.count
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete BinaryOperator at Example:1
	( + )
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete BinaryOperator at Example:1
	( + ) * FLOAT_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(( + ) * FLOAT_1)
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_2(( + ) * FLOAT_1) / FLOAT_1
 ||| 
LINE:1102###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_2 + STRING_3, null, VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(VAR_2 + STRING_1)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_2, VAR_3)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 + STRING_1) + TYPE_1.METHOD_2(STRING_2, VAR_3)
 ||| Delete Invocation at Example:1
	VAR_1.assertEquals((VAR_2 + STRING_1) + TYPE_1.METHOD_2(STRING_2, VAR_3), )
 ||| 
LINE:1103###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(height + VAR_3)
 ||| Move FieldRead from Example:1 to Example:1
	height
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	 + VAR_3
 ||| 
LINE:1104###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_5(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_4()
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3(VAR_2.METHOD_4())
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3.METHOD_3(VAR_2.METHOD_4()) == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.METHOD_3(VAR_2.METHOD_4()) == null) {
	
	}
 ||| 
LINE:1105###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	}
 ||| Delete Try at Example:1
	try {
	    METHOD_2();
	} catch (java.lang.Exception VAR_1) {
	}
 ||| 
LINE:1106###Move BinaryOperator from Example:1 to Example:1
	(new TYPE_1().METHOD_2() * METHOD_3())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 - VAR_2
 ||| 
LINE:1107###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:1108###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(id)
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	id != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (id != null) {
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:1109###Move Invocation from Example:1 to Example:1
	java.lang.String.METHOD_2(java.lang.Math.round(VAR_1.METHOD_3()))
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:1110###Delete VariableRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_2();
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	    VAR_3.METHOD_2();
	}
 ||| 
LINE:1111###Move Invocation from Example:1 to Example:1
	VAR_2.delete(VAR_1)
 ||| 
LINE:1112###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1113###Move Invocation from Example:1 to Example:1
	VAR_2.append(c)
 ||| Insert VariableRead at Example:1
	c
 ||| 
LINE:1114###Move Invocation from Example:1 to Example:1
	VAR_1.getName()
 ||| 
LINE:1115###Move Invocation from Example:1 to Example:1
	label.METHOD_1(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.isEmpty())
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (!VAR_2.isEmpty())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	label
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	label.METHOD_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    label.METHOD_1(STRING_1);
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (!VAR_2.isEmpty())) {
	
	} else {
	    label.METHOD_1(STRING_1);
	}
 ||| 
LINE:1116###ERROR: Gumtree failed to process. Message: 
LINE:1117###Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_2(VAR_2.METHOD_3())
 ||| 
LINE:1118###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_2.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_2.METHOD_5())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	
	}
 ||| 
LINE:1119###
LINE:1120###Move Return from Example:1 to Example:1
	return VAR_2.toString()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| 
LINE:1121###Move Try from Example:1 to Example:1
	try {
	    VAR_2.METHOD_1();
	} catch (java.io.IOException VAR_3) {
	    VAR_3.METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:1122###Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_3 <= 1
 ||| Delete Assert at Example:1
	assert VAR_3 <= 1
 ||| 
LINE:1123###Move Invocation from Example:1 to Example:1
	VAR_1.set(VAR_2, VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete UnaryOperator at Example:1
	!METHOD_1()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!METHOD_1())
 ||| 
LINE:1124###Update ConstructorCall at Example:1
	new TYPE_1(java.lang.String.METHOD_2()) to new TYPE_1(((java.lang.String) (VAR_3.get(STRING_1))))
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.get(STRING_1)
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2()
 ||| 
LINE:1125###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1126###Update BinaryOperator at Example:1
	( + 1) >= VAR_3.length to VAR_2 == VAR_3.length
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	( + 1)
 ||| 
LINE:1127###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	!VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_3)
 ||| 
LINE:1128###Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_2, STRING_1)
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_2(VAR_2, STRING_1);
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    TYPE_1.METHOD_2(VAR_2, STRING_1);
	    return;
	}
 ||| 
LINE:1129###Update TypeReference at Example:1
	int to boolean
 ||| Insert Conditional at Example:1
	 ? "true" : "false"
 ||| Move VariableRead from Example:1 to Example:1
	value
 ||| Insert Literal at Example:1
	"true"
 ||| Insert Literal at Example:1
	"false"
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_1()
 ||| 
LINE:1130###Update Wra at Example:1
	 to private
 ||| 
LINE:1131###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| 
LINE:1132###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_1 = VAR_2.METHOD_3().METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:1133###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!TYPE_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(false)
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(false);
	}
 ||| Delete If at Example:1
	if (!TYPE_1.METHOD_2()) {
	    TYPE_2.METHOD_3(false);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| 
LINE:1134###Insert Wra at Example:1
	
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	x
 ||| Delete VariableRead at Example:1
	y
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	height
 ||| Delete Invocation at Example:1
	METHOD_1(x, y, VAR_1, height)
 ||| Delete Return at Example:1
	return METHOD_1(x, y, VAR_1, height)
 ||| 
LINE:1135###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:1136###Move Block from Example:1 to Example:1
	{
	    return 1;
	}
 ||| Move Block from Example:1 to Example:1
	{
	    return -1;
	}
 ||| 
LINE:1137###Insert If at Example:1
	if () {
	    return true;
	} else {
	    return false;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Return at Example:1
	return true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1138###Move Invocation from Example:1 to Example:1
	this.METHOD_2()
 ||| 
LINE:1139###Insert TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	VAR_2 == null ? STRING_1 : VAR_2
 ||| 
LINE:1140###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2().METHOD_3()
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_2) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_2) {
	    return null;
	}
 ||| 
LINE:1141###Update TypeReference at Example:1
	java.lang.Long to int
 ||| 
LINE:1142###Insert FieldRead at Example:1
	message
 ||| Insert Conditional at Example:1
	error != null ? error : 
 ||| Insert FieldRead at Example:1
	message
 ||| Insert BinaryOperator at Example:1
	error != null
 ||| Insert FieldRead at Example:1
	error
 ||| Move FieldRead from Example:1 to Example:1
	STRING_2
 ||| Insert FieldRead at Example:1
	error
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| 
LINE:1143###Update Method at Example:1
	public static boolean METHOD_1(TYPE_1 VAR_1) {
	    return !TYPE_2.METHOD_2(VAR_1);
	} to public static boolean METHOD_2(TYPE_1 VAR_1) {
	    return !TYPE_2.METHOD_1(VAR_1);
	}
 ||| Update Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1) to TYPE_2.METHOD_1(VAR_1)
 ||| 
LINE:1144###Insert BinaryOperator at Example:1
	 + 1
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2().size()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1145###Insert Block at Example:1
	{
	
	}
 ||| Move If from Example:1 to Example:1
	if (VAR_1 < VAR_3.length) {
	    return VAR_4[VAR_1];
	} else {
	    return 0;
	}
 ||| 
LINE:1146###Move Invocation from Example:1 to Example:1
	VAR_5.assertTrue(VAR_4.remove(value))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	VAR_2 == VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	value
 ||| Delete Invocation at Example:1
	VAR_4.remove(value)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_1(VAR_4.remove(value))
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_1(VAR_4.remove(value));
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == VAR_3) {
	    TYPE_2.METHOD_1(VAR_4.remove(value));
	} else {
	
	}
 ||| 
LINE:1147###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3();
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	    VAR_1.METHOD_3();
	}
 ||| 
LINE:1148###Move If from Example:1 to Example:1
	if (TYPE_2.METHOD_2(this, STRING_1) == 0) {
	    java.lang.System.exit(0);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete UnaryOperator at Example:1
	!this.VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!this.VAR_2) {
	
	}
 ||| 
LINE:1149###Insert BinaryOperator at Example:1
	 + 1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1150###Insert If at Example:1
	if () {
	
	}
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(name)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Move Literal from Example:1 to Example:1
	false
 ||| Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(name) ? VAR_2.get(name).METHOD_3() : false
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.get(name).METHOD_3()
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1151###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete ConstructorCall at Example:1
	new java.util.HashSet<TYPE_1>()
 ||| Delete Return at Example:1
	return new java.util.HashSet<TYPE_1>()
 ||| Delete Block at Example:1
	
	    return new java.util.HashSet<TYPE_1>();
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    return new java.util.HashSet<TYPE_1>();
 ||| 
LINE:1152###Insert If at Example:1
	if (VAR_2 == null)
	    return false;
 ||| Insert BinaryOperator at Example:1
	VAR_2 == null
 ||| Insert Block at Example:1
	
	    return false;
 ||| Insert VariableRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:1153###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:1154###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1155###Delete TypeAccess at Example:1
	STRING_1
 ||| 
LINE:1156###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_2.METHOD_3().get(index).VAR_4)
 ||| 
LINE:1157###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	int
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 * VAR_2
 ||| Delete Invocation at Example:1
	((int) (java.lang.Math.round( * VAR_2)))
 ||| 
LINE:1158###Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.p
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2.p != null)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete BinaryOperator at Example:1
	(VAR_2.p != null) && VAR_3.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_4()
 ||| Delete Block at Example:1
	{
	    VAR_4.METHOD_4();
	}
 ||| Delete If at Example:1
	if ((VAR_2.p != null) && VAR_3.METHOD_3()) {
	    VAR_4.METHOD_4();
	}
 ||| 
LINE:1159###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(STRING_1, 0)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.commit()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2(STRING_1, 0);
	    VAR_3.commit();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2(STRING_1, 0);
	    VAR_3.commit();
	}
 ||| 
LINE:1160###Move Return from Example:1 to Example:1
	return false
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete VirtualEle at Example:1
	
 ||| 
LINE:1161###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3.METHOD_3())
 ||| 
LINE:1162###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete VirtualEle at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete FieldWrite at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(METHOD_2())
 ||| Delete Assignment at Example:1
	VAR_3 = new TYPE_3(METHOD_2())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete Block at Example:1
	{
	    VAR_3 = new TYPE_3(METHOD_2());
	    METHOD_3(VAR_3);
	}
 ||| Delete If at Example:1
	if (VAR_3 == null) {
	    VAR_3 = new TYPE_3(METHOD_2());
	    METHOD_3(VAR_3);
	}
 ||| 
LINE:1163###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| 
LINE:1164###Move Invocation from Example:1 to Example:1
	METHOD_2(true)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	}
 ||| 
LINE:1165###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	context
 ||| Delete Invocation at Example:1
	context.METHOD_3()
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(context.METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	context
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4(context, VAR_2)
 ||| 
LINE:1166###Insert FieldRead at Example:1
	.VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:1167###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete Try at Example:1
	try {
	
	} finally {
	
	}
 ||| 
LINE:1168###Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| 
LINE:1169###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	super.put(key, value)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1170###Update Invocation at Example:1
	 to VAR_4.put(VAR_5.getName(), VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.getName().toLowerCase()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.put(, )
 ||| 
LINE:1171###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1, STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	METHOD_4(VAR_4)
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.METHOD_1()
 ||| 
LINE:1172###Update TypeReference at Example:1
	boolean to void
 ||| Insert If at Example:1
	if ()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Insert Block at Example:1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| Delete Return at Example:1
	return  && 
 ||| 
LINE:1173###Delete ArrayTypeReference at Example
	java.lang.String[]
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete NewArray at Example:1
	new java.lang.String[]{ VAR_1, STRING_1 }
 ||| Delete LocalVariable at Example:1
	java.lang.String[] VAR_4 = new java.lang.String[]{ VAR_1, STRING_1 }
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_5.put(VAR_1, VAR_4)
 ||| 
LINE:1174###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1175###Move Return from Example:1 to Example:1
	return VAR_2.get(id)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.startsWith(STRING_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	id
 ||| Delete BinaryOperator at Example:1
	STRING_1 + id
 ||| Delete Invocation at Example:1
	VAR_2.get(STRING_1 + id)
 ||| Delete Return at Example:1
	return VAR_2.get(STRING_1 + id)
 ||| Delete Block at Example:1
	{
	    return VAR_2.get(STRING_1 + id);
	}
 ||| Delete If at Example:1
	if (VAR_1.startsWith(STRING_1)) {
	
	} else {
	    return VAR_2.get(STRING_1 + id);
	}
 ||| 
LINE:1176###Move Invocation from Example:1 to Example:1
	METHOD_3(new android.content.Intent(METHOD_4(), VAR_3))
 ||| 
LINE:1177###Move Invocation from Example:1 to Example:1
	VAR_2.getName()
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1178###Update Invocation at Example:1
	 to name.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(name)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:1179###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	this.VAR_2.METHOD_2(VAR_3, VAR_4, VAR_5)
 ||| 
LINE:1180###Move ForEach from Example:1 to Example:1
	for (java.lang.Integer i : VAR_1) {
	    METHOD_2(i, VAR_3);
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.size() != 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.size() != 0) {
	
	}
 ||| 
LINE:1181###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1182###Insert Assignment at Example:1
	this.VAR_1 = 
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Insert FieldWrite at Example:1
	this.VAR_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(, )
 ||| 
LINE:1183###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(time)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete VariableRead at Example:1
	time
 ||| Delete Invocation at Example:1
	java.lang.Integer.toString(time)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1, java.lang.Integer.toString(time))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1184###Insert BinaryOperator at Example:1
	 > 
 ||| Update BinaryOperator at Example:1
	 to (VAR_1.size() - 1)
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1.size() > VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1185###Move Invocation from Example:1 to Example:1
	fileName.METHOD_2()
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| 
LINE:1186###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(false)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_3)
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	null != VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (null != VAR_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	null != VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (null != VAR_2)
 ||| 
LINE:1187###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| Delete Return at Example:1
	return  || 
 ||| 
LINE:1188###Move BinaryOperator from Example:1 to Example:1
	this.VAR_1 == null
 ||| Delete Literal at Example:1
	false
 ||| Delete Literal at Example:1
	true
 ||| Delete Conditional at Example:1
	 ? false : true
 ||| 
LINE:1189###Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:1190###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1, VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_2, STRING_2, VAR_3)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_2, STRING_2, VAR_3).show()
 ||| 
LINE:1191###Insert If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| 
LINE:1192###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Assignment at Example:1
	VAR_1 = VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	
	    VAR_1 = VAR_2.METHOD_2();
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    VAR_1 = VAR_2.METHOD_2();
 ||| 
LINE:1193###Update Invocation at Example:1
	.METHOD_1() to this.VAR_1.start()
 ||| Insert FieldRead at Example:1
	.VAR_1
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| 
LINE:1194###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(new TYPE_4(VAR_1), ((TYPE_2) (VAR_2)))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	VAR_2 instanceof TYPE_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 instanceof TYPE_2)
 ||| 
LINE:1195###Update Invocation at Example:1
	 to VAR_4.METHOD_3().METHOD_4(VAR_5.toString(), VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.get().toString()
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3()
 ||| Update Invocation at Example:1
	VAR_5.get() to VAR_5.toString()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.METHOD_4(, )
 ||| 
LINE:1196###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == null)
 ||| 
LINE:1197###Insert Conditional at Example:1
	 ? true : false
 ||| Move BinaryOperator from Example:1 to Example:1
	this.VAR_1.size() > 0
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:1198###Move Invocation from Example:1 to Example:1
	VAR_3.setText(STRING_1)
 ||| 
LINE:1199###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1, STRING_2, STRING_3).METHOD_3(STRING_4).METHOD_3(STRING_5)
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_5
 ||| Delete TypeAccess at Example:1
	STRING_6
 ||| Delete Invocation at Example:1
	.METHOD_3(STRING_6)
 ||| Delete Invocation at Example:1
	.METHOD_3(STRING_6).METHOD_3()
 ||| 
LINE:1200###Move Invocation from Example:1 to Example:1
	VAR_1.equals(VAR_2.get(token))
 ||| Insert FieldRead at Example:1
	url
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1201###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	((TYPE_2) (METHOD_2(VAR_2)))
 ||| Delete Invocation at Example:1
	((TYPE_2) (METHOD_2(VAR_2))).show()
 ||| 
LINE:1202###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 + INT_1
 ||| 
LINE:1203###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_1(VAR_2.METHOD_2(), VAR_3.getName(), VAR_1.METHOD_3())
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1204###Update Method at Example:1
	public java.util.List<TYPE_1> METHOD_1(int VAR_1) {
	    return null;
	} to public TYPE_1 get(int id, int VAR_1) {
	    return null;
	}
 ||| Update TypeReference at Example:1
	java.util.List<TYPE_1> to TYPE_1
 ||| Insert Parameter at Example:1
	int id
 ||| Insert TypeReference at Example:1
	int
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| 
LINE:1205###Move Return from Example:1 to Example:1
	return VAR_3.add(VAR_1)
 ||| Move Throw from Example:1 to Example:1
	throw new TYPE_2(STRING_1)
 ||| 
LINE:1206###Insert BinaryOperator at Example:1
	VAR_1 / 
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1, )
 ||| 
LINE:1207###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(TYPE_2.METHOD_3(message))
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    return false;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    return false;
	}
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| 
LINE:1208###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(1)
 ||| 
LINE:1209###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(METHOD_3(VAR_1))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:1210###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3.getText(), VAR_4.getText(), VAR_5.getText())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1211###Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	VAR_3 == true
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	    METHOD_4();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 == true) {
	    METHOD_4();
	} else {
	
	}
 ||| 
LINE:1212###Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(pattern, path, VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    return true;
	}
 ||| 
LINE:1213###Move Return from Example:1 to Example:1
	return VAR_2.get(key)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:1214###Move Assignment from Example:1 to Example:1
	this.key = key
 ||| 
LINE:1215###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:1216###Insert Invocation at Example:1
	java.util.Arrays.asList()
 ||| Insert TypeReference at Example
	java.lang.Object
 ||| Insert TypeAccess at Example:1
	java.util.Arrays
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() < 1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.add()
 ||| Delete Block at Example:1
	{
	    VAR_1.add();
	}
 ||| Delete If at Example:1
	if (VAR_1.size() < 1) {
	    VAR_1.add();
	}
 ||| Delete FieldRead at Example:1
	TYPE_2
 ||| 
LINE:1217###Move Return from Example:1 to Example:1
	return VAR_3.replace(key, VAR_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_1()) {
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(false)
 ||| Delete Return at Example:1
	return TYPE_2.METHOD_2(false)
 ||| 
LINE:1218###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4()
 ||| 
LINE:1219###Move Return from Example:1 to Example:1
	return path.METHOD_3()
 ||| Delete VariableRead at Example:1
	path
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	path != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (path != null) {
	
	} else {
	    return false;
	}
 ||| 
LINE:1220###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(0)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.setText(STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.setText(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.METHOD_1())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(!VAR_1.METHOD_1()) || VAR_2
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if ((!VAR_1.METHOD_1()) || VAR_2) {
	
	
	
	}
 ||| 
LINE:1221###Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	android.view.View
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getContext()
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_3.getContext())
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_3.getContext()).METHOD_3(VAR_4, VAR_1, false)
 ||| Delete LocalVariable at Example:1
	android.view.View VAR_2 = METHOD_2(VAR_3.getContext()).METHOD_3(VAR_4, VAR_1, false)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(VAR_2)
 ||| 
LINE:1222###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	true
 ||| Delete Assignment at Example:1
	VAR_2 = true
 ||| 
LINE:1223###Move Invocation from Example:1 to Example:1
	VAR_1.get(to).METHOD_2(message)
 ||| Delete TypeReference at Example:1
	java.lang.NullPointerException
 ||| Delete CatchVariable at Example:1
	java.lang.NullPointerException VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.NullPointerException VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.NullPointerException VAR_2) {
	}
 ||| 
LINE:1224###Update TypeAccess at Example:1
	VAR_2 to Example
 ||| 
LINE:1225###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	}
 ||| 
LINE:1226###Insert UnaryOperator at Example:1
	!
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = false
 ||| 
LINE:1227###Move Parameter from Example:1 to Example:1
	java.lang.String VAR_1
 ||| 
LINE:1228###Move BinaryOperator from Example:1 to Example:1
	(VAR_2.equals(STRING_1) || VAR_2.equals(STRING_2))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_3)
 ||| Delete BinaryOperator at Example:1
	 || VAR_2.equals(STRING_3)
 ||| 
LINE:1229###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_3();
	}
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move Block from Example:1 to Example:1
	{
	    VAR_2 = getActivity().METHOD_2(this);
	}
 ||| Move Block from Example:1 to Example:1
	{
	    if (VAR_2 != null) {
	        VAR_2.METHOD_3();
	    }
	}
 ||| Insert Assert at Example:1
	assert 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:1230###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| 
LINE:1231###Move Invocation from Example:1 to Example:1
	METHOD_5(position)
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:1232###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(title)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1233###Move Invocation from Example:1 to Example:1
	VAR_2.remove(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.contains(VAR_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.contains(VAR_1))
 ||| 
LINE:1234###Move Return from Example:1 to Example:1
	return false
 ||| Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Move Return from Example:1 to Example:1
	return true
 ||| 
LINE:1235###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(VAR_1)) {
	    return null;
	}
 ||| 
LINE:1236###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_3 > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 > 0)
 ||| 
LINE:1237###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.equals(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_2.info(STRING_2)
 ||| Delete Block at Example:1
	{
	    VAR_2.info(STRING_2);
	}
 ||| Delete If at Example:1
	if (VAR_1.equals(STRING_1)) {
	    VAR_2.info(STRING_2);
	}
 ||| 
LINE:1238###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(VAR_1, this)
 ||| 
LINE:1239###Update ArrayTypeReference at Example:1
	TYPE_1[] to java.lang.String[]
 ||| Update Invocation at Example:1
	METHOD_2(VAR_1, VAR_3, VAR_2, true) to METHOD_1(VAR_1, VAR_3, 0)
 ||| Update Literal at Example:1
	true to 0
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:1240###Insert VariableRead at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_6
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	VAR_6.replace(STRING_2, STRING_3)
 ||| 
LINE:1241###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1)
 ||| 
LINE:1242###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete Assignment at Example:1
	this.VAR_2 = 0
 ||| 
LINE:1243###Update BinaryOperator at Example:1
	 to src == 0
 ||| Move BinaryOperator from Example:1 to Example:1
	(src % INT_2)
 ||| Move Literal from Example:1 to Example:1
	0
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	 == 
 ||| 
LINE:1244###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(null)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| 
LINE:1245###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_4().METHOD_5(STRING_1, VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2().METHOD_3())
 ||| 
LINE:1246###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(response.METHOD_2())
 ||| Delete VariableRead at Example:1
	response
 ||| Delete Invocation at Example:1
	response.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	response.METHOD_2() != null
 ||| Delete Block at Example:1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Block at Example:1
	
	    VAR_1.METHOD_4();
 ||| Delete If at Example:1
	if (response.METHOD_2() != null)
	
	else
	    VAR_1.METHOD_4();
 ||| 
LINE:1247###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_4
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	((TYPE_2) (VAR_3))
 ||| Delete Assignment at Example:1
	this.VAR_4 = ((TYPE_2) (VAR_3))
 ||| 
LINE:1248###Move Return from Example:1 to Example:1
	return METHOD_2().length()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2().length() > 0
 ||| Delete Block at Example:1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.length()
 ||| Delete Return at Example:1
	return VAR_1.length()
 ||| Delete Block at Example:1
	
	    return VAR_1.length();
 ||| Delete If at Example:1
	if (METHOD_2().length() > 0)
	
	else
	    return VAR_1.length();
 ||| 
LINE:1249###Update Method at Example:1
	public void METHOD_1() {
	    this.METHOD_2(new TYPE_1(this.VAR_1));
	} to public void show() {
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(this.VAR_1)
 ||| Delete Invocation at Example:1
	this.METHOD_2(new TYPE_1(this.VAR_1))
 ||| 
LINE:1250###Insert Return at Example:1
	return 
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if () {
	    return true;
	} else {
	    return false;
	}
 ||| 
LINE:1251###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	METHOD_2() != VAR_1
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (METHOD_2() != VAR_1) {
	    return;
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| 
LINE:1252###Update Method at Example:1
	public final java.lang.String METHOD_1() {
	    throw new TYPE_1(STRING_1);
	} to public java.lang.Object getValue() {
	    throw new TYPE_1(STRING_1);
	}
 ||| Update TypeReference at Example:1
	java.lang.String to java.lang.Object
 ||| Delete Wra at Example:1
	
 ||| 
LINE:1253###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.isEmpty()
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.METHOD_1()
 ||| Delete Return at Example:1
	return super.METHOD_1()
 ||| Delete Block at Example:1
	{
	    return super.METHOD_1();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.isEmpty()) {
	    return super.METHOD_1();
	} else {
	
	}
 ||| 
LINE:1254###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(title)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1255###Move Return from Example:1 to Example:1
	return VAR_1.getValue(METHOD_2(key)).METHOD_3().toString()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_2()
 ||| Delete Throw at Example:1
	throw new TYPE_2()
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    throw new TYPE_2();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	    throw new TYPE_2();
	}
 ||| 
LINE:1256###Move Invocation from Example:1 to Example:1
	view.METHOD_2(false)
 ||| Move Invocation from Example:1 to Example:1
	view.METHOD_1(VAR_1.METHOD_3())
 ||| Delete FieldRead at Example:1
	view
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	view != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (view != null) {
	
	
	}
 ||| 
LINE:1257###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2();
	}
 ||| 
LINE:1258###Move Invocation from Example:1 to Example:1
	METHOD_3(new TYPE_2())
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(new TYPE_3(VAR_3))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getView()
 ||| Delete Invocation at Example:1
	VAR_2.getView().METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.getView().METHOD_2() > 0
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2.getView().METHOD_2() > 0) {
	
	
	}
 ||| 
LINE:1259###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(0.0)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() != VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() != VAR_2)
 ||| 
LINE:1260###Insert Block at Example:1
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_1)
 ||| 
LINE:1261###Move Invocation from Example:1 to Example:1
	new TYPE_1().METHOD_1()
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int i = 0
 ||| Delete VariableRead at Example:1
	i
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	i < INT_1
 ||| Delete VariableWrite at Example:1
	i
 ||| Delete UnaryOperator at Example:1
	i++
 ||| Delete For at Example:1
	for (int i = 0; i < INT_1; i++)
 ||| 
LINE:1262###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2 + VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1263###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(false, true)
 ||| Delete BinaryOperator at Example:1
	 && VAR_2.METHOD_2(false, true)
 ||| 
LINE:1264###Move UnaryOperator from Example:1 to Example:1
	(!VAR_1.METHOD_2())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.METHOD_2())
 ||| Delete BinaryOperator at Example:1
	 || (!VAR_2.METHOD_2())
 ||| 
LINE:1265###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	super.METHOD_2(null)
 ||| Delete Block at Example:1
	{
	    super.METHOD_2(null);
	}
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	super.METHOD_2(this)
 ||| Delete Block at Example:1
	{
	    super.METHOD_2(this);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    super.METHOD_2(null);
	} else {
	    super.METHOD_2(this);
	}
 ||| 
LINE:1266###Move If from Example:1 to Example:1
	if (!VAR_1.METHOD_3()) {
	    VAR_1.METHOD_4();
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1267###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:1268###Move BinaryOperator from Example:1 to Example:1
	(((((this.id + STRING_1) + this.name) + STRING_1) + this.VAR_1) + STRING_1)
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.id
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(this.id + STRING_1)
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1269###Move BinaryOperator from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1, VAR_3) == VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_5.put(VAR_1, VAR_3)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    VAR_5.put(VAR_1, VAR_3);
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    VAR_5.put(VAR_1, VAR_3);
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| 
LINE:1270###Move Parameter from Example:1 to Example:1
	int y
 ||| Move BinaryOperator from Example:1 to Example:1
	(x <= VAR_1[0].length)
 ||| Move VariableRead from Example:1 to Example:1
	x
 ||| Move VariableRead from Example:1 to Example:1
	y
 ||| Move VariableRead from Example:1 to Example:1
	y
 ||| Move VariableRead from Example:1 to Example:1
	x
 ||| 
LINE:1271###Insert Invocation at Example:1
	.METHOD_4()
 ||| Update Invocation at Example:1
	 to TYPE_1.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_4()
 ||| 
LINE:1272###Move Invocation from Example:1 to Example:1
	view.METHOD_3(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2)
 ||| 
LINE:1273###Update TypeReference at Example:1
	java.lang.String to int
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.delete(VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:1274###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (this.VAR_1 == null) {
	    return null;
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getTime()
 ||| Delete ConstructorCall at Example:1
	new java.util.Date(VAR_2.getTime())
 ||| 
LINE:1275###Move Return from Example:1 to Example:1
	return this.VAR_1.getText()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.getText()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_1.getText().equals(this.VAR_2)
 ||| Delete UnaryOperator at Example:1
	!this.VAR_1.getText().equals(this.VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	{
	    return STRING_1;
	}
 ||| Delete If at Example:1
	if (!this.VAR_1.getText().equals(this.VAR_2)) {
	
	} else {
	    return STRING_1;
	}
 ||| 
LINE:1276###Move Return from Example:1 to Example:1
	return this.VAR_2.METHOD_1(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(true)
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3(true);
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	    return null;
	} else {
	    VAR_1.METHOD_3(true);
	
	}
 ||| 
LINE:1277###Move Invocation from Example:1 to Example:1
	VAR_2.equals(name)
 ||| Delete VariableRead at Example:1
	n
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(n != null)
 ||| Delete BinaryOperator at Example:1
	(n != null) && 
 ||| 
LINE:1278###Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2("id", STRING_1, STRING_2, STRING_3, STRING_4)
 ||| Delete FieldRead at Example:1
	STRING_5
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(, STRING_5)
 ||| 
LINE:1279###Insert TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete FieldRead at Example:1
	main
 ||| Delete Invocation at Example:1
	main.METHOD_3()
 ||| 
LINE:1280###Move Invocation from Example:1 to Example:1
	((TYPE_1) (target)).METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 > 0) {
	
	}
 ||| 
LINE:1281###Update Invocation at Example:1
	 to VAR_2.substring(0, ((int) (VAR_4)))
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.min(((int) (VAR_4)), VAR_2.length())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move Literal from Example:1 to Example:1
	0
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	.substring(, )
 ||| Delete Conditional at Example:1
	VAR_1 == null ? null : .substring(, )
 ||| 
LINE:1282###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.add(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:1283###Move Invocation from Example:1 to Example:1
	VAR_3.getValue()
 ||| 
LINE:1284###Insert If at Example:1
	if ()
	
	else
	    return ;
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2.size(VAR_1) > 0
 ||| Insert Block at Example:1
 ||| Insert Block at Example:1
	
	    return ;
 ||| Move Return from Example:1 to Example:1
	return VAR_2.size(VAR_1) > 0 ? VAR_3.get(0) : null
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.get(0)
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1285###Delete FieldWrite at Example:1
	VAR_2
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Method at Example:1
	public void METHOD_2() {
	    METHOD_3();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_2() {
	        METHOD_3();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_2() {
	        METHOD_3();
	    }
	}
 ||| Delete Assignment at Example:1
	VAR_2 = new TYPE_2() {
	    public void METHOD_2() {
	        METHOD_3();
	    }
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_3.start(VAR_4, true)
 ||| 
LINE:1286###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| 
LINE:1287###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_5()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2()) {
	
	
	
	}
 ||| 
LINE:1288###Delete FieldWrite at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Assignment at Example:1
	VAR_1 = VAR_2
 ||| Delete FieldWrite at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Assignment at Example:1
	VAR_3 = VAR_4
 ||| 
LINE:1289###Insert TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_3)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_3) + STRING_1
 ||| 
LINE:1290###Update TypeReference at Example:1
	TYPE_1<java.lang.String> to void
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.util.List<java.lang.String>
 ||| Delete Parameter at Example:1
	java.util.List<java.lang.String> VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new java.lang.Exception(STRING_1)
 ||| Delete Invocation at Example:1
	VAR_3.error(new java.lang.Exception(STRING_1))
 ||| Delete Return at Example:1
	return VAR_3.error(new java.lang.Exception(STRING_1))
 ||| Delete Block at Example:1
	{
	    return VAR_3.error(new java.lang.Exception(STRING_1));
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return VAR_3.error(new java.lang.Exception(STRING_1));
	}
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(VAR_1)
 ||| Delete Return at Example:1
	return TYPE_1.METHOD_3(VAR_1)
 ||| 
LINE:1291###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1, element)
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1292###Move Invocation from Example:1 to Example:1
	((float) (VAR_2.get()))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1 ? 0 : 
 ||| 
LINE:1293###Insert TypeAccess at Example:1
	((java.lang.String) (VAR_1))
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2(VAR_1)
 ||| 
LINE:1294###Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete BinaryOperator at Example:1
	 / FLOAT_1
 ||| 
LINE:1295###Insert FieldRead at Example:1
	value
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	VAR_1.replace(STRING_2, STRING_3)
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_4
 ||| Delete Invocation at Example:1
	VAR_1.replace(STRING_2, STRING_3).replace(STRING_1, STRING_4)
 ||| 
LINE:1296###Move Assignment from Example:1 to Example:1
	VAR_1 = view
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_2.METHOD_3() - 1)
 ||| Delete VariableRead at Example:1
	view
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(view != null)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete BinaryOperator at Example:1
	(view != null) && (VAR_1 == null)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if ((view != null) && (VAR_1 == null)) {
	
	
	}
 ||| 
LINE:1297###Insert UnaryOperator at Example:1
	index++
 ||| Insert Wra at Example:1
	
 ||| Insert FieldWrite at Example:1
	index
 ||| Move FieldRead from Example:1 to Example:1
	index
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1298###Move Invocation from Example:1 to Example:1
	VAR_2[i].METHOD_1()
 ||| Delete Wra at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	i
 ||| Delete ArrayRead at Example:1
	VAR_2[i]
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2[i] != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2[i] != null)
 ||| 
LINE:1299###Update Invocation at Example:1
	METHOD_3($missing$ = $missing$) to TYPE_3.METHOD_5(this, VAR_3, VAR_4).show()
 ||| Insert Invocation at Example:1
	TYPE_3.METHOD_5(this, VAR_3, VAR_4)
 ||| Insert TypeAccess at Example:1
	TYPE_3
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example:1
	VAR_3
 ||| Insert TypeAccess at Example:1
	VAR_4
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete FieldWrite at Example:1
	$missing$
 ||| Delete FieldRead at Example:1
	$missing$
 ||| Delete Assignment at Example:1
	$missing$ = $missing$
 ||| 
LINE:1300###Insert If at Example:1
	if (VAR_1 != (-1)) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 != (-1)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert UnaryOperator at Example:1
	(-1)
 ||| Move Assignment from Example:1 to Example:1
	VAR_3[VAR_1] = VAR_2
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1301###Move Invocation from Example:1 to Example:1
	VAR_2.info(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	}
 ||| 
LINE:1302###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| 
LINE:1303###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_3, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete Literal at Example:1
	null
 ||| 
LINE:1304###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:1305###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1306###Move ForEach from Example:1 to Example:1
	for (TYPE_2 c : VAR_3) {
	    c.METHOD_2(VAR_2);
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:1307###Move Invocation from Example:1 to Example:1
	VAR_6.add(VAR_3)
 ||| Delete FieldRead at Example:1
	list
 ||| Delete Synchronized at Example:1
	synchronized(list) {
	
	}
 ||| 
LINE:1308###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Update Invocation at Example:1
	METHOD_2(VAR_3) to METHOD_4(VAR_4)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 && VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_3()
 ||| Delete Invocation at Example:1
	this.METHOD_3().METHOD_4()
 ||| 
LINE:1309###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:1310###Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete LocalVariable at Example:1
	TYPE_3 VAR_5
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_5
 ||| Delete FieldRead at Example:1
	url
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_3(url)
 ||| Delete ForEach at Example:1
	for (TYPE_3 VAR_5 : VAR_4) {
	    VAR_5.METHOD_3(url);
	}
 ||| Delete Block at Example:1
	{
	    for (TYPE_3 VAR_5 : VAR_4) {
	        VAR_5.METHOD_3(url);
	    }
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	    for (TYPE_3 VAR_5 : VAR_4) {
	        VAR_5.METHOD_3(url);
	    }
	}
 ||| 
LINE:1311###Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	message
 ||| Delete Invocation at Example:1
	METHOD_2(message)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	message
 ||| Delete Invocation at Example:1
	VAR_1.update(message)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.get(VAR_3)
 ||| Delete FieldWrite at Example:1
	VAR_2.get(VAR_3).VAR_4
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.size
 ||| Delete OperatorAssignment at Example:1
	VAR_2.get(VAR_3).VAR_4 -= VAR_1.size
 ||| 
LINE:1312###Move Synchronized from Example:1 to Example:1
	synchronized(VAR_1) {
	    VAR_3.remove(VAR_4);
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized() {
	
	}
 ||| 
LINE:1313###Update TypeReference at Example:1
	int to void
 ||| Insert Assignment at Example:1
	VAR_1 = 
 ||| Insert VariableWrite at Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1, temp)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1314###Move BinaryOperator from Example:1 to Example:1
	(VAR_4 >= VAR_5)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	(!VAR_3)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 || (!VAR_3))
 ||| Delete BinaryOperator at Example:1
	(VAR_2 || (!VAR_3)) && 
 ||| 
LINE:1315###Insert BinaryOperator at Example:1
	( - 1)
 ||| Move FieldRead from Example:1 to Example:1
	count
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1316###Move Invocation from Example:1 to Example:1
	VAR_2.content()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3().METHOD_4()
 ||| Delete Invocation at Example:1
	.METHOD_2(VAR_3.METHOD_3().METHOD_4())
 ||| Delete ConstructorCall at Example:1
	new java.lang.String(.METHOD_2(VAR_3.METHOD_3().METHOD_4()))
 ||| 
LINE:1317###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:1318###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 != null) && (message != null))
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2.length() > 0)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:1319###Move If from Example:1 to Example:1
	if (VAR_2.equals(VAR_4)) {
	    return STRING_1;
	} else {
	    return STRING_2;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.equals(VAR_3)
 ||| Move Block from Example:1 to Example:1
	{
	    return STRING_1;
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_4)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	{
	    return STRING_1;
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:1320###Move Return from Example:1 to Example:1
	return VAR_3.getType(VAR_4)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Return at Example:1
	return VAR_2
 ||| Delete Block at Example:1
	
	    return VAR_2;
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (this.METHOD_1())
	    return VAR_2;
	else
 ||| 
LINE:1321###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| 
LINE:1322###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(true, VAR_1, VAR_2)
 ||| 
LINE:1323###Move Return from Example:1 to Example:1
	return VAR_1
 ||| 
LINE:1324###Insert Continue at Example:1
	continue
 ||| Insert UnaryOperator at Example:1
	(!)
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	java.lang.Thread
 ||| Delete Invocation at Example:1
	java.lang.Thread.METHOD_5()
 ||| 
LINE:1325###Move Invocation from Example:1 to Example:1
	VAR_2.put(VAR_1.METHOD_3(), VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2(VAR_1)) {
	
	}
 ||| 
LINE:1326###Insert BinaryOperator at Example:1
	 != null
 ||| Move FieldRead from Example:1 to Example:1
	value
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:1327###Move BinaryOperator from Example:1 to Example:1
	(this.METHOD_2(VAR_1) >> INT_1)
 ||| Move TypeReference from Example:1 to Example:1
	byte
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	(() ( & INT_2))
 ||| 
LINE:1328###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_2, STRING_1)
 ||| 
LINE:1329###Move Invocation from Example:1 to Example:1
	VAR_3.get().METHOD_3(getContext(), VAR_4, VAR_5.title)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1330###Update Method at Example:1
	public synchronized void METHOD_1(boolean VAR_1) throws java.lang.Exception {
	    if (VAR_1) {
	        VAR_2 = false;
	    } else {
	        VAR_3.METHOD_2(VAR_4);
	        VAR_5 = false;
	    }
	    METHOD_3(VAR_3);
	} to protected synchronized void METHOD_3() {
	    VAR_3.METHOD_1();
	}
 ||| Update Invocation at Example:1
	METHOD_3(VAR_3) to VAR_3.METHOD_1()
 ||| Update Wra at Example:1
	 to protected
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_2 = false
 ||| Delete Block at Example:1
	{
	    VAR_2 = false;
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_4)
 ||| Delete FieldWrite at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_5 = false
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_2(VAR_4);
	    VAR_5 = false;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    VAR_2 = false;
	} else {
	    VAR_3.METHOD_2(VAR_4);
	    VAR_5 = false;
	}
 ||| Delete TypeAccess at Example
	Example
 ||| 
LINE:1331###Update TypeReference at Example:1
	java.util.List<java.lang.String> to java.util.Set<java.lang.String>
 ||| 
LINE:1332###Move Invocation from Example:1 to Example:1
	VAR_2.setText(STRING_2)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getText()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.getText().equals(STRING_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.getText().equals(STRING_1))
 ||| 
LINE:1333###Update Method at Example:1
	protected void METHOD_1(TYPE_1 VAR_1) {
	    super.METHOD_2(VAR_1);
	    METHOD_3(VAR_2, VAR_3);
	} to protected void METHOD_2(TYPE_1 VAR_1) {
	    super.METHOD_2(VAR_1);
	    METHOD_3(VAR_2, VAR_3);
	}
 ||| 
LINE:1334###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| 
LINE:1335###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| 
LINE:1336###Move Return from Example:1 to Example:1
	return VAR_3
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Literal at Example:1
	0
 ||| Delete LocalVariable at Example:1
	int VAR_1 = 0
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 < VAR_2
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	VAR_1++
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_4
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_4) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_4) {
	}
 ||| Delete For at Example:1
	for (int VAR_1 = 0; VAR_1 < VAR_2; VAR_1++)
	    try {
	
	    } catch (TYPE_2 VAR_4) {
	    }
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:1337###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeReference at Example
	java.lang.Integer
 ||| Delete TypeAccess at Example:1
	java.util.Arrays
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.util.Arrays.asList(VAR_1)
 ||| Delete BinaryOperator at Example:1
	STRING_1 + java.util.Arrays.asList(VAR_1)
 ||| Delete Invocation at Example:1
	VAR_2.info(STRING_1 + java.util.Arrays.asList(VAR_1))
 ||| 
LINE:1338###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_2()) {
	
	}
 ||| 
LINE:1339###Move If from Example:1 to Example:1
	if (VAR_5.METHOD_2()) {
	    VAR_6.METHOD_3(true);
	}
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.setText(VAR_4)
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_5.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1340###Insert BinaryOperator at Example:1
	 && VAR_2.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(STRING_1, STRING_2)
 ||| Insert Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Insert VariableRead at Example:1
	VAR_2
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_2
 ||| 
LINE:1341###Insert BinaryOperator at Example:1
	 + 
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.append()
 ||| 
LINE:1342###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_4.error(STRING_1)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Throw at Example:1
	throw VAR_3
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_3) {
	    VAR_4.error(STRING_1);
	    throw VAR_3;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_3) {
	    VAR_4.error(STRING_1);
	    throw VAR_3;
	}
 ||| 
LINE:1343###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2();
	}
 ||| 
LINE:1344###Delete Wra at Example:1
	
 ||| 
LINE:1345###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3().METHOD_4(VAR_3, VAR_4)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_3.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_3.METHOD_2()) {
	
	}
 ||| 
LINE:1346###Move LocalVariable from Example:1 to Example:1
	java.lang.String VAR_2 = TYPE_4.METHOD_2(STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_5.METHOD_1(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| Delete Block at Example:1
	{
	
	    VAR_1 = ;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	
	    VAR_1 = ;
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:1347###Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.toLowerCase().METHOD_1(string)
 ||| 
LINE:1348###Insert If at Example:1
	if () {
	
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.equals(VAR_3)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!
 ||| Delete While at Example:1
	while (!) {
	
	} 
 ||| 
LINE:1349###Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_2(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2(VAR_3)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_7
 ||| 
LINE:1350###Move Invocation from Example:1 to Example:1
	remove(METHOD_3())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2() > 0) {
	
	}
 ||| 
LINE:1351###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1)
 ||| 
LINE:1352###Update Invocation at Example:1
	 to VAR_1.assertEquals(VAR_2, TYPE_1.METHOD_2(STRING_1).getClass())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(STRING_1).getValue().getClass()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Update Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1).getValue() to TYPE_1.METHOD_2(STRING_1).getClass()
 ||| Delete Invocation at Example:1
	.assertEquals(, )
 ||| 
LINE:1353###Update Method at Example:1
	public TYPE_1 METHOD_1(java.lang.Object VAR_1) {
	    return METHOD_2(VAR_1, true);
	} to public TYPE_1 METHOD_2(int VAR_1) {
	    return METHOD_2(((java.lang.Object) (VAR_1)), true, true);
	}
 ||| Update TypeReference at Example:1
	java.lang.Object to int
 ||| Insert Literal at Example:1
	true
 ||| Insert TypeReference at Example:1
	java.lang.Object
 ||| 
LINE:1354###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_2.equals(METHOD_2())
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.equals(METHOD_2()))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(!VAR_2.equals(METHOD_2())) && VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_2().METHOD_3();
	}
 ||| Delete If at Example:1
	if ((!VAR_2.equals(METHOD_2())) && VAR_3) {
	    METHOD_2().METHOD_3();
	}
 ||| 
LINE:1355###Update Method at Example:1
	public void METHOD_1(TYPE_1 event) {
	    java.lang.System.out.println(STRING_1 + VAR_1.getText());
	    if (VAR_1.getText().isEmpty()) {
	        METHOD_2();
	    } else {
	        METHOD_3();
	    }
	} to public void delete(TYPE_1 event) {
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getText()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_1.getText()
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1 + VAR_1.getText())
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getText()
 ||| Delete Invocation at Example:1
	VAR_1.getText().isEmpty()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete If at Example:1
	if (VAR_1.getText().isEmpty()) {
	    METHOD_2();
	} else {
	    METHOD_3();
	}
 ||| 
LINE:1356###Move UnaryOperator from Example:1 to Example:1
	(!this.VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 && this.VAR_2.METHOD_2()
 ||| 
LINE:1357###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2()) {
	
	
	
	}
 ||| 
LINE:1358###Update Invocation at Example:1
	 to assertEquals(VAR_2, VAR_3.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.equals(VAR_2, VAR_3.METHOD_2())
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	assertEquals(true, )
 ||| 
LINE:1359###Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_2(VAR_1.METHOD_3()).METHOD_4()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 / INT_1
 ||| 
LINE:1360###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Insert Literal at Example:1
	true
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| 
LINE:1361###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2.METHOD_4(index))
 ||| Delete VariableRead at Example:1
	index
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	index >= 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (index >= 0) {
	
	}
 ||| 
LINE:1362###Move Parameter from Example:1 to Example:1
	java.lang.String VAR_1
 ||| 
LINE:1363###Update TypeReference at Example:1
	void to TYPE_1
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:1364###Move Invocation from Example:1 to Example:1
	view.METHOD_3(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_4, VAR_5)
 ||| Move If from Example:1 to Example:1
	if (VAR_3.METHOD_5()) {
	    METHOD_6();
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	
	
	}
 ||| 
LINE:1365###Move UnaryOperator from Example:1 to Example:1
	(!this.VAR_2.equals(STRING_1))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null) && 
 ||| 
LINE:1366###Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	( + STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.toString()
 ||| Delete BinaryOperator at Example:1
	( + STRING_1) + this.VAR_2.toString()
 ||| 
LINE:1367###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    return null;
 ||| 
LINE:1368###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() > 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.size() > 1) {
	
	}
 ||| 
LINE:1369###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(true)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1370###Move Invocation from Example:1 to Example:1
	view().METHOD_2(new TYPE_2(list))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	view()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	view() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (view() != null) {
	
	}
 ||| 
LINE:1371###Update Invocation at Example:1
	 to this.VAR_4.delete(VAR_5, VAR_1, null)
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_3.METHOD_2()
 ||| Insert FieldRead at Example:1
	this.VAR_2
 ||| Update FieldRead at Example:1
	this.VAR_3 to this.VAR_4
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_5
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete LocalVariable at Example:1
	final TYPE_1 VAR_2 = 
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.delete(, , )
 ||| 
LINE:1372###Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_2.getValue(VAR_4)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getValue()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2.getValue() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.getValue() != null) {
	
	}
 ||| 
LINE:1373###Move Invocation from Example:1 to Example:1
	VAR_3.add(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2().contains(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!METHOD_2().contains(VAR_1)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!METHOD_2().contains(VAR_1)) {
	
	
	}
 ||| 
LINE:1374###Move Invocation from Example:1 to Example:1
	METHOD_2(true, VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1375###Move Invocation from Example:1 to Example:1
	VAR_1.equals(status)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	status
 ||| Delete Invocation at Example:1
	VAR_2.equals(status)
 ||| Delete BinaryOperator at Example:1
	( || VAR_2.equals(status))
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	status
 ||| Delete Invocation at Example:1
	VAR_3.equals(status)
 ||| Delete BinaryOperator at Example:1
	( || VAR_2.equals(status)) || VAR_3.equals(status)
 ||| 
LINE:1376###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.intValue()
 ||| Delete Conditional at Example:1
	 == null ? 0 : VAR_2.intValue()
 ||| 
LINE:1377###Update Invocation at Example:1
	 to VAR_2.add(0, VAR_3, 0, getString(VAR_4)).METHOD_3(VAR_6)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.add(0, VAR_3, 0, getString(VAR_4)).METHOD_2(VAR_5)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_6
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:1378###Update TypeReference at Example:1
	TYPE_1<?> to java.lang.Class<?>
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	((TYPE_1) (VAR_1.METHOD_2().METHOD_3()))
 ||| 
LINE:1379###Insert TypeAccess at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	VAR_1 - VAR_3
 ||| 
LINE:1380###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1, VAR_2, VAR_3, VAR_4, VAR_5)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	( + STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_6
 ||| Delete BinaryOperator at Example:1
	( + STRING_1) + VAR_6
 ||| 
LINE:1381###Update Method at Example:1
	private java.lang.String METHOD_1(final long value) {
	    return ;
	} to public void add(final java.lang.String fieldName, final long value) {
	    this.add(fieldName, java.lang.String.METHOD_1(value));
	}
 ||| Update TypeReference at Example:1
	java.lang.String to void
 ||| Insert Parameter at Example:1
	final java.lang.String fieldName
 ||| Insert Invocation at Example:1
	this.add(fieldName, )
 ||| Update Wra at Example:1
	 to public
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Insert VirtualEle at Example:1
	
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert VariableRead at Example:1
	fieldName
 ||| Move Invocation from Example:1 to Example:1
	java.lang.String.METHOD_1(value)
 ||| Insert Wra at Example:1
	
 ||| Insert TypeAccess at Example
	Example
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1382###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(new TYPE_3(TYPE_2.METHOD_3()))
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1383###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2((STRING_1 + VAR_2) + STRING_2)
 ||| 
LINE:1384###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2())
 ||| 
LINE:1385###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| 
LINE:1386###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1387###Move Invocation from Example:1 to Example:1
	add(VAR_1)
 ||| 
LINE:1388###Update BinaryOperator at Example:1
	(VAR_1 / ) to (FLOAT_1 * VAR_1)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	FLOAT_1
 ||| 
LINE:1389###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| 
LINE:1390###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(getActivity())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1391###Move Invocation from Example:1 to Example:1
	VAR_1.add(null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_1.contains(null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_1.remove(null)
 ||| Delete Block at Example:1
	
	    VAR_1.remove(null);
 ||| Delete If at Example:1
	if (VAR_1.contains(null))
	    VAR_1.remove(null);
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
 ||| 
LINE:1392###Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == VAR_3)
 ||| Delete BinaryOperator at Example:1
	((VAR_1 == VAR_2) || (VAR_1 == VAR_3))
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	((VAR_1 == VAR_2) || (VAR_1 == VAR_3)) || VAR_4
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (((VAR_1 == VAR_2) || (VAR_1 == VAR_3)) || VAR_4) {
	    return;
	}
 ||| 
LINE:1393###Move Assignment from Example:1 to Example:1
	this.VAR_2 = 0
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	}
 ||| 
LINE:1394###Insert Invocation at Example:1
	super.METHOD_1()
 ||| Insert SuperAccess at Example:1
	super
 ||| Delete TypeAccess at Example:1
	java.lang.Thread
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| Delete Invocation at Example:1
	java.lang.Thread.METHOD_3(INT_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	    java.lang.Thread.METHOD_3(INT_1);
	} catch (TYPE_1 VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| 
LINE:1395###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_3, VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	}
 ||| 
LINE:1396###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.i(VAR_3, STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete UnaryOperator at Example:1
	(!VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete UnaryOperator at Example:1
	(!VAR_5)
 ||| Delete BinaryOperator at Example:1
	(!VAR_4) && (!VAR_5)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((!VAR_4) && (!VAR_5)) {
	
	}
 ||| 
LINE:1397###Move Invocation from Example:1 to Example:1
	VAR_4.show()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	false
 ||| Delete BinaryOperator at Example:1
	VAR_3 == false
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 == false) {
	
	}
 ||| 
LINE:1398###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:1399###Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_1(VAR_4.METHOD_2())
 ||| Delete Block at Example:1
	{
	    METHOD_1(VAR_4.METHOD_2());
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	    METHOD_1(VAR_4.METHOD_2());
	}
 ||| 
LINE:1400###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1).METHOD_3(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Invocation at Example:1
	METHOD_5().METHOD_6()
 ||| Delete Invocation at Example:1
	.METHOD_4(METHOD_5().METHOD_6())
 ||| 
LINE:1401###Update Method at Example:1
	private void METHOD_1() {
	    TYPE_1.METHOD_2(TYPE_2.METHOD_3(), VAR_1.size());
	} to public void METHOD_2(int b) {
	    byte[] buf = new byte[1];
	    buf[0] = ((byte) (b));
	    TYPE_1.METHOD_2(buf, 1);
	}
 ||| Insert Parameter at Example:1
	int b
 ||| Insert LocalVariable at Example:1
	byte[] buf = new byte[1]
 ||| Insert Assignment at Example:1
	buf[0] = ((byte) (b))
 ||| Update Wra at Example:1
	 to public
 ||| Insert TypeReference at Example:1
	int
 ||| Insert ArrayTypeReference at Example:1
	byte[]
 ||| Insert NewArray at Example:1
	new byte[1]
 ||| Insert ArrayWrite at Example:1
	buf[0]
 ||| Insert VariableRead at Example:1
	((byte) (b))
 ||| Insert VariableRead at Example:1
	buf
 ||| Insert Literal at Example:1
	1
 ||| Insert Literal at Example:1
	1
 ||| Insert VariableRead at Example:1
	buf
 ||| Insert Literal at Example:1
	0
 ||| Insert TypeReference at Example:1
	byte
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| 
LINE:1402###Move Return from Example:1 to Example:1
	return VAR_1.delete(key)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_1()) {
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(false)
 ||| Delete Return at Example:1
	return TYPE_2.METHOD_2(false)
 ||| 
LINE:1403###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	}
 ||| 
LINE:1404###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(list)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete BinaryOperator at Example:1
	STRING_2 + VAR_2.size()
 ||| Delete Invocation at Example:1
	VAR_1.i(STRING_1, STRING_2 + VAR_2.size())
 ||| 
LINE:1405###Move Invocation from Example:1 to Example:1
	((TYPE_1) (VAR_1)).METHOD_2()
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete Invocation at Example:1
	java.lang.System.out.println()
 ||| 
LINE:1406###Move Invocation from Example:1 to Example:1
	VAR_3.toString()
 ||| 
LINE:1407###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2()) {
	
	
	
	}
 ||| 
LINE:1408###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Move If from Example:1 to Example:1
	if (!VAR_2.isEmpty(path)) {
	    VAR_3.METHOD_4(path);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:1409###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:1410###Insert BinaryOperator at Example:1
	( != null)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.getType()
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.equals()
 ||| 
LINE:1411###Move If from Example:1 to Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_2(VAR_1);
	} else {
	    METHOD_3(VAR_1);
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1412###Move If from Example:1 to Example:1
	if (METHOD_2() != null) {
	    VAR_2 = METHOD_2().getBoolean(VAR_3);
	}
 ||| 
LINE:1413###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1414###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1415###Update Invocation at Example:1
	 to METHOD_2(STRING_1 + VAR_2.trim())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_2.trim())
 ||| Move TypeAccess from Example to Example
	Example
 ||| Move BinaryOperator from Example:1 to Example:1
	STRING_1 + TYPE_2.METHOD_3(VAR_2.trim())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.trim()
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:1416###Update Method at Example:1
	public long METHOD_1(java.lang.String key, long VAR_1) {
	    java.lang.Object obj = VAR_2.get(key);
	    if (obj == null) {
	        return VAR_1;
	    }
	    return ((long) (obj));
	} to public boolean getBoolean(java.lang.String key, boolean VAR_1) {
	    java.lang.Object obj = VAR_2.get(key);
	    return ((boolean) (obj));
	}
 ||| Update TypeReference at Example:1
	long to boolean
 ||| Update TypeReference at Example:1
	long to boolean
 ||| Update TypeReference at Example:1
	long to boolean
 ||| Delete VariableRead at Example:1
	obj
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	obj == null
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete If at Example:1
	if (obj == null) {
	    return VAR_1;
	}
 ||| 
LINE:1417###ERROR: Gumtree failed to process. Message: 
LINE:1418###Insert BinaryOperator at Example:1
	 || true
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:1419###Move If from Example:1 to Example:1
	if (this.VAR_3 != null) {
	    return this.VAR_4;
	} else {
	    return this.VAR_5;
	}
 ||| Move Block from Example:1 to Example:1
	{
	    return this.VAR_2;
	}
 ||| Move Return from Example:1 to Example:1
	return this.VAR_4
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_5
 ||| Delete Return at Example:1
	return this.VAR_5
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (this.VAR_1)  else 
 ||| 
LINE:1420###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:1421###Update BinaryOperator at Example:1
	 to VAR_1 > VAR_2.size()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2.size() - 1)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 > 
 ||| 
LINE:1422###Move If from Example:1 to Example:1
	if (VAR_3) {
	    VAR_4.add(VAR_1);
	} else {
	    VAR_4.add(this);
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 != null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	VAR_4.add(this)
 ||| Delete Block at Example:1
	{
	    VAR_4.add(this);
	}
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1423###Update Invocation at Example:1
	java.lang.System.out.print( + STRING_1) to java.lang.System.out.println(VAR_1.getData())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.getData()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:1424###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1425###Move LocalVariable from Example:1 to Example:1
	TYPE_1 a = new TYPE_1()
 ||| Move Return from Example:1 to Example:1
	return a
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	VAR_1++
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1 >= 1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 >= 1) {
	
	
	} else
	    return null;
 ||| 
LINE:1426###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(true)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1427###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(event)
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:1428###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_4, VAR_5)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3)
 ||| 
LINE:1429###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_2)
 ||| Delete Literal at Example:1
	0
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| Delete Invocation at Example:1
	.substring(0, INT_1)
 ||| 
LINE:1430###Move BinaryOperator from Example:1 to Example:1
	((VAR_6 + "\t") + VAR_7)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:1431###Move Invocation from Example:1 to Example:1
	name.METHOD_2(STRING_1)
 ||| Delete VariableRead at Example:1
	name
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	name.METHOD_2(STRING_2)
 ||| Delete UnaryOperator at Example:1
	(!name.METHOD_2(STRING_2))
 ||| Delete BinaryOperator at Example:1
	 && (!name.METHOD_2(STRING_2))
 ||| 
LINE:1432###Move Return from Example:1 to Example:1
	return VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	null == VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Return at Example:1
	return VAR_3
 ||| Delete Block at Example:1
	
	    return VAR_3;
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (null == VAR_2)
	    return VAR_3;
	else
 ||| 
LINE:1433###Move Invocation from Example:1 to Example:1
	VAR_2.size()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(this)
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1.METHOD_2(this) ?  : 0
 ||| 
LINE:1434###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.isEmpty()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (this.isEmpty()) {
	    return null;
	}
 ||| 
LINE:1435###Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:1436###Update Wra at Example:1
	 to protected
 ||| 
LINE:1437###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:1438###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1.getData().getString(STRING_1))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getData()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.getData().METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.getData().METHOD_2(STRING_1)) {
	
	}
 ||| 
LINE:1439###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| 
LINE:1440###Move BinaryOperator from Example:1 to Example:1
	(TYPE_1.METHOD_2(c) || TYPE_1.METHOD_3(c))
 ||| Delete VariableRead at Example:1
	c
 ||| Delete FieldRead at Example:1
	CHAR_1
 ||| Delete BinaryOperator at Example:1
	(c == CHAR_1)
 ||| Delete BinaryOperator at Example:1
	 || (c == CHAR_1)
 ||| 
LINE:1441###Move FieldRead from Example:1 to Example:1
	type
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| 
LINE:1442###Insert TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| 
LINE:1443###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || VAR_2.isEmpty()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	TYPE_1
 ||| Delete BinaryOperator at Example:1
	(VAR_3 < TYPE_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(VAR_3 < TYPE_1) > METHOD_2()
 ||| Delete Return at Example:1
	return (VAR_3 < TYPE_1) > METHOD_2()
 ||| Delete Block at Example:1
	{
	    return (VAR_3 < TYPE_1) > METHOD_2();
	}
 ||| Delete If at Example:1
	if ((VAR_1 == null) || VAR_2.isEmpty()) {
	    return (VAR_3 < TYPE_1) > METHOD_2();
	}
 ||| 
LINE:1444###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 * VAR_3)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1445###Update Method at Example:1
	public int METHOD_1(int VAR_1) {
	    return INT_1;
	} to public int min(int VAR_1) {
	    return 1;
	}
 ||| Insert Literal at Example:1
	1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| 
LINE:1446###Move Return from Example:1 to Example:1
	return STRING_1 + METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1) {
	
	}
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Return at Example:1
	return STRING_2
 ||| 
LINE:1447###ERROR: Gumtree failed to process. Message: 
LINE:1448###Move FieldRead from Example:1 to Example:1
	VAR_2.length
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : 0
 ||| 
LINE:1449###Move LocalVariable from Example:1 to Example:1
	android.content.Intent i = new android.content.Intent(context, VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	context.METHOD_3(i)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2()) {
	
	
	}
 ||| 
LINE:1450###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_1(VAR_3, VAR_2)
 ||| Delete ForEach at Example:1
	for (TYPE_1 VAR_3 : VAR_1) {
	    METHOD_1(VAR_3, VAR_2);
	}
 ||| 
LINE:1451###Update Invocation at Example:1
	 to this.METHOD_2().METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	this.METHOD_2().toLowerCase()
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:1452###Move BinaryOperator from Example:1 to Example:1
	(index == null)
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1453###Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getText()
 ||| Delete Invocation at Example:1
	VAR_3.getText().length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_3.getText().length() == 0
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_4(this)
 ||| Delete Invocation at Example:1
	METHOD_3(1, TYPE_1.METHOD_4(this))
 ||| Delete Block at Example:1
	{
	    METHOD_3(1, TYPE_1.METHOD_4(this));
	}
 ||| Delete If at Example:1
	if (VAR_3.getText().length() == 0) {
	    METHOD_3(1, TYPE_1.METHOD_4(this));
	}
 ||| 
LINE:1454###Update Invocation at Example:1
	 to VAR_5.equals(VAR_3.METHOD_2())
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Integer.toString(VAR_3.METHOD_2())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:1455###Move Return from Example:1 to Example:1
	return VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:1456###Move Return from Example:1 to Example:1
	return super.METHOD_1(item)
 ||| Delete Break at Example:1
	break
 ||| Delete Break at Example:1
	break
 ||| 
LINE:1457###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(list)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getId()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.getId() == 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	list
 ||| Delete Invocation at Example:1
	VAR_3.update(list)
 ||| Delete Block at Example:1
	{
	    VAR_3.update(list);
	}
 ||| Delete If at Example:1
	if (VAR_1.getId() == 0) {
	
	} else {
	    VAR_3.update(list);
	}
 ||| 
LINE:1458###Update Invocation at Example:1
	 to VAR_1.startsWith(this.VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.equals(this.VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	this.VAR_2 + STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.startsWith(this.VAR_2 + STRING_1)
 ||| Delete BinaryOperator at Example:1
	 || VAR_1.startsWith(this.VAR_2 + STRING_1)
 ||| 
LINE:1459###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_3, STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_5()
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(VAR_3, STRING_1);
	
	    VAR_2.METHOD_5();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    TYPE_2.METHOD_3(VAR_3, STRING_1);
	
	    VAR_2.METHOD_5();
	}
 ||| 
LINE:1460###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	METHOD_2() && 
 ||| 
LINE:1461###Move Invocation from Example:1 to Example:1
	this.METHOD_3().getValue()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:1462###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 != VAR_2
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete Block at Example:1
	{
	
	    java.lang.System.out.println(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 != VAR_2) {
	
	    java.lang.System.out.println(STRING_1);
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| 
LINE:1463###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.count
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	this.count == 0
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete If at Example:1
	if (this.count == 0) {
	    return VAR_1;
	}
 ||| 
LINE:1464###Move ArrayRead from Example:1 to Example:1
	buf[VAR_1++]
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 & INT_1
 ||| 
LINE:1465###Update TypeReference at Example:1
	java.lang.String to java.io.File
 ||| Insert ConstructorCall at Example:1
	new java.io.File()
 ||| Move Invocation from Example:1 to Example:1
	output.METHOD_2().METHOD_3(STRING_1).METHOD_4()
 ||| 
LINE:1466###Move Invocation from Example:1 to Example:1
	VAR_2.start()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:1467###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1468###Insert Block at Example:1
 ||| Move Return from Example:1 to Example:1
	return this.VAR_5
 ||| 
LINE:1469###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1470###Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	TYPE_5
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	((TYPE_5) (VAR_1.METHOD_2()))
 ||| 
LINE:1471###Update Invocation at Example:1
	 to new TYPE_1().METHOD_2(VAR_2).build()
 ||| Move Invocation from Example:1 to Example:1
	new TYPE_1().METHOD_2(VAR_2).METHOD_3(true)
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	.build()
 ||| 
LINE:1472###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(METHOD_4().getString(VAR_3), getActivity())
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	getActivity() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (getActivity() != null) {
	
	}
 ||| 
LINE:1473###Update Invocation at Example:1
	 to VAR_2.METHOD_2(VAR_4.METHOD_4().METHOD_5() + STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_4.METHOD_4().METHOD_5() + STRING_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1474###Delete FieldRead at Example:1
	to
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	to == VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Block at Example:1
	{
	    METHOD_1();
	}
 ||| Delete If at Example:1
	if (to == VAR_1) {
	    METHOD_1();
	}
 ||| 
LINE:1475###Insert Block at Example:1
	{
	
	}
 ||| Move Return from Example:1 to Example:1
	return VAR_1.METHOD_5(VAR_4, VAR_3.METHOD_4())
 ||| 
LINE:1476###Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:1477###Move Invocation from Example:1 to Example:1
	value.METHOD_1()
 ||| Delete FieldRead at Example:1
	value
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	value != null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	(value != null ?  : 0)
 ||| 
LINE:1478###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    return null;
 ||| 
LINE:1479###Insert If at Example:1
	if ()
	    return false;
 ||| Update BinaryOperator at Example:1
	 to TYPE_1.METHOD_2(VAR_2) && TYPE_1.METHOD_3(VAR_3)
 ||| Move BinaryOperator from Example:1 to Example:1
	(!TYPE_1.METHOD_2(VAR_2)) || (!TYPE_1.METHOD_3(VAR_3))
 ||| Insert Block at Example:1
	
	    return false;
 ||| Insert Literal at Example:1
	true
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(VAR_3)
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:1480###Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Assignment at Example:1
	VAR_1 = null
 ||| 
LINE:1481###Insert FieldRead at Example:1
	text
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.toLowerCase()
 ||| 
LINE:1482###Move Invocation from Example:1 to Example:1
	new TYPE_1().METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	.METHOD_3(true)
 ||| 
LINE:1483###Insert FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 / INT_1
 ||| 
LINE:1484###Move Invocation from Example:1 to Example:1
	new TYPE_2(VAR_1, STRING_2).METHOD_2()
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete Invocation at Example:1
	java.lang.System.out.print()
 ||| 
LINE:1485###Insert BinaryOperator at Example:1
	VAR_1 + 
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Move BinaryOperator from Example:1 to Example:1
	(position / INT_1) * VAR_1
 ||| 
LINE:1486###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(VAR_2, STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	.METHOD_3(VAR_2, STRING_2)
 ||| 
LINE:1487###Update Literal at Example:1
	0 to 1
 ||| 
LINE:1488###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4()
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_3()
 ||| Delete BinaryOperator at Example:1
	TYPE_3.METHOD_3() - 
 ||| 
LINE:1489###Move Invocation from Example:1 to Example:1
	info.METHOD_3(0)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.start()
 ||| Delete FieldRead at Example:1
	info
 ||| Delete Invocation at Example:1
	info.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!info.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete FieldRead at Example:1
	info
 ||| Delete Invocation at Example:1
	info.METHOD_4()
 ||| Delete Block at Example:1
	
	    info.METHOD_4();
 ||| Delete If at Example:1
	if (!info.METHOD_2()) {
	
	
	} else
	    info.METHOD_4();
 ||| 
LINE:1490###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:1491###Insert Parameter at Example:1
	android.content.Context context
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Insert TypeReference at Example:1
	android.content.Context
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1492###Update Literal at Example:1
	false to true
 ||| 
LINE:1493###Update BinaryOperator at Example:1
	( / TYPE_1.METHOD_4()) to (FLOAT_1 * TYPE_1.METHOD_4(METHOD_3() / VAR_1.length))
 ||| Move FieldRead from Example:1 to Example:1
	FLOAT_1
 ||| Update BinaryOperator at Example:1
	 to METHOD_3() / VAR_1.length
 ||| Move BinaryOperator from Example:1 to Example:1
	(FLOAT_1 * METHOD_3())
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1.length
 ||| 
LINE:1494###Insert Block at Example:1
 ||| Move Invocation from Example:1 to Example:1
	state.METHOD_1(VAR_1)
 ||| 
LINE:1495###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_2(VAR_1) == true
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Literal at Example:1
	null
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1, null)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1, null)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(STRING_1, null);
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(VAR_1) == true) {
	
	} else {
	    throw new TYPE_2(STRING_1, null);
	}
 ||| 
LINE:1496###Insert If at Example:1
	if () {
	
	}
 ||| Insert Return at Example:1
	return false
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.getContext() instanceof TYPE_2)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Literal at Example:1
	false
 ||| Move Return from Example:1 to Example:1
	return (VAR_1.getContext() instanceof TYPE_2) && TYPE_3.METHOD_2(element.METHOD_3(), element.METHOD_4())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(element.METHOD_3(), element.METHOD_4())
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:1497###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:1498###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1499###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1.METHOD_3())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 instanceof TYPE_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 instanceof TYPE_2) {
	
	}
 ||| 
LINE:1500###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	    if (VAR_2 != null)
	
	
	}
 ||| 
LINE:1501###Move Return from Example:1 to Example:1
	return this.VAR_1.get(i)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete VariableRead at Example:1
	i
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() > i
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.size() > i)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:1502###Insert Parameter at Example:1
	 path
 ||| Move TypeReference from Example:1 to Example:1
	java.lang.String
 ||| Update VariableRead at Example:1
	url to path
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete LocalVariable at Example:1
	 url = VAR_1.METHOD_2(STRING_1)
 ||| 
LINE:1503###Delete FieldRead at Example:1
	VAR_4
 ||| Delete UnaryOperator at Example:1
	!VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_5.i(STRING_1, STRING_2)
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    VAR_5.i(STRING_1, STRING_2);
	    return;
	}
 ||| Delete If at Example:1
	if (!VAR_4) {
	    VAR_5.i(STRING_1, STRING_2);
	    return;
	}
 ||| 
LINE:1504###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 != VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != VAR_2)
 ||| 
LINE:1505###Update Invocation at Example:1
	 to VAR_1.getString(context, VAR_2, new java.util.Date().toString())
 ||| Move Invocation from Example:1 to Example:1
	java.lang.String.METHOD_2(new java.util.Date().getTime())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Move VariableRead from Example:1 to Example:1
	context
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Update Invocation at Example:1
	new java.util.Date().getTime() to new java.util.Date().toString()
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	.getString(, , )
 ||| 
LINE:1506###Delete TypeReference at Example
	TYPE_1
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_3)
 ||| Delete Method at Example:1
	public void METHOD_2() {
	    TYPE_2.METHOD_3(VAR_3);
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_2() {
	        TYPE_2.METHOD_3(VAR_3);
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_1() {
	    public void METHOD_2() {
	        TYPE_2.METHOD_3(VAR_3);
	    }
	}
 ||| Delete ConstructorCall at Example:1
	new java.lang.Thread(new TYPE_1() {
	    public void METHOD_2() {
	        TYPE_2.METHOD_3(VAR_3);
	    }
	})
 ||| Delete Invocation at Example:1
	new java.lang.Thread(new TYPE_1() {
	    public void METHOD_2() {
	        TYPE_2.METHOD_3(VAR_3);
	    }
	}).start()
 ||| 
LINE:1507###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:1508###Move Invocation from Example:1 to Example:1
	VAR_1.put(key, value)
 ||| Delete VariableRead at Example:1
	value
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	value != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (value != null) {
	
	}
 ||| 
LINE:1509###Move Return from Example:1 to Example:1
	return VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.toString()
 ||| Delete Invocation at Example:1
	java.lang.String.format(STRING_1, this.toString())
 ||| Delete ConstructorCall at Example:1
	new java.lang.NullPointerException(java.lang.String.format(STRING_1, this.toString()))
 ||| Delete Throw at Example:1
	throw new java.lang.NullPointerException(java.lang.String.format(STRING_1, this.toString()))
 ||| Delete Block at Example:1
	
	    throw new java.lang.NullPointerException(java.lang.String.format(STRING_1, this.toString()));
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    throw new java.lang.NullPointerException(java.lang.String.format(STRING_1, this.toString()));
	else
 ||| 
LINE:1510###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(new TYPE_1())
 ||| Delete Block at Example:1
	
	    TYPE_1.METHOD_2(new TYPE_1());
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    TYPE_1.METHOD_2(new TYPE_1());
 ||| 
LINE:1511###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 * INT_1) * FLOAT_1)
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	 * INT_2
 ||| 
LINE:1512###Move Assignment from Example:1 to Example:1
	VAR_8 = 0
 ||| Delete TypeAccess at Example:1
	VAR_6
 ||| Delete TypeAccess at Example:1
	VAR_7
 ||| Delete Invocation at Example:1
	VAR_6.equals(VAR_7)
 ||| Delete UnaryOperator at Example:1
	!VAR_6.equals(VAR_7)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_6.equals(VAR_7))
 ||| 
LINE:1513###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.toString()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.toString()
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:1514###Insert UnaryOperator at Example:1
	++
 ||| Move FieldWrite from Example:1 to Example:1
	this.VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete OperatorAssignment at Example:1
	 *= INT_1
 ||| 
LINE:1515###Move Invocation from Example:1 to Example:1
	view.METHOD_4()
 ||| 
LINE:1516###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(METHOD_2(), VAR_1, i)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1517###Move Assignment from Example:1 to Example:1
	VAR_1 = buffer.METHOD_3()
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = buffer.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:1518###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(STRING_2)
 ||| 
LINE:1519###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3(false)
 ||| Delete Block at Example:1
	{
	    METHOD_2().METHOD_3(false);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    METHOD_2().METHOD_3(false);
	} else {
	
	}
 ||| 
LINE:1520###Update TypeReference at Example:1
	TYPE_1 to TYPE_2
 ||| Move Return from Example:1 to Example:1
	return new TYPE_2()
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_1
 ||| Delete TypeReference at Example:1
	java.util.Scanner
 ||| Delete Parameter at Example:1
	java.util.Scanner VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1 == 1) {
	
	} else {
	    return null;
	}
 ||| 
LINE:1521###Insert VariableRead at Example:1
	message
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.trim()
 ||| 
LINE:1522###Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:1523###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1524###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	new TYPE_1().METHOD_1(VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1525###Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_1)).METHOD_3()
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete BinaryOperator at Example:1
	 * (-1)
 ||| 
LINE:1526###Move Invocation from Example:1 to Example:1
	new TYPE_1(pattern).format(date)
 ||| Delete VariableRead at Example:1
	date
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	date != null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	date != null ?  : null
 ||| 
LINE:1527###Delete TypeReference at Example:1
	TYPE_3
 ||| 
LINE:1528###Update TypeReference at Example:1
	void to boolean
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(1, result)
 ||| 
LINE:1529###Update Invocation at Example:1
	 to new TYPE_1((value / this.VAR_1) * INT_1).METHOD_3(INT_2, VAR_2).METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2((value / this.VAR_1) * INT_1).METHOD_3(INT_2, VAR_2)
 ||| Update Invocation at Example:1
	TYPE_1.METHOD_2() to new TYPE_1((value / this.VAR_1) * INT_1).METHOD_3(INT_2, VAR_2)
 ||| Insert ConstructorCall at Example:1
	new TYPE_1()
 ||| Move TypeAccess from Example:1 to Example:1
	INT_2
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move BinaryOperator from Example:1 to Example:1
	(value / this.VAR_1) * INT_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:1530###Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	((TYPE_2) (VAR_3))
 ||| 
LINE:1531###Move Synchronized from Example:1 to Example:1
	synchronized(VAR_1) {
	    return VAR_1 == null ? 0 : VAR_2.size();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return 0;
	} else {
	
	}
 ||| 
LINE:1532###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(VAR_2)
 ||| Delete UnaryOperator at Example:1
	!
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (!) {
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(STRING_2)
 ||| 
LINE:1533###Update Invocation at Example:1
	 to TYPE_1.METHOD_2(value)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(value)
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1534###Move Return from Example:1 to Example:1
	return ((TYPE_1) (VAR_1.METHOD_3(VAR_4)))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getId()
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_3.getId())
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2(VAR_3.getId()))
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:1535###Move Assignment from Example:1 to Example:1
	VAR_1 = new TYPE_1(getContext(), VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2(VAR_1)
 ||| 
LINE:1536###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_4, null)
 ||| Delete Conditional at Example:1
	VAR_3 == null ? new TYPE_1(VAR_4, null) : 
 ||| 
LINE:1537###Insert Return at Example:1
	return -1
 ||| Insert UnaryOperator at Example:1
	-1
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Insert Literal at Example:1
	1
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1538###Move Return from Example:1 to Example:1
	return VAR_2.equals(((TYPE_1) (VAR_1)).VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return false;
	}
 ||| 
LINE:1539###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(event)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete CatchVariable at Example:1
	TYPE_3 VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_3()
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(TYPE_4.METHOD_2(), TYPE_4.METHOD_3())
 ||| Delete Throw at Example:1
	throw new TYPE_2(TYPE_4.METHOD_2(), TYPE_4.METHOD_3())
 ||| Delete Catch at Example:1
	 catch (TYPE_3 VAR_2) {
	    throw new TYPE_2(TYPE_4.METHOD_2(), TYPE_4.METHOD_3());
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_3 VAR_2) {
	    throw new TYPE_2(TYPE_4.METHOD_2(), TYPE_4.METHOD_3());
	}
 ||| 
LINE:1540###Move Invocation from Example:1 to Example:1
	METHOD_3().METHOD_4(VAR_6, VAR_1, this)
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| 
LINE:1541###Move Return from Example:1 to Example:1
	return VAR_4.METHOD_1(view, VAR_1, VAR_2, VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:1542###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3()
 ||| 
LINE:1543###Move Return from Example:1 to Example:1
	return VAR_2.get(position)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() > 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_2.size() > 0)
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_2.size() > 0))
	
	else
	    return null;
 ||| 
LINE:1544###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_3() > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1.METHOD_3() > 0)
 ||| 
LINE:1545###Move BinaryOperator from Example:1 to Example:1
	((TYPE_2.METHOD_3(CHAR_1, VAR_2.getString(STRING_1)) + VAR_3) + STRING_2)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1546###Move Assignment from Example:1 to Example:1
	VAR_1 = x
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = y
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	x
 ||| Delete VariableRead at Example:1
	y
 ||| Delete Invocation at Example:1
	METHOD_1(x, y)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| 
LINE:1547###Move Invocation from Example:1 to Example:1
	VAR_6.METHOD_3(VAR_2)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:1548###Move If from Example:1 to Example:1
	if (c != null) {
	    VAR_2.remove(VAR_1);
	    VAR_2.add(VAR_1, VAR_3);
	}
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2()
 ||| Move LocalVariable from Example:1 to Example:1
	TYPE_2 c = VAR_1.METHOD_3()
 ||| Delete VariableRead at Example:1
	c
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	c != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1549###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_1(VAR_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1550###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(this, VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	}
 ||| 
LINE:1551###Move Invocation from Example:1 to Example:1
	VAR_2.get(name)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : null
 ||| 
LINE:1552###Move VariableRead from Example:1 to Example:1
	value
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1553###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!VAR_2.isEmpty()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Block at Example:1
	
	    VAR_3.METHOD_2();
 ||| Delete If at Example:1
	if (!VAR_2.isEmpty())
	    VAR_3.METHOD_2();
 ||| 
LINE:1554###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_1, STRING_1)
 ||| Delete Return at Example:1
	return VAR_3.METHOD_2(VAR_1, STRING_1)
 ||| Delete Block at Example:1
	
	    return VAR_3.METHOD_2(VAR_1, STRING_1);
 ||| Delete If at Example:1
	if (VAR_2 != null)
	    return VAR_3.METHOD_2(VAR_1, STRING_1);
 ||| 
LINE:1555###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_4(VAR_3, STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	
	}
 ||| 
LINE:1556###Move Invocation from Example:1 to Example:1
	METHOD_3().METHOD_4(VAR_1, null, this)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:1557###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	( + 1)
 ||| 
LINE:1558###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete Block at Example:1
	{
	    this.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    this.METHOD_2();
	}
 ||| 
LINE:1559###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(id).METHOD_3()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	}
 ||| 
LINE:1560###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    TYPE_1.METHOD_2(STRING_1);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    TYPE_1.METHOD_2(STRING_1);
	}
 ||| 
LINE:1561###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(null)
 ||| 
LINE:1562###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2, VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	(!VAR_1)
 ||| Delete BinaryOperator at Example:1
	(!VAR_1) && 
 ||| 
LINE:1563###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2, super.text)
 ||| Move Assignment from Example:1 to Example:1
	VAR_3[VAR_4] = super.text
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete FieldRead at Example:1
	super.VAR_1
 ||| Delete Invocation at Example:1
	super.VAR_1.length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	super.VAR_1.length() > 0
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (super.VAR_1.length() > 0) {
	
	
	}
 ||| 
LINE:1564###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1565###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1566###Move Parameter from Example:1 to Example:1
	final java.lang.Integer VAR_1
 ||| Move Parameter from Example:1 to Example:1
	final java.lang.Integer VAR_4
 ||| Update ConstructorCall at Example:1
	new TYPE_3(, VAR_2, VAR_3, , VAR_5) to new TYPE_3(VAR_3, VAR_5, VAR_1, VAR_4)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_4
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	java.util.List<TYPE_2>
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final java.util.List<TYPE_2> VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:1567###Update Invocation at Example:1
	 to context.METHOD_3(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	context.METHOD_2()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:1568###Move OperatorAssignment from Example:1 to Example:1
	VAR_3 += VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_2.METHOD_2() >= VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2() >= VAR_1) {
	
	
	}
 ||| 
LINE:1569###Move ConstructorCall from Example:1 to Example:1
	new TYPE_1(VAR_1)
 ||| 
LINE:1570###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	
	}
 ||| 
LINE:1571###ERROR: Gumtree failed to process. Message: 
LINE:1572###Move Return from Example:1 to Example:1
	return METHOD_2().get(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2().get(VAR_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2().get(VAR_1) != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2().get(VAR_1) != null) {
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Return at Example:1
	return METHOD_1()
 ||| 
LINE:1573###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_2 : VAR_1.METHOD_2().METHOD_3()) {
	    if (VAR_2.METHOD_4()) {
	        return true;
	    }
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1574###Delete VariableRead at Example:1
	to
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	to < 0
 ||| Delete VariableWrite at Example:1
	to
 ||| Delete Literal at Example:1
	0
 ||| Delete Assignment at Example:1
	to = 0
 ||| Delete Block at Example:1
	
	    to = 0;
 ||| Delete If at Example:1
	if (to < 0)
	    to = 0;
 ||| 
LINE:1575###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	TYPE_3<TYPE_1>
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	index
 ||| Delete Invocation at Example:1
	METHOD_2(index)
 ||| Delete LocalVariable at Example:1
	TYPE_3<TYPE_1> t = METHOD_2(index)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 || VAR_2
 ||| Delete VariableRead at Example:1
	index
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(index)
 ||| Delete Throw at Example:1
	throw new TYPE_2(index)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_2(index);
	}
 ||| Delete If at Example:1
	if (VAR_1 || VAR_2) {
	    throw new TYPE_2(index);
	}
 ||| 
LINE:1576###Insert BinaryOperator at Example:1
	1 + 
 ||| Insert Literal at Example:1
	1
 ||| Move Invocation from Example:1 to Example:1
	((byte) (VAR_1.METHOD_2(VAR_2)))
 ||| Delete TypeReference at Example:1
	byte
 ||| Delete LocalVariable at Example:1
	byte offset = 
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	VAR_2++
 ||| Delete VariableRead at Example:1
	offset
 ||| 
LINE:1577###Update BinaryOperator at Example:1
	 to VAR_1 == VAR_2.size()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2.size() - 1)
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 == 
 ||| 
LINE:1578###Move Invocation from Example:1 to Example:1
	VAR_2.state().METHOD_2().METHOD_1(METHOD_3(VAR_1))
 ||| Insert VariableRead at Example:1
	view
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.state()
 ||| Delete Invocation at Example:1
	VAR_2.state().METHOD_2()
 ||| Delete Invocation at Example:1
	.commit()
 ||| 
LINE:1579###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(INT_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(INT_1)
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:1580###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_6()
 ||| 
LINE:1581###Move BinaryOperator from Example:1 to Example:1
	(((METHOD_2() + STRING_2) + METHOD_3()) + STRING_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1582###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3.METHOD_2(VAR_1) != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3.METHOD_2(VAR_1) != null)
 ||| 
LINE:1583###Move Invocation from Example:1 to Example:1
	VAR_5.add(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_7
 ||| Delete Invocation at Example:1
	VAR_7.METHOD_2()
 ||| 
LINE:1584###Move Invocation from Example:1 to Example:1
	target.METHOD_1()
 ||| Delete FieldRead at Example:1
	target
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	target != null
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.METHOD_1()
 ||| Delete Conditional at Example:1
	target != null ?  : super.METHOD_1()
 ||| 
LINE:1585###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 != null) && (VAR_1.METHOD_2() != null))
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1.METHOD_2().VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:1586###Move Invocation from Example:1 to Example:1
	VAR_1.error(STRING_1, error)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.error(STRING_2, VAR_2)
 ||| Delete VariableRead at Example:1
	error
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	error != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (error != null) {
	
	
	}
 ||| 
LINE:1587###Move ThisAccess from Example:1 to Example:1
	this
 ||| Delete FieldRead at Example:1
	.VAR_5
 ||| 
LINE:1588###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3().METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2() != null
 ||| Delete Literal at Example:1
	0
 ||| Delete Conditional at Example:1
	METHOD_2() != null ?  : 0
 ||| 
LINE:1589###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:1590###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(this)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_2
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (TYPE_2 VAR_2) {
	}
 ||| 
LINE:1591###Move Invocation from Example:1 to Example:1
	new TYPE_2(METHOD_1()).delete(METHOD_2()).METHOD_3(METHOD_4(VAR_1))
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| 
LINE:1592###Update Invocation at Example:1
	VAR_3.METHOD_4(rows, ) to VAR_3.METHOD_2(rows)
 ||| Insert Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Insert TypeAccess at Example:1
	VAR_3
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| 
LINE:1593###Delete FieldRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_3 == VAR_1
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Return at Example:1
	return VAR_4
 ||| Delete Block at Example:1
	{
	    return VAR_4;
	}
 ||| Delete If at Example:1
	if (VAR_3 == VAR_1) {
	    return VAR_4;
	}
 ||| Delete Block at Example:1
	
	    if (VAR_3 == VAR_1) {
	        return VAR_4;
	    }
 ||| 
LINE:1594###Move Invocation from Example:1 to Example:1
	VAR_2.setEnabled(false)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1595###Move Return from Example:1 to Example:1
	return VAR_2.get(VAR_3.get(VAR_1)).size()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	    return 0;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_4) {
	    return 0;
	}
 ||| 
LINE:1596###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == (-INT_1))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == true)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_2 == true)
 ||| 
LINE:1597###Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(query).METHOD_3()
 ||| 
LINE:1598###Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_2.split(STRING_2))
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1599###Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(TYPE_1.METHOD_3())
 ||| Delete Invocation at Example:1
	VAR_3.assertThat(VAR_2, TYPE_1.METHOD_2(TYPE_1.METHOD_3()))
 ||| 
LINE:1600###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	    METHOD_2(VAR_2);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    METHOD_2(VAR_2);
	} else {
	
	}
 ||| 
LINE:1601###Update TypeParameterReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(null, this, VAR_1, null, null)
 ||| Update TypeReference at Example:1
	java.lang.Class<TYPE_1> to java.lang.String
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeParameter at Example:1
	TYPE_1 extends TYPE_2
 ||| Delete TypeParameterReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Literal at Example:1
	null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1602###Move Assignment from Example:1 to Example:1
	this.VAR_2 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1603###Move BinaryOperator from Example:1 to Example:1
	(VAR_2.METHOD_2() == null)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	(!VAR_1)
 ||| Delete BinaryOperator at Example:1
	(!VAR_1) && 
 ||| 
LINE:1604###Move LocalVariable from Example:1 to Example:1
	java.io.FileInputStream VAR_2 = new java.io.FileInputStream(VAR_1)
 ||| 
LINE:1605###Move If from Example:1 to Example:1
	if (VAR_2) {
	    METHOD_3();
	} else {
	    super.METHOD_1();
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Move Block from Example:1 to Example:1
	{
	    METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:1606###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete Block at Example:1
	
	    TYPE_1.METHOD_2();
 ||| Delete If at Example:1
	if (VAR_1 == 0)
	    TYPE_1.METHOD_2();
 ||| 
LINE:1607###Update Invocation at Example:1
	 to VAR_2.METHOD_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:1608###Insert FieldRead at Example:1
	.size
 ||| Move TypeAccess from Example:1 to Example
	VAR_1
 ||| Delete Invocation at Example:1
	.size()
 ||| 
LINE:1609###Move If from Example:1 to Example:1
	if ((VAR_1 >= INT_1) && (VAR_1 <= INT_2)) {
	    return true;
	}
 ||| Delete TypeReference at Example:1
	java.lang.NullPointerException
 ||| Delete CatchVariable at Example:1
	java.lang.NullPointerException VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Catch at Example:1
	 catch (java.lang.NullPointerException VAR_2) {
	    return false;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.NullPointerException VAR_2) {
	    return false;
	}
 ||| 
LINE:1610###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(this)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(this, STRING_1, VAR_4)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(this, STRING_1, VAR_4).show()
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(this, STRING_1, VAR_4).show();
	}
 ||| Delete If at Example:1
	if () {
	    TYPE_2.METHOD_3(this, STRING_1, VAR_4).show();
	}
 ||| 
LINE:1611###Move If from Example:1 to Example:1
	if (VAR_1) {
	    TYPE_1.METHOD_2().METHOD_3();
	} else {
	    TYPE_1.METHOD_2().METHOD_4();
	}
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_5()
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_2) {
	    VAR_2.METHOD_5();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_2) {
	    VAR_2.METHOD_5();
	}
 ||| 
LINE:1612###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == 0) {
	
	}
 ||| 
LINE:1613###Move Invocation from Example:1 to Example:1
	VAR_2.arg(STRING_1).METHOD_2().METHOD_3(VAR_3)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_5()
 ||| Delete Invocation at Example:1
	.METHOD_4(TYPE_2.METHOD_5())
 ||| 
LINE:1614###Update BinaryOperator at Example:1
	VAR_2 + 1 to VAR_2 - 1
 ||| 
LINE:1615###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Update TypeReference at Example:1
	int to java.lang.Integer
 ||| Update TypeAccess at Example:1
	VAR_3 to Example
 ||| 
LINE:1616###Update Invocation at Example:1
	 to VAR_1.METHOD_2(getName())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(getName())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1617###Move BinaryOperator from Example:1 to Example:1
	(((this.VAR_3 + VAR_1) + STRING_1) + VAR_2)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:1618###Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete VirtualEle at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	
	    METHOD_2();
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    METHOD_2();
 ||| 
LINE:1619###Move Return from Example:1 to Example:1
	return VAR_2.toString()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.name()
 ||| Delete Return at Example:1
	return VAR_3.name()
 ||| Delete Block at Example:1
	{
	    return VAR_3.name();
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return VAR_3.name();
	}
 ||| 
LINE:1620###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_2.length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.length > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2.length > 0)
 ||| 
LINE:1621###Move Assignment from Example:1 to Example:1
	VAR_1 = METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:1622###Move Invocation from Example:1 to Example:1
	super.start()
 ||| 
LINE:1623###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1624###Insert If at Example:1
	if ()
	
	else
	    VAR_1 = false;
 ||| Move VariableRead from Example:1 to Example:1
	state
 ||| Insert Block at Example:1
 ||| Insert Block at Example:1
	
	    VAR_1 = false;
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = state
 ||| Insert Assignment at Example:1
	VAR_1 = false
 ||| Insert Literal at Example:1
	true
 ||| Insert FieldWrite at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:1625###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2((i - i) < VAR_2 ? ++i : i) < VAR_2)
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1626###Move Invocation from Example:1 to Example:1
	VAR_3.fail()
 ||| Delete Return at Example:1
	return
 ||| 
LINE:1627###Move Invocation from Example:1 to Example:1
	VAR_2.length()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2().METHOD_1(VAR_2.length())
 ||| Delete BinaryOperator at Example:1
	 + TYPE_1.METHOD_2().METHOD_1(VAR_2.length())
 ||| 
LINE:1628###Insert BinaryOperator at Example:1
	 == id
 ||| Update FieldRead at Example:1
	 to ((TYPE_1) (obj)).id
 ||| Move FieldRead from Example:1 to Example:1
	((TYPE_1) (obj)).VAR_1
 ||| Insert FieldRead at Example:1
	id
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_1(VAR_1)
 ||| 
LINE:1629###Update BinaryOperator at Example:1
	 to VAR_1 == 0
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 % 1)
 ||| Move Literal from Example:1 to Example:1
	0
 ||| Insert Literal at Example:1
	"0"
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 == 
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	java.lang.String.format(STRING_1, VAR_1)
 ||| 
LINE:1630###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	node
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(node != null)
 ||| Delete BinaryOperator at Example:1
	((node != null) && )
 ||| 
LINE:1631###Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete Invocation at Example:1
	super.METHOD_1(intent)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete Invocation at Example:1
	intent.METHOD_3()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(intent.METHOD_3())
 ||| 
LINE:1632###Move Invocation from Example:1 to Example:1
	p.METHOD_3(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1633###Move Invocation from Example:1 to Example:1
	METHOD_2(false)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_5()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_5();
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_4()) {
	    VAR_2.METHOD_5();
	}
 ||| 
LINE:1634###Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:1635###Move Return from Example:1 to Example:1
	return null
 ||| Update BinaryOperator at Example:1
	VAR_1 == null to VAR_1 != null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(index, null)
 ||| Move Return from Example:1 to Example:1
	return VAR_1
 ||| 
LINE:1636###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3().METHOD_4(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(VAR_2.METHOD_2() == VAR_1)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null) && (VAR_2.METHOD_2() == VAR_1)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if ((VAR_2 != null) && (VAR_2.METHOD_2() == VAR_1)) {
	
	
	}
 ||| 
LINE:1637###Insert If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| 
LINE:1638###Move Invocation from Example:1 to Example:1
	buffer.METHOD_1(METHOD_3(VAR_2), VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	METHOD_5(null)
 ||| Delete Block at Example:1
	{
	    METHOD_5(null);
	}
 ||| Delete If at Example:1
	if (METHOD_2(VAR_2)) {
	
	
	} else {
	    METHOD_5(null);
	}
 ||| 
LINE:1639###Delete FieldRead at Example:1
	VAR_3
 ||| 
LINE:1640###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(null)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1641###Move Invocation from Example:1 to Example:1
	VAR_3.put(java.lang.Thread.METHOD_2(), VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2)
 ||| 
LINE:1642###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(id)
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:1643###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:1644###Move Invocation from Example:1 to Example:1
	VAR_4.put(VAR_3, 0)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(VAR_3)
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2(VAR_3)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2(VAR_3))
 ||| 
LINE:1645###Insert Assignment at Example:1
	 = 
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_3
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.equals(STRING_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Assignment at Example:1
	 = true
 ||| Delete Block at Example:1
	{
	     = true;
	}
 ||| Delete If at Example:1
	if () {
	     = true;
	}
 ||| 
LINE:1646###Insert UnaryOperator at Example:1
	!
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(path)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_2)
 ||| 
LINE:1647###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3();
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    VAR_1.METHOD_3();
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| 
LINE:1648###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1.args[0].getClass())
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.args
 ||| Delete Literal at Example:1
	0
 ||| Delete ArrayRead at Example:1
	VAR_1.args[0]
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.args[0] != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.args[0] != null)
 ||| 
LINE:1649###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1650###Insert Invocation at Example:1
	super.METHOD_1()
 ||| Insert SuperAccess at Example:1
	super
 ||| 
LINE:1651###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_1(key)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1652###Update ArrayTypeReference at Example:1
	byte[] to void
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1, 0, VAR_2.length)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1653###Move BinaryOperator from Example:1 to Example:1
	(this.field != null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.getType()
 ||| Delete Invocation at Example:1
	this.VAR_1.getType().METHOD_1()
 ||| Delete BinaryOperator at Example:1
	 && this.VAR_1.getType().METHOD_1()
 ||| 
LINE:1654###Move Invocation from Example:1 to Example:1
	error.METHOD_3()
 ||| Delete VariableRead at Example:1
	error
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	error != null
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Conditional at Example:1
	(error != null ?  : STRING_2)
 ||| 
LINE:1655###Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	out
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(out, VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	out
 ||| Delete Invocation at Example:1
	METHOD_1(out)
 ||| 
LINE:1656###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_1 == null ? null : 
 ||| 
LINE:1657###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(str, pattern)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	str
 ||| Delete VariableRead at Example:1
	pattern
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(str, pattern)
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2(str, pattern) && 
 ||| 
LINE:1658###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.add()
 ||| 
LINE:1659###Move If from Example:1 to Example:1
	if (VAR_1) {
	    TYPE_1.METHOD_3(VAR_4.METHOD_4(this));
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2.METHOD_2() >= VAR_3
 ||| Move Return from Example:1 to Example:1
	return true
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1660###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || VAR_2.isEmpty()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Return at Example:1
	return VAR_3
 ||| Delete Block at Example:1
	{
	    return VAR_3;
	}
 ||| Delete If at Example:1
	if ((VAR_1 == null) || VAR_2.isEmpty()) {
	    return VAR_3;
	}
 ||| 
LINE:1661###Insert VariableRead at Example:1
	fieldName
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toUpperCase()
 ||| 
LINE:1662###Update TypeReference at Example:1
	java.util.List<TYPE_1> to java.util.Collection<TYPE_1>
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.values()
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<TYPE_1>()
 ||| 
LINE:1663###Update Invocation at Example:1
	 to VAR_1.METHOD_1(view)
 ||| Move Invocation from Example:1 to Example:1
	view.METHOD_3()
 ||| Update TypeReference at Example:1
	TYPE_1 to TYPE_2
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	((TYPE_2) (view))
 ||| Delete Invocation at Example:1
	.METHOD_1(((TYPE_2) (view)))
 ||| Delete Block at Example:1
	{
	    .METHOD_1(((TYPE_2) (view)));
	}
 ||| Delete If at Example:1
	if (!) {
	    .METHOD_1(((TYPE_2) (view)));
	}
 ||| 
LINE:1664###Move Invocation from Example:1 to Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:1665###Move Invocation from Example:1 to Example:1
	item.METHOD_3(true)
 ||| Delete FieldRead at Example:1
	item
 ||| Delete Invocation at Example:1
	item.METHOD_2()
 ||| Delete FieldRead at Example:1
	item
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	item.METHOD_3(false)
 ||| Delete Block at Example:1
	
	    item.METHOD_3(false);
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (item.METHOD_2())
	    item.METHOD_3(false);
	else
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| 
LINE:1666###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2.METHOD_3())
 ||| 
LINE:1667###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| Delete Block at Example:1
	{
	    return STRING_1;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    return STRING_1;
	}
 ||| 
LINE:1668###Update Invocation at Example:1
	VAR_2.put(VAR_3.getId(), VAR_1) to VAR_2.add(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.getId()
 ||| 
LINE:1669###Move Invocation from Example:1 to Example:1
	new TYPE_2().execute(VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| 
LINE:1670###Move Return from Example:1 to Example:1
	return new java.lang.String(b, STRING_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(VAR_2, STRING_2)
 ||| Delete Throw at Example:1
	throw new TYPE_1(VAR_2, STRING_2)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    throw new TYPE_1(VAR_2, STRING_2);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_1) {
	    throw new TYPE_1(VAR_2, STRING_2);
	}
 ||| 
LINE:1671###Move If from Example:1 to Example:1
	if (VAR_1 != VAR_3) {
	    VAR_3 = VAR_1;
	    VAR_4 = 0;
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:1672###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(STRING_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:1673###Move Invocation from Example:1 to Example:1
	VAR_1.replace(STRING_1, STRING_2)
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	.replace(STRING_3, STRING_2)
 ||| 
LINE:1674###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(METHOD_2() == null)
 ||| Delete BinaryOperator at Example:1
	(METHOD_2() == null) && 
 ||| 
LINE:1675###Update Invocation at Example:1
	 to TYPE_2.METHOD_5(VAR_3.array(), 0, buffer.METHOD_7())
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.array().METHOD_6()
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_2
 ||| Move Literal from Example:1 to Example:1
	0
 ||| Move Invocation from Example:1 to Example:1
	buffer.METHOD_7()
 ||| Delete Invocation at Example:1
	.METHOD_5(, , )
 ||| 
LINE:1676###Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.getClass()
 ||| Delete Invocation at Example:1
	this.getClass().METHOD_3()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this.getClass().METHOD_3(), STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_4()) {
	
	}
 ||| 
LINE:1677###Insert Block at Example:1
	{
	
	}
 ||| Move Return from Example:1 to Example:1
	return this.METHOD_5(type)
 ||| 
LINE:1678###Move Assignment from Example:1 to Example:1
	VAR_3 = time
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_3(VAR_1)) {
	
	}
 ||| 
LINE:1679###Update BinaryOperator at Example:1
	(( * VAR_1.length) + x) to (x * y)
 ||| Move VariableRead from Example:1 to Example:1
	y
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.length
 ||| Delete BinaryOperator at Example:1
	( * VAR_1.length)
 ||| 
LINE:1680###Move If from Example:1 to Example:1
	if (VAR_1 >= VAR_2) {
	    METHOD_3();
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 >= VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1681###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 == VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == VAR_4)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_2 == VAR_4)
 ||| 
LINE:1682###Move Assignment from Example:1 to Example:1
	this.VAR_1 = new java.util.Date(VAR_2.getTime())
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.getTime()
 ||| Delete ConstructorCall at Example:1
	new java.util.Date(VAR_2.getTime())
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ( != null) {
	
	}
 ||| 
LINE:1683###Move BinaryOperator from Example:1 to Example:1
	(METHOD_2(position) == VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	position
 ||| Delete Invocation at Example:1
	METHOD_2(position)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(METHOD_2(position) == VAR_2)
 ||| Delete BinaryOperator at Example:1
	 || (METHOD_2(position) == VAR_2)
 ||| 
LINE:1684###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(null)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1685###Update BinaryOperator at Example:1
	 to STRING_1 + VAR_2
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2 - INT_1)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:1686###Move Invocation from Example:1 to Example:1
	VAR_6.remove(VAR_2)
 ||| 
LINE:1687###Move Invocation from Example$1:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Method at Example:1
	public void METHOD_3() {
	
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_3() {
	
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_3() {
	
	    }
	}
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(new TYPE_2() {
	    public void METHOD_3() {
	
	    }
	})
 ||| 
LINE:1688###Move Invocation from Example:1 to Example:1
	METHOD_1(key, VAR_1.String, null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:1689###Move Invocation from Example:1 to Example:1
	java.lang.System.out.println(STRING_1)
 ||| 
LINE:1690###Update Method at Example:1
	public TYPE_1 METHOD_1() {
	    if ()
	        throw new TYPE_2(STRING_1);
	
	    return .get(VAR_2);
	} to public void add(TYPE_1 element) {
	    if (!isEmpty()) {
	        VAR_1.add(VAR_2 + 1, element);
	    } else {
	        VAR_1.add(0, element);
	    }
	}
 ||| Update TypeReference at Example:1
	TYPE_1 to void
 ||| Insert Parameter at Example:1
	TYPE_1 element
 ||| Insert TypeReference at Example:1
	TYPE_1
 ||| Insert UnaryOperator at Example:1
	!
 ||| Insert Block at Example:1
	
	    .add(0, element);
 ||| Move Invocation from Example:1 to Example:1
	isEmpty()
 ||| Insert Invocation at Example:1
	VAR_1.add(VAR_2 + 1, element)
 ||| Insert Invocation at Example:1
	.add(0, element)
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Insert BinaryOperator at Example:1
	VAR_2 + 1
 ||| Insert VariableRead at Example:1
	element
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	0
 ||| Insert VariableRead at Example:1
	element
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.get(VAR_2)
 ||| Delete Return at Example:1
	return .get(VAR_2)
 ||| 
LINE:1691###Update BinaryOperator at Example:1
	 to VAR_1.METHOD_2(0) == VAR_1.METHOD_2(VAR_2 + 1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2 * VAR_2) + 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(0)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2((VAR_2 * VAR_2) + 1)
 ||| Update BinaryOperator at Example:1
	 to VAR_2 + 1
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_2 * VAR_2)
 ||| Move Literal from Example:1 to Example:1
	1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 == 
 ||| 
LINE:1692###Insert Assignment at Example:1
	 = VAR_1 + 1
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_1
 ||| Insert BinaryOperator at Example:1
	VAR_1 + 1
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	++
 ||| 
LINE:1693###Move Invocation from Example:1 to Example:1
	VAR_2.setEnabled(true)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(false)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:1694###Insert Invocation at Example:1
	((java.util.List<TYPE_1>) (.values()))
 ||| Insert TypeReference at Example:1
	java.util.List<TYPE_1>
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Insert TypeReference at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	.values()
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList(.values())
 ||| 
LINE:1695###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:1696###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_2 && 
 ||| 
LINE:1697###Move If from Example:1 to Example:1
	if (VAR_3) {
	    METHOD_4();
	} else {
	    METHOD_5();
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Move Block from Example:1 to Example:1
	{
	    METHOD_3();
	}
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	    METHOD_4();
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:1698###Move Invocation from Example:1 to Example:1
	VAR_2.set(java.lang.Thread.METHOD_2())
 ||| 
LINE:1699###Move TypeAccess from Example:1 to Example:1
	VAR_5
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	METHOD_2(true)
 ||| 
LINE:1700###Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_1.METHOD_5()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1701###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toLowerCase()
 ||| 
LINE:1702###Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1)
 ||| Delete BinaryOperator at Example:1
	VAR_1 && TYPE_1.METHOD_2(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_3();
	}
 ||| Delete If at Example:1
	if (VAR_1 && TYPE_1.METHOD_2(STRING_1)) {
	    VAR_2.METHOD_3();
	}
 ||| 
LINE:1703###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.equals()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:1704###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:1705###Move Invocation from Example:1 to Example:1
	VAR_1.get(VAR_1.position() + index)
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 & INT_1
 ||| 
LINE:1706###Move Invocation from Example:1 to Example:1
	VAR_2.get(TYPE_2.METHOD_2(path))
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:1707###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.size() == 0
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_3
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	this.VAR_3 = false
 ||| Delete Block at Example:1
	{
	    this.VAR_3 = false;
	}
 ||| Delete If at Example:1
	if (VAR_2.size() == 0) {
	    this.VAR_3 = false;
	}
 ||| 
LINE:1708###Move Invocation from Example:1 to Example:1
	VAR_2.replaceAll(VAR_3, STRING_1)
 ||| Delete Invocation at Example:1
	.trim()
 ||| 
LINE:1709###Move Return from Example:1 to Example:1
	return this.VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:1710###Move Invocation from Example:1 to Example:1
	VAR_2.getText().trim()
 ||| Delete Invocation at Example:1
	.toLowerCase()
 ||| 
LINE:1711###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3(VAR_3.METHOD_4(position).METHOD_5())
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_3.METHOD_2() > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3.METHOD_2() > 0)
 ||| 
LINE:1712###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_5()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_5()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4()
 ||| 
LINE:1713###Move Return from Example:1 to Example:1
	return VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	
	}
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1, VAR_2, VAR_3)
 ||| Delete Return at Example:1
	return super.METHOD_1(VAR_1, VAR_2, VAR_3)
 ||| 
LINE:1714###Move BinaryOperator from Example:1 to Example:1
	(VAR_3 == VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_2 && 
 ||| 
LINE:1715###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 != VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 != VAR_2) {
	
	    METHOD_2();
	}
 ||| 
LINE:1716###Update TypeAccess at Example:1
	VAR_2 to Example
 ||| 
LINE:1717###Move Assignment from Example:1 to Example:1
	target = VAR_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	target
 ||| Delete BinaryOperator at Example:1
	VAR_1 != target
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != target) {
	
	
	}
 ||| 
LINE:1718###Move If from Example:1 to Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_2(VAR_1);
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != this.VAR_1
 ||| Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1719###Move FieldRead from Example:1 to Example:1
	date
 ||| Delete FieldRead at Example:1
	date
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	date != null
 ||| Delete TypeReference at Example:1
	java.util.Date
 ||| Delete Invocation at Example:1
	((java.util.Date) (.METHOD_2()))
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	date != null ? ((java.util.Date) (.METHOD_2())) : null
 ||| 
LINE:1720###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3, java.lang.String.METHOD_3(((float) (VAR_1.METHOD_4())) / INT_1), 0)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:1721###Move Conditional from Example:1 to Example:1
	trim ? VAR_3.trim() : VAR_2
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 == null
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean trim
 ||| Delete VariableRead at Example:1
	trim
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1722###Insert FieldRead at Example:1
	url
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| 
LINE:1723###Move Return from Example:1 to Example:1
	return VAR_2.length
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:1724###Move Parameter from Example:1 to Example:1
	java.lang.String VAR_1
 ||| 
LINE:1725###Insert BinaryOperator at Example:1
	 == STRING_3
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.get(STRING_2)
 ||| Insert FieldRead at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	.toString()
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	.toString().METHOD_2(STRING_3)
 ||| 
LINE:1726###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2 < 0
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_2 < 0) {
	    return null;
	}
 ||| 
LINE:1727###Move Invocation from Example:1 to Example:1
	VAR_4.setEnabled(false)
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:1728###Update Method at Example:1
	public TYPE_1<TYPE_2<>> METHOD_1() {
	    this.VAR_1 = new TYPE_1<TYPE_2<TYPE_3>>(this);
	    return .VAR_1;
	} to public TYPE_2<TYPE_3> String(java.lang.String String) {
	    this.String = String;
	    return this;
	}
 ||| Update TypeReference at Example:1
	TYPE_1<TYPE_2<>> to TYPE_2<TYPE_3>
 ||| Insert Parameter at Example:1
	java.lang.String String
 ||| Move TypeReference from Example:1 to Example:1
	TYPE_3
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Update FieldWrite at Example:1
	this.VAR_1 to this.String
 ||| Insert VariableRead at Example:1
	String
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Delete TypeReference at Example:1
	TYPE_2<>
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete ConstructorCall at Example:1
	new TYPE_1<TYPE_2<TYPE_3>>(this)
 ||| Delete FieldRead at Example:1
	.VAR_1
 ||| 
LINE:1729###Move Invocation from Example:1 to Example:1
	METHOD_2(((java.util.Date) (VAR_2.getValue())), ((java.util.Date) (VAR_3.getValue())), VAR_4)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1730###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_4(VAR_2)
 ||| 
LINE:1731###Update Invocation at Example:1
	 to assertEquals(VAR_1.METHOD_2().length, INT_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().size()
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert FieldRead at Example:1
	.length
 ||| Move TypeAccess from Example:1 to Example:1
	INT_2
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	assertEquals(, )
 ||| 
LINE:1732###Move Invocation from Example:1 to Example:1
	METHOD_1().getId()
 ||| Insert ThisAccess at Example:1
	this
 ||| Move TypeAccess from Example to Example
	Example
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_1() == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	METHOD_1() == null ? null : 
 ||| 
LINE:1733###Move Invocation from Example:1 to Example:1
	VAR_3.add(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.contains(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.contains(VAR_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2.contains(VAR_1))
 ||| 
LINE:1734###Insert Invocation at Example:1
	.toLowerCase()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.replaceAll(STRING_1, STRING_2)
 ||| 
LINE:1735###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:1736###Move Return from Example:1 to Example:1
	return ((TYPE_1) (obj)).METHOD_1() == METHOD_1()
 ||| Delete VariableRead at Example:1
	obj
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete BinaryOperator at Example:1
	obj instanceof TYPE_1
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if (obj instanceof TYPE_1)
	
	else
	    return false;
 ||| 
LINE:1737###Move Invocation from Example:1 to Example:1
	update()
 ||| 
LINE:1738###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    METHOD_3();
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	    METHOD_4();
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == VAR_3) {
	    METHOD_4();
	}
 ||| Delete Block at Example:1
	
	    if (VAR_1.METHOD_2() == VAR_3) {
	        METHOD_4();
	    }
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == VAR_2) {
	    METHOD_3();
	} else if (VAR_1.METHOD_2() == VAR_3) {
	    METHOD_4();
	}
 ||| 
LINE:1739###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:1740###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2().size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2().size() == 0
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2().size() == 0) {
	    return 0;
	}
 ||| 
LINE:1741###Move Assignment from Example:1 to Example:1
	VAR_2 = METHOD_2()
 ||| Insert Invocation at Example:1
	METHOD_1()
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| 
LINE:1742###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2.getValue(METHOD_3())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:1743###Update TypeAccess at Example:1
	TYPE_2 to Example
 ||| Insert Literal at Example:1
	null
 ||| Delete Wra at Example:1
	
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| 
LINE:1744###Move Invocation from Example:1 to Example:1
	VAR_2.put(name, true)
 ||| Move OperatorAssignment from Example:1 to Example:1
	VAR_3 += 1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ( == null) {
	
	}
 ||| 
LINE:1745###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_3 ? null : 
 ||| 
LINE:1746###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_4()
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete CatchVariable at Example:1
	TYPE_3 VAR_3
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Catch at Example:1
	 catch (TYPE_3 VAR_3) {
	    return 0;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_3 VAR_3) {
	    return 0;
	}
 ||| 
LINE:1747###Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String message
 ||| Delete VariableRead at Example:1
	message
 ||| Delete Literal at Example:1
	1
 ||| 
LINE:1748###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 && VAR_1.METHOD_2()
 ||| 
LINE:1749###Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	VAR_2 < VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_4, STRING_1 + VAR_2)
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_2(VAR_4, STRING_1 + VAR_2);
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_2 < VAR_3) {
	    TYPE_1.METHOD_2(VAR_4, STRING_1 + VAR_2);
	    return;
	}
 ||| 
LINE:1750###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2 != null)
 ||| 
LINE:1751###Move Invocation from Example:1 to Example:1
	VAR_3.show(METHOD_3(), STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2()) {
	
	}
 ||| 
LINE:1752###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1753###Move ConstructorCall from Example:1 to Example:1
	new TYPE_2(new TYPE_3(null))
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	.start(false)
 ||| 
LINE:1754###Insert If at Example:1
	if ( == true) {
	    return ;
	}
 ||| Insert BinaryOperator at Example:1
	 == true
 ||| Insert Block at Example:1
	{
	    return ;
	}
 ||| Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1, event)
 ||| Move Invocation from Example:1 to Example:1
	event.METHOD_2()
 ||| Insert Literal at Example:1
	true
 ||| Insert Return at Example:1
	return 
 ||| Move Literal from Example:1 to Example:1
	false
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1755###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 field
 ||| Delete VariableRead at Example:1
	field
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(field != null)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	(!VAR_1)
 ||| Delete BinaryOperator at Example:1
	(field != null) && (!VAR_1)
 ||| Delete VariableRead at Example:1
	field
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	field.METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	    field.METHOD_2(VAR_2);
	}
 ||| Delete If at Example:1
	if ((field != null) && (!VAR_1)) {
	    field.METHOD_2(VAR_2);
	}
 ||| 
LINE:1756###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 && VAR_1.METHOD_2()
 ||| 
LINE:1757###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<java.util.Set<TYPE_1>>()
 ||| 
LINE:1758###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(p)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.err
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.err.println(STRING_1)
 ||| Delete Block at Example:1
	{
	    java.lang.System.err.println(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    java.lang.System.err.println(STRING_1);
	}
 ||| 
LINE:1759###Move Invocation from Example:1 to Example:1
	listener.METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2())
 ||| 
LINE:1760###Move Invocation from Example:1 to Example:1
	VAR_3.start(VAR_1, null, VAR_2)
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:1761###Move Invocation from Example:1 to Example:1
	c.METHOD_2(null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	assertEquals(false, )
 ||| 
LINE:1762###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2) {
	
	}
 ||| 
LINE:1763###Move UnaryOperator from Example:1 to Example:1
	(!VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 != null)
 ||| 
LINE:1764###Insert Switch at Example:1
	switch () {
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 >= INT_1)
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	( <= INT_2)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 >= INT_1) && ( <= INT_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if ((VAR_1 >= INT_1) && ( <= INT_2)) {
	    METHOD_2();
	}
 ||| 
LINE:1765###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(this, 1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(this)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete Block at Example:1
	{
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	
	} else {
	}
 ||| 
LINE:1766###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_2.METHOD_3())
 ||| Delete Block at Example:1
	{
	    METHOD_2(VAR_2.METHOD_3());
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    return VAR_1;
	} else {
	    METHOD_2(VAR_2.METHOD_3());
	}
 ||| 
LINE:1767###Insert BinaryOperator at Example:1
	 == ((TYPE_1) (VAR_2)).getId()
 ||| Update Invocation at Example:1
	 to VAR_1.getId()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.equals(VAR_2)
 ||| Insert Invocation at Example:1
	((TYPE_1) (VAR_2)).getId()
 ||| Insert VariableRead at Example:1
	((TYPE_1) (VAR_2))
 ||| Insert TypeReference at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:1768###Update TypeReference at Example:1
	void to boolean
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, VAR_2, VAR_3, VAR_4, false)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete VirtualEle at Example:1
	
 ||| 
LINE:1769###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(getContext(), VAR_1, VAR_2).show()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getContext()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	getContext() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (getContext() != null) {
	
	}
 ||| 
LINE:1770###Insert FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.values()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete ArrayRead at Example:1
	VAR_1.values()[this.VAR_2]
 ||| 
LINE:1771###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2(VAR_2, VAR_3)
 ||| 
LINE:1772###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(this)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == null) {
	
	}
 ||| 
LINE:1773###Move If from Example:1 to Example:1
	if (VAR_1 != null) {
	    METHOD_2();
	    METHOD_3();
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:1774###Insert If at Example:1
	if () {
	    .setEnabled(true);
	} else {
	    VAR_2.setEnabled(false);
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Insert Block at Example:1
	{
	    .setEnabled(true);
	}
 ||| Insert Block at Example:1
	{
	    VAR_2.setEnabled(false);
	}
 ||| Insert Invocation at Example:1
	.setEnabled(true)
 ||| Insert Invocation at Example:1
	VAR_2.setEnabled(false)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Insert Literal at Example:1
	true
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	.setEnabled()
 ||| 
LINE:1775###Move Parameter from Example:1 to Example:1
	float position
 ||| Move Parameter from Example:1 to Example:1
	float VAR_1
 ||| 
LINE:1776###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 > 1) {
	
	}
 ||| 
LINE:1777###Insert If at Example:1
	if () {
	    return false;
	}
 ||| Update BinaryOperator at Example:1
	 to VAR_2 == 0
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2 != 0
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Literal at Example:1
	true
 ||| Insert Return at Example:1
	return false
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:1778###Update Invocation at Example:1
	TYPE_2.METHOD_2(.values()) to ((java.util.Set<TYPE_1>) (VAR_1.values()))
 ||| Insert TypeReference at Example:1
	java.util.Set<TYPE_1>
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Insert TypeReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	.values()
 ||| 
LINE:1779###Update TypeReference at Example:1
	java.lang.String to java.util.List<java.lang.String>
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| 
LINE:1780###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 instanceof java.lang.String)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_1 == null)
 ||| 
LINE:1781###Move Invocation from Example:1 to Example:1
	VAR_3.delete()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + java.lang.String.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_2.info(STRING_1 + java.lang.String.METHOD_2())
 ||| 
LINE:1782###Move Invocation from Example:1 to Example:1
	VAR_2.equals(VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_4)
 ||| Delete BinaryOperator at Example:1
	 || VAR_2.equals(VAR_4)
 ||| 
LINE:1783###Move Return from Example:1 to Example:1
	return STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Return at Example:1
	return STRING_2
 ||| Delete Block at Example:1
	{
	    return STRING_2;
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	} else {
	    return STRING_2;
	}
 ||| 
LINE:1784###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Return at Example:1
	return this
 ||| 
LINE:1785###Move FieldRead from Example:1 to Example:1
	length
 ||| Delete FieldRead at Example:1
	offset
 ||| Delete BinaryOperator at Example:1
	 - offset
 ||| 
LINE:1786###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1787###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_1.METHOD_4())
 ||| Delete Invocation at Example:1
	.execute()
 ||| 
LINE:1788###Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_3)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_2) && (VAR_1 != VAR_3)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if ((VAR_1 != VAR_2) && (VAR_1 != VAR_3)) {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:1789###Move Invocation from Example:1 to Example:1
	VAR_3.delete(VAR_2)
 ||| 
LINE:1790###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(this).METHOD_1()
 ||| 
LINE:1791###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(p)
 ||| 
LINE:1792###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_3)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.equals(VAR_3)) {
	
	}
 ||| 
LINE:1793###Move Return from Example:1 to Example:1
	return METHOD_2().METHOD_3().METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	METHOD_2().METHOD_3()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2().METHOD_3() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2().METHOD_3() != null) {
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:1794###Move ConstructorCall from Example:1 to Example:1
	new TYPE_2(VAR_3)
 ||| Delete Throw at Example:1
	throw 
 ||| 
LINE:1795###Move Return from Example:1 to Example:1
	return VAR_1.get(VAR_2).METHOD_2().METHOD_3() == INT_1
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:1796###Move Invocation from Example:1 to Example:1
	METHOD_2(false)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_1.setEnabled(false)
 ||| 
LINE:1797###Move Return from Example:1 to Example:1
	return VAR_2.getId()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Return at Example:1
	return -1
 ||| 
LINE:1798###Insert Parameter at Example:1
	java.lang.String VAR_3
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Update ConstructorCall at Example:1
	new TYPE_1(VAR_1, VAR_3) to new TYPE_1(VAR_1, VAR_3)
 ||| Insert VariableRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| 
LINE:1799###Move Invocation from Example:1 to Example:1
	METHOD_5().METHOD_6()
 ||| Delete Invocation at Example:1
	.METHOD_7()
 ||| 
LINE:1800###Insert If at Example:1
	if (VAR_2 != null)
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Block at Example:1
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(t)
 ||| 
LINE:1801###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 / INT_1
 ||| 
LINE:1802###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1, key, value)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_1()) {
	
	}
 ||| 
LINE:1803###Move Return from Example:1 to Example:1
	return VAR_5.compareTo(VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 == null)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_4 == null)
 ||| Delete BinaryOperator at Example:1
	(VAR_3 == null) || (VAR_4 == null)
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	
	    return 0;
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ((VAR_3 == null) || (VAR_4 == null))
	    return 0;
	else
 ||| 
LINE:1804###Move Assignment from Example:1 to Example:1
	this.VAR_2 = VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete ConstructorCall at Example:1
	new java.lang.NullPointerException()
 ||| Delete Throw at Example:1
	throw new java.lang.NullPointerException()
 ||| Delete Block at Example:1
	{
	    throw new java.lang.NullPointerException();
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    throw new java.lang.NullPointerException();
	}
 ||| 
LINE:1805###Delete TypeReference at Example:1
	android.content.Intent
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new android.content.Intent(this, VAR_1)
 ||| Delete LocalVariable at Example:1
	android.content.Intent intent = new android.content.Intent(this, VAR_1)
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	intent.METHOD_3(STRING_1, VAR_2)
 ||| 
LINE:1806###Insert BinaryOperator at Example:1
	 + 
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_3(VAR_1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(TYPE_2.METHOD_4(VAR_1) - TYPE_2.METHOD_3(VAR_1)) / INT_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(, )
 ||| 
LINE:1807###Move BinaryOperator from Example:1 to Example:1
	this.VAR_2 - this.startTime
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, 0)
 ||| 
LINE:1808###Move BinaryOperator from Example:1 to Example:1
	VAR_2.toLowerCase(name.METHOD_2(0)) + VAR_1.substring(1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.length() > 0
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Conditional at Example:1
	VAR_1.length() > 0 ?  : STRING_1
 ||| 
LINE:1809###Insert ConstructorCall at Example:1
	new java.util.HashSet<TYPE_1>()
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:1810###Insert If at Example:1
	if () {
	     = true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_2.METHOD_2() <= INT_1
 ||| Insert Block at Example:1
	{
	     = true;
	}
 ||| Insert Assignment at Example:1
	 = true
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	true
 ||| Delete Assignment at Example:1
	 = 
 ||| 
LINE:1811###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(STRING_1).METHOD_4()
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| Delete Invocation at Example:1
	.METHOD_3().METHOD_4()
 ||| 
LINE:1812###Move Invocation from Example:1 to Example:1
	VAR_1.getText().toString()
 ||| Delete Invocation at Example:1
	.trim()
 ||| 
LINE:1813###Move If from Example:1 to Example:1
	if (!VAR_2) {
	    VAR_1.METHOD_3(false);
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != null
 ||| Update Literal at Example:1
	false to true
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_2 = false
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	    VAR_2 = false;
	} catch (TYPE_2 VAR_3) {
	}
 ||| Delete Block at Example:1
	{
	    try {
	
	        VAR_2 = false;
	    } catch (TYPE_2 VAR_3) {
	    }
	}
 ||| Delete If at Example:1
	if () {
	    try {
	
	        VAR_2 = false;
	    } catch (TYPE_2 VAR_3) {
	    }
	}
 ||| 
LINE:1814###Insert If at Example:1
	if (VAR_1 >= 0) {
	
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 >= 0
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	0
 ||| Move OperatorAssignment from Example:1 to Example:1
	VAR_2 += VAR_1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1()
 ||| 
LINE:1815###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_1.METHOD_2();
	}
 ||| 
LINE:1816###Move Invocation from Example:1 to Example:1
	new TYPE_1().execute()
 ||| Delete Invocation at Example:1
	.get()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception c
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(STRING_1, STRING_2)
 ||| Delete VariableRead at Example:1
	c
 ||| Delete Invocation at Example:1
	c.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception c) {
	    TYPE_2.METHOD_2(STRING_1, STRING_2);
	    c.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	    .get();
	} catch (java.lang.Exception c) {
	    TYPE_2.METHOD_2(STRING_1, STRING_2);
	    c.METHOD_3();
	}
 ||| 
LINE:1817###Insert Invocation at Example:1
	.METHOD_2(position)
 ||| Insert Invocation at Example:1
	.METHOD_4(position)
 ||| Insert Invocation at Example:1
	METHOD_5(position)
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_1
 ||| Insert FieldRead at Example:1
	position
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_1
 ||| Insert FieldRead at Example:1
	position
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert FieldRead at Example:1
	position
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	.METHOD_2(VAR_2.METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	.METHOD_4(VAR_2.METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_5(VAR_2.METHOD_3())
 ||| 
LINE:1818###Update Method at Example:1
	public void METHOD_1() {
	    METHOD_2(STRING_1);
	    VAR_1.METHOD_3();
	    super.METHOD_1();
	} to public void METHOD_3() {
	    VAR_1.METHOD_3();
	    super.METHOD_3();
	}
 ||| Update Invocation at Example:1
	super.METHOD_1() to super.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_1)
 ||| 
LINE:1819###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1820###Move Invocation from Example:1 to Example:1
	p.METHOD_2()
 ||| Delete FieldRead at Example:1
	p
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	p != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (p != null)
 ||| 
LINE:1821###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| 
LINE:1822###Move If from Example:1 to Example:1
	if (VAR_1.METHOD_2().equals(STRING_2)) {
	    VAR_1.METHOD_3();
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1823###Update TypeReference at Example:1
	TYPE_2 to java.io.InputStream
 ||| Update Invocation at Example:1
	TYPE_4.METHOD_2(TYPE_5, VAR_1, VAR_2) to TYPE_5.METHOD_1(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| 
LINE:1824###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2().METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_2.setEnabled(VAR_3.METHOD_2().METHOD_3())
 ||| 
LINE:1825###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:1826###Move Invocation from Example:1 to Example:1
	VAR_3.remove(VAR_2)
 ||| Move TypeReference from Example:1 to Example:1
	java.lang.String
 ||| Move VariableRead from Example:1 to Example:1
	name
 ||| Delete ArrayTypeReference at Example
	java.lang.String[]
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	name
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(name != null)
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_1.length > 0)
 ||| Delete BinaryOperator at Example:1
	(name != null) && (VAR_1.length > 0)
 ||| Delete LocalVariable at Example:1
	 VAR_2
 ||| Delete ForEach at Example:1
	for ( VAR_2 : ) {
	
	}
 ||| Delete Block at Example:1
	{
	    for ( VAR_2 : ) {
	
	    }
	}
 ||| Delete If at Example:1
	if ((name != null) && (VAR_1.length > 0)) {
	    for ( VAR_2 : ) {
	
	    }
	}
 ||| 
LINE:1827###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	}
 ||| 
LINE:1828###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_5
 ||| Delete Invocation at Example:1
	this.METHOD_2(VAR_1, VAR_2, this.VAR_4, this.VAR_5)
 ||| Delete Assignment at Example:1
	this.VAR_3 = this.METHOD_2(VAR_1, VAR_2, this.VAR_4, this.VAR_5)
 ||| 
LINE:1829###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(true)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(TYPE_1.METHOD_5() + INT_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2().equals(VAR_2)
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2().equals(VAR_2)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2().equals(VAR_2)) {
	
	
	}
 ||| 
LINE:1830###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	METHOD_3() > 1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Invocation at Example:1
	java.lang.String.format(VAR_1, STRING_1, METHOD_3())
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Conditional at Example:1
	(METHOD_3() > 1 ? java.lang.String.format(VAR_1, STRING_1, METHOD_3()) : STRING_2)
 ||| Delete BinaryOperator at Example:1
	 + (METHOD_3() > 1 ? java.lang.String.format(VAR_1, STRING_1, METHOD_3()) : STRING_2)
 ||| 
LINE:1831###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == VAR_2)
 ||| Delete TypeAccess at Example
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3.start
 ||| Delete TypeAccess at Example
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4.length
 ||| Delete BinaryOperator at Example:1
	(VAR_3.start < VAR_4.length)
 ||| Delete BinaryOperator at Example:1
	(VAR_3.start < VAR_4.length) && 
 ||| 
LINE:1832###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:1833###Update TypeReference at Example:1
	TYPE_1 to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_1(VAR_1, VAR_2, VAR_3)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1834###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2 != null)
 ||| 
LINE:1835###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| 
LINE:1836###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(false, false)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_1.METHOD_2() != null)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_1.METHOD_2() != null)) {
	
	}
 ||| 
LINE:1837###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:1838###Delete TypeReference at Example:1
	TYPE_4
 ||| Delete Parameter at Example:1
	TYPE_4 context
 ||| Delete VariableRead at Example:1
	context
 ||| 
LINE:1839###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.err
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.err.println(STRING_1)
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.err
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	java.lang.System.err.println(STRING_2)
 ||| Delete Block at Example:1
	{
	    java.lang.System.err.println(STRING_1);
	    java.lang.System.err.println(STRING_2);
	}
 ||| Delete If at Example:1
	if () {
	
	
	} else {
	    java.lang.System.err.println(STRING_1);
	    java.lang.System.err.println(STRING_2);
	}
 ||| 
LINE:1840###Move If from Example:1 to Example:1
	if (VAR_2 <= INT_1) {
	    VAR_2 = VAR_2 + 1;
	} else {
	    VAR_2 = 1;
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:1841###Move Return from Example:1 to Example:1
	return this.VAR_2.get(type)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete VariableRead at Example:1
	type
 ||| Delete Invocation at Example:1
	this.VAR_1.METHOD_2(type)
 ||| Delete Block at Example:1
 ||| Delete ConstructorCall at Example:1
	new java.util.ArrayList<TYPE_1>()
 ||| Delete Return at Example:1
	return new java.util.ArrayList<TYPE_1>()
 ||| Delete Block at Example:1
	
	    return new java.util.ArrayList<TYPE_1>();
 ||| Delete If at Example:1
	if (this.VAR_1.METHOD_2(type))
	
	else
	    return new java.util.ArrayList<TYPE_1>();
 ||| 
LINE:1842###Move If from Example:1 to Example:1
	if (!VAR_2) {
	    VAR_1.METHOD_2();
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1843###Move Invocation from Example:1 to Example:1
	METHOD_2(STRING_1, VAR_1.toString())
 ||| Delete Block at Example:1
 ||| 
LINE:1844###Move Return from Example:1 to Example:1
	return VAR_3.getBoolean(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2(VAR_2)) {
	
	} else {
	    return true;
	}
 ||| 
LINE:1845###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (VAR_1 != null)
	
	else
	    return null;
 ||| 
LINE:1846###Move Invocation from Example:1 to Example:1
	VAR_3.substring(index + STRING_1.length(), CHAR_1, VAR_1)
 ||| Delete VariableRead at Example:1
	index
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete BinaryOperator at Example:1
	index == (-1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Conditional at Example:1
	index == (-1) ? VAR_2 : 
 ||| 
LINE:1847###Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new android.content.Intent(this, VAR_2)
 ||| Delete Invocation at Example:1
	METHOD_2(new android.content.Intent(this, VAR_2))
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4(VAR_4)
 ||| 
LINE:1848###Update TypeReference at Example:1
	java.util.List<TYPE_1> to java.util.Collection<TYPE_1>
 ||| Move Invocation from Example:1 to Example:1
	((java.util.List<TYPE_1>) (VAR_2.METHOD_1(VAR_3.METHOD_2())))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| Delete Block at Example:1
	{
	    VAR_1 = ;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    VAR_1 = ;
	}
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	java.util.List<TYPE_1>
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:1849###Move Invocation from Example:1 to Example:1
	this.METHOD_2(VAR_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 <= INT_1)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_1 <= INT_1)
 ||| 
LINE:1850###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:1851###Move Assignment from Example:1 to Example:1
	VAR_2 = this.VAR_3.METHOD_2(java.util.Arrays.asList(VAR_4.split(STRING_1)))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1852###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:1853###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	(METHOD_2() != null) && 
 ||| 
LINE:1854###Delete TypeReference at Example:1
	long
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete Parameter at Example:1
	final long length
 ||| Delete ConstructorCall at Example:1
	new TYPE_2()
 ||| Delete Throw at Example:1
	throw new TYPE_2()
 ||| 
LINE:1855###Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2().METHOD_4(STRING_1)
 ||| Delete TypeReference at Example:1
	java.io.IOException
 ||| Delete CatchVariable at Example:1
	java.io.IOException VAR_1
 ||| Delete Catch at Example:1
	 catch (java.io.IOException VAR_1) {
	}
 ||| Delete Try at Example:1
	try {
	    TYPE_2.METHOD_2().METHOD_4(STRING_1);
	} catch (java.io.IOException VAR_1) {
	}
 ||| 
LINE:1856###Move Assignment from Example:1 to Example:1
	VAR_4 = new TYPE_2(this)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_4)
 ||| 
LINE:1857###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(INT_1, INT_2, INT_3)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:1858###Update Invocation at Example:1
	 to this.VAR_1.METHOD_2().METHOD_3().METHOD_4(this)
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2().get().METHOD_3()
 ||| Update Invocation at Example:1
	this.VAR_1.METHOD_2().get() to this.VAR_1.METHOD_2().METHOD_3()
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:1859###Delete Literal at Example:1
	null
 ||| Delete VariableRead at Example:1
	source
 ||| Delete BinaryOperator at Example:1
	null == source
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	{
	    return VAR_1;
	}
 ||| Delete If at Example:1
	if (null == source) {
	    return VAR_1;
	}
 ||| 
LINE:1860###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(VAR_1)
 ||| 
LINE:1861###Delete FieldRead at Example:1
	className
 ||| 
LINE:1862###Insert If at Example:1
	if ( == null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	 == null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Insert Literal at Example:1
	null
 ||| Move Throw from Example:1 to Example:1
	throw new TYPE_1(STRING_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	
	}
 ||| 
LINE:1863###Move Invocation from Example:1 to Example:1
	METHOD_2(path.METHOD_3())
 ||| Insert Block at Example:1
	{
	    if () 
	}
 ||| Insert If at Example:1
	if () 
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(path).startsWith(STRING_1)
 ||| Move Block from Example:1 to Example:1
	{
	    return true;
	}
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:1864###Move BinaryOperator from Example:1 to Example:1
	(((((STRING_1 + VAR_1) + STRING_2) + info) + STRING_3) + position)
 ||| Delete FieldRead at Example:1
	STRING_4
 ||| Delete BinaryOperator at Example:1
	( + STRING_4)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	( + STRING_4) + VAR_2
 ||| 
LINE:1865###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_2(response)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (this.VAR_1)
 ||| 
LINE:1866###Move BinaryOperator from Example:1 to Example:1
	1 - x
 ||| Delete VariableRead at Example:1
	x
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	x < 0
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete VariableRead at Example:1
	x
 ||| Delete BinaryOperator at Example:1
	(-1) - x
 ||| Delete Conditional at Example:1
	x < 0 ? (-1) - x : 
 ||| 
LINE:1867###Move Assignment from Example:1 to Example:1
	VAR_3 = VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(true)
 ||| Insert Wra at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	
	}
 ||| 
LINE:1868###Move OperatorAssignment from Example:1 to Example:1
	VAR_3 += 1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	} else {
	    METHOD_2();
	}
 ||| 
LINE:1869###Insert BinaryOperator at Example:1
	 == 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(query, STRING_4)
 ||| Insert Literal at Example:1
	1
 ||| Delete TypeAccess at Example:1
	STRING_4
 ||| 
LINE:1870###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(false)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:1871###Move Invocation from Example:1 to Example:1
	java.util.Collections.sort(VAR_1)
 ||| Move Return from Example:1 to Example:1
	return this.toString()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Return at Example:1
	return STRING_1
 ||| 
LINE:1872###Update Method at Example:1
	boolean getBoolean(java.lang.String key, boolean VAR_1) {
	    return VAR_2.METHOD_1(key) ? java.lang.Boolean.METHOD_2() : VAR_1;
	} to java.lang.String getString(java.lang.String key, java.lang.String VAR_1) {
	    return VAR_2.METHOD_1(key) ? VAR_3.get(key) : VAR_1;
	}
 ||| Update TypeReference at Example:1
	boolean to java.lang.String
 ||| Update TypeReference at Example:1
	boolean to java.lang.String
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.get(key)
 ||| Delete TypeAccess at Example:1
	java.lang.Boolean
 ||| Delete Invocation at Example:1
	java.lang.Boolean.METHOD_2()
 ||| 
LINE:1873###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 < METHOD_2())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_2)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != VAR_2) && 
 ||| 
LINE:1874###Delete FieldWrite at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_3(VAR_5, true)
 ||| Delete Assignment at Example:1
	VAR_3 = VAR_4.METHOD_3(VAR_5, true)
 ||| 
LINE:1875###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_2 = new TYPE_1()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	
	}
 ||| 
LINE:1876###Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| 
LINE:1877###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	
	}
 ||| 
LINE:1878###Move Return from Example:1 to Example:1
	return METHOD_2(n, n / INT_1)
 ||| Delete VariableRead at Example:1
	n
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	n > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (n > 0) {
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| 
LINE:1879###Update Invocation at Example:1
	METHOD_2() to type()
 ||| 
LINE:1880###Insert Literal at Example:1
	null
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Parameter at Example:1
	TYPE_2 VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete Parameter at Example:1
	TYPE_3 VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_4
 ||| Delete TypeReference at Example:1
	java.util.Collection<TYPE_4>
 ||| Delete Parameter at Example:1
	java.util.Collection<TYPE_4> VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| 
LINE:1881###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this).METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	TYPE_1.METHOD_2(this).METHOD_3() != VAR_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(this).METHOD_3() != VAR_1) {
	
	
	}
 ||| 
LINE:1882###Move BinaryOperator from Example:1 to Example:1
	(this.index >= this.VAR_1.size())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1.size() != 0)
 ||| Delete BinaryOperator at Example:1
	 && (this.VAR_1.size() != 0)
 ||| 
LINE:1883###Update BinaryOperator at Example:1
	 to ((int) (new java.util.Date().getTime() - VAR_2))
 ||| Move BinaryOperator from Example:1 to Example:1
	(new java.util.Date().getTime() / INT_1)
 ||| Move TypeReference from Example:1 to Example:1
	int
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(() ( - ))
 ||| 
LINE:1884###Update Invocation at Example:1
	TYPE_1.METHOD_2().METHOD_3(new TYPE_2() {
	    public void METHOD_4() {
	        METHOD_5().METHOD_1();
	    }
	}) to METHOD_5().METHOD_1(true)
 ||| Update Invocation at Example:1
	TYPE_1.METHOD_2() to METHOD_5()
 ||| Insert Literal at Example:1
	true
 ||| Update TypeAccess at Example:1
	TYPE_1 to Example
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Invocation at Example:1
	METHOD_5().METHOD_1()
 ||| Delete Method at Example:1
	public void METHOD_4() {
	    METHOD_5().METHOD_1();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4() {
	        METHOD_5().METHOD_1();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_4() {
	        METHOD_5().METHOD_1();
	    }
	}
 ||| 
LINE:1885###Insert VirtualEle at Example:1
	
 ||| Move Return from Example:1 to Example:1
	return VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| Insert TypeReference at Example:1
	java.io.IOException
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete TypeReference at Example:1
	java.io.IOException
 ||| Delete CatchVariable at Example:1
	java.io.IOException VAR_4
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Catch at Example:1
	 catch (java.io.IOException VAR_4) {
	    return false;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.io.IOException VAR_4) {
	    return false;
	}
 ||| Delete Block at Example:1
	{
	    try {
	
	    } catch (java.io.IOException VAR_4) {
	        return false;
	    }
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	    try {
	
	    } catch (java.io.IOException VAR_4) {
	        return false;
	    }
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:1886###Move FieldRead from Example:1 to Example:1
	((TYPE_1) (VAR_3[0])).VAR_4
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:1887###Insert BinaryOperator at Example:1
	 == 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move VariableRead from Example:1 to Example:1
	id
 ||| Delete Invocation at Example:1
	.equals()
 ||| 
LINE:1888###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1.METHOD_3(1), FLOAT_1, 0)
 ||| Delete UnaryOperator at Example:1
	-
 ||| 
LINE:1889###Update Invocation at Example:1
	 to VAR_2.METHOD_1(item)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(item)
 ||| Delete VariableRead at Example:1
	item
 ||| Delete Invocation at Example:1
	item.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	item.METHOD_2() == VAR_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	
	    return true;
	}
 ||| Delete If at Example:1
	if (item.METHOD_2() == VAR_1) {
	
	    return true;
	}
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	item
 ||| Delete Invocation at Example:1
	super.METHOD_1(item)
 ||| 
LINE:1890###Insert Invocation at Example:1
	.METHOD_2(VAR_2 ? VAR_4 : VAR_5)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Insert Conditional at Example:1
	VAR_2 ? VAR_4 : VAR_5
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	VAR_4
 ||| Insert FieldRead at Example:1
	VAR_5
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	.METHOD_2(VAR_4)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
	{
	    .METHOD_2(VAR_4);
	    METHOD_3();
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_5)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_2(VAR_5);
	    METHOD_4();
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    .METHOD_2(VAR_4);
	    METHOD_3();
	} else {
	    VAR_3.METHOD_2(VAR_5);
	    METHOD_4();
	}
 ||| 
LINE:1891###Move If from Example:1 to Example:1
	if (VAR_1.METHOD_2()) {
	    VAR_1.METHOD_3();
	    VAR_2 = VAR_1.METHOD_4();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:1892###Update Method at Example:1
	public int min() {
	    if (METHOD_1()) {
	        return -1;
	    } else {
	        return .METHOD_4();
	    }
	} to public int size() {
	    if (METHOD_1()) {
	        return 0;
	    } else {
	        return METHOD_2().size();
	    }
	}
 ||| Insert Literal at Example:1
	0
 ||| Update Invocation at Example:1
	 to METHOD_2().size()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3()
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:1893###Move BinaryOperator from Example:1 to Example:1
	(METHOD_2() == 0)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	p
 ||| Delete Invocation at Example:1
	METHOD_3(p)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(METHOD_3(p) == null)
 ||| Delete BinaryOperator at Example:1
	 || (METHOD_3(p) == null)
 ||| 
LINE:1894###Move If from Example:1 to Example:1
	if (VAR_3.METHOD_3()) {
	    VAR_3.METHOD_4();
	    VAR_4.open();
	}
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(getContext(), VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:1895###Update Invocation at Example:1
	 to VAR_1.METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1896###Move Return from Example:1 to Example:1
	return METHOD_1((VAR_1 + CHAR_1) + path)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.startsWith(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	path
 ||| Delete Invocation at Example:1
	METHOD_1(path)
 ||| Delete Return at Example:1
	return METHOD_1(path)
 ||| Delete Block at Example:1
	{
	    return METHOD_1(path);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.startsWith(STRING_1)) {
	    return METHOD_1(path);
	} else {
	
	}
 ||| 
LINE:1897###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 >> INT_1)
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	 & INT_2
 ||| 
LINE:1898###Move Return from Example:1 to Example:1
	return METHOD_2().METHOD_3()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.error(STRING_1, VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_4()
 ||| Delete Return at Example:1
	return TYPE_3.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    VAR_2.error(STRING_1, VAR_1);
	    return TYPE_3.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_1) {
	    VAR_2.error(STRING_1, VAR_1);
	    return TYPE_3.METHOD_4();
	}
 ||| 
LINE:1899###Delete Wra at Example:1
	
 ||| 
LINE:1900###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1901###Insert If at Example:1
	if (this.VAR_2.length() < )else
	    return this.VAR_1;
 ||| Insert BinaryOperator at Example:1
	this.VAR_2.length() < 
 ||| Move Block from Example:1 to Example:1
	{
	    VAR_1 = this.VAR_1;
	}
 ||| Insert Block at Example:1
	
	    return this.VAR_1;
 ||| Insert Invocation at Example:1
	this.VAR_2.length()
 ||| Move FieldRead from Example:1 to Example:1
	INT_1
 ||| Insert Return at Example:1
	return  + 
 ||| Insert Return at Example:1
	return this.VAR_1
 ||| Insert FieldRead at Example:1
	this.VAR_2
 ||| Insert BinaryOperator at Example:1
	 + 
 ||| Insert FieldRead at Example:1
	this.VAR_1
 ||| Insert ThisAccess at Example:1
	this
 ||| Move Literal from Example:1 to Example:1
	"0"
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Insert TypeAccess at Example
	Example
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_1)
 ||| Delete If at Example:1
	if (VAR_2.equals(STRING_1))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete BinaryOperator at Example:1
	VAR_2.length() < 
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	 + VAR_1
 ||| Delete Return at Example:1
	return  + VAR_1
 ||| Delete Block at Example:1
	
	    return  + VAR_1;
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	
	    return VAR_1;
 ||| Delete If at Example:1
	if (VAR_2.length() < )
	    return  + VAR_1;
	else
	    return VAR_1;
 ||| 
LINE:1902###Insert Invocation at Example:1
	METHOD_1(, null)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeReference at Example:1
	int
 ||| Delete Parameter at Example:1
	int VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_3
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getContext()
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_3(getContext(), VAR_2)
 ||| Delete LocalVariable at Example:1
	final TYPE_2 VAR_4 = TYPE_3.METHOD_3(getContext(), VAR_2)
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_4(this, , VAR_4, VAR_3)
 ||| 
LINE:1903###Insert Invocation at Example:1
	TYPE_1.METHOD_1(, true)
 ||| Insert TypeAccess at Example:1
	TYPE_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	true
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_3 = new TYPE_1()
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| 
LINE:1904###Insert ConstructorCall at Example:1
	new java.lang.Integer()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete Invocation at Example:1
	java.lang.Integer.METHOD_2()
 ||| 
LINE:1905###Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3(null)
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_1 = false
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2(VAR_3);
	    VAR_2.METHOD_3(null);
	    VAR_1 = false;
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    VAR_2.METHOD_2(VAR_3);
	    VAR_2.METHOD_3(null);
	    VAR_1 = false;
	    return;
	}
 ||| 
LINE:1906###Insert BinaryOperator at Example:1
	 == true
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_2
 ||| Insert Literal at Example:1
	true
 ||| 
LINE:1907###Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_2(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    TYPE_1.METHOD_2(STRING_1);
	}
 ||| 
LINE:1908###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_3(STRING_1).getInt(STRING_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2(STRING_1)) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:1909###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.equals(STRING_1))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_2)
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.equals(STRING_2))
 ||| Delete BinaryOperator at Example:1
	(!VAR_2.equals(STRING_1)) && (!VAR_2.equals(STRING_2))
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((!VAR_2.equals(STRING_1)) && (!VAR_2.equals(STRING_2))) {
	
	}
 ||| 
LINE:1910###Move BinaryOperator from Example:1 to Example:1
	(path.METHOD_2(TYPE_1) + VAR_2.length())
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:1911###Move Invocation from Example:1 to Example:1
	METHOD_3(intent.METHOD_4())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete Invocation at Example:1
	METHOD_2(intent)
 ||| Delete UnaryOperator at Example:1
	!METHOD_2(intent)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_2(intent)) {
	
	}
 ||| 
LINE:1912###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	this.VAR_2.size() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_2.size() > 0) {
	
	}
 ||| 
LINE:1913###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() != null)
 ||| 
LINE:1914###Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:1915###Insert FieldRead at Example:1
	value
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toString()
 ||| 
LINE:1916###Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(STRING_1, STRING_2, "true", "false", "0", STRING_3, STRING_4)
 ||| Delete FieldRead at Example:1
	STRING_5
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(, STRING_5)
 ||| 
LINE:1917###Move Invocation from Example:1 to Example:1
	VAR_3.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:1918###Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_1.METHOD_2(STRING_1)))
 ||| Update TypeReference at Example:1
	TYPE_2 to java.lang.String
 ||| Delete Invocation at Example:1
	.getValue()
 ||| 
LINE:1919###Move Assignment from Example:1 to Example:1
	VAR_2 = new java.util.ArrayList<>()
 ||| Move ForEach from Example:1 to Example:1
	for (TYPE_2 VAR_3 : VAR_1) {
	    VAR_4.add(VAR_5.getId());
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:1920###Move Return from Example:1 to Example:1
	return ((byte) (super.VAR_3[VAR_4 + INT_1]))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 >= VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Return at Example:1
	return -1
 ||| Delete Block at Example:1
	{
	    return -1;
	}
 ||| Delete If at Example:1
	if (VAR_1 >= VAR_2) {
	
	} else {
	    return -1;
	}
 ||| 
LINE:1921###Move Return from Example:1 to Example:1
	return ((int) ((INT_1 * VAR_2) / VAR_1))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 != 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 != 0) {
	
	} else {
	    return 0;
	}
 ||| 
LINE:1922###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	}
 ||| 
LINE:1923###Insert If at Example:1
	if (VAR_1 != (-1)) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 != (-1)
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert UnaryOperator at Example:1
	(-1)
 ||| Move Assignment from Example:1 to Example:1
	VAR_3[VAR_1 * VAR_4] = VAR_2
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1924###Update Invocation at Example:1
	 to VAR_1.METHOD_3(STRING_1).METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(STRING_1)
 ||| Update Invocation at Example:1
	VAR_1.METHOD_2() to VAR_1.METHOD_3(STRING_1)
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:1925###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2(VAR_2.get(STRING_1).METHOD_3(VAR_3)).METHOD_4(VAR_4.status().METHOD_5())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	METHOD_7(STRING_2)
 ||| Delete Invocation at Example:1
	.METHOD_6(METHOD_7(STRING_2))
 ||| 
LINE:1926###Move Assignment from Example:1 to Example:1
	VAR_1 = TYPE_1.METHOD_2(METHOD_3())
 ||| 
LINE:1927###Update Invocation at Example:1
	 to VAR_3.METHOD_4(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_3(VAR_1)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1928###Insert If at Example:1
	if (VAR_1 > 0) {
	
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 > 0
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	0
 ||| Move UnaryOperator from Example:1 to Example:1
	VAR_1--
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1929###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.fail()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_3
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	    VAR_2.fail();
	} catch (TYPE_1 VAR_3) {
	}
 ||| 
LINE:1930###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| 
LINE:1931###Insert If at Example:1
	if () {
	    return true;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() == null)
 ||| Insert Block at Example:1
	{
	    return true;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(VAR_2)
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:1932###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 < INT_1
 ||| Delete FieldWrite at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	VAR_2++
 ||| Delete Block at Example:1
	{
	
	    VAR_2++;
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_3(STRING_1)
 ||| Delete Block at Example:1
	{
	    java.lang.System.out.println(STRING_1);
	    METHOD_3(STRING_1);
	}
 ||| Delete If at Example:1
	if (VAR_2 < INT_1) {
	
	    VAR_2++;
	} else {
	    java.lang.System.out.println(STRING_1);
	    METHOD_3(STRING_1);
	}
 ||| 
LINE:1933###Insert Block at Example:1
	{
	
	}
 ||| Move Return from Example:1 to Example:1
	return false
 ||| 
LINE:1934###Move Invocation from Example:1 to Example:1
	METHOD_1().METHOD_2(VAR_1.getId())
 ||| Update Wra at Example:1
	 to public
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	.METHOD_3(true)
 ||| 
LINE:1935###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 == 0
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	
	    VAR_2.METHOD_2();
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Block at Example:1
	
	    VAR_3.METHOD_2();
 ||| Delete If at Example:1
	if (VAR_1 == 0)
	    VAR_2.METHOD_2();
	else
	    VAR_3.METHOD_2();
 ||| 
LINE:1936###Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	
	    VAR_2.METHOD_2(STRING_1);
 ||| Delete If at Example:1
	if (!VAR_1)
	    VAR_2.METHOD_2(STRING_1);
 ||| 
LINE:1937###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	toString()
 ||| Delete BinaryOperator at Example:1
	 + toString()
 ||| 
LINE:1938###Insert For at Example:1
	for (int j = ; ; j++) {
	    [j] = [];
	}
 ||| Insert LocalVariable at Example:1
	int j = 
 ||| Update BinaryOperator at Example:1
	 to j < size
 ||| Move BinaryOperator from Example:1 to Example:1
	size - i
 ||| Move FieldRead from Example:1 to Example:1
	size
 ||| Insert UnaryOperator at Example:1
	j++
 ||| Insert Assignment at Example:1
	[j] = []
 ||| Insert TypeReference at Example:1
	int
 ||| Move VariableRead from Example:1 to Example:1
	i
 ||| Update VariableRead at Example:1
	i to j
 ||| Insert VariableWrite at Example:1
	j
 ||| Insert ArrayWrite at Example:1
	[j]
 ||| Insert ArrayRead at Example:1
	[]
 ||| Move FieldRead from Example:1 to Example:1
	array
 ||| Insert VariableRead at Example:1
	j
 ||| Move FieldRead from Example:1 to Example:1
	array
 ||| Move BinaryOperator from Example:1 to Example:1
	i + 1
 ||| Update VariableRead at Example:1
	i to j
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(, , , , )
 ||| 
LINE:1939###Move Invocation from Example:1 to Example:1
	METHOD_5()
 ||| 
LINE:1940###Move If from Example:1 to Example:1
	if (this.VAR_2) {
	    this.VAR_3.add(message);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(this.VAR_1) {
	
	}
 ||| 
LINE:1941###Move Invocation from Example:1 to Example:1
	VAR_2.append(path)
 ||| 
LINE:1942###Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(this, STRING_1, VAR_2)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(this, STRING_1, VAR_2).show()
 ||| 
LINE:1943###Move Return from Example:1 to Example:1
	return VAR_1.get(id)
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	id != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (id != null) {
	
	} else {
	    return null;
	}
 ||| 
LINE:1944###Update BinaryOperator at Example:1
	 to ((short) ((first + (INT_2 * VAR_1)) - 1))
 ||| Move BinaryOperator from Example:1 to Example:1
	((first & INT_1) + (INT_2 * (VAR_1 & INT_1)))
 ||| Move TypeReference from Example:1 to Example:1
	short
 ||| Update BinaryOperator at Example:1
	( * (VAR_1 & INT_1)) to (first + (INT_2 * VAR_1))
 ||| Move Literal from Example:1 to Example:1
	1
 ||| Move VariableRead from Example:1 to Example:1
	first
 ||| Update BinaryOperator at Example:1
	(VAR_1 & INT_1) to (INT_2 * VAR_1)
 ||| Move FieldRead from Example:1 to Example:1
	INT_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	( & INT_1)
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(() ( - ))
 ||| 
LINE:1945###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1946###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	
	    VAR_2.METHOD_2();
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    VAR_2.METHOD_2();
 ||| 
LINE:1947###Move BinaryOperator from Example:1 to Example:1
	((((VAR_1 ? STRING_1 : STRING_2) + STRING_3) + VAR_2) + STRING_4)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_5
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.toString()
 ||| Insert BinaryOperator at Example:1
	( + )
 ||| Move FieldRead from Example:1 to Example:1
	STRING_4
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete Conditional at Example:1
	(VAR_1 ? STRING_1 : STRING_2)
 ||| Delete BinaryOperator at Example:1
	( + )
 ||| Delete BinaryOperator at Example:1
	( + ) + 
 ||| 
LINE:1948###Move Invocation from Example:1 to Example:1
	endTime.METHOD_2(startTime)
 ||| Delete FieldRead at Example:1
	startTime
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(startTime == null)
 ||| Delete BinaryOperator at Example:1
	(startTime == null) || 
 ||| 
LINE:1949###Insert VariableRead at Example:1
	type
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| 
LINE:1950###Insert For at Example:1
	for (int i = 0; i < 1; i++) {
	
	
	
	}
 ||| Insert LocalVariable at Example:1
	int i = 0
 ||| Insert BinaryOperator at Example:1
	i < 1
 ||| Insert UnaryOperator at Example:1
	i++
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	remove()
 ||| Insert TypeReference at Example:1
	int
 ||| Insert Literal at Example:1
	0
 ||| Insert VariableRead at Example:1
	i
 ||| Insert Literal at Example:1
	1
 ||| Insert VariableWrite at Example:1
	i
 ||| 
LINE:1951###Move ExecutableReferenceExpression from Example:1 to Example:1
	this::METHOD_8
 ||| 
LINE:1952###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null) && 
 ||| 
LINE:1953###Move Invocation from Example:1 to Example:1
	VAR_2.add(VAR_3)
 ||| 
LINE:1954###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_3()) {
	
	}
 ||| 
LINE:1955###Insert OperatorAssignment at Example:1
	 += 
 ||| Move FieldWrite from Example:1 to Example:1
	VAR_1
 ||| Move BinaryOperator from Example:1 to Example:1
	((float) (VAR_2 * VAR_3.METHOD_2()))
 ||| Delete TypeReference at Example:1
	float
 ||| Delete Assignment at Example:1
	 = 
 ||| 
LINE:1956###Update TypeReference at Example:1
	TYPE_2 to java.lang.String
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.util.HashMap<java.lang.String, java.lang.String>
 ||| Delete Parameter at Example:1
	java.util.HashMap<java.lang.String, java.lang.String> parameters
 ||| Delete VariableRead at Example:1
	parameters
 ||| 
LINE:1957###Insert VariableRead at Example:1
	result
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:1958###Update Method at Example:1
	public void METHOD_1() {
	
	} to public final void METHOD_2(final java.lang.String VAR_2, final java.lang.Object... VAR_3) {
	    if (this.VAR_1 != null) {
	        this.VAR_1.METHOD_2(VAR_2, VAR_3);
	    }
	}
 ||| Insert Parameter at Example:1
	final java.lang.String VAR_2
 ||| Insert Parameter at Example:1
	final java.lang.Object... VAR_3
 ||| Insert If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| Insert Wra at Example:1
	
 ||| Insert TypeReference at Example:1
	java.lang.String
 ||| Insert VirtualEle at Example:1
	
 ||| Insert ArrayTypeReference at Example
	java.lang.Object[]
 ||| Insert VirtualEle at Example:1
	
 ||| Insert BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Wra at Example:1
	
 ||| Insert Wra at Example:1
	
 ||| Insert FieldRead at Example:1
	this.VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2(VAR_2, VAR_3)
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert VariableRead at Example:1
	VAR_2
 ||| Insert VariableRead at Example:1
	VAR_3
 ||| Insert TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| 
LINE:1959###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.iterator()
 ||| 
LINE:1960###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 * VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 * VAR_2
 ||| 
LINE:1961###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| 
LINE:1962###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().add(node)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete VariableRead at Example:1
	node
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2().contains(node)
 ||| Delete UnaryOperator at Example:1
	!VAR_1.METHOD_2().contains(node)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.METHOD_2().contains(node)) {
	
	}
 ||| 
LINE:1963###Update Invocation at Example:1
	 to java.lang.String.METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4()
 ||| Move TypeAccess from Example:1 to Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:1964###Move Invocation from Example:1 to Example:1
	VAR_2.toString()
 ||| Delete FieldRead at Example:1
	fileName
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(fileName + STRING_1)
 ||| Delete BinaryOperator at Example:1
	(fileName + STRING_1) + 
 ||| 
LINE:1965###Insert Invocation at Example:1
	METHOD_1(((double) (x)), ((double) (VAR_1)))
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert VariableRead at Example:1
	((double) (x))
 ||| Insert VariableRead at Example:1
	((double) (VAR_1))
 ||| Insert TypeReference at Example:1
	double
 ||| Insert TypeReference at Example:1
	double
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Literal at Example:1
	null
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_2 = null
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	x
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(x, VAR_1)
 ||| Delete LocalVariable at Example:1
	TYPE_2 VAR_3 = METHOD_2(x, VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete VariableWrite at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Assignment at Example:1
	VAR_2 = VAR_3.METHOD_3()
 ||| Delete Block at Example:1
	
	    VAR_2 = VAR_3.METHOD_3();
 ||| Delete If at Example:1
	if (VAR_3 != null)
	    VAR_2 = VAR_3.METHOD_3();
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:1966###Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| 
LINE:1967###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	    return;
	}
 ||| 
LINE:1968###Delete Literal at Example:1
	1
 ||| 
LINE:1969###Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| 
LINE:1970###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:1971###Move If from Example:1 to Example:1
	if (listener != null) {
	    listener.METHOD_1(VAR_2.getText().toString());
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Insert BinaryOperator at Example:1
	 && 
 ||| Move BinaryOperator from Example:1 to Example:1
	listener != null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if () {
	
	
	}
 ||| 
LINE:1972###Move If from Example:1 to Example:1
	if (!VAR_1) {
	    METHOD_2(true);
	    setValue(STRING_1);
	} else {
	    METHOD_2(false);
	}
 ||| Update Invocation at Example:1
	setState() to METHOD_2(!VAR_1)
 ||| Insert UnaryOperator at Example:1
	!VAR_1
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	METHOD_2(true)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_2(false)
 ||| Delete Block at Example:1
	{
	    METHOD_2(false);
	}
 ||| 
LINE:1973###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:1974###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	    return null;
	} else {
	
	}
 ||| 
LINE:1975###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2() != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2() != null)
 ||| 
LINE:1976###
LINE:1977###Move Invocation from Example:1 to Example:1
	java.util.Arrays.asList(VAR_3).iterator()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.iterator()
 ||| Delete Conditional at Example:1
	VAR_1 != null ? VAR_2.iterator() : 
 ||| 
LINE:1978###Move ArrayRead from Example:1 to Example:1
	VAR_1[METHOD_4(VAR_2)]
 ||| Insert TypeReference at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| 
LINE:1979###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:1980###Move Invocation from Example:1 to Example:1
	this.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete Invocation at Example:1
	super.METHOD_1()
 ||| Delete Block at Example:1
	{
	    super.METHOD_1();
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	} else {
	    super.METHOD_1();
	}
 ||| 
LINE:1981###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	null != VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (null != VAR_1) {
	
	}
 ||| 
LINE:1982###Update TypeReference at Example:1
	double to void
 ||| Insert Assignment at Example:1
	VAR_1 = 
 ||| Insert VariableWrite at Example:1
	VAR_1
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 * (1 + VAR_2)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1983###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 && VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 != null)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_3 != null)
 ||| 
LINE:1984###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_4)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| 
LINE:1985###Move Invocation from Example:1 to Example:1
	status.METHOD_2().toString()
 ||| Delete FieldRead at Example:1
	status
 ||| Delete Invocation at Example:1
	status.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	status.METHOD_2() == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Conditional at Example:1
	status.METHOD_2() == null ? STRING_1 : 
 ||| 
LINE:1986###Move OperatorAssignment from Example:1 to Example:1
	this.VAR_2 += VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 > 0) {
	
	}
 ||| 
LINE:1987###Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| 
LINE:1988###Move Invocation from Example:1 to Example:1
	VAR_3.add(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:1989###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2)
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 && 
 ||| 
LINE:1990###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3 != null)
 ||| 
LINE:1991###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete UnaryOperator at Example:1
	!METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_3()) {
	
	}
 ||| 
LINE:1992###Insert If at Example:1
	if ()
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Insert Block at Example:1
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Move Return from Example:1 to Example:1
	return METHOD_2() ? METHOD_3() : null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:1993###Move Return from Example:1 to Example:1
	return x / y
 ||| Delete VariableRead at Example:1
	y
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	y == 0
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (y == 0) {
	    return 0;
	} else {
	
	}
 ||| 
LINE:1994###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:1995###Insert If at Example:1
	if (VAR_3 == null)
 ||| Insert BinaryOperator at Example:1
	VAR_3 == null
 ||| Insert Block at Example:1
 ||| Insert VariableRead at Example:1
	VAR_3
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_4)
 ||| 
LINE:1996###Move If from Example:1 to Example:1
	if (null != VAR_2) {
	    VAR_2.METHOD_2();
	}
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = false
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	
	}
 ||| 
LINE:1997###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_2.METHOD_1())
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:1998###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:1999###Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:2000###Insert VariableRead at Example:1
	VAR_2
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete LocalVariable at Example:1
	TYPE_2 c = this.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete FieldRead at Example:1
	VAR_6
 ||| 
LINE:2001###Move BinaryOperator from Example:1 to Example:1
	(((STRING_1 + VAR_1) + STRING_2) + VAR_2)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	STRING_2
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + 
 ||| 
LINE:2002###Move Invocation from Example:1 to Example:1
	VAR_7.add(VAR_8.METHOD_2())
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:2003###Update Method at Example:1
	private void METHOD_1() {
	    if (VAR_1 == null) {
	        this.VAR_1 = METHOD_2();
	        METHOD_3().add(VAR_1, VAR_2);
	        VAR_3.METHOD_4(VAR_1);
	    }
	} to public abstract void setEnabled(boolean b);
 ||| Insert Parameter at Example:1
	boolean b
 ||| Update Wra at Example:1
	 to abstract
 ||| Insert Wra at Example:1
	
 ||| Insert TypeReference at Example:1
	boolean
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Assignment at Example:1
	this.VAR_1 = METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_3().add(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4(VAR_1)
 ||| Delete Block at Example:1
	{
	    this.VAR_1 = METHOD_2();
	    METHOD_3().add(VAR_1, VAR_2);
	    VAR_3.METHOD_4(VAR_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    this.VAR_1 = METHOD_2();
	    METHOD_3().add(VAR_1, VAR_2);
	    VAR_3.METHOD_4(VAR_1);
	}
 ||| 
LINE:2004###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 > INT_1
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 > INT_1) {
	
	
	
	}
 ||| 
LINE:2005###Move Invocation from Example:1 to Example:1
	VAR_3.toString()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:2006###Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1)
 ||| Delete FieldRead at Example:1
	view
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	view.METHOD_2(VAR_2)
 ||| 
LINE:2007###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_4)
 ||| Delete VariableRead at Example:1
	VAR_4
 ||| Delete VariableWrite at Example:1
	VAR_4
 ||| Delete Assignment at Example:1
	VAR_4 = 
 ||| 
LINE:2008###
LINE:2009###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(path)
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete CatchVariable at Example:1
	TYPE_3 VAR_4
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (TYPE_3 VAR_4) {
	    TYPE_4.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_3 VAR_4) {
	    TYPE_4.METHOD_3();
	}
 ||| 
LINE:2010###Move FieldRead from Example:1 to Example:1
	name
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:2011###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(t, false)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Literal at Example:1
	true
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_2(t, true, false)
 ||| 
LINE:2012###Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_2(new TYPE_4(VAR_1, context, VAR_2, id, VAR_3))
 ||| Delete TypeAccess at Example:1
	TYPE_5
 ||| Delete Invocation at Example:1
	TYPE_5.METHOD_4()
 ||| Delete Invocation at Example:1
	.METHOD_3(TYPE_5.METHOD_4())
 ||| 
LINE:2013###Move Invocation from Example:1 to Example:1
	this.METHOD_2(VAR_2.replace(VAR_1, args))
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| 
LINE:2014###Move LocalVariable from Example:1 to Example:1
	long VAR_3 = VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.add(VAR_3)
 ||| Move If from Example:1 to Example:1
	if (VAR_3 > VAR_5) {
	    VAR_5 = VAR_3;
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	
	
	}
 ||| 
LINE:2015###Update Method at Example:1
	public void METHOD_1() {
	    VAR_1.METHOD_2(true);
	    new TYPE_1().METHOD_3(new TYPE_2() {
	        public void METHOD_4() {
	            VAR_1.METHOD_2(false);
	            METHOD_5();
	        }
	    }, INT_1);
	} to public void METHOD_4() {
	    VAR_1.METHOD_2(true);
	    METHOD_5();
	}
 ||| Update Invocation at Example:1
	new TYPE_1().METHOD_3(new TYPE_2() {
	    public void METHOD_4() {
	        VAR_1.METHOD_2(false);
	        METHOD_5();
	    }
	}, INT_1) to METHOD_5()
 ||| Update TypeAccess at Example:1
	INT_1 to Example
 ||| Delete ConstructorCall at Example:1
	new TYPE_1()
 ||| Delete TypeReference at Example
	TYPE_2
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2(false)
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Method at Example:1
	public void METHOD_4() {
	    VAR_1.METHOD_2(false);
	    METHOD_5();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4() {
	        VAR_1.METHOD_2(false);
	        METHOD_5();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_2() {
	    public void METHOD_4() {
	        VAR_1.METHOD_2(false);
	        METHOD_5();
	    }
	}
 ||| 
LINE:2016###Move Invocation from Example:1 to Example:1
	((TYPE_1) (getActivity())).METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	getActivity() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (getActivity() != null) {
	
	}
 ||| 
LINE:2017###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete VariableRead at Example:1
	index
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete BinaryOperator at Example:1
	(index < VAR_2.size())
 ||| Delete BinaryOperator at Example:1
	 && (index < VAR_2.size())
 ||| 
LINE:2018###Insert ThisAccess at Example:1
	this
 ||| Move TypeAccess from Example to Example
	Example
 ||| 
LINE:2019###Insert Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Insert Assignment at Example:1
	VAR_1 = null
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Insert FieldWrite at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new java.io.IOException(VAR_2)
 ||| Delete Throw at Example:1
	throw new java.io.IOException(VAR_2)
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    throw new java.io.IOException(VAR_2);
	}
 ||| Delete Try at Example:1
	try {
	    METHOD_2();
	} catch (TYPE_1 VAR_2) {
	    throw new java.io.IOException(VAR_2);
	}
 ||| 
LINE:2020###Update TypeReference at Example:1
	TYPE_1 to void
 ||| 
LINE:2021###Insert Invocation at Example:1
	.remove(position)
 ||| Insert Invocation at Example:1
	METHOD_5(position)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	position
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert FieldRead at Example:1
	position
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Invocation at Example:1
	.remove(VAR_3.METHOD_3())
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_5(VAR_3.METHOD_3())
 ||| 
LINE:2022###Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	new java.io.File(file, STRING_1).METHOD_2()
 ||| 
LINE:2023###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1, VAR_3)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (this.VAR_1 != null) {
	
	}
 ||| 
LINE:2024###Move Invocation from Example:1 to Example:1
	getView().METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getView()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	getView() != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (getView() != null) {
	
	
	}
 ||| 
LINE:2025###Move Invocation from Example:1 to Example:1
	name()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 + 
 ||| 
LINE:2026###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_5()
 ||| 
LINE:2027###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:2028###Move Invocation from Example:1 to Example:1
	this.METHOD_1(java.lang.Float.METHOD_2(VAR_1))
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.length() > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.length() > 0) {
	
	}
 ||| 
LINE:2029###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1.METHOD_3(VAR_2))
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1.METHOD_3(VAR_3))
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| Delete UnaryOperator at Example:1
	(!)
 ||| 
LINE:2030###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.start(VAR_1, METHOD_3())
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:2031###Move Invocation from Example:1 to Example:1
	METHOD_3().METHOD_4(null)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3().METHOD_5(METHOD_3().METHOD_6(VAR_2))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	
	}
 ||| 
LINE:2032###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| 
LINE:2033###Insert VirtualEle at Example:1
	
 ||| Insert If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| Insert Wra at Example:1
	
 ||| Insert BinaryOperator at Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(false)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| 
LINE:2034###Insert VariableWrite at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.info(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_1
 ||| 
LINE:2035###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2().METHOD_3(true)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_1(STRING_1, VAR_1)
 ||| Delete Block at Example:1
	{
	    VAR_4.METHOD_1(STRING_1, VAR_1);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    VAR_4.METHOD_1(STRING_1, VAR_1);
	} else {
	
	}
 ||| 
LINE:2036###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2037###Update TypeAccess at Example:1
	VAR_1 to Example
 ||| Update TypeAccess at Example:1
	VAR_1 to Example
 ||| 
LINE:2038###Delete TypeReference at Example:1
	java.lang.String
 ||| Delete Parameter at Example:1
	java.lang.String token
 ||| Delete VariableRead at Example:1
	token
 ||| 
LINE:2039###Move Invocation from Example:1 to Example:1
	VAR_1.remove(TYPE_2.METHOD_3(text, CHAR_1), STRING_1)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| 
LINE:2040###Move Invocation from Example:1 to Example:1
	METHOD_2(((TYPE_1) (VAR_1)))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	((TYPE_1) (VAR_1))
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(((TYPE_1) (VAR_1)))
 ||| Delete Block at Example:1
	
	    TYPE_2.METHOD_3(((TYPE_1) (VAR_1)));
 ||| Delete If at Example:1
	if (VAR_2) {
	
	} else
	    TYPE_2.METHOD_3(((TYPE_1) (VAR_1)));
 ||| 
LINE:2041###Move Invocation from Example:1 to Example:1
	TYPE_4.METHOD_3(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_2 + 
 ||| 
LINE:2042###Update Invocation at Example:1
	 to VAR_4.assertThat(VAR_5.toString(VAR_2), TYPE_5.METHOD_4(VAR_1))
 ||| Move Invocation from Example:1 to Example:1
	TYPE_4.METHOD_3(VAR_5.toString(VAR_2))
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| Move Invocation from Example:1 to Example:1
	TYPE_5.METHOD_4(VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	.assertThat(, )
 ||| 
LINE:2043###Insert If at Example:1
	if (content != null) {
	
	
	}
 ||| Insert BinaryOperator at Example:1
	content != null
 ||| Insert Block at Example:1
	{
	
	
	}
 ||| Insert FieldRead at Example:1
	content
 ||| Insert Literal at Example:1
	null
 ||| Move LocalVariable from Example:1 to Example:1
	TYPE_1 obj = new TYPE_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.append(obj.METHOD_2())
 ||| 
LINE:2044###Move UnaryOperator from Example:1 to Example:1
	this.VAR_1++
 ||| Delete TypeAccess at Example:1
	java.lang.Integer
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	java.lang.Integer.METHOD_2(this.VAR_1)
 ||| Delete Synchronized at Example:1
	synchronized(java.lang.Integer.METHOD_2(this.VAR_1)) {
	
	}
 ||| 
LINE:2045###Move ArrayRead from Example:1 to Example:1
	VAR_2[1]
 ||| 
LINE:2046###Insert ConstructorCall at Example:1
	new TYPE_2(VAR_1, VAR_3, VAR_4)
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Insert FieldRead at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1, VAR_3, VAR_4)
 ||| 
LINE:2047###Move BinaryOperator from Example:1 to Example:1
	(this.METHOD_2() != null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	this.METHOD_2().equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!this.METHOD_2().equals(STRING_1))
 ||| Delete BinaryOperator at Example:1
	 && (!this.METHOD_2().equals(STRING_1))
 ||| 
LINE:2048###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_3())
 ||| 
LINE:2049###Move Invocation from Example:1 to Example:1
	java.util.Collections.sort(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.METHOD_3()) {
	
	}
 ||| 
LINE:2050###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.METHOD_2())
 ||| Delete BinaryOperator at Example:1
	( && (!VAR_1.METHOD_2()))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.METHOD_3())
 ||| Delete BinaryOperator at Example:1
	( && (!VAR_1.METHOD_2())) && (!VAR_1.METHOD_3())
 ||| 
LINE:2051###Move Invocation from Example:1 to Example:1
	name.METHOD_2(VAR_2)
 ||| Delete VariableRead at Example:1
	name
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	name.METHOD_2(VAR_3)
 ||| Delete BinaryOperator at Example:1
	 || name.METHOD_2(VAR_3)
 ||| 
LINE:2052###Move UnaryOperator from Example:1 to Example:1
	(!VAR_1.METHOD_2())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete BinaryOperator at Example:1
	 && VAR_2.METHOD_3()
 ||| 
LINE:2053###Update Invocation at Example:1
	 to VAR_1.METHOD_2(title).METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(METHOD_3(title))
 ||| Update Invocation at Example:1
	METHOD_3(title) to VAR_1.METHOD_2(title)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:2054###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.toString()
 ||| 
LINE:2055###Move Assignment from Example:1 to Example:1
	VAR_2 = TYPE_3.METHOD_3(TYPE_2.METHOD_2()).toString()
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	(-1) != TYPE_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((-1) != TYPE_2.METHOD_2()) {
	
	}
 ||| 
LINE:2056###Move Assignment from Example:1 to Example:1
	this.VAR_2 = false
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:2057###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| 
LINE:2058###Move Return from Example:1 to Example:1
	return METHOD_2().size()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2() != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (METHOD_2() != null)
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| 
LINE:2059###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() > 0)
 ||| Delete BinaryOperator at Example:1
	 && (VAR_2.size() > 0)
 ||| 
LINE:2060###Update TypeReference at Example:1
	TYPE_1 to boolean
 ||| Insert Return at Example:1
	return 
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0L
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(0L, STRING_2)
 ||| Delete Return at Example:1
	return new TYPE_1(0L, STRING_2)
 ||| Delete Block at Example:1
	{
	    return new TYPE_1(0L, STRING_2);
	}
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(INT_1, STRING_3)
 ||| Delete Return at Example:1
	return new TYPE_1(INT_1, STRING_3)
 ||| Delete Block at Example:1
	{
	    return new TYPE_1(INT_1, STRING_3);
	}
 ||| Delete If at Example:1
	if () {
	    return new TYPE_1(0L, STRING_2);
	} else {
	    return new TYPE_1(INT_1, STRING_3);
	}
 ||| 
LINE:2061###Update Method at Example:1
	public static double METHOD_1(java.lang.String VAR_1) {
	    java.lang.Double VAR_2 = .get(VAR_4.toLowerCase());
	    if (VAR_2 == null) {
	        VAR_2 = FLOAT_1;
	
	    }
	    return VAR_2;
	} to public static void METHOD_2(java.lang.String VAR_1, double VAR_2) {
	    VAR_3.put(VAR_1, VAR_2);
	}
 ||| Update TypeReference at Example:1
	double to void
 ||| Insert Parameter at Example:1
	double VAR_2
 ||| Update Invocation at Example:1
	 to VAR_3.put(VAR_1, VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1, VAR_2)
 ||| Insert TypeReference at Example:1
	double
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	java.lang.Double
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.toLowerCase()
 ||| Delete Invocation at Example:1
	.get(VAR_4.toLowerCase())
 ||| Delete LocalVariable at Example:1
	java.lang.Double VAR_2 = .get(VAR_4.toLowerCase())
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete VariableWrite at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete Assignment at Example:1
	VAR_2 = FLOAT_1
 ||| Delete Block at Example:1
	{
	    VAR_2 = FLOAT_1;
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    VAR_2 = FLOAT_1;
	
	}
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Return at Example:1
	return VAR_2
 ||| 
LINE:2062###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3)
 ||| 
LINE:2063###Move TypeAccess from Example:1 to Example:1
	VAR_4
 ||| 
LINE:2064###Move Invocation from Example:1 to Example:1
	java.lang.Double.METHOD_2(getText())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| 
LINE:2065###Insert If at Example:1
	if () {
	    return ;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
	{
	    return ;
	}
 ||| Move Literal from Example:1 to Example:1
	null
 ||| Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete Conditional at Example:1
	 ?  : 
 ||| 
LINE:2066###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.error(VAR_3)
 ||| Delete ConstructorCall at Example:1
	new java.io.IOException()
 ||| Delete Throw at Example:1
	throw new java.io.IOException()
 ||| Delete Block at Example:1
	{
	    VAR_2.error(VAR_3);
	    throw new java.io.IOException();
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    VAR_2.error(VAR_3);
	    throw new java.io.IOException();
	}
 ||| 
LINE:2067###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(super.METHOD_1(VAR_1))
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:2068###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(data, offset, count)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1 > 0
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 > 0)
 ||| 
LINE:2069###Move Assignment from Example:1 to Example:1
	this.VAR_3 = VAR_1
 ||| Move Assignment from Example:1 to Example:1
	this.VAR_4 = VAR_2
 ||| Delete SuperAccess at Example:1
	super
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	super.METHOD_1(VAR_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2(VAR_1)) {
	
	
	}
 ||| 
LINE:2070###Insert If at Example:1
	if () {
	    return ;
	}
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2().equals(VAR_1)
 ||| Insert Block at Example:1
	{
	    return ;
	}
 ||| Insert Literal at Example:1
	false
 ||| Insert Return at Example:1
	return 
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:2071###Move Invocation from Example:1 to Example:1
	this.VAR_2.add(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_2(STRING_1)
 ||| Delete Block at Example:1
	
	    throw new TYPE_2(STRING_1);
 ||| Delete If at Example:1
	if (VAR_1 != null)
	
	else
	    throw new TYPE_2(STRING_1);
 ||| 
LINE:2072###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_2.METHOD_3(STRING_1))
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	 == 0
 ||| Delete Invocation at Example:1
	VAR_1.assertTrue( == 0)
 ||| 
LINE:2073###Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 + VAR_2
 ||| 
LINE:2074###Move Assignment from Example:1 to Example:1
	this.VAR_4 = length()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.length()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	VAR_3.length() > VAR_4
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3.length() > VAR_4) {
	
	}
 ||| 
LINE:2075###Update BinaryOperator at Example:1
	 to i < VAR_1
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1 + 1)
 ||| Move VariableRead from Example:1 to Example:1
	i
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 < 
 ||| 
LINE:2076###Update Invocation at Example:1
	 to TYPE_2.METHOD_1(TYPE_2.METHOD_3(file))
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(TYPE_2.METHOD_3(file))
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_1()
 ||| 
LINE:2077###Move Invocation from Example:1 to Example:1
	VAR_2.add(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.contains(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.contains(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_2.contains(VAR_1)) {
	
	}
 ||| 
LINE:2078###Move Invocation from Example:1 to Example:1
	METHOD_2(METHOD_3(STRING_1), java.lang.Integer.toString(count))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	assertThat()
 ||| 
LINE:2079###Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:2080###Move Invocation from Example:1 to Example:1
	METHOD_2(INT_1, 1, STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| 
LINE:2081###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.update(VAR_3, VAR_1)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2082###Move LocalVariable from Example:1 to Example:1
	android.content.Intent intent = new android.content.Intent(this, VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(intent)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this, VAR_1)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(this, VAR_1)) {
	
	
	}
 ||| 
LINE:2083###Insert If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| Insert BinaryOperator at Example:1
	VAR_1 != null
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| 
LINE:2084###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	}
 ||| 
LINE:2085###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:2086###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(STRING_1, 1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1, VAR_2, STRING_2)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1, VAR_3, STRING_3)
 ||| Delete Try at Example:1
	try {
	
	
	} finally {
	
	}
 ||| 
LINE:2087###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| 
LINE:2088###Move Invocation from Example:1 to Example:1
	VAR_3.getId()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:2089###Move Assignment from Example:1 to Example:1
	VAR_2 = true
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_1)
 ||| 
LINE:2090###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2091###Move Invocation from Example:1 to Example:1
	VAR_1.get()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:2092###Move Invocation from Example:1 to Example:1
	context.METHOD_2()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:2093###Move Invocation from Example:1 to Example:1
	VAR_2.getName()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:2094###Insert Invocation at Example:1
	this.getId()
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:2095###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(this)
 ||| 
LINE:2096###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2(VAR_1)) {
	
	}
 ||| 
LINE:2097###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete WildcardReference at Example:1
	?
 ||| Delete TypeReference at Example:1
	java.lang.Class<?>
 ||| Delete TypeAccess at Example:1
	lang
 ||| Delete Invocation at Example:1
	lang.<java.lang.Class<?>>METHOD_2()
 ||| Delete BinaryOperator at Example:1
	VAR_3 < lang.<java.lang.Class<?>>METHOD_2()
 ||| 
LINE:2098###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:2099###Insert BinaryOperator at Example:1
	 && 
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1, item)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(item)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| 
LINE:2100###Move Return from Example:1 to Example:1
	return VAR_1.length
 ||| Delete FieldRead at Example:1
	data
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	data != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (data != null) {
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| 
LINE:2101###Insert TypeAccess at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete BinaryOperator at Example:1
	VAR_4 + VAR_5
 ||| 
LINE:2102###Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_5 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_5 != null)
 ||| 
LINE:2103###Insert FieldWrite at Example:1
	VAR_1
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	position
 ||| Delete ArrayWrite at Example:1
	VAR_1[position]
 ||| Delete FieldRead at Example:1
	position
 ||| Delete ArrayRead at Example:1
	[position]
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	position
 ||| Delete ArrayRead at Example:1
	VAR_1[position]
 ||| 
LINE:2104###Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| 
LINE:2105###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 * METHOD_2()
 ||| 
LINE:2106###Move Return from Example:1 to Example:1
	return VAR_2.get(VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_4.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1 + VAR_4.METHOD_2(), VAR_3)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1 + VAR_4.METHOD_2(), VAR_3)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	    throw new TYPE_1(STRING_1 + VAR_4.METHOD_2(), VAR_3);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	    throw new TYPE_1(STRING_1 + VAR_4.METHOD_2(), VAR_3);
	}
 ||| 
LINE:2107###Move UnaryOperator from Example:1 to Example:1
	(!VAR_1.METHOD_2())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:2108###Insert BinaryOperator at Example:1
	(VAR_1 == null) || 
 ||| Insert BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.equals(VAR_1)
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:2109###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2)
 ||| 
LINE:2110###Move Invocation from Example:1 to Example:1
	TYPE_4.METHOD_2().METHOD_3(message)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	
	}
 ||| 
LINE:2111###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:2112###Update TypeReference at Example:1
	java.lang.Float to float
 ||| Move Return from Example:1 to Example:1
	return VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0.0F
 ||| Delete Return at Example:1
	return 0.0F
 ||| Delete Block at Example:1
	
	    return 0.0F;
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 == null)
	    return 0.0F;
	else
 ||| 
LINE:2113###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Update BinaryOperator at Example:1
	(VAR_1 != null) && (TYPE_2.METHOD_2().METHOD_3() != null) to (VAR_1 == null) || (TYPE_2.METHOD_2().METHOD_3() == null)
 ||| Update BinaryOperator at Example:1
	(VAR_1 != null) to (VAR_1 == null)
 ||| Update BinaryOperator at Example:1
	(TYPE_2.METHOD_2().METHOD_3() != null) to (TYPE_2.METHOD_2().METHOD_3() == null)
 ||| Insert Return at Example:1
	return
 ||| 
LINE:2114###Move LocalVariable from Example:1 to Example:1
	TYPE_2 VAR_3 = VAR_4.get(VAR_1.METHOD_2())
 ||| Move If from Example:1 to Example:1
	if (VAR_3 == null) {
	    return;
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_2)
 ||| Insert Wra at Example:1
	
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	
	
	}
 ||| 
LINE:2115###Move BinaryOperator from Example:1 to Example:1
	((TYPE_1.METHOD_2(key) == null) && (context != null))
 ||| Move BinaryOperator from Example:1 to Example:1
	(context.METHOD_3(key) == null)
 ||| Delete FieldRead at Example:1
	context
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(context != null)
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:2116###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(VAR_1, VAR_2, VAR_3)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2117###Move Return from Example:1 to Example:1
	return !VAR_2.METHOD_2(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:2118###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	0
 ||| Delete Invocation at Example:1
	METHOD_3(0)
 ||| Delete Block at Example:1
	{
	    METHOD_3(0);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    METHOD_3(0);
	} else {
	
	}
 ||| 
LINE:2119###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(key, VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:2120###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_1.METHOD_2(METHOD_3(), false, VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	
	}
 ||| 
LINE:2121###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| 
LINE:2122###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    METHOD_2();
	}
 ||| 
LINE:2123###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_2 != null)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_2 != null)) {
	
	}
 ||| 
LINE:2124###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2(VAR_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_2.METHOD_2(VAR_1);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| 
LINE:2125###Move Assignment from Example:1 to Example:1
	list = VAR_1
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	
	}
 ||| 
LINE:2126###Delete Literal at Example:1
	null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete BinaryOperator at Example:1
	null != this.VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.METHOD_3()
 ||| Delete Block at Example:1
	{
	    this.VAR_2.METHOD_3();
	}
 ||| Delete If at Example:1
	if (null != this.VAR_2) {
	    this.VAR_2.METHOD_3();
	}
 ||| 
LINE:2127###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_6()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3)
 ||| 
LINE:2128###Move Invocation from Example:1 to Example:1
	VAR_1.put(VAR_2, value)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	value
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(value)
 ||| Delete UnaryOperator at Example:1
	!TYPE_1.METHOD_2(value)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete Invocation at Example:1
	VAR_1.put(VAR_2, null)
 ||| Delete Block at Example:1
	{
	    VAR_1.put(VAR_2, null);
	}
 ||| Delete If at Example:1
	if (!TYPE_1.METHOD_2(value)) {
	
	} else {
	    VAR_1.put(VAR_2, null);
	}
 ||| 
LINE:2129###Insert BinaryOperator at Example:1
	(() ( + 1))
 ||| Move TypeReference from Example:1 to Example:1
	int
 ||| Move BinaryOperator from Example:1 to Example:1
	((int) (METHOD_2() - offset))
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:2130###ERROR: Gumtree failed to process. Message: 
LINE:2131###Move While from Example:1 to Example:1
	while (VAR_2.size() >= VAR_3) {
	    VAR_1.METHOD_2();
	} 
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(message)
 ||| Insert Invocation at Example:1
	METHOD_4()
 ||| Insert Wra at Example:1
	
 ||| Insert TypeAccess at Example
	Example
 ||| Update TypeAccess at Example:1
	VAR_1 to Example
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	
	    VAR_1.METHOD_4();
	}
 ||| 
LINE:2132###Move If from Example:1 to Example:1
	if (VAR_2) {
	    METHOD_4(VAR_3);
	} else {
	    METHOD_4(VAR_4);
	}
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_4(VAR_1)
 ||| Delete Block at Example:1
	{
	    METHOD_4(VAR_1);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	    METHOD_4(VAR_1);
	} else 
 ||| 
LINE:2133###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| 
LINE:2134###Move If from Example:1 to Example:1
	if (VAR_3 == "\n") {
	    VAR_4 = true;
	} else {
	    TYPE_2.METHOD_2(VAR_3);
	    VAR_5 += VAR_3;
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
	{
	}
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2) {
	} else 
 ||| 
LINE:2135###Update Invocation at Example:1
	VAR_2.METHOD_2(VAR_1.METHOD_3()) to METHOD_1(VAR_1.METHOD_3())
 ||| Update TypeAccess at Example:1
	VAR_2 to Example
 ||| 
LINE:2136###Insert BinaryOperator at Example:1
	 == VAR_2
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.equals(VAR_2)
 ||| 
LINE:2137###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| 
LINE:2138###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1()
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = TYPE_1.METHOD_2()
 ||| 
LINE:2139###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2140###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1.METHOD_3())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete While at Example:1
	while (VAR_1.METHOD_1())
 ||| 
LINE:2141###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2(STRING_1).equals(STRING_2)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3(VAR_3)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3(VAR_3);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	    VAR_2.METHOD_3(VAR_3);
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:2142###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	 || VAR_2
 ||| 
LINE:2143###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_1 = ((TYPE_1) (getActivity().METHOD_3(VAR_2)))
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(INT_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	
	}
 ||| 
LINE:2144###Update Parameter at Example:1
	java.util.List<java.lang.String> results to java.lang.String result
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(METHOD_3(), result, VAR_2).show()
 ||| Move TypeReference from Example:1 to Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.lang.String
 ||| Delete TypeReference at Example:1
	java.util.List<java.lang.String>
 ||| Delete LocalVariable at Example:1
	 result
 ||| Delete VariableRead at Example:1
	results
 ||| Delete ForEach at Example:1
	for ( result : results)
 ||| 
LINE:2145###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3().METHOD_4()
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	
	}
 ||| 
LINE:2146###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:2147###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(VAR_2)
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete Invocation at Example:1
	java.lang.String.METHOD_2()
 ||| 
LINE:2148###Delete TypeReference at Example:1
	int
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	count
 ||| Delete BinaryOperator at Example:1
	VAR_2 + count
 ||| Delete LocalVariable at Example:1
	int VAR_1 = VAR_2 + count
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_3, STRING_1 + VAR_1)
 ||| Delete FieldWrite at Example:1
	VAR_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_2(METHOD_3(), VAR_1)
 ||| Delete Assignment at Example:1
	VAR_4 = new TYPE_2(METHOD_3(), VAR_1)
 ||| 
LINE:2149###Update Invocation at Example:1
	 to TYPE_1.METHOD_2(VAR_1.getContext()).METHOD_3(url).METHOD_6(TYPE_3.METHOD_7()).METHOD_8(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1.getContext()).METHOD_3(url).METHOD_4(TYPE_2.METHOD_5()).METHOD_6(TYPE_3.METHOD_7())
 ||| Update Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1.getContext()).METHOD_3(url).METHOD_4(TYPE_2.METHOD_5()) to TYPE_1.METHOD_2(VAR_1.getContext()).METHOD_3(url).METHOD_6(TYPE_3.METHOD_7())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move Invocation from Example:1 to Example:1
	TYPE_3.METHOD_7()
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_5()
 ||| Delete Invocation at Example:1
	.METHOD_8()
 ||| 
LINE:2150###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2151###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| 
LINE:2152###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_5()
 ||| Update Invocation at Example:1
	VAR_1.METHOD_6() to VAR_1.METHOD_4()
 ||| 
LINE:2153###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Return at Example:1
	return this
 ||| Delete Block at Example:1
	{
	
	}
 ||| 
LINE:2154###Move Invocation from Example:1 to Example:1
	VAR_3.getValue()
 ||| Insert TypeReference at Example:1
	double
 ||| Delete TypeAccess at Example:1
	java.lang.Double
 ||| Delete Invocation at Example:1
	.toString()
 ||| Delete Invocation at Example:1
	java.lang.Double.METHOD_2(.toString())
 ||| 
LINE:2155###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(VAR_2)
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:2156###Move Invocation from Example:1 to Example:1
	new TYPE_1(getActivity(), this).execute(VAR_2.toString(), VAR_1.METHOD_2())
 ||| Update ConstructorCall at Example:1
	new TYPE_1(getActivity(), this) to new TYPE_1(this)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.toString()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2157###Insert UnaryOperator at Example:1
	VAR_1++
 ||| Insert FieldWrite at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_1 + 1
 ||| 
LINE:2158###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| 
LINE:2159###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(new TYPE_1(METHOD_3(), name, VAR_1))
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_4();
	}
 ||| 
LINE:2160###Update TypeReference at Example:1
	TYPE_1<java.lang.Integer> to int
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Insert UnaryOperator at Example:1
	-1
 ||| Insert Literal at Example:1
	1
 ||| Delete TypeReference at Example:1
	java.lang.Integer
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3()
 ||| 
LINE:2161###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	
	    return;
 ||| Delete If at Example:1
	if (VAR_2 == null)
	    return;
 ||| 
LINE:2162###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_1 = new TYPE_1(file)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Update BinaryOperator at Example:1
	file != null to file == null
 ||| Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_1 = new TYPE_1()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Block at Example:1
	{
	
	    VAR_1.METHOD_1();
	}
 ||| 
LINE:2163###Update Invocation at Example:1
	 to VAR_2.assertEquals(VAR_1.METHOD_2(), STRING_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().getValue()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move TypeAccess from Example:1 to Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.assertEquals(, )
 ||| 
LINE:2164###Move Invocation from Example:1 to Example:1
	METHOD_3(getString(VAR_1))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	
	}
 ||| 
LINE:2165###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Literal at Example:1
	true
 ||| Delete BinaryOperator at Example:1
	(VAR_2.METHOD_2() == true)
 ||| Delete BinaryOperator at Example:1
	 || (VAR_2.METHOD_2() == true)
 ||| 
LINE:2166###Insert TypeAccess at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(VAR_2)
 ||| Delete LocalVariable at Example:1
	final TYPE_3 VAR_1 = new TYPE_3(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:2167###Update TypeReference at Example:1
	java.util.Set<java.lang.String> to java.util.List<java.lang.String>
 ||| 
LINE:2168###Insert If at Example:1
	if ()
	    return false;
	else
	    return true;
 ||| Update BinaryOperator at Example:1
	 to this.VAR_1 > INT_1
 ||| Move BinaryOperator from Example:1 to Example:1
	this.VAR_1 < INT_1
 ||| Insert Block at Example:1
	
	    return false;
 ||| Insert Block at Example:1
	
	    return true;
 ||| Insert Return at Example:1
	return false
 ||| Insert Return at Example:1
	return true
 ||| Insert Literal at Example:1
	false
 ||| Insert Literal at Example:1
	true
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2169###Insert If at Example:1
	if ( != null) {
	    VAR_2.METHOD_2();
	}
 ||| Insert BinaryOperator at Example:1
	 != null
 ||| Insert Block at Example:1
	{
	    VAR_2.METHOD_2();
	}
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Insert Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete ForEach at Example:1
	for (TYPE_1 VAR_1 : ) {
	    VAR_1.METHOD_2();
	}
 ||| 
LINE:2170###Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| 
LINE:2171###Move UnaryOperator from Example:1 to Example:1
	(!VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	(!VAR_3)
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_3)
 ||| 
LINE:2172###Move Invocation from Example:1 to Example:1
	VAR_4.setText(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_3)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || VAR_2.equals(VAR_3)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	getString(VAR_5)
 ||| Delete Invocation at Example:1
	VAR_4.setText(getString(VAR_5))
 ||| Delete Block at Example:1
	{
	    VAR_4.setText(getString(VAR_5));
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 == null) || VAR_2.equals(VAR_3)) {
	    VAR_4.setText(getString(VAR_5));
	} else {
	
	}
 ||| 
LINE:2173###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1).METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.add(true)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_5.assertTrue(false)
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	    VAR_5.assertTrue(false);
	}
 ||| Delete Try at Example:1
	try {
	
	
	
	} catch (java.lang.Exception VAR_4) {
	    VAR_5.assertTrue(false);
	}
 ||| 
LINE:2174###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return false;
	}
 ||| 
LINE:2175###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(STRING_1, STRING_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| 
LINE:2176###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_1.METHOD_2();
	}
 ||| 
LINE:2177###Update Method at Example:1
	public void METHOD_1(java.lang.String data) {
	    TYPE_1.METHOD_2(this, data, VAR_1).show();
	} to public void get(android.view.View view) {
	}
 ||| Update Parameter at Example:1
	java.lang.String data to android.view.View view
 ||| Update TypeReference at Example:1
	java.lang.String to android.view.View
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete VariableRead at Example:1
	data
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this, data, VAR_1)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(this, data, VAR_1).show()
 ||| 
LINE:2178###Delete FieldRead at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_3 > INT_1)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_4 > INT_1)
 ||| Delete BinaryOperator at Example:1
	(VAR_3 > INT_1) || (VAR_4 > INT_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if ((VAR_3 > INT_1) || (VAR_4 > INT_1)) {
	    return true;
	}
 ||| 
LINE:2179###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_2)
 ||| Delete Block at Example:1
	{
	    METHOD_3(VAR_2);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    METHOD_3(VAR_2);
	}
 ||| 
LINE:2180###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:2181###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(STRING_1, STRING_2 + VAR_1.METHOD_1())
 ||| Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete Return at Example:1
	return STRING_3
 ||| Delete Block at Example:1
	{
	    return STRING_3;
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	} else {
	    return STRING_3;
	}
 ||| 
LINE:2182###Insert If at Example:1
	if (VAR_2 >= 0) {
	
	} else {
	    return null;
	}
 ||| Insert BinaryOperator at Example:1
	VAR_2 >= 0
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Block at Example:1
	{
	    return null;
	}
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	0
 ||| Move Return from Example:1 to Example:1
	return VAR_1.open(VAR_2)
 ||| Insert Return at Example:1
	return null
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_4, VAR_3)
 ||| 
LINE:2183###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_3(STRING_2, STRING_3)
 ||| 
LINE:2184###Update TypeReference at Example:1
	TYPE_1 to java.lang.String
 ||| Insert Invocation at Example:1
	.toString()
 ||| Move Invocation from Example:1 to Example:1
	date.METHOD_2()
 ||| 
LINE:2185###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2().METHOD_3(VAR_3, new java.lang.Object[]{ VAR_4 })
 ||| Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4().METHOD_5(STRING_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if ()
 ||| 
LINE:2186###Update Invocation at Example:1
	 to VAR_1.put(name, value)
 ||| Move Invocation from Example:1 to Example:1
	java.lang.String.format(STRING_1, name, value)
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	.add()
 ||| 
LINE:2187###Update Invocation at Example:1
	 to TYPE_3.METHOD_2(VAR_1.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3().METHOD_4(new java.lang.String[0])
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_3
 ||| Delete Literal at Example:1
	0
 ||| Delete NewArray at Example:1
	new java.lang.String[0]
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:2188###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete ArrayRead at Example:1
	[0]
 ||| Delete Literal at Example:1
	0
 ||| Delete ArrayRead at Example:1
	[0]
 ||| 
LINE:2189###Move BinaryOperator from Example:1 to Example:1
	((VAR_2.isEmpty() || VAR_2.contains(VAR_3)) || VAR_2.contains(VAR_4))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	(!VAR_1)
 ||| Delete BinaryOperator at Example:1
	(!VAR_1) && 
 ||| 
LINE:2190###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1, VAR_2)
 ||| Delete UnaryOperator at Example:1
	(!TYPE_2.METHOD_2(VAR_1, VAR_2))
 ||| Delete BinaryOperator at Example:1
	 || (!TYPE_2.METHOD_2(VAR_1, VAR_2))
 ||| 
LINE:2191###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:2192###Update Invocation at Example:1
	VAR_2.delete(VAR_3, (VAR_4 + STRING_1) + , null) to METHOD_1(VAR_1.METHOD_2())
 ||| Update TypeAccess at Example:1
	VAR_2 to Example
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	(VAR_4 + STRING_1)
 ||| Delete BinaryOperator at Example:1
	(VAR_4 + STRING_1) + 
 ||| Delete Literal at Example:1
	null
 ||| 
LINE:2193###Move Invocation from Example:1 to Example:1
	VAR_3.put(VAR_1, VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(this)
 ||| Delete Block at Example:1
	{
	
	    VAR_2.METHOD_2(this);
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	    VAR_2.METHOD_2(this);
	}
 ||| 
LINE:2194###Insert Invocation at Example:1
	VAR_2.METHOD_3(VAR_1)
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| 
LINE:2195###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1).METHOD_3(TYPE_1.METHOD_4(STRING_1)).METHOD_5(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	.METHOD_6(VAR_3)
 ||| 
LINE:2196###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 + TYPE_1.METHOD_2(new java.util.Date(TYPE_2.METHOD_3())))
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	 + VAR_3
 ||| 
LINE:2197###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 - INT_1
 ||| 
LINE:2198###Insert Literal at Example:1
	false
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete Assignment at Example:1
	this.VAR_1 = this.METHOD_2()
 ||| 
LINE:2199###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3().METHOD_4()
 ||| Update Invocation at Example:1
	VAR_1.METHOD_2().METHOD_3() to VAR_1.METHOD_3().METHOD_5()
 ||| Update Invocation at Example:1
	VAR_1.METHOD_2() to VAR_1.METHOD_3()
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| Delete Invocation at Example:1
	.METHOD_5().METHOD_4()
 ||| 
LINE:2200###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:2201###Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| 
LINE:2202###Move Invocation from Example:1 to Example:1
	VAR_2.setText(title)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2203###Update TypeReference at Example:1
	double to long
 ||| Insert Invocation at Example:1
	java.lang.Math.round()
 ||| Insert TypeAccess at Example:1
	java.lang.Math
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3().METHOD_4().METHOD_5(METHOD_6()).METHOD_7(VAR_1)
 ||| 
LINE:2204###Move Return from Example:1 to Example:1
	return super.METHOD_1()
 ||| Delete FieldRead at Example:1
	position
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(position > VAR_1)
 ||| Delete FieldRead at Example:1
	position
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	(-1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	((-1) * VAR_1)
 ||| Delete BinaryOperator at Example:1
	(position < ((-1) * VAR_1))
 ||| Delete BinaryOperator at Example:1
	(position > VAR_1) || (position < ((-1) * VAR_1))
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((position > VAR_1) || (position < ((-1) * VAR_1))) {
	
	}
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| 
LINE:2205###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(VAR_1)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_2).equals(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!TYPE_2.METHOD_2(VAR_2).equals(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!TYPE_2.METHOD_2(VAR_2).equals(VAR_1)) {
	
	}
 ||| 
LINE:2206###Insert Invocation at Example:1
	super.METHOD_1(VAR_1)
 ||| Insert SuperAccess at Example:1
	super
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| 
LINE:2207###Update ConstructorCall at Example:1
	new java.io.File(, (STRING_2 + ) + STRING_3) to new java.io.File(((VAR_3 + VAR_1) + STRING_2) + STRING_3)
 ||| Insert BinaryOperator at Example:1
	( + )
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| 
LINE:2208###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	    return true;
	}
 ||| 
LINE:2209###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3(false)
 ||| Delete Block at Example:1
	{
	    VAR_1.METHOD_3(false);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	    VAR_1.METHOD_3(false);
	}
 ||| 
LINE:2210###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3(this)
 ||| Delete TypeAccess at Example
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3.expr
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3.expr != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3.expr != null)
 ||| 
LINE:2211###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.isEmpty()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(this, STRING_1, VAR_2)
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(this, STRING_1, VAR_2).show()
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_3(this, STRING_1, VAR_2).show();
	}
 ||| Delete If at Example:1
	if (!VAR_1.isEmpty()) {
	
	} else {
	    TYPE_1.METHOD_3(this, STRING_1, VAR_2).show();
	}
 ||| 
LINE:2212###Move LocalVariable from Example:1 to Example:1
	TYPE_2<TYPE_1> VAR_2 = VAR_3.get(VAR_4.getType())
 ||| Move If from Example:1 to Example:1
	if (VAR_2 instanceof TYPE_3) {
	    VAR_2.METHOD_2(VAR_1);
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:2213###Move Assignment from Example:1 to Example:1
	VAR_4 = result.METHOD_3()
 ||| Delete Block at Example:1
 ||| 
LINE:2214###Move Block from Example:1 to Example:1
	{
	    VAR_2.METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_2();
	}
 ||| Delete Block at Example:1
	
	    if (VAR_3 != null) {
	        VAR_3.METHOD_2();
	    }
 ||| Delete If at Example:1
	if (VAR_2 != null)  else if (VAR_3 != null) {
	    VAR_3.METHOD_2();
	}
 ||| Delete Block at Example:1
	{
	    if (VAR_2 != null)  else if (VAR_3 != null) {
	        VAR_3.METHOD_2();
	    }
	}
 ||| 
LINE:2215###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	METHOD_3(true)
 ||| Delete Block at Example:1
	{
	    METHOD_3(true);
	
	}
 ||| Delete If at Example:1
	if (METHOD_2()) {
	    METHOD_3(true);
	
	}
 ||| 
LINE:2216###Move If from Example:1 to Example:1
	if (!VAR_6) {
	    VAR_7.METHOD_3();
	}
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Synchronized at Example:1
	synchronized(VAR_5) {
	
	}
 ||| 
LINE:2217###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1.METHOD_4())
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_2.equals(VAR_1.METHOD_2())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.equals(VAR_1.METHOD_2())) {
	
	}
 ||| 
LINE:2218###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_2.getType(), VAR_1.METHOD_3())
 ||| 
LINE:2219###Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:2220###Move FieldRead from Example:1 to Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:2221###Update Invocation at Example:1
	 to VAR_2.put(VAR_3.id(), VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.id().toLowerCase()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_2
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.put(, )
 ||| 
LINE:2222###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_4) {
	}
 ||| 
LINE:2223###Move ConstructorCall from Example:1 to Example:1
	new TYPE_3(VAR_1, VAR_2)
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:2224###Delete FieldRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Block at Example:1
	{
	    METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	    METHOD_2();
	}
 ||| 
LINE:2225###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(VAR_2 | VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete BinaryOperator at Example:1
	(VAR_2 | VAR_3) | VAR_4
 ||| Delete Invocation at Example:1
	intent.METHOD_3((VAR_2 | VAR_3) | VAR_4)
 ||| 
LINE:2226###Move Return from Example:1 to Example:1
	return VAR_2.isEmpty()
 ||| Insert Wra at Example:1
	
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1) {
	
	}
 ||| 
LINE:2227###ERROR: Gumtree failed to process. Message: 
LINE:2228###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, VAR_3, VAR_2)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2229###Insert TypeAccess at Example:1
	VAR_5
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_5 - 1
 ||| 
LINE:2230###ERROR: Gumtree failed to process. Message: 
LINE:2231###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == VAR_2.METHOD_2().METHOD_3())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:2232###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 == null) {
	
	}
 ||| 
LINE:2233###Move Invocation from Example:1 to Example:1
	VAR_1.setText(data[0])
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_2
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_2) {
	}
 ||| 
LINE:2234###Move If from Example:1 to Example:1
	if (METHOD_2()) {
	    state = VAR_3;
	} else {
	    state = VAR_4;
	}
 ||| Delete FieldRead at Example:1
	state
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(state == VAR_1)
 ||| Delete FieldRead at Example:1
	state
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(state == VAR_2)
 ||| Delete BinaryOperator at Example:1
	(state == VAR_1) || (state == VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((state == VAR_1) || (state == VAR_2)) {
	
	}
 ||| 
LINE:2235###Move ConstructorCall from Example:1 to Example:1
	new java.util.Date(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Conditional at Example:1
	VAR_1 == null ? null : 
 ||| 
LINE:2236###Move BinaryOperator from Example:1 to Example:1
	(number + STRING_1)
 ||| Move BinaryOperator from Example:1 to Example:1
	(number + STRING_1) + name
 ||| Move FieldRead from Example:1 to Example:1
	STRING_1
 ||| 
LINE:2237###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_1()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 != null) && 
 ||| 
LINE:2238###Move Assignment from Example:1 to Example:1
	VAR_2 = event.METHOD_2()
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = event.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	FLOAT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1 != FLOAT_1
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != FLOAT_1) {
	
	
	}
 ||| 
LINE:2239###Move Assignment from Example:1 to Example:1
	VAR_2 = true
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(0, 0, VAR_4, 0)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getText()
 ||| Delete Invocation at Example:1
	VAR_1.getText().toString()
 ||| Delete Invocation at Example:1
	VAR_1.getText().toString().trim()
 ||| Delete Invocation at Example:1
	VAR_1.getText().toString().trim().isEmpty()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.getText().toString().trim().isEmpty()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.getText().toString().trim().isEmpty()) {
	
	
	}
 ||| 
LINE:2240###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2241###Move Invocation from Example:1 to Example:1
	((TYPE_2) (VAR_2)).METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete BinaryOperator at Example:1
	VAR_2 instanceof TYPE_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 instanceof TYPE_2)
 ||| 
LINE:2242###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() != 0)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:2243###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == null)
 ||| Update BinaryOperator at Example:1
	(java.lang.Double.METHOD_2(VAR_2 - VAR_3, VAR_4) >= 0) to (java.lang.Double.METHOD_2(VAR_2 + VAR_3, VAR_4) > 0)
 ||| Update BinaryOperator at Example:1
	VAR_2 - VAR_3 to VAR_2 + VAR_3
 ||| 
LINE:2244###Move Invocation from Example:1 to Example:1
	c.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	
	}
 ||| 
LINE:2245###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(this)
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Throw at Example:1
	throw VAR_3
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_2(this);
	    throw VAR_3;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    VAR_3.METHOD_2(this);
	    throw VAR_3;
	}
 ||| 
LINE:2246###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 + STRING_1)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	 + VAR_3
 ||| 
LINE:2247###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 <= (-1))
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.startTime
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(this.startTime > 0)
 ||| Delete BinaryOperator at Example:1
	(this.startTime > 0) && 
 ||| 
LINE:2248###Delete Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	null == VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (null == VAR_1) {
	    return false;
	}
 ||| 
LINE:2249###Delete TypeAccess at Example
	Example
 ||| 
LINE:2250###Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_4(VAR_2.getText().toString()).METHOD_5()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 * INT_1
 ||| 
LINE:2251###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(TYPE_1.METHOD_4(VAR_1, STRING_1, format, args))
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_2)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(VAR_2))
 ||| 
LINE:2252###Move Invocation from Example:1 to Example:1
	METHOD_4(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3().METHOD_2()
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2() == VAR_1.METHOD_3().METHOD_2()
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2() == VAR_1.METHOD_3().METHOD_2()) {
	    return;
	} else {
	
	}
 ||| 
LINE:2253###Update Method at Example:1
	public TYPE_1 METHOD_1() {
	    TYPE_1 element = .array[VAR_2 - 1];
	    this.VAR_3 = VAR_2;
	    this.VAR_2 -= 1;
	    return element;
	} to public void remove() {
	    VAR_1.remove(VAR_2);
	}
 ||| Update TypeReference at Example:1
	TYPE_1 to void
 ||| Insert Invocation at Example:1
	.remove(VAR_2)
 ||| Move TypeAccess from Example to Example:1
	VAR_1
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete FieldRead at Example:1
	.array
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2 - 1
 ||| Delete ArrayRead at Example:1
	.array[VAR_2 - 1]
 ||| Delete LocalVariable at Example:1
	TYPE_1 element = .array[VAR_2 - 1]
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_3
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Assignment at Example:1
	this.VAR_3 = VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldWrite at Example:1
	this.VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete OperatorAssignment at Example:1
	this.VAR_2 -= 1
 ||| Delete VariableRead at Example:1
	element
 ||| Delete Return at Example:1
	return element
 ||| 
LINE:2254###Move Invocation from Example:1 to Example:1
	METHOD_2(context, true)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	 == VAR_1
 ||| Delete VariableRead at Example:1
	context
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	context.METHOD_3(false)
 ||| Delete Block at Example:1
	{
	    context.METHOD_3(false);
	}
 ||| Delete VariableRead at Example:1
	context
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	context.METHOD_3(true)
 ||| Delete Block at Example:1
	{
	    context.METHOD_3(true);
	}
 ||| Delete If at Example:1
	if ( == VAR_1) {
	    context.METHOD_3(false);
	} else {
	    context.METHOD_3(true);
	}
 ||| 
LINE:2255###Insert Invocation at Example:1
	.METHOD_1()
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Delete FieldRead at Example:1
	.VAR_1
 ||| 
LINE:2256###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	this.VAR_1 == null
 ||| Delete ConstructorCall at Example:1
	new java.util.HashSet<java.lang.String>()
 ||| Delete Return at Example:1
	return new java.util.HashSet<java.lang.String>()
 ||| Delete Block at Example:1
	
	    return new java.util.HashSet<java.lang.String>();
 ||| Delete If at Example:1
	if (this.VAR_1 == null)
	    return new java.util.HashSet<java.lang.String>();
 ||| 
LINE:2257###Move Return from Example:1 to Example:1
	return response.METHOD_2().METHOD_3()
 ||| Delete TypeReference at Example:1
	java.io.IOException
 ||| Delete CatchVariable at Example:1
	java.io.IOException VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (java.io.IOException VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.io.IOException VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:2258###Move VariableRead from Example:1 to Example:1
	x
 ||| Delete TypeReference at Example:1
	double
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	(VAR_2.METHOD_2() - VAR_3)
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(VAR_2.METHOD_2() - VAR_3) / INT_1
 ||| Delete LocalVariable at Example:1
	double VAR_1 = (VAR_2.METHOD_2() - VAR_3) / INT_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	( - VAR_1)
 ||| 
LINE:2259###Update Invocation at Example:1
	 to new java.lang.StringBuilder(super.toString()).append(STRING_1).append(STRING_2).toString()
 ||| Move Invocation from Example:1 to Example:1
	new java.lang.StringBuilder(super.toString()).append(STRING_1).append(STRING_2).append("\n")
 ||| Delete Literal at Example:1
	"\n"
 ||| Delete Invocation at Example:1
	.toString()
 ||| 
LINE:2260###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete LocalVariable at Example:1
	TYPE_2 VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete BinaryOperator at Example:1
	(VAR_1 instanceof TYPE_1)
 ||| Delete UnaryOperator at Example:1
	!(VAR_1 instanceof TYPE_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_3.remove(VAR_1)
 ||| Delete Block at Example:1
	{
	    this.VAR_3.remove(VAR_1);
	}
 ||| Delete If at Example:1
	if (!(VAR_1 instanceof TYPE_1)) {
	    this.VAR_3.remove(VAR_1);
	}
 ||| Delete ForEach at Example:1
	for (TYPE_2 VAR_1 : this.VAR_2) {
	    if (!(VAR_1 instanceof TYPE_1)) {
	        this.VAR_3.remove(VAR_1);
	    }
	}
 ||| 
LINE:2261###Move Assignment from Example:1 to Example:1
	VAR_1 = METHOD_2()
 ||| 
LINE:2262###Move ForEach from Example:1 to Example:1
	for (TYPE_2 VAR_2 : VAR_3) {
	    VAR_1 = TYPE_3.METHOD_3(VAR_2, VAR_1);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| Delete UnaryOperator at Example:1
	!METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!METHOD_2(VAR_1)) {
	
	}
 ||| 
LINE:2263###Move Invocation from Example:1 to Example:1
	VAR_1.getTime()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete BinaryOperator at Example:1
	(INT_1 * INT_2)
 ||| Delete BinaryOperator at Example:1
	 - (INT_1 * INT_2)
 ||| 
LINE:2264###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:2265###Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 == null)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(this.VAR_1 == null) || this.VAR_2.isEmpty()
 ||| Delete Literal at Example:1
	0
 ||| Delete NewArray at Example:1
	new java.lang.String[0]
 ||| Delete Return at Example:1
	return new java.lang.String[0]
 ||| Delete Block at Example:1
	
	    return new java.lang.String[0];
 ||| Delete If at Example:1
	if ((this.VAR_1 == null) || this.VAR_2.isEmpty())
	    return new java.lang.String[0];
 ||| 
LINE:2266###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete UnaryOperator at Example:1
	!this.VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!this.VAR_1)
 ||| 
LINE:2267###Move VariableRead from Example:1 to Example:1
	VAR_3
 ||| 
LINE:2268###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.get()
 ||| Delete UnaryOperator at Example:1
	!VAR_1.get()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!VAR_1.get()) {
	
	}
 ||| 
LINE:2269###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2270###Move Return from Example:1 to Example:1
	return TYPE_1.METHOD_2(VAR_1, VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete CatchVariable at Example:1
	TYPE_2 VAR_3
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_1) + STRING_2
 ||| Delete ConstructorCall at Example:1
	new TYPE_3((STRING_1 + VAR_1) + STRING_2)
 ||| Delete Throw at Example:1
	throw new TYPE_3((STRING_1 + VAR_1) + STRING_2)
 ||| Delete Catch at Example:1
	 catch (TYPE_2 VAR_3) {
	    throw new TYPE_3((STRING_1 + VAR_1) + STRING_2);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_2 VAR_3) {
	    throw new TYPE_3((STRING_1 + VAR_1) + STRING_2);
	}
 ||| 
LINE:2271###Move Invocation from Example:1 to Example:1
	a.METHOD_6()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:2272###Update Method at Example:1
	public TYPE_1 METHOD_1() {
	    if (VAR_1 == null) {
	        VAR_1 = TYPE_2.METHOD_2();
	    }
	    return VAR_1;
	} to public static android.content.Context getContext() {
	    return VAR_2.context;
	}
 ||| Update TypeReference at Example:1
	TYPE_1 to android.content.Context
 ||| Insert Wra at Example:1
	
 ||| Move FieldRead from Example:1 to Example:1
	VAR_2.context
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete FieldWrite at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Assignment at Example:1
	VAR_1 = TYPE_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	    VAR_1 = TYPE_2.METHOD_2();
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    VAR_1 = TYPE_2.METHOD_2();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| 
LINE:2273###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(VAR_5)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_4)
 ||| Delete Block at Example:1
	
	    VAR_3.METHOD_2(VAR_4);
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
	    VAR_3.METHOD_2(VAR_4);
	else
 ||| 
LINE:2274###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_4(true)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	    METHOD_2(STRING_1);
	}
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	    METHOD_2(STRING_1);
	} else {
	
	
	}
 ||| 
LINE:2275###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2() == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	
	    return null;
 ||| Delete If at Example:1
	if (METHOD_2() == null)
	    return null;
 ||| 
LINE:2276###Update ArrayTypeReference at Example:1
	double[] to int[]
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:2277###Delete TypeAccess at Example:1
	VAR_2
 ||| 
LINE:2278###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_2()[0] instanceof TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1.METHOD_2().length
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_1.METHOD_2().length > 0
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2().length > 0) {
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:2279###Update Invocation at Example:1
	 to VAR_1.remove(TYPE_1.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(TYPE_1.METHOD_3())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.remove()
 ||| 
LINE:2280###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| 
LINE:2281###Move Return from Example:1 to Example:1
	return TYPE_1.METHOD_2(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:2282###Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getName()
 ||| Delete Invocation at Example:1
	METHOD_3(VAR_1.getName())
 ||| 
LINE:2283###Move LocalVariable from Example:1 to Example:1
	TYPE_2 target = position.METHOD_2(VAR_1)
 ||| Move If from Example:1 to Example:1
	if (target != null) {
	    target.METHOD_3(this, position);
	}
 ||| Delete FieldRead at Example:1
	position
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	position != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (position != null) {
	
	
	}
 ||| 
LINE:2284###Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	event.METHOD_2().equals(VAR_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (event.METHOD_2().equals(VAR_1))
 ||| 
LINE:2285###Delete VariableRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	VAR_1 < VAR_2
 ||| Delete Assert at Example:1
	assert VAR_1 < VAR_2
 ||| 
LINE:2286###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_4(VAR_2).isEmpty()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:2287###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	boolean
 ||| Delete Parameter at Example:1
	boolean VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	java.lang.System.out.print(VAR_2)
 ||| 
LINE:2288###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().equals(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1.METHOD_2() != null) && 
 ||| 
LINE:2289###Move Invocation from Example:1 to Example:1
	METHOD_3(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete LocalVariable at Example:1
	TYPE_1 VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_2()) {
	
	}
 ||| Delete ForEach at Example:1
	for (TYPE_1 VAR_1 : VAR_2) {
	    if (VAR_1.METHOD_2()) {
	
	    }
	}
 ||| Delete FieldWrite at Example:1
	x
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Assignment at Example:1
	x = VAR_3
 ||| Delete FieldWrite at Example:1
	y
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Assignment at Example:1
	y = VAR_4
 ||| 
LINE:2290###Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(getActivity())
 ||| Delete UnaryOperator at Example:1
	!TYPE_1.METHOD_2(getActivity())
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(getActivity())
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_3(getActivity());
	    return;
	}
 ||| Delete If at Example:1
	if (!TYPE_1.METHOD_2(getActivity())) {
	    TYPE_1.METHOD_3(getActivity());
	    return;
	}
 ||| 
LINE:2291###Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| 
LINE:2292###Move FieldRead from Example:1 to Example:1
	VAR_1.length
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	 + INT_1
 ||| 
LINE:2293###Move FieldRead from Example:1 to Example:1
	this.VAR_1
 ||| 
LINE:2294###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Literal at Example:1
	false
 ||| Delete Conditional at Example:1
	VAR_1 != null ?  : false
 ||| 
LINE:2295###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(listener)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2296###Move Return from Example:1 to Example:1
	return this.getColor() == VAR_2.getColor()
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:2297###Move Invocation from Example:1 to Example:1
	new TYPE_2().show(METHOD_4(), STRING_3)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(true)
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(true).equals(STRING_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	METHOD_3(STRING_2)
 ||| Delete Block at Example:1
	{
	    METHOD_3(STRING_2);
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(true).equals(STRING_1)) {
	    METHOD_3(STRING_2);
	} else {
	
	}
 ||| 
LINE:2298###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	!VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2)
 ||| 
LINE:2299###Move If from Example:1 to Example:1
	if (getActivity() != null) {
	    getActivity().METHOD_4();
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	(!METHOD_2()) && (!METHOD_3())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	getActivity()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	getActivity() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if () {
	
	}
 ||| 
LINE:2300###Insert BinaryOperator at Example:1
	(this.VAR_1 != null) && 
 ||| Insert BinaryOperator at Example:1
	(this.VAR_1 != null)
 ||| Update Invocation at Example:1
	 to this.VAR_1.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_2(TYPE_1::METHOD_3)
 ||| Insert FieldRead at Example:1
	this.VAR_1
 ||| Insert Literal at Example:1
	null
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	TYPE_1
 ||| Delete ExecutableReferenceExpression at Example:1
	TYPE_1::METHOD_3
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	.METHOD_4(false)
 ||| 
LINE:2301###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_4)
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete CatchVariable at Example:1
	final TYPE_2 VAR_3
 ||| Delete Catch at Example:1
	 catch (final TYPE_2 VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (final TYPE_2 VAR_3) {
	}
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete CatchVariable at Example:1
	final TYPE_2 VAR_3
 ||| Delete Catch at Example:1
	 catch (final TYPE_2 VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (final TYPE_2 VAR_3) {
	}
 ||| 
LINE:2302###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || VAR_2.isEmpty()
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete Assignment at Example:1
	VAR_1 = STRING_1
 ||| Delete Block at Example:1
	{
	    VAR_1 = STRING_1;
	}
 ||| Delete If at Example:1
	if ((VAR_1 == null) || VAR_2.isEmpty()) {
	    VAR_1 = STRING_1;
	}
 ||| 
LINE:2303###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.size()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2.size() > 0)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && (VAR_2.size() > 0)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_1 != null) && (VAR_2.size() > 0)) {
	
	}
 ||| 
LINE:2304###Update Invocation at Example:1
	 to VAR_1.METHOD_2(java.lang.Long.parseLong(id))
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Long.METHOD_3(id).METHOD_4()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Update Invocation at Example:1
	java.lang.Long.METHOD_3(id) to java.lang.Long.parseLong(id)
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:2305###Insert BinaryOperator at Example:1
	 - 1
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:2306###Move Return from Example:1 to Example:1
	return METHOD_3(VAR_1, VAR_2, VAR_3)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_1().METHOD_2()
 ||| Delete Synchronized at Example:1
	synchronized(VAR_1.METHOD_1().METHOD_2()) {
	
	}
 ||| 
LINE:2307###ERROR: Gumtree failed to process. Message: 
LINE:2308###Insert Conditional at Example:1
	 ? true : false
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 == VAR_2.METHOD_2()
 ||| Insert Literal at Example:1
	true
 ||| Insert Literal at Example:1
	false
 ||| 
LINE:2309###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete Parameter at Example:1
	TYPE_2 VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| 
LINE:2310###Move Invocation from Example:1 to Example:1
	VAR_3.setText(java.lang.Integer.toString(VAR_4.METHOD_2()))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	VAR_2 == 1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 == 1) {
	
	}
 ||| 
LINE:2311###Update Invocation at Example:1
	 to VAR_1.get(TYPE_2.METHOD_2() % VAR_1.size())
 ||| Move Invocation from Example:1 to Example:1
	java.lang.Math.abs(TYPE_2.METHOD_2() % VAR_1.size())
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	.get()
 ||| 
LINE:2312###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:2313###Move Return from Example:1 to Example:1
	return TYPE_2.METHOD_2().get(VAR_2.getName())
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	    return null;
	}
 ||| 
LINE:2314###Move Invocation from Example:1 to Example:1
	STRING_1.equals(VAR_1)
 ||| Insert UnaryOperator at Example:1
	-1L
 ||| Insert Literal at Example:1
	1L
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 == null) || 
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| 
LINE:2315###Insert Invocation at Example:1
	VAR_1.METHOD_3(info)
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Insert VariableRead at Example:1
	info
 ||| 
LINE:2316###Insert FieldRead at Example:1
	context
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.trim()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_1.trim().replaceAll(STRING_1, STRING_2)
 ||| 
LINE:2317###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.delete()
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2318###Move If from Example:1 to Example:1
	if (event.METHOD_4() == VAR_1) {
	    event.METHOD_5(METHOD_6(STRING_1));
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	event
 ||| Delete Invocation at Example:1
	event.METHOD_3()
 ||| Delete Invocation at Example:1
	METHOD_2(event.METHOD_3())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (METHOD_2(event.METHOD_3())) {
	
	}
 ||| 
LINE:2319###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.Math
 ||| Delete Invocation at Example:1
	java.lang.Math.abs()
 ||| 
LINE:2320###Insert Invocation at Example:1
	this.start()
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.start()
 ||| Delete Block at Example:1
	{
	    VAR_3.start();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_3.start();
	}
 ||| 
LINE:2321###Insert Return at Example:1
	return 
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.name().METHOD_2(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	    return true;
	}
 ||| Delete If at Example:1
	if () {
	    return true;
	}
 ||| 
LINE:2322###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_3().info(STRING_1)
 ||| Delete Block at Example:1
	{
	    METHOD_3().info(STRING_1);
	}
 ||| Delete If at Example:1
	if () {
	    METHOD_3().info(STRING_1);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	METHOD_3().info(STRING_2)
 ||| Delete Block at Example:1
	{
	    METHOD_3().info(STRING_2);
	}
 ||| Delete If at Example:1
	if () {
	    METHOD_3().info(STRING_2);
	}
 ||| 
LINE:2323###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:2324###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_3(STRING_1, VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2.METHOD_2()) {
	
	}
 ||| 
LINE:2325###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_2()
 ||| 
LINE:2326###Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	0
 ||| Delete Return at Example:1
	return 0
 ||| Delete Block at Example:1
	{
	    return 0;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return 0;
	}
 ||| 
LINE:2327###Move Assignment from Example:1 to Example:1
	VAR_6 = TYPE_5.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_5
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_5) {
	
	}
 ||| 
LINE:2328###Insert BinaryOperator at Example:1
	VAR_1 == 
 ||| Insert VariableRead at Example:1
	VAR_1
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.get(i)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.equals()
 ||| 
LINE:2329###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeReference at Example:1
	android.widget.LinearLayout
 ||| Delete LocalVariable at Example:1
	android.widget.LinearLayout VAR_3
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_4)
 ||| Delete ForEach at Example:1
	for (android.widget.LinearLayout VAR_3 : VAR_2)
	    VAR_3.METHOD_2(VAR_4);
 ||| Delete Block at Example:1
	{
	    for (android.widget.LinearLayout VAR_3 : VAR_2)
	        VAR_3.METHOD_2(VAR_4);
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    for (android.widget.LinearLayout VAR_3 : VAR_2)
	        VAR_3.METHOD_2(VAR_4);
	
	}
 ||| 
LINE:2330###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_3 != null)
 ||| 
LINE:2331###Move Invocation from Example:1 to Example:1
	VAR_2.toLowerCase()
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| 
LINE:2332###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_3()
 ||| Delete Conditional at Example:1
	VAR_2 != null ?  : this.METHOD_3()
 ||| 
LINE:2333###Update Invocation at Example:1
	 to TYPE_1.METHOD_2(TYPE_2.METHOD_3(VAR_1)).METHOD_6(TYPE_4.METHOD_7(TYPE_2.METHOD_8()))
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(TYPE_2.METHOD_3(VAR_1)).METHOD_4(TYPE_3.METHOD_5())
 ||| Move Invocation from Example:1 to Example:1
	TYPE_4.METHOD_7(TYPE_2.METHOD_8())
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete Invocation at Example:1
	TYPE_3.METHOD_5()
 ||| Delete Invocation at Example:1
	.METHOD_6()
 ||| 
LINE:2334###Update Invocation at Example:1
	 to TYPE_2.METHOD_2(VAR_1, error.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	java.lang.String.format(STRING_2, VAR_2, error.METHOD_3())
 ||| Move TypeAccess from Example:1 to Example:1
	TYPE_2
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.String
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.METHOD_2(, )
 ||| 
LINE:2335###Move Invocation from Example:1 to Example:1
	intent.METHOD_2(1)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3(intent)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	intent
 ||| Delete Invocation at Example:1
	METHOD_3(intent)
 ||| Delete Block at Example:1
	{
	    METHOD_3(intent);
	}
 ||| Delete If at Example:1
	if (VAR_2) {
	
	
	} else {
	    METHOD_3(intent);
	}
 ||| 
LINE:2336###Update BinaryOperator at Example:1
	 to ((this.VAR_2[VAR_1].VAR_3 - (VAR_4 / INT_1)) - FLOAT_1) / VAR_5
 ||| Move BinaryOperator from Example:1 to Example:1
	(this.VAR_2[VAR_1].VAR_3 - ((VAR_4 / INT_1) - FLOAT_1))
 ||| Move FieldRead from Example:1 to Example:1
	VAR_5
 ||| Update BinaryOperator at Example:1
	 to (this.VAR_2[VAR_1].VAR_3 - (VAR_4 / INT_1))
 ||| Move BinaryOperator from Example:1 to Example:1
	(this.VAR_2[VAR_1].VAR_3 - ((VAR_4 / INT_1) - FLOAT_1)) / VAR_5
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_2[VAR_1].VAR_3
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_4 / INT_1)
 ||| 
LINE:2337###Update Invocation at Example:1
	VAR_1.METHOD_1() to METHOD_2(VAR_2).setEnabled(true)
 ||| Insert Invocation at Example:1
	METHOD_2(VAR_2)
 ||| Insert Literal at Example:1
	true
 ||| Insert TypeAccess at Example
	Example
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| 
LINE:2338###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(this, VAR_2, VAR_3)
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(this, VAR_2, VAR_3);
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	} else {
	    TYPE_2.METHOD_3(this, VAR_2, VAR_3);
	}
 ||| 
LINE:2339###Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_1.format(STRING_2, VAR_2)
 ||| 
LINE:2340###Move Invocation from Example:1 to Example:1
	VAR_3.i(VAR_4, VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2)
 ||| 
LINE:2341###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(id).replace(STRING_1, STRING_2)
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| 
LINE:2342###Insert If at Example:1
	if () {
	    return false;
	} else {
	
	}
 ||| Insert Wra at Example:1
	
 ||| Update BinaryOperator at Example:1
	 to target == null
 ||| Move BinaryOperator from Example:1 to Example:1
	(target != null)
 ||| Insert Block at Example:1
	{
	    return false;
	}
 ||| Insert Block at Example:1
	{
	
	}
 ||| Insert Return at Example:1
	return false
 ||| Move Return from Example:1 to Example:1
	return (target != null) && TYPE_1.METHOD_2(target).METHOD_3()
 ||| Insert Literal at Example:1
	false
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(target).METHOD_3()
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:2343###Move Assignment from Example:1 to Example:1
	VAR_1 = new TYPE_1(this)
 ||| Move Invocation from Example:1 to Example:1
	VAR_4.start()
 ||| Update Wra at Example:1
	 to public
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3()
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3().getName()
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_3.METHOD_3().getName())
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_2(VAR_3.METHOD_3().getName());
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    VAR_2.METHOD_2(VAR_3.METHOD_3().getName());
	
	
	}
 ||| 
LINE:2344###Insert Invocation at Example:1
	.toString()
 ||| Insert Invocation at Example:1
	.toString()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:2345###Move Invocation from Example:1 to Example:1
	VAR_4.put(VAR_1, VAR_2)
 ||| Insert Wra at Example:1
	
 ||| Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2()
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_3()
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_4()
 ||| Delete Try at Example:1
	try {
	    TYPE_4.METHOD_3();
	
	} finally {
	    VAR_3.METHOD_4();
	}
 ||| 
LINE:2346###Move Invocation from Example:1 to Example:1
	VAR_2.get(VAR_4)
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 + 1
 ||| 
LINE:2347###Move Return from Example:1 to Example:1
	return VAR_3.METHOD_1(position, VAR_2)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete Parameter at Example:1
	TYPE_1 VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	position
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1, position, VAR_2)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (METHOD_2(VAR_1, position, VAR_2)) {
	
	} else {
	    return false;
	}
 ||| 
LINE:2348###Update TypeAccess at Example:1
	VAR_2 to Example
 ||| 
LINE:2349###Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_3()
 ||| 
LINE:2350###Move If from Example:1 to Example:1
	if (VAR_1.isEmpty()) {
	    return METHOD_2();
	} else {
	    return true;
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Synchronized at Example:1
	synchronized(this) {
	
	}
 ||| 
LINE:2351###Insert UnaryOperator at Example:1
	!
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(VAR_4, VAR_5.getText().trim())
 ||| 
LINE:2352###Move Return from Example:1 to Example:1
	return this.VAR_1.get(id - 1)
 ||| Move VariableRead from Example:1 to Example:1
	id
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| Delete VariableRead at Example:1
	id
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	(id - 1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_1.size()
 ||| Delete BinaryOperator at Example:1
	(id - 1) < this.VAR_1.size()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if ((id - 1) < this.VAR_1.size()) {
	
	} else {
	    return null;
	}
 ||| 
LINE:2353###Insert BinaryOperator at Example:1
	 || 
 ||| Move Invocation from Example:1 to Example:1
	VAR_5.contains(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.equals(VAR_1)
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	
	    return true;
 ||| Delete If at Example:1
	if ()
	    return true;
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_4.contains(VAR_1)
 ||| Delete Return at Example:1
	return VAR_4.contains(VAR_1)
 ||| Delete Block at Example:1
	
	    return VAR_4.contains(VAR_1);
 ||| Delete If at Example:1
	if (VAR_3 != null)
	    return VAR_4.contains(VAR_1);
 ||| 
LINE:2354###Update TypeReference at Example:1
	java.lang.String to long
 ||| Move FieldRead from Example:1 to Example:1
	id
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	STRING_1 + 
 ||| 
LINE:2355###Move Return from Example:1 to Example:1
	return VAR_2.METHOD_2(VAR_3, VAR_1)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_4) {
	    return null;
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_4) {
	    return null;
	}
 ||| 
LINE:2356###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_5()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:2357###Insert FieldRead at Example:1
	(() (function))
 ||| Move TypeReference from Example:1 to Example:1
	TYPE_3
 ||| Delete FieldRead at Example:1
	function
 ||| Delete VariableRead at Example:1
	t
 ||| Delete Invocation at Example:1
	(() (function.METHOD_1(t)))
 ||| 
LINE:2358###Update Method at Example:1
	public void METHOD_1(TYPE_1 VAR_1) {
	    VAR_2.METHOD_2(false);
	    VAR_2.METHOD_3();
	     VAR_3 = VAR_4;
	
	} to public void METHOD_2(final boolean b) {
	    if (!b) {
	        TYPE_2 VAR_3 = this.VAR_4;
	        if (VAR_3 != null) {
	            VAR_3.METHOD_4();
	        }
	    }
	    super.METHOD_2(b);
	}
 ||| Update Parameter at Example:1
	TYPE_1 VAR_1 to final boolean b
 ||| Insert If at Example:1
	if (!b) {
	     VAR_3 = this.VAR_4;
	
	}
 ||| Insert Invocation at Example:1
	super.METHOD_2(b)
 ||| Update TypeReference at Example:1
	TYPE_1 to boolean
 ||| Insert VirtualEle at Example:1
	
 ||| Insert UnaryOperator at Example:1
	!b
 ||| Insert Block at Example:1
	{
	     VAR_3 = this.VAR_4;
	
	}
 ||| Insert SuperAccess at Example:1
	super
 ||| Insert VariableRead at Example:1
	b
 ||| Insert Wra at Example:1
	
 ||| Insert VariableRead at Example:1
	b
 ||| Insert LocalVariable at Example:1
	 VAR_3 = this.VAR_4
 ||| Move If from Example:1 to Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_4();
	}
 ||| Move TypeReference from Example:1 to Example:1
	TYPE_2
 ||| Insert FieldRead at Example:1
	this.VAR_4
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(false)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete LocalVariable at Example:1
	 VAR_3 = VAR_4
 ||| 
LINE:2359###Update Invocation at Example:1
	 to VAR_2.METHOD_1(TYPE_1.METHOD_2()).METHOD_4(TYPE_1.METHOD_2()).METHOD_5(this)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(TYPE_1.METHOD_2()).METHOD_3().METHOD_4(TYPE_1.METHOD_2())
 ||| Update Invocation at Example:1
	VAR_2.METHOD_1(TYPE_1.METHOD_2()).METHOD_3() to VAR_2.METHOD_1(TYPE_1.METHOD_2()).METHOD_4(TYPE_1.METHOD_2())
 ||| Move ThisAccess from Example:1 to Example:1
	this
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_5()
 ||| 
LINE:2360###Move Return from Example:1 to Example:1
	return false
 ||| Delete Case at Example:1
	default :
 ||| 
LINE:2361###Insert Return at Example:1
	return !.isEmpty()
 ||| Insert UnaryOperator at Example:1
	!.isEmpty()
 ||| Insert Invocation at Example:1
	.isEmpty()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	METHOD_2() > 0
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Invocation at Example:1
	.get(METHOD_2())
 ||| Delete FieldRead at Example:1
	.get(METHOD_2()).VAR_2
 ||| Delete Invocation at Example:1
	.get(METHOD_2()).VAR_2.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!.get(METHOD_2()).VAR_2.isEmpty()
 ||| Delete Return at Example:1
	return !.get(METHOD_2()).VAR_2.isEmpty()
 ||| Delete Block at Example:1
	{
	    return !.get(METHOD_2()).VAR_2.isEmpty();
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	{
	    return false;
	}
 ||| Delete If at Example:1
	if (METHOD_2() > 0) {
	    return !.get(METHOD_2()).VAR_2.isEmpty();
	} else {
	    return false;
	}
 ||| 
LINE:2362###Move Invocation from Example:1 to Example:1
	super.METHOD_1(VAR_1)
 ||| 
LINE:2363###Move Parameter from Example:1 to Example:1
	TYPE_1 key
 ||| 
LINE:2364###Update Invocation at Example:1
	 to VAR_3.error(VAR_2)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	.error()
 ||| 
LINE:2365###Delete FieldRead at Example:1
	VAR_2
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_2 < INT_1
 ||| Delete FieldRead at Example:1
	INT_2
 ||| Delete Return at Example:1
	return INT_2
 ||| Delete Block at Example:1
	
	    return INT_2;
 ||| Delete If at Example:1
	if (VAR_2 < INT_1)
	    return INT_2;
 ||| 
LINE:2366###Move BinaryOperator from Example:1 to Example:1
	((VAR_1 != null) && (VAR_2 != null))
 ||| Move UnaryOperator from Example:1 to Example:1
	(!VAR_2.METHOD_2())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:2367###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.toLowerCase()
 ||| 
LINE:2368###Move VariableRead from Example:1 to Example:1
	VAR_3
 ||| 
LINE:2369###Move BinaryOperator from Example:1 to Example:1
	((((STRING_1 + STRING_2) + id) + CHAR_1) + STRING_3)
 ||| Move FieldRead from Example:1 to Example:1
	CHAR_2
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	( + VAR_1)
 ||| Delete BinaryOperator at Example:1
	( + VAR_1) + 
 ||| 
LINE:2370###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_5.trim()
 ||| 
LINE:2371###Move BinaryOperator from Example:1 to Example:1
	((getString(VAR_3) + STRING_1) + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	 + STRING_2
 ||| 
LINE:2372###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(className)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_1 != null) && 
 ||| 
LINE:2373###Move BinaryOperator from Example:1 to Example:1
	((listener.METHOD_3() != null) && (VAR_1 > 0))
 ||| Delete FieldRead at Example:1
	listener
 ||| Delete Invocation at Example:1
	listener.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	listener.METHOD_2() || 
 ||| 
LINE:2374###Update BinaryOperator at Example:1
	 to (value == null) || VAR_1.isEmpty()
 ||| Move BinaryOperator from Example:1 to Example:1
	(VAR_1.length() == 0)
 ||| Move BinaryOperator from Example:1 to Example:1
	(value == null)
 ||| Update Invocation at Example:1
	VAR_1.length() to VAR_1.isEmpty()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	 || 
 ||| 
LINE:2375###Move Assignment from Example:1 to Example:1
	VAR_1 = VAR_2.METHOD_2()
 ||| Move If from Example:1 to Example:1
	if (VAR_1 != null) {
	    VAR_3.start();
	}
 ||| Delete Literal at Example:1
	true
 ||| Delete While at Example:1
	while (true) {
	
	
	} 
 ||| 
LINE:2376###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2().METHOD_1(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1)
 ||| 
LINE:2377###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:2378###Move Assignment from Example:1 to Example:1
	status = VAR_5
 ||| 
LINE:2379###Move Invocation from Example:1 to Example:1
	source.METHOD_2().METHOD_3()
 ||| Delete Invocation at Example:1
	.toLowerCase()
 ||| 
LINE:2380###Insert BinaryOperator at Example:1
	((-1) * )
 ||| Insert UnaryOperator at Example:1
	(-1)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| 
LINE:2381###Move Invocation from Example:1 to Example:1
	VAR_3.delete(VAR_2)
 ||| Update VariableRead at Example:1
	VAR_2 to VAR_1
 ||| 
LINE:2382###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(VAR_2)
 ||| Delete Wra at Example:1
	
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_3
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_3) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_3) {
	}
 ||| 
LINE:2383###Insert BinaryOperator at Example:1
	 == 
 ||| Update Invocation at Example:1
	 to VAR_3.get(type).getValue()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.getValue(type).equals(VAR_2)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_2
 ||| Update Invocation at Example:1
	VAR_3.getValue(type) to VAR_3.get(type)
 ||| 
LINE:2384###Move LocalVariable from Example:1 to Example:1
	TYPE_1 response = METHOD_2(STRING_1)
 ||| Move Return from Example:1 to Example:1
	return INT_1 == response.METHOD_3()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    return false;
	}
 ||| Delete Try at Example:1
	try {
	
	
	} catch (java.lang.Exception VAR_1) {
	    return false;
	}
 ||| 
LINE:2385###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3(VAR_2, VAR_3)
 ||| Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_4(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:2386###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Literal at Example:1
	true
 ||| Delete Return at Example:1
	return true
 ||| Delete Block at Example:1
	{
	
	    return true;
	}
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	    return true;
	} else
	    return false;
 ||| 
LINE:2387###Move ForEach from Example:1 to Example:1
	for (java.lang.Integer key : TYPE_1.METHOD_2()) {
	    METHOD_1(key);
	}
 ||| Delete FieldRead at Example:1
	TYPE_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(TYPE_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.isEmpty()
 ||| Delete UnaryOperator at Example:1
	(!VAR_1.isEmpty())
 ||| Delete BinaryOperator at Example:1
	(TYPE_1 != null) && (!VAR_1.isEmpty())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((TYPE_1 != null) && (!VAR_1.isEmpty())) {
	
	}
 ||| 
LINE:2388###Move Invocation from Example:1 to Example:1
	java.lang.Thread.METHOD_2(VAR_1)
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	}
 ||| 
LINE:2389###Insert Assignment at Example:1
	message[] = null
 ||| Insert ArrayWrite at Example:1
	message[]
 ||| Insert Literal at Example:1
	null
 ||| Insert FieldRead at Example:1
	message
 ||| Move VariableRead from Example:1 to Example:1
	a
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.remove()
 ||| 
LINE:2390###Move Return from Example:1 to Example:1
	return true
 ||| Move Return from Example:1 to Example:1
	return false
 ||| 
LINE:2391###Update Method at Example:1
	private void METHOD_1() {
	    if ((VAR_1 != null) && VAR_1.METHOD_2()) {
	        VAR_1.METHOD_3();
	        VAR_2 = true;
	    }
	} to private void METHOD_3() {
	    if ((VAR_1 != null) && VAR_1.METHOD_2()) {
	        VAR_1.METHOD_3();
	        VAR_2 = true;
	    }
	}
 ||| 
LINE:2392###Update Method at Example:1
	public void METHOD_1(double VAR_1) {
	    METHOD_2(VAR_1);
	    VAR_2 = VAR_1;
	    METHOD_3();
	} to public void METHOD_2(float VAR_1) {
	    VAR_2 = VAR_1;
	}
 ||| Update TypeReference at Example:1
	double to float
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_3()
 ||| 
LINE:2393###Move BinaryOperator from Example:1 to Example:1
	(this.VAR_1 > 0.0F)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 || this.METHOD_2()
 ||| 
LINE:2394###Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| 
LINE:2395###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3()
 ||| Move Assignment from Example:1 to Example:1
	VAR_3 = null
 ||| Update Wra at Example:1
	 to public
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.get()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2.get() == 0
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2.get() == 0) {
	
	
	}
 ||| 
LINE:2396###Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_1()
 ||| Delete Block at Example:1
	
	    METHOD_1();
 ||| Delete If at Example:1
	if (!VAR_1)
	    METHOD_1();
 ||| 
LINE:2397###Move Invocation from Example:1 to Example:1
	TYPE_4.METHOD_2().METHOD_1(VAR_1, message)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3) {
	
	}
 ||| 
LINE:2398###Move UnaryOperator from Example:1 to Example:1
	(!VAR_1.METHOD_2())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete UnaryOperator at Example:1
	(!VAR_2)
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_2)
 ||| 
LINE:2399###Move Assignment from Example:1 to Example:1
	this.value = value
 ||| Move ForEach from Example:1 to Example:1
	for (TYPE_1<java.lang.Integer> VAR_1 : VAR_2) {
	    VAR_1.METHOD_1(this.value);
	}
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.value
 ||| Delete VariableRead at Example:1
	value
 ||| Delete BinaryOperator at Example:1
	this.value != value
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (this.value != value) {
	
	
	}
 ||| 
LINE:2400###Insert Literal at Example:1
	null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + STRING_2)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	((STRING_1 + STRING_2) + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete BinaryOperator at Example:1
	(((STRING_1 + STRING_2) + VAR_1) + STRING_3)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(((STRING_1 + STRING_2) + VAR_1) + STRING_3) + VAR_2
 ||| 
LINE:2401###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3(VAR_4, STRING_1, VAR_5).show()
 ||| Delete FieldRead at Example:1
	VAR_4
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_4 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_4 != null) {
	
	}
 ||| 
LINE:2402###Insert TypeAccess at Example:1
	VAR_3
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete ConstructorCall at Example:1
	new TYPE_3(VAR_3)
 ||| Delete Invocation at Example:1
	new TYPE_3(VAR_3).METHOD_3()
 ||| 
LINE:2403###Move Conditional from Example:1 to Example:1
	offset && (x != 0) ? y + 1 : y
 ||| 
LINE:2404###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:2405###Move Assignment from Example:1 to Example:1
	VAR_1 = null
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = null
 ||| 
LINE:2406###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 == null)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 || VAR_1.METHOD_2()
 ||| 
LINE:2407###Delete FieldRead at Example:1
	view
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete TypeAccess at Example:1
	VAR_6
 ||| Delete TypeAccess at Example:1
	VAR_7
 ||| Delete TypeAccess at Example:1
	VAR_8
 ||| Delete TypeAccess at Example:1
	VAR_9
 ||| Delete TypeAccess at Example:1
	VAR_10
 ||| Delete TypeAccess at Example:1
	VAR_11
 ||| Delete TypeAccess at Example:1
	VAR_12
 ||| Delete Invocation at Example:1
	view.METHOD_2(VAR_2, VAR_3, VAR_4, VAR_5, VAR_6, VAR_7, VAR_8, VAR_9, VAR_10, VAR_11, VAR_12)
 ||| Delete FieldRead at Example:1
	view
 ||| Delete Invocation at Example:1
	view.METHOD_3()
 ||| 
LINE:2408###Insert VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.toLowerCase()
 ||| 
LINE:2409###Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2(string)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	!VAR_2.equals(STRING_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!VAR_2.equals(STRING_1))
 ||| 
LINE:2410###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_3, STRING_1 + VAR_4.toString())
 ||| 
LINE:2411###Move Invocation from Example:1 to Example:1
	VAR_1.get(position)
 ||| Delete Invocation at Example:1
	.getString()
 ||| 
LINE:2412###Insert Return at Example:1
	return 
 ||| Move Return from Example:1 to Example:1
	return start + VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	start
 ||| Move FieldRead from Example:1 to Example:1
	end
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	 + VAR_1
 ||| Delete Return at Example:1
	return  + VAR_1
 ||| 
LINE:2413###Delete VariableRead at Example:1
	source
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	source == null
 ||| Delete Return at Example:1
	return
 ||| Delete Block at Example:1
	{
	    return;
	}
 ||| Delete If at Example:1
	if (source == null) {
	    return;
	}
 ||| 
LINE:2414###Move Assignment from Example:1 to Example:1
	VAR_2 = 0
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_4(VAR_3)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	
	}
 ||| 
LINE:2415###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(VAR_2 >= 0)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete Invocation at Example:1
	VAR_3.size()
 ||| Delete BinaryOperator at Example:1
	(VAR_2 < VAR_3.size())
 ||| Delete BinaryOperator at Example:1
	(VAR_2 >= 0) && (VAR_2 < VAR_3.size())
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ((VAR_2 >= 0) && (VAR_2 < VAR_3.size())) {
	
	}
 ||| 
LINE:2416###Insert If at Example:1
	if (VAR_2 == )
	    return 0;
 ||| Insert If at Example:1
	if (VAR_2 < this.VAR_3)
	    return -1;
 ||| Insert BinaryOperator at Example:1
	VAR_2 == 
 ||| Insert Block at Example:1
	
	    return 0;
 ||| Insert BinaryOperator at Example:1
	VAR_2 < this.VAR_3
 ||| Insert Block at Example:1
	
	    return -1;
 ||| Insert Literal at Example:1
	1
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Move FieldRead from Example:1 to Example:1
	this.VAR_3
 ||| Insert Return at Example:1
	return 0
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert FieldRead at Example:1
	this.VAR_3
 ||| Insert Return at Example:1
	return -1
 ||| Insert Literal at Example:1
	0
 ||| Insert ThisAccess at Example:1
	this
 ||| Insert UnaryOperator at Example:1
	-1
 ||| Insert TypeAccess at Example
	Example
 ||| Insert Literal at Example:1
	1
 ||| Delete TypeAccess at Example:1
	java.lang.Double
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	java.lang.Double.METHOD_1(VAR_2, )
 ||| 
LINE:2417###Move Invocation from Example:1 to Example:1
	this.VAR_1.METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete Synchronized at Example:1
	synchronized(this.VAR_1) {
	
	}
 ||| 
LINE:2418###Insert ConstructorCall at Example:1
	new java.lang.String(VAR_1)
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| 
LINE:2419###Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_1()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_1();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_1();
	}
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| 
LINE:2420###Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_4()
 ||| Delete Block at Example:1
	{
	    METHOD_4();
	}
 ||| Delete If at Example:1
	if (VAR_1.METHOD_3()) {
	    METHOD_4();
	}
 ||| 
LINE:2421###Move Invocation from Example:1 to Example:1
	VAR_5.METHOD_4(VAR_6)
 ||| 
LINE:2422###Insert Invocation at Example:1
	.METHOD_1()
 ||| Move TypeAccess from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	INT_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.METHOD_1(INT_1, VAR_2)
 ||| Delete UnaryOperator at Example:1
	!.METHOD_1(INT_1, VAR_2)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	fail(STRING_1)
 ||| Delete Block at Example:1
	
	    fail(STRING_1);
 ||| Delete If at Example:1
	if (!.METHOD_1(INT_1, VAR_2))
	    fail(STRING_1);
 ||| 
LINE:2423###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	(INT_1 * )
 ||| 
LINE:2424###Move Invocation from Example:1 to Example:1
	METHOD_3(TYPE_3.METHOD_4())
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2()) {
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_4
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_4.METHOD_5(VAR_2)
 ||| 
LINE:2425###Move BinaryOperator from Example:1 to Example:1
	(context != null)
 ||| Delete VariableRead at Example:1
	context
 ||| Delete Invocation at Example:1
	context.METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(context.METHOD_2() != null)
 ||| Delete BinaryOperator at Example:1
	 && (context.METHOD_2() != null)
 ||| 
LINE:2426###Move Try from Example:1 to Example:1
	try {
	    VAR_2.METHOD_2();
	} catch (java.io.IOException VAR_3) {
	    VAR_3.METHOD_3();
	}
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	
	}
 ||| 
LINE:2427###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_1(x, y)
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2428###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1.getType().METHOD_3(), METHOD_4())
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.getType()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.getType() != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.getType() != null) {
	
	}
 ||| 
LINE:2429###Move Invocation from Example:1 to Example:1
	METHOD_4(0)
 ||| Move Invocation from Example:1 to Example:1
	new TYPE_2().execute()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	METHOD_3(STRING_1)
 ||| Delete Block at Example:1
	
	    METHOD_3(STRING_1);
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (METHOD_2())
	    METHOD_3(STRING_1);
	else {
	
	
	}
 ||| 
LINE:2430###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:2431###Move Return from Example:1 to Example:1
	return TYPE_2.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2()
 ||| Delete Return at Example:1
	return TYPE_2.METHOD_2()
 ||| Delete Block at Example:1
	{
	    return TYPE_2.METHOD_2();
	}
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1) {
	    return TYPE_2.METHOD_2();
	} else {
	
	}
 ||| 
LINE:2432###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_3
 ||| Delete BinaryOperator at Example:1
	( instanceof TYPE_3)
 ||| Delete UnaryOperator at Example:1
	!( instanceof TYPE_3)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!( instanceof TYPE_3)) {
	
	}
 ||| 
LINE:2433###Insert BinaryOperator at Example:1
	 && (VAR_1.METHOD_1() != null)
 ||| Update BinaryOperator at Example:1
	 to (VAR_1 != null)
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 == null
 ||| Insert BinaryOperator at Example:1
	(VAR_1.METHOD_1() != null)
 ||| Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1().METHOD_2()
 ||| Insert Return at Example:1
	return null
 ||| Insert Invocation at Example:1
	VAR_1.METHOD_1()
 ||| Insert Literal at Example:1
	null
 ||| Insert Literal at Example:1
	null
 ||| Insert TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Return at Example:1
	return VAR_2.METHOD_2()
 ||| 
LINE:2434###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_4(VAR_2)
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 != null) && 
 ||| 
LINE:2435###Update TypeReference at Example:1
	boolean to void
 ||| Move Invocation from Example:1 to Example:1
	METHOD_1(VAR_3.METHOD_3(), VAR_2)
 ||| Delete Return at Example:1
	return 
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| 
LINE:2436###Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_2(VAR_1);
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	    VAR_3.METHOD_2(VAR_1);
	}
 ||| 
LINE:2437###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == null)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 == null)
 ||| Delete BinaryOperator at Example:1
	((VAR_2 == null) || (VAR_3 == null))
 ||| Delete BinaryOperator at Example:1
	VAR_1 && ((VAR_2 == null) || (VAR_3 == null))
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 && ((VAR_2 == null) || (VAR_3 == null))) {
	
	}
 ||| 
LINE:2438###Move BinaryOperator from Example:1 to Example:1
	(VAR_1 != null)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_2.equals(STRING_1)
 ||| Delete UnaryOperator at Example:1
	(!VAR_2.equals(STRING_1))
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_2.equals(STRING_1))
 ||| 
LINE:2439###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(type, msg, INT_1)
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.equals(STRING_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1.equals(STRING_1))
 ||| 
LINE:2440###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_6()
 ||| Delete Block at Example:1
	{
	    VAR_2.METHOD_6();
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	    VAR_2.METHOD_6();
	}
 ||| 
LINE:2441###Move Assignment from Example:1 to Example:1
	value = VAR_1.toUpperCase()
 ||| Move Assignment from Example:1 to Example:1
	value = VAR_1.replaceAll(STRING_2, STRING_3)
 ||| Delete VariableRead at Example:1
	value
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	value.METHOD_2(STRING_1)
 ||| Delete UnaryOperator at Example:1
	!value.METHOD_2(STRING_1)
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (!value.METHOD_2(STRING_1)) {
	
	
	}
 ||| 
LINE:2442###ERROR: Gumtree failed to process. Message: 
LINE:2443###Insert FieldRead at Example:1
	VAR_3
 ||| Move FieldRead from Example:1 to Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_5
 ||| Delete Invocation at Example:1
	VAR_5.values()
 ||| 
LINE:2444###Move Invocation from Example:1 to Example:1
	VAR_1.size()
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 - 1
 ||| 
LINE:2445###Move BinaryOperator from Example:1 to Example:1
	(VAR_1.METHOD_2() && VAR_1.METHOD_3())
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4(VAR_1.METHOD_5())
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_2()
 ||| Delete BinaryOperator at Example:1
	 && 
 ||| 
LINE:2446###Move BinaryOperator from Example:1 to Example:1
	((((STRING_1 + VAR_1) + STRING_2) + VAR_2.size()) + STRING_2)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_3
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete BinaryOperator at Example:1
	( + VAR_3)
 ||| Delete BinaryOperator at Example:1
	( + VAR_3) + 
 ||| 
LINE:2447###Insert BinaryOperator at Example:1
	 != null
 ||| Move Invocation from Example:1 to Example:1
	contains(p, VAR_1, true)
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:2448###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_1()
 ||| Insert Literal at Example:1
	null
 ||| 
LINE:2449###Update Invocation at Example:1
	 to METHOD_1(VAR_1, null)
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, null)
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	 != null
 ||| 
LINE:2450###Move Return from Example:1 to Example:1
	return obj.METHOD_2(STRING_1)
 ||| Delete FieldRead at Example:1
	obj
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	obj != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_1, STRING_2, VAR_2)
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_3(VAR_1, STRING_2, VAR_2).show()
 ||| Delete Literal at Example:1
	1
 ||| Delete UnaryOperator at Example:1
	-1
 ||| Delete Return at Example:1
	return -1
 ||| Delete Block at Example:1
	{
	    TYPE_2.METHOD_3(VAR_1, STRING_2, VAR_2).show();
	    return -1;
	}
 ||| Delete If at Example:1
	if (obj != null) {
	
	} else {
	    TYPE_2.METHOD_3(VAR_1, STRING_2, VAR_2).show();
	    return -1;
	}
 ||| 
LINE:2451###Move If from Example$1:1 to Example:1
	if (!VAR_2) {
	    VAR_3.METHOD_3();
	}
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(new TYPE_1() {
	    public void METHOD_1() {
	        if (!VAR_2) {
	            VAR_3.METHOD_3();
	        }
	    }
	})
 ||| Move Invocation from Example$1:1 to Example$1:1
	VAR_3.METHOD_3()
 ||| 
LINE:2452###Move Return from Example:1 to Example:1
	return VAR_1.METHOD_1()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| 
LINE:2453###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_2, this, VAR_1.METHOD_3())
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2454###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2(VAR_3).METHOD_3(VAR_4, VAR_1)
 ||| Delete Invocation at Example:1
	.METHOD_4()
 ||| 
LINE:2455###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(view, VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_2 != null) {
	
	}
 ||| 
LINE:2456###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete FieldRead at Example:1
	.i
 ||| 
LINE:2457###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2(VAR_1, VAR_2, TYPE_3.METHOD_3(VAR_3))
 ||| 
LINE:2458###Insert Invocation at Example:1
	METHOD_3(VAR_2 != null)
 ||| Move TypeAccess from Example to Example
	Example
 ||| Insert BinaryOperator at Example:1
	VAR_2 != null
 ||| Insert Assignment at Example:1
	VAR_2 = null
 ||| Insert FieldRead at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Insert FieldWrite at Example:1
	VAR_2
 ||| Insert Literal at Example:1
	null
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2()
 ||| Delete Literal at Example:1
	false
 ||| Delete Invocation at Example:1
	METHOD_3(false)
 ||| 
LINE:2459###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| 
LINE:2460###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1(VAR_1, null)
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Literal at Example:1
	true
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_1(VAR_1, STRING_1, true)
 ||| Delete BinaryOperator at Example:1
	 || TYPE_1.METHOD_1(VAR_1, STRING_1, true)
 ||| 
LINE:2461###Move Invocation from Example:1 to Example:1
	message.METHOD_1()
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	.replace(STRING_1, STRING_2)
 ||| 
LINE:2462###
LINE:2463###Move ForEach from Example:1 to Example:1
	for (TYPE_1 VAR_2 : VAR_1) {
	    TYPE_1.METHOD_1(VAR_2);
	}
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1 != null) {
	
	}
 ||| 
LINE:2464###Move Invocation from Example:1 to Example:1
	VAR_1.set(METHOD_6())
 ||| 
LINE:2465###Move Invocation from Example:1 to Example:1
	VAR_4.put(METHOD_2(VAR_1), VAR_2)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Synchronized at Example:1
	synchronized(VAR_3) {
	
	}
 ||| 
LINE:2466###Move LocalVariable from Example:1 to Example:1
	TYPE_1 VAR_3 = TYPE_1.METHOD_2(VAR_1)
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_3(new TYPE_2(VAR_4, 0, VAR_5, VAR_6, VAR_2))
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	VAR_2 > 0
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete If at Example:1
	if (VAR_2 > 0) {
	
	
	}
 ||| 
LINE:2467###Move Return from Example:1 to Example:1
	return STRING_1
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (TYPE_1.METHOD_2(VAR_1))
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| 
LINE:2468###Move Invocation from Example:1 to Example:1
	TYPE_2.METHOD_2().METHOD_3()
 ||| Update Parameter at Example:1
	TYPE_1 VAR_1 to TYPE_1 b
 ||| 
LINE:2469###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:2470###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    VAR_1.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_1) {
	    VAR_1.METHOD_3();
	}
 ||| 
LINE:2471###Update TypeReference at Example:1
	java.lang.Boolean to boolean
 ||| 
LINE:2472###Insert If at Example:1
	if (event.METHOD_2() == true) {
	    VAR_2.METHOD_4();
	}
 ||| Insert BinaryOperator at Example:1
	event.METHOD_2() == true
 ||| Insert Block at Example:1
	{
	    VAR_2.METHOD_4();
	}
 ||| Insert Invocation at Example:1
	event.METHOD_2()
 ||| Insert Literal at Example:1
	true
 ||| Insert Invocation at Example:1
	VAR_2.METHOD_4()
 ||| Insert VariableRead at Example:1
	event
 ||| Insert TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	VAR_1.info(STRING_1)
 ||| 
LINE:2473###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(VAR_3 == null)
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete Invocation at Example:1
	VAR_4.isEmpty()
 ||| Delete BinaryOperator at Example:1
	(VAR_3 == null) || VAR_4.isEmpty()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Conditional at Example:1
	(VAR_3 == null) || VAR_4.isEmpty() ?  : VAR_3
 ||| 
LINE:2474###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_5(getContext(), result + STRING_1, VAR_4)
 ||| Delete Invocation at Example:1
	.show()
 ||| 
LINE:2475###Move Invocation from Example:1 to Example:1
	VAR_2.init()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2476###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_1(VAR_1)
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Synchronized at Example:1
	synchronized(VAR_2) {
	
	}
 ||| 
LINE:2477###Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	METHOD_2() == null
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Return at Example:1
	return VAR_1
 ||| Delete Block at Example:1
	
	    return VAR_1;
 ||| Delete If at Example:1
	if (METHOD_2() == null)
	    return VAR_1;
 ||| 
LINE:2478###Delete FieldRead at Example:1
	STRING_1
 ||| 
LINE:2479###Delete FieldRead at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == VAR_1)
 ||| Delete FieldRead at Example:1
	view
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	(view != null)
 ||| Delete BinaryOperator at Example:1
	(VAR_2 == VAR_1) && (view != null)
 ||| Delete FieldRead at Example:1
	view
 ||| Delete Invocation at Example:1
	view.METHOD_2()
 ||| Delete Block at Example:1
	{
	    view.METHOD_2();
	}
 ||| Delete If at Example:1
	if ((VAR_2 == VAR_1) && (view != null)) {
	    view.METHOD_2();
	}
 ||| 
LINE:2480###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_1()
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete Invocation at Example:1
	java.lang.System.out.println()
 ||| 
LINE:2481###Move Assignment from Example:1 to Example:1
	VAR_2 = VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3(VAR_2)
 ||| Delete Block at Example:1
	{
	    VAR_3.METHOD_3(VAR_2);
	}
 ||| Delete If at Example:1
	if (VAR_2 == null) {
	
	} else {
	    VAR_3.METHOD_3(VAR_2);
	}
 ||| 
LINE:2482###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 == null
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_1)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_1) + STRING_2
 ||| Delete Conditional at Example:1
	(VAR_3 == null ?  : (STRING_1 + VAR_1) + STRING_2)
 ||| 
LINE:2483###Insert OperatorAssignment at Example:1
	VAR_1 -= 1
 ||| Insert FieldWrite at Example:1
	VAR_1
 ||| Insert Literal at Example:1
	1
 ||| Insert FieldRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.get()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_3()
 ||| 
LINE:2484###Move BinaryOperator from Example:1 to Example:1
	(VAR_2 != null)
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete UnaryOperator at Example:1
	(!VAR_3)
 ||| Delete BinaryOperator at Example:1
	 && (!VAR_3)
 ||| 
LINE:2485###Delete TypeReference at Example:1
	int
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_2(VAR_1)
 ||| Delete LocalVariable at Example:1
	int index = VAR_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| Delete VariableRead at Example:1
	index
 ||| Delete Invocation at Example:1
	VAR_3.get(index)
 ||| Delete Return at Example:1
	return VAR_3.get(index)
 ||| 
LINE:2486###Insert Block at Example:1
	{
	}
 ||| Update FieldRead at Example:1
	VAR_3 to VAR_4
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_4.METHOD_2(VAR_1)
 ||| 
LINE:2487###Move Invocation from Example:1 to Example:1
	VAR_3.toString()
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete BinaryOperator at Example:1
	 + STRING_1
 ||| 
LINE:2488###Insert TypeAccess at Example:1
	VAR_3
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.values()
 ||| 
LINE:2489###Insert Conditional at Example:1
	 ?  : 
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 != null
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.replace(STRING_1, STRING_2)
 ||| Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete Assignment at Example:1
	VAR_1 = 
 ||| Delete VariableWrite at Example:1
	VAR_1
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete TypeAccess at Example:1
	STRING_3
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	VAR_2.replace(STRING_3, STRING_2)
 ||| Delete Assignment at Example:1
	VAR_1 = VAR_2.replace(STRING_3, STRING_2)
 ||| Delete Block at Example:1
	{
	    VAR_1 = ;
	    VAR_1 = VAR_2.replace(STRING_3, STRING_2);
	}
 ||| Delete If at Example:1
	if () {
	    VAR_1 = ;
	    VAR_1 = VAR_2.replace(STRING_3, STRING_2);
	}
 ||| 
LINE:2490###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| 
LINE:2491###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(STRING_1, VAR_3.getId())
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_2 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_2 != null)
 ||| 
LINE:2492###Move Invocation from Example:1 to Example:1
	super.METHOD_1()
 ||| 
LINE:2493###Move Return from Example:1 to Example:1
	return VAR_1.size()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.size()
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete BinaryOperator at Example:1
	VAR_1.size() < INT_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete FieldRead at Example:1
	INT_1
 ||| Delete Return at Example:1
	return INT_1
 ||| Delete Block at Example:1
	{
	    return INT_1;
	}
 ||| Delete If at Example:1
	if (VAR_1.size() < INT_1) {
	
	} else {
	    return INT_1;
	}
 ||| 
LINE:2494###Insert BinaryOperator at Example:1
	VAR_3 - 1
 ||| Insert FieldRead at Example:1
	VAR_3
 ||| Insert Literal at Example:1
	1
 ||| Delete TypeAccess at Example:1
	VAR_3
 ||| 
LINE:2495###Insert If at Example:1
	if (value != null)
 ||| Insert BinaryOperator at Example:1
	value != null
 ||| Insert Block at Example:1
 ||| Insert VariableRead at Example:1
	value
 ||| Insert Literal at Example:1
	null
 ||| Move Invocation from Example:1 to Example:1
	METHOD_2(value)
 ||| 
LINE:2496###Move Invocation from Example:1 to Example:1
	this.VAR_3.METHOD_1(VAR_1, VAR_2)
 ||| Delete Return at Example:1
	return 
 ||| 
LINE:2497###Move Invocation from Example:1 to Example:1
	METHOD_2().METHOD_3(false)
 ||| Delete TypeReference at Example:1
	java.lang.Exception
 ||| Delete CatchVariable at Example:1
	java.lang.Exception VAR_1
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_1.METHOD_4()
 ||| Delete Catch at Example:1
	 catch (java.lang.Exception VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (java.lang.Exception VAR_1) {
	    VAR_1.METHOD_4();
	}
 ||| 
LINE:2498###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_1
 ||| Delete UnaryOperator at Example:1
	!this.VAR_1
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!this.VAR_1) {
	
	}
 ||| 
LINE:2499###Move Invocation from Example:1 to Example:1
	this.METHOD_2(new TYPE_1(), null, true)
 ||| Delete TypeAccess at Example
	VAR_1
 ||| Delete FieldRead at Example:1
	VAR_1.list
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete ArrayRead at Example:1
	VAR_1.list[VAR_2]
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1.list[VAR_2] == null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_1.list[VAR_2] == null) {
	
	}
 ||| 
LINE:2500###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| Move Invocation from Example:1 to Example:1
	VAR_3.METHOD_2()
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete UnaryOperator at Example:1
	!VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_1)
 ||| Delete Block at Example:1
	{
	    java.lang.System.out.println(STRING_1);
	
	
	}
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete TypeAccess at Example:1
	STRING_2
 ||| Delete Invocation at Example:1
	java.lang.System.out.println(STRING_2)
 ||| Delete Block at Example:1
	{
	    java.lang.System.out.println(STRING_2);
	}
 ||| Delete If at Example:1
	if (!VAR_1) {
	    java.lang.System.out.println(STRING_1);
	
	
	} else {
	    java.lang.System.out.println(STRING_2);
	}
 ||| 
LINE:2501###Delete TypeReference at Example:1
	TYPE_2
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete TypeReference at Example:1
	java.util.List<TYPE_1>
 ||| Delete TypeReference at Example:1
	java.util.Map<TYPE_2, java.util.List<TYPE_1>>
 ||| Delete Parameter at Example:1
	java.util.Map<TYPE_2, java.util.List<TYPE_1>> VAR_2
 ||| 
LINE:2502###Move If from Example:1 to Example:1
	if (VAR_1 == false) {
	    VAR_2 = false;
	}
 ||| Move BinaryOperator from Example:1 to Example:1
	VAR_1 == true
 ||| Move Block from Example:1 to Example:1
	{
	    VAR_2 = true;
	}
 ||| Move Block from Example:1 to Example:1
	{
	    if (VAR_1 == false) {
	        VAR_2 = false;
	    }
	}
 ||| Move Assignment from Example:1 to Example:1
	VAR_2 = false
 ||| Delete FieldRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	false
 ||| Delete BinaryOperator at Example:1
	VAR_1 == false
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if ()  else 
 ||| 
LINE:2503###Move Return from Example:1 to Example:1
	return VAR_1.get(position)
 ||| Delete VariableRead at Example:1
	position
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	position > METHOD_2()
 ||| Delete TypeAccess at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	position
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete BinaryOperator at Example:1
	position % METHOD_2()
 ||| Delete Invocation at Example:1
	VAR_1.get(position % METHOD_2())
 ||| Delete Return at Example:1
	return VAR_1.get(position % METHOD_2())
 ||| Delete Block at Example:1
	
	    return VAR_1.get(position % METHOD_2());
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (position > METHOD_2())
	    return VAR_1.get(position % METHOD_2());
	else
 ||| 
LINE:2504###Update Invocation at Example:1
	 to file.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	file.METHOD_2()
 ||| Delete Invocation at Example:1
	.METHOD_3()
 ||| 
LINE:2505###Move BinaryOperator from Example:1 to Example:1
	((((STRING_1 + VAR_1) + STRING_2) + content) + STRING_3)
 ||| Move FieldRead from Example:1 to Example:1
	STRING_4
 ||| Delete FieldRead at Example:1
	STRING_3
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	( + VAR_2)
 ||| Delete BinaryOperator at Example:1
	( + VAR_2) + 
 ||| 
LINE:2506###Update Invocation at Example:1
	 to VAR_1.METHOD_2().list()
 ||| Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2().METHOD_3(VAR_2)
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	.list()
 ||| 
LINE:2507###Move Invocation from Example:1 to Example:1
	this.VAR_2.METHOD_2(VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_3
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	this.VAR_3.METHOD_2(VAR_1)
 ||| Delete BinaryOperator at Example:1
	 || this.VAR_3.METHOD_2(VAR_1)
 ||| 
LINE:2508###Update TypeAccess at Example
	Example to VAR_2
 ||| 
LINE:2509###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_1, response)
 ||| Delete TypeReference at Example:1
	TYPE_3
 ||| Delete CatchVariable at Example:1
	TYPE_3 VAR_2
 ||| Delete TypeAccess at Example
	Example
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete VariableRead at Example:1
	response
 ||| Delete TypeAccess at Example:1
	STRING_1
 ||| Delete Invocation at Example:1
	error(VAR_1, response, STRING_1)
 ||| Delete Catch at Example:1
	 catch (TYPE_3 VAR_2) {
	    error(VAR_1, response, STRING_1);
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_3 VAR_2) {
	    error(VAR_1, response, STRING_1);
	}
 ||| 
LINE:2510###Move Invocation from Example:1 to Example:1
	METHOD_1(node.METHOD_2())
 ||| 
LINE:2511###Move Invocation from Example:1 to Example:1
	METHOD_2()
 ||| Delete TypeReference at Example:1
	TYPE_1
 ||| Delete CatchVariable at Example:1
	TYPE_1 VAR_2
 ||| Delete VariableRead at Example:1
	VAR_2
 ||| Delete Invocation at Example:1
	VAR_2.METHOD_3()
 ||| Delete Catch at Example:1
	 catch (TYPE_1 VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| Delete Try at Example:1
	try {
	
	} catch (TYPE_1 VAR_2) {
	    VAR_2.METHOD_3();
	}
 ||| 
LINE:2512###Move Invocation from Example:1 to Example:1
	this.VAR_2.set(i, VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete FieldRead at Example:1
	this.VAR_2
 ||| Delete Invocation at Example:1
	this.VAR_2.isEmpty()
 ||| Delete UnaryOperator at Example:1
	!this.VAR_2.isEmpty()
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (!this.VAR_2.isEmpty()) {
	
	}
 ||| 
LINE:2513###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_3()
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_4()
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete Invocation at Example:1
	this.METHOD_2()
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete ConstructorCall at Example:1
	new TYPE_1(STRING_1)
 ||| Delete Throw at Example:1
	throw new TYPE_1(STRING_1)
 ||| Delete Block at Example:1
	{
	    throw new TYPE_1(STRING_1);
	}
 ||| Delete If at Example:1
	if (this.METHOD_2()) {
	
	
	} else {
	    throw new TYPE_1(STRING_1);
	}
 ||| 
LINE:2514###Move Invocation from Example:1 to Example:1
	METHOD_5(VAR_1)
 ||| 
LINE:2515###Move VariableRead from Example:1 to Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	.METHOD_1()
 ||| 
LINE:2516###Move Assignment from Example:1 to Example:1
	this.VAR_1 = VAR_1
 ||| Delete TypeAccess at Example:1
	TYPE_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	TYPE_2.METHOD_2(VAR_1)
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (TYPE_2.METHOD_2(VAR_1)) {
	
	}
 ||| 
LINE:2517###Move Invocation from Example:1 to Example:1
	METHOD_2(new TYPE_2(getActivity(), VAR_2, VAR_1))
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 != null
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (VAR_1 != null)
 ||| 
LINE:2518###Move Return from Example:1 to Example:1
	return VAR_1[METHOD_2(y)][METHOD_3(x)]
 ||| Delete VariableRead at Example:1
	y
 ||| Delete FieldRead at Example:1
	size
 ||| Delete BinaryOperator at Example:1
	(y < size)
 ||| Delete VariableRead at Example:1
	x
 ||| Delete FieldRead at Example:1
	size
 ||| Delete BinaryOperator at Example:1
	(x < size)
 ||| Delete BinaryOperator at Example:1
	(y < size) && (x < size)
 ||| Delete Block at Example:1
 ||| Delete Literal at Example:1
	false
 ||| Delete Return at Example:1
	return false
 ||| Delete Block at Example:1
	
	    return false;
 ||| Delete If at Example:1
	if ((y < size) && (x < size))
	
	else
	    return false;
 ||| 
LINE:2519###Move Invocation from Example:1 to Example:1
	VAR_2.METHOD_2()
 ||| 
LINE:2520###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!
 ||| 
LINE:2521###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| Move Invocation from Example:1 to Example:1
	METHOD_3()
 ||| 
LINE:2522###Insert FieldRead at Example:1
	i
 ||| Delete Literal at Example:1
	0
 ||| 
LINE:2523###Move Invocation from Example:1 to Example:1
	TYPE_1.METHOD_3().METHOD_4(METHOD_5(), METHOD_6())
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	METHOD_2()
 ||| Delete UnaryOperator at Example:1
	!METHOD_2()
 ||| Delete Block at Example:1
 ||| Delete If at Example:1
	if (!METHOD_2())
 ||| 
LINE:2524###Move Invocation from Example:1 to Example:1
	METHOD_2(VAR_2)
 ||| Delete FieldWrite at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	false
 ||| Delete Assignment at Example:1
	VAR_3 = false
 ||| Delete Block at Example:1
	{
	    VAR_3 = false;
	}
 ||| Delete TypeAccess at Example:1
	TYPE_1
 ||| Delete TypeAccess at Example:1
	VAR_4
 ||| Delete FieldRead at Example:1
	STRING_1
 ||| Delete FieldRead at Example:1
	VAR_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_2)
 ||| Delete FieldRead at Example:1
	STRING_2
 ||| Delete BinaryOperator at Example:1
	(STRING_1 + VAR_2) + STRING_2
 ||| Delete Invocation at Example:1
	TYPE_1.METHOD_3(VAR_4, (STRING_1 + VAR_2) + STRING_2)
 ||| Delete Block at Example:1
	{
	    TYPE_1.METHOD_3(VAR_4, (STRING_1 + VAR_2) + STRING_2);
	}
 ||| Delete If at Example:1
	if () {
	    VAR_3 = false;
	} else {
	    TYPE_1.METHOD_3(VAR_4, (STRING_1 + VAR_2) + STRING_2);
	}
 ||| 
LINE:2525###Move Invocation from Example:1 to Example:1
	VAR_1.METHOD_2(this)
 ||| Move Invocation from Example:1 to Example:1
	VAR_2.add(VAR_1)
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete TypeAccess at Example
	Example
 ||| Delete ThisAccess at Example:1
	this
 ||| Delete BinaryOperator at Example:1
	VAR_1 != this
 ||| Delete Block at Example:1
	{
	
	
	}
 ||| Delete TypeAccess at Example:1
	VAR_2
 ||| Delete VariableRead at Example:1
	VAR_1
 ||| Delete Invocation at Example:1
	VAR_2.add(VAR_1)
 ||| Delete Block at Example:1
	{
	    VAR_2.add(VAR_1);
	}
 ||| Delete If at Example:1
	if (VAR_1 != this) {
	
	
	} else {
	    VAR_2.add(VAR_1);
	}
 ||| 
LINE:2526###Update TypeReference at Example:1
	void to java.lang.String
 ||| Insert Return at Example:1
	return 
 ||| Move BinaryOperator from Example:1 to Example:1
	(value + STRING_1) + VAR_1
 ||| Delete TypeAccess at Example:1
	java.lang.System
 ||| Delete FieldRead at Example:1
	java.lang.System.out
 ||| Delete Invocation at Example:1
	java.lang.System.out.println()
 ||| 
LINE:2527###Move BinaryOperator from Example:1 to Example:1
	(METHOD_2() < VAR_1)
 ||| Delete TypeAccess at Example
	Example
 ||| Delete Invocation at Example:1
	length()
 ||| Delete Literal at Example:1
	0
 ||| Delete BinaryOperator at Example:1
	(length() > 0)
 ||| Delete BinaryOperator at Example:1
	(length() > 0) && 
 ||| 
LINE:2528###Update BinaryOperator at Example:1
	 to 1.0 / TYPE_3.METHOD_2(VAR_2, VAR_3, VAR_4, VAR_5, VAR_6, VAR_1, VAR_7)
 ||| Move BinaryOperator from Example:1 to Example:1
	(TYPE_3.METHOD_2(VAR_2, VAR_3, VAR_4, VAR_5, VAR_6, VAR_1, VAR_7) - 1)
 ||| Move Literal from Example:1 to Example:1
	1.0
 ||| Delete Literal at Example:1
	1
 ||| Delete BinaryOperator at Example:1
	 / 
 ||| 
LINE:2529###Move Invocation from Example:1 to Example:1
	METHOD_4()
 ||| 
LINE:2530###Delete VariableRead at Example:1
	VAR_1
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_1 == null
 ||| Delete Literal at Example:1
	null
 ||| Delete Return at Example:1
	return null
 ||| Delete Block at Example:1
	{
	    return null;
	}
 ||| Delete If at Example:1
	if (VAR_1 == null) {
	    return null;
	}
 ||| 
LINE:2531###Delete TypeAccess at Example:1
	VAR_3
 ||| Delete TypeReference at Example
	TYPE_1
 ||| Delete TypeReference at Example:1
	void
 ||| Delete Wra at Example:1
	
 ||| Delete VirtualEle at Example:1
	
 ||| Delete TypeReference at Example:1
	android.view.View
 ||| Delete Parameter at Example:1
	android.view.View VAR_4
 ||| Delete TypeAccess at Example
	Example.1
 ||| Delete Invocation at Example:1
	METHOD_5()
 ||| Delete Method at Example:1
	public void METHOD_4(android.view.View VAR_4) {
	    METHOD_5();
	}
 ||| Delete Class at Example:1
	 {
	    public void METHOD_4(android.view.View VAR_4) {
	        METHOD_5();
	    }
	}
 ||| Delete NewClass at Example:1
	new TYPE_1() {
	    public void METHOD_4(android.view.View VAR_4) {
	        METHOD_5();
	    }
	}
 ||| Delete Invocation at Example:1
	VAR_3.METHOD_3(new TYPE_1() {
	    public void METHOD_4(android.view.View VAR_4) {
	        METHOD_5();
	    }
	})
 ||| 
LINE:2532###Move Invocation from Example:1 to Example:1
	VAR_4.METHOD_3()
 ||| Delete FieldRead at Example:1
	VAR_3
 ||| Delete Literal at Example:1
	null
 ||| Delete BinaryOperator at Example:1
	VAR_3 != null
 ||| Delete Block at Example:1
	{
	
	}
 ||| Delete If at Example:1
	if (VAR_3 != null) {
	
	}
 ||| 
