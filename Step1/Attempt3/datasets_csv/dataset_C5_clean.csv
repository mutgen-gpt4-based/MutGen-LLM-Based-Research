fixed,buggy,baseline_ast_gumtree,line_id_tp_dataset
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 . METHOD_2 ( ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( VAR_3 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",8
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( STRING_1 , new TYPE_4 ( ) ) ; TYPE_5 . METHOD_3 ( STRING_2 , VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( STRING_1 , new TYPE_4 ( ) ) ; TYPE_5 . METHOD_3 ( STRING_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",10
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",11
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",12
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { this . VAR_4 = VAR_1 ; this . VAR_5 = VAR_2 ; this . VAR_6 = VAR_3 ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",13
"public void METHOD_1 ( TYPE_1 VAR_1 , int i , int VAR_2 , int VAR_3 ) { startTime = startTime . METHOD_2 ( i ) ; startTime = startTime . METHOD_3 ( VAR_2 ) ; startTime = startTime . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i , int VAR_2 , int VAR_3 ) { startTime . METHOD_2 ( i ) ; startTime . METHOD_3 ( VAR_2 ) ; startTime . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; }","['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",14
"public void METHOD_1 ( int offset , int length ) { if ( ( offset + length ) > ( VAR_1 . length ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . offset = offset ; this . length = length ; }","public void METHOD_1 ( int offset , int length ) { if ( ( offset + length ) > ( VAR_1 . length ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . offset = offset ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",15
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( ) ; VAR_6 = false ; VAR_7 . METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_7 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",16
public void init ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.Random ( ) ; this . VAR_1 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 . init ( ) ; VAR_5 = new TYPE_3 ( ) ; },public void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 . init ( ) ; VAR_5 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",18
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( ( VAR_1 ) != null ) ) { VAR_1 . METHOD_3 ( ) ; } else { VAR_2 = TYPE_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } } },"['Move Invocation', 'Insert Block', 'Insert If', 'Move BinaryOperator', 'Move Block', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",20
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",21
"public boolean METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( this . getContext ( ) ) ; VAR_2 . i ( VAR_3 , STRING_1 ) ; return true ; }",public boolean METHOD_1 ( ) { return false ; },"['Update Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",22
public void METHOD_1 ( ) { this . VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( this ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( this ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( this ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( this ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",23
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",25
public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",26
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 instanceof TYPE_2 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete Assignment']",27
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",28
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_2 = null ; VAR_3 = true ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_2 = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",29
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",30
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = 0.0F ; VAR_4 = 0 ; VAR_5 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = 0.0F ; VAR_5 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",31
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",35
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_4 , VAR_5 , VAR_6 ) ; VAR_7 = null ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_4 ( VAR_4 , VAR_5 , VAR_6 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",36
public void init ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_2 . METHOD_1 ( ( ( TYPE_4 ) ( VAR_1 ) ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public void init ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ( ( TYPE_4 ) ( VAR_1 ) ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",42
"public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) VAR_2 = VAR_1 . METHOD_2 ( ) ; else VAR_2 = null ; TYPE_2 . METHOD_3 ( VAR_3 , ( STRING_1 + ( VAR_2 ) ) ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , ( STRING_1 + ( VAR_2 ) ) ) ; }","['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",44
public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { this . VAR_2 = false ; METHOD_3 ( ) ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { METHOD_3 ( ) ; } return super . METHOD_1 ( item ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",45
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , ( STRING_3 + ( VAR_2 . size ( ) ) ) ) ; VAR_3 = VAR_4 ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",47
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { TYPE_2 . METHOD_2 ( null , STRING_1 ) ; } else { VAR_3 . isEmpty = false ; TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",48
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = new TYPE_3 ( ) ; VAR_5 = new TYPE_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = new TYPE_3 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",49
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",50
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { if ( VAR_3 ) { METHOD_2 ( ) ; VAR_3 = false ; } return VAR_4 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; return VAR_4 ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",51
"public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { if ( VAR_2 ) TYPE_3 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = new TYPE_4 ( VAR_1 ) ; VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { if ( VAR_2 ) TYPE_3 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = new TYPE_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",52
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",53
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ( ( VAR_2 ) - INT_1 ) , ( ( VAR_3 ) - INT_1 ) ) ; VAR_4 . show ( ) ; VAR_5 = VAR_6 ; METHOD_2 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ( ( VAR_2 ) - INT_1 ) , ( ( VAR_3 ) - INT_1 ) ) ; VAR_4 . show ( ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",55
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",56
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( this , this ) ) { VAR_2 = STRING_1 ; VAR_3 . setText ( VAR_2 ) ; VAR_4 = null ; METHOD_3 ( null ) ; METHOD_4 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( this , this ) ) { VAR_2 = STRING_1 ; VAR_3 . setText ( VAR_2 ) ; METHOD_3 ( null ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",59
public static void METHOD_1 ( ) { VAR_1 = true ; new java.lang.Thread ( new TYPE_1 ( ) { public void METHOD_2 ( ) { TYPE_2 . METHOD_3 ( ) ; } } ) . start ( ) ; },public static void METHOD_1 ( ) { new java.lang.Thread ( new TYPE_1 ( ) { public void METHOD_2 ( ) { TYPE_2 . METHOD_3 ( ) ; } } ) . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",60
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_2 = new TYPE_3 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",61
"public void init ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_5 . start ( ) ; VAR_1 = true ; } }","public void init ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_5 . start ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",62
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this , new java.lang.String [ ] { VAR_4 } , VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this , new java.lang.String [ ] { VAR_4 } , VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",63
"public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , this ) ; VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 , this , VAR_4 ) ; METHOD_2 ( VAR_3 ) ; VAR_5 = VAR_1 ; }","public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , this ) ; VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 , this , VAR_4 ) ; METHOD_2 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",66
public void METHOD_1 ( ) { VAR_1 = ( VAR_1 ) + FLOAT_1 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",68
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = new TYPE_1 ( this ) ; new TYPE_2 ( this ) ; VAR_2 = true ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = new TYPE_1 ( this ) ; new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",71
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_1 = new TYPE_1 ( ) ; METHOD_3 ( new TYPE_2 ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Block', 'Delete If']",72
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) this . VAR_3 = VAR_1 ; else throw new TYPE_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( VAR_1 ) ; else throw new TYPE_2 ( STRING_1 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",73
public void update ( ) { VAR_1 = ( VAR_2 ) > 0 ; if ( VAR_3 ) { VAR_4 = VAR_5 ; } METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void update ( ) { if ( VAR_3 ) { VAR_4 = VAR_5 ; } METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",74
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_3 ) , VAR_4 . METHOD_4 ( ) , VAR_5 , VAR_6 ) ; VAR_6 = STRING_1 ; VAR_5 = STRING_1 ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_3 ) , VAR_4 . METHOD_4 ( ) , VAR_5 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",75
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 = VAR_4 . getBoolean ( VAR_5 ) ; VAR_6 = VAR_4 . getString ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_6 = VAR_4 . getString ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",76
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",77
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",79
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( VAR_2 ) ; },"['Insert Assignment', 'Move Invocation', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete Block', 'Delete If']",80
"private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = false ; if ( ( VAR_4 ) == null ) { VAR_4 = new TYPE_1 ( VAR_5 ) ; } VAR_6 . init ( VAR_1 , VAR_2 ) ; view . METHOD_2 ( ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_4 ) == null ) { VAR_4 = new TYPE_1 ( VAR_5 ) ; } VAR_6 . init ( VAR_1 , VAR_2 ) ; view . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",81
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return true ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; return true ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",83
public void METHOD_1 ( ) { VAR_1 = this ; METHOD_2 ( id ) ; },public void METHOD_1 ( ) { METHOD_2 ( id ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",84
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = this . METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",85
protected void METHOD_1 ( ) { if ( ( VAR_1 ) >= 0 ) METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { if ( ( VAR_1 ) >= 0 ) METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",89
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; VAR_2 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",90
private void METHOD_1 ( ) { VAR_1 . execute ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; count = 0 ; },private void METHOD_1 ( ) { VAR_1 . execute ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",91
"void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = 0 ; VAR_4 = TYPE_2 . METHOD_2 ( ) ; switch ( VAR_1 ) { case 0 : METHOD_3 ( VAR_2 ) ; return ; default : return ; } }","void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { switch ( VAR_1 ) { case 0 : METHOD_3 ( VAR_2 ) ; return ; default : return ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",92
public void METHOD_1 ( ) { VAR_1 = STRING_1 + ( VAR_2 ) ; VAR_3 . setText ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_3 . setText ( VAR_1 ) ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",93
"public void METHOD_1 ( java.lang.Object ... args ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_3 , 0 , INT_1 ) ; }","public void METHOD_1 ( java.lang.Object ... args ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",94
public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; VAR_2 = null ; return STRING_2 ; },public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; return STRING_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",95
public void METHOD_1 ( ) { VAR_1 = false ; try { VAR_2 . METHOD_1 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_1 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",96
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = new TYPE_1 ( this , VAR_1 ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_1 ( VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_4 = new TYPE_1 ( this , VAR_2 . METHOD_2 ( VAR_3 ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_1 ( VAR_4 ) ; }","['Move FieldWrite', 'Move ConstructorCall', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment']",97
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",98
"public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_2 ( STRING_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = INT_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",99
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == true ) { output . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; } },private void METHOD_1 ( ) throws java.io.IOException { output . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",100
private void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_1 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_3 = 0 ; VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",101
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; this . VAR_2 = false ; VAR_1 . METHOD_2 ( this , STRING_1 , STRING_3 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; VAR_1 . METHOD_2 ( this , STRING_1 , STRING_3 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",102
public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( name ) ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",103
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) throw new java.lang.NullPointerException ( STRING_1 ) ; VAR_2 = VAR_1 ; VAR_3 = null ; VAR_4 = null ; METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) throw new java.lang.NullPointerException ( STRING_1 ) ; VAR_2 = VAR_1 ; VAR_3 = null ; METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",104
public void METHOD_1 ( ) { index = 0 ; VAR_1 = METHOD_2 ( index ) ; VAR_2 = METHOD_3 ( index ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_2 = METHOD_3 ( 0 ) ; METHOD_4 ( VAR_2 ) ; VAR_1 = METHOD_2 ( 0 ) ; },"['Move Assignment', 'Move FieldWrite', 'Update Invocation', 'Move FieldWrite', 'Update Invocation', 'Move Literal', 'Insert Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead']",106
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",107
public int METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_2 ) ; } return VAR_5 . getColor ( ) ; },public int METHOD_1 ( ) { return VAR_5 . getColor ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",108
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = null ; this . VAR_1 = VAR_1 ; return METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",110
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getActivity ( ) ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_2 . METHOD_3 ( this ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",111
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",112
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( true ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",114
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = new java.util.ArrayList ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_3 ( ) ; },"['Move VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",115
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . title = STRING_1 ; VAR_3 = INT_1 ; VAR_2 . height = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }",public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . title = STRING_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete ConstructorCall']",116
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",117
private void init ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_1 ( ) ) ; VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; },private void init ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_1 ( ) ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",118
"private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) , VAR_2 ) ; }","private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) , VAR_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",120
public void METHOD_1 ( ) { VAR_1 = INT_1 ; METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",122
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = false ; VAR_9 = false ; VAR_10 = false ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = false ; VAR_9 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",123
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) VAR_2 = new java.util.Scanner ( VAR_3 ) ; else VAR_2 = new java.util.Scanner ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) VAR_2 = new java.util.Scanner ( VAR_3 ) ; else VAR_2 = new java.util.Scanner ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",124
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 , false ) ; METHOD_4 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",128
public int METHOD_1 ( ) { VAR_1 = METHOD_2 ( this ) ; return VAR_1 ; },public int METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",129
public void METHOD_1 ( ) { f = new java.io.File ( VAR_1 ) ; VAR_2 = new java.io.File ( VAR_3 ) ; },public void METHOD_1 ( ) { f = new java.io.File ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",131
"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; return VAR_5 = ( VAR_3 ) != null ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; return ( VAR_3 ) != null ; }","['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment']",132
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = ( ( TYPE_1 ) ( VAR_2 . get ( STRING_1 ) ) ) ; return this . VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",134
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = false ; VAR_5 . METHOD_3 ( ) ; return true ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 . METHOD_3 ( ) ; return true ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",135
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",137
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",139
private void METHOD_1 ( ) { this . VAR_1 = ( ( float ) ( VAR_2 ) ) / ( ( float ) ( VAR_3 ) ) ; },private void METHOD_1 ( ) { if ( ( VAR_3 ) > ( VAR_2 ) ) { this . VAR_1 = ( ( float ) ( VAR_2 ) ) / ( ( float ) ( VAR_3 ) ) ; } else { VAR_1 = 1 ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Insert FieldRead', 'Insert FieldRead', 'Move Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",140
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; context = METHOD_3 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",141
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 = this . VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",142
public void METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case 0 : VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_2 ) ; break ; case 1 : VAR_2 = VAR_5 ; VAR_4 . METHOD_2 ( VAR_2 ) ; break ; } },public void METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case 0 : VAR_4 . METHOD_2 ( VAR_3 ) ; break ; case 1 : VAR_4 . METHOD_2 ( VAR_5 ) ; break ; } },"['Update TypeAccess', 'Update TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",144
public void handle ( TYPE_1 event ) { final java.util.List < TYPE_2 > VAR_1 = METHOD_1 ( ) ; for ( TYPE_2 i : VAR_1 ) { VAR_2 = false ; i . METHOD_2 ( ) ; } },public void handle ( TYPE_1 event ) { final java.util.List < TYPE_2 > VAR_1 = METHOD_1 ( ) ; for ( TYPE_2 i : VAR_1 ) { i . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",145
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 = false ; METHOD_2 ( new android.content.Intent ( this , VAR_3 class ) ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",147
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",148
public void METHOD_1 ( android.view.View view ) { super . METHOD_1 ( view ) ; VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View view ) { super . METHOD_1 ( view ) ; METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",149
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",150
public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( TYPE_1 . METHOD_2 ( ) ) ; TYPE_2 result = VAR_1 . METHOD_3 ( TYPE_1 ) ; if ( result == null ) return STRING_1 ; else { TYPE_1 = result ; VAR_2 = true ; return STRING_2 ; } },public java.lang.String METHOD_1 ( ) { TYPE_2 result = VAR_1 . METHOD_3 ( TYPE_1 ) ; if ( result == null ) return STRING_1 ; else { TYPE_1 = result ; return STRING_2 ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",153
public java.lang.String execute ( ) throws java.lang.Exception { this . VAR_1 = TYPE_1 . METHOD_1 ( ) ; this . VAR_2 = TYPE_2 . METHOD_2 ( ) ; this . VAR_3 = TYPE_3 . METHOD_3 ( ) ; return VAR_4 ; },public java.lang.String execute ( ) throws java.lang.Exception { this . VAR_2 = TYPE_2 . METHOD_2 ( ) ; this . VAR_3 = TYPE_3 . METHOD_3 ( ) ; return VAR_4 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",155
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = 0 ; this . VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_3 = 0 ; this . VAR_4 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",157
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new TYPE_2 ( getActivity ( ) . METHOD_2 ( ) , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",158
"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_3 . getName ( ) , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( VAR_5 class ) ; return VAR_2 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_3 . getName ( ) , VAR_1 ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",159
public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = true ; VAR_3 = VAR_1 ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_3 = VAR_1 ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",160
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",161
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",162
public static synchronized TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",164
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = VAR_2 ; TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 ) { VAR_4 = true ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = VAR_2 ; TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",165
private void METHOD_1 ( java.lang.String message ) { this . state = VAR_1 ; this . VAR_2 = message ; this . VAR_3 = null ; METHOD_2 ( ) ; },private void METHOD_1 ( java.lang.String message ) { this . state = VAR_1 ; this . VAR_2 = message ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",167
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 = false ; } else { METHOD_2 ( new TYPE_3 ( ) ) ; VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( new TYPE_2 ( ) ) ; } else { METHOD_2 ( new TYPE_3 ( ) ) ; VAR_2 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",168
"public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) , java.lang.Math.abs ( METHOD_3 ( ) ) , VAR_1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; }","public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) , java.lang.Math.abs ( METHOD_3 ( ) ) , VAR_1 ) ; VAR_2 = false ; VAR_3 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",169
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; this . VAR_4 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",170
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null != VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; } else { VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Move Assignment', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",171
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",172
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_3 = true ; VAR_4 = false ; } else { VAR_3 = false ; VAR_4 = true ; } return VAR_3 ; },public boolean METHOD_1 ( ) { return VAR_3 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",173
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( path , VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( path , VAR_2 , VAR_3 ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",175
"public void METHOD_1 ( float VAR_1 ) { if ( VAR_2 ) { this . METHOD_2 ( true ) ; } if ( VAR_3 ) { TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_4 = true ; VAR_3 = false ; } }","public void METHOD_1 ( float VAR_1 ) { if ( VAR_2 ) { this . METHOD_2 ( true ) ; VAR_2 = false ; } if ( VAR_3 ) { TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_4 = true ; VAR_3 = false ; } }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",176
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) == null ) { VAR_3 = this ; } return VAR_4 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; return VAR_4 ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete Block', 'Delete If']",179
public java.util.Set < java.lang.Class < ? > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = METHOD_2 ( ) ; return VAR_1 ; },public java.util.Set < java.lang.Class < ? > > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",180
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } VAR_2 = new TYPE_1 ( this ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",181
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( null ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 . METHOD_2 ( null ) ; } return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",182
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 = VAR_3 ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",184
"public TYPE_1 < TYPE_2 > METHOD_1 ( int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( new TYPE_4 < TYPE_5 , TYPE_2 > ( VAR_1 ) ) ; return this ; }",public TYPE_1 < TYPE_2 > METHOD_1 ( int VAR_1 ) { VAR_2 = new TYPE_4 ( VAR_1 ) ; return this ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",185
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = INT_1 ; VAR_3 = VAR_4 ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( java.lang.String . METHOD_3 ( VAR_3 ) ) ; VAR_7 = false ; VAR_8 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = INT_1 ; VAR_3 = VAR_4 ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( java.lang.String . METHOD_3 ( VAR_3 ) ) ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",186
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . get ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_3 . METHOD_3 ( VAR_2 , VAR_4 ) ; } VAR_5 = false ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . get ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_3 . METHOD_3 ( VAR_2 , VAR_4 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",187
public void METHOD_1 ( ) { VAR_1 = true ; java.util.Collections.sort ( VAR_2 ) ; },public void METHOD_1 ( ) { java.util.Collections.sort ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",188
public void METHOD_1 ( TYPE_1 position ) { this . VAR_1 . set ( position ) ; VAR_2 . METHOD_1 ( position ) ; },public void METHOD_1 ( TYPE_1 position ) { this . position = position ; VAR_2 . METHOD_1 ( position ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",189
"private TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = VAR_4 ; if ( VAR_3 == null ) { VAR_3 = new TYPE_1 ( ) ; } VAR_4 = null ; VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; return VAR_3 ; }","private TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = VAR_4 ; if ( VAR_3 == null ) { VAR_3 = new TYPE_1 ( ) ; } VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; return VAR_3 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",190
public static void init ( ) { VAR_1 = 0 ; VAR_2 = VAR_3 ; VAR_4 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },public static void init ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",192
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",193
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_1 ( ) ; } VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",196
"public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) . put ( TYPE_2 . METHOD_4 ( ) , VAR_1 ) . build ( ) ; }","public void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_3 ( ) . put ( TYPE_2 . METHOD_4 ( ) , METHOD_2 ( ) ) . build ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",197
"public boolean METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { VAR_2 = true ; return VAR_3 . remove ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { return VAR_3 . remove ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",200
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 . setEnabled ( ( ! VAR_2 ) ) ; if ( VAR_2 ) VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 . setEnabled ( ( ! VAR_2 ) ) ; }","['Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",202
public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; TYPE_2 . METHOD_1 ( this ) ; },public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",203
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_6 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",204
public synchronized void METHOD_1 ( ) { state = VAR_1 ; },public synchronized void METHOD_1 ( ) { setState ( VAR_1 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",205
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; if ( null != ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; } METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( null != ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; } METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",206
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( null ) ; METHOD_4 ( ) ; VAR_3 = VAR_4 ; METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( null ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",207
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",208
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) VAR_2 = INT_1 ; else VAR_2 = 1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",209
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",211
"public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_1 ( name , VAR_3 , VAR_4 , VAR_5 ) ; VAR_6 = new java.util.ArrayList < TYPE_1 > ( new java.util.HashSet < TYPE_1 > ( VAR_1 . METHOD_2 ( ) ) ) ; return STRING_1 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_1 ( name , VAR_3 , VAR_4 , VAR_5 ) ; return STRING_1 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",212
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",213
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { METHOD_2 ( ) . value = VAR_1 . getValue ( ) ; VAR_2 . METHOD_3 ( VAR_1 . getValue ( ) ) ; },public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { VAR_2 . METHOD_3 ( VAR_1 . getValue ( ) ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",214
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; context = VAR_1 . METHOD_2 ( ) ; label = new TYPE_2 ( STRING_1 , FLOAT_1 , FLOAT_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; label = new TYPE_2 ( STRING_1 , FLOAT_1 , FLOAT_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",215
"public void METHOD_1 ( ) { float VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_2 = ( FLOAT_1 * ( VAR_2 ) ) + ( FLOAT_2 * ( ( VAR_2 ) + VAR_1 ) ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { float VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_2 = VAR_3 ; METHOD_3 ( ) ; }","['Insert FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete BinaryOperator']",216
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; VAR_2 = false ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",217
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_3 ) ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",219
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = true ; VAR_4 . METHOD_3 ( event ) ; METHOD_4 ( ) ; } return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_4 . METHOD_3 ( event ) ; if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) METHOD_4 ( ) ; return false ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",220
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",222
public TYPE_1 remove ( java.lang.String key ) { if ( key != null ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } VAR_3 . remove ( key ) ; } return VAR_4 ; },public TYPE_1 remove ( java.lang.String key ) { if ( key != null ) { VAR_3 . remove ( key ) ; } return VAR_4 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",223
"public void METHOD_1 ( TYPE_1 element , java.lang.String VAR_1 , boolean VAR_2 ) { this . VAR_2 = VAR_2 ; if ( VAR_2 ) { METHOD_2 ( element , VAR_1 ) ; } else { METHOD_1 ( element , VAR_1 ) ; } this . VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 element , java.lang.String VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { METHOD_2 ( element , VAR_1 ) ; } else { METHOD_1 ( element , VAR_1 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",225
"public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_4 = new TYPE_1 ( name , VAR_1 , VAR_2 , VAR_3 ) ; VAR_5 = true ; }","public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_4 = new TYPE_1 ( name , VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",227
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( 0 ) ; VAR_1 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",228
"public void METHOD_1 ( ) { long VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( startTime ) ; VAR_2 . setText ( getTime ( VAR_1 ) ) ; VAR_3 = VAR_1 ; VAR_4 . METHOD_3 ( this , INT_1 ) ; }","public void METHOD_1 ( ) { long VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( startTime ) ; VAR_2 . setText ( getTime ( VAR_1 ) ) ; VAR_4 . METHOD_3 ( this , INT_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",229
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; },"['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",230
public void METHOD_1 ( java.util.Collection < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( java.util.Collection < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",232
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = VAR_4 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",233
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( false ) ; },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = false ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete Invocation']",234
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",235
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",236
public void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 ; VAR_2 = true ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 ; VAR_2 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",237
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",238
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",239
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( ) ; final TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_5 . add ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; final TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_5 . add ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",240
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { return ; } VAR_1 . METHOD_1 ( ) ; METHOD_3 ( ) ; VAR_2 = false ; },private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { return ; } VAR_1 . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",241
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { VAR_1 = 0 ; } VAR_2 = true ; },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { VAR_1 = 0 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",242
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; this . VAR_4 = null ; this . VAR_5 = null ; this . VAR_6 = null ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_4 = null ; this . VAR_5 = null ; this . VAR_5 = null ; this . VAR_6 = null ; },"['Move Assignment', 'Update FieldWrite']",243
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = false ; final java.util.List < TYPE_3 > VAR_4 = METHOD_2 ( ) ; VAR_5 . add ( new TYPE_3 ( VAR_1 , VAR_2 ) ) ; VAR_1 . METHOD_3 ( this . VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { final java.util.List < TYPE_3 > VAR_4 = METHOD_2 ( ) ; VAR_5 . add ( new TYPE_3 ( VAR_1 , VAR_2 ) ) ; VAR_1 . METHOD_3 ( this . VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",244
public static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 . context ) != context ) { VAR_2 = new TYPE_2 ( context ) . build ( ) ; VAR_1 . context = context ; } return VAR_2 ; },public static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( context ) . build ( ) ; } return VAR_2 ; },"['Update BinaryOperator', 'Update FieldRead', 'Insert Literal', 'Delete VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",245
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; TYPE_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",246
"public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( - 1 ) ) { return ; } VAR_2 = new TYPE_1 ( INT_1 , VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } }","public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( - 1 ) ) { return ; } VAR_3 . METHOD_2 ( new TYPE_1 ( INT_1 , VAR_1 ) ) ; }","['Insert Invocation', 'Move TypeAccess', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",248
"void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) ; }","void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",249
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",250
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = new TYPE_1 ( height , VAR_1 , VAR_3 ) ; this . VAR_1 = VAR_1 ; this . height = height ; }","public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = new TYPE_1 ( height , VAR_1 , VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",252
public void METHOD_1 ( TYPE_1 < java.lang.String > value ) { if ( value . METHOD_2 ( ) ) { this . VAR_1 = value ; this . VAR_2 . get ( ) . METHOD_3 ( VAR_3 . get ( ) ) ; } },public void METHOD_1 ( TYPE_1 < java.lang.String > value ) { if ( value . METHOD_2 ( ) ) { this . VAR_2 . get ( ) . METHOD_3 ( VAR_3 . get ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",255
private void METHOD_1 ( TYPE_1 value ) { if ( value == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 |= 1 ; VAR_2 = value . METHOD_2 ( ) ; },private void METHOD_1 ( TYPE_1 value ) { if ( value == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 |= 1 ; VAR_2 = value ; },"['Move VariableRead', 'Delete Invocation']",256
"void METHOD_1 ( int message ) { VAR_1 = message ; TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . setText ( message ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; METHOD_4 ( false ) ; }","void METHOD_1 ( int message ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . setText ( message ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; METHOD_4 ( false ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",257
"public void start ( ) { VAR_1 = new TYPE_1 ( this , 1 ) ; VAR_2 = new TYPE_1 ( this , INT_1 ) ; VAR_3 = new TYPE_2 ( this ) ; }","public void start ( ) { VAR_1 = new TYPE_1 ( this , 1 ) ; VAR_2 = new TYPE_1 ( this , INT_1 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",259
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",260
public final void METHOD_1 ( ) throws TYPE_1 { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_1 = true ; VAR_2 = 0 ; java.lang.System.out.println ( ( ( toString ( ) ) + STRING_2 ) ) ; },public final void METHOD_1 ( ) throws TYPE_1 { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } java.lang.System.out.println ( ( ( toString ( ) ) + STRING_2 ) ) ; VAR_1 = true ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",261
void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class . METHOD_3 ( STRING_1 ) ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 class . METHOD_3 ( STRING_2 ) ) ; },void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class . METHOD_3 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",262
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",263
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; if ( ( this . VAR_4 ) != null ) VAR_5 = this . VAR_4 . METHOD_1 ( ) ; VAR_6 = this . VAR_7 ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; if ( ( this . VAR_4 ) != null ) VAR_5 = this . VAR_4 . METHOD_1 ( ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",264
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_3 ( STRING_1 ) ; },"['Move ConstructorCall', 'Delete ConstructorCall']",265
public void METHOD_1 ( int start ) { VAR_1 = start ; VAR_2 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int start ) { VAR_1 = start ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",267
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . id = VAR_2 . getId ( ) . toString ( ) ; this . name = VAR_2 . getName ( ) ; this . VAR_3 = VAR_1 . METHOD_2 ( ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . id = VAR_2 . getId ( ) . toString ( ) ; this . name = VAR_2 . getName ( ) ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",268
protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",269
public boolean METHOD_1 ( int position ) { VAR_1 = position ; return true ; },public boolean METHOD_1 ( int position ) { return true ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",270
public void METHOD_1 ( ) { endTime = TYPE_1 . METHOD_2 ( ) ; VAR_1 = ( endTime ) - ( startTime ) ; VAR_2 = true ; VAR_3 = this . VAR_1 ; },public void METHOD_1 ( ) { endTime = TYPE_1 . METHOD_2 ( ) ; VAR_1 = ( endTime ) - ( startTime ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",272
public void METHOD_1 ( int value ) { this . value = value ; this . VAR_1 = value ; this . VAR_2 = true ; this . VAR_3 = false ; this . METHOD_2 ( ) ; },public void METHOD_1 ( int value ) { this . value = value ; this . VAR_2 = true ; this . VAR_3 = false ; this . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",274
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 view ) { VAR_2 = false ; view . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 view ) { view . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",275
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",276
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . end ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . end ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = true ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",278
public boolean METHOD_1 ( android.view.View view ) { VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { return false ; } VAR_2 = getActivity ( ) . METHOD_3 ( VAR_3 ) ; view . METHOD_4 ( true ) ; return true ; },public boolean METHOD_1 ( android.view.View view ) { VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { return false ; } view . METHOD_4 ( true ) ; return true ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",280
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 = true ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",282
public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . output . METHOD_1 ( ) ; this . VAR_2 = null ; this . VAR_3 = null ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . output = null ; this . VAR_2 = null ; this . VAR_3 = null ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Move ThisAccess', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",284
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = INT_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",285
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = null ; VAR_3 = null ; end = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = null ; VAR_3 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",286
private void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) == ( VAR_2 ) ) ? VAR_3 : VAR_2 ; VAR_4 = ( ( VAR_1 ) == ( VAR_2 ) ) ? VAR_3 : VAR_2 ; VAR_5 = new TYPE_1 < java.lang.Object > ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) == ( VAR_2 ) ) ? VAR_3 : VAR_2 ; VAR_4 = ( ( VAR_1 ) == ( VAR_2 ) ) ? VAR_3 : VAR_2 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",287
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( METHOD_3 ( ) ) { if ( ( this . VAR_1 ) < 0 ) { this . VAR_2 = false ; this . VAR_3 = true ; } } else { } } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( METHOD_3 ( ) ) { if ( ( this . VAR_1 ) < 0 ) { this . VAR_2 = false ; } } else { } } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",288
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = ( ( TYPE_4 ) ( view . METHOD_3 ( VAR_6 ) ) ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",289
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",290
public void METHOD_1 ( ) { VAR_1 = a ; METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",291
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_3 = new java.util.Date ( ) ; METHOD_2 ( VAR_1 ) ; } else { METHOD_3 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_3 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",292
public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = this ; TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; },public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",293
"public java.util.List METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 list = new TYPE_1 ( ) ; VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_4 = METHOD_2 ( VAR_2 ) ; VAR_5 . size = ( VAR_2 - VAR_1 ) + 1 ; return list ; }","public java.util.List METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 list = new TYPE_1 ( ) ; VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_4 = METHOD_2 ( VAR_2 ) ; return list ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",295
public synchronized void METHOD_1 ( ) throws TYPE_1 { while ( ! ( METHOD_2 ( VAR_1 ) ) ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 = VAR_1 ; ( VAR_4 ) ++ ; },public synchronized void METHOD_1 ( ) throws TYPE_1 { while ( ! ( METHOD_2 ( VAR_1 ) ) ) { VAR_2 . METHOD_3 ( ) ; } ( VAR_4 ) ++ ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",296
"public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; }","public void init ( ) { this . VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; }",['Insert ThisAccess'],299
public void METHOD_1 ( java.lang.String [ ] names ) { METHOD_2 ( names ) ; VAR_1 = null ; },public void METHOD_1 ( java.lang.String [ ] names ) { METHOD_2 ( names ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",300
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) && ( ! ( getIntent ( ) . METHOD_2 ( VAR_3 ) ) ) ) { VAR_2 = false ; METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) && ( ! ( getIntent ( ) . METHOD_2 ( VAR_3 ) ) ) ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",301
"public boolean METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . getContext ( ) . METHOD_3 ( ) ) ; VAR_3 = true ; return VAR_4 . add ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . getContext ( ) . METHOD_3 ( ) ) ; return VAR_4 . add ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",302
private void METHOD_1 ( ) { METHOD_2 ( ) ; this . VAR_1 = null ; this . VAR_2 = null ; VAR_3 = false ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; this . VAR_1 = null ; this . VAR_2 = null ; init ( ) ; },"['Update Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",303
public int METHOD_1 ( int VAR_1 ) { int VAR_2 = VAR_1 - ( this . VAR_3 ) ; if ( VAR_2 <= 0 ) { this . VAR_4 = true ; return 0 ; } this . METHOD_2 ( VAR_2 ) ; return VAR_2 ; },public int METHOD_1 ( int VAR_1 ) { int VAR_2 = VAR_1 - ( this . VAR_3 ) ; if ( VAR_2 <= 0 ) { return 0 ; } this . METHOD_2 ( VAR_2 ) ; return VAR_2 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",304
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 = false ; this . VAR_2 = java.util.Calendar.getInstance ( ) ; this . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_2 = java.util.Calendar.getInstance ( ) ; this . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",305
"private void init ( ) { try { VAR_1 . info ( STRING_1 ) ; this . VAR_2 = METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_1 . error ( STRING_2 , VAR_3 ) ; METHOD_2 ( ) ; } }","private void init ( ) { try { VAR_1 . info ( STRING_1 ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_1 . error ( STRING_2 , VAR_3 ) ; METHOD_2 ( ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",306
"public void METHOD_1 ( float value ) { VAR_1 = true ; this . VAR_2 . value ( value ) ; METHOD_2 ( new TYPE_1 ( this , VAR_3 ) ) ; }","public void METHOD_1 ( float value ) { this . VAR_2 . value ( value ) ; METHOD_2 ( new TYPE_1 ( this , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",307
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",308
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",311
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",312
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",313
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; if ( VAR_5 ) { VAR_6 . METHOD_6 ( ) ; VAR_5 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; VAR_6 . METHOD_6 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",314
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",315
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",316
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",317
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; this . VAR_3 = null ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Update FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",319
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; time = 0 ; VAR_5 = null ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; time = 0 ; VAR_5 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",320
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; VAR_3 = new java.lang.Thread ( this ) ; VAR_4 . start ( ) ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; VAR_6 = false ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; VAR_3 = new java.lang.Thread ( this ) ; VAR_4 . start ( ) ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",322
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; f = new TYPE_2 ( ) ; VAR_2 = new TYPE_3 ( ( ( VAR_3 ) - INT_1 ) , INT_2 , STRING_1 ) ; VAR_4 . add ( VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; f = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",323
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 ) ) ; },private void METHOD_1 ( ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",324
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( VAR_5 ) . METHOD_6 ( VAR_6 ) ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_1 . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 ) . METHOD_6 ( VAR_6 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",325
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_2 ( VAR_6 , VAR_7 ) ; VAR_3 . METHOD_2 ( VAR_8 , VAR_9 ) ; }","public void METHOD_1 ( ) { VAR_1 = false ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_2 ( VAR_6 , VAR_7 ) ; VAR_3 . METHOD_2 ( VAR_8 , VAR_9 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",326
public void METHOD_1 ( ) { this . VAR_1 = 0.0 ; this . status = STRING_1 ; if ( ( VAR_2 ) != 0 ) this . VAR_3 = true ; else if ( ( VAR_2 ) == 0 ) this . VAR_3 = false ; },public void METHOD_1 ( ) { this . VAR_1 = 0.0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",327
public void METHOD_1 ( ) { length = 0 ; VAR_1 = 0 ; VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( ) { length = 0 ; VAR_2 = false ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",329
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( ) ; } } VAR_1 = true ; },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( ) ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",330
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_1 = 0 ; this . VAR_2 = new java.lang.Thread ( this ) ; this . VAR_3 . start ( ) ; },public void METHOD_1 ( ) { this . VAR_2 = new java.lang.Thread ( this ) ; this . VAR_3 . start ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",332
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = false ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",333
"protected void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . init ( VAR_1 , VAR_2 ) ; VAR_3 = new TYPE_3 ( METHOD_1 ( ( VAR_4 ? VAR_5 : VAR_6 ) ) ) ; VAR_7 = true ; }","protected void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . init ( VAR_1 , VAR_2 ) ; VAR_3 = new TYPE_3 ( METHOD_1 ( ( VAR_4 ? VAR_5 : VAR_6 ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",337
public void METHOD_1 ( java.lang.String name ) { id = name ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Update FieldWrite', 'Insert ThisAccess']",338
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",340
public void METHOD_1 ( ) { offset = 0 ; VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; init ( ) ; VAR_3 . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { offset = 0 ; VAR_1 . METHOD_2 ( ) ; init ( ) ; VAR_3 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",341
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",343
"public synchronized void METHOD_1 ( ) throws java.lang.Exception { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ; } }","public synchronized void METHOD_1 ( ) throws java.lang.Exception { synchronized ( VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ; } }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",344
public void METHOD_1 ( ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; VAR_2 = true ; METHOD_3 ( ) ; } },public void METHOD_1 ( ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",346
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = step ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",347
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",349
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_2 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",350
"private void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( 0 , 0 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; }",private void init ( ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",351
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 == 1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 == 1 ; },['Update FieldWrite'],352
"public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( this ) { VAR_2 = false ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_2 . METHOD_4 ( VAR_6 , ( STRING_1 + ( VAR_3 ) ) ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( this ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_2 . METHOD_4 ( VAR_6 , ( STRING_1 + ( VAR_3 ) ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",353
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = true ; this . VAR_4 = new java.util.Date ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",355
public void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_1 = true ; VAR_2 = METHOD_2 ( ) . get ( VAR_3 ) ; VAR_4 = METHOD_2 ( ) . get ( VAR_5 ) ; },public void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_1 = true ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",356
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) && ( VAR_1 > INT_1 ) ) { this . VAR_2 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) && ( VAR_1 > INT_1 ) ) { this . VAR_2 = VAR_2 ; } },"['Insert FieldRead', 'Delete VariableRead']",357
public void METHOD_1 ( TYPE_1 type ) { this . VAR_1 = type ; this . type = type ; },public void METHOD_1 ( TYPE_1 type ) { this . type = type ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",358
"protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_3 . values ) ) ) ; VAR_4 = VAR_2 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( ) ; }","protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_3 . values ) ) ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",359
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = null ; VAR_4 = true ; VAR_5 = true ; VAR_6 = true ; VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = null ; VAR_4 = true ; VAR_5 = true ; VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",360
public java.lang.String METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; for ( java.lang.String x : VAR_1 ) { VAR_2 = ( VAR_2 + x ) + STRING_2 ; } return VAR_2 ; },public java.lang.String METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; for ( java.lang.String x : VAR_1 ) { VAR_2 = ( VAR_2 + STRING_2 ) + x ; } return VAR_2 ; },"['Move VariableRead', 'Move FieldRead']",361
public void METHOD_1 ( java.io.File VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.io.File VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",364
"private void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . delete ( VAR_2 , null , null ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( VAR_1 + STRING_2 ) ) ; VAR_3 = 0 ; }","private void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . delete ( VAR_2 , null , null ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( VAR_1 + STRING_2 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",366
public void METHOD_1 ( ) { if ( ( VAR_1 ) == INT_1 ) { VAR_2 = null ; METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == INT_1 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",367
protected void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = true ; METHOD_2 ( VAR_2 ) ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",368
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",369
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",370
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; },void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },"['Insert Literal', 'Delete Invocation']",372
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",373
"public void METHOD_1 ( ) { try { METHOD_2 ( ) ; if ( VAR_1 ) VAR_1 = false ; } catch ( java.lang.Throwable VAR_2 ) { VAR_3 . error ( STRING_1 , VAR_2 ) ; } }","public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.lang.Throwable VAR_2 ) { VAR_3 . error ( STRING_1 , VAR_2 ) ; } }","['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",374
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",375
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",376
public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = true ; },public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_5 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",377
public boolean METHOD_1 ( java.lang.String VAR_1 ) { query = VAR_1 ; return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",378
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",379
public void update ( ) { VAR_1 = true ; for ( java.util.Iterator < TYPE_1 > i = VAR_2 . iterator ( ) ; i . METHOD_1 ( ) ; ) i . METHOD_2 ( ) . update ( ) ; },public void update ( ) { for ( java.util.Iterator < TYPE_1 > i = VAR_2 . iterator ( ) ; i . METHOD_1 ( ) ; ) i . METHOD_2 ( ) . update ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",380
"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( this , true ) ; this . VAR_2 . METHOD_2 ( VAR_1 ) ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",381
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; c = new TYPE_3 ( VAR_2 ) ; VAR_3 = new TYPE_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; c = new TYPE_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",382
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 = VAR_4 ; VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",384
public void METHOD_1 ( TYPE_1 event ) { synchronized ( this ) { VAR_1 = false ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 event ) { synchronized ( this ) { VAR_1 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",385
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_4 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",386
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; if ( ( this . VAR_3 ) == null ) { this . VAR_3 = this . VAR_1 ; } VAR_4 . METHOD_2 ( this . VAR_1 ) ; },public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",388
"public void METHOD_1 ( java.lang.String title , java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . title = title ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; }","public void METHOD_1 ( java.lang.String title , java.lang.String VAR_1 , TYPE_1 VAR_2 ) { this . title = title ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",391
public java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( path ) == null ) { path = new java.util.ArrayList < > ( ) ; } return path ; },public java.util.List < java.lang.String > METHOD_1 ( ) { return path ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",393
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = true ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",395
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",397
"public java.util.List < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = this . VAR_2 ; this . VAR_3 = this . VAR_4 . METHOD_2 ( ) ; return METHOD_1 ( this . VAR_4 , VAR_1 ) ; }","public java.util.List < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = this . VAR_2 ; return METHOD_1 ( this . VAR_4 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",399
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = INT_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",401
"private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { METHOD_4 ( ) ; VAR_1 = true ; } } , VAR_3 ) ; }","private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { METHOD_4 ( ) ; } } , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",404
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_2 ) ; VAR_3 = true ; METHOD_3 ( true ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_2 ) ; METHOD_3 ( true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",405
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return false ; }","['Update Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",407
"public void METHOD_1 ( ) { if ( file . METHOD_2 ( ) ) VAR_1 = java.util.Arrays.asList ( file ) . iterator ( ) ; else VAR_1 = TYPE_1 . METHOD_3 ( file , null , true ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_3 ( file , null , true ) ; }","['Move Assignment', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",408
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 < > ( ) ; } return VAR_2 . METHOD_2 ( VAR_1 ) ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",409
private void METHOD_1 ( TYPE_1 c ) { TYPE_2 n = new TYPE_2 ( ) ; VAR_1 . type = VAR_2 . type ; VAR_3 = c . METHOD_2 ( ) ; VAR_4 = VAR_5 ; VAR_5 = n ; },private void METHOD_1 ( TYPE_1 c ) { TYPE_2 n = new TYPE_2 ( ) ; VAR_3 = c . METHOD_2 ( ) ; VAR_4 = VAR_5 ; VAR_5 = n ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",410
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 ; if ( ( VAR_5 ) != null ) { METHOD_2 ( VAR_5 ) ; VAR_5 . METHOD_3 ( STRING_1 , VAR_2 ) ; METHOD_4 ( VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { METHOD_2 ( VAR_5 ) ; VAR_5 . METHOD_3 ( STRING_1 , VAR_2 ) ; METHOD_4 ( VAR_5 ) ; }","['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",412
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",413
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; try { VAR_1 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",414
private void init ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_3 = STRING_3 ; VAR_4 = STRING_4 ; VAR_5 = STRING_5 ; VAR_6 = STRING_6 ; VAR_7 = STRING_7 ; VAR_8 = STRING_8 ; VAR_9 = STRING_9 ; },private void init ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_4 = STRING_4 ; VAR_5 = STRING_5 ; VAR_7 = STRING_7 ; VAR_8 = STRING_8 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",417
public void METHOD_1 ( ) { VAR_1 = VAR_2 = VAR_3 . getColor ( status ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 . getColor ( status ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Assignment']",418
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_2 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",419
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; state = VAR_3 ; VAR_4 . METHOD_1 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",420
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = new java.util.ArrayList < > ( ) ; },private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",421
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",422
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) != ( VAR_3 ) ) { this . VAR_2 = VAR_4 ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",423
"protected void METHOD_1 ( ) { VAR_1 = this . VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , this . VAR_6 ) ; addComponent ( VAR_1 ) ; }","protected void METHOD_1 ( ) { addComponent ( this . VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , this . VAR_6 ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",424
private void METHOD_1 ( ) { init ( ) ; METHOD_2 ( true ) ; METHOD_3 ( STRING_1 ) ; VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_4 ( INT_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; },private void METHOD_1 ( ) { init ( ) ; METHOD_2 ( true ) ; METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( INT_1 ) ; VAR_1 . setEnabled ( false ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",425
public TYPE_1 METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; } else VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",426
private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = false ; },private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",427
public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; VAR_1 = true ; VAR_2 = new TYPE_3 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; VAR_2 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",428
public void METHOD_1 ( android.view.View view ) { VAR_1 = 0 ; },public void METHOD_1 ( android.view.View view ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",429
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",430
public final void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( VAR_2 ) ; new TYPE_1 ( this ) . execute ( this ) ; },public final void METHOD_1 ( ) { new TYPE_1 ( this ) . execute ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",432
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",433
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } VAR_2 = INT_1 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",434
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( VAR_2 ) && ( METHOD_2 ( ) . METHOD_3 ( x ( ) , y ( ) , METHOD_4 ( ) ) ) ; METHOD_5 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",435
public void METHOD_1 ( final float VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } },public void METHOD_1 ( final float VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",437
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = TYPE_2 . METHOD_3 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",438
public TYPE_1 METHOD_1 ( ) { VAR_1 = ( VAR_1 ) & ( ~ INT_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = ( VAR_1 ) & ( ~ INT_1 ) ; VAR_2 = 0 ; METHOD_4 ( ) ; return this ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",440
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { super . init ( VAR_1 ) ; VAR_2 = new TYPE_3 ( STRING_1 ) ; VAR_3 = VAR_2 . METHOD_1 ( VAR_4 class ) ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { super . init ( VAR_1 ) ; VAR_3 = new TYPE_3 ( STRING_1 ) . METHOD_1 ( VAR_4 class ) ; },"['Move FieldWrite', 'Insert Invocation', 'Move ConstructorCall', 'Move TypeAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",442
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = null ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",443
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; if ( VAR_2 != null ) { METHOD_2 ( VAR_2 ) ; } this . VAR_3 = VAR_2 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; if ( VAR_2 != null ) { METHOD_2 ( VAR_2 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",444
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( new TYPE_1 ( ) { public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ; } } ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) { public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ; } } ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",445
public void METHOD_1 ( TYPE_1 context ) { super . METHOD_1 ( context ) ; VAR_1 = VAR_2 . getId ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 context ) { super . METHOD_1 ( context ) ; VAR_1 = VAR_2 . getId ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",446
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = TYPE_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_3 = TYPE_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",447
public void METHOD_1 ( int num ) { this . num = num ; this . VAR_1 = false ; },public void METHOD_1 ( int num ) { this . num = num ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",448
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( TYPE_2 : : new ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_3 = VAR_1 . METHOD_3 ( TYPE_2 : : new ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",449
"protected void METHOD_1 ( int VAR_1 , long VAR_2 ) { VAR_3 [ VAR_1 ] = this . METHOD_2 ( VAR_2 ) ; }","protected void METHOD_1 ( int VAR_1 , long VAR_2 ) { VAR_3 [ VAR_1 ] = VAR_2 ; }","['Move VariableRead', 'Delete ThisAccess', 'Delete Invocation']",450
public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; ( VAR_3 ) ++ ; TYPE_2 VAR_4 = this . VAR_5 ; this . VAR_5 = VAR_6 ; VAR_6 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; ( VAR_3 ) ++ ; TYPE_2 VAR_4 = VAR_5 ; VAR_5 = VAR_6 ; VAR_6 = VAR_4 ; },"['Delete ThisAccess', 'Delete ThisAccess']",451
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",453
public void METHOD_1 ( ) { VAR_1 = this ; METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete FieldRead']",454
public boolean METHOD_1 ( ) { if ( VAR_1 ) return VAR_1 ; try { TYPE_1 . METHOD_1 ( STRING_1 ) ; VAR_1 = true ; return VAR_1 ; } catch ( TYPE_2 VAR_2 ) { return false ; } },public boolean METHOD_1 ( ) { if ( VAR_1 ) return VAR_1 ; try { TYPE_1 . METHOD_1 ( STRING_1 ) ; return true ; } catch ( TYPE_2 VAR_2 ) { return false ; } },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",455
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( true ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",456
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( method ) != 1 ) { method = 1 ; } else { method = 0 ; } VAR_2 . METHOD_2 ( false ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { method = 1 ; VAR_2 . METHOD_2 ( false ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",457
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",458
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object arg ) { VAR_2 = VAR_1 . METHOD_2 ( ) . getName ( ) . toString ( ) ; super . METHOD_1 ( VAR_1 , arg ) ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object arg ) { super . METHOD_1 ( VAR_1 , arg ) ; VAR_3 = true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",459
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 class ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",461
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_1 ( VAR_2 , STRING_2 ) ; }","public void METHOD_1 ( ) { VAR_3 = TYPE_1 . METHOD_1 ( VAR_2 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",462
"public void METHOD_1 ( final TYPE_1 response , final TYPE_2 info ) { VAR_1 = null ; METHOD_2 ( ) ; }","public void METHOD_1 ( final TYPE_1 response , final TYPE_2 info ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",463
"public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = false ; METHOD_2 ( VAR_2 , true ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 item ) { METHOD_2 ( VAR_2 , true ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",464
public void METHOD_1 ( long VAR_1 ) { VAR_2 = true ; VAR_3 . setText ( java.lang.String . METHOD_2 ( ( VAR_1 / INT_1 ) ) ) ; },public void METHOD_1 ( long VAR_1 ) { VAR_3 . setText ( java.lang.String . METHOD_2 ( ( VAR_1 / INT_1 ) ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",465
public void start ( ) { assert ( state ) == ( VAR_1 ) ; state = VAR_2 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = null ; METHOD_1 ( VAR_9 ) ; },public void start ( ) { assert ( state ) == ( VAR_1 ) ; state = VAR_2 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_8 = null ; METHOD_1 ( VAR_9 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",466
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_4 = new java.io.File ( VAR_2 ) . length ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",467
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",468
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . get ( position ) . METHOD_2 ( ) ; METHOD_3 ( position ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( position ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",469
public void METHOD_1 ( double VAR_1 ) { if ( ( java.lang.Double . METHOD_2 ( VAR_1 ) ) || ( java.lang.Double . METHOD_3 ( VAR_1 ) ) ) { this . VAR_1 = 0 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",470
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",471
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 event = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , item , VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( event ) ; VAR_2 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 event = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , item , VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( event ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",472
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",475
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; VAR_6 = VAR_7 ; VAR_7 = new TYPE_1 ( ) ; VAR_8 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; VAR_7 = new TYPE_1 ( ) ; VAR_8 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",476
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",477
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 . setText ( java.lang.Integer.toString ( VAR_6 ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",478
"public TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } return this ; }","public TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 ; } return this ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",479
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_4 . setText ( VAR_5 . title ) ; },public void METHOD_1 ( int VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",480
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",481
protected void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; try { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; error = false ; } catch ( TYPE_1 VAR_2 ) { error = true ; } },protected void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; try { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } catch ( TYPE_1 VAR_2 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",482
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( 1 ) ) ; METHOD_4 ( INT_1 , view ) ; VAR_3 = true ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( 1 ) ) ; METHOD_4 ( INT_1 , view ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",483
private void init ( ) { METHOD_1 ( this ) ; METHOD_2 ( this ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = 0 ; },private void init ( ) { METHOD_1 ( this ) ; METHOD_2 ( this ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",484
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( startTime ) . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( startTime ) ; } return VAR_1 ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",485
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = null ; VAR_5 = null ; return null ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 ) { return null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",487
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . init ( this ) ; VAR_1 = METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . init ( this ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",488
public void METHOD_1 ( ) { try { VAR_1 . list = new TYPE_1 ( ) ; VAR_1 . main = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . main = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",489
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( TYPE_1 ) != null ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",490
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",491
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; context = new TYPE_3 ( STRING_1 ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) , context ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { context = new TYPE_3 ( STRING_1 ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) , context ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",493
public void METHOD_1 ( ) { counter = 0 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",495
public void METHOD_1 ( ) { this . state = VAR_1 ; this . VAR_2 = null ; this . VAR_3 = new java.util.Date ( ) ; this . VAR_4 = java.lang.Long . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { this . state = VAR_1 ; this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",497
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return this ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",498
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . update = true ; return STRING_1 ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; return STRING_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",499
"public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { if ( ( VAR_3 ) == false ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; this . VAR_2 = VAR_2 ; METHOD_3 ( VAR_1 , VAR_4 ) ; VAR_3 = true ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { if ( ( VAR_3 ) == false ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_4 ) ; VAR_3 = true ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",500
"public void METHOD_1 ( java.lang.String string ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( string , VAR_2 ) ) ; }","public void METHOD_1 ( java.lang.String string ) { VAR_1 = TYPE_1 . METHOD_3 ( string , VAR_2 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",503
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_2 . isEmpty ( ) ) ) this . VAR_1 = TYPE_2 . METHOD_2 ( ) ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",504
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_4 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Move Literal', 'Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",505
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_2 = new TYPE_2 ( METHOD_2 ( ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",506
public void METHOD_1 ( TYPE_1 state ) { this . state = state ; },public void METHOD_1 ( TYPE_1 state ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",507
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",508
"public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; end ( event . METHOD_3 ( ) , event . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 event ) { end ( event . METHOD_3 ( ) , event . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",509
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",510
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",511
"public void init ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_3 = new TYPE_3 ( STRING_2 , INT_1 ) ; java.lang.System.out.println ( STRING_3 ) ; VAR_4 = true ; }",public void init ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_3 ) ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",513
"void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 ; VAR_4 = new double [ ( VAR_5 ) + 1 ] ; VAR_4 = TYPE_2 . METHOD_2 ( VAR_6 , 0 , VAR_7 . length ) ; }","void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_4 = new double [ ( VAR_5 ) + 1 ] ; VAR_4 = TYPE_2 . METHOD_2 ( VAR_6 , 0 , VAR_7 . length ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",516
"public void METHOD_1 ( java.lang.Object item , int position ) { METHOD_1 ( item , VAR_1 , position ) ; }","public void METHOD_1 ( java.lang.Object item , int position ) { this . position = position ; METHOD_1 ( item , VAR_1 , position ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",517
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; if ( VAR_1 ) { VAR_2 = true ; } VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = false ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",518
public void METHOD_1 ( ) { if ( ( ( this . VAR_1 ) != null ) && ( this . VAR_1 . METHOD_2 ( ) ) ) { this . VAR_1 . METHOD_3 ( ) ; } this . VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( ( this . VAR_1 ) != null ) && ( this . VAR_1 . METHOD_2 ( ) ) ) { this . VAR_1 . METHOD_3 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",519
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( new TYPE_2 ( this , VAR_1 ) ) ; }",public void METHOD_1 ( ) { METHOD_2 ( new TYPE_2 ( this ) ) ; },"['Update ConstructorCall', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead']",520
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = CHAR_1 ; VAR_3 . setText ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; return ; },public void METHOD_1 ( android.view.View VAR_1 ) { return ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",521
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { super . METHOD_1 ( context ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; this . VAR_3 = new TYPE_3 ( ) ; },public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { super . METHOD_1 ( context ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",523
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_3 ; VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_5 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",524
public void METHOD_1 ( final java.lang.Void result ) { if ( VAR_1 ) { VAR_1 = false ; } },public void METHOD_1 ( final java.lang.Void result ) { },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",527
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",528
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",529
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",530
public java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },public java.util.List < java.lang.String > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",531
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true , true ) ; VAR_2 = true ; VAR_3 = false ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true , true ) ; VAR_2 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",533
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 = true ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",535
"public void execute ( TYPE_1 VAR_1 , java.lang.Object arg , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { VAR_3 = VAR_1 . METHOD_1 ( ) . getName ( ) . toString ( ) ; this . METHOD_2 ( VAR_1 , arg ) ; }","public void execute ( TYPE_1 VAR_1 , java.lang.Object arg , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { this . METHOD_2 ( VAR_1 , arg ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",536
protected void add ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_4 = VAR_2 ; } },protected void add ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } },"['Move VariableRead', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",537
public void METHOD_1 ( ) { VAR_1 = 0 ; try { METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_1 = 0 ; VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",538
public void METHOD_1 ( java.util.Set < java.lang.Integer > VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ( this . VAR_1 ) != null ) && ( this . VAR_2 . isEmpty ( ) ) ) this . VAR_1 = null ; },public void METHOD_1 ( java.util.Set < java.lang.Integer > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",539
public TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; if ( ( VAR_1 ) != null ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_2 = VAR_3 ; } VAR_1 = VAR_4 ; } return node ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; if ( ( VAR_1 ) != null ) VAR_1 = VAR_4 ; return node ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",540
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } VAR_2 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",542
"public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_2 = new TYPE_4 ( VAR_1 ) ; TYPE_5 VAR_3 = TYPE_5 . METHOD_2 ( VAR_4 ) ; this . VAR_5 = VAR_3 . METHOD_3 ( VAR_2 ) ; return VAR_5 ; }","public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_2 = new TYPE_4 ( VAR_1 ) ; TYPE_5 VAR_3 = TYPE_5 . METHOD_2 ( VAR_4 ) ; return VAR_3 . METHOD_3 ( VAR_2 ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",544
"protected void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( this ) ; } METHOD_1 ( new TYPE_2 ( VAR_1 ) , new TYPE_3 ( VAR_1 ) ) ; }","protected void METHOD_1 ( ) { METHOD_1 ( new TYPE_2 ( VAR_1 ) , new TYPE_3 ( VAR_1 ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",545
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_6 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",547
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; TYPE_2 . METHOD_3 ( this ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess']",548
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_2 . isEmpty ( ) ) ) this . VAR_1 = STRING_1 ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",549
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",550
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) ; },"['Move FieldWrite', 'Update Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",555
protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_3 ) ; VAR_1 = false ; } VAR_4 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",556
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; VAR_3 = VAR_4 . getBoolean ( STRING_1 , VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",557
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( VAR_2 ) ) { this . VAR_1 = VAR_2 ; } else if ( VAR_1 < INT_1 ) { this . VAR_1 = INT_1 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",558
public void METHOD_1 ( ) { count = 1 ; VAR_1 . METHOD_2 ( ) ; new TYPE_1 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; new TYPE_1 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",559
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",560
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",561
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ! ( VAR_4 . equals ( VAR_1 ) ) ) { METHOD_3 ( ) ; VAR_5 = VAR_1 ; VAR_6 = true ; } },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ! ( VAR_4 . equals ( VAR_1 ) ) ) { METHOD_3 ( ) ; VAR_5 = VAR_1 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",562
"void update ( ) { VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; }",void update ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",563
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; return ; } VAR_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_4 ) ) { VAR_5 . METHOD_3 ( ) ; } else { VAR_4 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; return ; } VAR_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_4 ) ) { VAR_5 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",565
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; VAR_3 = TYPE_1 . METHOD_3 ( this , VAR_4 ) ; VAR_5 = true ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",567
public void METHOD_1 ( ) { VAR_1 = null ; value = null ; VAR_2 = null ; VAR_3 = null ; },public void METHOD_1 ( ) { value = null ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",568
"public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( STRING_1 , STRING_1 , null ) ; this . VAR_2 = true ; }",public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = true ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",569
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",570
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 ) ; VAR_4 = false ; VAR_5 = 0 ; METHOD_3 ( ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; VAR_4 = false ; METHOD_3 ( ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",571
"public void METHOD_1 ( double VAR_1 ) { this . METHOD_2 ( 1 , VAR_1 ) ; }",public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete Literal', 'Delete Invocation']",572
public void METHOD_1 ( final TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 = true ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ) ; VAR_2 = false ; VAR_1 = null ; },public void METHOD_1 ( final TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",573
public static void METHOD_1 ( ) { for ( java.lang.String c : VAR_1 ) c = STRING_1 ; VAR_2 = new int [ INT_1 ] ; VAR_3 . msg = new TYPE_1 [ INT_2 ] ; VAR_3 . i = 0 ; },public static void METHOD_1 ( ) { for ( java.lang.String c : VAR_1 ) c = STRING_1 ; VAR_2 = new int [ INT_1 ] ; VAR_3 . msg = new TYPE_1 [ INT_2 ] ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",574
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 ; VAR_2 = new TYPE_1 ( METHOD_2 ( ) ) ; java.util.HashMap < java.lang.String , java.lang.String > VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = 1 ; new TYPE_2 ( ) . execute ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 ; VAR_2 = new TYPE_1 ( METHOD_2 ( ) ) ; java.util.HashMap < java.lang.String , java.lang.String > VAR_3 = VAR_2 . METHOD_3 ( ) ; new TYPE_2 ( ) . execute ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",575
"public void METHOD_1 ( final TYPE_1 VAR_1 , final int id ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; METHOD_3 ( ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final int id ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",578
public static void METHOD_1 ( TYPE_1 context ) { VAR_1 = TYPE_2 . METHOD_2 ( context ) ; },public static void METHOD_1 ( TYPE_1 context ) { VAR_1 = new TYPE_2 ( context ) ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",579
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; } VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = false ; METHOD_3 ( false , null ) ; }","public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; } VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; METHOD_3 ( false , null ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",580
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 1 ; java.util.ArrayList < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( STRING_1 , 0 ) ; METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( STRING_1 , 0 ) ; METHOD_3 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",581
protected void delete ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_4 = VAR_2 ; } },protected void delete ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } },"['Move VariableRead', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",585
"public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 , new TYPE_2 ( ) ) ; VAR_5 = false ; }","public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 , new TYPE_2 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",586
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",589
public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_1 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; VAR_5 = VAR_1 . METHOD_4 ( ) ; },public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_1 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_5 = VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",590
"public void METHOD_1 ( ) { new java.lang.Thread ( VAR_1 ) . start ( ) ; VAR_2 = new TYPE_1 ( this , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_2 ( ) ; }",public void METHOD_1 ( ) { new java.lang.Thread ( VAR_1 ) . start ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",591
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; ( VAR_2 ) ++ ; METHOD_2 ( true ) ; METHOD_3 ( true ) ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; ( VAR_2 ) ++ ; METHOD_2 ( true ) ; METHOD_3 ( true ) ; VAR_3 = false ; VAR_4 = false ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",592
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; switch ( VAR_3 ) { case VAR_4 : this . parameters = METHOD_2 ( ) ; break ; case VAR_5 : this . parameters = METHOD_3 ( ) ; break ; } },public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; switch ( VAR_3 ) { case VAR_4 : METHOD_2 ( ) ; break ; case VAR_5 : METHOD_3 ( ) ; break ; } this . parameters = METHOD_2 ( ) ; },"['Move Assignment', 'Insert Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",593
"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = false ; return ( ( VAR_5 ) != null ) && ( VAR_5 . METHOD_1 ( this , VAR_2 , VAR_3 ) ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { return ( ( VAR_5 ) != null ) && ( VAR_5 . METHOD_1 ( this , VAR_2 , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",594
"public boolean METHOD_1 ( android.view.View view , TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = METHOD_2 ( ) . METHOD_3 ( ) ; VAR_4 . replace ( VAR_5 , new TYPE_2 ( ) ) ; VAR_4 . commit ( ) ; return false ; }","public boolean METHOD_1 ( android.view.View view , TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_4 . add ( VAR_5 , new TYPE_2 ( ) ) ; VAR_4 . commit ( ) ; return false ; }","['Update Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",595
TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = this . VAR_1 = VAR_1 ; return this ; },TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",596
private void METHOD_1 ( ) { if ( VAR_1 . get ( ) . METHOD_2 ( ) ) { VAR_2 = true ; VAR_3 = true ; METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; } },private void METHOD_1 ( ) { if ( VAR_1 . get ( ) . METHOD_2 ( ) ) { VAR_2 = true ; METHOD_3 ( null ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",597
public void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = null ; this . VAR_1 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; this . VAR_5 = VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; this . VAR_5 = VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",599
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_2 . size ( ) ) == 0 ) ) { return ; } VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_2 . size ( ) ) == 0 ) ) { return ; } VAR_3 = VAR_1 ; METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",600
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( 1 , INT_1 , INT_2 , INT_3 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",601
public TYPE_1 build ( ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_3 . METHOD_2 ( ) ; } return new TYPE_1 ( this ) ; },public TYPE_1 build ( ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; return new TYPE_1 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",602
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_1 , this ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_1 , this ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",603
public void METHOD_1 ( ) { METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; sum = 0 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",604
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( 0 ) ; },private void METHOD_1 ( ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",606
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( ) . METHOD_3 ( false ) ; VAR_2 = new TYPE_1 ( METHOD_2 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( ) . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",607
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",608
"public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = new TYPE_1 ( name , VAR_1 , VAR_2 ) ; VAR_4 = true ; }","public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = new TYPE_1 ( name , VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",609
public void METHOD_1 ( java.lang.String filename ) { this . filename = filename ; data . METHOD_1 ( filename ) ; },public void METHOD_1 ( java.lang.String filename ) { data . METHOD_1 ( filename ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",610
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { if ( ( VAR_3 ) == null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } } METHOD_4 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",611
public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; VAR_4 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",612
public TYPE_1 METHOD_1 ( int value ) { this . VAR_1 = value ; if ( value < 0 ) { this . VAR_2 = - 1 ; } else { this . VAR_2 = 1 ; } return this ; },public TYPE_1 METHOD_1 ( int value ) { this . VAR_1 = value ; if ( value < 0 ) { this . VAR_2 = - 1 ; } return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",614
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 . getData ( STRING_1 ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",615
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 ; VAR_2 = METHOD_2 ( ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { VAR_2 = METHOD_2 ( ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",616
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_2 ( ) . contains ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",617
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_4 = true ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { java.lang.System.out.println ( STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",618
public void METHOD_1 ( TYPE_1 view ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( false ) ; VAR_2 . setText ( ( ( VAR_2 . getText ( ) ) + STRING_1 ) ) ; VAR_3 = false ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 view ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( false ) ; VAR_2 . setText ( ( ( VAR_2 . getText ( ) ) + STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",619
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_2 . METHOD_3 ( ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",620
public java.lang.String METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { return STRING_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",621
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",622
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , false ) ; VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , false ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",624
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( this ) ) . build ( ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",626
public void METHOD_1 ( ) { VAR_1 = 0 ; if ( ( VAR_2 ) == 0 ) { VAR_3 = VAR_4 . get ( 0 ) ; } else { VAR_3 = VAR_2 ; } VAR_5 = VAR_6 . get ( 0 ) ; VAR_7 = true ; },public void METHOD_1 ( ) { VAR_1 = 0 ; if ( ( VAR_2 ) == 0 ) { VAR_3 = VAR_4 . get ( 0 ) ; } else { VAR_3 = VAR_2 ; } VAR_5 = VAR_6 . get ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",627
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = INT_1 ; this . VAR_4 = INT_2 ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = INT_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",628
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = new TYPE_1 ( VAR_1 , height , VAR_3 ) ; VAR_4 = null ; update ( ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = new TYPE_1 ( VAR_1 , height , VAR_3 ) ; update ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",629
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",631
"public void METHOD_1 ( long VAR_1 ) { if ( ( params ) == null ) { params = new TYPE_1 ( ) ; } params . METHOD_2 ( VAR_2 , ( ( int ) ( VAR_1 ) ) ) ; }","public void METHOD_1 ( long VAR_1 ) { params . METHOD_2 ( VAR_2 , ( ( int ) ( VAR_1 ) ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",632
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },public static void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",633
private java.lang.String METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 = 0 ; VAR_5 . METHOD_3 ( 0 ) ; VAR_6 = STRING_1 ; return METHOD_4 ( ) ; },private java.lang.String METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; return METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",634
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; errors = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_3 ; errors = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",635
private boolean METHOD_1 ( ) { token = TYPE_1 . METHOD_2 ( VAR_1 ) ; boolean VAR_2 = ( token ) != null ; VAR_3 . METHOD_3 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; return VAR_2 ; },private boolean METHOD_1 ( ) { boolean VAR_2 = ( TYPE_1 . METHOD_2 ( VAR_1 ) ) != null ; VAR_3 . METHOD_3 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; return VAR_2 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",636
public int METHOD_1 ( ) { VAR_1 = true ; return ( ( int ) ( ( ( java.lang.Math.random ( ) ) * INT_1 ) + 1 ) ) ; },public int METHOD_1 ( ) { return ( ( int ) ( ( ( java.lang.Math.random ( ) ) * INT_1 ) + 1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",637
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == true ) { this . VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( 0 ) ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( 0 ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",642
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( new java.io.File ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",644
public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) VAR_2 = false ; ( VAR_1 ) ++ ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",645
public TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( java.util.Arrays.asList ( VAR_1 ) ) ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",646
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 = true ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",647
public static void METHOD_1 ( int VAR_1 ) { VAR_2 = ( VAR_2 ) + VAR_1 ; TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = ( VAR_3 ) + VAR_1 ; },public static void METHOD_1 ( int VAR_1 ) { VAR_2 = ( VAR_2 ) + VAR_1 ; TYPE_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",648
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new TYPE_1 ( ) ; this . status = true ; } this . VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new TYPE_1 ( ) ; } this . VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",649
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",650
public static void METHOD_1 ( ) { for ( TYPE_1 n : VAR_1 . nodes ) { VAR_2 = false ; VAR_3 = null ; VAR_4 = 0 ; } },public static void METHOD_1 ( ) { for ( TYPE_1 n : VAR_1 . nodes ) { VAR_2 = false ; VAR_3 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",651
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",653
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { VAR_4 = VAR_5 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; return VAR_6 . METHOD_4 ( VAR_4 . METHOD_1 ( VAR_2 ) , VAR_3 , METHOD_5 ( ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_3 ( VAR_1 ) ; return VAR_6 . METHOD_4 ( VAR_4 . METHOD_1 ( VAR_2 ) , VAR_3 , METHOD_5 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",654
"public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_2 , ( url + STRING_1 ) ) ; if ( VAR_3 ) VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_2 , ( url + STRING_1 ) ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",657
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = false ; VAR_5 = VAR_6 = VAR_7 = VAR_8 = null ; VAR_9 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = false ; VAR_5 = VAR_6 = VAR_8 = null ; VAR_9 = null ; super . METHOD_1 ( ) ; },"['Move Assignment', 'Move FieldWrite', 'Move FieldWrite', 'Delete FieldWrite', 'Delete Assignment']",658
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 ) { if ( VAR_2 == ( this ) ) { VAR_4 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 ) { if ( VAR_2 == ( this ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",659
public void METHOD_1 ( float VAR_1 ) { this . VAR_2 . METHOD_2 ( ) . y = VAR_1 ; this . title . METHOD_2 ( ) . y = VAR_1 ; METHOD_3 ( ) ; },public void METHOD_1 ( float VAR_1 ) { this . title . METHOD_2 ( ) . y = VAR_1 ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",661
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 = true ; return writer ; },public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return writer ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",662
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",664
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",665
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 . open ( ) ; VAR_5 = this ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 . open ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",666
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = new TYPE_2 ( ) ; if ( VAR_2 ) { VAR_4 . execute ( VAR_5 . METHOD_2 ( ) ) ; } else { VAR_4 . execute ( VAR_5 . METHOD_3 ( ) ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_5 . METHOD_2 ( ) ; } else { VAR_5 . METHOD_3 ( ) ; } }","['Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",667
public void METHOD_1 ( boolean b ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( b ) ; } else { VAR_2 = b ; } },public void METHOD_1 ( boolean b ) { VAR_1 . METHOD_2 ( b ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",668
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",669
public void METHOD_1 ( float f ) { this . VAR_1 += f ; if ( ( this . VAR_1 ) > INT_1 ) this . VAR_1 = INT_1 ; },public void METHOD_1 ( float f ) { this . VAR_1 += f ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",670
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = getActivity ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; getActivity ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",672
"public void METHOD_1 ( java.lang.String label ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = label ; VAR_2 = true ; VAR_3 = false ; }",public void METHOD_1 ( java.lang.String label ) { VAR_1 = label ; VAR_2 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",673
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Thread VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Thread VAR_2 ) { VAR_3 = VAR_2 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",677
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 = VAR_2 ; TYPE_2 . METHOD_2 ( ( STRING_1 + ( VAR_3 ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",679
public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ( ) - > VAR_2 = true ) ; METHOD_4 ( ) ; } METHOD_5 ( ) ; },public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { if ( VAR_2 ) { VAR_2 = false ; METHOD_4 ( ) ; } METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",682
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 = METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",683
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 ) ; VAR_4 = getIntent ( ) . METHOD_3 ( STRING_2 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",684
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , FLOAT_1 ) ; TYPE_1 . METHOD_3 ( VAR_1 , 0.0F ) ; TYPE_1 . METHOD_4 ( VAR_2 , FLOAT_2 ) ; VAR_3 = false ; METHOD_5 ( ) ; }",public void METHOD_1 ( ) { METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",685
public TYPE_1 METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = true ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",686
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = METHOD_4 ( ) ; VAR_4 = new TYPE_1 ( tmp . METHOD_5 ( ) ) ; },public void METHOD_1 ( ) { VAR_4 = new TYPE_1 ( tmp . METHOD_5 ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",688
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",689
protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 = false ; },protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",690
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = this ; VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",691
public void METHOD_1 ( TYPE_1 c ) { VAR_1 . METHOD_2 ( c . METHOD_3 ( ) ) ; VAR_2 = c . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 c ) { VAR_1 . METHOD_2 ( c . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",692
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . execute ( ) ; VAR_3 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . execute ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",693
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",694
"public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; VAR_2 . METHOD_2 ( STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 ) ; VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; VAR_2 . METHOD_2 ( STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",695
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . getId ( ) ) == ( VAR_3 ) ) { VAR_4 . METHOD_2 ( ) ; VAR_5 = true ; } },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",696
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_2 = false ; },public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",697
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = this . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",699
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; startTime = METHOD_3 ( ) ; counter = 1 ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; startTime = METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",700
protected static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; VAR_7 = null ; VAR_8 = null ; VAR_9 = null ; },protected static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; VAR_8 = null ; VAR_9 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",701
void METHOD_1 ( ) { METHOD_2 ( 0 ) ; this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = new TYPE_1 < TYPE_2 > ( ) ; },void METHOD_1 ( ) { METHOD_2 ( 0 ) ; this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; },"['Insert Literal', 'Delete ConstructorCall']",702
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 = VAR_1 ; VAR_2 . METHOD_3 ( VAR_4 , VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_1 ) ; return true ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",704
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",705
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = - 1 ; this . VAR_3 = true ; VAR_4 . METHOD_2 ( ) ; if ( ( VAR_5 ) != null ) VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = - 1 ; if ( ( VAR_5 ) != null ) VAR_5 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",707
public void METHOD_1 ( java.lang.String name ) { this . name = name ; this . VAR_1 = true ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",709
public java.lang.String execute ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; filename = VAR_3 . METHOD_1 ( ) ; return STRING_2 ; },public java.lang.String execute ( ) { return STRING_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",711
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( STRING_1 , this . VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",715
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 ) ; VAR_4 = METHOD_2 ( ) . getInt ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",719
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 , this ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_3 , this ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",720
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",721
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",722
"private void METHOD_1 ( ) { add ( ( VAR_1 = new TYPE_1 ( null , null ) ) , VAR_2 ) ; }","private void METHOD_1 ( ) { add ( new TYPE_1 ( null , null ) , VAR_2 ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",723
public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",724
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( false ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",725
public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { VAR_2 = VAR_3 ; VAR_3 = INT_1 ; if ( ( ( VAR_4 ) - ( VAR_5 ) ) > VAR_1 ) { VAR_4 = ( VAR_4 ) - ( VAR_5 ) ; } },public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { VAR_3 = INT_1 ; if ( ( ( VAR_4 ) - ( VAR_5 ) ) > VAR_1 ) { VAR_4 = ( VAR_4 ) - ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",726
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",727
private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = VAR_1 ; if ( null != ( VAR_5 ) ) { VAR_5 . METHOD_2 ( VAR_1 ) ; } },private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = null ; VAR_4 = VAR_1 ; if ( null != ( VAR_5 ) ) { VAR_5 . METHOD_2 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",729
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",730
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",731
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 . put ( VAR_3 , false ) ; VAR_2 . put ( VAR_4 , true ) ; VAR_5 = new TYPE_1 ( VAR_1 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",732
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . add ( STRING_1 ) ; VAR_3 . add ( STRING_2 ) ; VAR_4 = STRING_2 ; return ; },protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . add ( STRING_1 ) ; VAR_3 . add ( STRING_2 ) ; return ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",733
"private int METHOD_1 ( ) throws java.io.IOException { super . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; return super . METHOD_3 ( buf , 0 , VAR_3 ) ; }","private int METHOD_1 ( ) throws java.io.IOException { super . METHOD_2 ( this . VAR_1 ) ; this . VAR_2 = false ; return super . METHOD_3 ( this . buf , 0 , this . VAR_3 ) ; }","['Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert FieldRead', 'Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess']",734
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { VAR_4 . i ( STRING_1 , STRING_2 ) ; VAR_5 = ""true"" ; VAR_6 = STRING_3 ; VAR_7 = STRING_3 ; METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { VAR_4 . i ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",736
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( ( VAR_2 ) == null ) { VAR_1 = this . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_2 = VAR_1 ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( ( VAR_2 ) == null ) { VAR_1 = this . METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",737
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",738
public void METHOD_1 ( java.lang.String message ) { VAR_1 = VAR_2 ; this . message = message ; url = TYPE_1 . METHOD_2 ( message ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String message ) { VAR_1 = VAR_2 ; this . message = message ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",739
protected void METHOD_1 ( ) { VAR_1 = 0 ; value = 0 ; VAR_2 = false ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",740
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",742
"public TYPE_1 METHOD_1 ( ) { VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; return METHOD_4 ( VAR_3 . METHOD_5 ( METHOD_6 ( VAR_4 class ) , VAR_1 , TYPE_3 . METHOD_7 ( ) , VAR_2 ) ) ; }","public TYPE_1 METHOD_1 ( ) { VAR_1 = METHOD_2 ( STRING_1 ) ; return METHOD_4 ( VAR_3 . METHOD_5 ( METHOD_6 ( VAR_4 class ) , VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess']",743
"private void METHOD_1 ( int handle , java.lang.String VAR_1 , boolean VAR_2 ) { assert 0 < handle ; VAR_3 = handle ; if ( VAR_2 ) VAR_4 = VAR_5 . METHOD_2 ( VAR_6 , handle , VAR_7 , this ) ; }","private void METHOD_1 ( int handle , java.lang.String VAR_1 , boolean VAR_2 ) { assert 0 < handle ; VAR_3 = handle ; if ( VAR_2 ) VAR_5 . METHOD_2 ( VAR_6 , handle , VAR_7 , this ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",744
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 start , TYPE_1 end ) { VAR_3 = VAR_4 ; this . VAR_2 = VAR_2 ; this . VAR_5 = start ; this . VAR_6 = end ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 start , TYPE_1 end ) { VAR_3 = VAR_4 ; this . VAR_2 = VAR_2 ; this . VAR_5 = start ; this . VAR_6 = end ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",745
"public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_1 ( name , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; METHOD_2 ( ) ; name = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; return STRING_2 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_1 ( name , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; METHOD_2 ( ) ; return STRING_2 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",747
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; } METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; } METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",748
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; VAR_3 = TYPE_3 . METHOD_2 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",749
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; android.view.View view = METHOD_2 ( ) . METHOD_3 ( VAR_2 , null ) ; VAR_1 . METHOD_4 ( view ) ; VAR_3 . show ( ) ; VAR_4 = null ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; android.view.View view = METHOD_2 ( ) . METHOD_3 ( VAR_2 , null ) ; VAR_1 . METHOD_4 ( view ) ; VAR_3 . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",750
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = VAR_3 ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",752
public void METHOD_1 ( final int VAR_1 ) { VAR_2 = VAR_1 ; this . VAR_3 = VAR_1 ; },public void METHOD_1 ( final int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",754
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = INT_2 ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",756
public void METHOD_1 ( ) { VAR_1 = null ; url = null ; type = null ; VAR_2 = null ; VAR_3 = null ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = null ; url = null ; type = null ; VAR_2 = null ; VAR_4 = null ; VAR_3 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",757
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_6 = 0 ; VAR_7 = STRING_1 ; VAR_8 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_6 = 0 ; VAR_7 = STRING_1 ; VAR_8 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",758
final void METHOD_1 ( ) { this . VAR_1 = false ; },final void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",759
"void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; }","void METHOD_1 ( ) { VAR_2 . METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",760
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; METHOD_3 ( ) ; VAR_2 = false ; VAR_3 . METHOD_4 ( ) . remove ( VAR_4 ) . commit ( ) ; VAR_5 . METHOD_5 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; METHOD_3 ( ) ; VAR_5 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",761
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , error . METHOD_3 ( ) ) ; this . VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , error . METHOD_3 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",763
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == 0 ) { VAR_3 . METHOD_2 ( true ) ; VAR_2 = 1 ; } else { VAR_3 . METHOD_2 ( false ) ; VAR_2 = 0 ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",764
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( TYPE_2 . METHOD_3 ( VAR_1 ) , this ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( TYPE_2 . METHOD_3 ( VAR_1 ) , this ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",766
public void METHOD_1 ( int position ) { VAR_1 = position ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( VAR_5 [ position ] ) ; },public void METHOD_1 ( int position ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( VAR_5 [ position ] ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",767
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",769
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_4 ( VAR_2 , STRING_2 ) ; TYPE_1 . METHOD_1 ( VAR_2 , STRING_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_2 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",770
private void METHOD_1 ( ) { position = new TYPE_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; },private void METHOD_1 ( ) { position = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",771
public void METHOD_1 ( ) { VAR_1 = ( VAR_2 . length ) + 1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } VAR_3 = null ; },public void METHOD_1 ( ) { VAR_1 = ( VAR_2 . length ) + 1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",773
"public void METHOD_1 ( TYPE_1 x , TYPE_2 t ) throws TYPE_2 { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_1 . i ( STRING_3 , STRING_2 ) ; VAR_2 = true ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 x , TYPE_2 t ) throws TYPE_2 { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_1 . i ( STRING_3 , STRING_2 ) ; VAR_2 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",774
public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . set ( VAR_1 ) ; VAR_4 . set ( VAR_1 ) ; },public void METHOD_1 ( double VAR_1 ) { VAR_3 . set ( VAR_1 ) ; VAR_4 . set ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",775
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",776
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . method = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",777
"protected TYPE_1 < java.lang.String , TYPE_2 > METHOD_1 ( ) { VAR_1 = new TYPE_3 ( ) ; return VAR_1 ; }","protected TYPE_1 < java.lang.String , TYPE_2 > METHOD_1 ( ) { return new TYPE_3 ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",778
void METHOD_1 ( ) { VAR_1 = null ; TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",779
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = true ; VAR_4 = false ; } METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = true ; } METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",780
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , this ) ; VAR_1 . METHOD_3 ( true ) ; VAR_2 . start ( ) ; VAR_3 += ( TYPE_2 . METHOD_4 ( ) ) - ( VAR_4 ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( true ) ; VAR_2 . start ( ) ; VAR_3 += ( TYPE_2 . METHOD_4 ( ) ) - ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",781
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; state = VAR_1 . METHOD_4 ( ) ; VAR_4 = false ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; state = VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",782
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",783
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = this ; this . VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = this ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",785
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_4 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",787
public void update ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_4 = VAR_2 . get ( VAR_5 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; },public void update ( ) { VAR_1 . METHOD_1 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",788
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . info ( STRING_1 ) ; VAR_1 = new TYPE_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . info ( STRING_1 ) ; VAR_1 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",790
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 = false ; VAR_3 = false ; TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",792
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new TYPE_2 ( this , this . VAR_1 . METHOD_2 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",793
"public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; } else { VAR_3 = true ; VAR_4 . execute ( new TYPE_2 ( ) ) ; } }","public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; } else { VAR_4 . execute ( new TYPE_2 ( ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",794
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 = null ; METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( ) ; VAR_3 = null ; } },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 = null ; METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",795
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getColor ( context , VAR_3 ) ) ; VAR_4 += 1 ; VAR_5 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_5 = false ; VAR_1 . METHOD_2 ( VAR_2 . getColor ( context , VAR_3 ) ) ; VAR_4 += 1 ; VAR_5 = true ; METHOD_3 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",796
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = position ; VAR_3 . METHOD_2 ( position ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_3 . METHOD_2 ( position ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",797
void METHOD_1 ( java.lang.String path ) { if ( new java.io.File ( path ) . METHOD_2 ( ) ) { VAR_1 . add ( path ) ; VAR_2 = 0 ; } },void METHOD_1 ( java.lang.String path ) { if ( new java.io.File ( path ) . METHOD_2 ( ) ) { VAR_1 . add ( path ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",799
public void METHOD_1 ( TYPE_1 node ) { if ( node != null ) { VAR_1 . add ( node ) ; if ( ( start ) == null ) start = node ; } },public void METHOD_1 ( TYPE_1 node ) { if ( node != null ) VAR_1 . add ( node ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",800
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = STRING_1 ; this . VAR_3 = true ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = STRING_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",801
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_1 ; VAR_3 = null ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",802
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_2 ( 0 , 0 ) ; }","public void METHOD_1 ( ) { VAR_3 = new TYPE_2 ( 0 , 0 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",803
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ( ( VAR_2 ) + ( VAR_3 ) ) ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ( ( VAR_2 ) + ( VAR_3 ) ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",805
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = getIntent ( ) . METHOD_2 ( getString ( VAR_3 ) ) ; VAR_4 = ( VAR_1 == null ) ? new java.util.ArrayList < java.lang.String > ( INT_1 ) : VAR_1 . METHOD_3 ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { getIntent ( ) . METHOD_2 ( getString ( VAR_3 ) ) ; VAR_4 = ( VAR_1 == null ) ? new java.util.ArrayList < java.lang.String > ( INT_1 ) : VAR_1 . METHOD_3 ( STRING_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",806
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",807
"public void METHOD_1 ( int position , TYPE_1 VAR_1 ) { VAR_2 = 1 ; VAR_3 = METHOD_2 ( position ) ; TYPE_2 . METHOD_3 ( ) . set ( position , VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( position ) ; }","public void METHOD_1 ( int position , TYPE_1 VAR_1 ) { VAR_2 = 1 ; TYPE_2 . METHOD_3 ( ) . set ( position , VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( position ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",808
private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; if ( VAR_4 ) { VAR_4 = false ; } },private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Update TypeAccess', 'Update TypeAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",809
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 . set ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this . VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this . VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",810
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_1 = VAR_2 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } } },public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } },"['Move If', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",811
"public java.lang.Object METHOD_1 ( TYPE_1 node , java.lang.Object data ) { METHOD_2 ( VAR_1 , true ) ; VAR_2 = node . METHOD_3 ( 0 ) . METHOD_4 ( this , data ) ; return node ; }","public java.lang.Object METHOD_1 ( TYPE_1 node , java.lang.Object data ) { METHOD_2 ( VAR_1 , true ) ; return node . METHOD_3 ( 0 ) . METHOD_4 ( this , data ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete VariableRead']",812
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; f = null ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",813
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; setState ( new TYPE_1 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_2 ( ) ; setState ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",815
protected void METHOD_1 ( ) { if ( this . VAR_1 ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . VAR_1 = false ; } },protected void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",816
private void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = true ; },private void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",817
public void handle ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_3 = true ; new TYPE_2 ( STRING_1 ) . METHOD_2 ( ) ; TYPE_3 . METHOD_2 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { new TYPE_2 ( STRING_1 ) . METHOD_2 ( ) ; TYPE_3 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",818
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { this . VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { VAR_3 = TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",819
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; VAR_3 = ( VAR_3 ) % ( VAR_4 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",820
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",821
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",822
"private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , STRING_1 , STRING_2 ) ; VAR_4 = ( VAR_3 ) - 1 ; }","private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",824
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 = VAR_4 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_2 ) . show ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",825
public TYPE_1 METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return this ; },public TYPE_1 METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; return this ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",826
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( main , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( main , STRING_1 , VAR_2 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",827
public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",829
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",831
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",832
"private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { VAR_3 = true ; if ( VAR_1 ) return ; if ( VAR_2 ) { view . METHOD_2 ( ) ; } else { view . METHOD_1 ( ) ; } }","private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { if ( VAR_1 ) return ; if ( VAR_2 ) { view . METHOD_2 ( ) ; } else { view . METHOD_1 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",833
public void show ( ) { VAR_1 = 0 ; },public void show ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",834
public void METHOD_1 ( ) { this . VAR_1 = true ; VAR_2 . remove ( VAR_3 ) ; VAR_3 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; this . VAR_1 = false ; },public void METHOD_1 ( ) { VAR_2 . remove ( VAR_3 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; super . METHOD_1 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",835
public void METHOD_1 ( ) { VAR_1 = false ; while ( ( METHOD_2 ( ) ) > 0 ) { remove ( METHOD_3 ( 0 ) ) ; } },public void METHOD_1 ( ) { while ( ( METHOD_2 ( ) ) > 0 ) { remove ( METHOD_3 ( 0 ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",836
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new android.content.Intent ( METHOD_3 ( ) , VAR_4 class ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",838
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . get ( ) ; VAR_3 = VAR_1 . METHOD_2 ( VAR_4 , true ) ; }","public void METHOD_1 ( ) { VAR_3 = VAR_1 . METHOD_2 ( VAR_4 , true ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",840
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; VAR_4 = this ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",841
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",842
"public void start ( ) { VAR_1 = false ; VAR_2 = new java.util.ArrayList ( VAR_3 . METHOD_1 ( VAR_4 . getId ( ) ) ) ; view . METHOD_2 ( VAR_5 . METHOD_3 ( ) , VAR_2 ) ; }","public void start ( ) { VAR_1 = false ; view . METHOD_2 ( VAR_5 . METHOD_3 ( ) , VAR_3 . METHOD_1 ( VAR_4 . getId ( ) ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess']",843
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . compareTo ( new TYPE_1 ( STRING_1 ) ) ) == 0 ) this . VAR_3 = new TYPE_1 ( ""0"" ) ; else this . VAR_3 = VAR_1 ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",844
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; METHOD_2 ( VAR_11 , VAR_12 ) ; METHOD_2 ( VAR_13 , VAR_12 ) ; }","public void METHOD_1 ( ) { VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; METHOD_2 ( VAR_11 , VAR_12 ) ; METHOD_2 ( VAR_13 , VAR_12 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",845
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",846
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = init ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",847
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 ) ; METHOD_2 ( true ) ; this . VAR_2 = VAR_3 ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 ) ; METHOD_2 ( true ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",848
"public void METHOD_1 ( java.lang.String msg ) { VAR_1 = false ; VAR_2 = false ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_3 , msg , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( java.lang.String msg ) { TYPE_1 . METHOD_3 ( VAR_3 , msg , VAR_4 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",849
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",850
TYPE_1 METHOD_1 ( android.content.Intent intent ) { this . intent = intent ; this . VAR_1 = null ; return this ; },TYPE_1 METHOD_1 ( android.content.Intent intent ) { this . intent = intent ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",851
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = VAR_13 ; VAR_14 = VAR_15 ; VAR_16 = VAR_17 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = VAR_13 ; VAR_14 = VAR_15 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",852
"public void METHOD_1 ( ) { VAR_1 = false ; data = new TYPE_1 ( ) ; params . METHOD_2 ( data , METHOD_3 ( ) ) ; params . METHOD_4 ( data ) ; }","public void METHOD_1 ( ) { data = new TYPE_1 ( ) ; params . METHOD_2 ( data , METHOD_3 ( ) ) ; params . METHOD_4 ( data ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",854
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = null ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; path = null ; VAR_8 = null ; VAR_9 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = null ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; path = null ; VAR_8 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",855
public TYPE_1 [ ] METHOD_1 ( ) { VAR_1 = false ; TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . VAR_3 = java.lang.String . METHOD_2 ( VAR_4 ) ; return VAR_2 ; },public TYPE_1 [ ] METHOD_1 ( ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . VAR_3 = java.lang.String . METHOD_2 ( VAR_4 ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",858
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; isEmpty = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",859
"public void init ( ) { VAR_1 = new java.util.ArrayList ( ) ; VAR_2 = new TYPE_1 ( 0 , 0 ) ; VAR_3 = VAR_4 [ 0 ] ; VAR_5 = VAR_6 ; init ( 0 , VAR_2 , new TYPE_1 [ INT_1 ] ) ; }","public void init ( ) { VAR_1 = new java.util.ArrayList ( ) ; VAR_2 = new TYPE_1 ( 0 , 0 ) ; VAR_3 = VAR_4 [ 0 ] ; init ( 0 , VAR_2 , new TYPE_1 [ INT_1 ] ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",861
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; android.content.Intent VAR_4 = new android.content.Intent ( this , VAR_5 class ) ; METHOD_3 ( VAR_4 ) ; TYPE_1 . METHOD_4 ( this ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; android.content.Intent VAR_4 = new android.content.Intent ( this , VAR_5 class ) ; METHOD_3 ( VAR_4 ) ; TYPE_1 . METHOD_4 ( this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",862
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",863
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",864
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",865
public synchronized void METHOD_1 ( java.lang.Boolean n ) { if ( n && ( ! ( VAR_1 ) ) ) { VAR_2 . start ( ) ; } else if ( n == false ) { VAR_3 . METHOD_2 ( ) ; } VAR_1 = n ; },public synchronized void METHOD_1 ( java.lang.Boolean n ) { if ( n && ( ! ( VAR_1 ) ) ) { VAR_2 . start ( ) ; } else { VAR_3 . METHOD_2 ( ) ; } },"['Move Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",866
final void METHOD_1 ( android.view.View view ) { this . VAR_1 = true ; if ( this . VAR_2 ) { METHOD_2 ( ) ; this . view = null ; this . VAR_2 = false ; this . VAR_1 = false ; } },final void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; this . view = null ; this . VAR_2 = false ; },"['Move Invocation', 'Move Assignment', 'Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",868
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",869
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_1 ) == VAR_1 ) { VAR_2 = true ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",870
"public static void METHOD_1 ( android.content.Context context , int id ) { if ( id == 0 ) VAR_1 = null ; context . METHOD_2 ( STRING_1 , 0 ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , id ) . commit ( ) ; }","public static void METHOD_1 ( android.content.Context context , int id ) { context . METHOD_2 ( STRING_1 , 0 ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , id ) . commit ( ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",871
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",872
"public void METHOD_1 ( ) { TYPE_1 VAR_1 ; if ( ( VAR_1 = METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , FLOAT_1 ) ) != null ) { METHOD_6 ( VAR_1 ) ; VAR_2 = 0 ; } }","public void METHOD_1 ( ) { TYPE_1 VAR_1 ; if ( ( VAR_1 = METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , FLOAT_1 ) ) != null ) { METHOD_6 ( VAR_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",874
public boolean METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; return false ; },public boolean METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",876
public void METHOD_1 ( android.view.View view ) { x = java.lang.Integer.parseInt ( VAR_1 . getText ( ) . toString ( ) ) ; VAR_2 = STRING_1 ; sum = STRING_1 ; VAR_1 . setText ( STRING_2 ) ; },public void METHOD_1 ( android.view.View view ) { x = java.lang.Integer.parseInt ( VAR_1 . getText ( ) . toString ( ) ) ; sum = STRING_1 ; VAR_1 . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",877
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( false ) ; } super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( false ) ; super . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",880
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",882
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = this ; VAR_3 = true ; VAR_4 = true ; VAR_5 = VAR_1 ; VAR_6 = true ; VAR_7 = true ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 = VAR_1 ; VAR_6 = true ; VAR_7 = true ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",883
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",884
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = TYPE_3 . METHOD_2 ( ) ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",885
"public TYPE_1 METHOD_1 ( ) { this . size = INT_1 ; return new TYPE_1 ( ( this . VAR_1 += ( this . size ) / INT_1 ) , true , this . size , ( - 1 ) , INT_1 ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( this . VAR_1 += ( this . size ) / INT_1 ) , true , this . size , ( - 1 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead']",886
"protected android.content.Intent METHOD_1 ( android.content.Context context ) { intent = new android.content.Intent ( context , VAR_1 class ) ; return intent ; }","protected android.content.Intent METHOD_1 ( android.content.Context context ) { return new android.content.Intent ( context , VAR_1 class ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",887
public TYPE_1 id ( java.lang.Long id ) { this . VAR_1 = id ; return this ; },public TYPE_1 id ( java.lang.Long id ) { this . id = id ; return this ; },['Update FieldWrite'],888
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = VAR_4 . METHOD_2 ( ) ; VAR_6 = VAR_4 . METHOD_3 ( ) ; VAR_7 = METHOD_4 ( ) ; VAR_8 = 0 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = VAR_4 . METHOD_2 ( ) ; VAR_6 = VAR_4 . METHOD_3 ( ) ; VAR_7 = METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",890
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",891
public void METHOD_1 ( int VAR_1 ) { position = position . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { position . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",892
public java.lang.String METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = true ; VAR_4 = VAR_5 ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 = true ; return STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",893
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( getContext ( ) , VAR_4 class ) , VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; METHOD_3 ( new android.content.Intent ( getContext ( ) , VAR_4 class ) , VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",894
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",895
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",896
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",897
"public double METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 , final int VAR_2 ) { this . METHOD_2 ( ) ; this . VAR_3 = true ; return this . VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","public double METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 , final int VAR_2 ) { return this . VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",898
public void METHOD_1 ( java.lang.String VAR_1 ) { this . date = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . date = date ; },"['Insert FieldRead', 'Delete VariableRead']",900
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Throwable { ( VAR_2 ) ++ ; VAR_3 = VAR_1 ; return VAR_4 . execute ( ) ; },public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Throwable { ( VAR_2 ) ++ ; return VAR_4 . execute ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",901
public boolean METHOD_1 ( java.lang.String data ) { if ( ! ( VAR_1 ) ) return true ; if ( VAR_2 . METHOD_1 ( data ) ) { return true ; } METHOD_2 ( ) ; VAR_1 = false ; METHOD_3 ( ) ; return true ; },public boolean METHOD_1 ( java.lang.String data ) { if ( ! ( VAR_1 ) ) return true ; if ( VAR_2 . METHOD_1 ( data ) ) { return true ; } METHOD_2 ( ) ; METHOD_3 ( ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",903
public TYPE_1 name ( java.lang.String name ) { this . name = name ; this . message = name ; return this ; },public TYPE_1 name ( java.lang.String name ) { this . name = name ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",904
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; METHOD_5 ( ) ; }",public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",907
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( METHOD_2 ( ) ) { VAR_2 = ( ( float ) ( VAR_1 . METHOD_3 ( ) . VAR_3 ) ) ; } VAR_4 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",910
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",913
"public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = VAR_2 ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 ) , TYPE_1 . METHOD_3 ( STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_4 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 ) , TYPE_1 . METHOD_3 ( STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_4 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",914
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) this . VAR_1 = null ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",917
public void METHOD_1 ( long add ) { this . VAR_1 += add ; if ( ( VAR_1 ) > ( VAR_2 ) ) { VAR_1 = VAR_2 ; } },public void METHOD_1 ( long add ) { this . VAR_1 += add ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",918
"public TYPE_1 execute ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; return VAR_1 ; }","public TYPE_1 execute ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { VAR_1 . METHOD_1 ( VAR_2 ) ; return VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",919
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; if ( ( METHOD_3 ( ) ) && ( ( VAR_1 ) != null ) ) { METHOD_4 ( ) ; VAR_1 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; },"['Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",920
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; ( size ) ++ ; ( VAR_3 ) ++ ; this . VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_5 = TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; ( size ) ++ ; ( VAR_3 ) ++ ; this . VAR_4 = TYPE_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",921
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this . METHOD_3 ( ) ) ; VAR_4 = this . METHOD_4 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",922
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",923
public void METHOD_1 ( final java.util.Date date ) { if ( date == null ) { this . VAR_1 = new java.util.Date ( ) ; } else { this . VAR_1 = ( ( java.util.Date ) ( date . METHOD_2 ( ) ) ) ; } },public void METHOD_1 ( final java.util.Date date ) { this . VAR_1 = date ; },"['Move Assignment', 'Move VariableRead', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",924
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",926
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( true ) ; TYPE_3 . METHOD_3 ( VAR_3 , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_3 . METHOD_3 ( VAR_3 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",927
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { params = new java.util.ArrayList ( ) ; METHOD_2 ( VAR_1 ) ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",928
public TYPE_1 METHOD_1 ( android.view.View view ) { VAR_1 = view ; VAR_2 = 0 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } return this ; },public TYPE_1 METHOD_1 ( android.view.View view ) { VAR_1 = view ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",929
"public java.util.HashMap < java.lang.String , TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.HashMap < > ( ) ; return VAR_1 ; }","public java.util.HashMap < java.lang.String , TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",930
protected void METHOD_1 ( TYPE_1 < TYPE_2 > response ) { view . METHOD_2 ( response . METHOD_3 ( ) ) ; item = response . METHOD_3 ( ) ; VAR_1 = item . METHOD_4 ( ) ; view . METHOD_5 ( false ) ; },protected void METHOD_1 ( TYPE_1 < TYPE_2 > response ) { view . METHOD_2 ( response . METHOD_3 ( ) ) ; item = response . METHOD_3 ( ) ; view . METHOD_5 ( false ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",931
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_4 = new TYPE_4 ( VAR_1 , VAR_1 . METHOD_2 ( ) ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_4 = new TYPE_4 ( VAR_1 , VAR_1 . METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",932
public void remove ( ) { if ( VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; } },public void remove ( ) { VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",933
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",934
"private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; VAR_3 . put ( VAR_2 , VAR_4 ) ; VAR_5 = VAR_2 ; }","private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; VAR_3 . put ( VAR_2 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",935
public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",939
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } VAR_2 . setText ( VAR_3 . getText ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",940
public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; TYPE_2 . METHOD_3 ( this ) ; },public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",942
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . getId ( ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",944
public TYPE_1 getData ( ) { if ( ( data ) == null ) data = new TYPE_1 ( ) ; return data ; },public TYPE_1 getData ( ) { return data ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",945
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = true ; VAR_5 = VAR_1 . METHOD_2 ( VAR_6 , VAR_2 , false ) ; return VAR_5 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_5 = VAR_1 . METHOD_2 ( VAR_6 , VAR_2 , false ) ; return VAR_5 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",948
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = null ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",949
public boolean METHOD_1 ( ) { this . VAR_1 = true ; return this . METHOD_2 ( ) ; },public boolean METHOD_1 ( ) { return this . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",950
public void METHOD_1 ( android.view.View view ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) + ( VAR_2 ) ; VAR_3 = 0 ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) + ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",952
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( true ) ; VAR_2 = true ; VAR_3 = false ; TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",953
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; this . VAR_3 = VAR_1 ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",955
public void METHOD_1 ( ) { this . VAR_1 = java.lang.String . METHOD_2 ( 0 ) ; this . VAR_2 = java.lang.String . METHOD_2 ( 0 ) ; this . VAR_3 = java.lang.String . METHOD_2 ( 0 ) ; this . VAR_4 = false ; },public void METHOD_1 ( ) { this . VAR_1 = java.lang.String . METHOD_2 ( 0 ) ; this . VAR_2 = java.lang.String . METHOD_2 ( 0 ) ; this . VAR_3 = java.lang.String . METHOD_2 ( 0 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",956
public void update ( ) { if ( first ) { VAR_1 . startTime = TYPE_1 . METHOD_1 ( ) ; first = false ; } METHOD_2 ( ) ; },public void update ( ) { METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",957
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; if ( VAR_2 ) { TYPE_2 VAR_4 = new TYPE_3 ( ) ; VAR_5 . show ( METHOD_2 ( ) , STRING_1 ) ; } METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = true ; TYPE_2 VAR_4 = new TYPE_3 ( ) ; VAR_5 . show ( METHOD_2 ( ) , STRING_1 ) ; } else { VAR_3 = false ; } }","['Insert Block', 'Move Assignment', 'Insert Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete VariableRead', 'Delete Invocation']",958
"public void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_2 == ( VAR_3 ) ) VAR_4 = VAR_1 ; else VAR_5 = VAR_1 ; }","public void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",960
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( VAR_1 ) ; this . target = VAR_1 ; this . VAR_3 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; this . VAR_3 = 0 ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",961
"public java.lang.String execute ( ) { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { this . result = STRING_1 ; return STRING_1 ; } else { this . result = STRING_2 ; return STRING_2 ; } }","public java.lang.String execute ( ) { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { return STRING_1 ; } else { return STRING_2 ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",962
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; int VAR_3 = java.lang.Integer . METHOD_2 ( VAR_4 . getText ( ) ) ; if ( VAR_3 == ( answer ) ) { VAR_2 = true ; } java.lang.System.out.println ( VAR_2 ) ; return VAR_2 ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_3 = java.lang.Integer . METHOD_2 ( VAR_4 . getText ( ) ) ; if ( VAR_3 == ( answer ) ) { VAR_2 = true ; } java.lang.System.out.println ( VAR_2 ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",965
private void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( new java.util.Date ( ) ) ; METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ; },private void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( new java.util.Date ( ) ) ; VAR_1 = METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation']",966
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",967
public void setValue ( double value ) { this . VAR_1 = value ; },public void setValue ( double value ) { this . value = value ; },['Update FieldWrite'],968
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 super . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 super . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",970
public void init ( ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . get ( STRING_1 ) ; java.lang.System.out.println ( VAR_3 ) ; },public void init ( ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",971
public void count ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_1 ( ) ; this . VAR_3 = VAR_4 ; this . VAR_5 = null ; },public void count ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_1 ( ) ; this . VAR_3 = VAR_4 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",972
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",973
"public void METHOD_1 ( android.view.View view ) { boolean answer = VAR_1 [ VAR_2 ] . METHOD_2 ( ) ; android.content.Intent i = TYPE_1 . METHOD_3 ( this , answer , VAR_3 ) ; METHOD_4 ( i , VAR_4 ) ; VAR_3 = false ; }","public void METHOD_1 ( android.view.View view ) { boolean answer = VAR_1 [ VAR_2 ] . METHOD_2 ( ) ; android.content.Intent i = TYPE_1 . METHOD_3 ( this , answer ) ; METHOD_4 ( i , VAR_4 ) ; }","['Delete TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",974
"public void METHOD_1 ( java.lang.Throwable t ) { VAR_1 . i ( VAR_2 , STRING_1 , t ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; VAR_1 . i ( VAR_2 , STRING_2 ) ; VAR_6 = false ; }","public void METHOD_1 ( java.lang.Throwable t ) { VAR_1 . i ( VAR_2 , STRING_1 , t ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",975
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = true ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",976
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } else METHOD_4 ( ) ; VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } else METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",977
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { if ( ( VAR_2 . counter ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_2 . counter = null ; VAR_4 . METHOD_3 ( null , STRING_1 ) ; } } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_4 . METHOD_3 ( null , STRING_1 ) ; } }","['Move If', 'Move BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",978
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; METHOD_2 ( ) . METHOD_1 ( this , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_1 ( this , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",981
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",982
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , error ) ; VAR_2 = true ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , error ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",984
public synchronized TYPE_1 < java.util.List < java.lang.Object > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( TYPE_2 . METHOD_1 ( VAR_2 ) ) ; } return VAR_1 ; },public synchronized TYPE_1 < java.util.List < java.lang.Object > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_1 ( VAR_2 ) ; } return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete Invocation']",985
public void METHOD_1 ( TYPE_1 name ) { this . name = name ; VAR_1 = this . name . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 name ) { this . name = name ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",986
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = VAR_3 ; this . VAR_2 = VAR_2 ; init ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { init ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Move VariableRead', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",987
public void METHOD_1 ( ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_3 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_4 ) ; VAR_5 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_6 ) ; },public void METHOD_1 ( ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_3 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",988
public void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = false ; this . VAR_3 = false ; this . VAR_4 = false ; },public void METHOD_1 ( ) { this . VAR_2 = false ; this . VAR_3 = false ; this . VAR_4 = false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",989
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = VAR_3 ; } else { VAR_2 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",991
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; if ( METHOD_4 ( value ) ) { VAR_3 = false ; METHOD_5 ( ) ; return ; } METHOD_6 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; if ( METHOD_4 ( value ) ) { METHOD_5 ( ) ; return ; } METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",992
"public void METHOD_1 ( TYPE_1 event ) { int result = TYPE_2 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_1 , VAR_2 ) ; if ( result == ( VAR_3 ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_4 = 0 ; } }","public void METHOD_1 ( TYPE_1 event ) { int result = TYPE_2 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_1 , VAR_2 ) ; if ( result == ( VAR_3 ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",993
"private void METHOD_1 ( final android.content.Context context ) { METHOD_2 ( context , VAR_1 , this ) ; VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; }","private void METHOD_1 ( final android.content.Context context ) { METHOD_2 ( context , VAR_1 , this ) ; VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_3 ) ) ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",994
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",995
"public void METHOD_1 ( ) { assertEquals ( VAR_1 , INT_1 ) ; VAR_1 = INT_2 ; }",public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",996
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_3 ; METHOD_3 ( INT_1 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",997
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; METHOD_3 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",998
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; if ( METHOD_2 ( ) ) { new TYPE_1 ( ) . execute ( ) ; } else { METHOD_3 ( ) ; } METHOD_4 ( VAR_2 , VAR_3 class , null , true ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_4 ( VAR_2 , VAR_3 class , null , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",999
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( METHOD_2 ( ) ) / INT_1 ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1003
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = 1 ; VAR_3 = false ; VAR_4 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = 1 ; VAR_4 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1004
public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . getConfig ( ) ; return VAR_3 . getString ( ( ( STRING_1 + ( key ) ) + STRING_2 ) ) ; },public java.lang.String METHOD_1 ( ) { return VAR_3 . getString ( ( ( STRING_1 + ( key ) ) + STRING_2 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1005
private void METHOD_1 ( ) { if ( VAR_1 = true ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_1 = false ; } },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },"['Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1006
public void METHOD_1 ( int num ) { VAR_1 = 0 ; counter = num ; },public void METHOD_1 ( int num ) { counter = num ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1007
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = null ; VAR_5 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_4 = null ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1008
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1009
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( path ) ; },public void METHOD_1 ( ) { METHOD_2 ( path ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1011
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = false ; VAR_3 = VAR_1 ; VAR_4 = false ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( ) ; } },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = false ; VAR_3 = VAR_1 ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1012
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( INT_1 ) ; } TYPE_2 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 . METHOD_2 ( INT_1 ) ; } TYPE_2 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1014
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1015
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1016
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1019
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = 0 ; VAR_6 = false ; VAR_7 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_7 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1020
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( ) . get ( ( ( VAR_3 ) - 1 ) ) ) ) ; METHOD_4 ( VAR_2 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( ) . get ( ( ( VAR_3 ) - 1 ) ) ) ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1021
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( INT_1 ) ; VAR_2 . METHOD_2 ( INT_2 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1022
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1024
"private void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_3 ) ; } if ( VAR_3 ) { METHOD_3 ( ) ; } VAR_4 = 0 ; }","private void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_3 ) ; } if ( VAR_3 ) { METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1025
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 ; VAR_6 = INT_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_6 = INT_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1026
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; VAR_2 = ( ( android.view.View ) ( METHOD_3 ( VAR_3 ) . METHOD_4 ( ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1027
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = true ; VAR_4 = METHOD_3 ( ) ; METHOD_4 ( METHOD_3 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = true ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",1028
"public void METHOD_1 ( java.lang.String name , int VAR_1 ) throws java.lang.Throwable { if ( VAR_2 . startsWith ( STRING_1 ) ) { VAR_3 = VAR_1 ; } else VAR_4 = VAR_1 ; }","public void METHOD_1 ( java.lang.String name , int VAR_1 ) throws java.lang.Throwable { VAR_3 = VAR_1 ; }","['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1029
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { VAR_4 = VAR_5 ; this . VAR_2 = VAR_2 ; this . VAR_6 = VAR_3 ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { VAR_4 = VAR_5 ; this . VAR_2 = VAR_2 ; this . VAR_6 = VAR_3 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1030
protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { return ; } METHOD_5 ( METHOD_6 ( ) ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { return ; } METHOD_5 ( METHOD_6 ( ) ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1031
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1033
"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_4 . getData ( ) ; VAR_5 = new TYPE_2 ( this , VAR_3 ) ; VAR_6 . METHOD_4 ( VAR_5 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_3 = VAR_4 . getData ( ) ; VAR_5 = new TYPE_2 ( this , VAR_3 ) ; VAR_6 . METHOD_4 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1034
public static void METHOD_1 ( ) throws java.lang.Exception { java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( VAR_1 ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1035
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( null ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1036
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = INT_1 ; VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = INT_1 ; METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1038
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == 1 ) { ( VAR_3 ) ++ ; } VAR_4 . update ( ) ; VAR_5 = 0 ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == 1 ) { ( VAR_3 ) ++ ; } VAR_4 . update ( ) ; java.lang.System.exit ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1040
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = true ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1041
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this , METHOD_3 ( ) . getText ( VAR_2 ) , VAR_3 ) ; VAR_4 . show ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , METHOD_3 ( ) . getText ( VAR_2 ) , VAR_3 ) . show ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1044
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; TYPE_4 . METHOD_2 ( STRING_1 , new TYPE_5 ( ) ) ; }","public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; TYPE_4 . METHOD_2 ( STRING_1 , new TYPE_5 ( ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1047
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . toString ( ) ; VAR_4 = VAR_5 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . toString ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1048
public static void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ; TYPE_1 . METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; },public static void METHOD_1 ( ) { METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1049
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1051
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1052
void METHOD_1 ( TYPE_1 event ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; },void METHOD_1 ( TYPE_1 event ) { VAR_1 = null ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1053
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1054
"public void METHOD_1 ( TYPE_1 element , boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { METHOD_2 ( element ) ; } else { METHOD_1 ( element ) ; } this . VAR_1 = false ; }","public void METHOD_1 ( TYPE_1 element , boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( element ) ; } else { METHOD_1 ( element ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1056
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( false ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1058
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1060
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = true ; METHOD_3 ( 1 ) ; },public void METHOD_1 ( ) { METHOD_3 ( 1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1062
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; listener = ( ( TYPE_2 ) ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",1063
private static void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = STRING_1 ; },private static void METHOD_1 ( ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1064
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { while ( ( VAR_2 ) || ( VAR_3 ) ) { } VAR_4 = 0 ; java.lang.System.out.println ( STRING_1 ) ; VAR_5 = VAR_1 ; VAR_6 . start ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { while ( VAR_2 ) { } java.lang.System.out.println ( STRING_1 ) ; VAR_5 = VAR_1 ; VAR_6 . start ( ) ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1065
"private void METHOD_1 ( ) { VAR_1 = true ; startTime = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( new TYPE_2 ( ) , INT_1 ) ; TYPE_3 . METHOD_4 ( VAR_3 , STRING_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_3 ( new TYPE_2 ( ) , INT_1 ) ; TYPE_3 . METHOD_4 ( VAR_3 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1066
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } VAR_3 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1067
public void METHOD_1 ( android.view.View view ) { VAR_1 . get ( VAR_2 ) . delete ( ) ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . get ( VAR_2 ) . delete ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1069
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( null , STRING_1 ) ; VAR_2 = true ; METHOD_3 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1070
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = context ; VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 = VAR_5 . getBoolean ( STRING_2 , true ) ; execute ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = context ; execute ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",1073
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 . METHOD_2 ( ( 1 + ( ( float ) ( VAR_2 / FLOAT_1 ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { this . VAR_2 = VAR_2 ; VAR_4 . METHOD_2 ( ( 1 + ( ( float ) ( VAR_2 / FLOAT_1 ) ) ) ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",1074
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = null ; VAR_3 = true ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = null ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1076
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1078
"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , TYPE_2 event ) { if ( VAR_2 == ( VAR_3 ) ) { METHOD_2 ( ) ; VAR_4 = true ; return true ; } return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , TYPE_2 event ) { if ( VAR_2 == ( VAR_3 ) ) { METHOD_2 ( ) ; return true ; } return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1080
