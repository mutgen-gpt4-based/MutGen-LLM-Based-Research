fixed,buggy,baseline_ast_gumtree,line_id_tp_dataset
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1
"public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( false , false , false ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_2 ( false , false , false ) ; }","['Delete TypeAccess', 'Delete Invocation']",2
"public TYPE_1 METHOD_1 ( TYPE_2 index , boolean VAR_1 ) { return TYPE_3 . METHOD_1 ( index , VAR_2 , VAR_3 , VAR_4 , VAR_1 , VAR_5 , TYPE_4 . METHOD_2 ( VAR_1 ) ) . build ( ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 index , boolean VAR_1 ) { return TYPE_3 . METHOD_1 ( index , VAR_3 , VAR_3 , VAR_4 , VAR_1 , VAR_5 ) . build ( ) ; }","['Update TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this , VAR_1 , false ) ; METHOD_3 ( new android.content.Intent ( METHOD_4 ( ) , VAR_2 class ) . METHOD_5 ( VAR_3 ) ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( new android.content.Intent ( METHOD_4 ( ) , VAR_2 class ) . METHOD_5 ( VAR_3 ) ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",4
public void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) METHOD_2 ( VAR_2 . get ( ) ) ; VAR_3 . set ( false ) ; },public void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) METHOD_2 ( VAR_2 . get ( ) ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",5
public void METHOD_1 ( ) { if ( ( VAR_1 ) > 1 ) { METHOD_2 ( this ) ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) > 1 ) { METHOD_2 ( this ) ; } },"['Delete Invocation', 'Delete Block']",6
public void METHOD_1 ( long id ) { VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( long id ) { },"['Delete TypeAccess', 'Delete Invocation']",7
public void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_4 ( ) . METHOD_5 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( ) ; } },['Delete Invocation'],8
"public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_1 ( ) , VAR_2 . METHOD_1 ( ) ) ; }",public TYPE_1 METHOD_1 ( ) { return ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",9
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 position ) { METHOD_2 ( position , new TYPE_2 ( VAR_2 , VAR_3 ) , VAR_1 ) ; VAR_4 = true ; VAR_5 . METHOD_3 ( ) . METHOD_4 ( VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 position ) { METHOD_2 ( position , new TYPE_2 ( VAR_2 , VAR_3 ) , VAR_1 ) ; VAR_4 = true ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",10
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },['Delete Invocation'],11
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; }",['Delete Invocation'],12
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . getActivity ( ) ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . getActivity ( ) ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",13
void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 . get ( 0 ) ) ; } catch ( java.lang.Exception VAR_3 ) { } VAR_4 . open ( ) ; },void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 . get ( 0 ) ) ; } catch ( java.lang.Exception VAR_3 ) { } },"['Delete TypeAccess', 'Delete Invocation']",14
"public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_3 VAR_3 ) throws TYPE_4 { VAR_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_3 VAR_3 ) throws TYPE_4 { return STRING_3 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",15
public boolean METHOD_1 ( int VAR_1 ) { return this . VAR_2 ; },public boolean METHOD_1 ( int VAR_1 ) { return true ; },"['Insert Literal', 'Delete ThisAccess', 'Delete FieldRead']",16
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; METHOD_6 ( VAR_1 ) ; if ( ( VAR_1 ) != null ) VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; METHOD_6 ( VAR_1 ) ; if ( ( VAR_1 ) != null ) VAR_3 . add ( VAR_1 ) ; },['Delete Invocation'],17
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 . info ( ( STRING_2 + ( VAR_3 class ) ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",18
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 node = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( node ) ) ; TYPE_4 . METHOD_6 ( node ) ; },public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 node = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; TYPE_4 . METHOD_6 ( node ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",19
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",20
"public void handle ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 , VAR_5 ) ; }","public void handle ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 , VAR_5 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",21
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . length ) == 0 ) return VAR_2 ; return new TYPE_2 ( METHOD_2 ( ) , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . length ) == 0 ) return VAR_2 ; return new TYPE_2 ( VAR_1 . length , VAR_3 ) ; }","['Insert FieldRead', 'Delete Invocation']",22
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { METHOD_2 ( ) ; }",['Delete TypeAccess'],24
protected boolean METHOD_1 ( TYPE_1 item ) { boolean result = VAR_1 . add ( item ) ; item . METHOD_2 ( this ) ; java.util.Collections.sort ( this . VAR_2 ) ; return result ; },protected boolean METHOD_1 ( TYPE_1 item ) { boolean result = VAR_1 . add ( item ) ; java.util.Collections.sort ( this . VAR_2 ) ; return result ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",25
"public java.lang.Object handle ( TYPE_1 VAR_1 , TYPE_2 response ) { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( STRING_1 ) ; TYPE_3 . METHOD_2 ( VAR_1 , response ) ; return TYPE_4 . METHOD_3 ( VAR_2 ) ; }","public java.lang.Object handle ( TYPE_1 VAR_1 , TYPE_2 response ) { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( STRING_1 ) ; return TYPE_4 . METHOD_3 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",29
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 . i ( VAR_4 , STRING_1 ) ; return VAR_5 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { return VAR_5 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",30
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( 1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete Literal', 'Delete Invocation']",31
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; view . METHOD_2 ( VAR_4 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",33
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( this , VAR_2 ) ; super . METHOD_1 ( ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( this , VAR_2 ) ; super . METHOD_1 ( ) ; }",['Delete Invocation'],34
public void update ( double VAR_1 ) { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void update ( double VAR_1 ) { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },['Delete Invocation'],35
"public void METHOD_1 ( TYPE_1 file ) { TYPE_2 b = new TYPE_2 ( ) ; b . METHOD_2 ( VAR_1 , VAR_2 . getId ( ) ) ; b . METHOD_2 ( VAR_3 , VAR_2 . getName ( ) ) ; METHOD_3 ( VAR_4 , b ) ; }","public void METHOD_1 ( TYPE_1 file ) { TYPE_2 b = new TYPE_2 ( ) ; METHOD_3 ( VAR_4 , b ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",36
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },['Delete Invocation'],37
"protected void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { METHOD_2 ( VAR_1 . get ( ) ) ; METHOD_3 ( INT_1 ) ; if ( ( VAR_2 . get ( ) ) != 0 ) { METHOD_4 ( VAR_2 . get ( ) ) ; } }","protected void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { METHOD_2 ( VAR_1 . get ( ) ) ; METHOD_3 ( INT_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",38
public void METHOD_1 ( java.lang.String time ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 . setText ( time ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String time ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 . setText ( time ) ; },"['Delete TypeAccess', 'Delete Invocation']",39
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; METHOD_4 ( VAR_3 ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; METHOD_4 ( VAR_3 ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",41
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( show ) ? VAR_3 : VAR_4 ; if ( show ) { view . METHOD_2 ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( show ) ? VAR_3 : VAR_4 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",42
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . startsWith ( STRING_1 ) ) { return VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) , VAR_4 class ) ; } return VAR_3 . METHOD_2 ( TYPE_2 . METHOD_4 ( VAR_1 ) , VAR_4 class ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( TYPE_2 . METHOD_4 ( VAR_1 ) , VAR_4 class ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",43
"public java.lang.Boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public java.lang.Boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return true ; }","['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",44
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 , VAR_4 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 , VAR_4 ) ; VAR_2 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",45
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; this . VAR_4 = VAR_5 ; VAR_6 . METHOD_4 ( FLOAT_1 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; this . VAR_4 = VAR_5 ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",46
"public double METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( VAR_2 ) ) ) ; return VAR_2 ; }",public double METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",47
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . update ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",48
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = null ; } java.lang.System.out.println ( STRING_1 ) ; },public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = null ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",49
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; getActivity ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; getActivity ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; getActivity ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; },"['Delete Literal', 'Delete Invocation']",50
public void METHOD_1 ( android.view.View view ) { VAR_1 . setEnabled ( false ) ; VAR_2 . setEnabled ( false ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setEnabled ( false ) ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",51
public void METHOD_1 ( android.view.View view ) { int position = VAR_1 . METHOD_2 ( ) ; VAR_2 . remove ( position ) . delete ( ) ; VAR_3 . remove ( position ) ; METHOD_3 ( position ) ; VAR_4 = - 1 ; },public void METHOD_1 ( android.view.View view ) { int position = VAR_1 . METHOD_2 ( ) ; VAR_2 . remove ( position ) . delete ( ) ; METHOD_3 ( position ) ; VAR_4 = - 1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",52
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; view . METHOD_3 ( ) ; },public void METHOD_1 ( ) { view . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",53
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",54
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( state ) == ( VAR_3 ) ) { METHOD_3 ( ) ; } METHOD_4 ( ) ; },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( state ) == ( VAR_3 ) ) { METHOD_3 ( ) ; } },['Delete Invocation'],55
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . getInt ( VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . getInt ( VAR_4 ) ; super . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",56
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; java.util.List < java.lang.String > list = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; for ( java.lang.String VAR_3 : list ) VAR_2 . METHOD_5 ( VAR_3 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; java.util.List < java.lang.String > list = VAR_1 . METHOD_3 ( ) ; for ( java.lang.String VAR_3 : list ) VAR_2 . METHOD_5 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",57
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( STRING_1 ) ) { VAR_3 . setEnabled ( false ) ; VAR_4 . setEnabled ( false ) ; } else VAR_4 . setEnabled ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( STRING_1 ) ) VAR_3 . setEnabled ( false ) ; else VAR_4 . setEnabled ( true ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",58
"public void delete ( TYPE_1 key ) { VAR_1 . remove ( key , this ) ; }",public void delete ( TYPE_1 key ) { VAR_1 . remove ( key ) ; },['Delete ThisAccess'],59
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( false ) ; VAR_7 = false ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( false ) ; VAR_7 = false ; },"['Delete TypeAccess', 'Delete Invocation']",60
"private void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( METHOD_4 ( VAR_3 , VAR_1 ) ) ) ; VAR_2 . METHOD_5 ( ) ; }","private void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( METHOD_4 ( VAR_3 , VAR_1 ) ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",61
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; } else { TYPE_1 . METHOD_3 ( VAR_1 ) ; } }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { }","['Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",62
public java.util.Collection < ? extends TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },public java.util.Collection < ? extends TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",63
public static TYPE_1 METHOD_1 ( ) { java.lang.System.err.println ( ( STRING_1 + ( TYPE_2 . METHOD_2 ( ) ) ) ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",66
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_2 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",67
"public TYPE_1 METHOD_1 ( final TYPE_2 path ) { TYPE_1 VAR_1 = new TYPE_1 ( path , new TYPE_3 ( ) , this ) ; return METHOD_2 ( VAR_1 ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 path ) { TYPE_1 VAR_1 = new TYPE_1 ( path , new TYPE_3 ( ) , this ) ; return VAR_1 ; }","['Move VariableRead', 'Delete Invocation']",69
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) > INT_1 ) { ( VAR_2 ) -- ; VAR_3 . setText ( TYPE_2 . METHOD_2 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) > INT_1 ) { ( VAR_2 ) -- ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",70
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; for ( int i = VAR_3 . size ( ) ; i > 0 ; i -- ) { VAR_3 . get ( i ) . METHOD_3 ( VAR_1 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = VAR_3 . size ( ) ; i > 0 ; i -- ) { VAR_3 . get ( i ) . METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",71
"public TYPE_1 METHOD_1 ( TYPE_1 data ) { VAR_1 . put ( ""name"" , name ) ; VAR_1 . put ( STRING_1 , ( ( VAR_2 ) != null ? VAR_2 . METHOD_1 ( new TYPE_1 ( STRING_1 ) ) : null ) ) ; return data ; }","public TYPE_1 METHOD_1 ( TYPE_1 data ) { VAR_1 . put ( STRING_1 , ( ( VAR_2 ) != null ? VAR_2 . METHOD_1 ( new TYPE_1 ( STRING_1 ) ) : null ) ) ; return data ; }","['Delete TypeAccess', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation']",72
"public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 . init ( STRING_1 , VAR_3 ) ; }",public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 . init ( STRING_1 ) ; },['Delete TypeAccess'],74
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; query ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },['Delete Invocation'],76
private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } TYPE_1 . METHOD_6 ( ) ; },private void METHOD_1 ( ) { try { VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } TYPE_1 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",77
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_4 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",78
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { ( ( TYPE_2 ) ( context ) ) . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_3 ( ) ; }","['Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",79
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; METHOD_6 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",81
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; java.lang.System.out.println ( VAR_3 . size ( ) ) ; return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",82
"public void METHOD_1 ( java.lang.String id ) { long VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( id . METHOD_4 ( VAR_3 ) ) , 0 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String id ) { long VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( id . METHOD_4 ( ) ) , 0 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; }",['Delete TypeAccess'],83
"public void METHOD_1 ( int x , int y ) { this . x = x ; this . y = y ; update ( ) ; }","public void METHOD_1 ( int x , int y ) { this . x = x ; this . y = y ; }",['Delete Invocation'],84
protected TYPE_1 METHOD_1 ( int index ) { return VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) . VAR_2 . get ( index ) ; },protected TYPE_1 METHOD_1 ( int index ) { return VAR_1 . get ( 0 ) . VAR_2 . get ( index ) ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",85
public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation']",86
"public void METHOD_1 ( java.lang.String id ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + id ) ) ; VAR_3 . METHOD_3 ( VAR_4 , id ) ; }","public void METHOD_1 ( java.lang.String id ) { VAR_3 . METHOD_3 ( VAR_4 , id ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",87
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.lang.System.out.println ( VAR_3 . toString ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",88
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < ? extends TYPE_1 > VAR_2 ) { data . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . get ( ) ) ; return VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < ? extends TYPE_1 > VAR_2 ) { return VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",89
"public void METHOD_1 ( int VAR_1 , java.lang.String message ) { TYPE_1 . METHOD_2 ( VAR_2 , message , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String message ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",90
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",92
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; TYPE_1 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; TYPE_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",93
public void METHOD_1 ( ) { VAR_1 . getSelection ( ) . setEnabled ( false ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . setText ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . getSelection ( ) . setEnabled ( false ) ; VAR_3 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",94
TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; return VAR_2 . METHOD_2 ( ) ; },TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",95
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) . METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( VAR_2 class ) . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",96
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_2 . value ) == ( this . value ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return']",97
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation']",99
public void METHOD_1 ( java.lang.String message ) { METHOD_2 ( ) ; VAR_1 . setText ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( java.lang.String message ) { METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",100
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_3 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_3 ) ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",102
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; switch ( VAR_2 ) { case STRING_1 : VAR_3 . METHOD_3 ( ) ; break ; case STRING_2 : break ; case STRING_3 : break ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; switch ( VAR_2 ) { case STRING_1 : break ; case STRING_2 : break ; case STRING_3 : break ; } },"['Delete TypeAccess', 'Delete Invocation']",103
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 . METHOD_2 ( ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",105
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",106
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { }",['Delete Invocation'],107
"public void METHOD_1 ( int position , java.lang.String value ) { VAR_1 . set ( position , value ) ; METHOD_2 ( position ) ; }","public void METHOD_1 ( int position , java.lang.String value ) { VAR_1 . set ( position , value ) ; }","['Delete VariableRead', 'Delete Invocation']",108
"public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( null == ( VAR_1 ) ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; }",public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { if ( null == ( VAR_1 ) ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",109
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( VAR_2 ) TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; VAR_1 = null ; VAR_4 = VAR_5 ; METHOD_4 ( VAR_4 ) ; } }",public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_3 ( VAR_1 ) ; VAR_1 = null ; VAR_4 = VAR_5 ; METHOD_4 ( VAR_4 ) ; } },"['Update TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",111
"public java.lang.String type ( ) { return METHOD_1 ( ""type"" ) ; }",public java.lang.String type ( ) { return METHOD_1 ( type ( ) ) ; },"['Insert Invocation', 'Delete Literal']",112
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , false , new TYPE_1 ( INT_1 ) ) ; output = VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . assertEquals ( STRING_2 , output ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , false , new TYPE_1 ( INT_1 ) ) ; output = VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( STRING_2 , output ) ; }",['Update TypeAccess'],113
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; METHOD_2 ( VAR_11 ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; METHOD_2 ( ) ; },['Delete TypeAccess'],116
"public void METHOD_1 ( ) { VAR_1 . assertEquals ( null , VAR_2 . METHOD_2 ( new TYPE_1 ( ) ) ) ; }","public void METHOD_1 ( ) { assertEquals ( null , VAR_2 . METHOD_2 ( new TYPE_1 ( ) ) ) ; }",['Update TypeAccess'],117
"private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 . METHOD_3 ( VAR_5 ) ; } }",private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 . METHOD_3 ( VAR_5 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",118
"public TYPE_1 METHOD_1 ( java.util.Map < TYPE_2 , TYPE_3 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( java.util.Map < TYPE_2 , TYPE_3 > VAR_1 ) { VAR_1 . METHOD_2 ( VAR_1 ) ; return this ; }","['Insert VariableRead', 'Delete TypeAccess']",119
public void METHOD_1 ( TYPE_1 event ) { METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_1 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",120
public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; return true ; } catch ( TYPE_2 VAR_2 ) { } return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; return true ; } catch ( TYPE_2 VAR_2 ) { } return false ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",122
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; java.lang.System.out.println ( VAR_3 ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_3 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",123
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) . get ( VAR_1 ) ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; return VAR_2 ; },"['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",124
public java.lang.String METHOD_1 ( java.lang.String name ) throws TYPE_1 { if ( ( VAR_1 ) == null ) return null ; return VAR_2 . get ( name ) ; },public java.lang.String METHOD_1 ( java.lang.String name ) throws TYPE_1 { return VAR_2 . get ( name ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",125
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; new TYPE_2 ( VAR_1 ) ; }",public void METHOD_1 ( android.view.View view ) { new TYPE_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",126
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { int VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 . value ( ) ) ; if ( VAR_2 != 0 ) { throw new java.io.IOException ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { int VAR_2 = METHOD_2 ( VAR_3 , VAR_4 . value ( ) ) ; if ( VAR_2 != 0 ) { throw new java.io.IOException ( ) ; } }",['Update TypeAccess'],127
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) VAR_1 . METHOD_3 ( ( ( STRING_1 + to ) + STRING_2 ) ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",128
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 . get ( VAR_3 . METHOD_3 ( ) ) , VAR_4 , VAR_5 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",130
void execute ( ) { for ( TYPE_1 p : VAR_1 ) VAR_2 . start ( ) ; VAR_1 . METHOD_1 ( ) ; },void execute ( ) { for ( TYPE_1 p : VAR_1 ) VAR_2 . start ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",131
public void error ( TYPE_1 VAR_1 ) { error ( ) ; METHOD_1 ( STRING_1 ) ; },public void error ( TYPE_1 VAR_1 ) { METHOD_1 ( STRING_1 ) ; },['Delete Invocation'],132
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; android.view.View view = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",133
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . setText ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) . setState ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",134
"void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( this , VAR_1 ) ; } }",void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",135
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",136
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_5 = VAR_6 . getBoolean ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_4 = VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_5 = VAR_6 . getBoolean ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",137
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",138
public void METHOD_1 ( java.util.Date VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( ) ) ) ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.Date VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",139
"public static void main ( java.lang.String [ ] args ) throws java.io.IOException , TYPE_1 { java.lang.System.out.println ( VAR_1 . get ( STRING_1 , STRING_2 ) ) ; VAR_2 . main ( null , null , null ) ; }","public static void main ( java.lang.String [ ] args ) throws java.io.IOException , TYPE_1 { VAR_2 . main ( null , null , null ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",140
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; for ( int i = ( VAR_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) VAR_2 . get ( i ) . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = ( VAR_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) VAR_2 . get ( i ) . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",141
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( ) { METHOD_4 ( ) ; },"['Delete Invocation', 'Delete Literal', 'Delete Invocation']",142
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",143
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_3 . METHOD_3 ( ) ; METHOD_2 ( VAR_5 , VAR_2 ) ; METHOD_2 ( VAR_6 , VAR_4 ) ; VAR_7 = true ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_5 , VAR_2 ) ; METHOD_2 ( VAR_6 , VAR_4 ) ; VAR_7 = true ; }","['Delete TypeAccess', 'Delete Invocation']",144
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } },['Delete Invocation'],145
"private static void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( context . METHOD_3 ( VAR_3 ) ) ) ; VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( context ) ) ; }",private static void METHOD_1 ( android.content.Context context ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( context . METHOD_3 ( VAR_3 ) ) ) ; VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( context ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",147
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",150
public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",151
public void execute ( ) { VAR_1 . METHOD_1 ( ) ; },public void execute ( ) { },"['Delete TypeAccess', 'Delete Invocation']",152
public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; while ( true ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; } },public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; while ( true ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( ) ; TYPE_2 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",153
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ; METHOD_2 ( ) . value = getValue ( ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) . value = this . getValue ( ) ; },"['Insert ThisAccess', 'Insert ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",154
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; } else { METHOD_6 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; } },"['Delete Invocation', 'Delete Block']",155
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_3 . setState ( VAR_4 ) ; },private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",156
public void METHOD_1 ( ) { commit ( TYPE_1 . METHOD_2 ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { commit ( TYPE_1 . METHOD_2 ( ) ) ; },['Delete Invocation'],157
public void METHOD_1 ( boolean b ) { listener . METHOD_2 ( ) ; },public void METHOD_1 ( boolean b ) { METHOD_2 ( ) ; },['Delete FieldRead'],158
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . set ( false ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",159
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",160
"protected void METHOD_1 ( android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( intent ) ; }",protected void METHOD_1 ( android.content.Intent intent ) { METHOD_3 ( intent ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",161
public void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; TYPE_2 . METHOD_1 ( ) ; TYPE_3 . METHOD_1 ( ) ; },public void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; TYPE_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",162
public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) . METHOD_3 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) . METHOD_3 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",163
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { },public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.System.out.println ( VAR_1 ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",164
"public static void METHOD_1 ( int x , int y ) { if ( VAR_1 ) { return ; } VAR_2 [ 0 ] = x ; VAR_3 [ 0 ] = y ; VAR_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","public static void METHOD_1 ( int x , int y ) { VAR_2 [ 0 ] = x ; VAR_3 [ 0 ] = y ; VAR_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",165
"public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { return STRING_1 ; } byte [ ] b = TYPE_1 . METHOD_1 ( VAR_1 . METHOD_3 ( VAR_2 ) , true ) ; return new java.lang.String ( b , VAR_2 ) ; }","public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { byte [ ] b = TYPE_1 . METHOD_1 ( VAR_1 . METHOD_3 ( VAR_2 ) , true ) ; return new java.lang.String ( b , VAR_2 ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",166
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this , VAR_4 ) ; VAR_5 = new TYPE_3 ( this ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this , VAR_4 ) ; VAR_5 = new TYPE_3 ( this ) ; METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",167
protected java.lang.String [ ] METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( STRING_1 ) ? VAR_3 . get ( STRING_1 ) . split ( STRING_2 ) : null ; },protected java.lang.String [ ] METHOD_1 ( boolean VAR_1 ) { return VAR_2 . METHOD_3 ( STRING_1 ) ? VAR_3 . get ( STRING_1 ) . split ( STRING_2 ) : null ; },"['Delete TypeAccess', 'Delete Invocation']",168
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . remove ( VAR_1 ) ; VAR_4 . remove ( VAR_1 ) ; VAR_5 . remove ( VAR_1 ) ; VAR_6 . remove ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . remove ( VAR_1 ) ; VAR_4 . remove ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",169
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) . setEnabled ( VAR_2 ) ; METHOD_2 ( VAR_3 ) . setEnabled ( VAR_2 ) ; METHOD_2 ( VAR_4 ) . setEnabled ( VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",170
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( 0 , 0 ) ; VAR_3 . METHOD_4 ( 0 , 0 ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( 0 , 0 ) ; METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",171
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( view ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { METHOD_3 ( ) ; METHOD_4 ( view ) ; }","['Delete TypeAccess', 'Delete Invocation']",172
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },['Delete TypeAccess'],173
public void end ( ) { if ( VAR_1 . METHOD_1 ( ) ) VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; java.lang.System.out.println ( STRING_1 ) ; },public void end ( ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",175
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( VAR_3 > 0 ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } else { VAR_6 . show ( VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( VAR_3 > 0 ) { VAR_4 . METHOD_2 ( ) ; } else { VAR_6 . show ( ) ; } }","['Delete TypeAccess', 'Delete TypeAccess']",176
"public static void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( ) . info ( ( STRING_2 + VAR_1 ) ) ; TYPE_1 . METHOD_4 ( VAR_1 , STRING_3 , null ) ; }","public static void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , STRING_1 ) ; TYPE_1 . METHOD_4 ( VAR_1 , STRING_3 , null ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",179
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",180
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; this . VAR_2 . METHOD_4 ( ) ; this . VAR_3 . start ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_4 ( ) ; this . VAR_3 . start ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",181
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( VAR_4 , VAR_2 , INT_1 , INT_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( VAR_4 , VAR_2 , INT_1 , INT_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",182
public void METHOD_1 ( ) { setEnabled ( false ) ; },public void METHOD_1 ( ) { },"['Delete Literal', 'Delete Invocation']",183
private static void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_1 ) ) ) ; } },private static void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",184
public void METHOD_1 ( java.lang.String message ) { java.lang.System.out.println ( message ) ; VAR_1 . METHOD_1 ( message ) ; },public void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_1 ( message ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",185
"public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],186
public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",187
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) . getText ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",188
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = - 1 ; VAR_3 = - 1 ; VAR_4 = false ; VAR_5 = false ; VAR_6 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = - 1 ; VAR_3 = - 1 ; VAR_4 = false ; VAR_5 = false ; },"['Delete TypeAccess', 'Delete Invocation']",189
public static void METHOD_1 ( final java.lang.String message ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 . info ( message ) ; } else { java.lang.System.out.println ( message ) ; } },public static void METHOD_1 ( final java.lang.String message ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 . info ( message ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block']",190
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( METHOD_3 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; METHOD_4 ( VAR_2 ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; if ( METHOD_3 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; METHOD_4 ( VAR_2 ) ; } }",['Delete Invocation'],191
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( VAR_2 , VAR_3 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",192
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( id ) ; VAR_1 . METHOD_2 ( name ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( id ) ; VAR_1 . METHOD_2 ( name ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",193
public void METHOD_1 ( int position ) { VAR_1 = VAR_2 . values ( ) [ position ] ; VAR_3 . setText ( VAR_4 . getName ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( int position ) { VAR_1 = VAR_2 . values ( ) [ position ] ; VAR_3 . setText ( VAR_4 . getName ( VAR_1 . METHOD_2 ( ) ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",194
public java.lang.Long getId ( ) { return id ; },public java.lang.Long getId ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",195
public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_2 . append ( VAR_3 ) ; VAR_2 . append ( STRING_1 ) ; VAR_2 . append ( java.lang.Integer.toString ( VAR_4 ) ) ; return VAR_2 . toString ( ) ; },public java.lang.String METHOD_1 ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_2 . append ( VAR_3 ) ; VAR_2 . append ( STRING_1 ) ; VAR_2 . append ( java.lang.Integer.toString ( VAR_4 ) ) ; return VAR_2 . toString ( ) ; },['Delete Invocation'],196
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_1 . METHOD_3 ( VAR_5 . getName ( ) ) ; VAR_2 . METHOD_3 ( VAR_5 . getName ( ) ) ; } },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_1 . METHOD_3 ( VAR_5 . getName ( ) ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",197
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",198
"void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 class ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; } }","void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 class ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",199
"public void METHOD_1 ( java.util.List < TYPE_1 > target ) { if ( ! ( TYPE_2 . METHOD_2 ( this ) ) ) { METHOD_3 ( VAR_1 , target ) ; } }",public void METHOD_1 ( java.util.List < TYPE_1 > target ) { if ( ! ( TYPE_2 . METHOD_2 ( this ) ) ) { } },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",200
protected java.lang.Object get ( java.lang.String key ) { if ( VAR_1 . METHOD_1 ( key ) ) return null ; return VAR_1 . METHOD_2 ( key ) ; },protected java.lang.Object get ( java.lang.String key ) { return VAR_1 . METHOD_2 ( key ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",202
"public void METHOD_1 ( java.lang.String message , int VAR_1 , final TYPE_1 < java.lang.String > VAR_2 ) { METHOD_1 ( VAR_3 . getString ( VAR_4 ) , null , message , VAR_1 , false , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String message , int VAR_1 , final TYPE_1 < java.lang.String > VAR_2 ) { METHOD_1 ( null , null , message , VAR_1 , false , VAR_2 ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",203
public void METHOD_1 ( TYPE_1 error ) { VAR_1 . METHOD_2 ( false ) ; getView ( ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ; getView ( ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 error ) { getView ( ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ; getView ( ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",204
"public java.lang.Object get ( java.lang.String VAR_1 , java.lang.Object key ) throws TYPE_1 { java.util.Map < java.lang.Object , java.lang.Object > VAR_2 = METHOD_1 ( VAR_1 ) ; java.lang.Object value = VAR_3 . get ( key ) ; return value ; }","public java.lang.Object get ( java.lang.String VAR_1 , java.lang.Object key ) throws TYPE_1 { java.util.Map < java.lang.Object , java.lang.Object > VAR_2 = METHOD_1 ( VAR_1 ) ; java.lang.System.out.println ( key ) ; java.lang.Object value = VAR_3 . get ( key ) ; return value ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",205
public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( context ) ; METHOD_4 ( ) ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; METHOD_4 ( ) ; java.lang.System.exit ( 0 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",206
"public void METHOD_1 ( int VAR_1 , int size , int VAR_2 , TYPE_1 VAR_3 ) { if ( ( VAR_3 == ( VAR_4 ) ) && ( ( VAR_5 ) != null ) ) { VAR_5 . METHOD_2 ( this , VAR_1 , size ) ; } }","public void METHOD_1 ( int VAR_1 , int size , int VAR_2 , TYPE_1 VAR_3 ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",207
"public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , this ) ; }","public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { VAR_4 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , this ) ; }","['Delete TypeAccess', 'Delete Invocation']",208
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",210
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { java.lang.System.out.println ( java.lang.String.format ( STRING_1 , VAR_1 , value ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",211
"TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; return VAR_1 ; }","TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; return VAR_1 ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",213
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; METHOD_3 ( 0 ) ; METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( 0 ) ; METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",214
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Invocation']",215
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; new TYPE_1 ( ) . execute ( 0 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; new TYPE_1 ( ) . execute ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",216
private void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; VAR_2 = - 1 ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; VAR_2 = - 1 ; },['Delete Invocation'],217
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },['Delete Invocation'],218
protected java.lang.Class METHOD_1 ( ) { return VAR_1 ; },protected java.lang.Class METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",219
"public void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( context ) ; }",public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",220
"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 ) ; java.lang.System.out.println ( STRING_1 ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",221
public void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( VAR_2 ) ) ) ; java.util.Collections.sort ( VAR_2 ) ; },public void METHOD_1 ( ) { java.util.Collections.sort ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",223
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; else { VAR_1 . METHOD_4 ( this ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block']",224
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_1 ) ; },['Delete Invocation'],225
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( VAR_2 . format ( STRING_1 ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",226
"public void METHOD_1 ( ) { intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; intent . METHOD_3 ( VAR_2 , VAR_3 ) ; intent . METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( ) { intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; intent . METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_4 ( intent ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",227
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } else { METHOD_5 ( VAR_1 , false ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",228
"void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_4 , VAR_3 , null ) ; } }","void METHOD_1 ( ) { if ( VAR_1 ) { java.lang.Object VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_4 , VAR_3 , null ) ; } }","['Delete TypeAccess', 'Delete Invocation']",229
"public void METHOD_1 ( TYPE_1 VAR_1 ) { try { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( TYPE_3 VAR_2 ) { VAR_3 . error ( VAR_2 ) ; throw new TYPE_4 ( VAR_4 , VAR_2 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( TYPE_3 VAR_2 ) { throw new TYPE_4 ( VAR_4 , VAR_2 ) ; } }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",230
public synchronized boolean METHOD_1 ( char VAR_1 ) { if ( VAR_2 ) return false ; VAR_3 . add ( VAR_4 ) ; VAR_3 . add ( VAR_1 ) ; return false ; },public synchronized boolean METHOD_1 ( char VAR_1 ) { VAR_3 . add ( VAR_4 ) ; VAR_3 . add ( VAR_1 ) ; return false ; },"['Delete FieldRead', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",231
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_4 ( ) ; ( ( TYPE_4 ) ( VAR_3 ) ) . METHOD_3 ( STRING_1 ) ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_4 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",232
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { } }",['Delete Invocation'],233
"public TYPE_1 METHOD_1 ( android.content.Intent intent ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; return this . VAR_2 ; }",public TYPE_1 METHOD_1 ( android.content.Intent intent ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead']",234
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( ( VAR_4 ) instanceof TYPE_1 ) return ; VAR_4 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( this , VAR_5 , VAR_4 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_4 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( this , VAR_5 , VAR_4 ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",235
public final void setText ( java.lang.String text ) { this . text = text ; this . VAR_1 = VAR_2 . length ( ) ; if ( ( VAR_3 ) > 0 ) METHOD_1 ( ) ; METHOD_2 ( ) ; },public final void setText ( java.lang.String text ) { this . text = text ; this . VAR_1 = VAR_2 . length ( ) ; if ( ( VAR_3 ) > 0 ) METHOD_1 ( ) ; },['Delete Invocation'],237
public synchronized void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws TYPE_2 { for ( TYPE_1 target : VAR_1 ) { VAR_2 . METHOD_2 ( target ) ; } VAR_3 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public synchronized void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws TYPE_2 { for ( TYPE_1 target : VAR_1 ) { VAR_2 . METHOD_2 ( target ) ; } VAR_3 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; },['Delete Invocation'],238
"private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_1 . METHOD_2 ( new TYPE_1 ( getActivity ( ) , VAR_2 , VAR_3 ) ) ; VAR_1 . METHOD_3 ( 0 ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( getActivity ( ) , VAR_2 , VAR_3 ) ) ; VAR_1 . METHOD_3 ( 0 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",240
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",241
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getContext ( ) , VAR_3 ) ; VAR_1 . METHOD_3 ( this ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getContext ( ) , VAR_3 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",244
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",245
"public void METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 = new TYPE_1 ( VAR_1 ) ; temp = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 = new TYPE_1 ( VAR_1 ) ; temp = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; }",['Delete Invocation'],246
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = VAR_1 ; VAR_2 . setText ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = VAR_1 ; VAR_2 . setText ( METHOD_3 ( ) ) ; VAR_4 . METHOD_5 ( true ) ; }","['Delete TypeAccess', 'Delete Invocation']",247
"public void METHOD_1 ( TYPE_1 update ) throws java.io.IOException { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . writer ( ) . METHOD_3 ( update ) ) ; TYPE_3 VAR_2 = METHOD_4 ( update ) ; VAR_3 . METHOD_5 ( update , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 update ) throws java.io.IOException { TYPE_3 VAR_2 = METHOD_4 ( update ) ; VAR_3 . METHOD_5 ( update , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",248
public double METHOD_1 ( double a ) { java.lang.System.out.println ( STRING_1 ) ; return TYPE_1 . METHOD_1 ( a ) ; },public double METHOD_1 ( double a ) { return TYPE_1 . METHOD_1 ( a ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",249
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . get ( VAR_1 ) . add ( VAR_2 ) ; VAR_4 . get ( VAR_2 ) . add ( VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . get ( VAR_1 ) . add ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",250
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , VAR_2 , VAR_3 class , STRING_1 ) ; METHOD_3 ( METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_4 ) , STRING_3 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_4 ) , STRING_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",251
public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 ) ; TYPE_1 . METHOD_2 ( STRING_5 ) ; TYPE_1 . METHOD_2 ( STRING_6 ) ; },public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_5 ) ; TYPE_1 . METHOD_2 ( STRING_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",252
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; int number = VAR_3 . length ( ) ; VAR_4 . setText ( ( number + ( METHOD_3 ( ) . getString ( VAR_5 ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; int number = VAR_3 . length ( ) ; VAR_4 . setText ( ( number + ( METHOD_3 ( ) . getString ( VAR_5 ) ) ) ) ; },['Delete Invocation'],253
private java.lang.String [ ] METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 . toString ( TYPE_1 . METHOD_2 ( ) ) ) ; return TYPE_1 . METHOD_2 ( ) ; },private java.lang.String [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",254
public void METHOD_1 ( float VAR_1 ) { if ( ( this . VAR_2 ) && ( ! ( this . VAR_3 ) ) ) { TYPE_1 . METHOD_2 ( ) ; this . VAR_4 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( float VAR_1 ) { if ( ( this . VAR_2 ) && ( ! ( this . VAR_3 ) ) ) { this . VAR_4 . METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",255
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_4 . setEnabled ( VAR_3 . METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",256
"public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) . execute ( INT_1 ) ; org.testng.Assert.assertEquals ( VAR_3 . size ( ) , INT_1 ) ; }","public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) . execute ( INT_1 ) ; assertEquals ( VAR_3 . size ( ) , INT_1 ) ; }",['Delete FieldRead'],257
public void METHOD_1 ( ) { VAR_1 . select ( 1 ) ; VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_2 ( VAR_1 . getText ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . select ( 1 ) ; VAR_1 . setEnabled ( false ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",258
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( this . VAR_1 . getName ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( this . VAR_1 . getName ( ) ) ; },['Delete Invocation'],259
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",260
"public void delete ( ) { try { VAR_1 . METHOD_1 ( METHOD_2 ( ""id"" ) ) ; } catch ( java.lang.Exception VAR_2 ) { METHOD_3 ( ) . METHOD_4 ( INT_1 ) ; } TYPE_1 . METHOD_5 ( STRING_1 ) ; METHOD_6 ( ) ; }","public void delete ( ) { try { VAR_1 . METHOD_1 ( METHOD_2 ( ""id"" ) ) ; } catch ( java.lang.Exception VAR_2 ) { METHOD_3 ( ) . METHOD_4 ( INT_1 ) ; } METHOD_6 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",261
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; this . METHOD_3 ( VAR_2 ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",262
"public void METHOD_1 ( java.lang.String VAR_1 ) { final TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( this , VAR_2 , VAR_4 , VAR_5 ) ; super . METHOD_1 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { final TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 , VAR_5 ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete TypeAccess']",263
"public java.lang.String METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( STRING_1 , VAR_3 . get ( ) ) ; VAR_2 . METHOD_3 ( STRING_2 , VAR_4 ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( STRING_1 , VAR_3 . get ( ) ) ; return STRING_3 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",264
"public void METHOD_1 ( ) { if ( ( METHOD_2 ( VAR_1 ) ) != ( VAR_2 ) ) { } METHOD_3 ( new java.lang.String [ ] { VAR_3 , VAR_1 } , INT_1 ) ; }","public void METHOD_1 ( ) { METHOD_3 ( new java.lang.String [ ] { VAR_3 , VAR_1 } , INT_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",265
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . METHOD_1 ( view , VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",266
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; if ( VAR_1 ) { METHOD_3 ( true ) ; } },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",267
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 , VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",268
"public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { super . METHOD_1 ( VAR_1 , format , VAR_2 , height ) ; VAR_3 . METHOD_2 ( VAR_2 , height ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { super . METHOD_1 ( VAR_1 , format , VAR_2 , height ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",269
public java.lang.Long METHOD_1 ( ) { java.lang.Long VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; return VAR_1 ; },public java.lang.Long METHOD_1 ( ) { java.lang.Long VAR_1 = METHOD_2 ( ) ; METHOD_4 ( VAR_1 ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",271
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = VAR_1 ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 = VAR_1 ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",272
protected void execute ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) . set ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) . set ( VAR_2 ) ; },protected void execute ( ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",273
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = true ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = true ; } },['Delete Invocation'],274
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . setText ( java.lang.String . METHOD_2 ( VAR_1 ) ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . setText ( java.lang.String . METHOD_2 ( VAR_1 ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",276
private void METHOD_1 ( ) { VAR_1 . getValue ( ) ; VAR_1 . setValue ( getText ( ) ) ; },private void METHOD_1 ( ) { VAR_1 . setValue ( getText ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",277
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",278
public void METHOD_1 ( ) { java.lang.Boolean VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . fail ( STRING_1 ) ; },public void METHOD_1 ( ) { java.lang.Boolean VAR_1 = VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",279
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . init ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . init ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",280
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",281
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . state ( ( VAR_1 != null ) , STRING_1 ) ; return new TYPE_3 ( VAR_3 . METHOD_2 ( ) , VAR_3 . METHOD_3 ( ) , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_3 . METHOD_2 ( ) , VAR_3 . METHOD_3 ( ) , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",282
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( VAR_3 . METHOD_2 ( VAR_4 ) ) VAR_3 . METHOD_3 ( ( ( ( STRING_1 + to ) + STRING_2 ) + VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",284
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",286
public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 . getClass ( ) ) == ( VAR_3 class ) ) { VAR_4 . METHOD_2 ( ) ; } VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 . getClass ( ) ) == ( VAR_3 class ) ) { VAR_4 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",287
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; getActivity ( ) . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete Literal', 'Delete Invocation']",289
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; for ( final TYPE_2 < TYPE_3 > VAR_3 : VAR_4 ) { VAR_3 . METHOD_3 ( VAR_5 , VAR_1 ) ; } METHOD_4 ( VAR_6 ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { for ( final TYPE_2 < TYPE_3 > VAR_3 : VAR_4 ) { VAR_3 . METHOD_3 ( VAR_5 , VAR_1 ) ; } METHOD_4 ( VAR_6 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",290
"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; this . METHOD_2 ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; return new TYPE_3 ( this . VAR_2 , 1 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; this . METHOD_2 ( VAR_1 ) ; return new TYPE_3 ( this . VAR_2 , 1 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",291
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 class , STRING_1 , 0 , VAR_2 , INT_1 , VAR_3 , false ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 class , STRING_1 , 0 , VAR_2 , INT_1 , 1 , false ) ; }","['Insert Literal', 'Delete TypeAccess']",293
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_3 , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",294
void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.System.out.print ( VAR_1 ) ; },void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",295
public void METHOD_1 ( java.lang.Long VAR_1 ) { METHOD_2 ( null ) ; },public void METHOD_1 ( java.lang.Long VAR_1 ) { },"['Delete Literal', 'Delete Invocation']",296
"private void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { METHOD_2 ( true , true ) ; } else { METHOD_3 ( VAR_1 , 0 , VAR_3 , false ) ; } }","private void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { METHOD_2 ( true , true ) ; } else { } }","['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",297
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Throwable t ) { VAR_2 . show ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Throwable t ) { VAR_3 . METHOD_2 ( VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation']",298
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; if ( VAR_1 . METHOD_4 ( ) ) { return STRING_1 ; } return STRING_2 ; },public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_4 ( ) ) { return STRING_1 ; } return STRING_2 ; },"['Delete VariableRead', 'Delete Invocation']",299
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 . METHOD_3 ( ) ) + STRING_1 ) , VAR_1 ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 . METHOD_3 ( ) ) + STRING_1 ) , VAR_1 ) ; java.lang.System.err.println ( VAR_1 ) ; VAR_4 = false ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",300
"protected void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( name ) ) ) ; if ( VAR_1 != ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 , INT_1 ) ; } }",protected void METHOD_1 ( int VAR_1 ) { if ( VAR_1 != ( VAR_2 ) ) { } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",302
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) throws java.lang.Exception { new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_3 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) throws java.lang.Exception { new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) . METHOD_1 ( ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",303
"public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . list ( VAR_3 class , STRING_1 ) . METHOD_3 ( METHOD_4 ( ) ) ) ; }",public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . list ( STRING_1 ) . METHOD_3 ( METHOD_4 ( ) ) ) ; },['Delete TypeAccess'],304
"public void remove ( int position ) { VAR_1 . remove ( VAR_2 . get ( position ) ) ; VAR_2 . remove ( position ) ; METHOD_1 ( position ) ; METHOD_2 ( position , VAR_2 . size ( ) ) ; VAR_3 . METHOD_3 ( ) ; }","public void remove ( int position ) { VAR_1 . remove ( VAR_2 . get ( position ) ) ; VAR_2 . remove ( position ) ; METHOD_1 ( position ) ; METHOD_2 ( position , VAR_2 . size ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",305
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , null , VAR_5 ) ; TYPE_1 . METHOD_4 ( true ) ; TYPE_2 . METHOD_5 ( this , STRING_1 , VAR_6 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , null , VAR_5 ) ; TYPE_2 . METHOD_5 ( this , STRING_1 , VAR_6 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",306
public void init ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_4 ; TYPE_1 . METHOD_1 ( ) . init ( ) ; METHOD_2 ( ) ; },public void init ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_4 ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",307
"public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_3 ) return false ; VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; return false ; }","public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; return false ; }","['Delete FieldRead', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",308
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete Invocation', 'Delete Invocation']",309
public java.lang.String METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { return this . name ; } return ( ( this . VAR_1 ) + CHAR_1 ) + ( this . name ) ; },public java.lang.String METHOD_1 ( ) { return ( ( this . VAR_1 ) + CHAR_1 ) + ( this . name ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",310
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",311
public TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; return VAR_1 . query ( VAR_2 . getContext ( ) ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 . query ( VAR_2 . getContext ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",312
"public void METHOD_1 ( int state , float VAR_1 ) { if ( ( state == ( VAR_2 ) ) && ( VAR_1 == 0 ) ) { TYPE_1 . METHOD_2 ( VAR_3 ) ; } }","public void METHOD_1 ( int state , float VAR_1 ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",313
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( new android.content.Intent ( this , VAR_2 class ) , VAR_3 , VAR_4 ) ; } METHOD_3 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( new android.content.Intent ( this , VAR_2 class ) , VAR_3 , VAR_4 ) ; } }",['Delete Invocation'],314
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( TYPE_1 . METHOD_1 ( ) ) ; java.lang.System.out.println ( java.util.Calendar.getInstance ( ) . getTime ( ) ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( TYPE_1 . METHOD_1 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",316
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) . isEmpty ( ) ) { VAR_3 . METHOD_3 ( context , VAR_2 ) ; } else { VAR_3 . METHOD_4 ( context , VAR_2 ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_4 ( context , VAR_2 ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",317
"public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , 1 , null ) ; assertEquals ( 1 , VAR_3 . size ( ) ) ; }","public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , 1 , null ) ; java.lang.System.out.println ( VAR_3 . get ( 0 ) ) ; assertEquals ( 1 , VAR_3 . size ( ) ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert Invocation', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert Literal']",321
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( false , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",323
"public void METHOD_1 ( ) { size ( TYPE_1 . METHOD_2 ( INT_1 ) , TYPE_1 . METHOD_2 ( INT_2 ) ) ; METHOD_3 ( INT_3 ) ; }","public void METHOD_1 ( ) { size ( TYPE_1 . METHOD_2 ( INT_1 ) , TYPE_1 . METHOD_2 ( INT_2 ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",324
"public TYPE_1 METHOD_1 ( TYPE_2 listener ) { TYPE_3 VAR_1 = new TYPE_3 ( listener , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; return new TYPE_4 ( VAR_5 . METHOD_3 ( STRING_1 ) , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 listener ) { TYPE_3 VAR_1 = new TYPE_3 ( listener , VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; return new TYPE_4 ( VAR_5 . METHOD_3 ( STRING_1 ) , VAR_1 ) ; }",['Delete FieldRead'],325
public boolean METHOD_1 ( TYPE_1 path ) { java.lang.String VAR_1 = VAR_2 . getName ( ) ; if ( ( VAR_3 . split ( STRING_1 ) . length ) != INT_1 ) return false ; return VAR_3 . startsWith ( VAR_4 ) ; },public boolean METHOD_1 ( TYPE_1 path ) { java.lang.String VAR_1 = VAR_2 . getName ( ) ; return VAR_3 . startsWith ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",326
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . get ( VAR_1 ) . METHOD_2 ( ) ; return VAR_2 . get ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",327
private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_4 ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_4 ) ; },"['Delete Literal', 'Delete Invocation']",328
"public void execute ( ) throws java.lang.Exception { METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void execute ( ) throws java.lang.Exception { METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",329
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 ) | ( VAR_2 ) ) ) ; TYPE_2 . METHOD_3 ( 0 ) ; METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 ) | ( VAR_2 ) ) ) ; TYPE_2 . METHOD_3 ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",331
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( null ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",332
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",333
"public boolean METHOD_1 ( java.lang.String query ) { TYPE_1 . METHOD_2 ( STRING_1 , query ) ; METHOD_3 ( query ) ; TYPE_2 . METHOD_4 ( query ) ; return false ; }",public boolean METHOD_1 ( java.lang.String query ) { METHOD_3 ( query ) ; TYPE_2 . METHOD_4 ( query ) ; return false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",335
"public static TYPE_1 METHOD_1 ( long VAR_1 ) { TYPE_2 args = new TYPE_2 ( ) ; args . METHOD_2 ( VAR_2 , VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( args ) ; return VAR_3 ; }",public static TYPE_1 METHOD_1 ( long VAR_1 ) { TYPE_2 args = new TYPE_2 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( args ) ; return VAR_3 ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",336
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; if ( ( TYPE_2 . METHOD_3 ( ) ) != null ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( this ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",337
"public boolean METHOD_1 ( int VAR_1 , TYPE_1 event ) { METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 == ( VAR_2 ) ) { METHOD_3 ( 1 ) ; } return super . METHOD_1 ( VAR_1 , event ) ; }","public boolean METHOD_1 ( int VAR_1 , TYPE_1 event ) { if ( VAR_1 == ( VAR_2 ) ) { METHOD_3 ( 1 ) ; } return super . METHOD_1 ( VAR_1 , event ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",338
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 = false ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( false ) ; } if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 = false ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",339
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",340
"public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( ( ( VAR_1 == null ) || ( VAR_1 . METHOD_3 ( ) ) ) , STRING_1 ) ; this . VAR_1 = VAR_1 ; return this ; }",public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",341
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , 1 ) ; VAR_3 . METHOD_3 ( 1 ) ; METHOD_4 ( intent , VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , 1 ) ; METHOD_4 ( intent , VAR_4 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",342
"private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( this . VAR_5 ) ; return VAR_1 ; }","private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( this . VAR_5 ) ; return VAR_1 ; }",['Delete FieldRead'],343
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { java.lang.System.out.println ( ( STRING_1 + VAR_2 ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } else { java.lang.System.out.println ( STRING_2 ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",344
public void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },['Delete Invocation'],345
public void start ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void start ( ) { METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",346
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",347
"public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_1 . METHOD_2 ( ) ; }",['Delete Invocation'],348
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ( VAR_2 ) != null ) || ( ( VAR_3 ) != null ) ) { METHOD_2 ( this . VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",349
public final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; },public final void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",350
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) >= ( VAR_3 . length ) ) return ; int VAR_4 = METHOD_2 ( ) ; while ( ( VAR_2 ) <= VAR_4 ) { METHOD_3 ( VAR_1 ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_4 = METHOD_2 ( ) ; while ( ( VAR_2 ) <= VAR_4 ) { METHOD_3 ( VAR_1 ) ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",351
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 , INT_2 , 1 ) ; VAR_2 . assertEquals ( true , VAR_1 . METHOD_3 ( 0 , INT_3 ) ) ; }","public void METHOD_1 ( ) { VAR_2 . assertEquals ( true , VAR_1 . METHOD_3 ( 0 , INT_3 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",352
protected void METHOD_1 ( ) { METHOD_2 ( ) ; },protected void METHOD_1 ( ) { },['Delete Invocation'],354
public void METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( java.lang.Exception VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",355
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",356
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_1 , VAR_2 ) . show ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; ( ( TYPE_2 ) ( METHOD_5 ( ) ) ) . METHOD_6 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_1 , VAR_2 ) . show ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; }","['Delete TypeReference', 'Delete Invocation', 'Delete Invocation']",357
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 . getName ( ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",359
public java.lang.Boolean METHOD_1 ( java.lang.String VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return true ; } catch ( TYPE_1 VAR_3 ) { return false ; } },public java.lang.Boolean METHOD_1 ( java.lang.String VAR_1 ) { try { VAR_2 . METHOD_3 ( VAR_1 ) ; return true ; } catch ( TYPE_1 VAR_3 ) { return false ; } },"['Delete TypeAccess', 'Delete Invocation']",360
private java.lang.String METHOD_1 ( ) { return METHOD_1 ( VAR_1 ) ; },private java.lang.String METHOD_1 ( ) { return METHOD_1 ( this . VAR_1 ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",361
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; METHOD_2 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; },['Delete Invocation'],362
"private void METHOD_1 ( ) { android.content.Context context = getContext ( ) ; android.content.Intent intent = new android.content.Intent ( context , VAR_1 class ) ; intent . METHOD_2 ( VAR_2 ) ; context . METHOD_3 ( intent ) ; }","private void METHOD_1 ( ) { android.content.Context context = getContext ( ) ; android.content.Intent intent = new android.content.Intent ( context , VAR_1 class ) ; context . METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",363
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_7 . METHOD_2 ( VAR_8 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",364
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 . getContext ( ) , STRING_1 , VAR_2 ) . show ( ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( getContext ( ) , STRING_1 , VAR_2 ) . show ( ) ; }",['Update TypeAccess'],366
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; },['Delete Invocation'],367
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , null , this ) ; METHOD_4 ( true ) ; super . METHOD_1 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , null , this ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete Literal', 'Delete Invocation']",368
"public void METHOD_1 ( int VAR_1 , int data ) { VAR_2 [ VAR_1 ] = METHOD_2 ( data ) ; }","public void METHOD_1 ( int VAR_1 , int data ) { VAR_2 [ VAR_1 ] = data ; }","['Move VariableRead', 'Delete Invocation']",369
"public TYPE_1 put ( TYPE_2 key , TYPE_3 value ) { METHOD_1 ( ) . put ( key , value ) ; METHOD_2 ( ) ; return this ; }","public TYPE_1 put ( TYPE_2 key , TYPE_3 value ) { METHOD_1 ( ) . put ( key , value ) ; return this ; }",['Delete Invocation'],370
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",371
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( this ) . METHOD_3 ( 1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( this ) . METHOD_3 ( true ) ; METHOD_4 ( ) ; }",['Update Literal'],372
"public final synchronized float METHOD_1 ( ) { return VAR_1 . min ( 1.0F , ( ( ( float ) ( VAR_2 . get ( ) ) ) / ( VAR_3 . length ) ) ) ; }","public final synchronized float METHOD_1 ( ) { return VAR_1 . min ( 1.0F , 1.0F ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",373
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 , VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_2 , VAR_4 ) ; VAR_6 . METHOD_2 ( VAR_2 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_6 . METHOD_2 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",374
protected boolean METHOD_1 ( ) { return VAR_1 ; },protected boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete FieldRead']",375
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) , VAR_3 ) ; VAR_4 . add ( VAR_3 ) ; view . METHOD_3 ( VAR_3 ) ; VAR_3 = null ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) , VAR_3 ) ; view . METHOD_3 ( VAR_3 ) ; VAR_3 = null ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",376
"private void METHOD_1 ( ) { VAR_1 . put ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_4 , VAR_5 . METHOD_2 ( ) ) ; }","private void METHOD_1 ( ) { VAR_1 . put ( VAR_4 , VAR_5 . METHOD_2 ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",377
public void METHOD_1 ( float y ) { position . METHOD_1 ( y ) ; VAR_1 . METHOD_2 ( position ) ; METHOD_3 ( ) ; },public void METHOD_1 ( float y ) { position . METHOD_1 ( y ) ; VAR_1 . METHOD_2 ( position ) ; },['Delete Invocation'],379
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_3 ) ) VAR_4 . info ( ( STRING_1 + VAR_1 ) ) ; VAR_5 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_5 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",380
public void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( STRING_3 ) ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",381
public int METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == 0 ) { return 0 ; } return java.lang.Math.round ( ( ( ( float ) ( METHOD_3 ( ) ) ) / ( ( float ) ( METHOD_2 ( ) ) ) ) ) ; },public int METHOD_1 ( ) { return java.lang.Math.round ( ( ( ( float ) ( METHOD_3 ( ) ) ) / ( ( float ) ( METHOD_2 ( ) ) ) ) ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",382
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",383
"public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( getContext ( ) , STRING_1 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( getContext ( ) , STRING_1 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",384
"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; if ( METHOD_6 ( ) ) { METHOD_7 ( false ) ; } super . METHOD_1 ( ) ; }","protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; super . METHOD_1 ( ) ; }","['Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",386
"public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . set ( VAR_4 , true ) ; }",public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",387
public TYPE_1 METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( this ) ; return this . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( this ) ; return null ; },"['Insert Literal', 'Delete ThisAccess', 'Delete Invocation']",389
private void METHOD_1 ( TYPE_1 f ) { this . VAR_1 = f ; VAR_2 . METHOD_2 ( this . VAR_1 ) ; VAR_3 . METHOD_3 ( this . VAR_1 ) ; },private void METHOD_1 ( TYPE_1 f ) { this . VAR_1 = f ; VAR_2 . METHOD_2 ( this . VAR_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",391
public void delete ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 ) ; VAR_2 . add ( VAR_3 . id ) ; METHOD_2 ( ) . remove ( VAR_3 . id ) ; METHOD_3 ( ) ; VAR_4 . remove ( VAR_1 ) ; },public void delete ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 ) ; VAR_2 . add ( VAR_3 . id ) ; METHOD_2 ( ) . remove ( VAR_3 . id ) ; VAR_4 . remove ( VAR_1 ) ; },['Delete Invocation'],392
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },['Delete Invocation'],393
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( ) ; return VAR_4 ; }",['Delete Invocation'],394
public void METHOD_1 ( ) { METHOD_2 ( 1 ) ; METHOD_3 ( VAR_1 ) ; java.util.Collection < TYPE_1 > values = VAR_2 . values ( ) ; for ( TYPE_1 VAR_3 : values ) { VAR_3 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { METHOD_2 ( 1 ) ; java.util.Collection < TYPE_1 > values = VAR_2 . values ( ) ; for ( TYPE_1 VAR_3 : values ) { VAR_3 . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",395
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; java.lang.System.exit ( VAR_1 ) ; },public void METHOD_1 ( ) { java.lang.System.exit ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",398
private static java.lang.String METHOD_1 ( double VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; return VAR_4 . format ( VAR_1 ) ; },private static java.lang.String METHOD_1 ( double VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; return VAR_4 . format ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",399
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = false ; } },['Delete Invocation'],400
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( TYPE_1 . METHOD_1 ( ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( TYPE_1 . METHOD_1 ( ) ) ; },['Delete Invocation'],401
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = new TYPE_1 ( ) ; METHOD_4 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_4 ( ) ; return VAR_1 ; },"['Delete Invocation', 'Delete Invocation']",402
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; } METHOD_5 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; } METHOD_5 ( ) ; },['Delete Invocation'],403
"public void METHOD_1 ( java.util.List < TYPE_1 > list ) { this . data = list ; METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 , ( ( STRING_1 + ( METHOD_4 ( ) ) ) + STRING_2 ) ) ; }",public void METHOD_1 ( java.util.List < TYPE_1 > list ) { this . data = list ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",404
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; TYPE_1 . METHOD_3 ( this , STRING_1 ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",405
"public void METHOD_1 ( ) { VAR_1 . put ( METHOD_2 ( ) , VAR_2 . get ( METHOD_2 ( ) ) . METHOD_3 ( ) ) ; }",public void METHOD_1 ( ) { VAR_1 . add ( METHOD_2 ( ) ) ; },"['Update Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",406
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete VariableRead', 'Delete Invocation']",408
public static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",409
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) ) ; VAR_4 . METHOD_3 ( VAR_2 , this ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) ) ; VAR_4 . METHOD_3 ( VAR_2 , this ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",410
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_1 ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( new TYPE_1 ( VAR_1 . METHOD_4 ( ) ) ) ; },"['Delete Invocation', 'Delete Invocation']",412
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",413
static void METHOD_1 ( java.lang.String query ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_3 ( query ) ; if ( VAR_2 != null ) { TYPE_2 . METHOD_4 ( VAR_2 ) ; } },static void METHOD_1 ( java.lang.String query ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_3 ( query ) ; if ( VAR_2 != null ) { TYPE_2 . METHOD_4 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",414
public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 : : new ) . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) ; return this ; },public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 : : new ) . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) ; },"['Delete ThisAccess', 'Delete Return']",415
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) ; },['Delete Invocation'],416
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) . METHOD_5 ( ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",417
private TYPE_1 METHOD_1 ( TYPE_2 c ) { java.lang.System.out.println ( c ) ; if ( METHOD_2 ( VAR_1 . type ( 0 ) ) ) { return METHOD_3 ( c ) ; } else { return METHOD_4 ( c ) ; } },private TYPE_1 METHOD_1 ( TYPE_2 c ) { if ( METHOD_2 ( VAR_1 . type ( 0 ) ) ) { return METHOD_3 ( c ) ; } else { return METHOD_4 ( c ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",418
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; new TYPE_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; new TYPE_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",419
"public static boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; return VAR_3 . METHOD_4 ( STRING_1 , VAR_4 class ) . METHOD_5 ( STRING_2 , VAR_1 ) . METHOD_6 ( ) ; }","public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_4 ( STRING_1 , VAR_4 class ) . METHOD_5 ( STRING_2 , VAR_1 ) . METHOD_6 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",421
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) < ( VAR_3 ) ) { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) < ( VAR_3 ) ) { METHOD_3 ( ) ; } },['Delete Invocation'],422
public void METHOD_1 ( android.content.Context context ) { METHOD_2 ( ) ; },public void METHOD_1 ( android.content.Context context ) { },['Delete Invocation'],423
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { }",['Delete Invocation'],424
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 event ) throws java.lang.Exception { VAR_2 . info ( STRING_1 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 event ) throws java.lang.Exception { METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",425
"private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , 0 ) ; VAR_1 . METHOD_2 ( INT_1 , 0 ) ; }","private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , 0 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",426
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Insert VariableRead']",427
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 ) ; }","['Delete VariableRead', 'Delete Invocation']",428
public void METHOD_1 ( TYPE_1 p ) { this . VAR_1 . add ( p ) ; },public void METHOD_1 ( TYPE_1 p ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",429
private void init ( android.view.View view ) { VAR_1 = 0 ; METHOD_1 ( view ) ; METHOD_2 ( VAR_2 ) ; },private void init ( android.view.View view ) { VAR_1 = 0 ; METHOD_1 ( view ) ; METHOD_2 ( 0 ) ; },"['Insert Literal', 'Delete TypeAccess']",430
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; init ( ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",432
"public void METHOD_1 ( android.view.View VAR_1 ) { ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) . setText ( VAR_4 . getString ( STRING_1 , STRING_2 ) ) ; METHOD_3 ( ) ; VAR_5 . METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) . setText ( VAR_4 . getString ( STRING_1 , STRING_2 ) ) ; VAR_5 . METHOD_4 ( ) ; }",['Delete Invocation'],433
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( true ) ; VAR_1 . METHOD_5 ( true ) ; VAR_1 . METHOD_6 ( VAR_3 ) ; VAR_1 . METHOD_7 ( VAR_4 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( true ) ; VAR_1 . METHOD_7 ( VAR_4 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",434
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 . METHOD_3 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",436
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_2 ) ; super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",437
"public void METHOD_1 ( ) { getContext ( ) . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) ; assertEquals ( STRING_4 , VAR_2 . METHOD_3 ( VAR_1 , STRING_5 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) ; assertEquals ( STRING_4 , VAR_2 . METHOD_3 ( VAR_1 , STRING_5 ) ) ; }","['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",438
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_2 ( listener ) ; VAR_2 . METHOD_2 ( listener ) ; },public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_2 ( listener ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",439
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_4 ( ) ; } }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",440
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( ) ; },['Delete Invocation'],441
"private java.lang.String METHOD_1 ( ) { TYPE_1 answer = METHOD_2 ( ) ; if ( answer == null ) { return STRING_1 ; } else if ( VAR_1 . equals ( VAR_2 ) ) { return ""0"" ; } return answer . METHOD_3 ( ) ; }",private java.lang.String METHOD_1 ( ) { TYPE_1 answer = METHOD_2 ( ) ; if ( answer == null ) { return STRING_1 ; } return answer . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Block']",442
public java.util.Collection < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( INT_1 ) ; return null ; },public java.util.Collection < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { return null ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",443
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",444
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . info ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_2 ) ) ) ) ; return STRING_3 + ( TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_2 ) ) ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . info ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_2 ) ) ) ) ; return STRING_3 + VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",445
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; }",public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",447
protected void execute ( ) { VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) ) ; },protected void execute ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",448
public void update ( ) { view . METHOD_1 ( VAR_1 ) ; },public void update ( ) { },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",451
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_3 ( TYPE_1 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( TYPE_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",452
public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",453
"public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . length ) ; }",public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",454
protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( VAR_3 ) ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) ; },['Delete TypeAccess'],455
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( null ) ; VAR_1 = VAR_2 ; METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( null ) ; VAR_1 = VAR_2 ; METHOD_3 ( null ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",456
public void METHOD_1 ( TYPE_1 context ) { context . METHOD_2 ( VAR_1 ) ; context . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 context ) { context . METHOD_2 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",457
"public void METHOD_1 ( ) { try { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; java.lang.System.exit ( ( - 1 ) ) ; } }","public void METHOD_1 ( ) { try { METHOD_2 ( ) ; METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; java.lang.System.exit ( ( - 1 ) ) ; } }",['Delete Invocation'],458
"public int METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > param ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ( STRING_1 + param ) ) ; return VAR_2 . METHOD_3 ( param ) ; }","public int METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > param ) throws java.lang.Exception { return VAR_2 . METHOD_3 ( param ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",459
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",460
"public void METHOD_1 ( java.lang.String result ) { METHOD_2 ( VAR_1 , result ) ; android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( i ) ; this . METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.String result ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( i ) ; this . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",461
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",463
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = VAR_3 . METHOD_2 ( null , VAR_4 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = VAR_3 . METHOD_2 ( null ) ; METHOD_3 ( VAR_2 ) ; }",['Delete TypeAccess'],464
public int METHOD_1 ( ) { METHOD_2 ( this . VAR_1 ) ; return VAR_2 ; },public void METHOD_1 ( ) { METHOD_2 ( this . VAR_1 ) ; },"['Update TypeReference', 'Delete FieldRead', 'Delete Return']",465
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( false ) ; METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",467
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( false ) ; METHOD_4 ( true ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( true ) ; METHOD_7 ( false ) ; METHOD_8 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( true ) ; METHOD_7 ( false ) ; METHOD_8 ( false ) ; },"['Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",468
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; VAR_8 . METHOD_3 ( VAR_7 ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; VAR_8 . METHOD_3 ( VAR_7 ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",469
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_3 ( ) ; super . METHOD_1 ( ) ; },['Delete Invocation'],470
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; return true ; },['Update TypeAccess'],471
public void METHOD_1 ( android.view.View view ) { VAR_1 . get ( i ) . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( android.view.View view ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",472
void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) == null ) { METHOD_2 ( ) ; } this . VAR_3 . toString ( ) ; },void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) == null ) { METHOD_2 ( ) ; } },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",473
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int i , long VAR_2 ) { java.lang.String VAR_3 = VAR_4 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int i , long VAR_2 ) { java.lang.String VAR_3 = VAR_4 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",474
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; view . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_2 . METHOD_5 ( ) . getName ( ) , STRING_1 , VAR_3 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = true ; view . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_2 . METHOD_5 ( ) . getName ( ) , STRING_1 , VAR_3 ) ) ; }",['Delete Invocation'],475
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) instanceof TYPE_2 ) { this . VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) instanceof TYPE_2 ) { VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } },"['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead']",476
public void METHOD_1 ( final TYPE_1 function ) { if ( VAR_1 . isEmpty ( ) ) { VAR_2 . METHOD_2 ( function ) ; } else { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_2 ( function ) ; } },public void METHOD_1 ( final TYPE_1 function ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_2 ( function ) ; },"['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",477
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",478
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",479
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) { VAR_1 . METHOD_3 ( ) ; init ( ) ; VAR_3 . start ( ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) { init ( ) ; VAR_3 . start ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",481
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , names , VAR_3 , VAR_4 , values , VAR_5 ) ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , names , VAR_3 , VAR_4 , values ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",483
public void start ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 . start ( ) ; },public void start ( ) { VAR_2 . start ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",484
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 . get ( position ) . getName ( ) ) ; VAR_4 . add ( position ) ; VAR_5 . i ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 . get ( position ) . getName ( ) ) ; VAR_5 . i ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",485
"public void METHOD_1 ( ) { METHOD_2 ( true , false , true , true , false , false ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( true , false , true , true , false ) ; METHOD_3 ( VAR_1 ) ; }",['Delete Literal'],487
public void METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 . METHOD_2 ( STRING_1 ) ) METHOD_3 ( ) ; else if ( ( VAR_2 ) == null ) METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( VAR_1 ) ; if ( VAR_1 . METHOD_2 ( STRING_1 ) ) METHOD_3 ( ) ; else if ( ( VAR_2 ) == null ) METHOD_4 ( ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Insert TypeAccess']",490
public void METHOD_1 ( ) { VAR_1 . info ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ; VAR_1 . info ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ; },public void METHOD_1 ( ) { VAR_1 . info ( METHOD_2 ( VAR_2 ) ) ; VAR_1 . info ( METHOD_3 ( VAR_2 ) ) ; },"['Update TypeAccess', 'Update TypeAccess']",491
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; },public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { return null ; },"['Insert Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",492
"protected void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; }",protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",493
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . add ( VAR_6 ) ; VAR_7 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . add ( VAR_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",494
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . i ( STRING_1 , STRING_2 ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",495
"public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; }","public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",497
"public void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) . METHOD_3 ( ) ; }","public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) . METHOD_3 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",498
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } else { super . METHOD_1 ( ) ; METHOD_4 ( VAR_3 , VAR_4 ) ; } }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_4 ( VAR_3 , VAR_4 ) ; }","['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",500
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; if ( METHOD_4 ( VAR_2 ) ) TYPE_1 . METHOD_5 ( view ) . METHOD_6 ( VAR_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_3 ( ) ; if ( METHOD_4 ( VAR_2 ) ) TYPE_1 . METHOD_5 ( view ) . METHOD_6 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",501
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . METHOD_5 ( ) ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_4 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . METHOD_5 ( ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",502
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; getActivity ( ) . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",503
public void METHOD_1 ( ) { VAR_1 . append ( STRING_1 ) . append ( CHAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",504
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ( STRING_2 + VAR_1 ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",505
"protected void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",506
"private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; } else { VAR_1 . METHOD_7 ( VAR_2 ) ; } }",private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; METHOD_6 ( ) ; } else { VAR_1 . METHOD_7 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",507
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . remove ( VAR_5 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",509
"public double METHOD_1 ( int i , int j , java.util.ArrayList < TYPE_1 > data ) { java.lang.System.out.println ( METHOD_2 ( data , i , j ) ) ; return METHOD_2 ( data , i , j ) ; }","public double METHOD_1 ( int i , int j , java.util.ArrayList < TYPE_1 > data ) { return METHOD_2 ( data , i , j ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",510
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; ( ( TYPE_2 ) ( VAR_2 . context ) ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete FieldRead', 'Delete Invocation']",511
public synchronized void METHOD_1 ( ) { this . VAR_1 . output ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; this . VAR_1 . output ( STRING_2 ) ; },public synchronized void METHOD_1 ( ) { this . VAR_1 . output ( STRING_1 ) ; METHOD_3 ( ) ; this . VAR_1 . output ( STRING_2 ) ; },['Delete Invocation'],512
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { java.lang.System.out.println ( ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess']",513
public java.util.Iterator iterator ( ) { return VAR_1 . iterator ( ) ; },public java.util.Iterator iterator ( ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",514
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; final TYPE_1 VAR_2 = build ( ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { final TYPE_1 VAR_2 = build ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",515
"public boolean METHOD_1 ( TYPE_1 message ) { if ( message . METHOD_2 ( VAR_1 , false ) ) { TYPE_2 . METHOD_3 ( getActivity ( ) , VAR_2 , message , VAR_3 , VAR_4 ) ; return true ; } return false ; }","public boolean METHOD_1 ( TYPE_1 message ) { if ( message . METHOD_2 ( VAR_1 , false ) ) { TYPE_2 . METHOD_3 ( getActivity ( ) , VAR_2 , message , VAR_4 ) ; return true ; } return false ; }",['Delete TypeAccess'],516
public void add ( TYPE_1 data ) { VAR_1 [ ( ( n ) ++ ) ] = data ; if ( ( n ) == ( VAR_2 ) ) { METHOD_1 ( ( ( VAR_2 ) * INT_1 ) ) ; } },public void add ( TYPE_1 data ) { VAR_1 [ ( ( n ) ++ ) ] = data ; if ( ( n ) == ( VAR_2 ) ) { METHOD_1 ( ( ( n ) * INT_1 ) ) ; } },['Update FieldRead'],517
protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",518
public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Delete TypeAccess', 'Delete Invocation']",519
public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; break ; } },public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : METHOD_2 ( VAR_4 ) ; break ; } },['Delete Invocation'],520
"protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; else this . METHOD_3 ( ) . METHOD_4 ( this . METHOD_5 ( ) , null ) ; }",protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Block']",521
"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.Object VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 , null ) ; METHOD_3 ( VAR_5 , VAR_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.Object VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 , null ) ; assertNotNull ( VAR_1 ) ; METHOD_3 ( VAR_5 , VAR_1 ) ; }","['Insert Invocation', 'Insert VariableRead']",522
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 event = VAR_2 . get ( VAR_3 ) ; if ( event == null ) { return false ; } VAR_4 . METHOD_1 ( VAR_1 ) ; VAR_5 . setValue ( VAR_6 ) ; return true ; },private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 event = VAR_2 . get ( VAR_3 ) ; if ( event == null ) { return false ; } VAR_4 . METHOD_1 ( VAR_1 ) ; return true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",523
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_3 . METHOD_2 ( ) ; METHOD_5 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; METHOD_5 ( VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",524
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( ) ; TYPE_3 = VAR_1 . METHOD_4 ( this ) ; },public void METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( ) ; TYPE_3 = VAR_1 . METHOD_4 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation']",525
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; },['Delete Invocation'],527
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",528
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) , VAR_4 ) ; VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_5 , VAR_3 ) , VAR_6 ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_4 ) ; VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_5 ) , VAR_6 ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",529
void update ( ) { METHOD_1 ( ) ; },void update ( ) { },['Delete Invocation'],530
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( ( this . VAR_2 . size ( ) ) > 0 ) this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( ( this . VAR_2 . size ( ) ) > 0 ) this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; },['Delete Invocation'],531
static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( false ) ; java.lang.System.out.println ( STRING_1 ) ; },static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",532
public final void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; this . VAR_2 . METHOD_3 ( false ) ; TYPE_3 . METHOD_4 ( this . VAR_3 ) ; },public final void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; TYPE_3 . METHOD_4 ( this . VAR_3 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",536
"public static TYPE_1 METHOD_1 ( byte [ ] src ) { java.lang.System.out.println ( VAR_1 . length ) ; return ( ( TYPE_1 ) ( TYPE_2 . METHOD_1 ( src , 0 ) . METHOD_2 ( ) ) ) ; }","public static TYPE_1 METHOD_1 ( byte [ ] src ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_1 ( src , 0 ) . METHOD_2 ( ) ) ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']",537
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , id ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete FieldRead', 'Delete Invocation']",538
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 error ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",539
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . path ( VAR_3 . var ( STRING_1 ) ) . build ( ) ; VAR_4 . assertEquals ( STRING_2 , VAR_5 . toString ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . path ( var ( STRING_1 ) ) . build ( ) ; VAR_4 . assertEquals ( STRING_2 , VAR_5 . toString ( ) ) ; }",['Update TypeAccess'],540
private java.lang.String METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { return getString ( STRING_1 ) ; } TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; return VAR_3 . format ( VAR_1 ) ; },private java.lang.String METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { return null ; } TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; return VAR_3 . format ( VAR_1 ) ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",542
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; METHOD_2 ( VAR_1 , VAR_4 , VAR_5 , false ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; METHOD_2 ( VAR_1 , VAR_4 , VAR_5 , false ) ; }",['Delete Invocation'],543
public TYPE_1 METHOD_1 ( ) { final int VAR_1 = - 1 ; this . VAR_2 . METHOD_2 ( VAR_3 ) ; return METHOD_3 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( ) { final int VAR_1 = - 1 ; return METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",544
public java.util.Collection < TYPE_1 > getView ( ) { return VAR_1 . values ( ) ; },public java.util.Collection < TYPE_1 > getView ( ) { return view ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",545
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( VAR_1 ) ; VAR_3 . info ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",546
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 ) ) ; VAR_2 . METHOD_4 ( this ) ; TYPE_3 . METHOD_5 ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 ) ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",547
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",549
public void METHOD_1 ( ) { buffer . METHOD_1 ( this ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation']",550
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation']",551
"public boolean equals ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( this . VAR_3 ) ) { return true ; } return equals ( VAR_1 , 0.0F ) ; }","public boolean equals ( TYPE_1 VAR_1 ) { return equals ( VAR_1 , 0.0F ) ; }","['Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",552
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 , VAR_2 ) ; java.lang.Thread . METHOD_2 ( INT_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",553
"static void METHOD_1 ( int [ ] a , int [ ] p ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( a , p ) ; VAR_1 . METHOD_5 ( a , p ) ; }","static void METHOD_1 ( int [ ] a , int [ ] p ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( a , p ) ; VAR_1 . METHOD_5 ( a , p ) ; }","['Delete TypeAccess', 'Delete Invocation']",554
public java.lang.String [ ] METHOD_1 ( ) { if ( VAR_1 . equals ( STRING_1 ) ) { return new java.lang.String [ 0 ] ; } java.lang.String [ ] VAR_2 = VAR_1 . split ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; return VAR_2 ; },public java.lang.String [ ] METHOD_1 ( ) { if ( VAR_1 . equals ( STRING_1 ) ) { return new java.lang.String [ 0 ] ; } java.lang.String [ ] VAR_2 = VAR_1 . split ( VAR_3 ) ; return VAR_2 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",555
"public boolean METHOD_1 ( int index , boolean VAR_1 ) { TYPE_1 . METHOD_2 ( ( STRING_1 + ( this . METHOD_3 ( ) ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return false ; }","public boolean METHOD_1 ( int index , boolean VAR_1 ) { TYPE_1 . METHOD_2 ( ( STRING_1 + ( this . METHOD_3 ( ) ) ) ) ; METHOD_5 ( ) ; return false ; }",['Delete Invocation'],556
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },protected void METHOD_1 ( ) { VAR_2 . setEnabled ( false ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",557
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( METHOD_3 ( ) . getColor ( VAR_5 ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",558
"public TYPE_1 METHOD_1 ( long VAR_1 , long length ) { return new TYPE_2 ( this . source , VAR_1 , length , VAR_2 , this . fileName , this . VAR_3 ) ; }","public TYPE_1 METHOD_1 ( long VAR_1 , long length ) { return new TYPE_2 ( this . source , VAR_1 , length , VAR_2 , this . fileName ) ; }","['Delete ThisAccess', 'Delete FieldRead']",560
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } TYPE_1 . METHOD_2 ( getActivity ( ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . setState ( VAR_3 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . setState ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",561
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; VAR_1 . METHOD_5 ( ) ; }",['Delete Invocation'],562
public void METHOD_1 ( int VAR_1 ) { VAR_2 . init ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . init ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",563
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( this ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( this ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",565
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_7 . METHOD_3 ( VAR_2 ) ; VAR_8 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",566
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( false ) ; VAR_1 . METHOD_6 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( false ) ; },"['Delete TypeAccess', 'Delete Invocation']",567
public static void METHOD_1 ( double VAR_1 ) { if ( VAR_1 > INT_1 ) { java.lang.System.out.println ( STRING_1 ) ; } else if ( VAR_1 >= FLOAT_1 ) { java.lang.System.out.println ( STRING_2 ) ; } else { java.lang.System.out.println ( STRING_3 ) ; } },public static void METHOD_1 ( double VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; if ( VAR_1 > INT_1 ) { java.lang.System.out.println ( STRING_1 ) ; } else if ( VAR_1 >= FLOAT_1 ) { java.lang.System.out.println ( STRING_2 ) ; } else { java.lang.System.out.println ( STRING_3 ) ; } },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",568
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_4 ( STRING_4 ) ; java.lang.System.out.println ( STRING_5 ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_4 ( STRING_4 ) ; java.lang.System.out.println ( STRING_5 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",569
public void METHOD_1 ( ) throws java.io.IOException { try { VAR_1 . delete ( VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { } },public void METHOD_1 ( ) throws java.io.IOException { try { } catch ( java.lang.Exception VAR_3 ) { } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",571
public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . METHOD_2 ( this ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert Invocation', 'Move TypeAccess', 'Insert VariableRead', 'Move TypeAccess', 'Insert VariableRead', 'Move TypeAccess', 'Insert VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",572
"float METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( VAR_2 , 0 , INT_1 ) ) / INT_2 ) + ( ( VAR_3 ) * INT_3 ) ; }",float METHOD_1 ( ) { return 0 ; },"['Move Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",573
"private TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_3 ) ; } return VAR_2 ; }",private TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_3 ) ; } return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",575
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 . get ( position ) ) ; METHOD_4 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_1 . METHOD_3 ( VAR_3 . get ( position ) ) ; METHOD_4 ( VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",576
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( data ) ; METHOD_4 ( data ) ; }","public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( data ) ; }","['Delete VariableRead', 'Delete Invocation']",579
"public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { TYPE_2 . METHOD_2 ( STRING_1 , ( ( STRING_2 + ( this . VAR_1 . size ( ) ) ) + STRING_3 ) ) ; return this . VAR_2 ; }",public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return this . VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",580
public void METHOD_1 ( java.lang.Object t ) { if ( t != null ) { java.lang.System.out.print ( VAR_1 . toString ( ) ) ; } else { java.lang.System.out.print ( STRING_1 ) ; } },public void METHOD_1 ( java.lang.Object t ) { if ( t != null ) { java.lang.System.out.print ( VAR_1 . toString ( ) ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",581
"public void METHOD_1 ( TYPE_1 < java.lang.Void > VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_3 . METHOD_4 ( ) , name , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 < java.lang.Void > VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",582
"public java.util.Collection < java.lang.String > METHOD_1 ( ) { return java.util.Arrays.asList ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","public java.util.Collection < java.lang.String > METHOD_1 ( ) { return java.util.Arrays.asList ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",583
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) . getTime ( ) ; this . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) . getTime ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",584
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_2 = METHOD_3 ( ) . getInt ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_3 ( ) . getInt ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",585
"public void METHOD_1 ( TYPE_1 < TYPE_2 > response ) { TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( TYPE_1 < TYPE_2 > response ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",586
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; if ( METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ) { METHOD_5 ( VAR_1 ) ; return true ; } return false ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",587
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",589
"boolean METHOD_1 ( java.lang.String id ) { if ( VAR_1 . add ( id ) ) { return true ; } VAR_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 . add ( STRING_2 ) ; return false ; }",boolean METHOD_1 ( java.lang.String id ) { if ( VAR_1 . add ( id ) ) { return true ; } return false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",590
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; } METHOD_4 ( true ) ; VAR_1 = METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_4 ( true ) ; VAR_1 = METHOD_5 ( ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",591
"public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , TYPE_3 id ) { VAR_2 . METHOD_2 ( STRING_1 ) ; return METHOD_1 ( VAR_1 , id . METHOD_3 ( ) ) ; }","public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , TYPE_3 id ) { return METHOD_1 ( VAR_1 , id . METHOD_3 ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",592
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( java.lang.String . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) . METHOD_7 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( java.lang.String . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_6 ( ) . METHOD_7 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",593
public boolean METHOD_1 ( byte VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; } else { return false ; } },public boolean METHOD_1 ( byte VAR_1 ) { return false ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",594
"public void METHOD_1 ( android.view.View view , int position ) { METHOD_2 ( VAR_1 . get ( position ) , false ) ; }","public void METHOD_1 ( android.view.View view , int position ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",595
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; if ( ( VAR_1 ) != null ) VAR_3 . start ( ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; if ( ( VAR_1 ) != null ) VAR_3 . start ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",597
"public java.lang.String getString ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = event ; return VAR_3 . replaceAll ( STRING_1 , VAR_4 . getName ( ) ) ; }","public java.lang.String getString ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = event ; java.lang.System.out.println ( VAR_4 . getName ( ) ) ; return VAR_3 . replaceAll ( STRING_1 , VAR_4 . getName ( ) ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert Invocation', 'Insert TypeAccess', 'Insert TypeAccess']",598
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( type ( ) , METHOD_3 ( ) , VAR_1 ) ; }",public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete Invocation', 'Delete Invocation']",599
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String data ) { java.lang.System.out.println ( ( ( STRING_1 + data ) + STRING_2 ) ) ; this . METHOD_1 ( VAR_1 , data , true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String data ) { this . METHOD_1 ( VAR_1 , data , true ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",600
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",601
public TYPE_1 METHOD_1 ( ) { this . VAR_1 . add ( VAR_2 ) ; return this ; },public void METHOD_1 ( ) { this . VAR_1 . add ( VAR_2 ) ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",602
"public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( VAR_1 , type ) ; }","['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",603
public final void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public final void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; },['Delete Invocation'],604
public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( FLOAT_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",605
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; },['Delete Invocation'],606
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },['Delete Invocation'],607
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( STRING_1 ) ; return VAR_2 . METHOD_3 ( ) ; },public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { return VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",608
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; TYPE_2 . METHOD_4 ( VAR_6 , java.lang.String.format ( STRING_1 , VAR_3 ) ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_6 , java.lang.String.format ( STRING_1 , VAR_3 ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",609
"public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.Object > data ) { TYPE_1 . METHOD_2 ( VAR_3 class ) ; }","public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.Object > data ) { TYPE_1 . METHOD_2 ( ) ; }",['Delete TypeAccess'],610
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( VAR_1 . id ( STRING_1 ) ) ; VAR_2 . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) ; METHOD_2 ( VAR_1 . id ( STRING_2 ) ) ; return new TYPE_1 ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( ) { VAR_2 . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) ; METHOD_2 ( VAR_1 . id ( STRING_2 ) ) ; return new TYPE_1 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",611
public void start ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } },public void start ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",612
"public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( getActivity ( ) , VAR_2 , VAR_3 ) . show ( ) ; }",public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",614
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( VAR_4 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",616
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { throw new TYPE_2 ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; } },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { throw new TYPE_2 ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) ; } },['Update FieldRead'],617
"private static void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; } }",private static void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_1 ) { } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",618
public void execute ( ) { VAR_1 . get ( STRING_1 ) . remove ( VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; VAR_1 . get ( STRING_1 ) . add ( VAR_3 ) ; },public void execute ( ) { VAR_1 . get ( STRING_1 ) . remove ( VAR_2 ) ; VAR_1 . get ( STRING_1 ) . add ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",620
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String value ) { if ( TYPE_3 . METHOD_2 ( value ) ) return this ; return METHOD_3 ( VAR_1 , ( value + STRING_1 ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String value ) { return METHOD_3 ( VAR_1 , ( value + STRING_1 ) ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete Return', 'Delete Block', 'Delete If']",621
public void start ( TYPE_1 context ) throws java.lang.Exception { METHOD_1 ( ) ; super . start ( context ) ; VAR_1 = this ; },public void start ( TYPE_1 context ) throws java.lang.Exception { super . start ( context ) ; VAR_1 = this ; },['Delete Invocation'],622
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",623
"public void start ( ) { view . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }",public void start ( ) { },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",624
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },['Delete Invocation'],625
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",627
public void METHOD_1 ( boolean show ) { java.lang.System.out.println ( ( STRING_1 + show ) ) ; VAR_1 . METHOD_2 ( show ) ; },public void METHOD_1 ( boolean show ) { VAR_1 . METHOD_2 ( show ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",628
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( context , VAR_3 class ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_4 ) ; VAR_2 . METHOD_2 ( STRING_2 , VAR_5 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( context , VAR_3 class ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_4 ) ; METHOD_3 ( VAR_2 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",629
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 = listener ; if ( listener == null ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 listener ) { VAR_1 = listener ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",630
"public void METHOD_1 ( ) { VAR_1 . set ( STRING_1 , STRING_2 ) ; VAR_1 . set ( STRING_3 , STRING_2 ) ; VAR_1 . set ( STRING_4 , STRING_2 ) ; java.lang.System.out.println ( VAR_1 . get ( STRING_5 ) ) ; VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . set ( STRING_5 , STRING_2 ) ; java.lang.System.out.println ( VAR_1 . get ( STRING_5 ) ) ; VAR_2 . METHOD_2 ( ) ; }","['Update TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",631
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ( ( ( name ) + STRING_1 ) + VAR_1 ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",632
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_1 = true ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_1 = true ; }",['Delete Invocation'],633
public void METHOD_1 ( ) { VAR_1 = true ; if ( ( t ) != null ) t . METHOD_2 ( ) ; ( ( TYPE_1 ) ( VAR_2 . METHOD_3 ( VAR_3 ) ) ) . setText ( STRING_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; if ( ( t ) != null ) t . METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",634
"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; METHOD_3 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",636
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { return VAR_1 ; },public METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeReference', 'Delete TypeReference']",637
public void METHOD_1 ( ) { while ( VAR_1 ) { update ( ) ; METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } },public void METHOD_1 ( ) { while ( VAR_1 ) { update ( ) ; METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",638
public void METHOD_1 ( boolean b ) { java.lang.System.err.println ( ( STRING_1 + b ) ) ; this . VAR_1 = b ; },public void METHOD_1 ( boolean b ) { this . VAR_1 = b ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",639
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , null ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , null ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return VAR_4 ; }",['Delete Invocation'],640
"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . getBoolean ( VAR_4 . getString ( VAR_5 ) , VAR_6 . METHOD_2 ( ) . getBoolean ( VAR_7 ) ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . getBoolean ( VAR_4 . getString ( VAR_5 ) , false ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",641
public java.lang.String METHOD_1 ( int VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( this . VAR_2 ) ; },public java.lang.String METHOD_1 ( int VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; },"['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead']",642
"public boolean METHOD_1 ( int p , int VAR_1 ) { return ( METHOD_2 ( p ) ) == ( METHOD_2 ( VAR_1 ) ) ; }","public boolean METHOD_1 ( int p , int VAR_1 ) { return false ; }","['Insert Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator']",643
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Insert VariableRead', 'Delete TypeAccess']",644
"public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view ) { VAR_2 . METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",645
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",646
private void METHOD_1 ( TYPE_1 msg ) { METHOD_2 ( STRING_1 ) ; this . VAR_1 = msg . METHOD_3 ( ) ; },private void METHOD_1 ( TYPE_1 msg ) { this . VAR_1 = msg . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",647
"public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; new TYPE_3 ( ) . METHOD_3 ( VAR_2 class ) . METHOD_4 ( args ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; new TYPE_3 ( ) . METHOD_3 ( VAR_2 class ) . METHOD_4 ( args ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",648
"public boolean METHOD_1 ( ) throws java.io.IOException , TYPE_1 { this . METHOD_2 ( ) ; return true ; }","public boolean METHOD_1 ( ) throws java.io.IOException , TYPE_1 { return true ; }","['Delete ThisAccess', 'Delete Invocation']",649
"public void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , ( STRING_2 + ( VAR_2 . size ( ) ) ) ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; }",public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",650
private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; TYPE_3 . METHOD_4 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { java.lang.System.out.println ( STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; TYPE_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",651
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( view ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; view . METHOD_3 ( ) ; view . METHOD_4 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( view ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; view . METHOD_4 ( ) ; } },"['Delete FieldRead', 'Delete Invocation']",653
private void init ( ) { VAR_1 = METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; VAR_5 = VAR_4 . METHOD_3 ( STRING_1 ) ; },private void init ( ) { VAR_1 = METHOD_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; VAR_5 = VAR_4 . METHOD_3 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",654
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; METHOD_5 ( 0 ) ; METHOD_3 ( ) . METHOD_6 ( true ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; METHOD_5 ( 0 ) ; },"['Delete Invocation', 'Delete Literal', 'Delete Invocation']",655
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } VAR_4 . remove ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",656
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) . size ( ) ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) . size ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",657
public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_2 ( ) . setText ( STRING_1 ) ; view . METHOD_3 ( ) . setText ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; METHOD_1 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",658
"public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( ) ; VAR_1 . METHOD_2 ( STRING_1 , event ) ; java.lang.System.out.println ( event ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( ) ; VAR_1 . METHOD_2 ( STRING_1 , event ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']",659
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_4 . METHOD_3 ( ) . METHOD_4 ( VAR_5 . METHOD_5 ( ) . length ( ) . METHOD_6 ( VAR_6 ) ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",660
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . add ( VAR_1 ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",662
public void start ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . start ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . start ( ) ; VAR_6 . METHOD_2 ( VAR_4 ) ; },public void start ( ) { VAR_2 . start ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . start ( ) ; VAR_6 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Invocation']",663
public void METHOD_1 ( ) { state . METHOD_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Invocation']",664
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String text ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( 1 , text ) ; VAR_3 . execute ( ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String text ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( 1 , text ) ; VAR_3 . execute ( ) ; }","['Delete VariableRead', 'Delete Invocation']",665
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",666
"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; if ( this . VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) { METHOD_5 ( VAR_1 ) ; } METHOD_6 ( VAR_1 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_6 ( VAR_1 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",667
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",668
"private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 , TYPE_2 { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_1 , false ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 , TYPE_2 { VAR_2 . METHOD_3 ( VAR_1 , false ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",669
"public void METHOD_1 ( java.lang.String VAR_1 ) { element ( VAR_2 ) . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { element ( VAR_2 ) . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; java.lang.System.out.println ( VAR_1 ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",670
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; assertTrue ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; assertTrue ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",671
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; TYPE_4 VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; return TYPE_1 . METHOD_5 ( ) ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_4 VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; return TYPE_1 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",672
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( false ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_4 ( ) ; } }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",673
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context ) { try { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_3 ( VAR_6 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context ) { try { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_3 ( VAR_6 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",674
"public boolean METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; return ! ( VAR_1 . METHOD_2 ( STRING_1 ) . contains ( ""unchecked"" ) ) ; }","public boolean METHOD_1 ( ) { return ! ( VAR_1 . METHOD_2 ( STRING_1 ) . contains ( ""unchecked"" ) ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",675
private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ( - 1 ) ) ; },private void METHOD_1 ( ) { METHOD_2 ( ( - 1 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",676
public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; setText ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; setText ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",677
"public void setText ( java.lang.String text ) { content = text ; VAR_1 . setText ( VAR_2 , text ) ; }",public void setText ( java.lang.String text ) { content = text ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",678
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },['Delete Invocation'],679
"public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ) ; }",public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( METHOD_2 ( VAR_1 ) ) ; },"['Insert Invocation', 'Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",681
public boolean METHOD_1 ( ) { return ( this . VAR_1 ) > ( this . VAR_2 ) ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) > ( this . VAR_2 ) ; },['Delete ThisAccess'],682
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; },['Delete Invocation'],683
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",684
public boolean METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { return TYPE_2 . METHOD_2 ( VAR_1 ) ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { return TYPE_2 . METHOD_2 ( url ) ; },"['Insert FieldRead', 'Delete VariableRead']",686
"public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 class , VAR_3 class , VAR_4 , VAR_5 ) ; }",public static void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",687
private void METHOD_1 ( ) { VAR_1 . remove ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_6 = VAR_3 . METHOD_3 ( VAR_4 ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_6 = VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",688
"public TYPE_1 METHOD_1 ( TYPE_2 id ) { TYPE_3 VAR_1 = METHOD_2 ( VAR_2 , id ) ; TYPE_1 VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( TYPE_2 id ) { TYPE_3 VAR_1 = METHOD_2 ( VAR_2 , id ) ; TYPE_1 VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 ) ; return VAR_3 ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",689
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { return true ; } else { VAR_2 . message += STRING_1 + ""\n"" ; java.lang.System.out.println ( ( STRING_1 + ""\n"" ) ) ; return false ; } }","public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { return true ; } else { VAR_2 . message += STRING_1 + ""\n"" ; return false ; } }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",690
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },['Delete Invocation'],692
"public void METHOD_1 ( int value , boolean VAR_1 ) { update ( ) ; view . METHOD_2 ( value , VAR_1 ) ; }","public void METHOD_1 ( int value , boolean VAR_1 ) { }","['Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",693
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { },"['Delete Invocation', 'Delete Invocation']",694
"public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( this , VAR_1 , VAR_2 ) . execute ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( this , VAR_1 ) . execute ( ) ; }",['Delete FieldRead'],696
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 , VAR_3 , VAR_4 ) . METHOD_2 ( ) . build ( ) ; VAR_5 . assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 , VAR_4 ) . METHOD_2 ( ) . build ( ) ; VAR_5 . assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( ) ) ; }",['Delete FieldRead'],697
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",699
protected void METHOD_1 ( java.lang.Void VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( ) ; if ( VAR_3 ) VAR_4 . METHOD_4 ( VAR_5 ) ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { if ( VAR_3 ) VAR_4 . METHOD_4 ( VAR_5 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",701
"public void METHOD_1 ( int VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , ( STRING_2 + VAR_1 ) ) ; TYPE_1 . METHOD_2 ( this ) ; }",public void METHOD_1 ( int VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",702
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . execute ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_3 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . execute ( VAR_1 ) ; },"['Delete Literal', 'Delete Invocation']",703
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 . METHOD_2 ( context ) . METHOD_6 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",704
public void METHOD_1 ( byte VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.System.out.println ( ( STRING_1 + ( this . VAR_1 ) ) ) ; },public void METHOD_1 ( byte VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",705
public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( getString ( VAR_3 ) ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",706
"public void set ( java.lang.String key , java.lang.String value ) throws TYPE_1 { TYPE_2 . METHOD_1 ( VAR_1 , ( ( ( STRING_1 + key ) + STRING_2 ) + value ) ) ; TYPE_3 . METHOD_2 ( ) . set ( key , value ) ; }","public void set ( java.lang.String key , java.lang.String value ) throws TYPE_1 { TYPE_3 . METHOD_2 ( ) . set ( key , value ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",707
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) . setState ( VAR_4 . getValue ( VAR_5 . String class ) ) ; METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",708
public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 VAR_2 = new TYPE_1 ( ( ( ( VAR_3 ) + STRING_1 ) + ( VAR_1 ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 . add ( VAR_2 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 VAR_2 = new TYPE_1 ( ( ( ( VAR_3 ) + STRING_1 ) + ( VAR_1 ) ) ) ; VAR_4 . add ( VAR_2 ) ; return VAR_2 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",709
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( this , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_2 ( this , VAR_5 , VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( this , VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",710
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_1 = true ; if ( VAR_2 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_1 = true ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",711
"public void METHOD_1 ( java.lang.Object target , TYPE_1 errors ) { TYPE_2 . METHOD_2 ( errors , ""name"" , STRING_1 ) ; TYPE_2 . METHOD_2 ( errors , STRING_2 , STRING_3 ) ; TYPE_2 . METHOD_2 ( errors , STRING_4 , STRING_5 ) ; }","public void METHOD_1 ( java.lang.Object target , TYPE_1 errors ) { TYPE_2 . METHOD_2 ( errors , ""name"" , STRING_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",712
public void METHOD_1 ( ) { VAR_1 . assertTrue ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",714
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",715
"public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , name , time , METHOD_2 ( time ) , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , name , METHOD_2 ( time ) , VAR_2 , VAR_3 ) ; }",['Delete FieldRead'],716
static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",718
"public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",719
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",720
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( title ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_3 ( title ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",721
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_1 ) ) ; VAR_2 . METHOD_5 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_1 ) ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",723
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 ( ) ) ; }",private void METHOD_1 ( ) { METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",724
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 ) ; getActivity ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_4 ( ) ; }","['Delete Invocation', 'Delete Invocation']",725
"private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; if ( VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_4 , ( STRING_1 + ( VAR_2 ) ) ) ; } }",private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",726
public java.lang.String METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { return STRING_1 ; } return VAR_1 . get ( 0 ) . getText ( ) . toString ( ) ; },public java.lang.String METHOD_1 ( ) { return VAR_1 . get ( 0 ) . getText ( ) . toString ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",727
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( VAR_1 ) . METHOD_3 ( 1 , VAR_5 ) ; TYPE_2 . METHOD_4 ( VAR_4 , VAR_6 , VAR_2 , VAR_3 , VAR_7 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( VAR_1 ) . METHOD_3 ( 1 , VAR_5 ) ; METHOD_4 ( VAR_4 , VAR_6 , VAR_2 , VAR_3 , VAR_7 ) ; }",['Update TypeAccess'],728
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_4 . show ( ) ; } else METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_4 . show ( ) ; } }","['Delete Invocation', 'Delete Block']",729
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { return ( ( METHOD_2 ( ) . METHOD_3 ( ) ) && ( ! ( METHOD_4 ( VAR_1 ) ) ) ) && ( METHOD_5 ( VAR_2 . METHOD_6 ( VAR_1 , VAR_3 ) , VAR_1 ) ) ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { return ( METHOD_2 ( ) . METHOD_3 ( ) ) && ( ! ( METHOD_4 ( VAR_1 ) ) ) ; },"['Move BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator']",730
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",731
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . start ( ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . start ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",732
"public void METHOD_1 ( TYPE_1 msg ) { super . METHOD_1 ( msg ) ; METHOD_2 ( VAR_1 ) ; if ( ! ( METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( VAR_3 , VAR_3 ) ; } }",public void METHOD_1 ( TYPE_1 msg ) { super . METHOD_1 ( msg ) ; METHOD_2 ( VAR_1 ) ; if ( ! ( METHOD_3 ( ) ) ) { } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",733
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",734
"public void METHOD_1 ( final int VAR_1 , final int VAR_2 , final android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , data ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( final int VAR_1 , final int VAR_2 , final android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , data ) ; }",['Delete Invocation'],735
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_2 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { return METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",736
public void init ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; },public void init ( ) { METHOD_1 ( ) ; },['Delete Invocation'],737
public java.lang.String METHOD_1 ( ) { VAR_1 . error ( STRING_1 ) ; return STRING_2 ; },public java.lang.String METHOD_1 ( ) { return STRING_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",738
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; try { METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { try { METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",739
public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 ) ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",740
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { ( this . VAR_2 ) -- ; return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ( VAR_2 ) > 0 ) { ( this . VAR_2 ) -- ; return true ; } return false ; },['Update FieldRead'],742
"public void METHOD_1 ( TYPE_1 msg ) { TYPE_2 . METHOD_2 ( this , ( ( java.lang.String ) ( VAR_1 . obj ) ) , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( TYPE_1 msg ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",743
public void execute ( ) { METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) ; java.lang.System.out.println ( ( ( STRING_1 + ( METHOD_3 ( ) . getName ( ) ) ) + STRING_2 ) ) ; },public void execute ( ) { METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",744
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 . getValue ( VAR_4 . String class ) ) ; VAR_5 . setText ( VAR_6 . getText ( ) . toString ( ) ) ; VAR_7 . show ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 . getValue ( VAR_4 . String class ) ) ; VAR_7 . show ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",745
"public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( new TYPE_1 ( VAR_2 , VAR_1 ) ) ; this . VAR_3 . METHOD_3 ( STRING_1 , this . VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( new TYPE_1 ( VAR_2 , VAR_1 ) ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",746
public TYPE_1 remove ( java.lang.Long id ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( id ) ; if ( VAR_1 == null ) { throw new java.lang.Exception ( STRING_1 ) ; } VAR_3 . delete ( VAR_1 ) ; return METHOD_2 ( VAR_1 ) ; },public TYPE_1 remove ( java.lang.Long id ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( id ) ; if ( VAR_1 == null ) { throw new java.lang.Exception ( STRING_1 ) ; } VAR_3 . delete ( VAR_1 ) ; return VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",747
"public void handle ( TYPE_1 event ) { java.lang.String name = event . METHOD_1 ( VAR_1 , VAR_2 ) . getString ( ) ; node . METHOD_2 ( name ) . build ( ) ; METHOD_3 ( name ) ; }","public void handle ( TYPE_1 event ) { java.lang.String name = event . METHOD_1 ( ""name"" , VAR_2 ) . getString ( ) ; node . METHOD_2 ( name ) . build ( ) ; METHOD_3 ( name ) ; }","['Insert Literal', 'Delete TypeAccess']",749
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = VAR_3 . getData ( ) ; METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getData ( ) ; METHOD_4 ( VAR_4 ) ; },"['Delete Invocation', 'Delete Invocation']",750
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 VAR_1 = new TYPE_2 ( null ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_3 . error ( VAR_2 ) ; throw VAR_2 ; } },public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 VAR_1 = new TYPE_2 ( null ) ; } catch ( java.lang.Exception VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; VAR_3 . error ( VAR_2 ) ; throw VAR_2 ; } },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",751
public void METHOD_1 ( double VAR_1 ) { METHOD_2 ( ( ( METHOD_3 ( ) ) * VAR_1 ) ) ; TYPE_1 . METHOD_4 ( this ) ; },public void METHOD_1 ( double VAR_1 ) { METHOD_2 ( ( ( METHOD_3 ( ) ) * VAR_1 ) ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",752
protected void end ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . set ( 0 ) ; },protected void end ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",753
public int compareTo ( final TYPE_1 VAR_1 ) { return VAR_1 . METHOD_1 ( ) . compareTo ( this . METHOD_1 ( ) ) ; },public int compareTo ( final TYPE_1 VAR_1 ) { return 0 ; },"['Insert Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",754
"public boolean METHOD_1 ( java.io.File VAR_1 , java.lang.String name ) { return name . METHOD_2 ( STRING_1 ) ; }","public boolean METHOD_1 ( java.io.File VAR_1 , java.lang.String name ) { java.lang.System.out.println ( name ) ; return name . METHOD_2 ( STRING_1 ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",755
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . assertEquals ( VAR_4 , VAR_1 . METHOD_2 ( VAR_2 , key ) ) ; }","public void METHOD_1 ( ) { VAR_3 . assertEquals ( VAR_4 , VAR_1 . METHOD_2 ( VAR_2 , key ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",756
"public void METHOD_1 ( ) { VAR_1 . assertEquals ( INT_1 , TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 ) ) ; }","public void METHOD_1 ( ) { assertEquals ( INT_1 , TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 ) ) ; }",['Update TypeAccess'],757
"public java.io.InputStream METHOD_1 ( final TYPE_1 VAR_1 ) { final java.net.URL VAR_2 = METHOD_2 ( VAR_1 ) ; return TYPE_2 . METHOD_3 ( VAR_3 , VAR_2 , VAR_1 ) ; }",public java.io.InputStream METHOD_1 ( final TYPE_1 VAR_1 ) { final java.net.URL VAR_2 = METHOD_2 ( VAR_1 ) ; return TYPE_2 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete VariableRead']",758
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_3 ( intent , VAR_2 , VAR_3 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_3 ( intent , VAR_2 , VAR_3 ) ; }",['Delete Invocation'],759
void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",760
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable VAR_4 ) { VAR_5 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( STRING_3 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable VAR_4 ) { VAR_5 . i ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",761
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . remove ( this ) ; return super . METHOD_1 ( ) ; } return null ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return super . METHOD_1 ( ) ; } else { return null ; } },"['Insert Block', 'Move Return', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",762
public void METHOD_1 ( final java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( ( VAR_2 ) - > VAR_2 . METHOD_1 ( VAR_1 ) ) ; },public void METHOD_1 ( final java.lang.Object VAR_1 ) { METHOD_2 ( ( VAR_2 ) - > VAR_2 . METHOD_1 ( VAR_1 ) ) ; },['Update TypeAccess'],764
public void METHOD_1 ( ) { if ( VAR_1 ) return ; try { METHOD_2 ( context ) ; } catch ( TYPE_1 VAR_2 ) { VAR_3 . fail ( VAR_2 ) ; } },public void METHOD_1 ( ) { try { METHOD_2 ( context ) ; } catch ( TYPE_1 VAR_2 ) { VAR_3 . fail ( VAR_2 ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",765
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( event ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete VariableRead', 'Delete Invocation']",766
"public void METHOD_1 ( java.lang.String VAR_1 , int status , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( false ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , int status , TYPE_1 VAR_2 ) { }","['Delete Invocation', 'Delete Literal', 'Delete Invocation']",767
"private int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return VAR_3 . getId ( ) ; } return VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; }",private int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return VAR_3 . getId ( ) ; } return VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",768
public synchronized void METHOD_1 ( ) { try { METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },public synchronized void METHOD_1 ( ) { try { VAR_1 . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",769
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; if ( TYPE_2 . METHOD_3 ( this ) ) { return ; } TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( TYPE_2 . METHOD_3 ( this ) ) { return ; } TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",770
"public TYPE_1 METHOD_1 ( int i ) { append ( i ) ; stringBuilder.append ( ""\n"" ) ; return this ; }","public TYPE_1 METHOD_1 ( int i ) { return append ( i ) . append ( ""\n"" ) ; }","['Insert Invocation', 'Move Invocation', 'Move Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess']",771
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; if ( true ) { java.lang.System.out.println ( STRING_2 ) ; } if ( false ) { java.lang.System.out.println ( STRING_3 ) ; } },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; if ( true ) { java.lang.System.out.println ( STRING_2 ) ; } },"['Delete Literal', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",772
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",775
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_1 ) ; VAR_3 . METHOD_2 ( ( ( VAR_4 ) * INT_1 ) ) ; VAR_5 . add ( VAR_3 ) ; },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 . add ( VAR_1 ) ; },"['Update Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",776
"public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , METHOD_4 ( ) ) ; }",public void METHOD_1 ( TYPE_1 event ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",777
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",778
"public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , true ) ; METHOD_2 ( STRING_1 , STRING_2 , null , true ) ; METHOD_2 ( STRING_1 , STRING_4 , STRING_3 , true ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , true ) ; METHOD_2 ( STRING_1 , STRING_4 , STRING_3 , true ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",779
public void METHOD_1 ( ) { ( index ) -- ; if ( ( index ) == ( - 1 ) ) { index = ( VAR_1 . size ( ) ) - 1 ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { ( index ) -- ; if ( ( index ) == ( - 1 ) ) { index = ( VAR_1 . size ( ) ) - 1 ; } },['Delete Invocation'],780
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.System.exit ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",781
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 , METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; super . METHOD_1 ( VAR_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",782
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",783
"public void METHOD_1 ( TYPE_1 result ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . toString ( ) ) ; VAR_2 . METHOD_3 ( ( ( java.util.ArrayList < TYPE_3 > ) ( result . METHOD_4 ( ) ) ) ) ; }",public void METHOD_1 ( TYPE_1 result ) { VAR_2 . METHOD_3 ( ( ( java.util.ArrayList < TYPE_3 > ) ( result . METHOD_4 ( ) ) ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",784
public void METHOD_1 ( TYPE_1 event ) { if ( METHOD_2 ( ) ) return ; if ( event . METHOD_3 ( ) . equals ( STRING_1 ) ) { VAR_1 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) { if ( event . METHOD_3 ( ) . equals ( STRING_1 ) ) { VAR_1 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; } },"['Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",785
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",786
"public void add ( java.lang.String type , TYPE_1 file , int VAR_1 , java.lang.String message , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 . set ( VAR_2 ) ; VAR_6 . set ( VAR_3 ) ; VAR_7 . set ( VAR_4 ) ; }","public void add ( java.lang.String type , TYPE_1 file , int VAR_1 , java.lang.String message , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_6 . set ( VAR_3 ) ; VAR_7 . set ( VAR_4 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",787
"public void METHOD_1 ( double VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; }",public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",788
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },['Delete Invocation'],789
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",790
"public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_4 ( intent ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",791
public void METHOD_1 ( ) { if ( ( counter ) > 1 ) { METHOD_2 ( ) ; ( counter ) -- ; METHOD_3 ( counter ) ; } else { METHOD_2 ( ) ; super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( counter ) > 1 ) { METHOD_2 ( ) ; ( counter ) -- ; METHOD_3 ( counter ) ; } else { super . METHOD_1 ( ) ; } },['Delete Invocation'],792
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , key , VAR_3 ) ; TYPE_3 message = VAR_4 . METHOD_3 ( VAR_5 , VAR_1 ) ; VAR_4 . METHOD_4 ( message ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( key , VAR_3 ) ; TYPE_3 message = VAR_4 . METHOD_3 ( VAR_5 , VAR_1 ) ; VAR_4 . METHOD_4 ( message ) ; }",['Delete TypeAccess'],794
"public void METHOD_1 ( java.lang.Object error ) { if ( error == null ) return ; TYPE_1 . METHOD_2 ( this , error , VAR_1 ) ; }","public void METHOD_1 ( java.lang.Object error ) { if ( error == null ) return ; TYPE_1 . METHOD_2 ( this , error ) ; }",['Delete TypeAccess'],795
"public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; android.content.Intent i = new android.content.Intent ( this , VAR_1 class ) ; i . METHOD_3 ( VAR_2 ) ; METHOD_4 ( i ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( this , VAR_1 class ) ; i . METHOD_3 ( VAR_2 ) ; METHOD_4 ( i ) ; }",['Delete Invocation'],796
private void init ( ) { VAR_1 . METHOD_1 ( STRING_1 ) ; },private void init ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",797
public void update ( float VAR_1 ) { this . VAR_2 += VAR_3 ; METHOD_1 ( this . VAR_2 ) ; java.lang.System.out.println ( this . VAR_2 ) ; },public void update ( float VAR_1 ) { this . VAR_2 += VAR_3 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",798
public boolean METHOD_1 ( TYPE_1 item ) { if ( VAR_1 . METHOD_1 ( item ) ) { return true ; } if ( ( item . METHOD_2 ( ) ) == ( VAR_2 ) ) { } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_2 ) ) { } return super . METHOD_1 ( item ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",799
public void METHOD_1 ( ) { METHOD_2 ( ) ; super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; },['Delete Invocation'],800
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) ) ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; }","['Delete Invocation', 'Delete Invocation']",801
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( this ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",802
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( VAR_4 ) ) ) . METHOD_4 ( STRING_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",803
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; ( ( TYPE_1 ) ( VAR_2 . METHOD_3 ( ) ) ) . start ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",804
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; },private void METHOD_1 ( ) { TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",805
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_1 ) ; VAR_2 . setText ( java.lang.Integer.toString ( VAR_3 . METHOD_3 ( ) ) ) ; METHOD_4 ( ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_1 ) ; VAR_2 . setText ( java.lang.Integer.toString ( VAR_3 . METHOD_3 ( ) ) ) ; }",['Delete Invocation'],806
public void METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_3 ) ) ; METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_3 ) ) ; } },['Delete Invocation'],807
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , intent ) ; return super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , intent ) ; METHOD_2 ( intent ) ; return super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; }","['Insert Invocation', 'Insert VariableRead']",808
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; METHOD_4 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",810
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_2 ( METHOD_3 ( ) . getString ( VAR_2 ) ) ; METHOD_4 ( true ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_2 ( METHOD_3 ( ) . getString ( VAR_2 ) ) ; }","['Delete Literal', 'Delete Invocation']",811
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 . update ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . update ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",812
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",814
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setValue ( 0 ) ; VAR_3 . setText ( VAR_4 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . setText ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",815
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; getActivity ( ) . METHOD_4 ( VAR_6 ) . METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",816
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",817
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return STRING_1 ; } return TYPE_1 . METHOD_2 ( VAR_2 ) . format ( VAR_3 . getTime ( ) ) ; },public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_2 ) . format ( VAR_3 . getTime ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",818
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else { VAR_3 . setEnabled ( false ) ; VAR_2 . METHOD_5 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { VAR_3 . setEnabled ( false ) ; VAR_2 . METHOD_5 ( ) ; } },['Delete Invocation'],819
"public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 msg ) { if ( VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + msg ) ) ; VAR_1 . METHOD_3 ( STRING_2 , new java.lang.Object [ ] { msg } ) ; } }","public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 msg ) { if ( VAR_2 ) { VAR_1 . METHOD_3 ( STRING_2 , new java.lang.Object [ ] { msg } ) ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",820
public void METHOD_1 ( TYPE_1 node ) { METHOD_2 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 node ) { METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",821
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",822
"public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 ) ; } VAR_4 . METHOD_3 ( ) ; return VAR_5 . METHOD_4 ( VAR_1 ) ; }",public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_4 . METHOD_3 ( ) ; return VAR_5 . METHOD_4 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",823
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; },['Delete Invocation'],824
"public void METHOD_1 ( int VAR_1 , java.util.ArrayList data ) { VAR_2 . setEnabled ( true ) ; if ( data != null ) { VAR_3 . i ( STRING_1 , VAR_4 . toString ( ) ) ; } }","public void METHOD_1 ( int VAR_1 , java.util.ArrayList data ) { if ( data != null ) { VAR_3 . i ( STRING_1 , VAR_4 . toString ( ) ) ; } }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",826
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( new TYPE_2 ( ) ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_3 ( new TYPE_2 ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",827
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",828
"public static void METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; TYPE_2 VAR_3 = TYPE_3 . METHOD_3 ( context ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_1 = null ; } }",public static void METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) != null ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_3 ( context ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_1 = null ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",829
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , 0 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",830
"protected void execute ( ) { VAR_1 . METHOD_1 ( 0 , FLOAT_1 , 0 , 0 ) ; }",protected void execute ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",831
"public int METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_1 . size ( ) ) ) ) ; return VAR_1 . size ( ) ; }",public int METHOD_1 ( ) { return VAR_1 . size ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",832
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_4 , VAR_6 ) ; return STRING_1 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_4 ) ; return STRING_1 ; }",['Delete TypeAccess'],833
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 class . toString ( ) , STRING_1 ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . setText ( null ) ; VAR_4 . METHOD_3 ( null ) ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 class . toString ( ) , STRING_1 ) ; VAR_2 . setEnabled ( false ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",834
"protected void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; }","protected void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",835
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",836
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; TYPE_4 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",837
protected void METHOD_1 ( java.lang.String result ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( java.lang.String result ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( true ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",838
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { return VAR_3 ; } else if ( VAR_1 == ( VAR_3 ) ) { return VAR_4 ; } else { return VAR_2 ; } },private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 ; },"['Move Return', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",839
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; VAR_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( false ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; VAR_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( false ) ; }",['Delete Invocation'],840
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_6 . METHOD_2 ( VAR_2 ) ; VAR_7 . METHOD_2 ( VAR_2 ) ; VAR_8 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_6 . METHOD_2 ( VAR_2 ) ; VAR_7 . METHOD_2 ( VAR_2 ) ; VAR_8 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",841
"private int METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) if ( TYPE_2 . METHOD_2 ( VAR_1 , i ) ) { VAR_2 ++ ; } return VAR_2 ; }","private int METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) if ( METHOD_2 ( VAR_1 , i ) ) { VAR_2 ++ ; } return VAR_2 ; }",['Update TypeAccess'],842
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_1 . METHOD_2 ( VAR_2 , listener , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_1 . METHOD_2 ( VAR_2 , listener ) ; }",['Delete TypeAccess'],843
public void init ( ) { VAR_1 . METHOD_1 ( null ) ; VAR_2 = VAR_3 . getActivity ( ) ; VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_4 ) ; },public void init ( ) { VAR_2 = VAR_3 . getActivity ( ) ; VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",844
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ; new TYPE_3 ( VAR_1 ) . METHOD_5 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_3 ( VAR_1 ) . METHOD_5 ( true ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",845
"public void start ( TYPE_1 context ) throws java.lang.Exception { super . start ( context ) ; VAR_1 = this ; VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 , true ) ; }",public void start ( TYPE_1 context ) throws java.lang.Exception { super . start ( context ) ; VAR_1 = this ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",846
public static void METHOD_1 ( ) { VAR_1 . error ( STRING_1 ) ; TYPE_1 VAR_2 = VAR_3 . get ( ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . remove ( ) ; } },public static void METHOD_1 ( ) { TYPE_1 VAR_2 = VAR_3 . get ( ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . remove ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",847
public void METHOD_1 ( TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete Invocation', 'Delete Invocation']",849
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { this . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_2 ( ) ; }",['Delete ThisAccess'],850
public void METHOD_1 ( TYPE_1 node ) { java.lang.System.out.println ( STRING_1 ) ; this . error = true ; },public void METHOD_1 ( TYPE_1 node ) { this . error = true ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",851
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },['Delete Invocation'],852
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; this . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( INT_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; this . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( INT_1 ) ; },['Delete Invocation'],854
private static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; TYPE_1 . METHOD_2 ( ) ; },private static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",855
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( VAR_2 ) ; METHOD_3 ( intent ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 ) ; METHOD_3 ( intent ) ; },['Delete Invocation'],857
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; },['Delete Invocation'],858
"public void METHOD_1 ( java.lang.String VAR_1 , float VAR_2 ) { if ( VAR_2 >= 0 ) VAR_3 . get ( VAR_1 ) . METHOD_2 ( VAR_2 ) ; else TYPE_1 . METHOD_3 ( STRING_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , float VAR_2 ) { }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",859
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( VAR_2 ) ) ) ; METHOD_3 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",860
"public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_2 ( STRING_3 , STRING_4 ) ; METHOD_2 ( STRING_5 , STRING_6 ) ; METHOD_2 ( STRING_7 , STRING_8 ) ; METHOD_2 ( STRING_9 , STRING_10 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_2 ( STRING_3 , STRING_4 ) ; METHOD_2 ( STRING_5 , STRING_6 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",861
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",862
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 [ VAR_4 ] ) ; VAR_2 . METHOD_3 ( null ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_5 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 [ VAR_4 ] ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_5 ) ) ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",863
public void METHOD_1 ( TYPE_1 p ) { if ( ! ( VAR_1 . contains ( p ) ) ) { METHOD_2 ( p ) ; VAR_1 . add ( p ) ; TYPE_2 . METHOD_3 ( p ) ; } else METHOD_2 ( p ) ; },public void METHOD_1 ( TYPE_1 p ) { if ( ! ( VAR_1 . contains ( p ) ) ) { METHOD_2 ( p ) ; TYPE_2 . METHOD_3 ( p ) ; } else METHOD_2 ( p ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",864
"public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { if ( VAR_2 ) TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",865
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 = TYPE_2 . METHOD_3 ( INT_1 , INT_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; }","private void METHOD_1 ( ) { VAR_2 = TYPE_2 . METHOD_3 ( INT_1 , INT_1 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",866
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_3 ( ) ; METHOD_4 ( ) ; } },protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_4 ( ) ; } },['Delete Invocation'],867
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . replace ( VAR_4 , VAR_2 , VAR_5 ) . commit ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . replace ( VAR_4 , VAR_2 ) . commit ( ) ; }",['Delete TypeAccess'],869
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } else { VAR_2 . update ( ) ; } return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Block']",870
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",871
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { java.lang.Double VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( VAR_3 - ( this . VAR_4 ) ) ) ; } },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { java.lang.Double VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( VAR_3 - ( this . VAR_4 ) ) ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",872
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( 0 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",873
"public java.lang.String METHOD_1 ( ) { try { return VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_3 ( VAR_4 , null , VAR_2 ) ; METHOD_4 ( ) ; } return null ; }","public java.lang.String METHOD_1 ( ) { try { return VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_3 ( VAR_4 , null , VAR_2 ) ; } return null ; }",['Delete Invocation'],874
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; java.util.Collections.sort ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",875
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_3 ( true ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation']",876
void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( VAR_1 ) ; },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",877
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 , true , false , ( - 1 ) , ( - 1 ) , ( - 1 ) ) ) ; return this ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 , true , false , ( - 1 ) , ( - 1 ) , ( - 1 ) ) ) ; }","['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",878
public void update ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },public void update ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",879
"public void METHOD_1 ( TYPE_1 node ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( node , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 node ) { METHOD_3 ( node , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",880
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",881
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",882
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( ) . METHOD_5 ( STRING_1 , true ) . METHOD_6 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",883
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 to ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { return VAR_2 . METHOD_1 ( VAR_1 , to ) ; } else { java.lang.System.out.println ( STRING_1 ) ; return false ; } }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 to ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { } else { java.lang.System.out.println ( STRING_1 ) ; return false ; } return false ; }","['Insert Return', 'Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",884
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( view ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_4 ( view ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",885
public void start ( ) { VAR_1 . METHOD_1 ( ) ; },public void start ( ) { },"['Delete TypeAccess', 'Delete Invocation']",886
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { this . VAR_1 = VAR_1 ; TYPE_3 . METHOD_2 ( VAR_2 . getId ( ) , this ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { this . VAR_1 = VAR_1 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",887
public void METHOD_1 ( java.lang.Exception error ) { METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Exception error ) { },"['Delete TypeAccess', 'Delete Invocation']",888
public TYPE_1 build ( ) { if ( null == ( VAR_1 . METHOD_1 ( ) ) ) { VAR_1 . METHOD_2 ( 0 ) ; } return VAR_1 ; },public TYPE_1 build ( ) { return VAR_1 ; },"['Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",890
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( getContext ( ) , STRING_1 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { TYPE_4 . METHOD_3 ( getContext ( ) , STRING_1 , VAR_3 ) . show ( ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation']",891
"public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; }",public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_4 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",893
public void show ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( 1 ) ) ; },public void show ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",894
"public void put ( long key , int VAR_1 ) { VAR_2 = put ( VAR_2 , key , VAR_1 ) ; VAR_3 = true ; VAR_4 . put ( VAR_2 , VAR_5 ) ; java.lang.System.out.println ( STRING_1 ) ; METHOD_1 ( ) ; }","public void put ( long key , int VAR_1 ) { VAR_2 = put ( VAR_2 , key , VAR_1 ) ; VAR_3 = true ; VAR_4 . put ( VAR_2 , 1 ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",895
public void METHOD_1 ( TYPE_1 msg ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( 0 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( 1 ) ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( INT_1 ) ; super . METHOD_1 ( msg ) ; },public void METHOD_1 ( TYPE_1 msg ) { METHOD_3 ( ) ; super . METHOD_1 ( msg ) ; },"['Update Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",896
"public static TYPE_1 get ( android.content.Context context , android.view.View VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( context , VAR_1 ) ; } else { VAR_2 . METHOD_1 ( context ) ; } return VAR_2 ; }","public static TYPE_1 get ( android.content.Context context , android.view.View VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( context , VAR_1 ) ; } return VAR_2 ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block']",897
"private static java.util.ArrayList < TYPE_1 > METHOD_1 ( android.content.Context context , java.util.ArrayList < TYPE_2 > result ) { TYPE_3 . METHOD_2 ( result , VAR_1 , VAR_2 , VAR_3 ) ; return TYPE_3 . METHOD_3 ( context , result ) ; }","private static java.util.ArrayList < TYPE_1 > METHOD_1 ( android.content.Context context , java.util.ArrayList < TYPE_2 > result ) { TYPE_3 . METHOD_2 ( result , VAR_1 , VAR_2 ) ; return TYPE_3 . METHOD_3 ( context , result ) ; }",['Delete TypeAccess'],898
"public void METHOD_1 ( TYPE_1 id , java.net.URL url , TYPE_2 [ ] VAR_1 , byte [ ] data ) { VAR_2 . METHOD_1 ( id , url , VAR_1 , data ) ; }","public void METHOD_1 ( TYPE_1 id , java.net.URL url , TYPE_2 [ ] VAR_1 , byte [ ] data ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",900
"public void METHOD_1 ( TYPE_1 status ) { TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_1 + status ) ) ; }",public void METHOD_1 ( TYPE_1 status ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",901
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",902
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },['Delete Invocation'],904
"public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; } VAR_4 . add ( new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . add ( new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",905
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . assertThat ( VAR_1 , TYPE_2 . METHOD_3 ( VAR_3 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . assertThat ( VAR_1 , TYPE_2 . METHOD_3 ( VAR_3 ) ) ; assertTrue ( true ) ; }","['Insert Invocation', 'Insert Literal']",906
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; METHOD_3 ( ) ; METHOD_4 ( view ) ; METHOD_5 ( ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; METHOD_4 ( view ) ; METHOD_5 ( ) ; return view ; }",['Delete Invocation'],907
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete Invocation', 'Delete Invocation']",909
public static void METHOD_1 ( java.lang.String fileName ) { try { TYPE_1 . METHOD_2 ( fileName ) ; } catch ( TYPE_2 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_3 ( ) ; } },public static void METHOD_1 ( java.lang.String fileName ) { try { METHOD_2 ( fileName ) ; } catch ( TYPE_2 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_3 ( ) ; } },['Update TypeAccess'],910
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },['Delete ThisAccess'],911
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; if ( ( ( this . state ) == ( VAR_1 ) ) && ( ( VAR_2 . size ( ) ) == 0 ) ) { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( ( this . state ) == ( VAR_1 ) ) && ( ( VAR_2 . size ( ) ) == 0 ) ) { METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",912
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( false ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( false ) ; },['Delete Invocation'],913
protected void init ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) ) ; VAR_2 = new TYPE_3 ( ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },protected void init ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_3 ( ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",914
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; METHOD_3 ( false ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Delete Literal', 'Delete Invocation']",916
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",917
public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) throws TYPE_2 { this . VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) throws TYPE_2 { this . VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",918
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { java.lang.System.exit ( 0 ) ; },"['Update Invocation', 'Insert TypeAccess', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",919
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) ) ; },['Delete Invocation'],920
public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( INT_1 ) ; VAR_2 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",921
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",923
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; field . METHOD_6 ( ) ; VAR_2 . METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; field . METHOD_6 ( ) ; VAR_2 . METHOD_6 ( ) ; },['Delete Invocation'],925
"public boolean METHOD_1 ( java.lang.String message ) { TYPE_1 . METHOD_2 ( STRING_1 , message ) ; boolean VAR_1 = false ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 = ( VAR_2 . METHOD_1 ( message ) ) || VAR_1 ; } return VAR_1 ; }",public boolean METHOD_1 ( java.lang.String message ) { boolean VAR_1 = false ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 = ( VAR_2 . METHOD_1 ( message ) ) || VAR_1 ; } return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",926
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },protected void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",927
public java.util.Iterator < TYPE_1 > METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; return VAR_2 ; },public java.util.Iterator < TYPE_1 > METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeAccess', 'Delete Invocation']",929
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( false ) ; }","['Delete TypeAccess', 'Delete Invocation']",930
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_2 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",931
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_2 ( VAR_4 , STRING_1 ) ; return VAR_1 . METHOD_3 ( this . METHOD_4 ( ) , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_3 ( this . METHOD_4 ( ) , VAR_2 , false ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",932
"private void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.Exception VAR_2 ) { java.lang.System.out.println ( ( ( STRING_1 + ( VAR_3 . getId ( ) ) ) + STRING_2 ) ) ; VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","private void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.Exception VAR_2 ) { java.lang.System.out.println ( ( ( STRING_1 + ( this . VAR_3 . getId ( ) ) ) + STRING_2 ) ) ; VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",934
private void METHOD_1 ( ) { VAR_1 . init ( this ) ; },private void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",935
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; } },public static void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",936
"public void METHOD_1 ( java.util.List < java.util.HashMap < java.lang.String , java.lang.Object > > data , android.content.Context context ) { this . METHOD_2 ( ) ; for ( java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 : data ) { this . METHOD_3 ( VAR_1 , context ) ; } }","public void METHOD_1 ( java.util.List < java.util.HashMap < java.lang.String , java.lang.Object > > data , android.content.Context context ) { for ( java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 : data ) { this . METHOD_3 ( VAR_1 , context ) ; } }","['Delete ThisAccess', 'Delete Invocation']",937
public int METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { return VAR_3 . getSelection ( ) ; } return - 1 ; },public int METHOD_1 ( ) { return - 1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",938
"public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( name , path , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( name , path ) ; }",['Delete TypeAccess'],939
"public void METHOD_1 ( java.lang.String msg ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( msg ) ; METHOD_4 ( new android.content.Intent ( this , VAR_3 class ) ) ; this . METHOD_5 ( ) ; }","public void METHOD_1 ( java.lang.String msg ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( msg ) ; METHOD_4 ( new android.content.Intent ( this , VAR_3 class ) ) ; }","['Delete ThisAccess', 'Delete Invocation']",940
public boolean update ( ) { boolean VAR_1 = false ; if ( ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) { VAR_1 = true ; } return VAR_1 ; },public boolean update ( ) { boolean VAR_1 = false ; if ( ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) { VAR_1 = true ; } java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",941
public boolean METHOD_1 ( java.lang.String query ) { METHOD_2 ( query ) ; METHOD_3 ( query ) ; return true ; },public boolean METHOD_1 ( java.lang.String query ) { METHOD_3 ( query ) ; return true ; },"['Delete VariableRead', 'Delete Invocation']",942
"private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( 0 , INT_1 , INT_2 , INT_1 ) ; }",private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",943
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",944
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",945
public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ( ( this . METHOD_3 ( ) ) + ( this . METHOD_4 ( ) ) ) ) ; },public double METHOD_1 ( ) { return 1 ; },"['Update TypeReference', 'Insert Literal', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",947
"public int METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; }",public int METHOD_1 ( TYPE_1 VAR_1 ) { return 0 ; },"['Insert Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",948
"public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) . setEnabled ( true ) ; }",public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",949
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . fail ( ) ; } catch ( TYPE_2 VAR_2 ) { } finally { METHOD_3 ( ) ; } },public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . fail ( ) ; } catch ( TYPE_2 VAR_2 ) { } },['Delete Invocation'],950
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; if ( ! ( VAR_3 ) ) { TYPE_1 . METHOD_3 ( VAR_4 , STRING_1 ) ; METHOD_4 ( ) ; } else { VAR_5 . i ( VAR_4 , STRING_2 ) ; } }","public void METHOD_1 ( ) { VAR_2 = false ; if ( ! ( VAR_3 ) ) { TYPE_1 . METHOD_3 ( VAR_4 , STRING_1 ) ; METHOD_4 ( ) ; } else { VAR_5 . i ( VAR_4 , STRING_2 ) ; } }","['Delete TypeAccess', 'Delete Invocation']",951
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( this ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( this ) ; },['Delete Invocation'],954
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; if ( ! ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 . token ) ) ) VAR_4 . fail ( STRING_1 ) ; }","public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 . token ) ) ) VAR_4 . fail ( STRING_1 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",955
"public TYPE_1 path ( java.lang.String path ) { this . path = path ; this . VAR_1 = TYPE_1 . METHOD_1 ( this . VAR_2 , this . VAR_3 , this . path , this . VAR_4 ) ; return this ; }","public TYPE_1 path ( java.lang.String path ) { this . path = path ; this . VAR_1 = METHOD_1 ( this . VAR_2 , this . VAR_3 , this . path , this . VAR_4 ) ; return this ; }",['Update TypeAccess'],956
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 . add ( VAR_4 . name ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",957
"public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( key , result ) ; VAR_2 . METHOD_1 ( result ) ; }","public void METHOD_1 ( TYPE_1 result ) { METHOD_3 ( key , result ) ; VAR_2 . METHOD_1 ( result ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",958
public void METHOD_1 ( ) { ( ( TYPE_1 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete Invocation']",959
private void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; } },private void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_3 ( STRING_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",960
"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_1 , VAR_5 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",961
private void METHOD_1 ( ) { double VAR_1 = this . VAR_2 . METHOD_2 ( ) ; java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( ) { double VAR_1 = this . VAR_2 . METHOD_2 ( ) ; METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",962
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } }",public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",963
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( null == ( VAR_2 ) ) { VAR_3 = VAR_1 ; METHOD_2 ( VAR_4 ) ; METHOD_2 ( VAR_5 ) ; } else { VAR_6 . set ( VAR_1 ) ; } },public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( null == ( VAR_2 ) ) { VAR_3 = VAR_1 ; METHOD_2 ( VAR_4 ) ; } else { VAR_6 . set ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",964
public void METHOD_1 ( android.view.View view ) { TYPE_1 data = new TYPE_1 ( ) ; data . METHOD_2 ( STRING_1 ) ; data . METHOD_3 ( INT_1 ) ; data . METHOD_4 ( ) ; METHOD_5 ( TYPE_1 . METHOD_6 ( VAR_1 class ) ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 data = new TYPE_1 ( ) ; data . METHOD_2 ( STRING_1 ) ; data . METHOD_3 ( INT_1 ) ; data . METHOD_4 ( ) ; METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ; },['Delete TypeAccess'],965
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",966
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation']",967
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; this . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; this . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; this . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",968
public void remove ( ) { super . remove ( ) ; VAR_1 . remove ( ) ; VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 . METHOD_2 ( this ) ; },public void remove ( ) { super . remove ( ) ; VAR_1 . remove ( ) ; VAR_2 . METHOD_1 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",970
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",971
public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; java.lang.System.out.println ( STRING_5 ) ; },public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; java.lang.System.out.println ( STRING_5 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",972
public void METHOD_1 ( float time ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ( ( long ) ( time * FLOAT_1 ) ) ) ; if ( METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; VAR_2 . start ( ) ; } },public void METHOD_1 ( float time ) { VAR_1 . METHOD_2 ( ( ( long ) ( time * FLOAT_1 ) ) ) ; if ( METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; VAR_2 . start ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",973
private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_4 ( ( ( TYPE_2 ) ( event . METHOD_5 ( ) ) ) ) ; },private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",974
public static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; },public static void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; },['Update TypeAccess'],976
public void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; METHOD_2 ( ) ; VAR_1 . setEnabled ( true ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",977
private void METHOD_1 ( ) { this . METHOD_2 ( ) ; },private void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete Invocation']",978
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . label ( ) ) ) ) ; METHOD_3 ( id ) ; VAR_4 . METHOD_4 ( ( ( VAR_5 ) + 1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . label ( ) ) ) ) ; METHOD_3 ( id ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",979
public int METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; },public int METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",980
public synchronized void add ( final TYPE_1 VAR_1 ) { if ( this . VAR_2 . contains ( VAR_1 ) ) { return ; } this . VAR_2 . add ( VAR_1 ) ; METHOD_1 ( ) ; },public synchronized void add ( final TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",982
public java.lang.String METHOD_1 ( ) { return VAR_1 . toLowerCase ( ) ; },public java.lang.String METHOD_1 ( ) { return answer ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",983
public void step ( double VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; VAR_2 . step ( VAR_1 ) ; },public void step ( double VAR_1 ) { VAR_2 . step ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",984
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( CHAR_1 ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",985
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",986
"public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_3 ) == VAR_2 ) { METHOD_2 ( ) ; } else super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_3 ) == VAR_2 ) { } else super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; }",['Delete Invocation'],987
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; },public void METHOD_1 ( ) { VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",990
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; if ( VAR_3 != null ) { METHOD_2 ( VAR_3 ) ; } else { java.lang.System.out.println ( STRING_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_3 != null ) { } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",991
"public long METHOD_1 ( long offset ) { offset = ( offset < 0 ) ? 0 : offset ; VAR_1 . METHOD_2 ( METHOD_3 ( ) , offset ) ; return VAR_2 . METHOD_1 ( offset ) ; }",public long METHOD_1 ( long offset ) { offset = ( offset < 0 ) ? 0 : offset ; return VAR_2 . METHOD_1 ( offset ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",993
"void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , this ) ; VAR_2 . METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( VAR_4 ) ; } }",void METHOD_1 ( ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( VAR_4 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",994
public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( position ) ; VAR_2 . remove ( position ) ; METHOD_3 ( ) ; METHOD_4 ( position ) ; },public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( position ) ; VAR_2 . remove ( position ) ; METHOD_4 ( position ) ; },['Delete Invocation'],995
public void METHOD_1 ( final java.lang.String [ ] VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( final java.lang.String [ ] VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete VariableRead']",996
"public void METHOD_1 ( int x , int y ) { VAR_1 [ x ] [ y ] = new TYPE_1 ( 0 , false ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( int x , int y ) { VAR_1 [ x ] [ y ] = new TYPE_1 ( 0 , false ) ; }",['Delete Invocation'],998
"private void METHOD_1 ( ) { this . METHOD_2 ( INT_1 , INT_2 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( STRING_1 ) ; this . METHOD_5 ( false ) ; this . METHOD_6 ( true ) ; }",private void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess', 'Delete Literal', 'Delete Invocation']",999
public void METHOD_1 ( ) { if ( ( VAR_1 . length ) > 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { METHOD_3 ( getActivity ( ) ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . length ) > 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { METHOD_3 ( ) ; } },['Delete Invocation'],1000
"public static void METHOD_1 ( java.lang.String msg ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + msg ) ) ; }",public static void METHOD_1 ( java.lang.String msg ) { TYPE_1 . METHOD_2 ( ( STRING_1 + msg ) ) ; },['Delete TypeAccess'],1001
public void start ( ) { this . METHOD_1 ( ) ; },public void start ( ) { },"['Delete ThisAccess', 'Delete Invocation']",1002
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result ) { METHOD_2 ( ( STRING_1 + result ) ) ; if ( null == ( VAR_2 ) ) { return ; } VAR_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , result ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result ) { METHOD_2 ( ( STRING_1 + result ) ) ; if ( null == ( VAR_2 ) ) { return ; } METHOD_4 ( VAR_1 , result ) ; }","['Delete TypeAccess', 'Delete Invocation']",1003
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( this . VAR_1 ) ) { return ; } this . VAR_1 = VAR_1 ; if ( ( VAR_3 ) == null ) { return ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( this . VAR_1 ) ) { return ; } this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1004
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; return TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ; },public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) ; return TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ; },['Delete Invocation'],1006
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , getContext ( ) ) ; getActivity ( ) . METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , getContext ( ) ) ; }","['Delete Invocation', 'Delete Invocation']",1007
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . setText ( item . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( getString ( VAR_3 ) ) . setValue ( item . METHOD_2 ( ) ) ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . setText ( item . METHOD_2 ( ) ) ; return true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1008
public void METHOD_1 ( ) { try { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } VAR_5 = false ; },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } VAR_5 = false ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1009
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . setText ( STRING_1 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1010
public void METHOD_1 ( TYPE_1 output ) { VAR_1 . add ( output ) ; VAR_2 . set ( value ) ; },public void METHOD_1 ( TYPE_1 output ) { VAR_1 . add ( output ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1011
public void METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1012
"public java.util.HashMap < TYPE_1 , java.util.Date > METHOD_1 ( ) { return this . VAR_1 ; }","public java.util.HashMap < TYPE_1 , java.util.Date > METHOD_1 ( ) { return null ; }","['Insert Literal', 'Delete ThisAccess', 'Delete FieldRead']",1013
private void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . add ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_3 . size ( ) ) ) ) ; VAR_2 . METHOD_2 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . add ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1014
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . startTime ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",1016
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . update ( VAR_1 , VAR_2 ) ; VAR_4 . update ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . update ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1017
protected boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) < 0 ) { return true ; } return ( ( METHOD_2 ( ) ) > 0 ) && ( ( METHOD_3 ( ) ) < ( METHOD_2 ( ) ) ) ; },protected boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) > 0 ) && ( ( METHOD_3 ( ) ) < ( METHOD_2 ( ) ) ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1018
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1019
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1020
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , ( STRING_1 + ( TYPE_2 . METHOD_3 ( ) . name ( ) ) ) ) ; VAR_1 . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1021
public boolean METHOD_1 ( java.lang.String query ) { METHOD_2 ( this ) ; if ( STRING_1 . equals ( query ) ) { VAR_1 . METHOD_3 ( STRING_2 ) ; } else { VAR_1 . METHOD_3 ( query ) ; } METHOD_4 ( VAR_1 ) ; return true ; },public boolean METHOD_1 ( java.lang.String query ) { if ( STRING_1 . equals ( query ) ) { VAR_1 . METHOD_3 ( STRING_2 ) ; } else { VAR_1 . METHOD_3 ( query ) ; } METHOD_4 ( VAR_1 ) ; return true ; },"['Delete ThisAccess', 'Delete Invocation']",1022
"public void METHOD_1 ( android.view.View view , int position ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + position ) ) ; if ( VAR_2 ) { VAR_3 . METHOD_3 ( position ) ; VAR_4 . METHOD_4 ( position ) ; } }","public void METHOD_1 ( android.view.View view , int position ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + position ) ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1023
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 , 0 , VAR_3 ) ; METHOD_3 ( VAR_4 , this . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 , 0 ) ; METHOD_3 ( VAR_4 , this . METHOD_4 ( ) ) ; }",['Delete TypeAccess'],1024
"public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; assertEquals ( STRING_1 , VAR_3 . toString ( ) ) ; }",public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1025
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , ( ( VAR_2 ) + STRING_1 ) ) ; this . VAR_3 . METHOD_3 ( this . METHOD_4 ( ) ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_3 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",1026
"private void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_3 , VAR_1 ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) ) ; METHOD_6 ( STRING_2 ) ; }","private void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_3 , VAR_1 ) ; METHOD_6 ( STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1027
"static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . getValue ( VAR_4 class ) ; if ( VAR_2 == null ) { return VAR_5 ; } return TYPE_1 . METHOD_2 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 ) ; }","static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . getValue ( VAR_4 class ) ; return TYPE_1 . METHOD_2 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1028
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( ) ; } TYPE_2 . METHOD_5 ( ) . METHOD_6 ( this ) ; }",public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( ) ; } TYPE_2 . METHOD_5 ( ) . METHOD_6 ( this ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1029
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) . getValue ( ) ; },public java.lang.String METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1030
"private void METHOD_1 ( long VAR_1 ) { try { java.lang.Thread . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_2 ) ; } }",private void METHOD_1 ( long VAR_1 ) { try { java.lang.Thread . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1031
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1032
protected void execute ( ) { if ( ( VAR_1 . equals ( STRING_1 ) ) || ( VAR_2 . equals ( STRING_1 ) ) ) { METHOD_1 ( ) ; } },protected void execute ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",1033
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; title . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1035
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { TYPE_4 . METHOD_2 ( response , VAR_2 ) ; METHOD_3 ( context ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { TYPE_4 . METHOD_2 ( response , VAR_2 ) ; METHOD_3 ( getContext ( ) ) ; }","['Insert Invocation', 'Delete FieldRead']",1036
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_4 ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1037
"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( 0 , INT_1 , 0 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( INT_1 , INT_2 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_5 ( INT_1 , INT_2 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; }","['Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1038
public void METHOD_1 ( android.view.View VAR_1 ) { ( VAR_2 . counter ) -- ; VAR_2 . counter = ( ( VAR_2 . counter ) < 0 ) ? ( VAR_3 . length ) - 1 : VAR_2 . counter ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { ( VAR_2 . counter ) -- ; VAR_2 . counter = ( ( VAR_2 . counter ) < 0 ) ? VAR_3 . length : VAR_2 . counter ; METHOD_2 ( ) ; },"['Move FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1039
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) . size ( ) ) ) + STRING_2 ) ) ; view . METHOD_3 ( METHOD_4 ( ) ) ; view . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_3 ( METHOD_4 ( ) ) ; view . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1040
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1041
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . remove ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( ( ( VAR_4 . toString ( ) ) + STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . remove ( VAR_1 ) ; TYPE_3 . METHOD_4 ( ( ( VAR_4 . toString ( ) ) + STRING_1 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1042
"public static TYPE_1 index ( ) { if ( METHOD_1 ( ) . get ( ""type"" ) . equals ( STRING_1 ) ) { return METHOD_2 ( STRING_2 ) ; } return METHOD_3 ( index . METHOD_4 ( METHOD_1 ( ) . get ( STRING_3 ) ) ) ; }",public static TYPE_1 index ( ) { return METHOD_3 ( index . METHOD_4 ( METHOD_1 ( ) . get ( STRING_3 ) ) ) ; },"['Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",1043
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { } else { } TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { } else { } TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },['Delete Invocation'],1044
"public void METHOD_1 ( ) { boolean b = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . assertTrue ( b ) ; }","public void METHOD_1 ( ) { boolean b = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; assertTrue ( b ) ; }",['Update TypeAccess'],1045
public static void main ( java.lang.String [ ] args ) throws java.lang.Throwable { java.lang.Thread . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.Thread . METHOD_1 ( INT_2 ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Throwable { java.lang.Thread . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1046
private void METHOD_1 ( java.lang.String title ) { VAR_1 . METHOD_2 ( new TYPE_1 ( view ) ) ; VAR_1 . METHOD_3 ( title ) ; VAR_1 . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; VAR_1 . METHOD_6 ( ) ; },private void METHOD_1 ( java.lang.String title ) { VAR_1 . METHOD_2 ( new TYPE_1 ( view ) ) ; VAR_1 . METHOD_3 ( title ) ; VAR_1 . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1047
public void METHOD_1 ( int n ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = n ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },public void METHOD_1 ( int n ) { VAR_1 = n ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1049
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( result ) ; },protected void METHOD_1 ( TYPE_1 result ) { },"['Delete VariableRead', 'Delete Invocation']",1050
public void METHOD_1 ( int b ) throws java.io.IOException { VAR_1 . append ( java.lang.String . METHOD_2 ( ( ( char ) ( b ) ) ) ) ; output . METHOD_3 ( output . METHOD_4 ( ) . METHOD_5 ( ) ) ; },public void METHOD_1 ( int b ) throws java.io.IOException { VAR_1 . append ( java.lang.String . METHOD_2 ( ( ( char ) ( b ) ) ) ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1051
"private void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { VAR_5 . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , STRING_1 , 0 , false , 0 ) ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { VAR_5 . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , STRING_1 , 0 , false , 0 ) ) ; }",['Delete Invocation'],1052
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 . METHOD_2 ( ( ) - > METHOD_3 ( ) ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ( ) - > METHOD_3 ( ) ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1053
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( 1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",1054
"public void METHOD_1 ( ) { METHOD_2 ( ) ; try { TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_1 , false ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_5 ( ) ; METHOD_6 ( INT_1 ) ; } }","public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_1 , false ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_5 ( ) ; METHOD_6 ( INT_1 ) ; } }",['Delete Invocation'],1055
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_3 ( VAR_3 ) ; },['Delete Invocation'],1056
public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) ) ; TYPE_3 . METHOD_2 ( ) . METHOD_6 ( ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_3 . METHOD_2 ( ) . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1057
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1058
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; java.lang.System.out.println ( ( ( ( VAR_1 . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1059
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } VAR_3 . METHOD_1 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1060
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , 0 , 0 , null ) ; VAR_3 . METHOD_4 ( null ) ; VAR_3 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , 0 , 0 , null ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1062
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1063
public void init ( ) { this . VAR_1 . init ( ) ; this . VAR_2 . METHOD_1 ( ) ; this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_3 ( ) ; },public void init ( ) { this . VAR_2 . METHOD_1 ( ) ; this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1064
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : TYPE_2 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; if ( VAR_1 . METHOD_4 ( ) ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_5 ( VAR_1 ) ; } } },private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : TYPE_2 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; if ( VAR_1 . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 ) ; } } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1065
"public void METHOD_1 ( int index , TYPE_1 VAR_1 ) { if ( index >= ( METHOD_2 ( ) ) ) return ; super . METHOD_1 ( index , VAR_1 ) ; METHOD_3 ( index , VAR_1 ) ; }","public void METHOD_1 ( int index , TYPE_1 VAR_1 ) { if ( index >= ( METHOD_2 ( ) ) ) return ; super . METHOD_1 ( index , VAR_1 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1066
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 = TYPE_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 = TYPE_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1067
public void handle ( TYPE_1 event ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( false ) ; },public void handle ( TYPE_1 event ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( false ) ; },"['Delete TypeAccess', 'Delete Invocation']",1068
"public void METHOD_1 ( double VAR_1 , java.awt.Color c ) { this . VAR_2 . add ( VAR_1 ) ; this . VAR_3 . add ( c ) ; this . VAR_4 . add ( VAR_1 ) ; }","public void METHOD_1 ( double VAR_1 , java.awt.Color c ) { this . VAR_2 . add ( VAR_1 ) ; this . VAR_3 . add ( c ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1069
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1070
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( METHOD_5 ( ) , STRING_1 , VAR_2 ) . show ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1071
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) . getType ( ) ) == ( VAR_2 ) ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1072
"public void update ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } VAR_3 . METHOD_2 ( 1 , 1 ) ; }",public void update ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",1073
public TYPE_1 METHOD_1 ( TYPE_2 buffer ) { this . buffer . METHOD_1 ( buffer ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 buffer ) { buffer . METHOD_1 ( buffer ) ; return this ; },"['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead']",1074
public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1075
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( null ) ; VAR_3 . METHOD_6 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1076
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_2 ) ; VAR_6 . METHOD_2 ( true ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( false ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1077
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( VAR_3 , this ) ; VAR_2 . METHOD_2 ( true ) ; java.lang.System.out.println ( STRING_1 ) ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( VAR_3 ) ; VAR_2 . METHOD_2 ( true ) ; java.lang.System.out.println ( STRING_1 ) ; },['Delete ThisAccess'],1078
public void METHOD_1 ( final float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.System.out.println ( VAR_1 ) ; },public void METHOD_1 ( final float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1079
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( ( ( STRING_1 + ( VAR_3 . getId ( ) ) ) + STRING_2 ) + VAR_4 ) ) ; METHOD_3 ( VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . getId ( ) ) ) ) ; }","['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",1080
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation']",1081
"public TYPE_1 query ( java.lang.String query ) throws TYPE_2 { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( query , VAR_3 ) ; return VAR_1 ; }",public TYPE_1 query ( java.lang.String query ) throws TYPE_2 { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( query ) ; return VAR_1 ; },['Delete TypeAccess'],1082
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 . update ( VAR_1 , height ) ; VAR_3 . METHOD_2 ( VAR_1 , height ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 . update ( VAR_1 , height ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1083
private boolean METHOD_1 ( ) { return ( VAR_1 ) != null ; },private boolean METHOD_1 ( ) { return false ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1084
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 & ( VAR_2 ) ) == 0 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = false ; } else { VAR_3 . METHOD_2 ( VAR_6 ) ; VAR_5 = true ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 & ( VAR_2 ) ) == 0 ) { VAR_5 = false ; } else { VAR_5 = true ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1085
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1086
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; VAR_2 . info ( STRING_2 ) ; VAR_3 . init ( ) ; VAR_2 . info ( STRING_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; VAR_2 . info ( STRING_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1087
public void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = ( FLOAT_1 * ( VAR_1 . METHOD_2 ( ) ) ) / ( VAR_1 . METHOD_3 ( ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( VAR_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = ( FLOAT_1 * ( VAR_1 . METHOD_2 ( ) ) ) / ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1088
"static void METHOD_1 ( final java.io.File VAR_1 ) { final java.io.File VAR_2 = TYPE_1 . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; }",static void METHOD_1 ( final java.io.File VAR_1 ) { final java.io.File VAR_2 = TYPE_1 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1089
public boolean remove ( TYPE_1 VAR_1 ) throws TYPE_2 { assert VAR_1 != null ; final boolean VAR_2 = VAR_3 . remove ( VAR_1 ) ; if ( ! VAR_2 ) { throw new TYPE_2 ( ) ; } VAR_4 . METHOD_1 ( VAR_5 ) ; return VAR_2 ; },public boolean remove ( TYPE_1 VAR_1 ) throws TYPE_2 { assert VAR_1 != null ; final boolean VAR_2 = VAR_3 . remove ( VAR_1 ) ; if ( ! VAR_2 ) { throw new TYPE_2 ( ) ; } return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1090
"public static void METHOD_1 ( TYPE_1 b ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; if ( ( VAR_3 ) == null ) VAR_1 . i ( VAR_2 , STRING_2 ) ; else VAR_1 . i ( VAR_2 , STRING_3 ) ; VAR_3 = b ; }",public static void METHOD_1 ( TYPE_1 b ) { VAR_3 = b ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1091
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1092
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_4 ( VAR_6 ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_4 ( VAR_6 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1093
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( VAR_1 instanceof TYPE_1 ) && ( VAR_2 . equals ( ( ( TYPE_1 ) ( VAR_3 ) ) ) ) ) { return true ; } return false ; },public boolean equals ( java.lang.Object VAR_1 ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",1094
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1095
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1096
protected boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; },protected boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1097
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; TYPE_2 . METHOD_3 ( ( STRING_2 + VAR_1 ) , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation']",1098
public void show ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( null ) ; },public void show ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1099
public void start ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( 1 ) ; TYPE_1 . METHOD_3 ( ) ; },public void start ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( 1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1100
"public void METHOD_1 ( android.view.View view ) { view . METHOD_2 ( this . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , view ) ; VAR_3 = view ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , view ) ; VAR_3 = view ; }","['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",1101
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1102
"private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + VAR_2 ) ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; }","private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1103
public void METHOD_1 ( ) { METHOD_2 ( ) ; while ( ( METHOD_3 ( ) ) == null ) { java.lang.String VAR_1 = METHOD_4 ( ) ; try { METHOD_5 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { } } },public void METHOD_1 ( ) { while ( ( METHOD_3 ( ) ) == null ) { java.lang.String VAR_1 = METHOD_4 ( ) ; try { METHOD_5 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { } } },['Delete Invocation'],1104
public void update ( ) { if ( VAR_1 . METHOD_1 ( VAR_2 ) ) { if ( VAR_3 ) { METHOD_2 ( VAR_4 ) ; } else { METHOD_2 ( VAR_5 ) ; } VAR_3 = ! ( VAR_3 ) ; } },public void update ( ) { java.lang.System.out.println ( ) ; if ( VAR_1 . METHOD_1 ( VAR_2 ) ) { if ( VAR_3 ) { METHOD_2 ( VAR_4 ) ; } else { METHOD_2 ( VAR_5 ) ; } VAR_3 = ! ( VAR_3 ) ; } },"['Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess']",1105
"public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { VAR_1 . setValue ( ( ( 1 < < 1 ) | ( VAR_1 . getValue ( ) ) ) ) ; return this ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { VAR_1 . setValue ( ( 1 < < 1 ) ) ; return this ; }","['Move BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",1106
"public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = STRING_1 ; VAR_2 . METHOD_2 ( VAR_1 , false ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = STRING_1 ; VAR_2 . METHOD_2 ( VAR_1 , false ) ; METHOD_3 ( ) ; return true ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1107
"protected void METHOD_1 ( TYPE_1 < TYPE_2 > id , float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_3 . id , VAR_1 ) ; }","protected void METHOD_1 ( TYPE_1 < TYPE_2 > id , float VAR_1 ) { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1108
public TYPE_1 METHOD_1 ( double VAR_1 ) { if ( ( this . VAR_1 ) != VAR_1 ) METHOD_2 ( METHOD_3 ( ) ) ; this . VAR_1 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( double VAR_1 ) { if ( ( this . VAR_1 ) != VAR_1 ) METHOD_2 ( true ) ; this . VAR_1 = VAR_1 ; return this ; },"['Insert Literal', 'Delete Invocation']",1109
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation']",1110
public void METHOD_1 ( ) { this . METHOD_2 ( false ) ; this . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( false ) ; },"['Delete ThisAccess', 'Delete Literal', 'Delete Invocation']",1111
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1112
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1113
public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_4 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; } },public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1114
private final synchronized void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) return ; TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . start ( ) ; },private final synchronized void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . start ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",1115
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getContext ( ) , VAR_1 ) ; if ( VAR_3 . getBoolean ( VAR_4 , false ) ) { METHOD_2 ( ) ; } }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getContext ( ) , VAR_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1116
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) , ( ( getString ( VAR_2 ) ) + STRING_2 ) , VAR_3 ) . show ( ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( METHOD_4 ( ) , ( ( getString ( VAR_2 ) ) + STRING_2 ) , VAR_3 ) . show ( ) ; METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1117
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( VAR_5 . getText ( ) . toString ( ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( VAR_5 . getText ( ) . toString ( ) ) ; }",['Delete Invocation'],1118
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete Invocation', 'Delete Invocation']",1119
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . assertTrue ( VAR_1 . METHOD_3 ( VAR_2 ) ) ; TYPE_1 . METHOD_4 ( VAR_1 . METHOD_3 ( null ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; assertTrue ( VAR_1 . METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( VAR_1 . METHOD_3 ( null ) ) ; },"['Update TypeAccess', 'Update TypeAccess']",1120
"public static TYPE_1 METHOD_1 ( long VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_2 class , VAR_1 , INT_1 ) ; }",public static TYPE_1 METHOD_1 ( long VAR_1 ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1121
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_2 . METHOD_3 ( getActivity ( ) , VAR_2 , true ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1122
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( intent , VAR_4 ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_2 class ) ; VAR_1 . METHOD_3 ( intent , VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1123
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1124
"public void METHOD_1 ( char [ ] VAR_1 , int start , int length ) throws TYPE_1 { METHOD_2 ( VAR_1 , start , length ) ; }","public void METHOD_1 ( char [ ] VAR_1 , int start , int length ) throws TYPE_1 { }","['Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1125
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1127
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( this . METHOD_3 ( ) ) ; this . METHOD_4 ( 0 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( this . METHOD_3 ( ) ) ; },"['Delete ThisAccess', 'Delete Literal', 'Delete Invocation']",1128
public void METHOD_1 ( TYPE_1 state ) { if ( state != ( VAR_1 ) ) { VAR_1 = state ; METHOD_2 ( ) ; } else if ( state == ( VAR_2 ) ) { METHOD_3 ( ) . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 state ) { if ( state != ( VAR_1 ) ) { VAR_1 = state ; METHOD_2 ( ) ; } },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block']",1129
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this , VAR_1 . METHOD_3 ( VAR_2 ) , VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this , VAR_1 . METHOD_3 ( VAR_2 ) , VAR_3 ) ; }","['Delete Invocation', 'Delete Invocation']",1130
"public static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 . start ( STRING_1 , STRING_2 ) ; }","public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . start ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1131
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 , id ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1132
public void METHOD_1 ( ) { METHOD_2 ( ) ; java.util.Collection < TYPE_1 > VAR_1 = METHOD_3 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_4 ( VAR_3 . getName ( ) ) ; } },public void METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_1 = METHOD_3 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_4 ( VAR_3 . getName ( ) ) ; } },['Delete Invocation'],1133
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { METHOD_3 ( METHOD_4 ( VAR_3 ) ) ; } else { METHOD_5 ( VAR_1 ) ; } },public void METHOD_1 ( ) { METHOD_5 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",1134
"public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( VAR_3 ) ) ; VAR_4 = new TYPE_2 ( VAR_2 , VAR_5 , VAR_1 ) ; }","public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_4 = new TYPE_2 ( VAR_2 , VAR_5 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1135
public void METHOD_1 ( java.lang.String value ) { VAR_1 . info ( STRING_1 ) ; try { METHOD_2 ( ) ; METHOD_3 ( ) ; } catch ( TYPE_1 VAR_2 ) { throw new TYPE_2 ( VAR_2 ) ; } },public void METHOD_1 ( java.lang.String value ) { VAR_1 . info ( STRING_1 ) ; try { METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { throw new TYPE_2 ( VAR_2 ) ; } },['Delete Invocation'],1136
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_2 ) ; VAR_1 . METHOD_4 ( STRING_4 , VAR_3 ) ; VAR_1 = null ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_2 ) ; VAR_1 . METHOD_4 ( STRING_4 , VAR_3 ) ; VAR_1 = null ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1137
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . toString ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1138
"private void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 ) ; VAR_3 . setText ( VAR_4 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_5 = null ; METHOD_4 ( ) ; METHOD_5 ( VAR_6 , VAR_5 ) ; }","private void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 ) ; VAR_3 . setText ( VAR_4 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_5 = null ; METHOD_5 ( VAR_6 , VAR_5 ) ; }",['Delete Invocation'],1139
"public TYPE_1 METHOD_1 ( java.lang.Long id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( id ) ; java.lang.System.out.println ( VAR_3 . toString ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 ) ; return METHOD_4 ( VAR_1 ) ; }","public TYPE_1 METHOD_1 ( java.lang.Long id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( id ) ; java.lang.System.out.println ( VAR_3 . toString ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 ) ; return VAR_1 ; }","['Move VariableRead', 'Delete Invocation']",1140
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; } TYPE_1 . METHOD_2 ( VAR_1 , STRING_2 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1141
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 = METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_2 , ( ( TYPE_3 ) ( VAR_3 ) ) ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 = METHOD_3 ( VAR_1 ) ; METHOD_5 ( VAR_2 , ( ( TYPE_3 ) ( VAR_3 ) ) ) ; }","['Delete Invocation', 'Delete Invocation']",1142
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; if ( TYPE_1 . METHOD_4 ( ) ) VAR_1 . init ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1143
"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; VAR_2 = new java.util.HashMap < java.lang.String , TYPE_3 > ( ) ; VAR_3 . init ( ) ; }","public static void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; VAR_2 = new java.util.HashMap < java.lang.String , TYPE_3 > ( ) ; VAR_3 . init ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1146
"public TYPE_1 METHOD_1 ( java.io.File VAR_1 , java.util.HashMap < java.lang.String , java.lang.Object > params ) throws TYPE_2 , java.io.IOException , TYPE_3 { return METHOD_1 ( TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 ) , TYPE_4 . METHOD_3 ( VAR_1 ) , params ) ; }","public TYPE_1 METHOD_1 ( java.io.File VAR_1 , java.util.HashMap < java.lang.String , java.lang.Object > params ) throws TYPE_2 , java.io.IOException , TYPE_3 { return METHOD_1 ( TYPE_4 . METHOD_2 ( VAR_1 ) , TYPE_4 . METHOD_3 ( VAR_1 ) , params ) ; }",['Delete TypeAccess'],1147
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; }",['Delete Invocation'],1148
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . add ( VAR_3 , VAR_1 ) ; VAR_2 . show ( VAR_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . add ( VAR_3 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1149
public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { },['Delete Invocation'],1150
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( true ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( true ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1151
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; return VAR_2 ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; METHOD_6 ( VAR_2 ) ; return VAR_2 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1152
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) . show ( ) ; VAR_2 . METHOD_3 ( 0 ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) . show ( ) ; VAR_2 . METHOD_3 ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1153
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( intent , VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( intent , 1 ) ; }","['Insert Literal', 'Delete TypeAccess']",1154
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = VAR_1 ; METHOD_3 ( VAR_1 , 0 ) ; } return this ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = VAR_1 ; } return this ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1155
public void METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 . contains ( VAR_1 ) ) ; VAR_2 . remove ( VAR_1 ) ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1156
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1157
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_2 , VAR_1 , 0 ) ; }",public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1158
"public void METHOD_1 ( ) { VAR_1 . handle ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( ) ) ) ; assertEquals ( 0 , METHOD_2 ( STRING_1 , VAR_2 class ) . size ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 . handle ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( ) ) ) ; assertEquals ( 0 , METHOD_2 ( STRING_1 ) . size ( ) ) ; }",['Delete TypeAccess'],1159
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_2 ) ; VAR_4 . i ( STRING_1 , java.lang.String . METHOD_3 ( VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1160
public void METHOD_1 ( ) { this . view = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( 1 ) ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( this ) ; view . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { this . view = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( 1 ) ) ) ; if ( ( view ) != null ) { view . METHOD_1 ( ) ; } },"['Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation']",1161
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_2 ( ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_2 ( ) . getConfig ( ) ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_5 ( METHOD_2 ( ) . getConfig ( ) ) ; METHOD_6 ( ) ; },"['Delete Invocation', 'Delete Invocation']",1162
"private static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { java.lang.Class . METHOD_2 ( STRING_1 ) ; return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","private static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1163
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1164
public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { out . METHOD_2 ( n ) ; out . METHOD_3 ( VAR_1 ) ; out . METHOD_3 ( VAR_2 ) ; out . METHOD_3 ( min ) ; out . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { out . METHOD_2 ( n ) ; out . METHOD_3 ( VAR_1 ) ; out . METHOD_3 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1167
"public void METHOD_1 ( android.view.View view ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1168
"public void METHOD_1 ( ) { int a = 1 + 1 ; VAR_1 . assertEquals ( INT_1 , a ) ; }","public void METHOD_1 ( ) { int a = 1 + 1 ; assertEquals ( INT_1 , a ) ; }",['Update TypeAccess'],1169
"private static void METHOD_1 ( ) { VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , STRING_4 ) ; VAR_1 . put ( STRING_5 , STRING_6 ) ; VAR_1 . put ( STRING_7 , STRING_8 ) ; }","private static void METHOD_1 ( ) { VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , STRING_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1170
public TYPE_1 build ( ) { this . METHOD_1 ( ) ; return new TYPE_1 ( this ) ; },public TYPE_1 build ( ) { return new TYPE_1 ( this ) ; },"['Delete ThisAccess', 'Delete Invocation']",1171
private void METHOD_1 ( ) { label . METHOD_2 ( null ) ; label . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; },private void METHOD_1 ( ) { label . METHOD_2 ( null ) ; label . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1172
"public void METHOD_1 ( TYPE_1 result ) { TYPE_2 . METHOD_2 ( this , getString ( VAR_1 ) , VAR_2 ) . show ( ) ; TYPE_3 . METHOD_3 ( STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 result ) { TYPE_3 . METHOD_3 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1173
"protected java.lang.String METHOD_1 ( ) { final java.lang.String VAR_1 = VAR_2 . getText ( VAR_3 ) ; return TYPE_1 . METHOD_1 ( attribute , VAR_1 , value , METHOD_2 ( ) , false ) ; }","protected java.lang.String METHOD_1 ( ) { final java.lang.String VAR_1 = VAR_2 . getText ( VAR_3 ) ; return TYPE_1 . METHOD_1 ( attribute , VAR_1 , null , METHOD_2 ( ) , false ) ; }","['Insert Literal', 'Delete FieldRead']",1174
"public java.util.List < java.lang.String > METHOD_1 ( ) { VAR_1 . info ( STRING_1 , VAR_2 . toString ( VAR_3 ) ) ; return ( VAR_3 ) == null ? new java.util.ArrayList < > ( ) : new java.util.ArrayList < > ( java.util.Arrays.asList ( VAR_3 ) ) ; }",public java.util.List < java.lang.String > METHOD_1 ( ) { return ( VAR_3 ) == null ? new java.util.ArrayList < > ( ) : new java.util.ArrayList < > ( java.util.Arrays.asList ( VAR_3 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1175
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = java.lang.Integer.parseInt ( VAR_1 ) ; VAR_3 = VAR_2 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 . METHOD_2 ( ) ; VAR_7 = STRING_1 ; VAR_8 = STRING_1 ; return STRING_2 ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = java.lang.Integer.parseInt ( VAR_1 ) ; VAR_3 = VAR_2 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_7 = STRING_1 ; VAR_8 = STRING_1 ; return STRING_2 ; },"['Delete TypeAccess', 'Delete Invocation']",1176
public void METHOD_1 ( ) { this . VAR_1 = ( ++ ( this . VAR_1 ) ) % INT_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = ( ++ ( this . VAR_1 ) ) % INT_1 ; },['Delete Invocation'],1177
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( VAR_1 , this ) ; VAR_1 . METHOD_4 ( ) ; } }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1178
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; }",['Delete Invocation'],1180
"public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( this , VAR_2 , VAR_3 ) ; }",public void METHOD_1 ( ) { METHOD_2 ( 1 ) ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1181
public boolean METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ) { return true ; } else java.lang.System.out.println ( VAR_1 . METHOD_2 ( 0 ) ) ; return false ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ) { return true ; } else return false ; },"['Move Return', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",1182
public java.lang.String METHOD_1 ( long date ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; VAR_1 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_1 ) ; },public java.lang.String METHOD_1 ( long date ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; VAR_1 . METHOD_2 ( date ) ; return METHOD_5 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1183
"public void METHOD_1 ( java.lang.String output ) { TYPE_1 . METHOD_2 ( STRING_1 , output ) ; }",public void METHOD_1 ( java.lang.String output ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1184
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( this , VAR_2 class , STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1185
"public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( this ) ; }","public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1186
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , ( ( VAR_3 . METHOD_3 ( ) ) + 1 ) ) ; super . METHOD_1 ( VAR_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",1187
"public static void main ( java.lang.String [ ] args ) throws java.io.IOException , TYPE_1 { java.lang.System.out.println ( TYPE_2 . METHOD_1 ( ) ) ; }","public static void main ( java.lang.String [ ] args ) throws java.io.IOException , TYPE_1 { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1188
private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1189
public void METHOD_1 ( java.lang.String text ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( text ) ; },public void METHOD_1 ( java.lang.String text ) { java.lang.System.out.println ( text ) ; },"['Delete TypeAccess', 'Delete Invocation']",1190
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 . METHOD_2 ( ) . toString ( ) ) ; VAR_4 . METHOD_3 ( false ) ; VAR_4 . METHOD_4 ( true ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 . METHOD_2 ( ) . toString ( ) ) ; VAR_4 . METHOD_3 ( false ) ; VAR_4 . METHOD_4 ( true ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1191
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1192
private java.lang.String METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . get ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) . size ( ) ) ; java.lang.String response = VAR_3 . METHOD_3 ( VAR_1 ) ; return response ; },private java.lang.String METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . get ( ) ; java.lang.String response = VAR_3 . METHOD_3 ( VAR_1 ) ; return response ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1193
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , VAR_2 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( METHOD_4 ( ) , VAR_2 , VAR_3 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1194
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } else { METHOD_2 ( VAR_4 . error ( VAR_1 ) ) ; } },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1195
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; METHOD_4 ( VAR_4 ) ; METHOD_5 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; METHOD_4 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1196
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; METHOD_2 ( ) ; METHOD_3 ( ) ; },['Delete Invocation'],1197
"public static void main ( final java.lang.String [ ] args ) throws java.io.IOException , java.lang.ClassNotFoundException , TYPE_1 { TYPE_2 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; }","public static void main ( final java.lang.String [ ] args ) throws java.io.IOException , java.lang.ClassNotFoundException , TYPE_1 { TYPE_2 . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1198
"public TYPE_1 METHOD_1 ( long VAR_1 ) { return new TYPE_1 ( null , VAR_2 , new TYPE_2 ( ) , VAR_3 , null , null , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 . NULL , VAR_11 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( long VAR_1 ) { return new TYPE_1 ( null , null , new TYPE_2 ( ) , VAR_3 , null , null , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 . NULL , VAR_11 , VAR_1 ) ; }","['Insert Literal', 'Delete FieldRead']",1199
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; },"['Insert Invocation', 'Insert TypeAccess']",1201
"public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( STRING_3 , STRING_4 ) ; VAR_1 . METHOD_3 ( STRING_3 , STRING_5 ) ; VAR_1 . METHOD_3 ( STRING_3 , STRING_6 ) ; }","public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( STRING_3 , STRING_4 ) ; VAR_1 . METHOD_3 ( STRING_3 , STRING_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1202
public boolean METHOD_1 ( TYPE_1 state ) { METHOD_2 ( ) ; METHOD_3 ( state ) ; return METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public boolean METHOD_1 ( TYPE_1 state ) { METHOD_3 ( state ) ; return METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },['Delete Invocation'],1203
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) return ; VAR_3 . METHOD_2 ( VAR_4 , false ) ; VAR_2 = true ; TYPE_1 . METHOD_3 ( this , intent , VAR_4 , VAR_5 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) return ; VAR_3 . METHOD_2 ( VAR_4 , false ) ; VAR_2 = true ; TYPE_1 . METHOD_3 ( this , intent , VAR_4 ) ; METHOD_4 ( ) ; }",['Delete TypeAccess'],1204
"public TYPE_1 METHOD_1 ( ) { VAR_1 . assertNotNull ( VAR_2 ) ; VAR_3 . i ( getClass ( ) , ( STRING_1 + ( VAR_2 ) ) ) ; return TYPE_2 . METHOD_2 ( VAR_2 ) ; }",public TYPE_1 METHOD_1 ( ) { VAR_1 . assertNotNull ( VAR_2 ) ; return TYPE_2 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1206
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1207
public void METHOD_1 ( boolean show ) { if ( show ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } else { VAR_1 . METHOD_2 ( VAR_3 ) ; } },public void METHOD_1 ( boolean show ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1208
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_4 ( VAR_1 ) ) ; TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) , STRING_1 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_4 ( VAR_1 ) ) ; TYPE_2 . METHOD_5 ( this , STRING_1 , VAR_3 ) . show ( ) ; }","['Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",1209
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( new android.content.Intent ( VAR_2 , VAR_3 class ) ) ; VAR_3 . setEnabled ( false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( new android.content.Intent ( VAR_2 , VAR_3 class ) ) ; VAR_3 . setEnabled ( false ) ; METHOD_4 ( ) ; }",['Delete Invocation'],1210
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; new TYPE_1 ( true ) ; },public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( true ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1211
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_2 ( ) . getId ( ) ) . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1212
public final void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( this ) ; this . VAR_1 . METHOD_1 ( ) ; },public final void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) ; this . VAR_1 . METHOD_1 ( ) ; },['Delete ThisAccess'],1213
public int METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) return 0 ; return ( VAR_2 ) / ( VAR_1 ) ; },public int METHOD_1 ( ) { return ( VAR_2 ) / ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1214
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; },['Delete Invocation'],1215
"public void METHOD_1 ( ) { size ( VAR_1 , VAR_2 . height ) ; METHOD_2 ( ) ; VAR_3 . init ( this ) ; this . METHOD_3 ( INT_1 ) ; this . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { size ( VAR_1 , VAR_2 . height ) ; METHOD_2 ( ) ; VAR_3 . init ( this ) ; this . METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",1216
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1217
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1218
"public synchronized void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; update ( ) ; }","public synchronized void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; }",['Delete Invocation'],1219
"public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_3 ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_4 ) . METHOD_3 ( ) ; }","public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_4 ) . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1220
void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },['Delete Invocation'],1221
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( INT_1 ) ; METHOD_3 ( VAR_4 . get ( ( ( VAR_4 . size ( ) ) - 1 ) ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . setText ( STRING_1 ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Invocation']",1223
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } } },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",1224
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_1 != ( VAR_3 ) ) TYPE_2 . METHOD_5 ( VAR_4 class ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1225
"public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( ) ; } }",public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1227
"void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( listener ) . METHOD_1 ( STRING_2 , STRING_3 ) ; METHOD_5 ( listener ) ; }","void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( listener ) . METHOD_1 ( STRING_2 , STRING_3 ) ; METHOD_5 ( listener ) ; }",['Delete Invocation'],1228
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return null ; return METHOD_2 ( VAR_1 ) ; },public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1229
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 = true ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1230
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( INT_1 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( 0 , 0 ) ; }","['Insert Literal', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1231
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1232
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; VAR_2 . add ( STRING_3 ) ; },protected void METHOD_1 ( ) { VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; VAR_2 . add ( STRING_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1233
"private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { }","['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1234
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { ( VAR_2 ) ++ ; VAR_4 [ VAR_2 ] = VAR_1 ; } else { java.lang.System.out.println ( STRING_1 ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { ( VAR_2 ) ++ ; VAR_4 [ VAR_2 ] = VAR_1 ; } else { } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1235
"public TYPE_1 METHOD_1 ( java.util.Date date , TYPE_2 VAR_1 , TYPE_3 context ) { TYPE_4 VAR_2 = new TYPE_4 ( VAR_3 ) ; VAR_2 . METHOD_2 ( TYPE_5 . METHOD_3 ( STRING_1 ) ) ; return new TYPE_6 ( VAR_4 . format ( date ) ) ; }","public TYPE_1 METHOD_1 ( java.util.Date date , TYPE_2 VAR_1 , TYPE_3 context ) { TYPE_4 VAR_2 = new TYPE_4 ( VAR_3 ) ; return new TYPE_6 ( VAR_4 . format ( date ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1236
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 , 1 ) ; VAR_4 = VAR_2 . getTime ( ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 , 1 ) ; VAR_4 = VAR_2 . getTime ( ) ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1237
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , ""false"" ) ; this . METHOD_5 ( VAR_3 , VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , ""false"" ) ; this . METHOD_5 ( VAR_3 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1238
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_3 ( ) ; },['Delete Invocation'],1239
"public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( VAR_2 ) { return ; } METHOD_3 ( ) ; }",public void METHOD_1 ( ) { if ( VAR_2 ) { return ; } METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1240
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ( STRING_1 + ( METHOD_4 ( ) . VAR_2 ) ) ) ; METHOD_5 ( VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { METHOD_3 ( ( STRING_1 + ( METHOD_4 ( ) . VAR_2 ) ) ) ; METHOD_5 ( VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1241
public void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) return ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( float VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1242
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1243
public void METHOD_1 ( ) { VAR_1 . assertTrue ( VAR_2 . METHOD_2 ( INT_1 ) ) ; },public void METHOD_1 ( ) { VAR_1 . assertTrue ( false ) ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1244
"private TYPE_1 METHOD_1 ( java.lang.String message ) { VAR_1 . error ( STRING_1 , message ) ; return VAR_2 . status ( VAR_3 ) . METHOD_2 ( message ) . build ( ) ; }",private TYPE_1 METHOD_1 ( java.lang.String message ) { return VAR_2 . status ( VAR_3 ) . METHOD_2 ( message ) . build ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1245
"public void METHOD_1 ( ) { java.lang.String value = new TYPE_1 ( ) . METHOD_2 ( ) ; assertThat ( value , TYPE_2 . METHOD_3 ( STRING_1 ) ) ; assertThat ( value , TYPE_2 . METHOD_3 ( STRING_2 ) ) ; }","public void METHOD_1 ( ) { java.lang.String value = new TYPE_1 ( ) . METHOD_2 ( ) ; assertThat ( value , METHOD_3 ( STRING_1 ) ) ; assertThat ( value , METHOD_3 ( STRING_2 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",1246
public void METHOD_1 ( ) { METHOD_2 ( ) ; java.lang.System.err.println ( STRING_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1247
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) . title ) ) + STRING_2 ) + ( VAR_3 . METHOD_3 ( ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1248
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1249
"public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String fieldName , java.util.Date value ) { VAR_1 . METHOD_2 ( ) ; long [ ] VAR_2 = VAR_3 . METHOD_3 ( fieldName , VAR_4 ) ; this . query . METHOD_1 ( VAR_2 , value ) ; return this ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String fieldName , java.util.Date value ) { long [ ] VAR_2 = VAR_3 . METHOD_3 ( fieldName , VAR_4 ) ; this . query . METHOD_1 ( VAR_2 , value ) ; return this ; }","['Delete TypeAccess', 'Delete Invocation']",1250
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1251
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; }",['Update TypeAccess'],1252
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( false ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( false ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",1253
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1254
public final void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },public final void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; },['Delete Invocation'],1255
"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; super . METHOD_1 ( ) ; },['Delete TypeAccess'],1257
"void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( 0 , VAR_3 , 0 , ( ( int ) ( VAR_1 ) ) , 0 , 0 , VAR_4 , VAR_5 ) ; TYPE_1 . METHOD_3 ( this ) ; }","void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( 0 , VAR_3 , 0 , ( ( int ) ( VAR_1 ) ) , 0 , 0 , VAR_4 , VAR_5 ) ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete ThisAccess']",1258
"private void METHOD_1 ( TYPE_1 VAR_1 ) { float VAR_2 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; if ( ( listener ) != null ) { listener . METHOD_4 ( this , ( VAR_2 / ( VAR_4 ) ) ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 ) { float VAR_2 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; if ( ( listener ) != null ) { listener . METHOD_4 ( this , VAR_2 ) ; } }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",1260
public void update ( TYPE_1 VAR_1 ) { if ( ( context ) == null ) { return ; } TYPE_2 VAR_2 = context . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . setEnabled ( ( VAR_2 == null ) ) ; },public void update ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = context . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . setEnabled ( ( VAR_2 == null ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1262
"public java.lang.String METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 , name ) ; return METHOD_3 ( ) . METHOD_1 ( name , VAR_1 ) ; }","public java.lang.String METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_3 ( ) . METHOD_1 ( name , VAR_1 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1263
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( METHOD_3 ( ) , VAR_1 class ) ; METHOD_4 ( intent ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( METHOD_3 ( ) , VAR_1 class ) ; METHOD_4 ( intent ) ; METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1264
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( 0 ) ; VAR_3 . show ( VAR_4 ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( 0 ) ; VAR_3 . show ( ) ; } },['Delete TypeAccess'],1265
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } TYPE_2 . METHOD_3 ( VAR_3 ) ; this . VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_2 ( VAR_3 ) ; },private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } this . VAR_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1267
public float METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( x ) * ( VAR_1 . METHOD_2 ( ) ) ) + ( ( y ) * ( VAR_1 . METHOD_3 ( ) ) ) ; },public float METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( x ) * ( VAR_1 . METHOD_2 ( ) ) ) + ( ( y ) * ( METHOD_3 ( ) ) ) ; },['Delete VariableRead'],1268
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1269
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; VAR_2 = null ; }",public void METHOD_1 ( ) { METHOD_3 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; VAR_2 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1270
"public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( METHOD_3 ( ) . getText ( ) , METHOD_4 ( ) ) ; } }",public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( METHOD_3 ( ) . getText ( ) ) ; } },['Delete Invocation'],1271
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1272
"public synchronized void METHOD_1 ( java.lang.String url ) { this . VAR_1 . add ( url ) ; VAR_2 . METHOD_2 ( STRING_1 , this . VAR_1 . size ( ) , this . VAR_3 ) ; }",public synchronized void METHOD_1 ( java.lang.String url ) { this . VAR_1 . add ( url ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1273
"public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { }","['Delete TypeAccess', 'Delete Invocation']",1274
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1275
"private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , null ) ; java.lang.System.out.println ( VAR_2 . size ( ) ) ; METHOD_3 ( VAR_1 ) ; java.lang.String result = METHOD_4 ( ) ; VAR_3 = VAR_4 ; return result ; }","private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , null ) ; METHOD_3 ( VAR_1 ) ; java.lang.String result = METHOD_4 ( ) ; VAR_3 = VAR_4 ; return result ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1276
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( false ) ; } METHOD_1 ( ) ; METHOD_3 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { METHOD_1 ( ) ; METHOD_3 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1277
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) VAR_3 . i ( VAR_4 , STRING_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_5 , VAR_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_5 , VAR_1 ) ; return true ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1278
public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . equals ( VAR_1 ) ) ) return null ; else return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",1280
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; },"['Insert Literal', 'Delete Invocation']",1281
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; getActivity ( ) . METHOD_3 ( STRING_1 ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_3 ( STRING_1 ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( this ) ; },"['Delete Literal', 'Delete Invocation']",1282
"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , int [ ] VAR_2 ) { super . METHOD_1 ( context , VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( context ) ; context . METHOD_3 ( new android.content.Intent ( context , VAR_3 class ) ) ; }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , int [ ] VAR_2 ) { super . METHOD_1 ( context , VAR_1 , VAR_2 ) ; context . METHOD_3 ( new android.content.Intent ( context , VAR_3 class ) ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1283
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1284
"public void METHOD_1 ( ) { METHOD_2 ( p , VAR_1 , x , VAR_2 ) ; VAR_3 = true ; }","public void METHOD_1 ( ) { METHOD_2 ( p , VAR_1 , x ) ; VAR_3 = true ; }",['Delete TypeAccess'],1285
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { }",['Delete Invocation'],1286
public double METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },public double METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",1287
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( false ) ; TYPE_3 . METHOD_4 ( STRING_2 ) ; },public static void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( false ) ; TYPE_3 . METHOD_4 ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1288
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( null ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1289
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1290
public void METHOD_1 ( ) { VAR_1 . set ( false ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_3 = null ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1291
"public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { if ( VAR_5 ) return false ; VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; return false ; }","public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; return false ; }","['Delete FieldRead', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1292
public java.lang.Integer METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ; VAR_3 . METHOD_4 ( null ) ; return METHOD_5 ( ) ; },public java.lang.Integer METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ; return METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1293
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Object value , boolean VAR_2 , int VAR_3 , int VAR_4 ) { METHOD_2 ( VAR_5 , VAR_1 , VAR_3 , VAR_4 , VAR_2 ) ; VAR_5 . METHOD_3 ( value ) ; return VAR_5 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Object value , boolean VAR_2 , int VAR_3 , int VAR_4 ) { METHOD_2 ( VAR_5 , VAR_1 , VAR_3 , VAR_4 , VAR_2 ) ; return VAR_5 ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1294
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { this . VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1295
public int compareTo ( TYPE_1 VAR_1 ) { double VAR_2 = VAR_1 . METHOD_1 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { return 1 ; } return ( ( int ) ( ( VAR_3 ) - VAR_2 ) ) ; },public int compareTo ( TYPE_1 VAR_1 ) { double VAR_2 = VAR_1 . METHOD_1 ( ) ; return ( ( int ) ( ( VAR_3 ) - VAR_2 ) ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1297
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; } else { super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } else { super . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1298
public void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . METHOD_2 ( true ) ; ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation']",1299
public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = TYPE_2 . METHOD_2 ( new TYPE_3 ( ) ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = TYPE_2 . METHOD_2 ( new TYPE_3 ( ) ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_5 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1300
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; this . VAR_3 . remove ( VAR_1 ) ; return this . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; return this . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1302
"public void METHOD_1 ( TYPE_1 className ) { VAR_1 = null ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 className ) { VAR_1 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1303
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; return this ; },public void METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",1304
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) , VAR_3 ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; METHOD_5 ( ) ; }",['Delete FieldRead'],1305
public void start ( TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void start ( TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_3 . METHOD_2 ( ) ; },['Delete Invocation'],1307
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; } VAR_6 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1308
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_1 . METHOD_2 ( VAR_2 class ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1309
"public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( getActivity ( ) , TYPE_2 . METHOD_2 ( VAR_1 ) , 0 , METHOD_3 ( ) . METHOD_4 ( VAR_2 ) , this , VAR_3 ) . execute ( ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( getActivity ( ) , 0 , METHOD_3 ( ) . METHOD_4 ( VAR_2 ) , this , VAR_3 ) . execute ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1310
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { TYPE_1 . METHOD_2 ( ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { METHOD_2 ( ) ; } METHOD_3 ( ) ; },['Update TypeAccess'],1311
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1312
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; ( VAR_1 ) -- ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { this . METHOD_3 ( ) ; ( VAR_1 ) -- ; this . METHOD_5 ( ) ; } },"['Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",1313
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , ( ( ( STRING_2 + ( this . METHOD_3 ( ) ) ) + STRING_3 ) + ( this . path ) ) ) ; TYPE_2 . METHOD_4 ( this . buffer ) ; }",public void METHOD_1 ( ) { TYPE_2 . METHOD_4 ( this . buffer ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1314
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_3 . put ( VAR_4 . getId ( ) , VAR_1 ) ; METHOD_3 ( VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1315
"private void METHOD_1 ( ) { result . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_1 ( ( ( VAR_2 ) * ( VAR_3 ) ) , VAR_3 , VAR_4 ) ; }","private void METHOD_1 ( ) { result . METHOD_2 ( ) ; METHOD_1 ( ( ( VAR_2 ) * ( VAR_3 ) ) , VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1316
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1317
public java.lang.Integer METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return ( VAR_1 ) / INT_1 ; } return VAR_1 ; },public java.lang.Integer METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1318
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; VAR_3 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = null ; },"['Delete TypeAccess', 'Delete Invocation']",1319
"private boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( VAR_2 ) ) ) ; return ( VAR_2 ) > 0 ; }",private boolean METHOD_1 ( ) { return ( VAR_2 ) < 0 ; },"['Update BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1320
"public void METHOD_1 ( TYPE_1 VAR_1 ) { set = VAR_2 . METHOD_2 ( ) ; set . METHOD_3 ( VAR_3 . get ( VAR_1 ) ) ; setValue . METHOD_4 ( VAR_3 . get ( VAR_1 ) , VAR_1 ) ; VAR_3 . remove ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { set = VAR_2 . METHOD_2 ( ) ; set . METHOD_3 ( VAR_3 . get ( VAR_1 ) ) ; setValue . METHOD_4 ( VAR_3 . get ( VAR_1 ) , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1321
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . put ( VAR_1 , 0 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1322
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1323
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . get ( VAR_4 , VAR_4 ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_4 ) ; }","['Move TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1324
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1325
"public void METHOD_1 ( int id , int VAR_1 ) { if ( VAR_2 . contains ( id ) ) return ; VAR_2 . add ( id ) ; METHOD_2 ( id , ( - 1 ) , ( - 1 ) , VAR_1 , 0 ) ; }","public void METHOD_1 ( int id , int VAR_1 ) { METHOD_2 ( id , ( - 1 ) , ( - 1 ) , VAR_1 , 0 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1326
public void start ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( false ) ; },public void start ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1327
"public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String args ) { if ( null == ( VAR_2 ) ) { return STRING_1 ; } return VAR_2 . METHOD_2 ( VAR_1 , args ) ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String args ) { return VAR_2 . METHOD_2 ( VAR_1 , args ) ; }","['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1328
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , STRING_1 ) ; return new TYPE_4 ( VAR_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return new TYPE_4 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1330
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",1331
"public void METHOD_1 ( java.lang.String error ) { VAR_1 . METHOD_1 ( error ) ; TYPE_1 . METHOD_2 ( VAR_2 , error ) ; TYPE_2 . METHOD_3 ( getId ( ) ) ; }",public void METHOD_1 ( java.lang.String error ) { VAR_1 . METHOD_1 ( error ) ; TYPE_2 . METHOD_3 ( getId ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1332
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1333
"public void METHOD_1 ( java.lang.String msg , java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.String msg , java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1334
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) || ( ( METHOD_2 ( ) ) == 0 ) ) { return ; } if ( METHOD_3 ( VAR_1 ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; ( VAR_4 ) ++ ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_3 ( VAR_1 ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; ( VAR_4 ) ++ ; } },"['Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1335
"public final TYPE_1 build ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_1 ( ) , getType ( ) , METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( METHOD_6 ( ) ) ; return VAR_1 ; }","public final TYPE_1 build ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_1 ( ) , getType ( ) , METHOD_2 ( ) ) ; VAR_1 . METHOD_5 ( METHOD_6 ( ) ) ; return VAR_1 ; }","['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1336
public boolean METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; return ( VAR_1 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ; },public boolean METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return ( VAR_1 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1337
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = METHOD_2 ( ) . getColor ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this . VAR_1 ) ; } return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = METHOD_2 ( ) . getColor ( VAR_1 ) ; return this ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1338
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this , VAR_2 , VAR_3 ) ; if ( ( VAR_4 . METHOD_3 ( ) ) && ( VAR_5 ) ) { METHOD_4 ( ) ; } METHOD_5 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_4 . METHOD_3 ( ) ) && ( VAR_5 ) ) { METHOD_4 ( ) ; } METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1339
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_1 . METHOD_4 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_1 . METHOD_5 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( STRING_1 ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; },"['Update Invocation', 'Move Invocation', 'Update Invocation', 'Move Invocation', 'Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Move TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1340
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( STRING_1 , true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( STRING_1 , true ) ; } }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1341
"public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int position : VAR_2 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( position , VAR_3 , VAR_4 , this ) ; } METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int position : VAR_2 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( position , VAR_3 , getActivity ( ) , this ) ; } METHOD_5 ( ) ; }","['Insert Invocation', 'Delete TypeAccess']",1342
public void METHOD_1 ( TYPE_1 main ) { this . main = main ; list ( ) ; },public void METHOD_1 ( TYPE_1 main ) { this . main = main ; },['Delete Invocation'],1343
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( false ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1344
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1345
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1347
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1349
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_2 ) ; METHOD_2 ( ) . METHOD_4 ( VAR_3 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_2 ) ; }","['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1350
"public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , position , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + position ) ) ; VAR_4 . remove ( position ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , position , VAR_2 ) ; VAR_4 . remove ( position ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1351
private void METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { file = new java.io.File ( fileName ) ; if ( file . METHOD_2 ( ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else { file . METHOD_5 ( ) ; } },private void METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { file = new java.io.File ( fileName ) ; if ( file . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { file . METHOD_5 ( ) ; } },['Delete Invocation'],1352
public void METHOD_1 ( float VAR_1 ) { VAR_2 += VAR_1 * ( VAR_3 . METHOD_2 ( VAR_4 ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( float VAR_1 ) { VAR_2 += VAR_1 * ( VAR_3 . METHOD_2 ( VAR_4 ) ) ; },['Delete Invocation'],1353
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , this ) . METHOD_3 ( VAR_3 ) . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_5 ( VAR_2 ) ; return super . METHOD_1 ( VAR_1 ) ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_5 ( VAR_2 ) ; return super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess']",1354
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_2 ) METHOD_3 ( VAR_3 class ) ; else METHOD_3 ( VAR_4 class ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) METHOD_3 ( VAR_3 class ) ; else METHOD_3 ( VAR_4 class ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1355
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_2 = VAR_1 ; METHOD_2 ( VAR_3 ) ; METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_2 = VAR_1 ; METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1357
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1358
protected double METHOD_1 ( final TYPE_1 node ) { if ( VAR_1 . METHOD_2 ( node ) ) return 0.0 ; return ( VAR_1 . METHOD_3 ( node ) ) * ( METHOD_4 ( node ) ) ; },protected double METHOD_1 ( final TYPE_1 node ) { return ( VAR_1 . METHOD_3 ( node ) ) * ( METHOD_4 ( node ) ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1360
public void execute ( ) throws java.lang.Exception { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void execute ( ) throws java.lang.Exception { METHOD_1 ( ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1361
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + STRING_2 ) ) ; VAR_2 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1362
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 f ) { return VAR_2 . METHOD_2 ( new TYPE_4 ( VAR_1 , f , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 f ) { return VAR_2 . METHOD_2 ( new TYPE_4 ( VAR_1 , f , VAR_3 , VAR_4 ) ) ; }","['Delete FieldRead', 'Delete FieldRead']",1363
"protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; }",['Delete Invocation'],1364
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( null ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; VAR_3 . setEnabled ( false ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_3 . setEnabled ( false ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1365
"private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . query ( VAR_1 , null , null , null , ( ( VAR_2 ) + STRING_1 ) ) ; }","private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . query ( VAR_1 , null , null , null , VAR_2 ) ; }","['Insert TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",1366
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; i ++ ) VAR_3 . add ( i ) ; },private void METHOD_1 ( ) { for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; i ++ ) VAR_3 . add ( i ) ; },"['Delete TypeAccess', 'Delete Invocation']",1367
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_2 = ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) + STRING_4 ; VAR_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) + STRING_4 ; VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1369
"public void METHOD_1 ( android.view.View view ) { METHOD_2 ( TYPE_1 . METHOD_3 ( this , VAR_1 , item , VAR_2 , getIntent ( ) . METHOD_4 ( ) . getBoolean ( STRING_1 ) ) ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( TYPE_1 . METHOD_3 ( this , VAR_1 , item , VAR_2 ) ) ; }","['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1370
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",1371
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_2 ) . show ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_2 ) . show ( ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1373
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 == null ) { METHOD_2 ( getIntent ( ) ) ; } else { TYPE_2 . METHOD_3 ( this ) . METHOD_4 ( ) ; METHOD_5 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 == null ) { METHOD_2 ( getIntent ( ) ) ; } },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Block']",1374
"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , METHOD_3 ( VAR_2 ) ) ; }",['Delete Invocation'],1375
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; }",['Delete TypeAccess'],1376
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( VAR_3 ) ) { METHOD_2 ( VAR_4 . getText ( ) ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1378
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1379
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) == null ) { return ; } VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1380
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , 1 , 1 , 1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , 1 , 1 , 1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1381
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 ; java.lang.System.out.println ( VAR_1 ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",1383
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( getActivity ( ) ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1384
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , ( STRING_1 + ( TYPE_2 . METHOD_4 ( ) ) ) ) ; super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1385
public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation']",1386
"private int METHOD_1 ( ) { double VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , 0.0 ) ; return 0 ; }",private int METHOD_1 ( ) { double VAR_1 = VAR_2 . METHOD_2 ( ) ; return 0 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1387
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . update ( ) ; update ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { update ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1388
"public void METHOD_1 ( ) { VAR_1 . assertEquals ( VAR_2 . METHOD_2 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_2 . METHOD_2 ( ) , STRING_1 ) ; }",['Update TypeAccess'],1389
protected void METHOD_1 ( java.lang.Void result ) { super . METHOD_1 ( result ) ; VAR_1 . set ( VAR_2 ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.Void result ) { super . METHOD_1 ( result ) ; VAR_1 . set ( VAR_2 ) ; },['Delete Invocation'],1390
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1391
"void METHOD_1 ( ) { switch ( state ) { case VAR_1 : METHOD_2 ( ) ; break ; case VAR_2 : METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( VAR_4 , INT_1 ) ; break ; } }","void METHOD_1 ( ) { switch ( state ) { case VAR_1 : METHOD_2 ( ) ; break ; case VAR_2 : METHOD_3 ( ) ; VAR_3 . METHOD_5 ( VAR_4 , INT_1 ) ; break ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1392
public void update ( float VAR_1 ) { METHOD_1 ( VAR_1 ) ; },public void update ( float VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation']",1393
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( ) . add ( 0 , VAR_1 ) ; VAR_2 . METHOD_2 ( ) . get ( 1 ) . METHOD_3 ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( ) . add ( 0 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",1394
"public void show ( ) { METHOD_1 ( INT_1 ) ; METHOD_2 ( INT_1 ) ; METHOD_3 ( ( ( float ) ( x ) ) , ( ( float ) ( y ) ) , 1 , 1 ) ; }","public void show ( ) { METHOD_1 ( INT_1 ) ; METHOD_3 ( ( ( float ) ( x ) ) , ( ( float ) ( y ) ) , 1 , 1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1395
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },['Delete Invocation'],1396
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1397
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . add ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1398
"public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . add ( listener ) ; listener . METHOD_2 ( java.lang.String.format ( STRING_1 , this ) ) ; }",public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . add ( listener ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",1400
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_1 != null ) && ( ( VAR_3 ) instanceof TYPE_2 ) ) { ( ( TYPE_2 ) ( VAR_3 ) ) . METHOD_1 ( VAR_1 ) ; } },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1401
public void METHOD_1 ( TYPE_1 VAR_1 ) { info = VAR_1 ; VAR_2 = info . METHOD_2 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) ) ; VAR_3 = STRING_2 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { info = VAR_1 ; VAR_2 = info . METHOD_2 ( ) ; VAR_3 = STRING_2 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1402
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; },['Delete Invocation'],1403
"public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { VAR_3 = false ; VAR_4 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( STRING_1 ) ; TYPE_2 . METHOD_6 ( STRING_2 , STRING_1 ) ; } }",public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { VAR_3 = false ; VAR_4 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( STRING_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1404
"public synchronized void update ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; }",public synchronized void update ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1405
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class , ""id"" ) ; VAR_3 = new TYPE_2 ( this , VAR_1 ) ; VAR_4 . METHOD_3 ( new TYPE_3 ( VAR_3 ) ) ; TYPE_4 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class , ""id"" ) ; VAR_3 = new TYPE_2 ( this , VAR_1 ) ; VAR_4 . METHOD_3 ( new TYPE_3 ( VAR_3 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1406
protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1407
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; },['Delete Invocation'],1408
public void METHOD_1 ( java.lang.Object VAR_1 ) { METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { update ( ) ; METHOD_2 ( ) ; },['Insert Invocation'],1409
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_2 . assertEquals ( STRING_1 , VAR_1 . METHOD_6 ( ) ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1410
public int METHOD_1 ( ) { if ( VAR_1 ) { return VAR_2 . size ( ) ; } return ( VAR_2 . size ( ) ) + 1 ; },public int METHOD_1 ( ) { return ( VAR_2 . size ( ) ) + 1 ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",1411
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) ) ; } METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) ) ; } },['Delete Invocation'],1412
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . setText ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1413
"public static void METHOD_1 ( byte [ ] VAR_1 ) { if ( ( VAR_2 ) != null ) { return ; } VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 . length ) ; }","public static void METHOD_1 ( byte [ ] VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 . length ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1414
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( java.lang.String VAR_3 : VAR_2 ) { VAR_4 . add ( VAR_3 ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( java.lang.String VAR_3 : VAR_2 ) { VAR_4 . add ( VAR_3 ) ; } },['Delete Invocation'],1415
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; },['Delete Invocation'],1416
public void METHOD_1 ( ) { this . VAR_1 -= 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 -= 1 ; },['Delete Invocation'],1417
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . start ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_5 ) ; METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_3 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1419
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_1 , VAR_4 , VAR_5 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 , VAR_4 ) ; }","['Delete FieldRead', 'Delete FieldRead']",1420
public void METHOD_1 ( ) { while ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; try { java.lang.Thread . METHOD_3 ( VAR_3 ) ; } catch ( TYPE_1 VAR_4 ) { } } },public void METHOD_1 ( ) { while ( true ) { METHOD_2 ( VAR_2 ) ; try { java.lang.Thread . METHOD_3 ( VAR_3 ) ; } catch ( TYPE_1 VAR_4 ) { } } },"['Insert Literal', 'Delete FieldRead']",1421
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1422
"public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { super . METHOD_1 ( name , VAR_1 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { super . METHOD_1 ( name , VAR_1 ) ; }",['Delete Invocation'],1424
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_2 ( STRING_3 , STRING_4 ) ; METHOD_2 ( STRING_5 , STRING_4 ) ; METHOD_2 ( STRING_6 , STRING_4 ) ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_2 ( STRING_5 , STRING_4 ) ; METHOD_2 ( STRING_6 , STRING_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1425
public void handle ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( true ) ; VAR_3 . METHOD_2 ( new TYPE_2 ( ) ) ; METHOD_3 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( new TYPE_2 ( ) ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1427
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; TYPE_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1428
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_2 . get ( i ) . METHOD_4 ( ) ) ; VAR_2 . remove ( i ) ; METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",1429
"public boolean METHOD_1 ( TYPE_1 n , TYPE_2 VAR_1 ) { java.lang.System.out.println ( INT_1 ) ; return VAR_2 . equals ( VAR_1 . METHOD_2 ( ) ) ; }","public boolean METHOD_1 ( TYPE_1 n , TYPE_2 VAR_1 ) { return VAR_2 . equals ( VAR_1 . METHOD_2 ( ) ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1430
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 out ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 out ) throws java.lang.Exception { VAR_2 . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1431
"public java.util.Map < java.lang.String , java.lang.Integer > METHOD_1 ( int id ) { VAR_1 . METHOD_2 ( STRING_1 ) ; return METHOD_3 ( ) ; }","public java.util.Map < java.lang.String , java.lang.Integer > METHOD_1 ( int id ) { return METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1432
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1433
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; VAR_1 = null ; VAR_3 . METHOD_4 ( false ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; VAR_1 = null ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1434
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; ( ( TYPE_1 ) ( this . context ) ) . METHOD_4 ( VAR_2 ) ; VAR_3 . setState ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; ( ( TYPE_1 ) ( this . context ) ) . METHOD_4 ( VAR_2 ) ; VAR_3 . setState ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1435
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1438
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },['Delete Invocation'],1439
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1440
public double METHOD_1 ( ) { if ( ( count ) == 0 ) { return 0 ; } return ( ( double ) ( sum ) ) / ( ( double ) ( count ) ) ; },public double METHOD_1 ( ) { return ( ( double ) ( sum ) ) / ( ( double ) ( count ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1441
"public synchronized void start ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_1 ( STRING_1 ) ; if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( getContext ( ) , this ) ) ; } super . start ( ) ; }","public synchronized void start ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_1 ( STRING_1 ) ; if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( getContext ( ) ) ) ; } super . start ( ) ; }",['Delete ThisAccess'],1442
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 VAR_1 = intent . METHOD_2 ( ) ; java.lang.String VAR_2 = VAR_3 . getString ( VAR_4 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 VAR_1 = intent . METHOD_2 ( ) ; java.lang.String VAR_2 = VAR_3 . getString ( VAR_4 ) ; }",['Delete Invocation'],1443
public static void init ( ) { java.util.logging.Logger.getLogger ( STRING_1 ) . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; },public static void init ( ) { VAR_2 = null ; VAR_3 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1444
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( VAR_1 , this . getClass ( ) . METHOD_4 ( ) ) ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",1445
"public static void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , ( STRING_1 + ( VAR_4 . toString ( ) ) ) ) ; VAR_5 . add ( event ) ; } }",public static void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { VAR_5 . add ( event ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1446
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true ) . METHOD_4 ( ) ; VAR_5 = true ; METHOD_5 ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true ) . METHOD_4 ( ) ; VAR_5 = true ; METHOD_5 ( false ) ; }",['Update Literal'],1447
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1448
protected java.lang.String METHOD_1 ( ) { return VAR_1 class . METHOD_2 ( ( ( STRING_1 + ( VAR_1 class . METHOD_3 ( ) ) ) + STRING_2 ) ) . METHOD_4 ( ) ; },protected java.lang.String METHOD_1 ( ) { return this . getClass ( ) . METHOD_2 ( ( ( STRING_1 + ( VAR_1 class . METHOD_3 ( ) ) ) + STRING_2 ) ) . METHOD_4 ( ) ; },"['Insert Invocation', 'Insert ThisAccess', 'Delete TypeAccess']",1450
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = - 1 ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = - 1 ; },"['Delete TypeAccess', 'Delete Invocation']",1451
"public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + path ) ) ; TYPE_3 . METHOD_1 ( path , VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + path ) ) ; TYPE_3 . METHOD_1 ( path , VAR_1 ) ; }",['Delete TypeAccess'],1452
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_2 , true ) ; VAR_4 . commit ( ) ; METHOD_3 ( ) ; VAR_5 . METHOD_4 ( VAR_6 , VAR_7 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_3 ( ) ; VAR_5 . METHOD_4 ( VAR_6 , VAR_7 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1453
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( 0 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete Literal', 'Delete Invocation']",1454
public int METHOD_1 ( int target ) throws java.io.IOException { while ( ( VAR_1 = METHOD_2 ( ) ) < target ) { } return VAR_1 ; },public int METHOD_1 ( int target ) throws java.io.IOException { while ( ( VAR_1 = METHOD_2 ( ) ) < target ) { return VAR_1 ; } return VAR_1 ; },"['Insert Return', 'Insert FieldRead']",1455
"public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( event . METHOD_3 ( ) ) ) ) ; VAR_1 . METHOD_4 ( VAR_2 . getType ( ) , VAR_2 . getName ( ) , INT_1 ) ; }","public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_4 ( VAR_2 . getType ( ) , VAR_2 . getName ( ) , INT_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1456
protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },['Delete Invocation'],1457
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( 0 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1458
"protected void METHOD_1 ( TYPE_1 VAR_1 , int i , TYPE_2 VAR_2 ) { METHOD_2 ( VAR_1 , i ) ; VAR_3 . METHOD_3 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , int i , TYPE_2 VAR_2 ) { VAR_3 . METHOD_3 ( ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1459
public void METHOD_1 ( int offset ) { METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int offset ) { METHOD_2 ( offset ) ; },"['Insert VariableRead', 'Delete TypeAccess']",1460
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = true ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1461
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; intent . METHOD_3 ( VAR_3 , VAR_4 class . getName ( ) ) ; intent . METHOD_4 ( VAR_5 ) ; METHOD_5 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; intent . METHOD_3 ( VAR_3 , VAR_4 class . getName ( ) ) ; METHOD_5 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1462
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( 0 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_6 . METHOD_6 ( VAR_7 . position ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( 0 ) ; VAR_6 . METHOD_6 ( VAR_7 . position ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1463
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( true ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( true ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( true ) ; super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1465
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; this . params = TYPE_1 . METHOD_3 ( ) ; this . VAR_2 = VAR_3 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . params = TYPE_1 . METHOD_3 ( ) ; this . VAR_2 = VAR_3 ; },['Delete Invocation'],1466
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { VAR_2 = response . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { VAR_2 = response . METHOD_2 ( ) ; METHOD_3 ( ) ; }",['Delete Invocation'],1467
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; VAR_1 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1468
"public void start ( android.view.View view ) { if ( TYPE_1 . METHOD_1 ( ) ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; } else { METHOD_4 ( STRING_1 ) ; } }","public void start ( android.view.View view ) { if ( TYPE_1 . METHOD_1 ( ) ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; } else { METHOD_4 ( STRING_1 ) ; } }",['Delete Invocation'],1469
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . remove ( ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; return false ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . remove ( ) ; return false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1470
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_3 ( ) ; }",['Delete Invocation'],1471
"void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ""false"" ) ; METHOD_3 ( VAR_1 ) ; }",void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( VAR_1 ) ; },"['Delete Literal', 'Delete Invocation']",1472
private void METHOD_1 ( ) { for ( TYPE_1 t : VAR_1 ) { if ( t . METHOD_2 ( ) ) { METHOD_3 ( t ) ; } } },private void METHOD_1 ( ) { for ( TYPE_1 t : VAR_1 ) { if ( t . METHOD_2 ( ) ) { } } },"['Delete VariableRead', 'Delete Invocation']",1473
public TYPE_1 METHOD_1 ( TYPE_2 a ) { java.lang.System.err.println ( STRING_1 ) ; return null ; },public TYPE_1 METHOD_1 ( TYPE_2 a ) { return null ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1475
public void METHOD_1 ( TYPE_1 position ) { VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . VAR_3 ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 position ) { VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . VAR_3 ; },['Delete Invocation'],1477
"public void METHOD_1 ( java.lang.String line ) { TYPE_1 . METHOD_2 ( STRING_1 , line ) ; TYPE_2 message = TYPE_2 . METHOD_3 ( ) ; VAR_1 . obj = line ; message . METHOD_4 ( VAR_2 ) ; message . METHOD_5 ( ) ; }",public void METHOD_1 ( java.lang.String line ) { TYPE_2 message = TYPE_2 . METHOD_3 ( ) ; VAR_1 . obj = line ; message . METHOD_4 ( VAR_2 ) ; message . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1478
"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1479
"private static boolean METHOD_1 ( final int VAR_1 , final java.lang.String path ) { TYPE_1 . METHOD_2 ( ) ; java.lang.System.out.println ( TYPE_2 . METHOD_3 ( VAR_1 , path ) ) ; TYPE_1 . METHOD_4 ( ) ; return false ; }","private static boolean METHOD_1 ( final int VAR_1 , final java.lang.String path ) { java.lang.System.out.println ( TYPE_2 . METHOD_3 ( VAR_1 , path ) ) ; return false ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1480
"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 , VAR_3 ) ; return new TYPE_1 ( VAR_1 , METHOD_2 ( ) , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 , VAR_3 ) ; return new TYPE_1 ( VAR_1 , null , VAR_2 , VAR_3 ) ; }","['Insert Literal', 'Delete Invocation']",1481
"public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , INT_1 ) ; }",public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1482
public java.lang.String getId ( ) throws java.lang.Exception { return ( ( VAR_1 ) + STRING_1 ) + ( VAR_2 ) ; },public java.lang.String getId ( ) throws java.lang.Exception { return null ; },"['Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",1483
"public boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ( ( VAR_2 ) + ( VAR_3 ) ) , VAR_4 ) . getBoolean ( VAR_5 , false ) ; }","public boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_4 ) . getBoolean ( VAR_5 , false ) ; }","['Insert TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",1484
"public static void METHOD_1 ( android.content.Context context , java.lang.String id ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( context ) ; TYPE_3 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 , id ) . commit ( ) ; }","public static void METHOD_1 ( android.content.Context context , java.lang.String id ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( context ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 , id ) . commit ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1485
"public java.lang.CharSequence METHOD_1 ( int position ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; switch ( position ) { case 0 : return STRING_3 ; case 1 : return STRING_4 ; case INT_1 : return STRING_5 ; } return null ; }",public java.lang.CharSequence METHOD_1 ( int position ) { switch ( position ) { case 0 : return STRING_3 ; case 1 : return STRING_4 ; case INT_1 : return STRING_5 ; } return null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1486
protected void METHOD_1 ( java.util.List < TYPE_1 < TYPE_2 > > VAR_1 ) { for ( TYPE_1 < TYPE_2 > VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; } trim ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( java.util.List < TYPE_1 < TYPE_2 > > VAR_1 ) { for ( TYPE_1 < TYPE_2 > VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; } trim ( ) ; METHOD_5 ( ) ; },['Delete Invocation'],1488
"public void METHOD_1 ( ) { assertEquals ( VAR_1 , TYPE_1 . METHOD_2 ( STRING_1 ) ) ; assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( STRING_2 ) ) ; assertEquals ( VAR_3 , TYPE_1 . METHOD_2 ( STRING_3 ) ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( STRING_2 ) ) ; assertEquals ( VAR_3 , TYPE_1 . METHOD_2 ( STRING_3 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1490
"public int METHOD_1 ( int p , int VAR_1 ) { if ( VAR_1 == 0 ) { return p ; } return METHOD_1 ( VAR_1 , ( p % VAR_1 ) ) ; }","public int METHOD_1 ( int p , int VAR_1 ) { return 0 ; }","['Move Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1492
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_3 , STRING_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1493
"private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getText ( ) . length ( ) ) >= 1 ) { VAR_3 . METHOD_2 ( VAR_4 , ""0"" , ""0"" , STRING_1 ) ; } VAR_3 . METHOD_3 ( ) ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1494
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1495
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1496
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = TYPE_2 . METHOD_5 ( METHOD_6 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = TYPE_2 . METHOD_5 ( METHOD_6 ( ) ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1497
"private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , true ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 , true ) ; }",['Delete Invocation'],1498
"public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) ) ; METHOD_2 ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) ) ; }","['Delete Literal', 'Delete Invocation']",1499
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . info ( ( ( ( STRING_1 + ( this . METHOD_2 ( ) ) ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1500
"public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . METHOD_2 ( null ) ; VAR_1 . assertTrue ( STRING_1 , true ) ; }",public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . METHOD_2 ( null ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1501
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; TYPE_2 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_2 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1502
"public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; if ( VAR_3 ) VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1504
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . i ( STRING_1 , ( STRING_2 + VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1505
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . update ( STRING_1 , VAR_1 , VAR_2 , new java.util.Date ( ) . toString ( ) , true ) ; VAR_3 . update ( STRING_2 , true , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . update ( STRING_1 , VAR_1 , VAR_2 , new java.util.Date ( ) . toString ( ) , true ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation']",1506
public void METHOD_1 ( final double VAR_1 ) { a . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( final double VAR_1 ) { a . METHOD_1 ( VAR_1 ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1507
public void METHOD_1 ( TYPE_1 data ) { view . METHOD_2 ( false ) ; view . METHOD_3 ( data ) ; },public void METHOD_1 ( TYPE_1 data ) { view . METHOD_3 ( data ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete Invocation']",1508
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1509
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_2 . METHOD_3 ( true ) ; METHOD_4 ( VAR_6 , VAR_7 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_2 . METHOD_3 ( true ) ; METHOD_4 ( VAR_6 ) ; },['Delete TypeAccess'],1510
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; ( VAR_3 ) ++ ; METHOD_2 ( VAR_3 , false , false ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; ( VAR_3 ) ++ ; METHOD_2 ( VAR_3 , false ) ; }",['Delete Literal'],1511
public void METHOD_1 ( ) { java.lang.System.err.println ( STRING_1 ) ; VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1512
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_2 ( 0 ) ; VAR_3 . METHOD_2 ( 0 ) ; VAR_4 . METHOD_2 ( 0 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_2 ( 0 ) ; VAR_3 . METHOD_2 ( 0 ) ; VAR_4 . METHOD_2 ( 0 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1513
public final void METHOD_1 ( TYPE_1 context ) { if ( VAR_1 ) { return ; } VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; },public final void METHOD_1 ( TYPE_1 context ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1514
protected java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { return STRING_1 ; } return ( STRING_2 + ( VAR_1 ) ) + STRING_3 ; },protected java.lang.String METHOD_1 ( ) { return ( STRING_2 + ( VAR_1 ) ) + STRING_3 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1515
public void METHOD_1 ( int VAR_1 ) { int VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( ( this . VAR_1 ) != VAR_2 ) { this . VAR_1 = VAR_2 ; VAR_3 = true ; METHOD_3 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( int VAR_1 ) { int VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( ( this . VAR_1 ) != VAR_2 ) { this . VAR_1 = VAR_2 ; VAR_3 = true ; METHOD_3 ( ) ; } },['Delete Invocation'],1516
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { VAR_2 . get ( ) . METHOD_2 ( VAR_3 . get ( ) . VAR_4 ) ; response . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { response . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",1517
"public void METHOD_1 ( java.lang.String content , TYPE_1 VAR_1 ) { this . VAR_2 . add ( content ) ; }","public void METHOD_1 ( java.lang.String content , TYPE_1 VAR_1 ) { }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1518
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete Invocation'],1519
public void METHOD_1 ( boolean status ) { VAR_1 . setEnabled ( status ) ; VAR_2 . setEnabled ( status ) ; VAR_3 . setEnabled ( status ) ; VAR_4 . setEnabled ( status ) ; VAR_5 . setEnabled ( status ) ; },public void METHOD_1 ( boolean status ) { VAR_1 . setEnabled ( status ) ; VAR_2 . setEnabled ( status ) ; VAR_3 . setEnabled ( status ) ; VAR_4 . setEnabled ( status ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1520
"public synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; } return VAR_1 ; }",public synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_3 ) ; } return VAR_1 ; },['Delete FieldRead'],1521
private void METHOD_1 ( ) { this . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; },private void METHOD_1 ( ) { this . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",1522
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_3 . getText ( ) . toString ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_3 . getText ( ) . toString ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",1523
public void init ( ) { METHOD_1 ( ) ; },public void init ( ) { },['Delete Invocation'],1524
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . info ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1525
public void METHOD_1 ( int position ) { VAR_1 = position ; TYPE_1 VAR_2 = VAR_3 . get ( position ) ; if ( VAR_2 instanceof TYPE_2 ) { } },public void METHOD_1 ( int position ) { VAR_1 = position ; TYPE_1 VAR_2 = VAR_3 . get ( position ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1526
private java.util.List < java.lang.String > METHOD_1 ( ) { return this . METHOD_2 ( ) . METHOD_3 ( ) ; },private java.lang.String METHOD_1 ( ) { return null ; },"['Update TypeReference', 'Insert Literal', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",1527
"void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_2 , INT_1 ) ; }","void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 , INT_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1528
"public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , false ) ; VAR_4 = false ; super . METHOD_1 ( event , x , y , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_4 = false ; super . METHOD_1 ( event , x , y , VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1529
"public void METHOD_1 ( TYPE_1 data ) { VAR_1 . add ( 0 , data ) ; METHOD_2 ( 0 ) ; }","public void METHOD_1 ( TYPE_1 data ) { VAR_1 . add ( 0 , data ) ; }","['Delete Literal', 'Delete Invocation']",1530
"public int METHOD_1 ( int index ) { return VAR_1 . METHOD_1 ( index , VAR_2 ) ; }","public int METHOD_1 ( int index ) { return VAR_1 . METHOD_1 ( ( index * ( VAR_2 ) ) , VAR_2 ) ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert FieldRead']",1531
"public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 . getName ( ) ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1532
public TYPE_1 update ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( true ) ; return this . VAR_1 ; },public TYPE_1 update ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( true ) ; return this . VAR_1 ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete Invocation']",1533
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; VAR_2 = java.lang.Double . METHOD_3 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_4 = true ; VAR_5 = false ; operation [ 0 ] = 1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = java.lang.Double . METHOD_3 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_4 = true ; VAR_5 = false ; operation [ 0 ] = 1 ; },['Delete Invocation'],1534
"public void METHOD_1 ( java.lang.Class VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; VAR_4 -= VAR_1 . METHOD_6 ( ) ; }",public void METHOD_1 ( java.lang.Class VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_4 -= VAR_1 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1535
public void METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { setText ( null ) ; METHOD_2 ( VAR_1 ) ; } else { setText ( VAR_2 ) ; } VAR_3 = false ; VAR_4 = VAR_5 ; VAR_6 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { setText ( null ) ; METHOD_2 ( VAR_1 ) ; } else { setText ( VAR_2 ) ; } VAR_3 = false ; VAR_4 = VAR_5 ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1536
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; METHOD_3 ( false ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 , token ) ; METHOD_4 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 , token ) ; METHOD_4 ( VAR_4 ) ; }","['Delete Literal', 'Delete Invocation']",1537
"public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1538
"public void METHOD_1 ( ) { METHOD_2 ( ) ; this . add ( VAR_1 , STRING_1 ) ; VAR_2 . setEnabled ( false ) ; this . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; this . add ( VAR_1 , STRING_1 ) ; VAR_2 . setEnabled ( false ) ; }","['Delete ThisAccess', 'Delete Invocation']",1539
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 = false ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1540
public void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = false ; },"['Delete TypeAccess', 'Delete Invocation']",1541
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . setText ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . setText ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1543
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1544
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1545
"private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 ) ) ; }","private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_4 , VAR_5 ) ) ; }",['Delete TypeAccess'],1546
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( STRING_1 , false ) . METHOD_6 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",1547
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } VAR_2 . setText ( ( STRING_1 + ( VAR_3 ) ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1548
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) > 0 ) { VAR_3 . METHOD_3 ( VAR_4 , VAR_2 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) > 0 ) { } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1549
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1550
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( new TYPE_2 ( this ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( new TYPE_2 ( this ) ) ; },['Delete Invocation'],1551
private void METHOD_1 ( TYPE_1 node ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( node ) ; },private void METHOD_1 ( TYPE_1 node ) { VAR_2 . METHOD_3 ( node ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1552
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; java.lang.System.out.println ( VAR_2 ) ; return VAR_2 ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",1553
"public void METHOD_1 ( java.lang.String ... args ) throws java.lang.Exception { VAR_1 . start ( java.util.Arrays.asList ( INT_1 , INT_2 , INT_3 , INT_4 , INT_5 ) ) ; }",public void METHOD_1 ( java.lang.String ... args ) throws java.lang.Exception { VAR_1 . start ( java.util.Arrays.asList ( INT_4 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",1554
"public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( getActivity ( ) , STRING_1 , VAR_4 ) . show ( ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 . METHOD_3 ( getActivity ( ) , STRING_1 , VAR_4 ) . show ( ) ; VAR_1 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1555
private void METHOD_1 ( ) { VAR_1 . show ( ) ; VAR_2 . METHOD_1 ( ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1556
public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; },['Delete Invocation'],1557
"public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( STRING_1 , ""true"" ) ; TYPE_2 . METHOD_2 ( VAR_1 class , args ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_2 ( VAR_1 class , args ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1558
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; this . METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; this . METHOD_3 ( ) ; }",['Delete TypeAccess'],1559
"public void METHOD_1 ( float VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( getContext ( ) , VAR_1 ) ; }",public void METHOD_1 ( float VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; },"['Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1560
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException , TYPE_3 { TYPE_4 . METHOD_2 ( ) ; TYPE_5 . METHOD_2 ( ) ; TYPE_6 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException , TYPE_3 { METHOD_3 ( VAR_3 , VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1561
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , METHOD_3 ( VAR_4 ) , VAR_5 ) ; METHOD_4 ( VAR_3 ) ; VAR_6 . METHOD_5 ( false ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , METHOD_3 ( VAR_4 ) , VAR_5 ) ; METHOD_4 ( VAR_3 ) ; VAR_6 . METHOD_5 ( false ) ; }",['Delete Invocation'],1563
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , ""true"" ) ; TYPE_2 . METHOD_3 ( VAR_1 , false ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , ""true"" ) ; METHOD_3 ( VAR_1 , false ) ; }",['Update TypeAccess'],1564
public void METHOD_1 ( ) { try { if ( VAR_1 ) { VAR_2 . start ( ) ; } else { METHOD_2 ( ) ; VAR_2 . start ( ) ; } } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_2 . start ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1566
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1567
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( x , y , VAR_3 , ( ( VAR_3 ) / INT_1 ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( x , y , VAR_3 , ( ( VAR_3 ) / INT_1 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1568
private void METHOD_1 ( java.lang.String state ) { this . VAR_1 . setText ( state ) ; },private void METHOD_1 ( java.lang.String state ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1569
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { switch ( VAR_1 ) { case VAR_2 : METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; break ; default : break ; } },public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { switch ( VAR_1 ) { case VAR_2 : METHOD_2 ( VAR_3 ) ; break ; default : break ; } },['Delete Invocation'],1570
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , date ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1571
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( STRING_3 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( STRING_3 ) ) ; }",['Update TypeAccess'],1573
public java.lang.String getValue ( ) { if ( this . METHOD_1 ( ) ) { return this . METHOD_2 ( ) . get ( 0 ) . METHOD_3 ( ) ; } else { return STRING_1 ; } },public java.lang.String getValue ( ) { return this . METHOD_3 ( ) ; },"['Insert Return', 'Update Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1574
"public static TYPE_1 METHOD_1 ( java.io.File file ) { TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( null , file , VAR_2 ) ; VAR_3 . add ( VAR_1 ) ; return VAR_1 ; }","public static TYPE_1 METHOD_1 ( java.io.File file ) { TYPE_3 VAR_1 = new TYPE_3 ( null , file , VAR_2 ) ; VAR_3 . add ( VAR_1 ) ; return VAR_1 ; }","['Delete TypeAccess', 'Delete Invocation']",1575
"public void update ( TYPE_1 VAR_1 ) { VAR_2 . index ( VAR_1 , METHOD_1 ( ) , VAR_3 ) ; VAR_4 . METHOD_2 ( METHOD_1 ( ) ) ; }","public void update ( TYPE_1 VAR_1 ) { VAR_2 . index ( VAR_1 , METHOD_1 ( ) , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; }",['Delete Invocation'],1576
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { METHOD_3 ( ) ; } VAR_2 . update ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1577
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( ( ( METHOD_2 ( ) ) + STRING_1 ) + VAR_1 ) ) ; VAR_2 . get ( METHOD_3 ( ) ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1579
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( VAR_4 ) ; VAR_3 . update ( VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1580
"public void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( context , VAR_1 ) ; VAR_4 . execute ( ) ; }","public void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( context , VAR_1 ) ; VAR_4 . execute ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1581
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . show ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1582
protected void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1583
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_2 ) == 0 ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return true ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1585
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . VAR_2 ; VAR_1 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( this ) . METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_7 ( ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . VAR_2 ; VAR_1 . METHOD_3 ( ) ; METHOD_7 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1586
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 . METHOD_3 ( ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1588
"public java.lang.String METHOD_1 ( ) { if ( ( type ) == null ) return null ; final int VAR_1 = VAR_2 . METHOD_2 ( CHAR_1 ) ; return VAR_1 == ( - 1 ) ? null : VAR_3 . substring ( 0 , VAR_1 ) ; }","public java.lang.String METHOD_1 ( ) { final int VAR_1 = VAR_2 . METHOD_2 ( CHAR_1 ) ; return VAR_1 == ( - 1 ) ? null : VAR_3 . substring ( 0 , ( VAR_1 - 1 ) ) ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1589
public static TYPE_1 METHOD_1 ( java.lang.String string ) { string = VAR_1 . toUpperCase ( VAR_2 ) ; return TYPE_1 . METHOD_2 ( string ) ; },public static TYPE_1 METHOD_1 ( java.lang.String string ) { string = VAR_1 . toUpperCase ( ) ; return TYPE_1 . METHOD_2 ( string ) ; },['Delete TypeAccess'],1590
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_5 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_5 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1592
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , STRING_2 ) ; intent . METHOD_2 ( STRING_3 , STRING_4 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1593
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; METHOD_2 ( ) . METHOD_4 ( ) ; VAR_4 . replace ( VAR_5 , VAR_1 ) ; VAR_4 . commit ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 . add ( VAR_5 , VAR_1 ) ; VAR_4 . commit ( ) ; }","['Update Invocation', 'Delete Invocation', 'Delete Invocation']",1594
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1596
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1597
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( null ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete Literal', 'Delete Invocation']",1599
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1601
"public TYPE_1 append ( double value ) { VAR_1 . METHOD_1 ( VAR_2 , value ) ; return this ; }","public TYPE_1 append ( double value ) { VAR_1 . METHOD_1 ( VAR_2 , value ) ; }","['Delete ThisAccess', 'Delete Return']",1602
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1603
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( false ) ; TYPE_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1604
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( index ) ) ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( this . VAR_2 , index ) ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( this . VAR_2 , index ) ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1605
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1607
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { for ( TYPE_1 VAR_4 : VAR_3 ) { METHOD_4 ( VAR_4 ) ; } } },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { for ( TYPE_1 VAR_4 : VAR_3 ) { METHOD_4 ( VAR_4 ) ; } } },"['Delete TypeAccess', 'Delete Invocation']",1608
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) return ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1609
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; },['Delete Invocation'],1610
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( 0 , 0 , VAR_2 , VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1611
"public static java.lang.Class < ? extends TYPE_1 > [ ] METHOD_1 ( ) { return new java.lang.Class [ ] { VAR_1 class , VAR_2 class } ; }",public static java.lang.Class < ? extends TYPE_1 > [ ] METHOD_1 ( ) { return new java.lang.Class [ ] { VAR_1 class } ; },['Delete FieldRead'],1612
public void METHOD_1 ( ) { try { VAR_1 . delete ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },public void METHOD_1 ( ) { try { VAR_1 . delete ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1613
"public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; return TYPE_1 . METHOD_3 ( VAR_4 , VAR_1 ) ; }","public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( VAR_4 , VAR_1 ) ; }",['Delete TypeAccess'],1614
public void message ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( STRING_1 ) ; },public void message ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1615
public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },['Delete Invocation'],1616
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1617
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { return null ; } return this . VAR_2 [ VAR_1 ] ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_2 [ VAR_1 ] ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1619
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = METHOD_2 ( ) ; METHOD_4 ( ) ; },['Delete Invocation'],1620
public void METHOD_1 ( ) { for ( TYPE_1 < TYPE_2 > VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 < TYPE_2 > VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1621
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1622
public void METHOD_1 ( ) { if ( VAR_1 ) return ; VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1623
"public long count ( ) { return VAR_1 . count ( null , VAR_2 class ) ; }",public long count ( ) { return 0 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",1624
"public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1625
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1626
public void METHOD_1 ( ) { this . VAR_1 = null ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; VAR_3 . setValue ( STRING_3 ) ; VAR_4 . setValue ( STRING_3 ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1627
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; this . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; this . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_3 ) ; this . METHOD_4 ( ) ; java.lang.System.out.println ( STRING_4 ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1629
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 ) ; }",['Delete Invocation'],1630
public boolean METHOD_1 ( ) { return ( VAR_1 ) instanceof TYPE_1 ; },public boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete FieldRead', 'Delete TypeAccess', 'Delete BinaryOperator']",1631
protected void METHOD_1 ( java.lang.String response ) { if ( response == null ) { response = STRING_1 ; METHOD_2 ( ) ; return ; } METHOD_3 ( response ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( java.lang.String response ) { if ( response == null ) { response = STRING_1 ; } METHOD_3 ( response ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete Invocation', 'Delete Return']",1632
"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; METHOD_3 ( context ) ; VAR_3 . setState ( false ) ; METHOD_4 ( context ) ; }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { METHOD_3 ( context ) ; VAR_3 . setState ( false ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1633
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_4 , VAR_5 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }",['Delete FieldRead'],1634
"public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { METHOD_2 ( ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { }","['Delete Invocation', 'Delete Invocation']",1635
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1637
public void METHOD_1 ( ) { VAR_1 . open ( ) ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1638
public void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1639
"private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) && ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_1 , STRING_1 ) ; } }",private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) && ( METHOD_4 ( ) ) ) { } },"['Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1640
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1641
public void execute ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( VAR_3 class ) ; VAR_2 . METHOD_2 ( message ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; },public void execute ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( VAR_3 class ) ; VAR_2 . METHOD_2 ( message ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1642
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . getName ( ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . name , VAR_1 ) ; }","['Insert FieldRead', 'Move TypeAccess', 'Delete Invocation']",1643
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; } },public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1644
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( java.lang.String . METHOD_4 ( VAR_4 ) , STRING_1 ) . METHOD_5 ( ) ; METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 , VAR_2 ) . show ( ) ; METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1645
"private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 , null ) ) ; intent . METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( intent , VAR_5 ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 , null ) ) ; intent . METHOD_3 ( VAR_3 , VAR_5 ) ; METHOD_4 ( intent , VAR_5 ) ; METHOD_5 ( ) ; }",['Update TypeAccess'],1646
public TYPE_1 METHOD_1 ( java.lang.Object key ) { if ( ( VAR_1 ) == null ) { return null ; } return VAR_2 . get ( key ) ; },public TYPE_1 METHOD_1 ( java.lang.Object key ) { return VAR_2 . get ( key ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1647
public TYPE_1 METHOD_1 ( java.lang.Long id ) throws java.lang.Exception { if ( id != null ) { TYPE_1 t = VAR_1 . METHOD_2 ( id ) ; t . METHOD_3 ( null ) ; return VAR_1 . METHOD_4 ( t ) ; } return null ; },public void METHOD_1 ( java.lang.Long id ) throws java.lang.Exception { if ( id != null ) { TYPE_1 t = VAR_1 . METHOD_2 ( id ) ; t . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( t ) ; } },"['Update TypeReference', 'Move Invocation', 'Delete Return', 'Delete Literal', 'Delete Return']",1648
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1649
"public void METHOD_1 ( int VAR_1 , int length , int [ ] buffer ) { VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , length , buffer ) ; }","public void METHOD_1 ( int VAR_1 , int length , int [ ] buffer ) { VAR_2 . METHOD_1 ( ( VAR_1 * ( VAR_3 ) ) , VAR_3 , length , buffer ) ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert FieldRead']",1650
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_1 ( ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_1 ( ) ; METHOD_3 ( VAR_3 ) ; },['Delete Invocation'],1651
"void listener ( TYPE_1 < java.lang.String > VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_2 . METHOD_1 ( ) ; VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","void listener ( TYPE_1 < java.lang.String > VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_2 . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1654
public void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( this ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1655
protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_6 ( ) ; },protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } else { METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_6 ( ) ; },['Delete Invocation'],1656
"protected boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return ( VAR_3 ) == ( VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) . METHOD_3 ( ) ) ; }","protected boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return ( this . VAR_3 ) == ( this . VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) . METHOD_3 ( ) ) ; }","['Insert ThisAccess', 'Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",1657
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; return false ; },['Delete VariableRead'],1658
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1659
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",1660
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; return TYPE_3 . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; return TYPE_3 . METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1661
private void METHOD_1 ( android.content.Intent data ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( data . METHOD_2 ( ) . get ( STRING_1 ) ) ) ; TYPE_2 . METHOD_3 ( this ) . METHOD_4 ( VAR_2 ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; },private void METHOD_1 ( android.content.Intent data ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( data . METHOD_2 ( ) . get ( STRING_1 ) ) ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1662
"public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( event , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( event , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }",['Delete TypeAccess'],1663
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : { METHOD_3 ( ) ; this . METHOD_4 ( ) ; return true ; } } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : { METHOD_3 ( ) ; return true ; } } return super . METHOD_1 ( item ) ; },"['Delete ThisAccess', 'Delete Invocation']",1664
public void METHOD_1 ( TYPE_1 error ) { if ( error instanceof TYPE_2 ) { if ( ( TYPE_3 . METHOD_2 ( ) ) != null ) { TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) ; } } },public void METHOD_1 ( TYPE_1 error ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",1665
"public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 < java.lang.String > VAR_3 ) { if ( VAR_1 != null ) { this . VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 < java.lang.String > VAR_3 ) { return false ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1666
private void METHOD_1 ( ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_1 ( VAR_3 . toString ( ) ) ; VAR_2 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( VAR_3 . toString ( ) ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1667
"public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , key ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( VAR_3 ) ; } VAR_5 . remove ( key ) ; }","public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , key ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( VAR_3 ) ; } }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1668
public void METHOD_1 ( java.lang.String error ) { METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String error ) { },['Delete Invocation'],1669
"public void METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( this , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete ThisAccess']",1670
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; },protected void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1671
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( new java.lang.Exception ( ( STRING_2 + ( VAR_3 . toString ( ) ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new java.lang.Exception ( ( STRING_2 + ( VAR_3 . toString ( ) ) ) ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1673
"private java.util.Set < TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > key , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . build ( key ) . METHOD_2 ( VAR_1 ) ; return new TYPE_4 ( this , VAR_2 , VAR_4 ) ; }","private java.util.Set < TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > key , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . build ( key ) . METHOD_2 ( VAR_1 ) ; return new TYPE_4 ( this , VAR_2 ) ; }",['Delete FieldRead'],1674
"public android.view.View METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) ; TYPE_2 . METHOD_6 ( VAR_3 , STRING_1 ) ; return VAR_1 ; }",public android.view.View METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1675
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . setEnabled ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1676
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1677
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( i ) . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( i ) . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1678
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1679
public void METHOD_1 ( ) throws java.lang.Exception { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; },"['Delete ThisAccess', 'Delete Invocation']",1680
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }",['Delete Invocation'],1681
"public static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_1 ) . METHOD_5 ( ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_1 ) . METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1683
"public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; try { TYPE_1 . METHOD_2 ( ) ; VAR_1 . put ( STRING_2 , false ) ; } catch ( java.lang.Exception VAR_2 ) { } new TYPE_2 ( ) ; }",public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; try { TYPE_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } new TYPE_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1684
private void METHOD_1 ( final TYPE_1 file ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; VAR_4 . assertTrue ( ( ( VAR_1 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; },private void METHOD_1 ( final TYPE_1 file ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; assertTrue ( ( ( VAR_1 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; },['Update TypeAccess'],1685
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ) ; }",public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( new TYPE_3 ( VAR_1 ) ) ) ; },"['Delete FieldRead', 'Delete FieldRead']",1686
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( ) . METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 . METHOD_4 ( ) . METHOD_6 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { },"['Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1687
public void METHOD_1 ( java.lang.String result ) { VAR_1 . setText ( result ) ; },public void METHOD_1 ( java.lang.String result ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1689
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; } VAR_1 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; } VAR_1 = false ; },"['Delete TypeAccess', 'Delete Invocation']",1691
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1692
public java.lang.Object METHOD_1 ( TYPE_1 key ) throws TYPE_2 { if ( VAR_1 . equals ( VAR_2 ) ) { return VAR_3 ; } else if ( VAR_1 . equals ( VAR_4 ) ) { return VAR_5 . name ( ) ; } throw new TYPE_3 ( ) ; },public java.lang.Object METHOD_1 ( TYPE_1 key ) throws TYPE_2 { if ( VAR_1 . equals ( VAR_2 ) ) { return VAR_3 ; } throw new TYPE_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Block']",1693
public java.lang.String METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( ( VAR_1 - ( this . VAR_2 ) ) > INT_1 ) { METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; } return VAR_3 ; },public java.lang.String METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( ( VAR_1 - ( this . VAR_2 ) ) > INT_1 ) { METHOD_4 ( ) ; } return VAR_3 ; },"['Update Invocation', 'Delete VariableRead', 'Delete Invocation']",1694
public void METHOD_1 ( java.lang.Object obj ) { try { out . METHOD_2 ( obj ) ; out . METHOD_3 ( ) ; out . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_5 ( ) ; } },public void METHOD_1 ( java.lang.Object obj ) { try { out . METHOD_2 ( obj ) ; out . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_5 ( ) ; } },"['Delete FieldRead', 'Delete Invocation']",1695
protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_3 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1696
public void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) VAR_3 . METHOD_2 ( ) ; else METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) METHOD_2 ( ) ; else METHOD_3 ( ) ; },['Update TypeAccess'],1697
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_4 . setEnabled ( true ) ; VAR_5 . METHOD_3 ( VAR_6 , VAR_5 . METHOD_4 ( ) ) ; } else VAR_4 . setEnabled ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) VAR_4 . setEnabled ( true ) ; else VAR_4 . setEnabled ( false ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1698
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1699
protected void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; },protected void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_5 ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",1700
"public void METHOD_1 ( TYPE_1 buf , java.util.Date date , TYPE_2 VAR_1 , TYPE_3 response , long time ) { VAR_2 . append ( TYPE_4 . METHOD_2 ( METHOD_3 ( VAR_1 . METHOD_4 ( VAR_3 ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 buf , java.util.Date date , TYPE_2 VAR_1 , TYPE_3 response , long time ) { VAR_2 . append ( METHOD_2 ( METHOD_3 ( VAR_1 . METHOD_4 ( VAR_3 ) ) ) ) ; }",['Update TypeAccess'],1701
"private void init ( int VAR_1 ) { count = 0 ; VAR_2 = new TYPE_1 [ TYPE_2 . METHOD_1 ( VAR_1 , VAR_3 ) ] ; }",private void init ( int VAR_1 ) { count = 0 ; VAR_2 = new TYPE_1 [ VAR_1 ] ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1702
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( true ) ; new TYPE_1 ( this ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; new TYPE_1 ( this ) . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1703
protected void end ( ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_1 ( ) ) ) ) ; VAR_1 . METHOD_2 ( ) ; },protected void end ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; },"['Insert TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",1704
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; if ( VAR_1 ) { METHOD_5 ( ) ; METHOD_6 ( ) ; } },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( VAR_1 ) { METHOD_5 ( ) ; METHOD_6 ( ) ; } },['Delete Invocation'],1706
public void METHOD_1 ( int ... VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int ... VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },['Delete Invocation'],1707
public void METHOD_1 ( long VAR_1 ) { this . VAR_2 . set ( ( ( int ) ( VAR_1 ) ) ) ; },public void METHOD_1 ( long VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']",1708
public void METHOD_1 ( ) { ( VAR_1 ) -- ; java.lang.System.out.println ( ( STRING_1 + ( VAR_1 ) ) ) ; },public void METHOD_1 ( ) { ( VAR_1 ) -- ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1709
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( string , VAR_3 . x , VAR_3 . y ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( string , VAR_3 . x , VAR_3 . y ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1710
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 ) ; VAR_4 = VAR_5 . get ( getContext ( ) ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 ) ; VAR_4 = VAR_5 . get ( getContext ( ) ) . METHOD_3 ( VAR_2 ) ; },"['Delete Literal', 'Delete Invocation']",1711
"public double METHOD_1 ( ) { double x = VAR_1 . METHOD_1 ( VAR_2 , 1 ) ; double y = VAR_3 . METHOD_1 ( VAR_4 , 1 ) ; return x / ( x + y ) ; }",public double METHOD_1 ( ) { double x = VAR_1 . METHOD_1 ( ) ; double y = VAR_3 . METHOD_1 ( ) ; return x / ( x + y ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal']",1712
protected void METHOD_1 ( ) { params . METHOD_2 ( VAR_1 ) ; if ( METHOD_3 ( ) ) VAR_2 . METHOD_4 ( VAR_3 ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { params . METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1714
"public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 , INT_1 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1715
protected static void METHOD_1 ( java.lang.String filename ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( ( STRING_2 + filename ) ) ; TYPE_2 . METHOD_3 ( new java.io.FileReader ( new java.io.File ( filename ) . METHOD_4 ( ) ) ) ; },protected static void METHOD_1 ( java.lang.String filename ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( new java.io.FileReader ( new java.io.File ( filename ) . METHOD_4 ( ) ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1716
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this , VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( this , VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1717
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int status ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_4 . toString ( ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int status ) { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1719
private java.util.ArrayList < java.net.URL > METHOD_1 ( ) { java.lang.String path = ( METHOD_2 ( ) ) + STRING_1 ; return METHOD_3 ( path ) ; },private java.util.ArrayList < java.net.URL > METHOD_1 ( ) { java.lang.String path = ( METHOD_2 ( ) ) + STRING_1 ; java.lang.System.out.println ( path ) ; return METHOD_3 ( path ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",1720
public void METHOD_1 ( java.lang.String id ) { this . VAR_1 . METHOD_2 ( true ) ; },public void METHOD_1 ( java.lang.String id ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",1721
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( false ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( false ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1723
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_7 ( ) ; } },public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_7 ( ) ; } METHOD_5 ( ) . METHOD_6 ( ) ; },"['Insert Invocation', 'Insert Invocation', 'Delete Invocation']",1724
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( this , ( STRING_1 + VAR_1 ) , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1725
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; TYPE_1 . METHOD_2 ( VAR_5 ) ; TYPE_1 . METHOD_2 ( VAR_6 ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; TYPE_1 . METHOD_2 ( VAR_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1726
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( token , VAR_1 , true ) ; super . METHOD_1 ( VAR_1 ) ; this . VAR_2 . METHOD_3 ( ) ; this . VAR_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( token , VAR_1 , true ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1727
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . show ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_2 ( INT_1 ) . setEnabled ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . show ( VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",1728
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",1729
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( VAR_1 ) ; },['Delete Invocation'],1730
public void handle ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) == INT_1 ) { VAR_2 . setValue ( FLOAT_1 ) ; VAR_3 . METHOD_2 ( VAR_2 . getValue ( ) ) ; VAR_4 . METHOD_3 ( true ) ; } },public void handle ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) == INT_1 ) { VAR_2 . setValue ( FLOAT_1 ) ; VAR_3 . METHOD_2 ( VAR_2 . getValue ( ) ) ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1731
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . replace ( VAR_2 . getId ( ) , TYPE_2 . METHOD_5 ( ) ) . commit ( ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; }","['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1732
protected void METHOD_1 ( java.lang.Integer VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; },protected void METHOD_1 ( java.lang.Integer VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1733
public static void init ( java.io.File VAR_1 ) { if ( ( VAR_2 ) == null ) { TYPE_1 . METHOD_1 ( STRING_1 ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; TYPE_3 . METHOD_2 ( ) ; } },public static void init ( java.io.File VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; TYPE_3 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1734
"public java.lang.String METHOD_1 ( ) { return java.lang.String.format ( STRING_1 , ( ( VAR_1 . toLowerCase ( ) ) + STRING_2 ) , TYPE_1 . METHOD_2 ( super . METHOD_1 ( ) ) ) ; }","public java.lang.String METHOD_1 ( ) { return java.lang.String.format ( STRING_1 , ( ( VAR_1 . toLowerCase ( ) ) + STRING_2 ) , METHOD_2 ( super . METHOD_1 ( ) ) ) ; }",['Update TypeAccess'],1735
"public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_3 . getColor ( getContext ( ) , VAR_1 ) , VAR_4 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_3 . getColor ( getContext ( ) , VAR_1 ) , VAR_4 ) ; }",['Delete Invocation'],1736
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_2 . METHOD_3 ( ) ) { VAR_5 . put ( VAR_4 , 0 ) ; } } }","public void METHOD_1 ( ) { for ( TYPE_1 VAR_2 : VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_2 . METHOD_3 ( ) ) { VAR_5 . put ( VAR_4 , 0 ) ; } } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1737
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_2 . METHOD_2 ( VAR_3 . get ( position ) . METHOD_3 ( ) . get ( position ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { }","['Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1738
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; TYPE_2 VAR_3 = this . METHOD_3 ( ) ; VAR_4 . delete ( VAR_5 , null , null ) ; VAR_3 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { TYPE_2 VAR_3 = this . METHOD_3 ( ) ; VAR_4 . delete ( VAR_5 , null , null ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1739
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . size ( ) ) ) ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1740
public void add ( TYPE_1 item ) { VAR_1 . add ( item ) ; METHOD_1 ( ( ( METHOD_2 ( ) ) - 1 ) ) ; },public void add ( TYPE_1 item ) { VAR_1 . add ( item ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",1741
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) . get ( ) . METHOD_4 ( ) ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) . get ( ) . METHOD_5 ( ) ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( ) { METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1743
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_3 . METHOD_3 ( STRING_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1744
"public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; TYPE_1 . METHOD_3 ( this , VAR_2 , VAR_3 ) . show ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_3 ( this , VAR_2 , VAR_3 ) . show ( ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1746
"public boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( ( VAR_2 ) == ( VAR_3 ) ) ) ) ; return ( VAR_2 ) == ( VAR_3 ) ; }",public boolean METHOD_1 ( ) { return ( VAR_2 ) == ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Invocation']",1747
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( VAR_2 , this . METHOD_2 ( ) , this . METHOD_3 ( ) , VAR_3 , height ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1748
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { java.lang.System.out.println ( VAR_1 . get ( i ) . toString ( ) ) ; } },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { java.lang.System.out.println ( VAR_1 . get ( i ) ) ; } },"['Update Invocation', 'Move Invocation', 'Move FieldRead', 'Delete Invocation']",1749
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { if ( ( VAR_2 ) == 1 ) { VAR_2 = INT_1 ; METHOD_2 ( VAR_2 , true ) ; } else { METHOD_3 ( ) ; METHOD_4 ( ) ; } VAR_3 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { if ( ( VAR_2 ) == 1 ) { VAR_2 = INT_1 ; METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( ) ; } VAR_3 . METHOD_5 ( ) ; }","['Delete Literal', 'Delete Invocation']",1750
public TYPE_1 < ? > METHOD_1 ( ) { return VAR_1 ; },public TYPE_1 < ? > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",1751
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . info ( STRING_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . info ( STRING_1 ) ; METHOD_2 ( ) ; VAR_1 . info ( STRING_2 ) ; },['Delete Invocation'],1752
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; return VAR_1 . METHOD_1 ( ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1754
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) . METHOD_4 ( METHOD_5 ( ) . getColor ( VAR_3 ) ) . init ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1755
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1756
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) METHOD_2 ( null ) ; METHOD_3 ( ( ( TYPE_1 ) ( VAR_1 ) ) , ( ! ( VAR_2 ) ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ( ( TYPE_1 ) ( VAR_1 ) ) , ( ! ( VAR_2 ) ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1757
public void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1760
public int METHOD_1 ( ) { ( VAR_1 ) -- ; return VAR_1 ; },public int METHOD_1 ( ) { ( VAR_1 ) -- ; },"['Delete FieldRead', 'Delete Return']",1761
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 = true ; } },['Delete Invocation'],1762
"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , this . METHOD_3 ( ) . toString ( ) ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1763
protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( new TYPE_1 ( VAR_2 ) ) ; },protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( new TYPE_1 ( VAR_2 ) ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1765
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) , STRING_2 , VAR_1 ) . show ( ) ; VAR_2 . METHOD_5 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) , STRING_2 , VAR_1 ) . show ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1766
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],1767
public boolean METHOD_1 ( android.content.Intent intent ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; return false ; },public boolean METHOD_1 ( android.content.Intent intent ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_4 ( ) ; return false ; },"['Delete TypeAccess', 'Delete Invocation']",1769
"public static void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 , false ) ; }","['Insert Literal', 'Delete TypeAccess']",1770
private void METHOD_1 ( ) { switch ( TYPE_1 . METHOD_2 ( ) ) { case 0 : METHOD_3 ( ) ; break ; case 1 : METHOD_4 ( ) ; break ; case INT_1 : METHOD_5 ( ) ; break ; default : break ; } },private void METHOD_1 ( ) { switch ( TYPE_1 . METHOD_2 ( ) ) { case 0 : METHOD_3 ( ) ; break ; case 1 : METHOD_4 ( ) ; break ; case INT_1 : break ; default : break ; } },['Delete Invocation'],1771
public void handle ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; },['Update TypeAccess'],1772
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( 0 , VAR_3 , 0 , VAR_4 ) . METHOD_2 ( VAR_5 ) ; VAR_2 . add ( 0 , VAR_6 , 0 , VAR_7 ) . METHOD_2 ( VAR_8 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( 0 , VAR_6 , 0 , VAR_7 ) . METHOD_2 ( VAR_8 ) ; return true ; }","['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1773
"void METHOD_1 ( TYPE_1 event ) { buffer . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ""0"" ) ; }",void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1775
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; if ( ! ( this . VAR_2 ) ) { this . VAR_3 = true ; } return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( this . VAR_2 ) ) { this . VAR_3 = true ; } return this ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1776
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . start ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . start ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1777
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_2 ( VAR_2 . toString ( ) , VAR_3 . toString ( ) ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1778
public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { METHOD_3 ( ) ; return true ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { } return super . METHOD_1 ( item ) ; },"['Delete Invocation', 'Delete Literal', 'Delete Return']",1779
"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , STRING_1 , VAR_3 ) ; VAR_4 . add ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_2 + VAR_2 ) ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , STRING_1 ) ; VAR_4 . add ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_2 + VAR_2 ) ) ; return VAR_2 ; }",['Delete FieldRead'],1780
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( VAR_3 ) ; } VAR_4 . METHOD_4 ( this ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; } },"['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1781
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( false ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete Literal', 'Delete Invocation']",1782
"protected void end ( ) { VAR_1 . METHOD_1 ( 0 , 0 ) ; }",protected void end ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",1783
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; TYPE_1 . METHOD_5 ( getActivity ( ) ) ; VAR_1 . METHOD_6 ( null ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; TYPE_1 . METHOD_5 ( getActivity ( ) ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1785
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 ) . commit ( ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( STRING_3 , STRING_4 ) . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( this ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 ) . commit ( ) ; TYPE_1 . METHOD_5 ( this ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1786
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { },"['Update TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1787
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( ) ; } this . METHOD_5 ( VAR_2 ) ; },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( true ) ; } this . METHOD_5 ( VAR_2 ) ; },['Delete Invocation'],1788
"public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( VAR_3 , ( INT_1 / INT_2 ) ) ; }","public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( VAR_3 , INT_1 ) ; }","['Insert TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",1789
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; },"['Delete VariableRead', 'Delete Invocation']",1790
"protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , VAR_7 ) ; VAR_8 . METHOD_4 ( VAR_1 ) ; }","protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , VAR_7 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1791
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1792
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . get ( VAR_1 ) . toString ( ) ) ; return VAR_2 . get ( VAR_1 ) ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1793
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , ( STRING_1 + ( VAR_1 . METHOD_4 ( ) ) ) , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1794
"public void METHOD_1 ( java.lang.Integer id ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_4 . toString ( ) ) ; intent . METHOD_3 ( VAR_5 ) ; VAR_1 . METHOD_4 ( intent ) ; }","public void METHOD_1 ( java.lang.Integer id ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_4 . toString ( ) ) ; VAR_1 . METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1795
public void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },['Delete Invocation'],1796
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_4 ( ) ; return true ; }",public boolean METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_4 ( ) ; return true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1797
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . update ( TYPE_3 . METHOD_3 ( this ) ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",1798
public boolean METHOD_1 ( ) { return ( this . VAR_1 ) != null ; },public boolean METHOD_1 ( ) { return false ; },"['Insert Literal', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1799
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { TYPE_1 . METHOD_2 ( ) ; VAR_1 = METHOD_3 ( ) ; return VAR_1 ; } },public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { VAR_1 = METHOD_3 ( ) ; return VAR_1 ; } },"['Delete TypeAccess', 'Delete Invocation']",1800
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( view ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( view ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1801
"public TYPE_1 METHOD_1 ( android.content.Context context ) { return new TYPE_1 ( context , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; }","public TYPE_1 METHOD_1 ( android.content.Context context ) { return new TYPE_1 ( context , VAR_1 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",1802
"public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1804
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , STRING_1 , VAR_6 , VAR_7 , this ) ; VAR_8 . init ( ) ; VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , STRING_1 , VAR_6 , VAR_7 ) ; VAR_8 . init ( ) ; VAR_2 . METHOD_2 ( ) ; }",['Delete ThisAccess'],1805
public void METHOD_1 ( TYPE_1 listener ) throws TYPE_2 { TYPE_3 . METHOD_2 ( ( STRING_1 + listener ) ) ; if ( METHOD_3 ( ) ) VAR_1 . get ( ) . VAR_2 . METHOD_4 ( listener ) ; },public void METHOD_1 ( TYPE_1 listener ) throws TYPE_2 { if ( METHOD_3 ( ) ) VAR_1 . get ( ) . VAR_2 . METHOD_4 ( listener ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1807
"private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.err.println ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; TYPE_2 b = new TYPE_2 ( ) ; b . METHOD_2 ( VAR_2 , VAR_3 . getValue ( ) ) ; METHOD_3 ( VAR_4 , b ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 b = new TYPE_2 ( ) ; b . METHOD_2 ( VAR_2 , VAR_3 . getValue ( ) ) ; METHOD_3 ( VAR_4 , b ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1808
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) { } },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) { VAR_1 . METHOD_1 ( ) ; } },"['Insert Invocation', 'Insert TypeAccess']",1809
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1810
"public void METHOD_1 ( TYPE_1 error ) { VAR_1 . METHOD_2 ( name , VAR_2 , error ) ; }","public void METHOD_1 ( TYPE_1 error ) { VAR_1 . METHOD_2 ( name , error ) ; }",['Delete TypeAccess'],1811
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; VAR_2 = new TYPE_2 ( this , VAR_3 ) ; } }","private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; VAR_2 = new TYPE_2 ( this , VAR_3 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1812
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( true ) ; TYPE_2 . METHOD_4 ( getActivity ( ) ) . METHOD_5 ( this ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( true ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",1813
"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; METHOD_3 ( intent ) ; TYPE_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; METHOD_3 ( intent ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1814
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( STRING_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1815
"public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1816
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . equals ( STRING_1 ) ) TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_2 ( ) . METHOD_4 ( VAR_4 ) ) ; VAR_1 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1817
"public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; }",public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1819
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1820
"protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 ) ; return VAR_4 ; }","protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_2 ( VAR_5 , VAR_6 ) ; return VAR_4 ; }",['Delete TypeAccess'],1821
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_2 ) == null ) ) return ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_2 ) == null ) ) return ; VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1823
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , ( STRING_1 + ( VAR_3 ) ) ) ; VAR_3 = null ; }",public void METHOD_1 ( ) { VAR_3 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1824
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1825
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . length ) > 0 ) { java.lang.System.out.println ( STRING_1 ) ; for ( java.lang.String VAR_1 : METHOD_2 ( ) ) { java.lang.System.out.print ( ( VAR_1 + STRING_2 ) ) ; } } java.lang.System.out.println ( ) ; },public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . length ) > 0 ) { java.lang.System.out.println ( STRING_1 ) ; for ( java.lang.String VAR_1 : METHOD_2 ( ) ) { java.lang.System.out.print ( ( VAR_1 + STRING_2 ) ) ; } } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1827
public void METHOD_1 ( int VAR_1 ) { step += VAR_1 ; VAR_2 = ( ( step ) / ( VAR_3 . size ( ) ) ) + 1 ; },public void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( step ) ; step += VAR_1 ; VAR_2 = ( ( step ) / ( VAR_3 . size ( ) ) ) + 1 ; },"['Insert Invocation', 'Insert FieldRead', 'Insert FieldRead', 'Insert TypeAccess']",1828
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 , this ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 , this ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1830
"public void METHOD_1 ( ) { VAR_1 . remove ( 0 ) ; TYPE_1 . METHOD_2 ( 0 ) ; TYPE_1 . METHOD_3 ( 0 , VAR_1 . size ( ) ) ; }",public void METHOD_1 ( ) { VAR_1 . remove ( 0 ) ; TYPE_1 . METHOD_2 ( 0 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1831
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 ) ; },public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1832
public boolean METHOD_1 ( ) { return this . value ; },public boolean METHOD_1 ( ) { return this . getValue ( ) ; },"['Insert Invocation', 'Move ThisAccess', 'Delete FieldRead']",1833
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1834
public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( VAR_1 . toString ( ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_2 . toString ( ) ) ; },public static void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 . toString ( ) ) ; java.lang.System.out.println ( VAR_2 . toString ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1835
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = this . VAR_2 . METHOD_2 ( VAR_3 class ) ; this . VAR_4 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; this . VAR_4 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1836
"private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( null != ( VAR_1 ) ) VAR_1 . METHOD_3 ( ) ; METHOD_4 ( true , true , false ) ; } else { METHOD_4 ( true , false , false ) ; } }",private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( null != ( VAR_1 ) ) VAR_1 . METHOD_3 ( ) ; } },"['Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Block']",1837
"public boolean METHOD_1 ( android.view.View view , int position , TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 ) ; METHOD_3 ( intent ) ; return true ; }","public boolean METHOD_1 ( android.view.View view , int position , TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; return true ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1838
public void METHOD_1 ( android.view.View VAR_1 ) { date . METHOD_2 ( ) ; date . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { date . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Invocation']",1839
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1840
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1841
public int METHOD_1 ( ) throws TYPE_1 { return METHOD_2 ( this . VAR_1 ) ; },public int METHOD_1 ( ) throws TYPE_1 { return METHOD_2 ( 1 ) ; },"['Insert Literal', 'Delete ThisAccess', 'Delete FieldRead']",1842
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_2 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1844
"public TYPE_1 < TYPE_2 > METHOD_1 ( int i , TYPE_3 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; return TYPE_4 . METHOD_2 ( this ) ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( int i , TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( this ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1845
"void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { return ; } TYPE_1 VAR_4 = VAR_5 . METHOD_3 ( VAR_1 ) ; METHOD_1 ( VAR_4 , VAR_2 ) ; }","void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_3 ( VAR_1 ) ; METHOD_1 ( VAR_4 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",1846
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ( ( VAR_2 ) + ( VAR_3 ) ) , VAR_4 , VAR_5 , VAR_6 ) ; VAR_7 . METHOD_2 ( ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ( ( VAR_2 ) + ( VAR_3 ) ) , VAR_4 , VAR_5 , VAR_6 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1847
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1848
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; break ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : break ; } return super . METHOD_1 ( item ) ; },['Delete Invocation'],1849
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , error . METHOD_3 ( ) , error . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( false ) ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , error . METHOD_3 ( ) , error . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1850
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } VAR_2 = null ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } VAR_2 = null ; },"['Delete TypeAccess', 'Delete Invocation']",1852
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( this . toString ( ) ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( this . toString ( ) ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; super . METHOD_1 ( ) ; }",['Delete Invocation'],1853
public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == true ) { VAR_1 . info ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ( ) - > VAR_2 . METHOD_4 ( ) ) ; } },public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == true ) { VAR_1 . info ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Invocation', 'Insert Literal', 'Move Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert TypeAccess']",1854
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_3 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1855
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } },['Delete Invocation'],1856
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1858
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; },"['Delete TypeAccess', 'Delete Invocation']",1859
public void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 ) ; VAR_3 . setText ( VAR_4 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 ) ; VAR_3 . setText ( VAR_4 ) ; },['Delete Invocation'],1860
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1863
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1864
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Boolean VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , this ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Boolean VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }",['Delete ThisAccess'],1865
"public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( this , VAR_2 , false , 0 ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this , VAR_2 , false , 0 ) ; return VAR_1 ; }",['Delete Invocation'],1867
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , java.lang.Throwable VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , java.lang.Throwable VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1869
"public void METHOD_1 ( ) { names . METHOD_2 ( 0 , TYPE_1 . METHOD_3 ( VAR_1 ) ) ; names . METHOD_2 ( INT_1 , TYPE_1 . METHOD_4 ( VAR_1 ) ) ; names . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { names . METHOD_2 ( 0 , VAR_1 ) ; names . METHOD_1 ( ) ; }","['Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1870
"public void METHOD_1 ( ) { METHOD_2 ( true ) ; METHOD_3 ( STRING_1 , false ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( true ) ; METHOD_3 ( STRING_1 , false ) ; }","['Delete TypeAccess', 'Delete Invocation']",1871
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { file . METHOD_2 ( VAR_2 . length ( ) ) ; file . METHOD_3 ( ( ( VAR_3 . toString ( ) ) + CHAR_1 ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { file . METHOD_2 ( VAR_2 . length ( ) ) ; file . METHOD_3 ( ( ( VAR_3 . toString ( ) ) + CHAR_1 ) ) ; },"['Delete Invocation', 'Delete Invocation']",1872
public boolean METHOD_1 ( ) { if ( ( p ) == null ) return false ; return false ; },public boolean METHOD_1 ( ) { if ( ( p ) == null ) return false ; return p . METHOD_1 ( ) ; },"['Insert Invocation', 'Insert FieldRead', 'Delete Literal']",1873
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_3 . METHOD_6 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1874
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_3 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1875
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_5 , VAR_6 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1877
"public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 , STRING_3 ) ; METHOD_2 ( STRING_6 , STRING_7 , STRING_3 ) ; METHOD_2 ( STRING_6 , STRING_7 , STRING_3 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1878
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( listener ) != null ) listener . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( listener ) != null ) listener . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1879
public void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1880
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( TYPE_1 ) != null ) { VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; } },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( TYPE_1 ) != null ) { TYPE_1 . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1881
private boolean METHOD_1 ( int VAR_1 ) { if ( ( this . VAR_2 . get ( VAR_1 ) . isEmpty ( ) ) == true ) { return false ; } return true ; },private boolean METHOD_1 ( int VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",1883
"public void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { VAR_3 . setText ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; VAR_4 . METHOD_3 ( ( VAR_2 ? VAR_5 : VAR_6 ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { VAR_3 . setText ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; VAR_4 . METHOD_3 ( ( VAR_2 ? VAR_5 : VAR_6 ) ) ; }",['Delete Invocation'],1885
"public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 != 0 ) { TYPE_1 . METHOD_2 ( time , 0 ) ; } }",public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1886
private boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return ( VAR_2 . equals ( STRING_2 ) ) || ( VAR_2 . equals ( STRING_3 ) ) ; },private boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_2 . equals ( STRING_2 ) ) || ( VAR_2 . equals ( STRING_3 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1887
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1888
protected java.lang.String METHOD_1 ( java.io.BufferedReader VAR_1 ) throws java.io.IOException { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },protected java.lang.String METHOD_1 ( java.io.BufferedReader VAR_1 ) throws java.io.IOException { return null ; },"['Insert Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1889
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 context = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( context ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 context = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( context ) ; },['Delete Invocation'],1890
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1892
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_3 . open ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1893
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_3 = new TYPE_1 ( getActivity ( ) , this ) ; VAR_4 . execute ( ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; VAR_3 = new TYPE_1 ( getActivity ( ) , this ) ; VAR_4 . execute ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1894
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; },"['Delete VariableRead', 'Delete Invocation']",1895
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 [ ] VAR_2 = VAR_3 ; for ( TYPE_2 VAR_4 : VAR_2 ) { VAR_1 . METHOD_2 ( VAR_4 ) ; } VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 [ ] VAR_2 = VAR_3 ; for ( TYPE_2 VAR_4 : VAR_2 ) { VAR_1 . METHOD_2 ( VAR_4 ) ; } },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1896
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( this . VAR_3 ) == null ) { VAR_4 . error ( STRING_1 ) ; } else { this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 , this . VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( this . VAR_3 ) == null ) { VAR_4 . error ( STRING_1 ) ; } else { this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } }","['Delete ThisAccess', 'Delete FieldRead']",1897
protected synchronized void METHOD_1 ( int state ) { VAR_1 = state ; METHOD_2 ( state ) ; },protected synchronized void METHOD_1 ( int state ) { VAR_1 = state ; },"['Delete VariableRead', 'Delete Invocation']",1898
"public void METHOD_1 ( java.lang.String msg ) { VAR_1 . i ( STRING_1 , ( ( ( STRING_2 + ( java.lang.Thread . METHOD_2 ( ) . getId ( ) ) ) + STRING_3 ) + msg ) ) ; }","public void METHOD_1 ( java.lang.String msg ) { VAR_1 . i ( STRING_1 , msg ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",1899
"public void METHOD_1 ( double VAR_1 , double VAR_2 ) { if ( ( METHOD_2 ( ) ) == null ) return ; METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( double VAR_1 , double VAR_2 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1900
public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; },public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1901
public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( error ) ; METHOD_3 ( error . METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 error ) { METHOD_3 ( error . METHOD_4 ( ) ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1902
private static java.lang.String METHOD_1 ( java.lang.Class < ? > VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return null ; } java.lang.String VAR_2 = METHOD_3 ( VAR_1 ) ; return TYPE_2 . METHOD_4 ( VAR_2 ) ? VAR_2 : null ; },private static java.lang.String METHOD_1 ( java.lang.Class < ? > VAR_1 ) { java.lang.String VAR_2 = METHOD_3 ( VAR_1 ) ; return TYPE_2 . METHOD_4 ( VAR_2 ) ? VAR_2 : null ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1905
"public static void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) , VAR_1 ) ; VAR_2 = VAR_1 ; }",public static void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1906
public void handle ( TYPE_1 event ) { VAR_1 . METHOD_1 ( true ) ; this . METHOD_2 ( ) ; },public void handle ( TYPE_1 event ) { this . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1907
"public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) . isEmpty ( ) ) { return STRING_1 ; } return TYPE_1 . METHOD_3 ( new TYPE_2 ( METHOD_2 ( ) ) , INT_1 ) . toString ( ) ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_3 ( new TYPE_2 ( METHOD_2 ( ) ) , INT_1 ) . toString ( ) ; }","['Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1908
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ; } catch ( TYPE_1 VAR_3 ) { VAR_4 . info ( VAR_3 . METHOD_4 ( ) , VAR_3 ) ; } }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { VAR_4 . info ( VAR_3 . METHOD_4 ( ) , VAR_3 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess']",1909
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( VAR_1 , this ) ; } VAR_1 . METHOD_4 ( getActivity ( ) ) ; VAR_1 . METHOD_5 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( VAR_1 , this ) ; } }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1910
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ) ; VAR_2 . METHOD_6 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_2 . METHOD_6 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1911
"public static java.lang.String METHOD_1 ( ) { return java.lang.String . METHOD_2 ( VAR_1 . get ( TYPE_1 . METHOD_3 ( ) , STRING_1 , STRING_2 ) ) ; }",public static java.lang.String METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1912
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 1 ; METHOD_3 ( ) ; return this ; },['Delete Invocation'],1913
public void METHOD_1 ( ) { METHOD_2 ( ) ; java.lang.System.out.println ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; java.lang.System.out.println ( METHOD_3 ( ) ) ; },['Delete Invocation'],1914
public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; return VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; },public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1915
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( ) ; this . VAR_1 = getConfig ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 = getConfig ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1917
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_2 ( ( STRING_2 + ( id ) ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1918
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1919
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = INT_1 ; VAR_2 . METHOD_3 ( VAR_3 , STRING_1 , VAR_4 . METHOD_4 ( INT_2 , VAR_5 [ VAR_6 ] ) , getString ( VAR_7 ) , getString ( VAR_8 ) , false ) ; }","public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . METHOD_3 ( VAR_3 , STRING_1 , VAR_4 . METHOD_4 ( INT_2 , VAR_5 [ VAR_6 ] ) , getString ( VAR_7 ) , getString ( VAR_8 ) , false ) ; }",['Delete Invocation'],1920
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , false ) ; java.lang.Thread t = new java.lang.Thread ( VAR_1 ) ; VAR_2 . start ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , false ) ; java.lang.Thread t = new java.lang.Thread ( VAR_1 ) ; VAR_2 . start ( ) ; }",['Delete Invocation'],1921
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) { VAR_2 . METHOD_3 ( false ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) { VAR_3 . METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1922
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) return ; VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) return ; VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( false ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1923
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; ( VAR_2 ) ++ ; VAR_4 [ 1 ] [ INT_2 ] = 1 ; METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) { VAR_3 . setText ( STRING_2 ) ; ( VAR_2 ) ++ ; VAR_4 [ 1 ] [ INT_2 ] = 1 ; METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1924
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_1 . METHOD_4 ( VAR_6 , VAR_7 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1925
public void METHOD_1 ( ) { VAR_1 . set ( true ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . set ( true ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1926
public void METHOD_1 ( final TYPE_1 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . add ( VAR_1 ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = this . VAR_3 . METHOD_2 ( ) ; VAR_4 . add ( VAR_1 ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",1927
protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1928
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 . getText ( ) . toString ( ) ) ; VAR_1 . setText ( STRING_1 ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 . getText ( ) . toString ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1929
public void METHOD_1 ( java.lang.CharSequence string ) { VAR_1 . METHOD_1 ( VAR_2 . toString ( ) ) ; if ( METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( VAR_2 . toString ( ) ) ; } VAR_1 . METHOD_4 ( VAR_2 . length ( ) ) ; },public void METHOD_1 ( java.lang.CharSequence string ) { VAR_1 . METHOD_1 ( VAR_2 . toString ( ) ) ; if ( METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( VAR_2 . toString ( ) ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1930
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",1931
"public final TYPE_1 METHOD_1 ( ) { TYPE_2 num = new TYPE_2 ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ; return num ; }",public final TYPE_1 METHOD_1 ( ) { TYPE_2 num = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; return num ; },['Delete FieldRead'],1932
"public void METHOD_1 ( ) { if ( METHOD_2 ( ( ! ( VAR_1 ) ) ) ) { VAR_2 . METHOD_3 ( this , VAR_3 ) ; } else { VAR_4 . METHOD_4 ( ) ; } }","public void METHOD_1 ( ) { if ( METHOD_2 ( ( ! ( VAR_1 ) ) ) ) { VAR_2 . METHOD_3 ( this , VAR_3 ) ; } }","['Delete TypeAccess', 'Delete Invocation', 'Delete Block']",1933
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; }",public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Delete TypeAccess']",1934
public void METHOD_1 ( ) { long [ ] nodes = METHOD_2 ( VAR_1 ) ; for ( long node : nodes ) { java.lang.System.out.println ( ( STRING_1 + ( METHOD_3 ( node ) ) ) ) ; } },public void METHOD_1 ( ) { long [ ] nodes = METHOD_2 ( VAR_1 ) ; for ( long node : nodes ) { java.lang.System.out.println ( ( STRING_1 + node ) ) ; } },"['Move VariableRead', 'Delete Invocation']",1935
public TYPE_1 METHOD_1 ( int i ) { if ( i > ( this . VAR_1 ) ) { return null ; } return VAR_2 . get ( i ) ; },public TYPE_1 METHOD_1 ( int i ) { if ( i > ( VAR_2 . size ( ) ) ) { return null ; } return VAR_2 . get ( i ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1936
public void METHOD_1 ( TYPE_1 error ) { VAR_1 . setText ( VAR_2 . toString ( ) ) ; },public void METHOD_1 ( TYPE_1 error ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1937
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; },"['Delete Invocation', 'Delete Invocation']",1938
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) . METHOD_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1939
"public byte [ ] METHOD_1 ( TYPE_1 path , final java.lang.String name ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( ) . METHOD_1 ( path , name ) ; }","public byte [ ] METHOD_1 ( TYPE_1 path , final java.lang.String name ) throws java.io.IOException { return METHOD_2 ( ) . METHOD_1 ( path , name ) ; }",['Update TypeAccess'],1940
protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation']",1941
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( ) ; } },private void METHOD_1 ( ) { if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1943
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1944
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1945
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . getValue ( ) , VAR_3 . getValue ( ) ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_3 ( VAR_1 ) ; } }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . getValue ( ) , VAR_3 . getValue ( ) ) ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_3 ( VAR_1 ) ; } }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1946
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; java.lang.System.out.println ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1947
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_6 ( 0.0F ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_6 ( 0.0F ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1949
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1950
public void METHOD_1 ( boolean VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; if ( VAR_1 ) METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",1951
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( 0 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( 1 ) ; },"['Update Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1952
"public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { METHOD_2 ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { }","['Delete TypeAccess', 'Delete Invocation']",1953
private void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( STRING_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( STRING_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_3 ( ) ; },['Insert Invocation'],1954
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . add ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . size ( ) ) ) ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . size ( ) ) ) ) ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1955
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1956
"public TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 ) ; }","['Delete FieldRead', 'Delete FieldRead']",1957
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( STRING_1 ) ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( STRING_2 ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( STRING_2 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1958
public void update ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . update ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) . commit ( ) ; },public void update ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1959
"public boolean METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { if ( ( VAR_2 ) >= ( VAR_3 ) ) { VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . toString ( ) ) ; } return true ; }","public boolean METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { return true ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1960
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; }",['Update TypeAccess'],1961
"public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_2 ( VAR_5 , VAR_6 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1962
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , 1 , true ) ; VAR_3 = VAR_4 ; VAR_5 = 1 ; VAR_6 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( STRING_1 , 1 , true ) ; VAR_3 = VAR_4 ; VAR_5 = 1 ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1963
"public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( item ) ; VAR_1 . METHOD_3 ( item . METHOD_4 ( ) , item . METHOD_5 ( ) ) ; }",public void METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( item ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1964
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( STRING_1 ) ) ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( STRING_1 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1965
"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( STRING_1 , ( - INT_1 ) ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_3 ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( STRING_1 , ( - INT_1 ) ) ; METHOD_3 ( VAR_1 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1966
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this , VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_2 . METHOD_3 ( this , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1967
"public static android.content.Intent METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( context , VAR_2 ) ; return TYPE_1 . METHOD_3 ( context ) ; }","public static android.content.Intent METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return TYPE_1 . METHOD_3 ( context ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1968
"public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 , INT_1 ) ; VAR_2 = new TYPE_3 ( 1 , 1 , 0L , VAR_3 , VAR_4 , STRING_2 ) ; java.lang.Thread . METHOD_2 ( INT_2 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 , INT_1 ) ; VAR_2 = new TYPE_3 ( 1 , 1 , 0L , VAR_3 , VAR_4 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1969
"public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_3 ( STRING_2 , STRING_3 ) ; TYPE_1 VAR_3 = TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( VAR_3 ) . build ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_3 ( STRING_2 , STRING_3 ) ; TYPE_1 VAR_3 = TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( VAR_3 ) . build ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1970
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; TYPE_1 . METHOD_5 ( VAR_2 ) ; assertEquals ( 1 , TYPE_1 . METHOD_6 ( ) . size ( ) ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1971
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_2 ( ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( this , VAR_3 , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_5 ( this , VAR_3 , VAR_4 ) . show ( ) ; }","['Delete Invocation', 'Delete Invocation']",1972
protected void METHOD_1 ( ) { },protected void METHOD_1 ( ) { end ( ) ; },['Insert Invocation'],1973
"private void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) . replace ( VAR_4 , TYPE_1 . METHOD_5 ( VAR_1 , this ) , VAR_5 ) . commit ( ) ; }","private void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) . replace ( VAR_4 , TYPE_1 . METHOD_5 ( VAR_1 ) , VAR_5 ) . commit ( ) ; }",['Delete ThisAccess'],1974
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1976
public long METHOD_1 ( int position ) { return VAR_1 . METHOD_2 ( position ) . METHOD_3 ( ) ; },public long METHOD_1 ( int position ) { return 0 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1977
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . update ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1978
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( position ) ; VAR_4 . METHOD_2 ( position ) ; METHOD_3 ( ) ; VAR_5 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( position ) ; VAR_4 . METHOD_2 ( position ) ; VAR_5 . METHOD_4 ( ) ; }",['Delete Invocation'],1979
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; METHOD_2 ( ) ; METHOD_5 ( false ) ; METHOD_3 ( INT_2 ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1980
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1981
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1982
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . setValue ( false ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . setValue ( false ) ; } },['Delete Invocation'],1983
"public void METHOD_1 ( TYPE_1 VAR_1 ) { int n = TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , STRING_2 , VAR_3 ) ; if ( n == ( VAR_4 ) ) { VAR_5 = new TYPE_3 ( ) ; VAR_6 . setEnabled ( false ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { int n = TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , STRING_2 , VAR_3 ) ; if ( n == ( VAR_4 ) ) { VAR_5 = new TYPE_3 ( ) ; } }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1984
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( false ) ; } catch ( final TYPE_1 VAR_2 ) { throw new TYPE_2 ( VAR_2 ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( final TYPE_1 VAR_2 ) { throw new TYPE_2 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",1985
public synchronized void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_2 ( STRING_1 ) ; for ( java.lang.String VAR_2 : VAR_1 ) { VAR_3 . METHOD_3 ( VAR_2 ) ; } METHOD_2 ( STRING_2 ) ; },public synchronized void METHOD_1 ( java.lang.String ... VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { VAR_3 . METHOD_3 ( VAR_2 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1986
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( new android.content.Intent ( METHOD_6 ( ) , VAR_2 class ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; METHOD_5 ( new android.content.Intent ( METHOD_6 ( ) , VAR_2 class ) ) ; }",['Delete Invocation'],1987
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",1988
"public void METHOD_1 ( int VAR_1 ) { this . VAR_1 += VAR_1 ; VAR_2 . info ( STRING_1 , METHOD_2 ( ) , this . VAR_1 , ( ( java.lang.Math.abs ( this . VAR_1 ) ) == 1 ? STRING_2 : CHAR_1 ) ) ; }","public void METHOD_1 ( int VAR_1 ) { this . VAR_1 += VAR_1 ; VAR_2 . info ( STRING_1 , METHOD_2 ( ) , VAR_1 , ( ( java.lang.Math.abs ( VAR_1 ) ) == 1 ? STRING_2 : CHAR_1 ) ) ; }","['Insert VariableRead', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead']",1989
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; if ( ( VAR_4 ) == 0 ) { METHOD_2 ( ) ; } VAR_5 . METHOD_3 ( event ) ; return true ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_5 . METHOD_3 ( event ) ; return true ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",1990
"public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 info ) { if ( VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , STRING_1 ) ; TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_2 + ( VAR_4 . toString ( ) ) ) ) ; } }","public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 info ) { }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",1991
"public void METHOD_1 ( final TYPE_1 out ) throws java.io.IOException { this . VAR_1 . METHOD_2 ( out , this . VAR_2 ) ; }",public void METHOD_1 ( final TYPE_1 out ) throws java.io.IOException { this . VAR_1 . METHOD_2 ( out ) ; },"['Delete ThisAccess', 'Delete FieldRead']",1992
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1994
public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; },public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_2 ) ; TYPE_1 . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_3 ) ; TYPE_1 . METHOD_1 ( INT_1 ) ; java.lang.System.out.println ( STRING_4 ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess']",1996
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { for ( TYPE_2 b : METHOD_2 ( VAR_3 ) ) { b . METHOD_1 ( VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { for ( TYPE_2 b : METHOD_2 ( ) ) { b . METHOD_1 ( VAR_1 , VAR_2 ) ; } }",['Delete TypeAccess'],1997
public void METHOD_1 ( ) throws TYPE_1 { java.lang.Object value = VAR_1 . get ( STRING_1 ) ; output . METHOD_2 ( value ) ; },public void METHOD_1 ( ) throws TYPE_1 { java.lang.Object value = VAR_1 . get ( STRING_1 ) ; output . METHOD_2 ( output ) ; },"['Insert FieldRead', 'Delete VariableRead']",1998
public java.lang.String delete ( TYPE_1 VAR_1 ) { VAR_2 . delete ( VAR_1 ) ; VAR_3 . METHOD_1 ( STRING_1 ) ; return STRING_2 ; },public java.lang.String delete ( TYPE_1 VAR_1 ) { VAR_2 . delete ( VAR_1 ) ; return STRING_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1999
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , FLOAT_1 , FLOAT_1 ) ; VAR_3 . METHOD_3 ( this , VAR_4 , VAR_5 ) ; VAR_3 . METHOD_3 ( this , VAR_6 , VAR_5 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( this , VAR_4 , VAR_5 ) ; VAR_3 . METHOD_3 ( this , VAR_6 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2001
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( INT_1 , ( ( TYPE_4 ) ( VAR_2 ) ) ) ; VAR_5 . start ( ) ; VAR_6 . setEnabled ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( INT_1 , ( ( TYPE_4 ) ( VAR_2 ) ) ) ; VAR_5 . start ( ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2002
private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },private void METHOD_1 ( ) { try { } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2003
public static void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . put ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },public static void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . put ( null ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },"['Insert Literal', 'Delete TypeAccess']",2004
private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2005
protected void METHOD_1 ( java.lang.Boolean result ) { TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.Long result ) { },"['Update TypeReference', 'Delete TypeAccess', 'Delete Invocation']",2006
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_2 . METHOD_2 ( VAR_3 ) ) VAR_4 . setText ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2007
"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , 0 ) ; }",protected void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",2008
"public void METHOD_1 ( java.lang.String url ) { put ( VAR_1 , url ) ; this . VAR_2 . setValue ( url ) ; }",public void METHOD_1 ( java.lang.String url ) { this . VAR_2 . setValue ( url ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2009
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; METHOD_4 ( VAR_3 , VAR_4 ) ; this . METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; this . METHOD_5 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2010
public TYPE_1 METHOD_1 ( double VAR_1 ) { if ( ( this . VAR_1 ) != VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( VAR_2 ) ; } return this ; },public TYPE_1 METHOD_1 ( float VAR_1 ) { if ( ( this . VAR_1 ) != VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( VAR_2 ) ; } },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",2011
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( STRING_3 , this . VAR_3 . METHOD_3 ( ) ) ; return STRING_2 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( STRING_3 , this . VAR_3 . METHOD_3 ( ) ) ; return STRING_2 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2012
"public java.lang.String METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , message ) ; return message ; }",public java.lang.String METHOD_1 ( ) { return message ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2013
"public void METHOD_1 ( java.util.HashMap < TYPE_1 , TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( java.util.HashMap < TYPE_1 , TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_2 ) ; }","['Insert TypeAccess', 'Delete VariableRead']",2014
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 [ 0 ] . getSelection ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 [ 0 ] . getSelection ( ) ) ; },['Delete Invocation'],2015
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; METHOD_4 ( ) ; }","['Delete VariableRead', 'Delete Invocation']",2016
public int METHOD_1 ( ) { return ( METHOD_2 ( ) . METHOD_3 ( ) ) - ( METHOD_2 ( ) . METHOD_4 ( ) ) ; },public int METHOD_1 ( ) { return ( buffer . METHOD_3 ( ) ) - ( buffer . METHOD_4 ( ) ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert FieldRead', 'Insert FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2017
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation']",2018
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = this . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) java.lang.System.out.println ( VAR_3 . METHOD_3 ( ) ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = this . METHOD_2 ( VAR_1 ) ; return VAR_3 ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2019
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . commit ( ) ; METHOD_4 ( null ) ; METHOD_5 ( VAR_5 ) ; METHOD_6 ( ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . commit ( ) ; METHOD_4 ( null ) ; METHOD_5 ( VAR_5 ) ; return true ; },['Delete Invocation'],2020
"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( VAR_1 , 0 ) ; }","['Insert Literal', 'Delete TypeAccess']",2021
"public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( int id , TYPE_3 args ) { VAR_1 . METHOD_2 ( VAR_2 ) ; return new TYPE_4 ( this , VAR_3 ) ; }","public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( int id , TYPE_3 args ) { return new TYPE_4 ( this , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2022
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . setEnabled ( false ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2023
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; ( VAR_2 ) ++ ; VAR_4 [ 1 ] [ 0 ] = 1 ; METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) { VAR_3 . setText ( STRING_2 ) ; ( VAR_2 ) ++ ; VAR_4 [ 1 ] [ 0 ] = 1 ; METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2024
"private void add ( TYPE_1 < TYPE_2 > data ) { VAR_1 . add ( data ) ; java.util.Collections.sort ( VAR_2 , VAR_3 ) ; VAR_4 . add ( data ) ; java.util.Collections.sort ( VAR_5 , VAR_6 ) ; }","private void add ( TYPE_1 < TYPE_2 > data ) { VAR_1 . add ( data ) ; java.util.Collections.sort ( VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2025
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2026
"private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String token ) { METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( VAR_4 , VAR_1 , VAR_2 ) . build ( ) ; VAR_3 . METHOD_3 ( this ) ; VAR_3 . METHOD_4 ( token ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String token ) { VAR_3 = new TYPE_1 ( VAR_4 , VAR_1 , VAR_2 ) . build ( ) ; VAR_3 . METHOD_3 ( this ) ; VAR_3 . METHOD_4 ( token ) ; }",['Delete Invocation'],2028
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2029
"public final void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 class ) ) { this . METHOD_3 ( VAR_2 ) ; } }",public final void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : TYPE_2 . METHOD_2 ( VAR_1 ) ) { this . METHOD_3 ( VAR_2 ) ; } },['Delete TypeAccess'],2030
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2031
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( true ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2032
public void METHOD_1 ( ) { METHOD_2 ( ) ; setText ( VAR_1 ) ; VAR_2 = false ; VAR_3 = VAR_4 ; VAR_5 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; setText ( VAR_1 ) ; VAR_2 = false ; VAR_3 = VAR_4 ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2033
"void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . build ( p , VAR_4 ) ; VAR_5 = new java.util.Vector < TYPE_1 > ( ) ; VAR_6 . add ( VAR_1 ) ; VAR_3 . show ( ) ; VAR_7 . METHOD_2 ( ) ; }","void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . build ( p , VAR_4 ) ; VAR_5 = new java.util.Vector < TYPE_1 > ( ) ; VAR_6 . add ( VAR_1 ) ; VAR_3 . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2034
"protected boolean METHOD_1 ( android.content.Context context , java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( context , VAR_2 . getString ( VAR_3 ) , VAR_4 ) . show ( ) ; return true ; }","protected boolean METHOD_1 ( android.content.Context context , java.lang.Throwable VAR_1 ) { return false ; }","['Update Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2036
public void METHOD_1 ( TYPE_1 content ) { this . METHOD_2 ( STRING_1 ) ; this . METHOD_3 ( content ) ; },public void METHOD_1 ( TYPE_1 content ) { this . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation']",2037
"private void METHOD_1 ( TYPE_1 item ) { VAR_1 . add ( item ) ; VAR_2 . put ( VAR_3 , item ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","private void METHOD_1 ( TYPE_1 item ) { VAR_1 . add ( item ) ; VAR_2 . put ( VAR_3 , item ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2038
public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; if ( ( VAR_2 ) == CHAR_1 ) { VAR_2 = CHAR_2 ; } else { VAR_2 = CHAR_1 ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) == CHAR_1 ) { VAR_2 = CHAR_2 ; } else { VAR_2 = CHAR_1 ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2039
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( super . getId ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( super . getId ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_11 ) ; }",['Delete TypeAccess'],2040
public void METHOD_1 ( float x ) { VAR_1 . METHOD_1 ( x ) ; super . METHOD_1 ( x ) ; },public void METHOD_1 ( float x ) { super . METHOD_1 ( x ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2041
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 , STRING_2 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2043
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( METHOD_4 ( ) . getColor ( VAR_6 ) ) ; TYPE_1 . METHOD_5 ( VAR_7 , VAR_8 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; TYPE_1 . METHOD_5 ( VAR_7 , VAR_8 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2044
"public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( 0 , 0 , 0 , 1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; }",public void METHOD_1 ( float VAR_1 ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2045
"public void METHOD_1 ( TYPE_1 TYPE_2 ) { TYPE_3 . METHOD_2 ( VAR_1 , TYPE_2 . METHOD_3 ( ) ) ; }",public void METHOD_1 ( TYPE_1 TYPE_2 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2046
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( VAR_3 ) ; METHOD_2 ( VAR_1 ) ; ( VAR_3 ) ++ ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( VAR_3 ) ; ( VAR_3 ) ++ ; },"['Delete VariableRead', 'Delete Invocation']",2047
public void METHOD_1 ( double VAR_1 ) { if ( ( METHOD_2 ( ) ) == null ) return ; METHOD_3 ( ( ( METHOD_4 ( ) ) + VAR_1 ) ) ; },public void METHOD_1 ( double VAR_1 ) { METHOD_3 ( ( ( METHOD_4 ( ) ) + VAR_1 ) ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",2048
public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } finally { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_5 . METHOD_6 ( ) ) ; } },public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } finally { VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_5 . METHOD_6 ( ) ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2049
public void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) METHOD_2 ( ) ; VAR_2 . set ( true ) ; },public void METHOD_1 ( ) { if ( VAR_1 . get ( ) ) METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2050
private void METHOD_1 ( java.lang.CharSequence VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . setText ( VAR_1 ) ; METHOD_2 ( ) ; } },private void METHOD_1 ( java.lang.CharSequence VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . setText ( VAR_1 ) ; } },['Delete Invocation'],2051
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { return null ; } TYPE_1 x = VAR_2 [ VAR_3 ] ; VAR_2 [ VAR_3 ] = null ; VAR_3 = METHOD_2 ( VAR_3 ) ; -- ( VAR_1 ) ; return x ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 x = VAR_2 [ VAR_3 ] ; VAR_2 [ VAR_3 ] = null ; VAR_3 = METHOD_2 ( VAR_3 ) ; -- ( VAR_1 ) ; return x ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2052
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; return this . equals ( VAR_1 , VAR_2 , VAR_3 ) ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return this . equals ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2053
"public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_3 , new java.lang.Object [ ] { VAR_1 . METHOD_3 ( ) } ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_5 . METHOD_4 ( STRING_1 , VAR_1 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_3 , new java.lang.Object [ ] { VAR_1 . METHOD_3 ( ) } ) ; } catch ( java.lang.Exception VAR_4 ) { } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2054
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_2 ( VAR_2 ) ; this . VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = true ; METHOD_4 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_4 = true ; METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2055
private int METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { return VAR_3 . get ( VAR_1 ) . get ( 0 ) ; } return - 1 ; },private int METHOD_1 ( java.lang.String VAR_1 ) { return - 1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",2056
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 ) ; } }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2058
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2059
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { super . METHOD_1 ( ) ; } else { METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; } },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { super . METHOD_1 ( ) ; } },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",2060
"private long index ( long VAR_1 , int VAR_2 ) { return ( ( METHOD_1 ( VAR_1 ) ) * ( VAR_3 ) ) + VAR_2 ; }","private long index ( long VAR_1 , int VAR_2 ) { return ( VAR_1 * ( VAR_3 ) ) + VAR_2 ; }","['Move VariableRead', 'Delete Invocation']",2061
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; },['Delete Invocation'],2062
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( 1 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( 1 ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2064
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . toString ( ) ) ; java.lang.System.out.println ( ( ( VAR_2 . METHOD_3 ( ) ) + STRING_1 ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2065
public void METHOD_1 ( ) { METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_3 ( ) ; },['Delete Invocation'],2066
"private void METHOD_1 ( int num ) { METHOD_2 ( ) ; for ( int i = 0 ; i < num ; i ++ ) { TYPE_1 . METHOD_3 ( ( STRING_1 + ( VAR_1 [ i ] ) ) , false ) ; } }","private void METHOD_1 ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { TYPE_1 . METHOD_3 ( ( STRING_1 + ( VAR_1 [ i ] ) ) , false ) ; } }",['Delete Invocation'],2067
"protected final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 , STRING_1 ) ; }","protected final void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2068
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( i , VAR_2 , t , VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_3 ( STRING_1 , java.lang.String . METHOD_4 ( VAR_5 ) ) ; ( i ) ++ ; } }","public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( i , VAR_2 , t , VAR_3 , VAR_4 ) ; ( i ) ++ ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2070
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( VAR_1 == null ) return this ; VAR_2 . getValue ( ) . METHOD_2 ( VAR_3 . getValue ( ) ) ; return VAR_1 ; },public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . getValue ( ) . METHOD_2 ( VAR_3 . getValue ( ) ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete Return', 'Delete Block', 'Delete If']",2071
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; METHOD_4 ( ) ; return true ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_4 ( ) ; return true ; } return super . METHOD_1 ( item ) ; },['Delete Invocation'],2072
"public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > x = java.util.Arrays.asList ( new TYPE_1 ( INT_1 ) , new TYPE_1 ( INT_2 ) ) ; TYPE_2 VAR_1 = VAR_2 ; METHOD_2 ( x , VAR_1 , VAR_3 class , VAR_4 class ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > x = java.util.Arrays.asList ( new TYPE_1 ( INT_1 ) , new TYPE_1 ( INT_2 ) ) ; TYPE_2 VAR_1 = VAR_2 ; METHOD_2 ( x , VAR_1 , VAR_3 class ) ; }",['Delete TypeAccess'],2074
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2075
"public boolean METHOD_1 ( TYPE_1 < ? , ? > build , TYPE_2 VAR_1 , TYPE_3 listener ) { listener . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; TYPE_4 . METHOD_4 ( build , listener ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 < ? , ? > build , TYPE_2 VAR_1 , TYPE_3 listener ) { TYPE_4 . METHOD_4 ( build , listener ) ; return true ; }","['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2076
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . set ( true ) ; } catch ( TYPE_1 VAR_4 ) { } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 ) ; } catch ( TYPE_1 VAR_4 ) { } },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2077
protected void METHOD_1 ( java.lang.String result ) { VAR_1 = result ; TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.String result ) { VAR_1 = result ; TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2078
"public TYPE_1 METHOD_1 ( java.lang.Object obj ) { append ( obj ) ; stringBuilder.append ( ""\n"" ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.Object obj ) { return append ( obj ) . append ( ""\n"" ) ; }","['Insert Invocation', 'Move Invocation', 'Move Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess']",2079
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( STRING_1 ) ) ; VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) ; VAR_2 . METHOD_3 ( STRING_3 , STRING_3 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( STRING_1 ) ) ; VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2080
"public void METHOD_1 ( int i ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; } }","public void METHOD_1 ( int i ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; } }","['Delete TypeAccess', 'Delete Invocation']",2081
public java.lang.String toString ( ) { return ( STRING_1 + ( this . VAR_1 ) ) + STRING_2 ; },public java.lang.String toString ( ) { return null ; },"['Insert Literal', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",2082
"private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } }","private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; } }",['Delete TypeAccess'],2083
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; writer.write ( VAR_1 . METHOD_2 ( ) ) ; writer . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { writer.write ( VAR_1 . METHOD_2 ( ) ) ; writer . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2084
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( 1 ) ; android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( i ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( i ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2085
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == ( VAR_2 ) ) { this . METHOD_2 ( ) ; this . VAR_1 = VAR_3 ; } else { this . VAR_1 = VAR_2 ; } },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == ( VAR_2 ) ) { this . VAR_1 = VAR_3 ; } else { this . VAR_1 = VAR_2 ; } },"['Delete ThisAccess', 'Delete Invocation']",2086
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },['Delete Invocation'],2087
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 . getText ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2089
protected void METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) . toUpperCase ( ) ) ; this . METHOD_6 ( ) ; },protected void METHOD_1 ( ) { this . METHOD_6 ( ) ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2090
public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { super . METHOD_1 ( out ) ; out . METHOD_2 ( VAR_1 ) ; out . METHOD_3 ( message ) ; },public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { super . METHOD_1 ( out ) ; out . METHOD_2 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete Invocation']",2091
"private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( this ) ; TYPE_1 . METHOD_3 ( VAR_4 , STRING_1 ) ; METHOD_4 ( ) ; }",private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( this ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2092
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + ( VAR_4 . toString ( ) ) ) ) ; METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2093
"private void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( ( ( VAR_3 ) | ( VAR_4 ) ) ) ; METHOD_3 ( VAR_1 ) ; }","private void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( VAR_1 ) ; }","['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2094
TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( true ) ; VAR_2 . METHOD_4 ( ) ; return VAR_1 ; },TYPE_1 METHOD_1 ( ) { VAR_2 . METHOD_3 ( true ) ; VAR_2 . METHOD_4 ( ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation']",2095
"public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { view . METHOD_2 ( ) ; view . METHOD_3 ( ) ; view . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { view . METHOD_2 ( ) ; view . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete FieldRead', 'Delete Invocation']",2096
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = false ; METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; VAR_4 = false ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2097
"public void METHOD_1 ( int VAR_1 , boolean x ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , ( x ? STRING_1 : STRING_2 ) , VAR_2 ) ; METHOD_4 ( VAR_1 , VAR_3 , x ) ; }","public void METHOD_1 ( int VAR_1 , boolean x ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , ( x ? STRING_1 : STRING_2 ) , VAR_2 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2098
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 [ 0 ] ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 [ 0 ] ) ; METHOD_3 ( VAR_3 ) ; },['Delete Invocation'],2100
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2101
public final int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) METHOD_2 ( ) ; return ( METHOD_3 ( ) ) + ( METHOD_4 ( ) ) ; },public final int METHOD_1 ( ) { return ( METHOD_3 ( ) ) + ( METHOD_4 ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",2102
"private void METHOD_1 ( int position ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + position ) ) ; this . VAR_2 = position ; }",private void METHOD_1 ( int position ) { this . VAR_2 = position ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2103
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2104
"public TYPE_1 METHOD_1 ( TYPE_2 id , java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , id , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 id , java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { return new TYPE_1 ( VAR_2 , id , VAR_1 ) ; }",['Delete FieldRead'],2105
public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_1 . METHOD_1 ( ) ; },public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_1 . METHOD_1 ( ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2106
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2108
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this . getActivity ( ) ) ; TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this . getActivity ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2110
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2111
public void METHOD_1 ( ) throws java.io.IOException { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . assertTrue ( ( ( VAR_4 . size ( ) ) >= ( VAR_5 ) ) ) ; },public void METHOD_1 ( ) throws java.io.IOException { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . assertTrue ( ( ( VAR_4 . size ( ) ) >= 0 ) ) ; },"['Insert Literal', 'Delete FieldRead']",2112
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , VAR_2 , VAR_3 . getText ( ) . toString ( ) ) ; TYPE_2 . METHOD_3 ( context , STRING_1 , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 . getText ( ) . toString ( ) ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2113
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2114
public void METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2115
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; if ( ( VAR_2 . getTime ( ) ) == 0 ) { VAR_3 . state = VAR_4 ; } },public void METHOD_1 ( ) { if ( ( VAR_2 . getTime ( ) ) == 0 ) { VAR_3 . state = VAR_4 ; } },"['Delete TypeAccess', 'Delete Invocation']",2116
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( TYPE_2 . METHOD_5 ( this . METHOD_6 ( ) ) ) ; METHOD_7 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2117
"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 , response ) ; METHOD_3 ( VAR_1 , response ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 , response ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2118
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 , name , VAR_2 ) ; VAR_4 . assertTrue ( VAR_3 . METHOD_4 ( STRING_1 ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 ) { VAR_3 . METHOD_3 ( VAR_1 , name , VAR_2 ) ; VAR_4 . assertTrue ( VAR_3 . METHOD_4 ( STRING_1 ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",2119
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; METHOD_3 ( false ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . start ( ) ; },"['Delete Literal', 'Delete Invocation']",2120
"public java.lang.String [ ] METHOD_1 ( ) { java.lang.String [ ] VAR_1 = new java.lang.String [ size ] ; if ( 0 == ( this . size ) ) { return VAR_1 ; } METHOD_2 ( VAR_2 , VAR_1 , 0 ) ; return VAR_1 ; }","public java.lang.String [ ] METHOD_1 ( ) { java.lang.String [ ] VAR_1 = new java.lang.String [ size ] ; METHOD_2 ( VAR_2 , VAR_1 , 0 ) ; return VAR_1 ; }","['Delete Literal', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",2121
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( STRING_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2122
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; VAR_1 . METHOD_2 ( VAR_3 , false ) ; VAR_1 . METHOD_2 ( VAR_4 , false ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; VAR_1 . METHOD_2 ( VAR_3 , false ) ; VAR_1 . METHOD_2 ( VAR_4 , false ) ; }","['Delete TypeAccess', 'Delete Invocation']",2123
"public void delete ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . delete ( VAR_1 , VAR_2 ) ; METHOD_1 ( ) . remove ( STRING_1 , VAR_3 . getId ( ) ) ; METHOD_2 ( ( - 1 ) ) ; }","public void delete ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . delete ( VAR_1 , VAR_2 ) ; METHOD_2 ( ( - 1 ) ) ; }","['Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2124
"void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . add ( VAR_1 ) ; METHOD_2 ( VAR_3 . size ( ) , false ) ; }",void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",2125
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( STRING_2 , VAR_2 ) ; VAR_1 . METHOD_5 ( STRING_3 , TYPE_2 . METHOD_6 ( ) ) ; super . METHOD_1 ( VAR_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( STRING_2 , VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2127
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2128
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },['Delete Invocation'],2130
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2131
"public void update ( TYPE_1 VAR_1 , java.lang.Object obj ) { }","public void update ( TYPE_1 VAR_1 , java.lang.Object obj ) { show ( ( ( java.lang.String ) ( obj ) ) ) ; init ( ) ; }","['Insert Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert TypeReference']",2132
"protected void METHOD_1 ( java.lang.Void VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = - 1 ; VAR_5 = - 1 ; VAR_6 = - 1 ; VAR_7 = - 1 ; TYPE_1 . METHOD_3 ( VAR_8 , STRING_1 ) ; }",protected void METHOD_1 ( java.lang.Void VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = - 1 ; VAR_5 = - 1 ; VAR_6 = - 1 ; VAR_7 = - 1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2133
"private TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int i ) { return i < ( VAR_2 . size ( ) ) ? VAR_2 . get ( i ) : VAR_3 ; }","private java.lang.Long METHOD_1 ( java.util.List < java.lang.Long > VAR_1 , int i ) { return i < ( VAR_2 . size ( ) ) ? VAR_2 . get ( i ) : 0 ; }","['Update TypeReference', 'Update TypeReference', 'Insert Literal', 'Delete FieldRead']",2134
public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . get ( ) . getConfig ( ) . METHOD_2 ( VAR_1 ) ; VAR_2 . get ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . get ( ) . getConfig ( ) . METHOD_2 ( VAR_1 ) ; return true ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2135
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( java.lang.Double . METHOD_4 ( VAR_1 ) ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( java.lang.Double . METHOD_4 ( VAR_1 ) ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2136
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2137
public void METHOD_1 ( ) { java.util.List < TYPE_1 > results = METHOD_2 ( VAR_1 ) ; if ( ( results != null ) && ( ( VAR_2 . size ( ) ) > 0 ) ) { METHOD_3 ( ) ; } else METHOD_4 ( ) ; },public void METHOD_1 ( ) { java.util.List < TYPE_1 > results = METHOD_2 ( VAR_1 ) ; if ( ( results != null ) && ( ( VAR_2 . size ( ) ) > 0 ) ) METHOD_3 ( ) ; },"['Delete Invocation', 'Delete Block']",2138
"public TYPE_1 < java.util.ArrayList < TYPE_2 > , java.lang.Boolean > execute ( ) { METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_2 . add ( VAR_3 ) ; METHOD_5 ( ) ; return VAR_4 ; }","public TYPE_1 < java.util.ArrayList < TYPE_2 > , java.lang.Boolean > execute ( ) { METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; METHOD_4 ( ) ; VAR_2 . add ( VAR_3 ) ; METHOD_5 ( ) ; return VAR_4 ; }",['Delete Invocation'],2139
"public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( java.util.Collection < ? extends TYPE_2 > list ) { VAR_1 . METHOD_1 ( list ) ; return this ; }",public void METHOD_1 ( java.util.Collection < ? extends TYPE_2 > list ) { VAR_1 . METHOD_1 ( list ) ; },"['Update TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Return']",2140
public double METHOD_1 ( ) { return ( VAR_1 ) / ( VAR_2 ) ; },public double METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; java.lang.System.out.println ( VAR_2 ) ; return ( VAR_1 ) / ( VAR_2 ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Insert FieldRead', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess']",2141
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = getView ( ) . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_2 , VAR_4 ) ) ; VAR_2 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = getView ( ) . METHOD_2 ( ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_2 , VAR_4 ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2142
public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_1 ( VAR_2 class ) ; VAR_4 = TYPE_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_1 ( VAR_2 class ) ; VAR_4 = TYPE_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2143
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( getActivity ( ) . METHOD_5 ( ) . getColor ( VAR_4 ) ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2144
void METHOD_1 ( ) { VAR_1 . set ( 0.0 ) ; VAR_2 . set ( 0.0 ) ; VAR_3 = VAR_4 ; },void METHOD_1 ( ) { VAR_1 . set ( 0.0 ) ; VAR_3 = VAR_4 ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2145
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2146
"public static void METHOD_1 ( int VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_3 ) . METHOD_2 ( ( VAR_1 & - INT_1 ) ) . build ( ) ; VAR_4 . put ( STRING_1 , VAR_2 ) ; }",public static void METHOD_1 ( int VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_3 ) . METHOD_2 ( ( VAR_1 & - INT_1 ) ) . build ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2147
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_2 ) ; VAR_3 . METHOD_2 ( false ) ; TYPE_2 main = new TYPE_2 ( ) ; main . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_2 ) ; VAR_3 . METHOD_2 ( false ) ; TYPE_2 main = new TYPE_2 ( ) ; main . METHOD_2 ( true ) ; },"['Delete TypeAccess', 'Delete Invocation']",2148
public void METHOD_1 ( ) { VAR_1 . info ( ( ( VAR_2 ) + STRING_1 ) ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . info ( ( ( VAR_2 ) + STRING_1 ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2149
public void METHOD_1 ( ) { this . VAR_1 = false ; METHOD_2 ( ) ; for ( TYPE_1 a : VAR_2 ) { if ( a != null ) { VAR_3 = false ; } } },public void METHOD_1 ( ) { this . VAR_1 = false ; for ( TYPE_1 a : VAR_2 ) { if ( a != null ) { VAR_3 = false ; } } },['Delete Invocation'],2150
protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2151
"private void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_2 VAR_2 = METHOD_3 ( ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_4 ( VAR_1 ) ; } }",private void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_2 VAR_2 = METHOD_3 ( ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_4 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2152
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_1 VAR_4 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_4 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2153
final boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) < INT_1 ) { METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( ) ; } return METHOD_5 ( ) ; },final boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) < INT_1 ) { METHOD_3 ( INT_1 ) ; } return METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2154
"public java.lang.Object METHOD_1 ( java.lang.Object VAR_1 , java.lang.Long id ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return TYPE_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 . getClass ( ) , id ) ; }","public java.lang.Object METHOD_1 ( java.lang.Object VAR_1 , java.lang.Long id ) { return TYPE_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 . getClass ( ) , id ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2155
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2156
public static void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( ) . info ( STRING_1 ) ; VAR_2 . METHOD_1 ( ) ; } },public static void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_1 ( ) ; } },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2157
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) , VAR_4 . getText ( ) , VAR_5 ) ; TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) , VAR_4 . getText ( ) , VAR_5 ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2158
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2159
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_2 ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2160
"public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_4 class ) ; }","public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { TYPE_2 . METHOD_2 ( ) ; }",['Delete TypeAccess'],2161
"public void METHOD_1 ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getContext ( ) , VAR_1 class ) ; i . METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_3 ( i ) ; getActivity ( ) . METHOD_4 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getContext ( ) , VAR_1 class ) ; METHOD_3 ( i ) ; getActivity ( ) . METHOD_4 ( VAR_3 , VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2162
"public java.lang.String METHOD_1 ( ) { if ( VAR_1 . get ( ""type"" ) . equals ( STRING_1 ) ) return STRING_1 ; return ( STRING_2 + ( VAR_1 . get ( ""type"" ) ) ) + STRING_3 ; }","public java.lang.String METHOD_1 ( ) { return ( STRING_2 + ( VAR_1 . get ( ""type"" ) ) ) + STRING_3 ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2164
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 == null ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_2 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_2 ) ; } },public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 == null ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) METHOD_5 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2165
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2166
public void METHOD_1 ( android.view.View view ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View view ) { this . METHOD_2 ( ) ; this . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",2167
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this . VAR_1 , this . VAR_2 , this . VAR_3 ) ; }",public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this . VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead']",2168
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( this , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( this ) ; }",['Delete TypeAccess'],2169
"public java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { return METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { return METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , null ) ; }","['Insert Literal', 'Delete Invocation']",2171
"public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.Collections.sort ( VAR_1 , ( TYPE_2 VAR_2 , TYPE_2 VAR_3 ) - > VAR_2 . METHOD_2 ( ) . compareTo ( VAR_3 . METHOD_2 ( ) ) ) ; return VAR_1 ; }",public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 ; },"['Insert Return', 'Insert FieldRead']",2172
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2173
"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; this . METHOD_7 ( ) ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { this . METHOD_6 ( ) ; this . METHOD_7 ( ) ; }","['Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2174
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) . METHOD_3 ( ) , VAR_1 , VAR_2 ) . show ( ) ; }",protected void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2175
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . info ( STRING_1 ) ; return STRING_2 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return STRING_2 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2176
"public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_3 . METHOD_3 ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) ; return STRING_1 ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) ; return STRING_1 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2177
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , this . VAR_2 , this . VAR_3 , this . VAR_4 ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , this . VAR_2 , this . VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldRead']",2179
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; getActivity ( ) . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2180
protected boolean handle ( ) { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; return true ; },protected boolean handle ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; return true ; },"['Delete TypeAccess', 'Delete Invocation']",2181
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.System.out.println ( this . VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2182
public void init ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; },public void init ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2184
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2185
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( TYPE_1 error ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2186
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_4 , VAR_1 , VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( ( ( VAR_3 . METHOD_4 ( ) ) > 0 ) ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_4 , VAR_1 , VAR_2 ) ; }","['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",2187
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! VAR_1 ) { METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( null ) ; } else { VAR_2 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! VAR_1 ) { VAR_2 . METHOD_3 ( null ) ; } else { VAR_2 . METHOD_3 ( VAR_3 ) ; } },"['Delete Literal', 'Delete Invocation']",2188
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( false ) ; },"['Delete TypeAccess', 'Delete Invocation']",2189
"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = VAR_2 ; VAR_6 = VAR_4 ; VAR_7 = VAR_1 ; VAR_8 = VAR_3 ; METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = VAR_2 ; VAR_6 = VAR_4 ; VAR_7 = VAR_1 ; VAR_8 = VAR_3 ; }",['Delete Invocation'],2190
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( TYPE_2 VAR_2 : this . VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } this . VAR_2 . METHOD_4 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( ) { for ( TYPE_2 VAR_2 : this . VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } this . VAR_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2191
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( false ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; METHOD_5 ( ) ; METHOD_6 ( false ) ; },['Delete Invocation'],2192
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_2 class ) ; METHOD_2 ( intent ) ; getActivity ( ) . METHOD_3 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_2 class ) ; METHOD_2 ( intent ) ; return true ; }","['Delete Invocation', 'Delete Invocation']",2193
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; VAR_5 . METHOD_1 ( ) ; VAR_3 = null ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; VAR_5 . METHOD_1 ( ) ; VAR_3 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2195
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2196
"public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { METHOD_2 ( ( VAR_1 > > ( VAR_2 ) ) , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2197
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2198
"public static void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; TYPE_2 . METHOD_1 ( STRING_1 , FLOAT_1 ) ; }",public static void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2199
"public java.util.List < java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.Object > VAR_2 = VAR_3 . METHOD_2 ( ( VAR_1 + STRING_1 ) , VAR_4 ) ; java.lang.System.out.println ( ( STRING_2 + ( VAR_5 . size ( ) ) ) ) ; return VAR_2 ; }","public java.util.List < java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.Object > VAR_2 = VAR_3 . METHOD_2 ( ( VAR_1 + STRING_1 ) , VAR_4 ) ; return VAR_2 ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2200
"public boolean METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { return VAR_2 . METHOD_2 ( VAR_3 , item ) ; } else { return false ; } }","public boolean METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { return VAR_2 . METHOD_2 ( VAR_1 , item ) ; } else { return false ; } }","['Insert VariableRead', 'Delete TypeAccess']",2201
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == 0 ) { VAR_3 . i ( VAR_4 , STRING_1 ) ; VAR_5 . METHOD_2 ( ) ; VAR_3 . i ( VAR_4 , STRING_2 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2202
"public void METHOD_1 ( int type , TYPE_1 < ? > source ) { METHOD_2 ( type , source , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int type , TYPE_1 < ? > source ) { METHOD_2 ( type , source ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",2203
"public double METHOD_1 ( double [ ] x ) { if ( ( VAR_1 ) != null ) { VAR_1 = TYPE_1 . METHOD_2 ( x , VAR_2 . length ) ; } double result = TYPE_2 . METHOD_3 ( x , VAR_3 ) ; return result ; }","public double METHOD_1 ( double [ ] x ) { if ( ( VAR_1 ) != null ) { VAR_1 = x ; } double result = TYPE_2 . METHOD_3 ( x , VAR_3 ) ; return result ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2204
"public void METHOD_1 ( java.lang.String filename , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = VAR_3 . METHOD_2 ( filename , VAR_1 ) ; VAR_4 . assertEquals ( VAR_2 , result ) ; }","public void METHOD_1 ( java.lang.String filename , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = VAR_3 . METHOD_2 ( filename , VAR_1 ) ; java.lang.System.out.println ( result ) ; VAR_4 . assertEquals ( VAR_2 , result ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",2205
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; boolean VAR_2 = VAR_1 . METHOD_2 ( ) ; while ( ! VAR_2 ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { boolean VAR_2 = VAR_1 . METHOD_2 ( ) ; while ( ! VAR_2 ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",2206
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { TYPE_1 . METHOD_2 ( getActivity ( ) , message , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . setEnabled ( true ) ; VAR_5 = true ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { TYPE_1 . METHOD_2 ( getActivity ( ) , message , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( false ) ; VAR_5 = true ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2207
public TYPE_1 METHOD_1 ( TYPE_1 params ) throws java.lang.Exception { VAR_1 . info ( params ) ; return VAR_2 . METHOD_2 ( params ) ; },public TYPE_1 METHOD_1 ( TYPE_1 params ) throws java.lang.Exception { return VAR_2 . METHOD_2 ( params ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2209
"public TYPE_1 METHOD_1 ( final java.lang.String name , final java.lang.String VAR_1 ) throws TYPE_2 { return VAR_2 . METHOD_1 ( METHOD_2 ( ) , name , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( final java.lang.String name , final java.lang.String VAR_1 ) throws TYPE_2 { return VAR_2 . METHOD_1 ( name , VAR_1 ) ; }",['Delete Invocation'],2210
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; VAR_5 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2211
private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( ) ; VAR_3 . show ( ) ; },private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( false ) ; VAR_3 . show ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2212
protected static void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . add ( VAR_1 ) ; },protected static void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2213
public void start ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; VAR_5 . METHOD_2 ( 0 ) ; },public void start ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2214
public void METHOD_1 ( TYPE_1 position ) { VAR_1 = new TYPE_1 ( position ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 position ) { VAR_1 = new TYPE_1 ( position ) ; },['Delete Invocation'],2215
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { getActivity ( ) . METHOD_2 ( ) ; } VAR_2 = null ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( true ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = null ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( true ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2216
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( true ) ; android.content.Intent VAR_2 = TYPE_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_2 , VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = TYPE_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_2 , VAR_5 ) ; }","['Delete Literal', 'Delete Invocation']",2217
"private static void end ( TYPE_1 method , TYPE_2 VAR_1 , java.lang.String name ) { VAR_2 . add ( method , VAR_1 , name , STRING_1 ) ; TYPE_3 . METHOD_1 ( ( STRING_2 + name ) ) ; }","private static void end ( TYPE_1 method , TYPE_2 VAR_1 , java.lang.String name ) { VAR_2 . add ( method , VAR_1 , name , STRING_1 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2218
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( true ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",2219
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = this . VAR_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) ; METHOD_5 ( this . VAR_3 ) ; this . VAR_1 = VAR_1 ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = this . VAR_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) ; this . VAR_1 = VAR_1 ; return this ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2220
private void METHOD_1 ( ) { if ( VAR_1 ) return ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_2 ( VAR_5 ) ; },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2221
public void show ( ) { super . show ( ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . METHOD_1 ( VAR_5 ) ; },public void show ( ) { super . show ( ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2222
"public boolean METHOD_1 ( TYPE_1 state ) { p ( STRING_1 ) ; METHOD_2 ( state , VAR_1 ) ; return METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }","public boolean METHOD_1 ( TYPE_1 state ) { METHOD_2 ( state , VAR_1 ) ; return METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",2223
"public synchronized java.lang.Object get ( ) throws TYPE_1 , TYPE_2 { while ( ! ( VAR_1 ) ) { METHOD_1 ( ) ; } return this . METHOD_2 ( ) . METHOD_3 ( ) ; }","public synchronized java.lang.Object get ( ) throws TYPE_1 , TYPE_2 { while ( ! ( VAR_1 ) ) { METHOD_1 ( ) ; } return null ; }","['Insert Literal', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",2224
public java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( STRING_1 + ( VAR_1 . METHOD_3 ( 0 ) . getText ( ) ) ) ) ; return super . METHOD_1 ( VAR_1 ) ; },public java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_3 ( 0 ) . getText ( ) ) ) ) ; return super . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",2226
boolean METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_2 . toUpperCase ( ) ) { case STRING_1 : METHOD_2 ( ) ; return true ; default : VAR_3 . output ( STRING_2 ) ; METHOD_3 ( ) ; return false ; } },boolean METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_2 . toUpperCase ( ) ) { case STRING_1 : METHOD_2 ( ) ; return true ; default : return false ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2227
"public void METHOD_1 ( int VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( int VAR_1 , boolean VAR_2 ) { METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2228
"public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( true ) ; if ( ( VAR_2 ) != null ) { VAR_1 . METHOD_3 ( VAR_3 , VAR_2 , STRING_1 , VAR_4 , VAR_3 ) ; } return true ; }",public boolean METHOD_1 ( TYPE_1 item ) { return true ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2230
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; startTime = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; VAR_2 . show ( ) ; },private void METHOD_1 ( ) { METHOD_4 ( ) ; startTime = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; VAR_2 . show ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2231
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 . METHOD_2 ( ) , VAR_3 . METHOD_3 ( ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2234
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_4 ( true ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_4 ( true ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2235
"protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { source = params [ 0 ] ; if ( ( VAR_1 . get ( ) ) != null ) { return METHOD_2 ( VAR_1 . get ( ) , source ) ; } return null ; }",protected TYPE_1 METHOD_1 ( java.lang.String ... params ) { source = params [ 0 ] ; return METHOD_2 ( source ) ; },"['Move Return', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",2236
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },['Delete Invocation'],2237
public java.io.File METHOD_1 ( ) { java.io.File VAR_1 = new java.io.File ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; if ( VAR_1 . METHOD_3 ( ) ) { TYPE_1 . METHOD_4 ( VAR_1 ) ; } VAR_1 . METHOD_5 ( ) ; return VAR_1 ; },public java.io.File METHOD_1 ( ) { java.io.File VAR_1 = new java.io.File ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; VAR_1 . METHOD_5 ( ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2238
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = new java.util.HashMap < > ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . put ( VAR_6 , VAR_1 ) ; METHOD_3 ( VAR_7 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = new java.util.HashMap < > ( ) ; VAR_5 . put ( VAR_6 , VAR_1 ) ; METHOD_3 ( VAR_7 , VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2239
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . id = VAR_2 . getId ( ) ; this . VAR_3 = VAR_2 . getName ( ) ; VAR_4 . setText ( this . VAR_3 ) ; this . VAR_5 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . id = VAR_2 . getId ( ) ; this . VAR_3 = VAR_2 . getName ( ) ; this . VAR_5 = VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2240
public void error ( ) { status = VAR_1 ; METHOD_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; },public void error ( ) { status = VAR_1 ; METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2241
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; if ( VAR_1 == ( VAR_2 ) ) { METHOD_4 ( ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2242
protected void METHOD_1 ( java.lang.String result ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 = VAR_3 ; } else { VAR_2 = VAR_4 ; } VAR_5 . setText ( VAR_2 ) ; },protected void METHOD_1 ( java.lang.String result ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 = VAR_3 ; } else { VAR_2 = VAR_4 ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2243
public void METHOD_1 ( final char VAR_1 ) { for ( final TYPE_1 c : VAR_2 ) { c . METHOD_2 ( VAR_1 ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( final char VAR_1 ) { for ( final TYPE_1 c : VAR_2 ) { c . METHOD_2 ( VAR_1 ) ; } },['Delete Invocation'],2244
public void METHOD_1 ( ) throws java.io.IOException { view . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { },"['Delete FieldRead', 'Delete Invocation']",2245
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , ( ( java.util.ArrayList < java.lang.Integer > ) ( VAR_3 ) ) ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , ( ( java.util.ArrayList < java.lang.Integer > ) ( VAR_3 ) ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2246
"public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_2 == ( VAR_3 ) ) { METHOD_2 ( VAR_4 . getData ( ) ) ; METHOD_3 ( ) ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_2 == ( VAR_3 ) ) { METHOD_2 ( VAR_4 . getData ( ) ) ; } }",['Delete Invocation'],2247
void start ( ) { if ( VAR_1 ) return ; VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) METHOD_3 ( ) ; VAR_1 = true ; },void start ( ) { if ( VAR_1 ) return ; VAR_2 . METHOD_2 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) METHOD_3 ( ) ; VAR_1 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2248
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; return VAR_1 ; }",['Delete FieldRead'],2249
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_3 . getContext ( ) , STRING_1 , VAR_4 ) . show ( ) ; VAR_5 . METHOD_4 ( ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2250
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { METHOD_2 ( ) ; TYPE_4 VAR_2 = TYPE_5 . METHOD_3 ( VAR_3 , VAR_1 ) ; TYPE_6 result = new TYPE_6 ( METHOD_4 ( ) , this , VAR_2 ) ; return result ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { METHOD_2 ( ) ; TYPE_4 VAR_2 = TYPE_5 . METHOD_3 ( VAR_3 , VAR_1 ) ; TYPE_6 result = new TYPE_6 ( METHOD_4 ( ) , this , VAR_2 ) ; add ( result ) ; return result ; }","['Insert Invocation', 'Insert VariableRead']",2251
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.err.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2253
public static TYPE_1 METHOD_1 ( java.lang.String url ) { try { return TYPE_2 . METHOD_2 ( new java.net.URL ( url ) ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; return null ; } },public static TYPE_1 METHOD_1 ( java.lang.String url ) { try { return TYPE_2 . METHOD_2 ( new java.net.URL ( url ) ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_3 ( ) ; return null ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2254
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( VAR_1 , this ) ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; },['Delete ThisAccess'],2255
"public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , METHOD_3 ( INT_1 , INT_2 , VAR_3 , VAR_4 ) , nodes [ INT_3 ] [ 1 ] ) ; VAR_5 . add ( VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , METHOD_3 ( INT_1 , INT_2 , VAR_3 , VAR_4 ) , nodes [ INT_3 ] [ 1 ] ) ; VAR_5 . add ( VAR_1 ) ; }",['Delete Invocation'],2256
"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 . METHOD_2 ( ) , VAR_1 ) ; return new TYPE_1 ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2257
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_2 ) ; VAR_5 . setText ( STRING_2 ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . setText ( STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2258
"public static void get ( java.lang.String url , TYPE_1 params , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_1 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . get ( TYPE_3 . METHOD_2 ( url ) , params , VAR_1 ) ; }","public static void get ( java.lang.String url , TYPE_1 params , TYPE_2 VAR_1 ) { VAR_3 . get ( TYPE_3 . METHOD_2 ( url ) , params , VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2259
"public TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; return TYPE_2 . METHOD_4 ( super . METHOD_1 ( ) , VAR_2 , null ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; return TYPE_2 . METHOD_4 ( super . METHOD_1 ( ) , VAR_2 , null ) ; }",['Delete TypeAccess'],2260
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , this , new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) ) ; VAR_4 . put ( VAR_5 , this ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , this , new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2263
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . add ( VAR_4 . getValue ( VAR_5 class ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2264
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( c , VAR_2 class ) ; c . METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( c , VAR_2 class ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",2266
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; } }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2267
"public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( view . METHOD_3 ( ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2268
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . execute ( STRING_1 ) ; VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_3 ( ) . execute ( STRING_1 ) ; VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2269
"public boolean METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_2 ) ) ; return VAR_3 . METHOD_4 ( ) ; } catch ( TYPE_1 VAR_4 ) { return false ; } }","public boolean METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_2 ) ) ; return true ; } catch ( TYPE_1 VAR_4 ) { return false ; } }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2270
public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) return ; METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 = 1 ; METHOD_3 ( true ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) return ; VAR_1 = VAR_2 ; VAR_3 = 1 ; METHOD_3 ( true ) ; },['Delete Invocation'],2271
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( ) ; METHOD_2 ( VAR_1 , intent ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( ) ; METHOD_2 ( VAR_1 , intent ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2272
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2273
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; },protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 . add ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2275
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_2 ) java.lang.System.out.println ( STRING_1 ) ; TYPE_2 . METHOD_2 ( ( ) - > METHOD_3 ( VAR_1 ) ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( ( ) - > METHOD_3 ( VAR_1 ) ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2276
"public void METHOD_1 ( TYPE_1 result , TYPE_2 params ) { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_3 ( STRING_2 , VAR_3 ) ; METHOD_4 ( intent , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 result , TYPE_2 params ) { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_3 ( STRING_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2277
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2278
"public TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 , VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_4 , ""true"" ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_4 , ""true"" ) ; return VAR_1 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2279
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2280
public void METHOD_1 ( int index ) { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( index ) ; METHOD_2 ( true ) ; },public void METHOD_1 ( int index ) { VAR_1 . METHOD_3 ( index ) ; },"['Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",2281
"public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; java.lang.String VAR_3 = STRING_2 ; java.lang.String VAR_4 = TYPE_1 . METHOD_4 ( VAR_3 , VAR_5 ) ; assertNotNull ( VAR_4 ) ; }",public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; java.lang.String VAR_3 = STRING_2 ; java.lang.String VAR_4 = TYPE_1 . METHOD_4 ( VAR_3 ) ; assertNotNull ( VAR_4 ) ; },['Delete TypeAccess'],2282
public static java.io.File METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_1 != null ) { return new java.io.File ( VAR_1 ) ; } return TYPE_2 . METHOD_3 ( ) ; },public static java.io.File METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_1 != null ) { return new java.io.File ( VAR_1 ) ; } return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2284
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . setEnabled ( VAR_2 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . setEnabled ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2285
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; },"['Delete TypeAccess', 'Delete Invocation']",2286
"public void METHOD_1 ( java.lang.String result ) throws TYPE_1 { METHOD_2 ( result ) ; TYPE_2 . METHOD_3 ( VAR_1 , ( STRING_1 + ( TYPE_3 . METHOD_4 ( ) ) ) ) ; }",public void METHOD_1 ( java.lang.String result ) throws TYPE_1 { METHOD_2 ( result ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2287
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_6 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2288
"public void METHOD_1 ( TYPE_1 VAR_1 ) { try { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . remove ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_2 . METHOD_2 ( VAR_5 , STRING_2 , VAR_4 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . remove ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_2 . METHOD_2 ( VAR_5 , STRING_2 , VAR_4 ) ; } }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2289
"private void init ( android.content.Context context ) { VAR_1 = new TYPE_1 ( context ) ; VAR_2 = METHOD_1 ( ) . METHOD_2 ( VAR_3 ) ; VAR_4 = ( VAR_5 ) < INT_1 ; METHOD_3 ( 0 , VAR_6 ) ; }",private void init ( android.content.Context context ) { VAR_1 = new TYPE_1 ( context ) ; VAR_2 = METHOD_1 ( ) . METHOD_2 ( VAR_3 ) ; VAR_4 = ( VAR_5 ) < INT_1 ; },"['Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",2290
"private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 , TYPE_3 . METHOD_3 ( ) , ( ( TYPE_3 . METHOD_4 ( ) ) + INT_1 ) ) ; VAR_1 . METHOD_5 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 , TYPE_3 . METHOD_3 ( ) , ( ( TYPE_3 . METHOD_4 ( ) ) + INT_1 ) ) ; }","['Delete VariableRead', 'Delete Invocation']",2291
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return false ; } VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; return true ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return false ; } VAR_1 = null ; return true ; },"['Delete TypeAccess', 'Delete Invocation']",2292
private void METHOD_1 ( TYPE_1 event ) { VAR_1 . setText ( STRING_1 ) ; TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; },private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2293
"protected void METHOD_1 ( TYPE_1 result ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( VAR_3 , VAR_4 ) ; else VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_5 ) ; }","protected void METHOD_1 ( TYPE_1 result ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( VAR_3 , VAR_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",2294
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( INT_1 ) ; assertTrue ( ( ( TYPE_1 . METHOD_2 ( INT_2 ) . compareTo ( VAR_1 ) ) == 0 ) ) ; },"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( INT_1 ) ; assertEquals ( INT_2 , VAR_1 ) ; }","['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",2295
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; METHOD_6 ( false ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete Literal', 'Delete Invocation']",2296
"private void METHOD_1 ( ) { try { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , METHOD_5 ( ) ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_6 ( ) ; } }",private void METHOD_1 ( ) { try { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_6 ( ) ; } },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2297
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . set ( VAR_5 , VAR_2 ) ; VAR_4 . set ( VAR_6 , VAR_3 ) ; METHOD_2 ( VAR_7 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . set ( VAR_5 , VAR_2 ) ; VAR_4 . set ( VAR_6 , VAR_3 ) ; METHOD_2 ( ) ; }",['Delete TypeAccess'],2298
"public void METHOD_1 ( java.lang.String file ) { this . VAR_1 = file ; this . VAR_2 = false ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; METHOD_2 ( ) ; VAR_5 . METHOD_3 ( VAR_6 , STRING_1 ) ; }",public void METHOD_1 ( java.lang.String file ) { this . VAR_1 = file ; this . VAR_2 = false ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2299
public boolean METHOD_1 ( ) { return null == ( VAR_1 ) ? true : VAR_1 ; },public boolean METHOD_1 ( ) { return null == ( VAR_1 ) ? true : false ; },"['Insert Literal', 'Delete FieldRead']",2300
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation']",2301
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; this . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_1 , response ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { this . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_1 , response ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2302
"public java.lang.String [ ] METHOD_1 ( ) { java.lang.String [ ] result = new java.lang.String [ ] { this . url , this . name , this . VAR_1 , this . VAR_2 , this . VAR_3 , this . time } ; return result ; }","public java.lang.String [ ] METHOD_1 ( ) { java.lang.String [ ] result = new java.lang.String [ ] { this . url , this . name , this . VAR_1 , this . VAR_2 , this . time } ; return result ; }","['Delete ThisAccess', 'Delete FieldRead']",2303
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = VAR_2 ; if ( result == ( VAR_3 ) ) TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( result ) ; },protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = VAR_2 ; METHOD_4 ( result ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2304
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , VAR_3 ) . show ( ) ; METHOD_4 ( ) ; METHOD_5 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , VAR_3 ) . show ( ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete Invocation']",2305
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = false ; TYPE_3 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ; TYPE_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( ) ; TYPE_3 . METHOD_2 ( VAR_5 ) . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = false ; TYPE_3 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ; TYPE_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2306
public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) return ; METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 = 1 ; VAR_4 . setState ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; METHOD_4 ( true ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) return ; METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 = 1 ; VAR_6 . METHOD_3 ( ) ; METHOD_4 ( true ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2307
public void count ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; METHOD_1 ( ) ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; this . VAR_4 = VAR_5 ; this . VAR_6 = null ; },public void count ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; this . VAR_4 = VAR_5 ; this . VAR_6 = null ; },['Delete Invocation'],2308
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Delete FieldRead', 'Delete Return']",2309
"public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } METHOD_3 ( VAR_2 , VAR_1 ) ; }",public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2311
public void METHOD_1 ( TYPE_1 VAR_1 ) { remove ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 . remove ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2312
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( ( ( VAR_1 . METHOD_3 ( ) ) + STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2314
"private void METHOD_1 ( ) { VAR_1 = new java.io.File ( METHOD_2 ( ) , STRING_1 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; return ; } VAR_2 = TYPE_1 . METHOD_5 ( VAR_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = new java.io.File ( METHOD_2 ( ) , STRING_1 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return ; } VAR_2 = TYPE_1 . METHOD_5 ( VAR_1 ) ; }",['Delete Invocation'],2315
protected void METHOD_1 ( float VAR_1 ) { this . METHOD_2 ( ) . METHOD_3 ( true ) ; if ( ( this . VAR_2 ) != null ) { this . VAR_2 . METHOD_4 ( VAR_1 ) ; } },protected void METHOD_1 ( float VAR_1 ) { if ( ( this . VAR_2 ) != null ) { this . VAR_2 . METHOD_4 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",2316
public java.lang.String METHOD_1 ( java.lang.String name ) { return METHOD_2 ( name ) ; },public java.lang.String METHOD_1 ( java.lang.String name ) { return name ; },"['Move VariableRead', 'Delete Invocation']",2317
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; int [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) { VAR_4 = new TYPE_2 ( VAR_2 ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; int [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) { VAR_4 = new TYPE_2 ( VAR_2 ) ; } },['Delete Invocation'],2318
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2320
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getString ( VAR_4 , METHOD_3 ( ) . METHOD_4 ( ) ) ) ; return false ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getString ( VAR_4 ) ) ; return false ; }","['Delete Invocation', 'Delete Invocation']",2321
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , this ) ; VAR_2 . add ( VAR_1 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",2322
public synchronized void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( this ) ) ) ) ; VAR_2 = true ; this . METHOD_3 ( ) ; },public synchronized void METHOD_1 ( ) { VAR_2 = true ; this . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2323
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2324
private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2325
public void METHOD_1 ( ) { METHOD_2 ( position ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Invocation']",2326
public boolean METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) && ( VAR_1 . METHOD_2 ( ) ) ) { return VAR_1 . METHOD_2 ( ) ; } else { return false ; } },public boolean METHOD_1 ( ) { return false ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",2328
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( true ) ; VAR_4 . setEnabled ( true ) ; VAR_5 . setEnabled ( true ) ; METHOD_2 ( STRING_1 , STRING_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2329
public static TYPE_1 METHOD_1 ( java.util.LinkedList < java.lang.Integer > VAR_1 ) { if ( ( VAR_2 ) == null ) return null ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_3 . METHOD_2 ( VAR_1 ) ) return VAR_3 ; } return null ; },public static TYPE_1 METHOD_1 ( java.util.LinkedList < java.lang.Integer > VAR_1 ) { for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_3 . METHOD_2 ( VAR_1 ) ) return VAR_3 ; } return null ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2330
"protected void METHOD_1 ( int VAR_1 , java.lang.String content ) { VAR_2 . i ( ( ( ( ( ( getClass ( ) . METHOD_2 ( ) ) + STRING_1 ) + VAR_1 ) + STRING_2 ) + content ) ) ; METHOD_3 ( VAR_3 ) ; }","protected void METHOD_1 ( int VAR_1 , java.lang.String content ) { METHOD_3 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2331
"public void METHOD_1 ( TYPE_1 name ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 = null ; }",public void METHOD_1 ( TYPE_1 name ) { VAR_2 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2332
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 . get ( VAR_5 . getName ( ) ) . METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2333
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2334
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2335
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2336
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; METHOD_3 ( ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete Invocation'],2337
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; x += VAR_4 ; VAR_5 += VAR_4 ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_3 . METHOD_1 ( VAR_4 ) ; x += VAR_4 ; VAR_5 += VAR_4 ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2339
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( name , VAR_2 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_4 . METHOD_6 ( name ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( name , VAR_2 . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",2341
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2342
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . i ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2343
"public void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 ) ; }",public void METHOD_1 ( boolean VAR_1 ) { METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2344
static void METHOD_1 ( ) { int VAR_1 = ( VAR_2 . size ( ) ) - 1 ; VAR_2 . get ( VAR_1 ) . METHOD_2 ( ) ; VAR_2 . remove ( VAR_1 ) ; VAR_3 . remove ( VAR_1 ) ; ( VAR_4 ) -- ; },static void METHOD_1 ( ) { int VAR_1 = ( VAR_2 . size ( ) ) - 1 ; VAR_2 . get ( VAR_1 ) . METHOD_2 ( ) ; VAR_2 . remove ( VAR_1 ) ; ( VAR_4 ) -- ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2345
"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; return VAR_2 . METHOD_2 ( STRING_2 , VAR_3 class ) . METHOD_3 ( STRING_3 , VAR_1 ) . METHOD_4 ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_2 , VAR_3 class ) . METHOD_3 ( STRING_3 , VAR_1 ) . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2346
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; listener = null ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; listener = null ; VAR_4 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2347
public void METHOD_1 ( ) { java.lang.System.out.println ( CHAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2348
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2349
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 ) ; TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2350
public void METHOD_1 ( java.lang.Void result ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( java.lang.Void result ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2351
"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { TYPE_4 . METHOD_2 ( VAR_1 , response ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2352
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . VAR_3 . METHOD_3 ( this ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation']",2353
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this , METHOD_4 ( VAR_3 . content ) ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",2354
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2356
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; } VAR_3 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_4 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2357
public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( VAR_2 . METHOD_2 ( 1 ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( VAR_2 . METHOD_2 ( 1 ) ) ; },['Delete Invocation'],2358
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , 0 , 0 , this ) ; VAR_4 . METHOD_1 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , 0 , 0 , this ) ; VAR_4 . METHOD_1 ( VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2360
public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2361
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) . METHOD_4 ( this ) ; METHOD_3 ( VAR_4 ) . METHOD_4 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) . METHOD_4 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2362
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 . start ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . start ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2364
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; super . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete Literal', 'Delete Invocation']",2365
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) == null ; },public boolean METHOD_1 ( ) { return false ; },"['Insert Literal', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",2366
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) . METHOD_4 ( listener ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",2367
"public TYPE_1 build ( ) { return new TYPE_1 ( name , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; }","public TYPE_1 build ( ) { return new TYPE_1 ( name , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }","['Delete FieldRead', 'Delete FieldRead']",2368
public TYPE_1 METHOD_1 ( long VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_2 class ) ; },public TYPE_1 METHOD_1 ( long VAR_1 ) { return TYPE_2 . METHOD_2 ( ) ; },['Delete TypeAccess'],2370
public TYPE_1 < ? extends java.lang.Boolean > METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . error ( VAR_1 . METHOD_2 ( ) ) ; return VAR_3 . error ( VAR_1 ) ; },public TYPE_1 < ? extends java.lang.Boolean > METHOD_1 ( java.lang.Throwable VAR_1 ) { return VAR_3 . error ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2371
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = null ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( ) ; VAR_3 = true ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = null ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( ) ; VAR_3 = true ; } },"['Delete Invocation', 'Delete Block']",2372
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . replaceAll ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) { this . VAR_1 += VAR_3 ; } return this ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) { this . VAR_1 += STRING_2 ; } return this ; },"['Insert VariableRead', 'Move TypeAccess', 'Update FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess']",2373
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_3 ) == INT_1 ) VAR_4 . METHOD_3 ( VAR_5 ) ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2374
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete Invocation']",2377
"public void METHOD_1 ( TYPE_1 out ) { TYPE_2 . METHOD_2 ( this , out . METHOD_3 ( ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 out ) { TYPE_2 . METHOD_2 ( this , out . METHOD_3 ( ) ) ; }",['Delete Invocation'],2378
"void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }",void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2379
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( VAR_1 , true ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; },['Delete Literal'],2380
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( 0 , 0 ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 . delete ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( 0 , 0 ) ; VAR_1 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2381
"public void METHOD_1 ( java.lang.String VAR_1 ) { put ( VAR_2 , VAR_1 ) ; this . VAR_3 . setValue ( VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_3 . setValue ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2382
private void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( false ) ; TYPE_1 . METHOD_3 ( ) ; } else { METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( false ) ; } else { METHOD_2 ( true ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2383
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete VariableRead', 'Delete Invocation']",2384
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . setText ( STRING_1 ) ; } else { VAR_2 = true ; METHOD_2 ( ) ; VAR_3 . setText ( STRING_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( STRING_1 ) ; } else { VAR_2 = true ; METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( STRING_2 ) ; } },"['Insert TypeAccess', 'Insert TypeAccess']",2385
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( ) { METHOD_3 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2386
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( event . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( event . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2387
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( this , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( this , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; }",['Delete Invocation'],2388
"void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_5 . remove ( VAR_2 ) ; }","void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; METHOD_3 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2389
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",2390
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . setText ( VAR_5 ) ; if ( METHOD_4 ( ) ) this . VAR_6 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( METHOD_4 ( ) ) this . VAR_6 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2391
"public void METHOD_1 ( java.lang.String filePath ) { try { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , filePath ) ; } catch ( java.io.IOException VAR_1 ) { TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } }","public void METHOD_1 ( java.lang.String filePath ) { try { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , filePath ) ; } catch ( java.io.IOException VAR_1 ) { } }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2392
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_2 . METHOD_5 ( ) ) ) + STRING_2 ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_2 . METHOD_5 ( ) ) ) + STRING_2 ) ) ; } },"['Insert VariableRead', 'Delete TypeAccess']",2393
"public void METHOD_1 ( TYPE_1 className , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = true ; METHOD_3 ( this ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 className , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = true ; METHOD_3 ( this ) ; }",['Delete Invocation'],2394
public void METHOD_1 ( ) { METHOD_2 ( ) ; this . METHOD_3 ( true ) ; },public void METHOD_1 ( ) { this . METHOD_3 ( true ) ; },['Delete Invocation'],2395
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_3 ( METHOD_5 ( ) ) ; METHOD_3 ( METHOD_6 ( ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_3 ( METHOD_6 ( ) ) ; },"['Delete Invocation', 'Delete Invocation']",2396
private void METHOD_1 ( ) { t = new TYPE_1 ( VAR_1 . trim ( ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; },private void METHOD_1 ( ) { t = new TYPE_1 ( VAR_1 . trim ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2397
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_2 ( VAR_5 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_2 ( VAR_5 ) ; }",['Delete FieldRead'],2398
public boolean add ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . type ) != ( VAR_2 . type ) ) { return false ; } if ( VAR_1 != null ) { VAR_3 += VAR_4 ; } return true ; },public void add ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_3 += VAR_4 ; } },"['Update TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",2399
"public < TYPE_1 , TYPE_2 extends TYPE_1 > void METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; }","public < TYPE_1 , TYPE_2 extends TYPE_1 > void METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2400
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = false ; VAR_4 = true ; METHOD_3 ( ) ; if ( ( VAR_5 ) != null ) VAR_5 . METHOD_4 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = false ; VAR_4 = true ; METHOD_3 ( ) ; if ( ( VAR_5 ) != null ) VAR_5 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2401
public void METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete Invocation']",2402
public java.util.Date METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; },public java.util.Date METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2403
public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",2404
public void open ( java.lang.String VAR_1 ) { if ( METHOD_1 ( ) ) { this . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; VAR_2 = false ; METHOD_5 ( ) ; } },public void open ( java.lang.String VAR_1 ) { if ( METHOD_1 ( ) ) { this . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; VAR_2 = false ; } },['Delete Invocation'],2405
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2406
protected void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_1 ( ) ; },protected void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete Invocation']",2407
public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; },"['Update TypeAccess', 'Delete TypeAccess']",2408
public void end ( ) { TYPE_1 . METHOD_1 ( STRING_1 ) ; VAR_1 = false ; },public void end ( ) { VAR_1 = false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2409
"protected void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { if ( null != ( VAR_2 ) ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , METHOD_3 ( ) , VAR_6 ) ; } }","protected void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { if ( null != ( VAR_2 ) ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , METHOD_3 ( ) ) ; } }",['Delete TypeAccess'],2410
"public void METHOD_1 ( java.lang.String type , int VAR_1 , int number , boolean VAR_2 ) { for ( int i = 0 ; i < number ; i ++ ) { METHOD_2 ( type , VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( java.lang.String type , int VAR_1 , int number , int VAR_2 ) { for ( int i = 0 ; i < number ; i ++ ) { METHOD_2 ( type , VAR_1 , VAR_2 ) ; } }",['Update TypeReference'],2411
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = new java.util.ArrayList < > ( ) ; },protected void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = new java.util.ArrayList < > ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2412
public TYPE_1 METHOD_1 ( ) { return item ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",2413
"public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( STRING_1 ) ) ; int n = METHOD_4 ( METHOD_5 ( STRING_2 ) , METHOD_6 ( STRING_3 ) , VAR_1 ) ; assertTrue ( ( n == 0 ) ) ; }","public void METHOD_1 ( ) { int n = METHOD_4 ( METHOD_5 ( STRING_2 ) , METHOD_6 ( STRING_3 ) , VAR_1 ) ; assertTrue ( ( n == 0 ) ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2416
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null , STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null , STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2417
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , true , false , null , VAR_6 , VAR_7 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , false , VAR_4 , VAR_5 , true , false , null , VAR_6 , VAR_7 ) ; }","['Insert Literal', 'Delete TypeAccess']",2418
public double t ( double x ) { double t = ( x - ( this . x ) ) / ( this . VAR_1 ) ; java.lang.System.err.println ( ( STRING_1 + t ) ) ; return t ; },public double t ( double x ) { double t = ( x - ( this . x ) ) / ( this . VAR_1 ) ; return t ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2419
"public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . size ( ) , VAR_3 ) ; return ( VAR_2 . size ( ) ) >= ( VAR_3 ) ; }",public boolean METHOD_1 ( ) { return ( VAR_2 . size ( ) ) >= ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2420
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_1 class ) ; intent . METHOD_2 ( VAR_2 , true ) ; METHOD_3 ( intent ) ; VAR_3 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_1 class ) ; METHOD_3 ( intent ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2421
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) . METHOD_3 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) . METHOD_3 ( STRING_6 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) . METHOD_3 ( STRING_4 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2422
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( data ) ; METHOD_3 ( ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_5 . METHOD_4 ( VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( data ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_5 . METHOD_4 ( VAR_3 ) ; } }",['Delete Invocation'],2423
"private void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; java.lang.String VAR_3 = getString ( VAR_4 , VAR_1 ) ; VAR_5 . setText ( VAR_3 ) ; }","private void METHOD_1 ( int VAR_1 ) { java.lang.String VAR_3 = getString ( VAR_4 , VAR_1 ) ; VAR_5 . setText ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2424
public void handle ( TYPE_1 event ) { VAR_1 . METHOD_1 ( ) . remove ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; },public void handle ( TYPE_1 event ) { VAR_1 . METHOD_1 ( ) . remove ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2425
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.print ( STRING_1 ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2426
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },['Delete Invocation'],2427
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; },['Delete Invocation'],2428
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . start ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . start ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2429
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2430
public int METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_1 ) ; return VAR_2 . getInt ( ( ( this . VAR_3 ) + ( VAR_1 < < INT_1 ) ) ) ; },public int METHOD_1 ( int VAR_1 ) { return VAR_2 . getInt ( ( ( this . VAR_3 ) + ( VAR_1 < < INT_1 ) ) ) ; },"['Delete VariableRead', 'Delete Invocation']",2431
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2432
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_3 . METHOD_2 ( ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2433
"public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) , VAR_1 , true ) ; }","public void METHOD_1 ( ) { METHOD_2 ( false , VAR_1 ) ; }","['Move TypeAccess', 'Update Literal', 'Delete Invocation']",2435
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ; ( VAR_1 ) ++ ; METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( new TYPE_2 ( VAR_5 ) ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ; ( VAR_1 ) ++ ; METHOD_3 ( INT_1 ) ; VAR_4 . METHOD_5 ( new TYPE_2 ( this , VAR_5 ) ) ; }","['Insert ThisAccess', 'Delete Invocation']",2436
public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; },public void init ( ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2437
"protected void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_5 , VAR_6 ) ; }","protected void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_5 , VAR_6 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2438
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 . get ( t ) ) ; TYPE_3 . METHOD_4 ( ) ; remove ( ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 . get ( t ) ) ; remove ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2439
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) > 0 ; },public boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",2440
public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; },public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2441
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 pattern ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 pattern ) { }","['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2442
public TYPE_1 [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return null ; TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 . size ( ) ] ; return VAR_1 . METHOD_2 ( VAR_2 ) ; },public TYPE_1 [ ] METHOD_1 ( ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 . size ( ) ] ; return VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2443
public static void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 = TYPE_1 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( STRING_2 ) . METHOD_5 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 = TYPE_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2445
public synchronized void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . size ( ) ) > ( VAR_2 ) ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( ) ; } VAR_3 . METHOD_4 ( event ) ; METHOD_5 ( ) ; },public synchronized void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . size ( ) ) > ( VAR_2 ) ) { VAR_3 . METHOD_3 ( ) ; } VAR_3 . METHOD_4 ( event ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2446
"public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { android.widget.Button VAR_2 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setEnabled ( true ) ; VAR_5 = new TYPE_3 ( VAR_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { android.widget.Button VAR_2 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setEnabled ( true ) ; VAR_5 = new TYPE_3 ( VAR_1 ) ; }",['Delete Invocation'],2447
private void METHOD_1 ( TYPE_1 data ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( ( ( VAR_5 . size ( ) ) + STRING_1 ) ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 data ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2448
"public synchronized boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; return VAR_1 . getBoolean ( VAR_2 , false ) ; }","public synchronized boolean METHOD_1 ( ) { return VAR_1 . getBoolean ( VAR_2 , false ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2449
"public TYPE_1 METHOD_1 ( ) { final java.net.URL url = METHOD_2 ( ) . build ( METHOD_3 ( ) . METHOD_4 ( ) , METHOD_5 ( ) ) ; return new TYPE_1 ( METHOD_3 ( ) , url ) ; }","public TYPE_1 METHOD_1 ( ) { final java.net.URL url = METHOD_2 ( ) . build ( METHOD_3 ( ) . METHOD_4 ( ) ) ; return new TYPE_1 ( METHOD_3 ( ) , url ) ; }",['Delete Invocation'],2450
public void METHOD_1 ( TYPE_1 < java.lang.String > t ) { VAR_1 . info ( ( ( METHOD_2 ( true ) ) + STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 < java.lang.String > t ) { VAR_1 . info ( STRING_1 ) ; },"['Insert TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",2451
"public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2452
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . get ( VAR_1 ) , VAR_4 class ) ; VAR_2 . METHOD_3 ( ) ; return VAR_5 . get ( VAR_3 . get ( VAR_1 ) , VAR_4 class ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_5 . get ( VAR_3 . get ( VAR_1 ) , VAR_4 class ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2453
"public void METHOD_1 ( TYPE_1 node , java.lang.Object value ) { METHOD_2 ( value ) ; }","public void METHOD_1 ( TYPE_1 node , java.lang.Object value ) { }","['Delete VariableRead', 'Delete Invocation']",2455
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; int VAR_1 = INT_1 ; int VAR_2 = VAR_1 + 1 ; int x = VAR_1 + VAR_2 ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; int VAR_1 = INT_1 ; int VAR_2 = VAR_1 + 1 ; int x = VAR_1 + VAR_2 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2456
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this . VAR_1 , STRING_1 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2457
"public void METHOD_1 ( ) { for ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 : VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { for ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 : VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } }","['Delete TypeAccess', 'Delete Invocation']",2459
public int METHOD_1 ( ) { return VAR_1 . toLowerCase ( VAR_2 ) . METHOD_1 ( ) ; },public int METHOD_1 ( ) { return VAR_1 . toLowerCase ( ) . METHOD_1 ( ) ; },['Delete TypeAccess'],2460
public java.util.List < java.lang.String > METHOD_1 ( ) { return VAR_1 ; },public java.util.LinkedList < java.lang.String > METHOD_1 ( ) { return null ; },"['Update TypeReference', 'Insert Literal', 'Delete FieldRead']",2461
public void remove ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) <= 0 ) VAR_3 = false ; VAR_4 . METHOD_1 ( ) ; },public void remove ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) <= 0 ) VAR_3 = false ; },"['Delete TypeAccess', 'Delete Invocation']",2462
"public int METHOD_1 ( java.util.List < java.util.Set < java.lang.Integer > > VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 , VAR_6 ) ; return VAR_4 . METHOD_1 ( ) ; }","public int METHOD_1 ( java.util.List < java.util.Set < java.lang.Integer > > VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 ) ; return VAR_4 . METHOD_1 ( ) ; }",['Delete FieldRead'],2464
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2465
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2466
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_4 ( false ) ; },public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2467
public void METHOD_1 ( ) { if ( VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2468
java.lang.Boolean METHOD_1 ( ) ;,boolean METHOD_1 ( ) ;,['Update TypeReference'],2469
public void init ( ) { TYPE_1 f = VAR_1 . METHOD_1 ( VAR_2 ) ; names . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( 0 ) ; VAR_4 . METHOD_2 ( f ) ; VAR_5 . METHOD_3 ( ) ; },public void init ( ) { TYPE_1 f = VAR_1 . METHOD_1 ( VAR_2 ) ; names . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_2 ( f ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2470
public static void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { ( VAR_1 ) ++ ; },"['Delete TypeAccess', 'Delete Invocation']",2471
public void METHOD_1 ( java.awt.Color VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.awt.Color VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2472
"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_1 VAR_2 ; TYPE_4 VAR_3 = METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; }","private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_1 VAR_2 ; TYPE_4 VAR_3 = METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; }","['Delete TypeAccess', 'Delete TypeAccess']",2473
public void add ( TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; },public void add ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2474
public void METHOD_1 ( int index ) { VAR_1 . METHOD_1 ( VAR_2 . get ( index ) ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int index ) { VAR_1 . METHOD_1 ( VAR_2 . get ( index ) ) ; METHOD_3 ( ) ; },['Delete Invocation'],2475
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; },['Delete Invocation'],2476
public TYPE_1 METHOD_1 ( java.lang.String key ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_2 < TYPE_1 > VAR_1 = VAR_2 . METHOD_1 ( key ) ; return VAR_3 . execute ( ) . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( java.lang.String key ) throws java.lang.Exception { TYPE_2 < TYPE_1 > VAR_1 = VAR_2 . METHOD_1 ( key ) ; return VAR_3 . execute ( ) . METHOD_3 ( ) ; },['Delete Invocation'],2477
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_2 . setValue ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( STRING_2 ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_5 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( STRING_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2478
"private void METHOD_1 ( ) { if ( ( VAR_1 . get ( ) ) != null ) { VAR_2 . setText ( VAR_1 . get ( ) . getActivity ( ) , VAR_1 . get ( ) . VAR_3 , VAR_4 ) ; } }","private void METHOD_1 ( ) { if ( ( VAR_3 ) != null ) { VAR_2 . setText ( getActivity ( ) , VAR_3 , VAR_4 ) ; } }","['Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead']",2479
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( VAR_1 ) ; this . METHOD_5 ( VAR_1 ) ; this . METHOD_6 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( VAR_1 ) ; this . METHOD_4 ( VAR_1 ) ; this . METHOD_5 ( VAR_1 ) ; this . METHOD_6 ( VAR_1 ) ; }","['Insert ThisAccess', 'Delete TypeAccess']",2480
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; message . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2481
"public void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_1 ; VAR_7 . METHOD_4 ( false ) ; }","public void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_1 ; VAR_7 . METHOD_4 ( false ) ; }","['Delete TypeAccess', 'Delete Invocation']",2482
public boolean METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( 0 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; return true ; },public boolean METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return true ; },"['Delete Literal', 'Delete Invocation']",2483
public TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },public void METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",2484
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2485
"public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 , java.io.IOException , TYPE_2 , TYPE_3 , TYPE_4 { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 , java.io.IOException , TYPE_2 , TYPE_3 , TYPE_4 { VAR_2 . METHOD_2 ( VAR_1 ) ; }",['Delete Invocation'],2486
public static void main ( java.lang.String [ ] args ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( STRING_1 ) ; java.lang.String VAR_2 = VAR_1 . METHOD_1 ( ) . toString ( ) ; java.lang.System.out.print ( VAR_2 ) ; java.lang.System.out.print ( STRING_2 ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( STRING_1 ) ; java.lang.String VAR_2 = VAR_1 . METHOD_1 ( ) . toString ( ) ; java.lang.System.out.print ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2487
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } if ( METHOD_3 ( VAR_1 ) ) { METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } if ( METHOD_3 ( VAR_1 ) ) { METHOD_4 ( VAR_1 ) ; METHOD_6 ( ) ; } },['Delete Invocation'],2488
public final void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public final void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },['Delete Invocation'],2491
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 ) ; TYPE_1 . METHOD_2 ( STRING_5 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2492
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { }","['Delete TypeAccess', 'Delete Invocation']",2493
"public void METHOD_1 ( byte [ ] b , int VAR_1 , int VAR_2 ) throws java.io.IOException { METHOD_2 ( new java.lang.String ( b , VAR_1 , VAR_2 ) , VAR_3 ) ; }","public void METHOD_1 ( byte [ ] b , int VAR_1 , int VAR_2 ) throws java.io.IOException { METHOD_2 ( new java.lang.String ( b , VAR_1 , VAR_2 ) ) ; }",['Delete TypeAccess'],2494
public void METHOD_1 ( TYPE_1 view ) { this . VAR_1 = view ; VAR_2 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 view ) { this . VAR_1 = view ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2495
"protected void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; TYPE_1 . METHOD_2 ( VAR_1 , result ) ; context . METHOD_3 ( ( ) - > { VAR_2 . METHOD_4 ( VAR_3 ) ; } ) ; }","protected void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; TYPE_1 . METHOD_2 ( VAR_1 , result ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2496
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_3 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2497
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_2 . getId ( ) , VAR_3 ) ; METHOD_3 ( intent , VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_2 . getId ( ) ) ; METHOD_3 ( intent , VAR_4 ) ; }",['Delete TypeAccess'],2498
public java.lang.String METHOD_1 ( ) { return ( ( java.lang.String ) ( VAR_1 . get ( VAR_2 ) ) ) ; },public java.lang.String METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2500
protected void METHOD_1 ( TYPE_1 VAR_1 ) { init ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { },['Delete Invocation'],2501
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { view . METHOD_2 ( VAR_1 , VAR_2 ) ; update ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { view . METHOD_2 ( VAR_1 , VAR_2 ) ; }",['Delete Invocation'],2502
public void METHOD_1 ( TYPE_1 event ) { this . VAR_1 = VAR_2 class . METHOD_2 ( event . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( this . VAR_1 ) ; METHOD_5 ( ) ; METHOD_6 ( ) . METHOD_1 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { this . VAR_1 = VAR_2 class . METHOD_2 ( event . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( this . VAR_1 ) ; METHOD_5 ( ) ; },"['Delete Invocation', 'Delete Invocation']",2503
void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) == null ) return ; TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",2504
private void METHOD_1 ( ) { content . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 . METHOD_3 ( ) ) <= 0 ) VAR_5 . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( ) { content . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2505
"private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( ( VAR_3 ) == null ) { METHOD_2 ( ) ; } METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 , VAR_4 , VAR_2 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 , VAR_4 , VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",2506
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2507
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { if ( VAR_3 ) return ; }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2508
public TYPE_1 show ( ) { VAR_1 . show ( ) ; return this ; },public TYPE_1 show ( ) { return this ; },"['Delete TypeAccess', 'Delete Invocation']",2509
private void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; synchronized ( this ) { VAR_1 = VAR_2 ; } if ( VAR_1 != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { } } },private void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; synchronized ( this ) { VAR_1 = VAR_2 ; } if ( VAR_1 != null ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { } } },"['Insert TypeAccess', 'Delete VariableRead']",2510
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this , VAR_3 , VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_4 . execute ( ) ; METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this , VAR_3 , VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_4 . execute ( ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2511
"public void METHOD_1 ( android.view.View view ) { METHOD_2 ( true , VAR_1 ) ; METHOD_2 ( false , VAR_2 ) ; VAR_3 = false ; VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) . METHOD_5 ( ) ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( true , VAR_1 ) ; METHOD_2 ( false , VAR_2 ) ; VAR_3 = false ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2512
"public void METHOD_1 ( java.lang.String message ) { if ( ( VAR_1 ) != null ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 . setText ( message ) ; } }",public void METHOD_1 ( java.lang.String message ) { if ( ( VAR_1 ) != null ) { VAR_3 . setText ( message ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2513
public static void METHOD_1 ( java.lang.String name ) { VAR_1 . remove ( name ) ; TYPE_1 . METHOD_2 ( ( STRING_1 + name ) ) ; },public static void METHOD_1 ( java.lang.String name ) { VAR_1 . remove ( name ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2514
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , java.lang.String . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; VAR_2 . i ( STRING_2 , STRING_2 ) ; VAR_3 -= VAR_1 . METHOD_3 ( ) ; return true ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 -= VAR_1 . METHOD_3 ( ) ; return true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2515
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2516
public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > event ) { METHOD_2 ( VAR_1 . getValue ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 < java.util.List < java.lang.String > > event ) { METHOD_3 ( ) ; },"['Update TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2517
public void start ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( true ) ; VAR_3 . execute ( this ) ; },public void start ( ) { VAR_1 = true ; VAR_3 . execute ( this ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2519
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2520
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( VAR_2 ) { METHOD_3 ( false ) ; } METHOD_4 ( new TYPE_1 ( ) ) ; METHOD_4 ( new TYPE_2 ( METHOD_5 ( ) ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_4 ( new TYPE_1 ( ) ) ; METHOD_4 ( new TYPE_2 ( METHOD_5 ( ) ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",2521
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 ) ; } this . VAR_2 . select ( this . VAR_3 . METHOD_4 ( ) ) ; return this ; },public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 ) ; } return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",2522
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; } VAR_3 . METHOD_3 ( VAR_4 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2523
public int METHOD_1 ( ) { ( time ) ++ ; if ( ( time ) > INT_1 ) { time = 0 ; METHOD_2 ( ) ; } return time ; },public int METHOD_1 ( ) { ( time ) ++ ; if ( ( time ) > INT_1 ) { time = 0 ; METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Return']",2525
public void METHOD_1 ( ) throws java.io.IOException { try { super . METHOD_1 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { try { super . METHOD_1 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2527
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . assertNotNull ( TYPE_2 . METHOD_3 ( STRING_2 ) ) ; },public void METHOD_1 ( ) { assertNotNull ( TYPE_2 . METHOD_3 ( STRING_2 ) ) ; },"['Update TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2529
protected void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; METHOD_2 ( intent ) ; },['Delete Invocation'],2530
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . METHOD_2 ( this ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2531
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2532
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , new java.util.ArrayList ( VAR_3 ) ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , new java.util.ArrayList ( VAR_3 ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2536
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( null ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2537
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2538
"public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { VAR_3 . METHOD_2 ( name ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; }","public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { VAR_3 . METHOD_2 ( name ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2539
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2540
"public void METHOD_1 ( TYPE_1 element , int VAR_1 ) { VAR_2 . info ( STRING_1 , VAR_3 . getName ( ) , VAR_1 ) ; METHOD_2 ( element , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 element , int VAR_1 ) { VAR_2 . info ( STRING_1 , VAR_3 . getName ( ) , VAR_1 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2541
"public void METHOD_1 ( final java.lang.Void result ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 . getValue ( ) ) ; this . VAR_2 . set ( false ) ; }","public void METHOD_1 ( final java.lang.Void result ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 . getValue ( ) ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",2542
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2543
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , getText ( VAR_4 ) , VAR_5 ) . show ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2544
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( true ) ; if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } },"['Delete Literal', 'Delete Invocation']",2545
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_6 , VAR_7 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2546
"protected void METHOD_1 ( ) { try { VAR_1 . info ( STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_1 . error ( STRING_2 , VAR_2 ) ; } METHOD_4 ( ) . METHOD_5 ( ) ; }","protected void METHOD_1 ( ) { try { VAR_1 . info ( STRING_1 ) ; METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_1 . error ( STRING_2 , VAR_2 ) ; } METHOD_4 ( ) . METHOD_5 ( ) ; }",['Delete Invocation'],2547
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; }",['Delete Invocation'],2548
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_7 . METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2549
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . i ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_3 . i ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; METHOD_4 ( VAR_1 ) ; }","['Delete VariableRead', 'Delete Invocation']",2551
"public java.lang.String METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_3 ( STRING_1 , STRING_3 ) ; return null ; } return VAR_1 . METHOD_4 ( ) ; }","public java.lang.String METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 ) == null ) return null ; return VAR_1 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2552
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2553
protected boolean METHOD_1 ( ) { return ( ( java.lang.Math.abs ( ( ( VAR_1 . METHOD_2 ( ) ) - ( VAR_2 ) ) ) ) < ( VAR_3 ) ) && ( ( java.lang.Math.abs ( VAR_4 ) ) < ( VAR_3 ) ) ; },protected boolean METHOD_1 ( ) { return false ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",2554
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2555
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2556
"public TYPE_1 METHOD_1 ( int position ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + position ) ) ; return VAR_1 . get ( position ) ; }",public TYPE_1 METHOD_1 ( int position ) { return VAR_1 . get ( position ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2557
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_2 ) this . METHOD_2 ( VAR_3 ) ; else this . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2558
"public void METHOD_1 ( java.lang.Object result ) { VAR_1 . add ( VAR_2 . format ( VAR_3 . getTime ( ) ) ) ; TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 , VAR_5 ) . METHOD_3 ( STRING_2 , null ) . show ( ) ; }","public void METHOD_1 ( java.lang.Object result ) { TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 , VAR_5 ) . METHOD_3 ( STRING_2 , null ) . show ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2559
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } VAR_1 = false ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; this . METHOD_4 ( ) ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } VAR_1 = false ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2560
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.err.println ( STRING_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2561
public TYPE_1 METHOD_1 ( java.lang.Long id ) { VAR_1 . METHOD_1 ( id ) ; return TYPE_1 . METHOD_2 ( ) . build ( ) ; },public void METHOD_1 ( java.lang.Long id ) { VAR_1 . METHOD_1 ( id ) ; },"['Update TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Return']",2562
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2563
"public void METHOD_1 ( final long VAR_1 , final long VAR_2 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_1 ) ; }","public void METHOD_1 ( final long VAR_1 , final long VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2564
public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2565
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2566
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_1 ) . show ( ) ; METHOD_3 ( INT_1 ) ; }",public void METHOD_1 ( android.view.View view ) { METHOD_3 ( INT_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2567
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2568
"protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( ! VAR_1 ) { METHOD_2 ( new android.content.Intent ( context , VAR_2 class ) ) ; METHOD_3 ( ) ; } METHOD_4 ( ) ; }","protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( ! VAR_1 ) METHOD_2 ( new android.content.Intent ( context , VAR_2 class ) ) ; METHOD_4 ( ) ; }",['Delete Invocation'],2569
"public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) { METHOD_4 ( VAR_1 , VAR_2 ) ; } }",public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) { METHOD_4 ( VAR_1 ) ; } },['Delete TypeAccess'],2570
public void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) ; } catch ( java.lang.Throwable VAR_3 ) { METHOD_4 ( VAR_3 ) ; } },public void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) ; } catch ( java.lang.Throwable VAR_3 ) { } },"['Delete VariableRead', 'Delete Invocation']",2571
protected void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2572
"public java.lang.Object METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return null ; } return VAR_2 . METHOD_1 ( name , VAR_1 ) ; }","public java.lang.Object METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 ) { return VAR_2 . METHOD_1 ( name , VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2574
"private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String message , java.lang.Throwable t , java.lang.Object ... params ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 , null , new TYPE_2 ( message , params ) , t ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String message , java.lang.Throwable t , java.lang.Object ... params ) { VAR_2 . METHOD_1 ( VAR_1 , new TYPE_2 ( message , params ) , t ) ; }","['Update Invocation', 'Delete TypeAccess', 'Delete Literal']",2575
private void METHOD_1 ( ) { update ( ) ; int VAR_1 = ( status . METHOD_2 ( ) ) - 1 ; if ( VAR_1 < 0 ) { TYPE_1 . METHOD_3 ( VAR_2 class ) ; } else { METHOD_4 ( VAR_1 ) ; } },private void METHOD_1 ( ) { int VAR_1 = ( status . METHOD_2 ( ) ) - 1 ; if ( VAR_1 < 0 ) { TYPE_1 . METHOD_3 ( VAR_2 class ) ; } else { METHOD_4 ( VAR_1 ) ; } },['Delete Invocation'],2576
"public TYPE_1 METHOD_1 ( ) { TYPE_1 result = null ; METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) . METHOD_7 ( null , STRING_1 ) ; return result ; }",public TYPE_1 METHOD_1 ( ) { TYPE_1 result = null ; METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; return result ; },"['Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",2577
"void METHOD_1 ( int x , int VAR_1 ) { VAR_2 . METHOD_2 ( ( ( min . METHOD_3 ( ) ) + x ) , ( ( min . METHOD_4 ( ) ) + VAR_1 ) , VAR_3 ) ; }","void METHOD_1 ( int x , int VAR_1 ) { VAR_2 . METHOD_2 ( x , VAR_1 , VAR_3 ) ; }","['Move VariableRead', 'Move VariableRead', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator']",2578
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 . setText ( VAR_1 ) ; message . METHOD_2 ( VAR_3 ) ; VAR_4 . add ( message , VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 . setText ( VAR_1 ) ; message . METHOD_2 ( VAR_3 ) ; VAR_4 . add ( message , VAR_5 ) ; METHOD_3 ( ) ; }",['Update TypeAccess'],2579
"protected void init ( ) { VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 ) ; list . METHOD_3 ( VAR_1 ) ; list . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; }","protected void init ( ) { VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 ) ; list . METHOD_3 ( VAR_1 ) ; VAR_1 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2580
public TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 . isEmpty ( ) ) { return METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; } return METHOD_3 ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; },public TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( ) ; return METHOD_3 ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",2581
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( ( ( STRING_1 + ( id ) ) + STRING_2 ) ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2582
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( VAR_1 ) ; VAR_3 . get ( VAR_1 ) . METHOD_1 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . get ( VAR_1 ) . METHOD_1 ( VAR_2 ) ; }","['Delete VariableRead', 'Delete Invocation']",2583
"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( true , STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( STRING_2 , INT_1 ) ; VAR_1 . METHOD_2 ( ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( true , STRING_1 ) ; VAR_1 . METHOD_1 ( ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2584
"private TYPE_1 METHOD_1 ( long VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 ) ; return new TYPE_1 ( VAR_1 , VAR_2 ) ; }","private TYPE_1 METHOD_1 ( long VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) ; return new TYPE_1 ( VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],2585
"void METHOD_1 ( java.util.Scanner VAR_1 ) throws TYPE_1 { METHOD_2 ( VAR_1 , CHAR_1 ) ; METHOD_3 ( VAR_1 ) ; TYPE_2 < TYPE_3 > set = METHOD_4 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( set ) ; }","void METHOD_1 ( java.util.Scanner VAR_1 ) throws TYPE_1 { METHOD_2 ( VAR_1 , CHAR_1 ) ; TYPE_2 < TYPE_3 > set = METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( set ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2586
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) return false ; return VAR_3 . get ( VAR_1 ) . contains ( VAR_4 ) ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_4 ) ) ) return false ; return VAR_3 . get ( VAR_4 ) . contains ( VAR_1 ) ; },"['Move VariableRead', 'Insert TypeAccess', 'Move TypeAccess', 'Delete VariableRead']",2587
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) >= 0 ) && ( ( VAR_1 ) < ( VAR_2 ) ) ) { VAR_1 += 1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; } METHOD_4 ( ) ; },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) >= 0 ) && ( ( VAR_1 ) < ( VAR_2 ) ) ) { VAR_1 += 1 ; METHOD_2 ( ) ; } METHOD_4 ( ) ; },['Delete Invocation'],2588
private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { if ( VAR_2 ) VAR_3 . METHOD_3 ( ) ; VAR_4 . setText ( VAR_5 . getText ( ) ) ; VAR_6 . METHOD_4 ( true ) ; } METHOD_5 ( ) ; },private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_4 . setText ( VAR_5 . getText ( ) ) ; VAR_6 . METHOD_4 ( true ) ; } METHOD_5 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2590
public void METHOD_1 ( ) { METHOD_2 ( ) ; getView ( ) . METHOD_3 ( ) ; getView ( ) . METHOD_4 ( ) ; getView ( ) . METHOD_5 ( true ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; getView ( ) . METHOD_3 ( ) ; getView ( ) . METHOD_4 ( ) ; METHOD_6 ( ) ; },"['Delete Invocation', 'Delete Literal', 'Delete Invocation']",2591
public static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . get ( VAR_2 ) . METHOD_1 ( ) ; },public static void METHOD_1 ( ) { VAR_1 . get ( VAR_2 ) . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2592
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { }",['Delete Invocation'],2593
"public void METHOD_1 ( java.lang.String name , int VAR_1 ) { VAR_2 . setText ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_3 . METHOD_2 ( ) ) ) ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String name , int VAR_1 ) { VAR_2 . setText ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_3 . METHOD_2 ( ) ) ) ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2594
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != 0 ) { VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2595
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_6 . METHOD_5 ( VAR_5 ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2596
public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( ( ( ( toString ( ) ) + STRING_1 ) + ( VAR_1 ) ) ) ; return ( VAR_1 ) != null ? TYPE_1 . METHOD_2 ( VAR_1 ) : STRING_2 ; },public java.lang.String METHOD_1 ( ) { return ( VAR_1 ) != null ? TYPE_1 . METHOD_2 ( VAR_1 ) : STRING_2 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2597
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2599
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String label ) throws java.io.IOException { if ( ( VAR_2 ) != null ) if ( label == null ) VAR_2 . METHOD_2 ( VAR_1 ) ; else VAR_2 . METHOD_3 ( VAR_1 , label ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String label ) throws java.io.IOException { java.lang.System.out.println ( label ) ; if ( ( VAR_2 ) != null ) if ( label == null ) VAR_2 . METHOD_2 ( VAR_1 ) ; else VAR_2 . METHOD_3 ( VAR_1 , label ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",2600
public TYPE_1 METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( STRING_2 ) ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( STRING_2 ) ) ; return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2601
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2602
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . get ( VAR_3 . getId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; },"['Update Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2603
"public void METHOD_1 ( ) throws java.lang.Exception { int sum = ( ( int ) ( new TYPE_1 ( ) . METHOD_2 ( STRING_1 ) . sum ( STRING_2 ) ) ) ; VAR_1 . assertEquals ( INT_1 , sum ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { int sum = ( ( int ) ( new TYPE_1 ( ) . METHOD_2 ( STRING_1 ) . sum ( STRING_2 ) ) ) ; assertEquals ( INT_1 , sum ) ; }",['Update TypeAccess'],2604
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.err.println ( STRING_1 ) ; } },public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.err.println ( STRING_1 ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2605
"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( VAR_2 , VAR_3 ) ; intent . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2607
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_3 ( VAR_1 ) ; VAR_3 = false ; METHOD_2 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_3 ( VAR_1 ) ; VAR_3 = false ; METHOD_2 ( ) . METHOD_4 ( ) ; },"['Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",2609
"public void METHOD_1 ( double VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 , this ) ; super . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } }","public void METHOD_1 ( double VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 , this ) ; super . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; } }",['Delete Invocation'],2610
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2611
"public void METHOD_1 ( TYPE_1 < java.lang.Float > VAR_1 , java.lang.Float VAR_2 , java.lang.Float to ) { TYPE_2 . METHOD_2 ( ( to != null ) , STRING_1 ) ; height = to ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 < java.lang.Float > VAR_1 , java.lang.Float VAR_2 , java.lang.Float to ) { height = to ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",2612
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , list ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2613
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; },['Delete Invocation'],2614
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , STRING_1 , STRING_2 ) ; this . METHOD_4 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { return ; },"['Insert Return', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2615
"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( false ) ; new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , date , VAR_6 , VAR_7 ) . METHOD_2 ( true ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( false ) ; new TYPE_2 ( VAR_3 , VAR_4 , VAR_5 , date , VAR_6 , VAR_7 ) . METHOD_2 ( true ) ; }",['Delete FieldRead'],2616
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2617
public void METHOD_1 ( ) { for ( TYPE_1 listener : METHOD_2 ( ) ) { listener . METHOD_3 ( ) ; } VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 listener : METHOD_2 ( ) ) { listener . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2618
public TYPE_1 METHOD_1 ( int position ) { try { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . get ( position ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } return null ; },public TYPE_1 METHOD_1 ( int position ) { try { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . get ( ( position - 1 ) ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } return null ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",2620
public void handle ( TYPE_1 event ) { if ( ( event . METHOD_1 ( ) ) == ( VAR_1 ) ) { VAR_2 . METHOD_2 ( false ) ; } java.lang.System.out.println ( STRING_1 ) ; event . METHOD_3 ( ) ; },public void handle ( TYPE_1 event ) { if ( ( event . METHOD_1 ( ) ) == ( VAR_1 ) ) { VAR_2 . METHOD_2 ( false ) ; } event . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2621
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , true ) ; }","['Insert Literal', 'Delete TypeAccess']",2622
public void METHOD_1 ( java.lang.String VAR_1 ) { try { byte [ ] buffer = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( buffer ) ; } catch ( java.io.IOException VAR_3 ) { METHOD_3 ( STRING_1 ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { try { byte [ ] buffer = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( buffer ) ; } catch ( java.io.IOException VAR_3 ) { } },"['Delete TypeAccess', 'Delete Invocation']",2623
private java.lang.String METHOD_1 ( ) { if ( ( this . operation ) == 0 ) return METHOD_2 ( ) ; if ( ( this . operation ) == 1 ) return METHOD_2 ( ) ; return STRING_1 ; },private java.lang.String METHOD_1 ( ) { if ( ( this . operation ) == 0 ) return METHOD_2 ( ) ; return STRING_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",2624
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 ) METHOD_2 ( STRING_1 ) ; METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2625
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2626
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 a = VAR_3 . getValue ( VAR_4 class ) ; VAR_5 . METHOD_3 ( a ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 a = VAR_3 . getValue ( VAR_4 class ) ; METHOD_3 ( a ) ; }",['Update TypeAccess'],2627
public static void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . set ( false ) ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . set ( false ) ; },"['Delete TypeAccess', 'Delete Invocation']",2628
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( this . METHOD_5 ( ) ) ) ; METHOD_6 ( this . METHOD_5 ( ) ) ; METHOD_7 ( true ) ; METHOD_8 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_6 ( this . METHOD_5 ( ) ) ; METHOD_7 ( true ) ; METHOD_8 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2629
public void METHOD_1 ( ) { VAR_1 . update ( ) ; VAR_2 . start ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . update ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2631
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2632
"public void METHOD_1 ( int VAR_1 ) { VAR_2 [ VAR_1 ] . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , false ) ; VAR_2 [ VAR_1 ] = null ; }",public void METHOD_1 ( int VAR_1 ) { VAR_2 [ VAR_1 ] . METHOD_2 ( ) ; VAR_2 [ VAR_1 ] = null ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2633
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( ( VAR_1 - 1 ) ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2634
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 . get ( null ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2635
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_4 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_5 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2636
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( intent , VAR_3 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( intent , VAR_3 ) ; }",['Delete Invocation'],2637
public int [ ] METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . length ) ) ) ; java.lang.System.out.println ( ( STRING_2 + VAR_1 ) ) ; return VAR_3 [ VAR_1 ] ; },public int [ ] METHOD_1 ( int VAR_1 ) { return VAR_3 [ VAR_1 ] ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2638
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 ) + STRING_1 ) , VAR_2 ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 ) + STRING_1 ) ) ; },['Delete TypeAccess'],2639
public static TYPE_1 add ( ) { VAR_1 . info ( STRING_1 ) ; return METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 ) ) ; },public static TYPE_1 add ( ) { return METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2640
"public void METHOD_1 ( ) { try { VAR_1 . execute ( ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; throw new TYPE_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 ) ; } }","public void METHOD_1 ( ) { try { VAR_1 . execute ( ) ; } catch ( java.lang.Exception VAR_2 ) { throw new TYPE_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 ) ; } }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2641
"public void METHOD_1 ( final java.lang.String VAR_1 , final java.io.InputStream VAR_2 ) throws TYPE_1 , TYPE_2 { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , new TYPE_3 ( STRING_1 ) ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 , final java.io.InputStream VAR_2 ) throws TYPE_1 , TYPE_2 { METHOD_1 ( VAR_1 , VAR_2 , new TYPE_3 ( STRING_1 ) ) ; }",['Delete TypeAccess'],2642
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 . results ) ; VAR_5 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( VAR_4 . results ) ; VAR_5 . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2643
"public java.util.Map < java.lang.String , java.lang.Integer > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , STRING_2 , VAR_2 , STRING_3 , VAR_3 , STRING_4 , VAR_4 ) ; }","public java.util.Map < java.lang.String , java.lang.Integer > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , STRING_2 , VAR_2 , STRING_3 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",2646
"public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; java.lang.System.err.println ( STRING_1 ) ; TYPE_2 . METHOD_4 ( null , STRING_2 , STRING_3 , VAR_3 ) ; } }",public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; java.lang.System.err.println ( STRING_1 ) ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2647
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public void METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",2649
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2650
"protected void end ( ) { TYPE_1 . METHOD_1 ( STRING_1 , true ) ; VAR_1 . METHOD_2 ( ) ; }",protected void end ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2651
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2652
public void error ( java.lang.String VAR_1 ) { ( VAR_2 ) ++ ; if ( VAR_1 != null ) { java.lang.System.err.println ( ( ( ( VAR_3 . getClass ( ) . getName ( ) ) + STRING_1 ) + VAR_1 ) ) ; } },public void error ( java.lang.String VAR_1 ) { ( VAR_2 ) ++ ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",2653
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2654
"public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( INT_1 , INT_1 , this ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( INT_1 , INT_1 , this ) ; METHOD_3 ( ) ; }",['Delete Invocation'],2655
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2656
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete Literal', 'Delete Invocation']",2657
"public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { VAR_2 = view . METHOD_2 ( ) ; if ( ( view . METHOD_3 ( ) ) < INT_1 ) VAR_3 . setEnabled ( true ) ; else VAR_3 . setEnabled ( false ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { VAR_2 = view . METHOD_2 ( ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",2658
public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; },public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2659
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2660
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != 0 ) { throw new TYPE_1 ( STRING_1 ) ; } this . VAR_3 = VAR_1 ; this . VAR_3 . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != 0 ) { throw new TYPE_1 ( STRING_1 ) ; } this . VAR_3 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2661
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . setText ( STRING_2 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . setText ( STRING_2 ) ; VAR_3 . setText ( STRING_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2662
"public void METHOD_1 ( ) { final boolean result = METHOD_2 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; METHOD_3 ( STRING_4 , result ) ; METHOD_4 ( result ) ; }","public void METHOD_1 ( ) { final boolean result = METHOD_2 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; METHOD_3 ( STRING_4 , result ) ; assertTrue ( result ) ; }",['Update Invocation'],2663
private TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ) ; return VAR_3 . METHOD_5 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; },private TYPE_1 METHOD_1 ( ) { return VAR_3 . METHOD_5 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2664
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2665
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { this . VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2666
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , null , this ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete ThisAccess', 'Delete Invocation']",2667
"private void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ( STRING_1 + ( this . getName ( ) ) ) , VAR_2 ) ; this . VAR_1 . METHOD_2 ( true ) ; }","private void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ( STRING_1 + ( this . getName ( ) ) ) , VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",2670
public void METHOD_1 ( ) { VAR_1 = false ; if ( VAR_2 ) ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2671
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; TYPE_1 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2672
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( false ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( false ) ; },['Delete Invocation'],2673
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 . i ( getClass ( ) . getName ( ) , STRING_1 ) ; METHOD_2 ( ) ; return VAR_4 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 . i ( getClass ( ) . getName ( ) , STRING_1 ) ; return VAR_4 ; }",['Delete Invocation'],2674
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { VAR_3 . add ( new TYPE_1 ( i ) ) ; } },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { VAR_3 . add ( new TYPE_1 ( i ) ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2675
protected void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; VAR_5 . METHOD_6 ( VAR_4 ) ; },protected void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; VAR_5 . METHOD_6 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2676
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; }","['Delete VariableRead', 'Delete Invocation']",2677
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2678
"public void METHOD_1 ( TYPE_1 p ) { METHOD_2 ( p ) ; for ( TYPE_2 VAR_1 : METHOD_3 ( ) ) { if ( VAR_1 != null ) p . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 , STRING_1 ) ) ; } }","public void METHOD_1 ( TYPE_1 p ) { for ( TYPE_2 VAR_1 : METHOD_3 ( ) ) { if ( VAR_1 != null ) p . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 , STRING_1 ) ) ; } }","['Delete VariableRead', 'Delete Invocation']",2679
public void METHOD_1 ( ) { VAR_1 . position ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; VAR_5 = false ; },public void METHOD_1 ( ) { VAR_1 . position ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = false ; },['Delete Invocation'],2680
"public void METHOD_1 ( TYPE_1 className ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; METHOD_3 ( null ) ; }","public void METHOD_1 ( TYPE_1 className ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; }","['Delete Literal', 'Delete Invocation']",2681
"public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( this . VAR_2 ) ; this . VAR_3 = new TYPE_2 ( this . VAR_1 , this . VAR_4 , this . VAR_5 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( this . VAR_2 ) ; this . VAR_3 = new TYPE_2 ( this . VAR_1 , this . VAR_4 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2683
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_2 ( ) ; append ( STRING_1 ) ; append ( STRING_2 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; append ( STRING_1 ) ; append ( STRING_2 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2684
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 , ( ( VAR_2 ) + STRING_1 ) ) ; this . VAR_3 . METHOD_4 ( this . METHOD_5 ( ) ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( ) ; this . VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2685
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( true ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2686
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_1 ) . show ( ) ; }",public void METHOD_1 ( android.view.View view ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2687
"public void METHOD_1 ( TYPE_1 VAR_1 ) { try { METHOD_2 ( new TYPE_2 ( VAR_2 ) , VAR_3 , VAR_4 ) ; } catch ( TYPE_3 | TYPE_4 | java.io.IOException VAR_5 ) { VAR_6 . METHOD_3 ( STRING_1 , VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; } catch ( TYPE_3 | TYPE_4 | java.io.IOException VAR_5 ) { VAR_6 . METHOD_3 ( STRING_1 , VAR_5 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess']",2688
public TYPE_1 METHOD_1 ( ) { return element ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",2689
"public void METHOD_1 ( ) { this . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( this , STRING_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( this , STRING_1 ) ; }","['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2690
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { java.lang.String name = VAR_2 . getText ( ) . toString ( ) ; if ( ( VAR_3 ) == null ) this . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( name ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { java.lang.String name = VAR_2 . getText ( ) . toString ( ) ; VAR_3 . METHOD_4 ( name ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2691
"private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( STRING_1 , name , VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_1 . METHOD_4 ( STRING_2 , name , VAR_3 ) ; } }","private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_1 . METHOD_4 ( STRING_2 , name , VAR_3 ) ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2692
"public void METHOD_1 ( ) { VAR_1 . assertEquals ( ( STRING_1 + STRING_2 ) , VAR_2 . METHOD_2 ( STRING_3 ) . toString ( ) ) ; VAR_1 . assertEquals ( STRING_4 , VAR_2 . METHOD_2 ( STRING_5 ) . toString ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 . assertEquals ( ( STRING_1 + STRING_2 ) , VAR_2 . METHOD_2 ( STRING_3 ) . toString ( ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2693
public void METHOD_1 ( final android.view.View VAR_1 ) { final int position = METHOD_2 ( ) ; final TYPE_1 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( final android.view.View VAR_1 ) { final int position = METHOD_2 ( ) ; final TYPE_1 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Invocation']",2694
"public java.lang.String toString ( ) { return ( ( ( ( METHOD_1 ( ) ) + STRING_1 ) + ( VAR_1 . toString ( VAR_2 . METHOD_2 ( ) ) ) ) + ""\n"" ) + ( VAR_1 . toString ( VAR_3 . METHOD_2 ( ) ) ) ; }",public java.lang.String toString ( ) { return ( ( METHOD_1 ( ) ) + STRING_1 ) + ( VAR_1 . toString ( VAR_2 . METHOD_2 ( ) ) ) ; },"['Move BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator']",2695
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; file = new java.io.File ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { file = new java.io.File ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",2696
"private TYPE_1 METHOD_1 ( int status ) { try { return TYPE_2 . METHOD_2 ( status ) . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { TYPE_3 . METHOD_4 ( STRING_1 , status , VAR_1 ) ; return null ; } }",private TYPE_1 METHOD_1 ( int status ) { try { return TYPE_2 . METHOD_2 ( status ) . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { return null ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2697
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { METHOD_4 ( ) ; } METHOD_5 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { METHOD_4 ( ) ; } },['Delete Invocation'],2698
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( STRING_1 , ( ( byte ) ( 1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( STRING_1 , ( ( byte ) ( 1 ) ) ) ; METHOD_4 ( ) ; }",['Delete Invocation'],2699
public void METHOD_1 ( ) { METHOD_2 ( true ) ; METHOD_3 ( 0 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_3 = null ; VAR_1 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_3 = null ; VAR_1 . METHOD_4 ( VAR_2 ) ; },"['Move Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2700
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; },"['Delete TypeAccess', 'Delete Invocation']",2701
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( 0 , null , null , false ) ) ; VAR_2 . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",2702
"public void METHOD_1 ( java.lang.Throwable t ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }",public void METHOD_1 ( java.lang.Throwable t ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2703
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; },['Delete Invocation'],2704
private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( true ) ; TYPE_3 . METHOD_3 ( 1 ) ; METHOD_4 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { TYPE_3 . METHOD_3 ( 1 ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2705
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) != ( VAR_1 ) ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ; } },private void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2706
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; java.lang.System.out.println ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2707
"public void start ( ) { TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 ) ; }",public void start ( ) { VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2708
"private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , INT_1 , INT_2 ) ; METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , VAR_2 ) , INT_3 , INT_4 ) ; }","private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , INT_1 , INT_2 ) ; METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) ) , INT_3 , INT_4 ) ; }",['Delete FieldRead'],2709
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; VAR_3 . setEnabled ( false ) ; } },private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_3 . setEnabled ( false ) ; } },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2711
public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2712
public static synchronized void METHOD_1 ( TYPE_1 listener ) { VAR_1 . remove ( listener ) ; VAR_1 . add ( listener ) ; if ( VAR_2 ) { listener . METHOD_2 ( ) ; } else { listener . METHOD_3 ( ) ; } },public static synchronized void METHOD_1 ( TYPE_1 listener ) { VAR_1 . remove ( listener ) ; VAR_1 . add ( listener ) ; },"['Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2713
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2714
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2715
"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_4 ( VAR_1 ) ; }",['Delete Invocation'],2716
"public static TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_1 . METHOD_1 ( VAR_1 class ) . METHOD_2 ( TYPE_2 . METHOD_1 ( ) , TYPE_3 . METHOD_1 ( ) ) ) ) ; }",public static TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_1 . METHOD_1 ( VAR_1 class ) . METHOD_2 ( TYPE_2 . METHOD_1 ( ) ) ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",2717
public void delete ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ; VAR_3 . remove ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) . commit ( ) ; },public void delete ( TYPE_1 VAR_1 ) { VAR_3 . remove ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2718
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertEquals ( VAR_2 . METHOD_2 ( ) , VAR_3 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2719
private java.lang.String METHOD_1 ( ) { try { java.io.InputStream VAR_1 = VAR_2 class . METHOD_2 ( STRING_1 ) ; return VAR_3 . toString ( VAR_1 ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_1 ( VAR_4 ) ; } },private java.lang.String METHOD_1 ( ) { try { java.io.InputStream VAR_1 = getClass ( ) . METHOD_2 ( STRING_1 ) ; return VAR_3 . toString ( VAR_1 ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_1 ( VAR_4 ) ; } },"['Insert Invocation', 'Delete TypeAccess']",2720
"public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { return STRING_1 ; } return java.lang.String.format ( STRING_2 , METHOD_2 ( ) , name , METHOD_3 ( ) ) ; }","public java.lang.String METHOD_1 ( ) { return java.lang.String.format ( STRING_2 , METHOD_2 ( ) , name , METHOD_3 ( ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2721
public void start ( ) throws TYPE_1 { if ( VAR_1 ) { return ; } VAR_2 . start ( ) ; if ( ( this . VAR_3 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( this . VAR_3 ) ) . start ( ) ; } },public void start ( ) throws TYPE_1 { VAR_2 . start ( ) ; if ( ( this . VAR_3 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( this . VAR_3 ) ) . start ( ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2722
private boolean METHOD_1 ( final int VAR_1 ) throws java.lang.Exception { if ( ( this . VAR_2 . METHOD_2 ( ) ) == VAR_1 ) return false ; return java.lang.String . METHOD_3 ( this . VAR_2 . METHOD_4 ( VAR_1 ) ) . equals ( VAR_3 ) ; },private boolean METHOD_1 ( final int VAR_1 ) throws java.lang.Exception { return java.lang.String . METHOD_3 ( this . VAR_2 . METHOD_4 ( VAR_1 ) ) . equals ( VAR_3 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2723
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . update ( METHOD_2 ( ) , METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . update ( METHOD_2 ( ) , true ) ; }","['Insert Literal', 'Delete Invocation']",2724
public void METHOD_1 ( int num ) { this . num = num ; VAR_1 . setText ( ( STRING_1 + num ) ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( int num ) { this . num = num ; VAR_1 . setText ( ( STRING_1 + num ) ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2725
public boolean METHOD_1 ( ) { return ( type ) instanceof TYPE_1 ; },public boolean METHOD_1 ( ) { return false ; },"['Insert Literal', 'Delete FieldRead', 'Delete TypeAccess', 'Delete BinaryOperator']",2726
"public void METHOD_1 ( java.lang.StringBuilder buf , java.util.Date date , TYPE_1 VAR_1 , TYPE_2 response , long time ) { VAR_2 . append ( TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) . METHOD_3 ( ) . METHOD_4 ( attribute ) ) ) ; }","public void METHOD_1 ( java.lang.StringBuilder buf , java.util.Date date , TYPE_1 VAR_1 , TYPE_2 response , long time ) { VAR_2 . append ( METHOD_2 ( VAR_3 . getContext ( ) . METHOD_3 ( ) . METHOD_4 ( attribute ) ) ) ; }",['Update TypeAccess'],2727
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , b ) ; execute ( VAR_2 , b ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { execute ( VAR_2 , b ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2728
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = null ; VAR_3 = - 1 ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = null ; VAR_3 = - 1 ; VAR_4 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2729
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2731
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; TYPE_2 . METHOD_3 ( this , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2732
"public void METHOD_1 ( TYPE_1 path , final java.lang.String name ) throws java.io.IOException { TYPE_2 . METHOD_2 ( ) . METHOD_1 ( path , name ) ; }","public void METHOD_1 ( TYPE_1 path , final java.lang.String name ) throws java.io.IOException { METHOD_2 ( ) . METHOD_1 ( path , name ) ; }",['Update TypeAccess'],2733
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation']",2734
"public void METHOD_1 ( float y ) { VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , y ) ; }","public void METHOD_1 ( float y ) { VAR_1 . METHOD_2 ( 0 , y ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2735
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . i ( STRING_1 , ( STRING_2 + ( VAR_4 . getId ( ) ) ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2737
public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_4 ( ) ) ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; this . METHOD_7 ( ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; this . METHOD_7 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2738
"public void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) . METHOD_3 ( this ) ; this . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) { this . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2739
"public void METHOD_1 ( ) { VAR_1 . assertEquals ( VAR_2 . state , VAR_3 ) ; VAR_4 . assertNotNull ( VAR_5 ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_2 . state , VAR_3 ) ; assertNotNull ( VAR_5 ) ; }","['Update TypeAccess', 'Update TypeAccess']",2740
public void METHOD_1 ( java.lang.String result ) { VAR_1 = result ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String result ) { VAR_1 = result ; METHOD_2 ( ) ; },['Delete Invocation'],2741
"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2742
public void METHOD_1 ( ) { try { this . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_1 ) { } finally { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { this . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_1 ) { } },['Delete Invocation'],2743
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) && ( VAR_2 ) ) && ( VAR_3 ) ) time . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) time . METHOD_2 ( ) ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",2744
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; VAR_1 . METHOD_3 ( STRING_2 , this . VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2745
"public void METHOD_1 ( java.lang.String path , java.lang.Object value ) { VAR_1 . set ( path , value ) ; this . METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String path , java.lang.Object value ) { VAR_1 . set ( path , value ) ; }","['Delete ThisAccess', 'Delete Invocation']",2746
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2747
public void METHOD_1 ( ) { VAR_1 . assertThat ( VAR_2 . getView ( ) ) . METHOD_2 ( ) ; VAR_1 . assertThat ( VAR_3 . METHOD_3 ( ) ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . assertThat ( VAR_2 . getView ( ) ) . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2748
"public void METHOD_1 ( final java.lang.String format , final java.lang.Object ... args ) { super . METHOD_1 ( ( STRING_1 + format ) , TYPE_1 . METHOD_2 ( this . listener , args ) ) ; }","public void METHOD_1 ( final java.lang.String format , final java.lang.Object ... args ) { super . METHOD_1 ( ( STRING_1 + format ) , this . listener , TYPE_1 . METHOD_2 ( this . listener , args ) ) ; }","['Insert FieldRead', 'Insert ThisAccess']",2750
"public void METHOD_1 ( ) { VAR_1 . t ( STRING_1 , STRING_2 ) ; VAR_1 . t ( STRING_3 , STRING_4 ) ; VAR_1 . t ( STRING_5 , STRING_6 ) ; }","public void METHOD_1 ( ) { VAR_1 . t ( STRING_1 , STRING_2 ) ; VAR_1 . t ( STRING_3 , STRING_4 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2751
"private void METHOD_1 ( int position ) { METHOD_1 ( position , true , true ) ; }","private void METHOD_1 ( int position ) { METHOD_1 ( position , true ) ; }",['Delete Literal'],2752
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }",['Delete FieldRead'],2753
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) . setEnabled ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) . setEnabled ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2754
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; },['Delete Invocation'],2755
"public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_1 , VAR_2 ) ; return METHOD_5 ( VAR_2 ) ; }","public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_1 , VAR_2 ) ; return VAR_2 ; }","['Move VariableRead', 'Delete Invocation']",2756
"protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , int VAR_2 , java.lang.String message ) { VAR_3 . error ( STRING_1 , VAR_2 , message ) ; return TYPE_4 . METHOD_2 ( TYPE_5 . METHOD_3 ( VAR_4 . METHOD_4 ( message ) ) ) ; }","protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , int VAR_2 , java.lang.String message ) { return TYPE_4 . METHOD_2 ( TYPE_5 . METHOD_3 ( VAR_4 . METHOD_4 ( message ) ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2757
public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + ( METHOD_3 ( name ) ) ) + STRING_2 ) ) ; },public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + name ) + STRING_2 ) ) ; },"['Move VariableRead', 'Delete Invocation']",2758
"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List response ) { TYPE_2 . METHOD_2 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( getId ( ) ) ) ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List response ) { METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2759
public java.lang.String getName ( ) { return METHOD_1 ( ) ? VAR_1 : STRING_1 ; },public java.lang.String getName ( ) { return METHOD_1 ( ) ? name : STRING_1 ; },['Update FieldRead'],2760
public void METHOD_1 ( int height ) { if ( ! ( VAR_1 ) ) super . METHOD_1 ( height ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int height ) { if ( ! ( VAR_1 ) ) super . METHOD_1 ( height ) ; METHOD_2 ( ) ; },['Delete Invocation'],2761
public void METHOD_1 ( ) { if ( VAR_1 ) java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ( ) - > METHOD_3 ( VAR_2 . getName ( ) ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > METHOD_3 ( VAR_2 . getName ( ) ) ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2762
"public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_1 , VAR_6 , TYPE_3 . METHOD_2 ( VAR_1 ) ) . build ( ) ; }","public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_3 , VAR_3 , VAR_4 , VAR_5 , VAR_1 , VAR_6 ) . build ( ) ; }","['Update TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2763
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; VAR_3 = false ; getContext ( ) . METHOD_5 ( VAR_4 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; VAR_3 = false ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2764
"private void METHOD_1 ( ) throws java.io.IOException , TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = METHOD_2 ( ) ; java.lang.Thread . METHOD_3 ( INT_1 ) ; TYPE_3 response = METHOD_4 ( VAR_1 ) ; METHOD_5 ( response ) ; }","private void METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = METHOD_2 ( ) ; TYPE_3 response = METHOD_4 ( VAR_1 ) ; METHOD_5 ( response ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2765
"public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; this . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; this . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_4 ( ) ; }",['Delete Invocation'],2766
"public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) , VAR_4 ) ; VAR_2 = new java.util.HashMap < > ( ) ; TYPE_1 . METHOD_4 ( STRING_1 , STRING_2 , VAR_5 ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) , VAR_4 ) ; VAR_2 = new java.util.HashMap < > ( ) ; return STRING_3 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2767
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; this . VAR_1 . METHOD_3 ( 0 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 . METHOD_3 ( 0 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",2768
protected void METHOD_1 ( ) throws java.lang.Exception { node = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; METHOD_2 ( INT_1 ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { node = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",2769
protected void METHOD_1 ( java.lang.Void ... values ) { VAR_1 . setText ( TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ; super . METHOD_1 ( values ) ; },protected void METHOD_1 ( java.lang.Void ... values ) { super . METHOD_1 ( values ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2771
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } VAR_4 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2772
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; this . VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2773
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; if ( METHOD_5 ( ) ) { this . METHOD_6 ( METHOD_7 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; if ( METHOD_5 ( ) ) { this . METHOD_6 ( ) ; } },['Delete Invocation'],2774
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2775
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( 0 , 0 ) , true ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( 0 , 0 ) , true ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }",['Delete Invocation'],2776
"private void METHOD_1 ( final java.util.ArrayList < TYPE_1 > list ) { final android.content.Intent intent = new android.content.Intent ( VAR_1 ) ; intent . METHOD_2 ( VAR_2 , list ) ; intent . METHOD_2 ( VAR_3 , VAR_4 . METHOD_3 ( ) ) ; METHOD_4 ( intent ) ; }","private void METHOD_1 ( final java.util.ArrayList < TYPE_1 > list ) { final android.content.Intent intent = new android.content.Intent ( VAR_1 ) ; intent . METHOD_2 ( VAR_2 , list ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2777
public void METHOD_1 ( ) { init ( ) ; VAR_1 . assertNotNull ( field ) ; },public void METHOD_1 ( ) { VAR_1 . assertNotNull ( field ) ; },['Delete Invocation'],2778
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( 0 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( 0 ) ; },"['Delete Literal', 'Delete Invocation']",2779
protected void METHOD_1 ( java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",2780
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( VAR_2 ) { VAR_1 . METHOD_3 ( ) ; } VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2781
public void start ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; VAR_5 = true ; if ( VAR_6 ) VAR_7 . METHOD_1 ( ) ; else VAR_7 . METHOD_2 ( ) ; },public void start ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; VAR_5 = true ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2782
public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; METHOD_4 ( new TYPE_1 ( this . VAR_1 . METHOD_5 ( ) ) ) ; },public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; METHOD_4 ( new TYPE_1 ( this . VAR_1 . METHOD_5 ( ) ) ) ; },['Delete Invocation'],2783
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; METHOD_5 ( VAR_2 ) ; VAR_3 = false ; VAR_4 = true ; METHOD_6 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_5 ( VAR_2 ) ; VAR_3 = false ; VAR_4 = true ; METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2784
private void METHOD_1 ( ) { VAR_1 = this ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_1 = this ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },['Delete Invocation'],2785
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( this , TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 . getString ( VAR_4 ) ) ) ; VAR_1 . METHOD_4 ( ) ; }",public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2786
private void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2787
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 f = new TYPE_3 ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( f ) ; f . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 f = new TYPE_3 ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( f ) ; f . METHOD_2 ( VAR_3 ) ; },['Delete Invocation'],2788
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . info ( ( ( STRING_1 + ( getName ( ) ) ) + STRING_2 ) ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) . info ( ( ( STRING_1 + ( getName ( ) ) ) + STRING_2 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2789
"public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; final boolean VAR_1 = VAR_2 . METHOD_3 ( INT_2 ) ; TYPE_1 . METHOD_4 ( VAR_1 ) ; VAR_3 . assertEquals ( VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; }","public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; final boolean VAR_1 = VAR_2 . METHOD_3 ( INT_2 ) ; TYPE_1 . METHOD_4 ( VAR_1 ) ; VAR_3 . assertEquals ( 0 , VAR_2 . METHOD_6 ( ) ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2790
"public TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) throws java.io.IOException { VAR_2 = path ; VAR_3 = TYPE_3 . METHOD_2 ( VAR_4 , path ) ; return new TYPE_4 ( METHOD_3 ( VAR_3 , VAR_1 ) , this ) ; }","public TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) throws java.io.IOException { VAR_2 = path ; VAR_3 = TYPE_3 . METHOD_2 ( VAR_4 , path ) ; return new TYPE_4 ( METHOD_3 ( path , VAR_1 ) , this ) ; }","['Insert VariableRead', 'Delete TypeAccess']",2791
public void METHOD_1 ( TYPE_1 VAR_1 ) { remove ( VAR_2 ) ; remove ( VAR_3 ) ; remove ( VAR_4 ) ; add ( VAR_5 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { remove ( VAR_2 ) ; remove ( VAR_4 ) ; remove ( VAR_5 ) ; add ( VAR_3 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Move Invocation', 'Update Invocation', 'Update Invocation']",2792
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( VAR_3 . toString ( ) ) ; VAR_4 . METHOD_2 ( - INT_1 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_4 . METHOD_2 ( - INT_1 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2793
"protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( STRING_1 , ( VAR_1 + STRING_2 ) ) ; METHOD_3 ( ) ; VAR_2 . setText ( null ) ; }","protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( STRING_1 , ( VAR_1 + STRING_2 ) ) ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2794
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_1 ) ; TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 += VAR_5 . x ; VAR_6 += VAR_5 . y ; return true ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 += VAR_5 . x ; VAR_6 += VAR_5 . y ; return true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2795
"private static TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) { if ( VAR_1 == null ) { return null ; } try { return VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . String class ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } }","private static TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) { if ( VAR_1 == null ) { return null ; } try { return VAR_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } }","['Insert VariableRead', 'Delete FieldRead']",2796
"public void METHOD_1 ( java.lang.Throwable t ) { TYPE_1 . METHOD_2 ( this , ( STRING_1 + ( t . METHOD_3 ( ) ) ) , VAR_1 ) . show ( ) ; t . METHOD_4 ( ) ; }",public void METHOD_1 ( java.lang.Throwable t ) { t . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2797
public TYPE_1 METHOD_1 ( TYPE_2 c ) { TYPE_3 VAR_1 = new TYPE_3 ( VAR_2 ) ; VAR_3 = c ; VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( TYPE_2 c ) { TYPE_3 VAR_1 = new TYPE_3 ( VAR_2 ) ; VAR_3 = c ; return VAR_1 ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2798
public void METHOD_1 ( int error ) { if ( error == INT_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . start ( ) ; } VAR_3 . setText ( ( STRING_1 + error ) ) ; },public void METHOD_1 ( int error ) { VAR_3 . setText ( ( STRING_1 + error ) ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2799
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2800
public void METHOD_1 ( TYPE_1 error ) { VAR_1 . METHOD_1 ( error ) ; },public void METHOD_1 ( TYPE_1 error ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2801
public TYPE_1 METHOD_1 ( java.lang.String id ) { if ( VAR_1 . isEmpty ( id ) ) return null ; return METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( id ) ) . METHOD_4 ( VAR_2 class ) . VAR_3 ; },public TYPE_1 METHOD_1 ( java.lang.String id ) { return METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( id ) ) . METHOD_4 ( VAR_2 class ) . VAR_3 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2803
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete Invocation', 'Delete Invocation']",2804
public void METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; new TYPE_1 ( this ) ; new TYPE_2 ( this ) ; },public void METHOD_1 ( ) { new TYPE_1 ( this ) ; new TYPE_2 ( this ) ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2806
private void METHOD_1 ( java.lang.String fileName ) { VAR_1 . METHOD_2 ( fileName ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"private void METHOD_1 ( java.lang.String fileName ) { VAR_1 . METHOD_1 ( VAR_2 , fileName ) ; }","['Update Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2807
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2809
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_2 ( this ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2810
public java.lang.Long getId ( ) { return this . id ; },public java.lang.Long getId ( ) { return id ; },['Delete ThisAccess'],2811
public void setText ( java.lang.String VAR_1 ) { super . setText ( VAR_1 ) ; METHOD_1 ( ) ; if ( isEmpty ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } else { METHOD_5 ( VAR_2 ) ; } },public void setText ( java.lang.String VAR_1 ) { super . setText ( VAR_1 ) ; METHOD_1 ( ) ; if ( isEmpty ) { METHOD_3 ( ) ; } else { METHOD_5 ( VAR_2 ) ; } },"['Delete Invocation', 'Delete Invocation']",2812
"public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) return ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }","public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) return ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2813
void METHOD_1 ( ) { while ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; },void METHOD_1 ( ) { while ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } VAR_3 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2814
public void execute ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; if ( VAR_3 ) { VAR_2 . METHOD_1 ( VAR_4 ) ; } },public void execute ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; if ( VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } },['Delete TypeAccess'],2817
public java.util.Set METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ; },public java.util.Set METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; },['Delete Invocation'],2818
"public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , name , VAR_2 , java.lang.Integer . METHOD_3 ( number ) , java.lang.Integer . METHOD_3 ( VAR_3 ) , VAR_4 ) ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , name , VAR_2 , java.lang.Integer . METHOD_3 ( number ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess']",2819
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; TYPE_2 . METHOD_4 ( this ) ; TYPE_3 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; TYPE_2 . METHOD_4 ( this ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2820
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; },"['Delete TypeAccess', 'Delete Invocation']",2821
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2822
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . start ( ) ; METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_4 ) ; }",protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2823
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2824
public void METHOD_1 ( ) { java.lang.System.out.println ( INT_1 ) ; VAR_1 = - 1 ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2825
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; }",['Delete ThisAccess'],2827
public int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return 0 ; return ( VAR_1 . METHOD_1 ( ) ) + ( VAR_2 . size ( ) ) ; },public int METHOD_1 ( ) { return ( VAR_1 . METHOD_1 ( ) ) + ( VAR_2 . size ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2828
"public static java.lang.Class [ ] METHOD_1 ( ) { return new java.lang.Class [ ] { VAR_1 class , VAR_2 class , TYPE_1 [ ] . class , VAR_3 class , VAR_4 class } ; }","public static java.lang.Class [ ] METHOD_1 ( ) { return new java.lang.Class [ ] { VAR_1 class , VAR_3 class , VAR_4 class } ; }","['Delete FieldRead', 'Delete FieldRead']",2829
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2830
public void METHOD_1 ( java.lang.String fileName ) { METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( ( ( ( VAR_2 ) + STRING_1 ) + fileName ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } METHOD_5 ( ) ; },public void METHOD_1 ( java.lang.String fileName ) { METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( fileName ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } METHOD_5 ( ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",2831
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( false ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2832
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2833
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2834
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . size ( ) ) ; VAR_2 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2835
public static int METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) ; } return VAR_1 . size ( ) ; },public static int METHOD_1 ( ) { return VAR_1 . size ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2836
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; }",['Delete Invocation'],2837
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = false ; VAR_3 . end ( ) ; }",public void METHOD_1 ( ) { VAR_2 = false ; VAR_3 . end ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2838
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , INT_1 , 0 , 0 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_5 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2839
"public static void remove ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( ) . METHOD_2 ( TYPE_2 . METHOD_1 ( ) . METHOD_3 ( ) , VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; }",public static void remove ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( ) . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2840
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . add ( VAR_1 ) ; METHOD_3 ( VAR_4 , null , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; METHOD_3 ( VAR_4 , null , VAR_1 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2841
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( this , VAR_1 ) ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( this ) ; } else java.lang.System.out.println ( STRING_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( this , VAR_1 ) ) { VAR_2 . METHOD_3 ( this ) ; } }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",2842
"public void METHOD_1 ( final android.view.View view ) { final android.content.Intent intent ; intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; intent . METHOD_3 ( STRING_1 , STRING_2 ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( final android.view.View view ) { final android.content.Intent intent ; intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2843
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_7 ( VAR_1 ) ; },['Delete Invocation'],2844
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } if ( ( VAR_2 ) != null ) { METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_4 ( VAR_3 ) ; } super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2845
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 . size ( ) ) == 0 ) { VAR_4 . METHOD_3 ( VAR_5 ) ; } else { VAR_4 . METHOD_3 ( VAR_6 ) ; } },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2846
public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( ) ; t . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( t ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( t ) ; },public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( t ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; this . METHOD_4 ( t ) ; },"['Insert ThisAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2847
public void METHOD_1 ( ) { while ( true ) { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_1 ) { } java.lang.System.out.println ( ( ( TYPE_2 . METHOD_3 ( ) ) + STRING_1 ) ) ; } },public void METHOD_1 ( ) { while ( true ) { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_1 ) { } } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2849
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2850
"public void METHOD_1 ( ) { try { new TYPE_1 ( 0 , INT_1 ) ; fail ( STRING_1 ) ; } catch ( java.lang.Exception VAR_1 ) { assertEquals ( STRING_2 , VAR_1 . METHOD_2 ( ) ) ; } }","public void METHOD_1 ( ) { try { new TYPE_1 ( 0 , INT_1 ) ; } catch ( java.lang.Exception VAR_1 ) { assertEquals ( STRING_2 , VAR_1 . METHOD_2 ( ) ) ; } }","['Delete TypeAccess', 'Delete Invocation']",2851
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_6 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_4 . METHOD_6 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2852
public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return this . METHOD_2 ( ) ; } return java.lang.Math.abs ( ( ( VAR_2 ) - ( VAR_3 ) ) ) ; },public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return 0 ; } return java.lang.Math.abs ( ( ( VAR_2 ) - ( VAR_3 ) ) ) ; },"['Insert Literal', 'Delete ThisAccess', 'Delete Invocation']",2853
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2854
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2855
"private TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return TYPE_2 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 , step , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) ; }","private TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return TYPE_2 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 , step , VAR_3 , VAR_4 , VAR_5 ) ) ; }",['Delete FieldRead'],2856
protected void METHOD_1 ( android.view.View view ) { view . METHOD_2 ( ) . METHOD_3 ( 0.0F ) . start ( ) ; },protected void METHOD_1 ( android.view.View view ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",2857
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 ; METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 ; return true ; }",['Delete Invocation'],2858
public void METHOD_1 ( ) { assertTrue ( TYPE_1 . METHOD_2 ( STRING_1 ) ) ; METHOD_3 ( TYPE_1 . METHOD_2 ( STRING_2 ) ) ; METHOD_3 ( TYPE_1 . METHOD_2 ( STRING_3 ) ) ; METHOD_3 ( TYPE_1 . METHOD_2 ( STRING_4 ) ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2859
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = true ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2860
public double METHOD_1 ( double VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( ( VAR_1 - ( VAR_2 ) ) ) ; },public double METHOD_1 ( double VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2861
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },['Delete Invocation'],2862
"private void init ( TYPE_1 VAR_1 , TYPE_2 response , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = response ; METHOD_1 ( VAR_5 ) ; METHOD_2 ( VAR_2 ) ; }","private void init ( TYPE_1 VAR_1 , TYPE_2 response , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = response ; METHOD_2 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2863
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } else { super . METHOD_1 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } else { super . METHOD_1 ( ) ; } },['Delete Invocation'],2864
public java.lang.String toString ( ) { return ( ( ( ( ( ( STRING_1 + ( id ) ) + STRING_2 ) + ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 ) ) + STRING_2 ) + STRING_3 ; },public java.lang.String toString ( ) { return STRING_1 ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",2865
public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( VAR_2 . METHOD_2 ( 0 ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( VAR_2 . METHOD_2 ( 0 ) ) ; },['Delete Invocation'],2866
public java.lang.Object METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 ) ; } VAR_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; return this ; },public java.lang.Object METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 ) ; } VAR_2 . METHOD_4 ( ) ; return this ; },['Delete Invocation'],2867
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2868
private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2869
public void METHOD_1 ( java.lang.Void VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( java.lang.Void VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2870
public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { ( VAR_1 ) ++ ; } if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { ( VAR_1 ) ++ ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2872
public void METHOD_1 ( int VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; this . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; METHOD_2 ( ) ; },['Delete ThisAccess'],2873
"private void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( STRING_1 , INT_1 ) ; } catch ( TYPE_2 VAR_2 ) { java.lang.System.out.println ( STRING_2 ) ; } VAR_3 = VAR_1 . METHOD_2 ( STRING_3 ) ; java.lang.System.out.println ( STRING_4 ) ; }","private void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( STRING_1 , INT_1 ) ; } catch ( TYPE_2 VAR_2 ) { java.lang.System.out.println ( STRING_2 ) ; } VAR_3 = VAR_1 . METHOD_2 ( STRING_3 ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2874
"public java.lang.String toString ( ) { java.lang.String VAR_1 = VAR_2 . getString ( ( STRING_1 + ( VAR_3 . name ( ) . toLowerCase ( VAR_4 ) ) ) ) ; return VAR_5 . replace ( STRING_2 , TYPE_1 . METHOD_1 ( VAR_6 , VAR_7 ) ) ; }","public java.lang.String toString ( ) { java.lang.String VAR_1 = VAR_2 . getString ( ( STRING_1 + ( VAR_3 . name ( ) . toLowerCase ( ) ) ) ) ; return VAR_5 . replace ( STRING_2 , TYPE_1 . METHOD_1 ( VAR_6 , VAR_7 ) ) ; }",['Delete TypeAccess'],2875
"public void METHOD_1 ( long id , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . put ( id , VAR_1 ) ; }","public void METHOD_1 ( long id , TYPE_1 VAR_1 ) { VAR_2 . put ( id , VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2876
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . size ( ) ) > 0 ) VAR_2 . METHOD_2 ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . size ( ) ) > 0 ) VAR_2 . METHOD_2 ( 0 ) ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",2877
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( false ) ; if ( VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { METHOD_3 ( false ) ; if ( VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2878
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; },['Delete Invocation'],2879
private boolean METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { return true ; } } return params . METHOD_3 ( ) ; },private boolean METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { return true ; } } return false ; },"['Insert Literal', 'Delete FieldRead', 'Delete Invocation']",2880
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = false ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2881
"public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { TYPE_2 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_3 ) . show ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { TYPE_2 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_3 ) . show ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2882
"public void METHOD_1 ( final TYPE_1 VAR_1 , final android.view.View view , final int position ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; TYPE_3 . METHOD_3 ( this , ( STRING_2 + position ) , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final android.view.View view , final int position ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2883
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( true ) ; } VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( true ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2884
private void METHOD_1 ( java.lang.String fileName ) { java.util.List < java.lang.String > text = VAR_1 . get ( fileName ) ; VAR_2 . METHOD_2 ( ) ; for ( java.lang.String VAR_3 : text ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } VAR_2 . METHOD_4 ( ) ; },private void METHOD_1 ( java.lang.String fileName ) { java.util.List < java.lang.String > text = VAR_1 . get ( fileName ) ; VAR_2 . METHOD_2 ( ) ; for ( java.lang.String VAR_3 : text ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2886
"public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( 1 , INT_1 , 1 ) , 1 ) ) ; }",public static void main ( java.lang.String [ ] args ) throws java.io.IOException { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",2887
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_1 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2889
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 message ) throws java.lang.Exception { TYPE_2 event = new TYPE_2 ( new java.lang.String ( message . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( event ) ; java.lang.System.out.println ( ( STRING_1 + event ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 message ) throws java.lang.Exception { TYPE_2 event = new TYPE_2 ( new java.lang.String ( message . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( event ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2890
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2891
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_2 ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2892
public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : VAR_4 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( ) ; break ; case VAR_6 : METHOD_4 ( ) ; break ; } },public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : METHOD_3 ( ) ; break ; case VAR_6 : METHOD_4 ( ) ; break ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2893
protected java.util.Set < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },protected java.util.Set < TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",2894
public boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) return false ; return ( ( VAR_1 ) != null ) && ( ( this . VAR_2 ) != null ) ; },public boolean METHOD_1 ( ) { return ( ( VAR_1 ) != null ) && ( ( this . VAR_2 ) != null ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2895
"public synchronized void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_1 . METHOD_4 ( ) ; } TYPE_3 . METHOD_5 ( STRING_1 , STRING_2 ) ; }",public synchronized void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_1 ) { } },"['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2897
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( VAR_2 ) ; ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) . METHOD_4 ( ) . METHOD_5 ( this . VAR_3 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2898
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) . toString ( ) ; java.lang.System.out.println ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) . toString ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2899
public void METHOD_1 ( ) { METHOD_2 ( ) ; update ( query ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { update ( query ) ; },"['Delete Invocation', 'Delete Invocation']",2900
public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . size ( ) ) ) ) ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",2901
"protected java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 , VAR_16 , VAR_17 } ; }","protected java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 , VAR_16 , VAR_17 } ; }",['Delete FieldRead'],2902
public final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 class ) ) ; VAR_3 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 class ) ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2903
"public void METHOD_1 ( java.lang.String message ) { TYPE_1 . METHOD_2 ( message , this ) ; }",public void METHOD_1 ( java.lang.String message ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",2905
"public void METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : { VAR_3 = 0 ; VAR_4 = true ; break ; } case VAR_5 : { VAR_6 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( ) ; break ; } } }",public void METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : { VAR_3 = 0 ; VAR_4 = true ; break ; } case VAR_5 : { METHOD_2 ( ) ; break ; } } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2906
"public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 > 0 ) { METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; } VAR_2 . METHOD_4 ( false ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 > 0 ) { METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; } }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2907
public static void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } },public static void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } },"['Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Insert TypeAccess']",2908
public static void METHOD_1 ( ) { VAR_1 . update ( STRING_1 ) ; VAR_1 . update ( STRING_2 ) ; },public static void METHOD_1 ( ) { VAR_1 . update ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2909
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( VAR_2 . get ( position ) ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( view ) ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2911
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . set ( TYPE_1 . METHOD_3 ( ) ) ; },void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2912
public java.util.List < TYPE_1 > METHOD_1 ( int id ) { return VAR_1 . METHOD_2 ( id ) ; },public java.util.List < TYPE_1 > METHOD_1 ( int id ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2913
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },['Delete Invocation'],2914
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . remove ( this ) ; super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { super . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2915
"public void METHOD_1 ( ) { size ( INT_1 , INT_1 ) ; this . VAR_1 = this . METHOD_2 ( ) ; }",public void METHOD_1 ( ) { this . VAR_1 = this . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2917
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getContext ( ) , VAR_2 ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( 1.0F ) . METHOD_5 ( INT_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getContext ( ) , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2918
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 . METHOD_3 ( ) ) - 1 ) ) ; VAR_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_5 , false ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_5 , false ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",2919
"public final void METHOD_1 ( ) { if ( VAR_1 ) return ; if ( ( VAR_2 ) == null ) { TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; return ; } METHOD_3 ( ) ; VAR_1 = true ; }","public final void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; return ; } METHOD_3 ( ) ; VAR_1 = true ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2920
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; }",protected void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2921
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_1 instanceof TYPE_2 ) || ( VAR_1 instanceof TYPE_3 ) ) || ( ( VAR_1 instanceof TYPE_4 ) && ( this . METHOD_1 ( ( ( TYPE_4 ) ( VAR_1 ) ) . VAR_2 ) ) ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) || ( VAR_1 instanceof TYPE_3 ) ; },"['Move BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete BinaryOperator']",2922
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2923
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; }",public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2924
"public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) ; }","public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) . get ( VAR_2 ) ) ) ; }","['Update Invocation', 'Insert TypeReference']",2925
"public TYPE_1 METHOD_1 ( TYPE_2 x , TYPE_2 [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_3 ( x , VAR_1 , VAR_3 , this , VAR_4 ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 x , TYPE_2 [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_3 ( x , VAR_1 , VAR_3 , this ) ; return VAR_2 ; }",['Delete FieldRead'],2926
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_4 , VAR_5 , VAR_6 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2927
"public void set ( java.lang.String text ) { VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( text , 0 , ( INT_1 / INT_2 ) , VAR_4 ) ; buffer . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( buffer ) ; }","public void set ( java.lang.String text ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( text , 0 , ( INT_1 / INT_2 ) , VAR_4 ) ; VAR_5 . METHOD_4 ( buffer ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2929
public void update ( ) { VAR_1 . update ( ) ; VAR_2 . METHOD_1 ( ) ; },public void update ( ) { VAR_1 . update ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2930
public void METHOD_1 ( ) { try { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_1 ) { java.lang.System.out.println ( STRING_2 ) ; } },public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_1 ) { java.lang.System.out.println ( STRING_2 ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2931
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . info ( VAR_2 , VAR_3 ) ; VAR_1 . info ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , METHOD_4 ( INT_1 ) ) . info ( java.lang.String.format ( VAR_2 , VAR_3 ) ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . info ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 ) . info ( java.lang.String.format ( VAR_2 , VAR_3 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2932
"protected java.util.ArrayList < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( this . VAR_2 , ( VAR_1 + STRING_1 ) ) ; }",protected java.util.ArrayList < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( ( VAR_1 + STRING_1 ) ) ; },"['Delete ThisAccess', 'Delete FieldRead']",2933
"public boolean METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_6 . METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( ) ; return true ; }",['Delete TypeAccess'],2934
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2935
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } VAR_4 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { VAR_2 . METHOD_3 ( VAR_3 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2936
"public void METHOD_1 ( TYPE_1 out ) { out . METHOD_2 ( ) ; out . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ) ; out . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 out ) { out . METHOD_2 ( ) ; out . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2938
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 ) ; VAR_5 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; view . METHOD_5 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 ) ; VAR_5 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_2 ) ; view . METHOD_5 ( ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2939
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; this . METHOD_5 ( ) ; VAR_3 . setText ( STRING_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2940
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { VAR_2 . put ( VAR_1 , type ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { }","['Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2941
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( TYPE_1 error ) { VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2942
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this . getIntent ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( this . getIntent ( ) ) ; METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( this . getIntent ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete ThisAccess', 'Delete Invocation']",2944
"public static void METHOD_1 ( java.io.File VAR_1 , java.io.File VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; }","public static void METHOD_1 ( java.io.File VAR_1 , java.io.File VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) ) ; }",['Delete TypeAccess'],2945
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this ) ; } super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_2 ) ; }",protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this ) ; } super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2946
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; this . VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; this . VAR_2 . METHOD_5 ( 0 ) ; VAR_3 . add ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; this . VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2947
"public static void main ( java.lang.String [ ] args ) { TYPE_1 f ; f = new TYPE_1 ( STRING_1 , false ) ; java.lang.System.out.println ( f ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 f ; f = new TYPE_1 ( STRING_1 , true ) ; }","['Update Literal', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",2948
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } VAR_2 = ( VAR_2 ) + ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 = ( VAR_2 ) + ( VAR_3 ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2949
"public void METHOD_1 ( java.lang.String error ) { TYPE_1 . METHOD_2 ( getActivity ( ) , error , VAR_1 ) . show ( ) ; }",public void METHOD_1 ( java.lang.String error ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2950
public java.lang.String METHOD_1 ( ) { if ( this . METHOD_2 ( ) ) { return this . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ; } else { return STRING_1 ; } },public java.lang.String METHOD_1 ( ) { return this . METHOD_4 ( ) ; },"['Insert Return', 'Update Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",2951
"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 class , VAR_3 . toUpperCase ( VAR_4 ) ) ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 class , VAR_3 . toUpperCase ( ) ) ; }",['Delete TypeAccess'],2952
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; }",['Delete Invocation'],2954
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2955
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) > 0 ) { METHOD_2 ( ) . METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },public void METHOD_1 ( ) { },"['Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",2956
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_4 . setText ( VAR_5 . toString ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( VAR_5 . toString ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2957
private void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( result ) ; METHOD_3 ( ) ; setState ( VAR_2 ) ; METHOD_4 ( ) ; },private void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( result ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2958
"public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( VAR_3 , VAR_2 ) ; METHOD_5 ( VAR_3 , VAR_2 ) ; }","public void METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( VAR_3 , VAR_2 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2959
"private static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = true ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",private static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2960
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; intent . METHOD_3 ( VAR_2 ) ; METHOD_4 ( intent ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; intent . METHOD_3 ( VAR_2 ) ; METHOD_4 ( intent ) ; METHOD_6 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2961
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( this ) ; } VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( this ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2962
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , VAR_2 ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2963
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; },['Delete Invocation'],2964
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , false ) ; VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_2 , new TYPE_2 ( ) ) ; return STRING_3 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2965
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2966
public void METHOD_1 ( TYPE_1 value ) { VAR_1 . add ( value ) ; VAR_2 . METHOD_2 ( 1 ) ; },public void METHOD_1 ( TYPE_1 value ) { VAR_1 . add ( value ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2967
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2968
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2969
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . setEnabled ( true ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2972
"void METHOD_1 ( ) { VAR_1 . position ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 ) ; value = VAR_6 ; METHOD_3 ( ) ; }","void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 ) ; value = VAR_6 ; METHOD_3 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2973
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; synchronized ( VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = height ; } }","public void METHOD_1 ( int VAR_1 , int height ) { synchronized ( VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = height ; } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2974
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2975
public final synchronized long METHOD_1 ( ) { return VAR_1 ; },public final synchronized long METHOD_1 ( ) { return 1 ; },"['Insert Literal', 'Delete FieldRead']",2976
private void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; VAR_6 . setText ( STRING_1 ) ; },private void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_6 . setText ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2977
"public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( FLOAT_1 , FLOAT_1 , FLOAT_1 , 1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( ) ; }","public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( FLOAT_1 , FLOAT_1 , FLOAT_1 , 1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2978
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 ) ; },['Delete Invocation'],2979
"public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( false ) ; METHOD_3 ( true , VAR_1 . getString ( VAR_2 ) ) ; METHOD_4 ( VAR_1 . getString ( VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( false ) ; METHOD_3 ( true , VAR_1 . getString ( VAR_2 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2980
public boolean METHOD_1 ( ) { return ( ( get ) - ( put ) ) == ( ( ( VAR_1 ) - ( VAR_2 ) ) - ( VAR_3 ) ) ; },public boolean METHOD_1 ( ) { return ( ( this . get ) - ( this . put ) ) == ( ( ( VAR_1 ) - ( VAR_2 ) ) - ( VAR_3 ) ) ; },"['Insert FieldRead', 'Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldRead', 'Delete FieldRead']",2981
"void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) { return ; } }","void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( METHOD_3 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ) { return ; } }",['Delete TypeAccess'],2982
"public TYPE_1 path ( java.lang.String path ) { this . path = path ; METHOD_1 ( this . VAR_1 , this . VAR_2 , this . path , this . VAR_3 ) ; return this ; }",public TYPE_1 path ( java.lang.String path ) { this . path = path ; return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2983
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_2 ( STRING_3 , VAR_3 . METHOD_4 ( ) ) ; METHOD_5 ( INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_2 ( STRING_3 , VAR_2 . METHOD_4 ( ) ) ; METHOD_5 ( INT_1 ) ; }",['Update TypeAccess'],2984
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( intent ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( intent ) ; },['Delete Invocation'],2986
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { }",['Delete Invocation'],2987
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) . toString ( ) ) ; return METHOD_4 ( VAR_1 ) ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_4 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2988
"public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( ) ; VAR_1 . METHOD_2 ( ""name"" , STRING_1 ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; TYPE_1 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( ) ; VAR_1 . METHOD_2 ( ""name"" , STRING_1 ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; super . METHOD_1 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",2989
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . getText ( ) . equals ( STRING_1 ) ) VAR_2 . setText ( STRING_2 ) ; if ( VAR_3 . getText ( ) . equals ( STRING_3 ) ) VAR_3 . setText ( STRING_2 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( null ) ; },"['Move Invocation', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2990
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { VAR_2 . METHOD_1 ( ) ; } } ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { VAR_2 . METHOD_1 ( ) ; } } ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2991
"public void show ( ) { VAR_1 = VAR_2 . getString ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 . get ( ( ( VAR_1 ) + STRING_3 ) , VAR_5 class ) ) ; VAR_6 = 0 ; java.lang.System.out.println ( STRING_4 ) ; }","public void show ( ) { VAR_1 = VAR_2 . getString ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 . get ( ( ( VAR_1 ) + STRING_3 ) , VAR_5 class ) ) ; VAR_6 = 0 ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2992
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",2993
"public void METHOD_1 ( android.view.View VAR_1 ) { ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( VAR_3 , METHOD_3 ( ) , VAR_1 . METHOD_4 ( VAR_4 ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( METHOD_3 ( ) , VAR_1 . METHOD_4 ( VAR_4 ) ) ; }",['Delete TypeAccess'],2994
"public void METHOD_1 ( TYPE_1 p , int VAR_1 ) { VAR_2 . put ( TYPE_2 . METHOD_2 ( p ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 p , int VAR_1 ) { VAR_2 . put ( METHOD_2 ( p ) , VAR_1 ) ; }",['Update TypeAccess'],2995
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , ( ( VAR_3 ) != null ) ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",2996
public TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 . values ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation']",2998
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = true ; TYPE_1 . METHOD_4 ( VAR_4 , ( STRING_1 + STRING_2 ) ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2999
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; METHOD_2 ( STRING_3 ) ; METHOD_2 ( STRING_4 ) ; METHOD_2 ( STRING_5 ) ; METHOD_2 ( STRING_6 ) ; METHOD_2 ( STRING_7 ) ; METHOD_2 ( STRING_8 ) ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; METHOD_2 ( STRING_3 ) ; METHOD_2 ( STRING_4 ) ; METHOD_2 ( STRING_5 ) ; METHOD_2 ( STRING_6 ) ; METHOD_2 ( STRING_7 ) ; },"['Delete TypeAccess', 'Delete Invocation']",3000
private void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = null ; VAR_1 = false ; } else { TYPE_1 . METHOD_4 ( STRING_2 ) ; } },private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = null ; VAR_1 = false ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block']",3001
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( true ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } VAR_5 . setText ( VAR_6 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3002
"public TYPE_1 METHOD_1 ( final TYPE_2 < ? > VAR_1 , final TYPE_3 VAR_2 ) { VAR_3 . add ( VAR_1 , VAR_2 , 0 , 0 ) ; return this ; }","public void METHOD_1 ( final TYPE_2 < ? > VAR_1 , final TYPE_3 VAR_2 ) { VAR_3 . add ( VAR_1 , VAR_2 , 0 , 0 ) ; }","['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",3003
"public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id , TYPE_2 VAR_2 ) { METHOD_2 ( position ) ; return false ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id , TYPE_2 VAR_2 ) { METHOD_2 ( position ) ; }","['Update TypeReference', 'Delete Literal', 'Delete Return']",3004
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = STRING_1 ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; VAR_4 = null ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) . remove ( STRING_2 ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = STRING_1 ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; VAR_4 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3005
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; getActivity ( ) . METHOD_3 ( ) ; getActivity ( ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; getActivity ( ) . METHOD_3 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3006
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.lang.System.out.println ( 0 ) ; VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Insert Invocation', 'Insert FieldRead', 'Insert Literal', 'Insert TypeAccess']",3007
public int METHOD_1 ( ) { return java.lang.Integer.parseInt ( VAR_1 . get ( STRING_1 ) ) ; },public int METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3008
private TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ; return VAR_1 . METHOD_1 ( ) ; },private TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3009
"public void METHOD_1 ( TYPE_1 TYPE_2 ) throws java.lang.Exception { args . METHOD_2 ( null ) ; args . METHOD_3 ( null ) ; METHOD_4 ( STRING_1 , TYPE_2 : : METHOD_1 ) ; }","public void METHOD_1 ( TYPE_1 TYPE_2 ) throws java.lang.Exception { METHOD_4 ( STRING_1 , TYPE_2 : : METHOD_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",3011
"private void init ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 . set ( FLOAT_1 , FLOAT_1 ) ; VAR_5 . set ( 0 , 0 , VAR_4 . x , VAR_4 . y ) ; }","private void init ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 . set ( FLOAT_1 , FLOAT_1 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']",3012
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 ) ; METHOD_4 ( VAR_3 ) ; if ( ( VAR_4 . METHOD_5 ( ) . size ( ) ) <= 0 ) { METHOD_6 ( false ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 ) ; METHOD_4 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",3013
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; TYPE_1 . METHOD_2 ( VAR_2 , null ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3014
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( android.view.View view ) { METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3015
"public static java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 params ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; return TYPE_2 . METHOD_3 ( params ) ; }","public static java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 params ) { return TYPE_2 . METHOD_3 ( params ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3016
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = INT_1 ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = INT_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3017
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3018
public void start ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void start ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_1 ( VAR_2 ) ; METHOD_3 ( ) ; },['Delete Invocation'],3019
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3020
"public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 ) ; }",public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess']",3021
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { for ( TYPE_1 VAR_2 : VAR_1 . METHOD_4 ( ) ) { if ( METHOD_5 ( VAR_2 ) ) { return VAR_2 ; } } } return null ; },public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_3 ( ) ) { for ( TYPE_1 VAR_2 : VAR_1 . METHOD_4 ( ) ) { if ( METHOD_5 ( VAR_2 ) ) { return VAR_2 ; } } } return null ; },['Delete Invocation'],3023
public void METHOD_1 ( long VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; delete ( VAR_2 ) ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; delete ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",3024
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3025
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete Invocation']",3026
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }",public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_4 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3027
"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String url = VAR_1 . key ( VAR_2 ) . METHOD_2 ( ) ; VAR_3 . assertTrue ( contains ( url , STRING_1 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String url = VAR_1 . key ( VAR_2 ) . METHOD_2 ( ) ; assertTrue ( contains ( url , STRING_1 ) ) ; }",['Update TypeAccess'],3028
public void METHOD_1 ( TYPE_1 i ) { METHOD_2 ( true ) ; METHOD_3 ( ) . METHOD_4 ( i ) ; },public void METHOD_1 ( TYPE_1 i ) { METHOD_3 ( ) . METHOD_4 ( i ) ; },"['Delete Literal', 'Delete Invocation']",3029
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },['Delete Invocation'],3030
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( context ) ; VAR_2 . METHOD_3 ( context ) ; TYPE_1 . METHOD_4 ( context , STRING_1 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_3 ( context ) ; TYPE_1 . METHOD_4 ( context , STRING_1 , VAR_3 ) . show ( ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",3031
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( - INT_1 ) ) ; this . METHOD_3 ( INT_1 ) ; VAR_2 . remove ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( - INT_1 ) ) ; this . METHOD_3 ( INT_1 ) ; METHOD_4 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3032
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; if ( VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; } if ( VAR_5 ) { VAR_1 . METHOD_2 ( VAR_6 , VAR_4 ) ; } return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; if ( VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; } return VAR_1 ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",3033
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( this . VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3034
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },['Delete Invocation'],3035
private void METHOD_1 ( java.lang.String msg ) { try { out . METHOD_2 ( ) ; out . METHOD_3 ( msg ) ; out . METHOD_3 ( VAR_1 ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },private void METHOD_1 ( java.lang.String msg ) { try { out . METHOD_3 ( msg ) ; out . METHOD_3 ( VAR_1 ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },"['Delete FieldRead', 'Delete Invocation']",3036
public int METHOD_1 ( java.lang.Long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return 0 ; },public int METHOD_1 ( java.lang.Long VAR_1 ) { return 0 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3037
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ( ( ( STRING_1 + STRING_2 ) + VAR_1 ) + STRING_3 ) ) ; METHOD_3 ( VAR_2 . getData ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_2 . getData ( ) ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",3038
