Unnamed: 0,fixed_code,buggy_code,gumtree_baseline,line_in_dataset,gpt_attempt1,baseline_nodes,gpt_nodes,node_set_match,jaccard_score,precision,recall,f1_score,tp,fp,fn
0,0,"private static void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) { }","private static native void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) ;",['Insert Wra'],1,"['Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1,1,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_3 message = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( message != null ) { TYPE_4 . METHOD_3 ( message ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_3 message = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( message != null ) { TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ) ; } }","['Insert Invocation', 'Insert TypeAccess', 'Insert VariableRead', 'Insert VariableRead', 'Delete VariableRead']",2,"['Insert TypeAccess', 'Insert Invocation', 'Insert VariableRead', 'Insert VariableRead']","['Invocation', 'TypeAccess', 'VariableRead', 'VariableRead', 'VariableRead']","['TypeAccess', 'Invocation', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,0.8,0.888888888888889,4,0,1
2,2,"static boolean equals ( java.lang.Object a , java.lang.Object b ) { if ( a == null ) return b == null ; return VAR_1 . equals ( b ) ; }","private boolean equals ( java.lang.Object a , java.lang.Object b ) { if ( a == null ) return b == null ; return VAR_1 . equals ( b ) ; }",['Update Wra'],3,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
3,3,private int METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return 0 ; } if ( TYPE_1 . METHOD_3 ( ) ) { return INT_1 ; } else { return INT_2 ; } },private int METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return 0 ; } if ( TYPE_1 . METHOD_3 ( getActivity ( ) ) ) { return INT_1 ; } else { return INT_2 ; } },['Insert Invocation'],4,['Insert Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
4,4,protected java.util.Date METHOD_1 ( ) { return VAR_1 ; },public java.util.Date METHOD_1 ( ) { return VAR_1 ; },['Update Wra'],5,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
5,5,"public TYPE_1 < java.lang.Integer > METHOD_1 ( int VAR_1 , int VAR_2 ) { return new TYPE_1 ( ( VAR_1 / VAR_2 ) , METHOD_2 ( VAR_1 , VAR_2 ) ) ; }","public TYPE_1 < java.lang.Integer > METHOD_1 ( int VAR_1 , int VAR_2 ) { return new TYPE_1 ( ( VAR_1 / VAR_2 ) , ( VAR_1 % VAR_2 ) ) ; }","['Update ConstructorCall', 'Insert BinaryOperator', 'Move VariableRead', 'Move VariableRead', 'Delete Invocation']",6,"['Delete Invocation', 'Insert BinaryOperator']","['ConstructorCall', 'BinaryOperator', 'VariableRead', 'VariableRead', 'Invocation']","['Invocation', 'BinaryOperator']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,2,0,3
6,6,"public TYPE_1 METHOD_1 ( java.lang.String event , long VAR_1 , boolean VAR_2 ) { return METHOD_2 ( event , STRING_1 , STRING_1 , VAR_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String event , long VAR_1 , boolean VAR_2 ) { return METHOD_2 ( event , STRING_1 , VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],7,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
7,7,"protected void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 ) { METHOD_2 ( VAR_1 , 1 ) ; METHOD_3 ( VAR_1 , 1 ) ; }","private void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 ) { METHOD_2 ( VAR_1 , 1 ) ; METHOD_3 ( VAR_1 , 1 ) ; }",['Update Wra'],8,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
8,8,"public TYPE_1 build ( ) { if ( ( VAR_1 ) == null ) { throw new TYPE_2 ( STRING_1 ) ; } return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 . build ( ) , VAR_4 , VAR_5 ) ; }","public TYPE_1 build ( ) { if ( ( VAR_1 ) == null ) { throw new TYPE_2 ( STRING_1 ) ; } return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 . build ( ) , VAR_4 ) ; }",['Delete FieldRead'],9,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
9,9,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; VAR_1 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; VAR_2 . start ( ) ; },"['Update Invocation', 'Insert TypeAccess', 'Delete VariableRead']",10,"['Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeAccess', 'VariableRead']","['Invocation', 'Invocation']",GPT Missed Nodes,0.3333333333333333,0.0,0.0,0.0,0,2,3
10,10,public int METHOD_1 ( ) { return this . VAR_1 = VAR_1 ; },public METHOD_1 ( int VAR_1 ) { return this . VAR_1 = VAR_1 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete TypeReference', 'Delete FieldRead']",12,"['Delete TypeReference', 'Insert Parameter']","['Parameter', 'TypeReference', 'VariableRead', 'TypeReference', 'FieldRead']","['TypeReference', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,2,0,3
11,11,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return false ; }",['Update Literal'],13,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
12,12,protected java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_5 ( ) ) ; return VAR_1 ; },private java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_5 ( ) ) ; return VAR_1 ; },['Update Wra'],15,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
13,13,"java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.List < TYPE_2 > VAR_3 , java.lang.String VAR_4 ) ;","java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.List < TYPE_2 > VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",16,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
14,14,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) . METHOD_4 ( false ) ; TYPE_1 . METHOD_5 ( VAR_1 ) ; boolean result = VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_2 . METHOD_6 ( result ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) . METHOD_4 ( false ) ; TYPE_1 . METHOD_5 ( VAR_1 ) ; boolean result = VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_6 ( result ) ; },['Update TypeAccess'],17,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
15,15,"private void METHOD_1 ( ) { new TYPE_1 ( this ) . execute ( VAR_1 . toString ( ) , VAR_2 . getText ( ) . toString ( ) , VAR_3 , ""true"" , STRING_1 ) ; }","private void METHOD_1 ( ) { new TYPE_1 ( this ) . execute ( VAR_1 . toString ( ) , VAR_2 . getText ( ) . toString ( ) , VAR_3 , ""true"" ) ; }",['Delete TypeAccess'],19,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
16,16,private int METHOD_1 ( int VAR_1 ) { return ( ( ( VAR_2 . getId ( ) ) < < INT_1 ) | ( ( ( VAR_3 ) & INT_2 ) < < INT_3 ) ) | ( VAR_1 & INT_4 ) ; },private int METHOD_1 ( int VAR_1 ) { return ( ( ( this . VAR_2 . getId ( ) ) < < INT_1 ) | ( ( ( this . VAR_3 ) & INT_2 ) < < INT_3 ) ) | ( VAR_1 & INT_4 ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess']",20,"['Insert ThisAccess', 'Insert ThisAccess']","['FieldRead', 'ThisAccess', 'ThisAccess', 'TypeAccess']","['ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.3333333333333333,1.0,0.5,0.6666666666666666,2,0,2
17,17,"public void METHOD_1 ( TYPE_1 writer ) throws java.io.IOException { if ( ( this . VAR_1 ) != null ) { writer . METHOD_2 ( VAR_2 , INT_1 , TYPE_2 . METHOD_3 ( this . VAR_1 . METHOD_4 ( ) ) ) ; } }","public void METHOD_1 ( TYPE_1 writer ) throws java.io.IOException { if ( ( this . VAR_1 ) == null ) { } else { writer . METHOD_2 ( VAR_2 , INT_1 , TYPE_2 . METHOD_3 ( this . VAR_1 . METHOD_4 ( ) ) ) ; } }","['Update BinaryOperator', 'Insert Block', 'Move Invocation']",21,"['Update BinaryOperator', 'Insert Block', 'Insert If']","['BinaryOperator', 'Block', 'Invocation']","['BinaryOperator', 'Block', 'If']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
18,18,"public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) . execute ( STRING_2 , true ) ; org.testng.Assert.assertEquals ( VAR_3 . size ( ) , 1 ) ; }","public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) . execute ( STRING_2 , true ) ; assertEquals ( VAR_3 . size ( ) , 1 ) ; }",['Delete FieldRead'],23,['Delete TypeAccess'],['FieldRead'],['TypeAccess'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
19,19,"public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( getInt ( STRING_1 ) ) < VAR_2 ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) , getInt ( STRING_1 ) ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( getInt ( STRING_1 ) ) < VAR_2 ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 ) ; } }","['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",24,"['Delete Invocation', 'Delete TypeAccess', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'TypeAccess', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
20,20,public java.lang.Object getData ( ) { return data ; },private java.lang.Object getData ( ) { return data ; },['Update Wra'],25,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
21,21,public boolean METHOD_1 ( int VAR_1 ) { int VAR_2 = ( this . VAR_3 ) - VAR_1 ; return ( VAR_2 >= ( this . VAR_4 ) ) && ( VAR_2 <= ( this . VAR_5 ) ) ; },public boolean METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 ) - VAR_1 ; return ( VAR_2 >= ( VAR_4 ) ) && ( VAR_2 <= ( VAR_5 ) ) ; },"['Insert BinaryOperator', 'Insert BinaryOperator', 'Move VariableRead', 'Insert FieldRead', 'Move VariableRead', 'Insert FieldRead', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator']",26,"['Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess']","['BinaryOperator', 'BinaryOperator', 'VariableRead', 'FieldRead', 'VariableRead', 'FieldRead', 'ThisAccess', 'ThisAccess', 'FieldRead', 'BinaryOperator', 'ThisAccess', 'FieldRead', 'BinaryOperator']","['ThisAccess', 'ThisAccess', 'ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.25,0.75,0.23076923076923078,0.3529411764705882,3,1,10
22,22,"void METHOD_1 ( java.util.List < TYPE_1 > data , int position , java.lang.String VAR_1 , java.lang.String VAR_2 , double VAR_3 ) ;","void METHOD_1 ( java.util.List < TYPE_1 > data , int position , java.lang.String VAR_1 ) ;","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",27,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
23,23,public java.lang.String METHOD_1 ( ) { return message ; },private java.lang.String METHOD_1 ( ) { return message ; },['Update Wra'],28,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
24,24,"public java.lang.String METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( ) , true ) ; }",public java.lang.String METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( ) ) ; },['Delete Literal'],29,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
25,25,"public final void METHOD_1 ( java.lang.String name , java.lang.String value ) { if ( VAR_1 . METHOD_2 ( name ) ) { VAR_1 . METHOD_1 ( name , value ) ; } else { METHOD_3 ( name , value ) ; } }","protected final void METHOD_1 ( java.lang.String name , java.lang.String value ) { if ( VAR_1 . METHOD_2 ( name ) ) { VAR_1 . METHOD_1 ( name , value ) ; } else { METHOD_3 ( name , value ) ; } }",['Update Wra'],30,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
26,26,public boolean METHOD_1 ( ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ! ( this . VAR_1 . isEmpty ( ) ) ) { return true ; } return false ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",31,['Insert ThisAccess'],"['FieldRead', 'ThisAccess', 'TypeAccess']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
27,27,"public void METHOD_1 ( ) { VAR_1 . put ( 0 , ""0"" ) ; assertThat ( VAR_1 . size ( ) , TYPE_1 . METHOD_2 ( 1 ) ) ; }","public void METHOD_1 ( ) { VAR_1 . put ( 1 , ""0"" ) ; assertThat ( VAR_1 . size ( ) , TYPE_1 . METHOD_2 ( 1 ) ) ; }",['Update Literal'],32,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
28,28,"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . setText ( ( ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) + STRING_1 ) + VAR_3 ) ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . setText ( ( ( ( ( VAR_2 + STRING_1 ) + VAR_3 ) + STRING_1 ) + VAR_1 ) ) ; }","['Move BinaryOperator', 'Move VariableRead', 'Move BinaryOperator', 'Move VariableRead']",33,"['Move VariableRead', 'Move VariableRead', 'Move VariableRead']","['BinaryOperator', 'VariableRead', 'BinaryOperator', 'VariableRead']","['VariableRead', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
29,29,"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { VAR_2 . METHOD_2 ( true ) ; return new TYPE_4 ( VAR_3 , VAR_2 , VAR_4 , VAR_5 ) . METHOD_1 ( VAR_1 ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { VAR_2 . METHOD_2 ( ) ; return new TYPE_4 ( VAR_3 , VAR_2 , VAR_4 , VAR_5 ) . METHOD_1 ( VAR_1 ) ; }",['Delete Literal'],34,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
30,30,"int METHOD_1 ( TYPE_1 obj , short [ ] data , int VAR_1 , double VAR_2 , int VAR_3 ) ;","int METHOD_1 ( TYPE_1 obj , short [ ] data , long VAR_1 , double VAR_2 , int VAR_3 ) ;",['Update TypeReference'],35,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
31,31,public TYPE_1 iterator ( ) { return new TYPE_2 ( ) ; },public TYPE_1 iterator ( ) { return null ; },"['Insert Literal', 'Delete ConstructorCall']",36,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
32,32,private static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) . toString ( ) . toLowerCase ( VAR_1 ) ; },private static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) . toString ( ) . toLowerCase ( ) ; },['Delete TypeAccess'],37,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
33,33,"private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( STRING_1 , new TYPE_2 ( this . VAR_1 ) ) ; }","private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( STRING_1 , new TYPE_2 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldRead']",38,"['Delete ThisAccess', 'Delete FieldRead']","['ThisAccess', 'FieldRead']","['ThisAccess', 'FieldRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
34,34,"public void METHOD_1 ( int i , java.lang.String VAR_1 , boolean b ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( new TYPE_1 ( VAR_1 ) , true ) ; METHOD_4 ( ( STRING_1 + VAR_1 ) , VAR_4 ) ; }","public void METHOD_1 ( int i , java.lang.String VAR_1 , boolean b ) { VAR_2 . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",39,"['Delete Invocation', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation']","['TypeAccess', 'VariableRead', 'ConstructorCall', 'Literal', 'Invocation', 'FieldRead', 'VariableRead', 'BinaryOperator', 'TypeAccess', 'Invocation']","['Invocation', 'ConstructorCall', 'VariableRead', 'Literal', 'Invocation', 'BinaryOperator', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.7142857142857143,0.875,0.7,0.7777777777777777,7,1,3
35,35,public int METHOD_1 ( ) { return VAR_1 ; },public int METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; },"['Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Insert TypeAccess']",40,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.75,0.8571428571428571,3,0,1
36,36,private static void add ( int value ) { if ( ( VAR_1 . length ) <= ( VAR_2 . size ) ) { TYPE_1 . METHOD_1 ( ) ; } VAR_3 [ ( ( VAR_2 . size ) ++ ) ] = value ; },private static void add ( int value ) { if ( ( VAR_1 . length ) >= ( VAR_2 . size ) ) { TYPE_1 . METHOD_1 ( ) ; } VAR_3 [ ( ( VAR_2 . size ) ++ ) ] = value ; },['Update BinaryOperator'],41,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
37,37,"public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , INT_1 ) ; }","public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],43,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
38,38,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ""true"" ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; VAR_4 . assertTrue ( VAR_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ""true"" , true ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; VAR_4 . assertTrue ( VAR_2 ) ; }",['Insert Literal'],44,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
39,39,"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . remove ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; path [ VAR_4 ] = VAR_1 ; VAR_5 [ VAR_4 ] = VAR_2 ; ( VAR_4 ) ++ ; }","public static void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . remove ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; path [ VAR_4 ] = VAR_1 ; VAR_5 [ VAR_4 ] = VAR_2 ; ( VAR_4 ) ++ ; }",['Insert Wra'],46,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
40,40,public double METHOD_1 ( ) { return ( ( VAR_1 ) / ( VAR_2 . getValue ( ) ) ) * INT_1 ; },private double METHOD_1 ( ) { return ( ( VAR_1 ) / ( VAR_2 . getValue ( ) ) ) * INT_1 ; },['Update Wra'],47,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
41,41,"protected void METHOD_1 ( TYPE_1 VAR_1 , int length ) throws TYPE_2 { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 , length ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , int length ) throws TYPE_2 { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_4 ( VAR_1 , length ) ; }","['Delete VariableRead', 'Delete Invocation']",48,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
42,42,"public boolean METHOD_1 ( int index , long VAR_1 ) { return ( VAR_2 . get ( index ) . getValue ( ) ) == VAR_1 ; }","public boolean METHOD_1 ( int index , int VAR_1 ) { return ( VAR_2 . get ( index ) . intValue ( ) ) == VAR_1 ; }","['Update TypeReference', 'Update Invocation']",49,"['Update Parameter', 'Update Invocation']","['TypeReference', 'Invocation']","['Parameter', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
43,43,"private < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , java.lang.Class < ? extends TYPE_2 > VAR_2 , int VAR_3 , TYPE_3 VAR_4 ) { return VAR_5 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","private < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , java.lang.Class < ? extends TYPE_2 > VAR_2 ) { return VAR_5 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",50,"['Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
44,44,public void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },['Insert ThisAccess'],52,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
45,45,private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) && ( VAR_1 . METHOD_4 ( ) . METHOD_3 ( VAR_2 ) ) ; },public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) && ( VAR_1 . METHOD_4 ( ) . METHOD_3 ( VAR_2 ) ) ; },"['Update Wra', 'Insert Wra']",53,"['Delete Wra', 'Insert Wra', 'Insert Wra']","['Wra', 'Wra']","['Wra', 'Wra', 'Wra']",Exact Match,1.0,0.3333333333333333,0.5,0.4,1,2,1
46,46,private long METHOD_1 ( long VAR_1 ) { return ( ( long ) ( VAR_1 > > > INT_1 ) ) ; },private long METHOD_1 ( long VAR_1 ) { return ( ( int ) ( VAR_1 > > INT_1 ) ) ; },"['Update BinaryOperator', 'Update TypeReference']",54,"['Update TypeReference', 'Delete BinaryOperator']","['BinaryOperator', 'TypeReference']","['TypeReference', 'BinaryOperator']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
47,47,"private void METHOD_1 ( java.lang.String src , java.lang.String VAR_1 ) throws java.io.IOException { }","public void METHOD_1 ( java.lang.String src , java.lang.String VAR_1 ) throws java.io.IOException { }",['Update Wra'],55,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
48,48,private boolean METHOD_1 ( int VAR_1 ) { return ( VAR_1 <= INT_1 ) && ( VAR_1 >= 0 ) ; },private boolean METHOD_1 ( int VAR_1 ) { return ( VAR_1 <= INT_1 ) && ( VAR_1 >= 1 ) ; },['Update Literal'],57,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
49,49,public TYPE_1 METHOD_1 ( ) { TYPE_1 state ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : state = VAR_3 ; break ; case VAR_4 : state = VAR_5 ; break ; default : state = VAR_6 ; } return state ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 state ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : state = VAR_3 ; break ; case VAR_4 : state = VAR_3 ; break ; default : state = VAR_6 ; } return state ; },['Update FieldRead'],58,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
50,50,"public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String error , TYPE_1 VAR_2 ) { if ( VAR_3 . equals ( true ) ) { return STRING_1 ; } else { VAR_2 . METHOD_2 ( STRING_1 , new TYPE_2 ( ) ) ; return STRING_1 ; } }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 . equals ( true ) ) { return STRING_1 ; } else { VAR_2 . METHOD_2 ( STRING_1 , new TYPE_2 ( ) ) ; return STRING_1 ; } }","['Delete TypeReference', 'Delete Parameter']",60,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
51,51,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( VAR_2 = new TYPE_1 ( this ) ) ) ; },"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( VAR_2 = new TYPE_1 ( context , name ) ) ) ; }","['Update ConstructorCall', 'Insert FieldRead', 'Insert FieldRead', 'Delete ThisAccess']",61,"['Insert VariableRead', 'Insert VariableRead']","['ConstructorCall', 'FieldRead', 'FieldRead', 'ThisAccess']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,4
52,52,public void METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },['Update BinaryOperator'],63,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
53,53,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , new TYPE_3 ( VAR_1 ) , VAR_4 , VAR_5 , VAR_6 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , new TYPE_3 ( VAR_1 ) , VAR_4 , VAR_6 ) ; }",['Delete FieldRead'],64,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
54,54,"public java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > list ) { java.lang.String token = STRING_1 ; int position = METHOD_2 ( list , token , INT_1 ) ; java.lang.String VAR_1 = VAR_2 . get ( position ) ; return METHOD_3 ( VAR_1 ) ; }","public java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > list ) { java.lang.String token = STRING_1 ; int position = METHOD_2 ( list , token ) ; java.lang.String VAR_1 = VAR_2 . get ( position ) ; return METHOD_3 ( VAR_1 ) ; }",['Delete TypeAccess'],65,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
55,55,protected void METHOD_1 ( final TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 ) ; },protected void METHOD_1 ( final TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_1 ( VAR_1 ) ; },['Update Invocation'],68,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
56,56,"private void METHOD_1 ( int i ) { VAR_1 . METHOD_2 ( 0 , i ) ; }",private void METHOD_1 ( int i ) { VAR_1 . METHOD_2 ( i ) ; },['Delete Literal'],69,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
57,57,public TYPE_1 METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; return this ; },public TYPE_1 METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . METHOD_2 ( ) . METHOD_1 ( ) ; return this ; },"['Update Invocation', 'Move Invocation', 'Delete Invocation']",70,['Delete Invocation'],"['Invocation', 'Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.3333333333333333,0.5,1,0,2
58,58,public int METHOD_1 ( int VAR_1 ) { int result = METHOD_2 ( ) ; return result ; },public int METHOD_1 ( ) { int result = METHOD_2 ( ) ; return result ; },"['Delete TypeReference', 'Delete Parameter']",72,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
59,59,protected synchronized void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 / FLOAT_1 ) ) ; },public synchronized void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 / FLOAT_1 ) ) ; },['Update Wra'],73,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
60,60,public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return false ; } return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 class ) ) . METHOD_4 ( ) ; },public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 class ) ) . METHOD_4 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",74,"['Delete If', 'Delete Return', 'Delete Literal']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Return', 'Literal']",GPT Missed Nodes,0.5,1.0,0.42857142857142855,0.6,3,0,4
61,61,"public abstract TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) throws TYPE_3 ;","public abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) throws TYPE_3 ;","['Delete TypeReference', 'Delete Parameter']",75,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
62,62,"void METHOD_1 ( TYPE_1 method , TYPE_2 VAR_1 , java.util.Map VAR_2 , java.util.Map output , java.lang.Object VAR_3 , java.lang.Throwable t ) ;","void METHOD_1 ( TYPE_1 method , TYPE_2 VAR_1 , java.util.Map VAR_2 , java.util.Map output , java.lang.Object VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",76,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
63,63,public static java.lang.String METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return null ; } final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_3 . isEmpty ( VAR_2 ) ? null : VAR_2 ; },public static java.lang.String METHOD_1 ( final TYPE_1 VAR_1 ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_3 . isEmpty ( VAR_2 ) ? null : VAR_2 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",77,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.14285714285714285,0.25,1,0,6
64,64,public final void METHOD_1 ( ) { -- ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_1 ) <= 0 ) { VAR_2 . METHOD_3 ( ) ; } },public final void METHOD_1 ( ) { -- ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_3 ( ) ; } },['Update BinaryOperator'],78,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
65,65,"public static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String data ) throws java.lang.Exception { return new TYPE_1 ( 1 , VAR_1 , data ) ; }","public static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String data ) throws java.lang.Exception { return new TYPE_1 ( 1 , VAR_1 , 0 , data ) ; }","['Update ConstructorCall', 'Insert Literal']",80,['Insert Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
66,66,public TYPE_1 METHOD_1 ( int id ) { return VAR_1 . get ( id ) ; },public TYPE_1 METHOD_1 ( long id ) { return VAR_1 . get ( id ) ; },['Update TypeReference'],81,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
67,67,public void METHOD_1 ( ) { float VAR_1 = this . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( int ) ( VAR_1 ) ) ) ; },private void METHOD_1 ( ) { float VAR_1 = this . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( int ) ( VAR_1 ) ) ) ; },['Update Wra'],82,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
68,68,"public TYPE_1 METHOD_1 ( java.lang.String response ) throws java.io.IOException { return new TYPE_1 ( true , response ) ; }",public TYPE_1 METHOD_1 ( java.lang.String response ) throws java.io.IOException { return null ; },"['Insert Literal', 'Delete Literal', 'Delete VariableRead', 'Delete ConstructorCall']",83,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'Literal', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.5,0.6666666666666666,2,0,2
69,69,"public void METHOD_1 ( TYPE_1 c , java.lang.Throwable VAR_1 ) { if ( ( this . file ) != null ) { this . file . METHOD_2 ( ) ; } this . VAR_2 . METHOD_1 ( c , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 c , java.lang.Throwable VAR_1 ) { if ( ( this . file ) == null ) { this . file . METHOD_2 ( ) ; } this . VAR_2 . METHOD_1 ( c , VAR_1 ) ; }",['Update BinaryOperator'],84,"['Insert BinaryOperator', 'Insert Literal', 'Delete FieldRead']",['BinaryOperator'],"['BinaryOperator', 'Literal', 'FieldRead']",GPT Hallucinated Nodes,0.3333333333333333,0.0,0.0,0.0,0,3,1
70,70,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { VAR_4 . put ( VAR_1 , new TYPE_2 ( VAR_2 , VAR_3 ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_3 ) { VAR_4 . put ( VAR_1 , VAR_3 ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete ConstructorCall']",85,"['Delete Parameter', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'TypeReference', 'Parameter', 'VariableRead', 'ConstructorCall']","['Parameter', 'TypeReference', 'VariableRead', 'ConstructorCall', 'TypeReference']",Exact Match,1.0,0.8,0.8,0.8000000000000002,4,1,1
71,71,"public double diff ( ) { return VAR_1 . diff ( VAR_2 , VAR_3 ) ; }","public int diff ( ) { return VAR_1 . diff ( VAR_2 , VAR_3 ) ; }",['Update TypeReference'],86,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
72,72,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",87,"['Delete Invocation', 'Delete ThisAccess', 'Delete VariableRead']","['VariableRead', 'ThisAccess', 'Invocation']","['Invocation', 'ThisAccess', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
73,73,public TYPE_1 METHOD_1 ( ) { if ( INT_1 <= ( VAR_1 ) ) { VAR_1 = 1 ; } return new TYPE_1 ( ( ( VAR_1 ) ++ ) ) ; },public TYPE_1 METHOD_1 ( ) { if ( INT_1 <= ( VAR_1 ) ) { VAR_1 = 0 ; } return new TYPE_1 ( ( ( VAR_1 ) ++ ) ) ; },['Update Literal'],88,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
74,74,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , VAR_2 , false ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , VAR_2 , false ) ; }",['Update Literal'],89,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
75,75,"public java.lang.String format ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return VAR_1 + STRING_1 ; }","public java.lang.String format ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return VAR_1 ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",90,"['Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
76,76,public void select ( boolean VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 . METHOD_1 ( VAR_2 ) ; if ( VAR_1 ) { } else { } },public void select ( ) { VAR_2 = STRING_1 ; VAR_3 . METHOD_1 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Block', 'Delete Block', 'Delete If']",91,"['Delete Parameter', 'Delete If']","['TypeReference', 'Parameter', 'VariableRead', 'Block', 'Block', 'If']","['Parameter', 'If']",GPT Missed Nodes,0.4,1.0,0.3333333333333333,0.5,2,0,4
77,77,"public static void main ( java.lang.String [ ] args ) { java.util.LinkedList < TYPE_1 > VAR_1 = new java.util.LinkedList < > ( ) ; VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_3 main = new TYPE_3 ( VAR_1 , true ) ; }","public static void main ( java.lang.String [ ] args ) { java.util.LinkedList < TYPE_1 > VAR_1 = new java.util.LinkedList < > ( ) ; TYPE_3 main = new TYPE_3 ( VAR_1 , true ) ; }","['Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation']",92,"['Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall']","['TypeAccess', 'ConstructorCall', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
78,78,public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) + VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",93,"['Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']","['VariableRead', 'TypeAccess', 'Invocation', 'BinaryOperator']","['TypeAccess', 'Invocation', 'BinaryOperator']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
79,79,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return new TYPE_1 ( STRING_2 , STRING_3 , STRING_4 ) ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return new TYPE_1 ( ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",94,"['Delete Literal', 'Delete Literal', 'Delete Literal']","['FieldRead', 'FieldRead', 'FieldRead']","['Literal', 'Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,3,3
80,80,public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) & ( METHOD_3 ( ) ) ) & ( METHOD_4 ( ) ) ; },public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_2 ( ) ) ; },"['Update BinaryOperator', 'Update BinaryOperator', 'Update Invocation']",95,"['Update BinaryOperator', 'Update BinaryOperator', 'Update Invocation']","['BinaryOperator', 'BinaryOperator', 'Invocation']","['BinaryOperator', 'BinaryOperator', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
81,81,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_2 ) ; },"['Update TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",96,"['Update Literal', 'Delete Invocation']","['TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['Literal', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.25,0.3333333333333333,1,1,3
82,82,"public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , 0 ) ; return new TYPE_1 ( VAR_3 , VAR_2 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }","public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , 0 ) ; return new TYPE_1 ( VAR_3 , VAR_2 , VAR_4 , VAR_5 ) ; }","['Delete FieldRead', 'Delete FieldRead']",97,"['Delete VariableRead', 'Delete VariableRead']","['FieldRead', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
83,83,public void METHOD_1 ( java.util.List < java.lang.String > list ) { this . METHOD_2 ( new TYPE_1 ( this . context ) ) ; ( ( TYPE_1 ) ( this . METHOD_3 ( ) ) ) . METHOD_4 ( list ) ; },"public void METHOD_1 ( java.util.List < java.lang.String > list ) { this . METHOD_2 ( new TYPE_1 ( list , this . context ) ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",98,"['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation']","['VariableRead', 'TypeReference', 'ThisAccess', 'Invocation', 'Invocation']","['VariableRead', 'ThisAccess', 'FieldRead', 'ConstructorCall', 'Invocation', 'TypeReference', 'Invocation', 'TypeReference', 'Invocation']",GPT Hallucinated Nodes,0.6666666666666666,0.4444444444444444,0.8,0.5714285714285714,4,5,1
84,84,"public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String name , java.lang.Object value ) throws TYPE_1 , TYPE_2 { if ( value == null ) return ; if ( VAR_2 . equals ( ""id"" ) ) return ; super . METHOD_1 ( VAR_1 , name , value ) ; }","public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String name , java.lang.Object value ) throws TYPE_1 , TYPE_2 { if ( value == null ) return ; super . METHOD_1 ( VAR_1 , name , value ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",99,"['Delete If', 'Delete FieldRead', 'Delete Literal']","['TypeAccess', 'Literal', 'Invocation', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Literal']",Partial Match,0.2857142857142857,0.6666666666666666,0.3333333333333333,0.4444444444444444,2,1,4
85,85,protected int size ( char c ) { return INT_1 ; },protected int size ( char c ) { return 1 ; },"['Insert Literal', 'Delete FieldRead']",100,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
86,86,"void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) ;",void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",101,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
87,87,"private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { java.lang.String error = ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + VAR_2 ; VAR_4 . add ( error ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { java.lang.String error = ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + VAR_2 ; this . VAR_4 . add ( error ) ; }","['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",102,['Insert ThisAccess'],"['FieldRead', 'ThisAccess', 'TypeAccess']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
88,88,public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 ) ) ; },private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 ) ) ; },['Update Wra'],103,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
89,89,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( METHOD_2 ( VAR_1 , null ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( METHOD_2 ( VAR_1 ) ) ; },['Delete Literal'],104,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
90,90,"void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) ;","void METHOD_1 ( int VAR_1 , int VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",105,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
91,91,"public static int sum ( int a , int b ) { return a + b ; }","public static int sum ( int a , int b ) { return a * b ; }",['Update BinaryOperator'],106,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
92,92,public java.io.File METHOD_1 ( ) { return VAR_1 ; },private java.io.File METHOD_1 ( ) { return VAR_1 ; },['Update Wra'],107,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
93,93,public java.lang.String toString ( ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( INT_1 ) ; METHOD_1 ( result ) ; METHOD_2 ( result ) ; METHOD_3 ( result ) ; return VAR_1 . toString ( ) ; },public java.lang.String toString ( ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( ) ; METHOD_1 ( result ) ; METHOD_2 ( result ) ; METHOD_3 ( result ) ; return VAR_1 . toString ( ) ; },"['Update ConstructorCall', 'Delete FieldRead']",108,['Delete Literal'],"['ConstructorCall', 'FieldRead']",['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
94,94,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_3 VAR_4 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_3 VAR_4 ) { return null ; }","['Insert Literal', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall']",109,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.3333333333333333,0.5,2,0,4
95,95,"private boolean METHOD_1 ( float VAR_1 , android.view.View VAR_2 ) { return ( VAR_1 >= ( VAR_2 . METHOD_2 ( ) ) ) && ( VAR_1 <= ( VAR_2 . METHOD_3 ( ) ) ) ; }","private boolean METHOD_1 ( float VAR_1 , android.view.View VAR_2 ) { return ( VAR_1 > ( VAR_2 . METHOD_2 ( ) ) ) && ( VAR_1 < ( VAR_2 . METHOD_3 ( ) ) ) ; }","['Update BinaryOperator', 'Update BinaryOperator']",110,"['Update BinaryOperator', 'Update BinaryOperator']","['BinaryOperator', 'BinaryOperator']","['BinaryOperator', 'BinaryOperator']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
96,96,"public void METHOD_1 ( java.lang.String event , java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.Object > VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 ;","public void METHOD_1 ( java.lang.String event , java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",111,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
97,97,"private static java.lang.Object METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.Object VAR_2 = TYPE_1 . METHOD_2 ( int . class , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) ; return VAR_2 ; }","private static java.lang.Object METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.Object VAR_2 = TYPE_1 . METHOD_2 ( int . class , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; return VAR_2 ; }",['Update Invocation'],112,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
98,98,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context ) { final java.lang.String VAR_2 = context . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_1 , VAR_2 ) ; context . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context ) { final java.lang.String VAR_2 = context . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_1 , VAR_2 ) ; context . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",113,['Delete Invocation'],"['VariableRead', 'VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
99,99,"public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String VAR_2 , java.lang.Long VAR_3 ) { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String VAR_2 ) { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",114,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
100,100,public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = ( ( android.widget.Button ) ( view ) ) . getText ( ) . toString ( ) ; TYPE_1 . METHOD_2 ( ) . update ( VAR_1 ) ; },public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = ( ( android.widget.Button ) ( view ) ) . getText ( ) . toString ( ) ; TYPE_1 . METHOD_2 ( this ) . update ( VAR_1 ) ; },['Insert ThisAccess'],115,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
101,101,"private void METHOD_1 ( TYPE_1 context , int VAR_1 , int VAR_2 , int VAR_3 , java.lang.String name ) { TYPE_2 field = new TYPE_2 ( context , name ) ; field . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 context , int VAR_1 , int VAR_2 , java.lang.String name ) { TYPE_2 field = new TYPE_2 ( context , name ) ; field . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",116,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
102,102,"public static void init ( ) { TYPE_1 . METHOD_1 ( VAR_1 class , STRING_1 , INT_1 , INT_2 , true ) ; TYPE_1 . METHOD_1 ( VAR_2 class , STRING_2 , INT_1 , INT_2 , true ) ; }","public static void init ( ) { TYPE_1 . METHOD_1 ( VAR_1 class , STRING_1 , INT_1 , INT_2 , false ) ; TYPE_1 . METHOD_1 ( VAR_2 class , STRING_2 , INT_1 , INT_2 , false ) ; }","['Update Literal', 'Update Literal']",117,"['Update Literal', 'Update Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
103,103,public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 ) ; new TYPE_1 ( VAR_2 ) ; new TYPE_1 ( VAR_3 ) ; new TYPE_1 ( VAR_4 ) ; new TYPE_1 ( VAR_5 ) ; new TYPE_1 ( VAR_6 ) ; VAR_7 . assertTrue ( true ) ; },public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 ) ; new TYPE_1 ( VAR_2 ) ; new TYPE_1 ( VAR_3 ) ; new TYPE_1 ( VAR_4 ) ; new TYPE_1 ( VAR_5 ) ; new TYPE_1 ( VAR_6 ) ; assertTrue ( true ) ; },['Update TypeAccess'],118,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
104,104,protected java.lang.Object METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < > ( ) ; return this ; },private java.lang.Object METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < > ( ) ; return this ; },['Update Wra'],119,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
105,105,private void METHOD_1 ( char [ ] [ ] field ) { for ( char [ ] x : field ) { for ( char y : x ) { java.lang.System.out.print ( ( y + STRING_1 ) ) ; } java.lang.System.out.println ( ) ; } },private void METHOD_1 ( char [ ] [ ] f ) { for ( char [ ] x : f ) { for ( char y : x ) { java.lang.System.out.print ( ( y + STRING_1 ) ) ; } java.lang.System.out.println ( ) ; } },"['Update Parameter', 'Update VariableRead']",120,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
106,106,public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 result = null ; try { result = VAR_1 . query ( ) ; METHOD_2 ( result ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; } return result ; },public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 result = null ; try { result = VAR_1 . execute ( ) ; METHOD_2 ( result ) ; } catch ( java.lang.Exception VAR_2 ) { METHOD_4 ( ) ; } return result ; },"['Update Invocation', 'Delete VariableRead', 'Delete Invocation']",121,"['Update Invocation', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'VariableRead', 'Invocation']","['Invocation', 'VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
107,107,"public static boolean METHOD_1 ( int x , int y , TYPE_1 [ ] [ ] VAR_1 ) { return ( VAR_1 [ x ] [ y ] ) == null ; }","public static boolean METHOD_1 ( int x , int y , TYPE_1 [ ] [ ] VAR_1 ) { return ( VAR_1 [ ( x - 1 ) ] [ ( y - 1 ) ] ) == null ; }","['Insert BinaryOperator', 'Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Move VariableRead', 'Insert Literal']",122,"['Insert BinaryOperator', 'Insert Literal', 'Insert BinaryOperator', 'Insert Literal']","['BinaryOperator', 'BinaryOperator', 'VariableRead', 'Literal', 'VariableRead', 'Literal']","['BinaryOperator', 'Literal', 'BinaryOperator', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
108,108,public java.lang.Long METHOD_1 ( ) { return VAR_1 ; },public long METHOD_1 ( ) { return VAR_1 ; },['Update TypeReference'],124,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
109,109,"public void METHOD_1 ( long VAR_1 ) throws java.io.IOException { if ( VAR_1 > 1 ) { throw new TYPE_1 ( VAR_2 . getString ( STRING_1 , VAR_3 . toString ( VAR_1 ) ) , 0 , VAR_4 ) ; } this . VAR_1 = VAR_1 == 1 ; }","public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( VAR_1 > 1 ) { throw new TYPE_1 ( VAR_2 . getString ( STRING_1 , VAR_3 . toString ( VAR_1 ) ) , 0 , VAR_4 ) ; } this . VAR_1 = VAR_1 ; }","['Update TypeReference', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",125,"['Update TypeReference', 'Update Parameter', 'Update VariableRead', 'Delete Literal', 'Delete BinaryOperator']","['TypeReference', 'VariableRead', 'Literal', 'BinaryOperator']","['TypeReference', 'Parameter', 'VariableRead', 'Literal', 'BinaryOperator']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
110,110,"public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) . build ( ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) . build ( ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_4 ( VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter']",126,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
111,111,"public TYPE_1 METHOD_1 ( java.lang.Object to ) { return to ( to , false ) ; }","public TYPE_1 METHOD_1 ( java.lang.String to ) { return to ( to , true , false ) ; }","['Update TypeReference', 'Insert Literal']",127,"['Update Parameter', 'Update TypeReference', 'Insert Literal']","['TypeReference', 'Literal']","['Parameter', 'TypeReference', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
112,112,"public static TYPE_1 METHOD_1 ( android.content.Context context ) { return TYPE_1 . METHOD_1 ( context , STRING_1 ) ; }",public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( STRING_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",128,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
113,113,private void METHOD_1 ( java.lang.String [ ] list ) { for ( java.lang.String VAR_1 : list ) { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . fail ( VAR_1 ) ; } catch ( TYPE_2 VAR_3 ) { } } },private void METHOD_1 ( java.lang.String [ ] list ) { for ( java.lang.String VAR_1 : list ) { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . fail ( ) ; } catch ( TYPE_2 VAR_3 ) { } } },['Delete VariableRead'],129,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
114,114,"public void METHOD_1 ( java.lang.String VAR_1 , double VAR_2 , java.util.ArrayList < TYPE_1 > VAR_3 ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , double VAR_2 , java.util.ArrayList < TYPE_1 > VAR_3 ) { java.lang.System.out.println ( VAR_4 ) ; }","['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']",130,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation', 'Delete Invocation']","['Invocation', 'FieldRead', 'TypeAccess', 'VariableRead', 'VariableRead', 'VariableRead']","['TypeAccess', 'TypeAccess', 'FieldRead', 'Invocation', 'Invocation']",GPT Missed Nodes,0.75,0.4,0.3333333333333333,0.3636363636363636,2,3,4
115,115,public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . index ( ) . equals ( VAR_2 . index ( ) ) ) { return VAR_3 . METHOD_1 ( ) ; } else { return buffer . METHOD_2 ( ) ; } },public TYPE_1 METHOD_1 ( ) { return buffer . METHOD_1 ( ) ; },"['Move Return', 'Update Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",131,"['Delete If', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Update Invocation']","['Return', 'Invocation', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'Return', 'Block', 'Block', 'If']","['If', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.6,0.46153846153846156,0.5217391304347826,6,4,7
116,116,private void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( TYPE_2 . METHOD_2 ( event ) ) ; this . VAR_2 . METHOD_3 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( TYPE_2 . METHOD_2 ( event ) ) ; VAR_2 . METHOD_3 ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",132,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
117,117,"public void METHOD_1 ( final int id ) { TYPE_1 . METHOD_2 ( this , id , VAR_1 ) ; }","public void METHOD_1 ( final int id ) { METHOD_2 ( id , VAR_1 ) ; }","['Delete TypeAccess', 'Delete ThisAccess']",135,"['Delete TypeAccess', 'Delete ThisAccess']","['TypeAccess', 'ThisAccess']","['TypeAccess', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
118,118,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_1 ( ) ; },"['Update Invocation', 'Update Wra']",136,"['Update Wra', 'Update Invocation']","['Invocation', 'Wra']","['Wra', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
119,119,public java.lang.String toString ( ) { return VAR_1 . toString ( STRING_1 ) ; },public java.lang.String toString ( ) { return VAR_1 . toString ( ) ; },['Delete TypeAccess'],137,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
120,120,"public static void METHOD_1 ( java.lang.String message , java.lang.Throwable t ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( i ) . METHOD_2 ( message , t ) ; } }","public static void METHOD_1 ( java.lang.String message , java.lang.Throwable t ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( 0 ) . METHOD_2 ( message , t ) ; } }","['Insert Literal', 'Delete VariableRead']",139,['Update Literal'],"['Literal', 'VariableRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
121,121,public java.lang.String METHOD_1 ( ) { return ( this . VAR_1 ) == null ? null : this . VAR_1 . METHOD_2 ( ) ; },public java.lang.String METHOD_1 ( ) { return ( this . VAR_1 ) == null ? VAR_1 . METHOD_2 ( ) : null ; },"['Move Literal', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",140,"['Move FieldRead', 'Move Invocation', 'Move FieldRead', 'Move Invocation']","['Literal', 'TypeAccess', 'ThisAccess', 'FieldRead']","['FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.2,0.0,0.0,0.0,0,4,4
122,122,"public boolean METHOD_1 ( android.view.View VAR_1 ) { return VAR_2 . METHOD_2 ( context , data , VAR_3 . METHOD_3 ( ) ) ; }","public boolean METHOD_1 ( android.view.View VAR_1 ) { return VAR_2 . METHOD_2 ( context , data , position ) ; }","['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",141,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['FieldRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
123,123,"public void METHOD_1 ( long VAR_1 , long VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ( ( int ) ( VAR_1 ) ) , ( ( int ) ( VAR_2 ) ) ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Update TypeReference', 'Update TypeReference', 'Insert VariableRead', 'Insert VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeReference', 'Delete VariableRead']",143,"['Update Parameter', 'Update Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete BinaryOperator', 'Delete BinaryOperator']","['TypeReference', 'TypeReference', 'VariableRead', 'VariableRead', 'TypeReference', 'VariableRead', 'TypeReference', 'VariableRead']","['Parameter', 'Parameter', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'BinaryOperator', 'BinaryOperator']",Partial Match,0.25,0.25,0.25,0.25,2,6,6
124,124,public static void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 ) java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; },public static void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 ) java.lang.System.out.println ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",144,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
125,125,"TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String token , long id ) ;",TYPE_1 < TYPE_2 > METHOD_1 ( long id ) ;,"['Delete TypeReference', 'Delete Parameter']",146,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
126,126,"private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , long VAR_4 , TYPE_3 state ) { TYPE_1 message = TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , state ) ; message . METHOD_2 ( VAR_4 ) ; return message ; }","private static TYPE_1 METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , long VAR_4 , TYPE_3 state ) { TYPE_1 message = TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , state ) ; message . METHOD_2 ( VAR_4 ) ; return message ; }",['Update TypeReference'],147,"['Update Parameter', 'Update VariableRead']",['TypeReference'],"['Parameter', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
127,127,"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 context , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , context , VAR_2 ) ; VAR_4 . init ( ) ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 context ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , context ) ; VAR_4 . init ( ) ; return VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",148,"['Delete Parameter', 'Delete VariableRead', 'Delete ConstructorCall']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'ConstructorCall']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
128,128,public static TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) ) ; },protected static TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) ) ; },['Update Wra'],149,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
129,129,"public TYPE_1 METHOD_1 ( double VAR_1 , double VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , INT_1 ) ; }","public TYPE_1 METHOD_1 ( float VAR_1 , float VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , INT_1 ) ; }","['Update TypeReference', 'Update TypeReference']",152,"['Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
130,130,"public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( name ) ; VAR_4 . setValue ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( name ) ; VAR_4 . setValue ( VAR_1 ) ; return VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",153,"['Delete Parameter', 'Delete Invocation']","['TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'Invocation']","['Parameter', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,2,0,3
131,131,"public void METHOD_1 ( int VAR_1 , java.lang.String type ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 , METHOD_2 ( VAR_1 ) , type , VAR_3 ) ; java.lang.System.out.println ( ( STRING_2 + ( VAR_4 . toString ( ) ) ) ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 , METHOD_2 ( VAR_1 ) , VAR_3 ) ; java.lang.System.out.println ( ( STRING_2 + ( VAR_4 . toString ( ) ) ) ) ; METHOD_3 ( VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",154,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
132,132,"public void METHOD_1 ( ) { VAR_1 . assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( STRING_2 ) ) ; }","public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( STRING_2 ) ) ; }",['Update TypeAccess'],156,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
133,133,"protected long METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . METHOD_1 ( ) ; }","private long METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . METHOD_1 ( ) ; }",['Update Wra'],157,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
134,134,"public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( new java.io.File ( VAR_1 ) , VAR_2 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . add ( VAR_1 ) ; } }","public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( new java.io.File ( VAR_1 ) , VAR_2 ) ; } catch ( java.io.IOException VAR_3 ) { } }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",158,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
135,135,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( new TYPE_3 ( STRING_1 ) ) ; return METHOD_3 ( VAR_1 , VAR_3 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_3 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( new TYPE_3 ( STRING_1 ) ) ; return METHOD_3 ( VAR_1 , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",159,"['Delete Parameter', 'Update Invocation']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Invocation']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
136,136,public void METHOD_1 ( boolean VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( ) { this . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",161,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
137,137,"public java.util.List < TYPE_1 > METHOD_1 ( final java.util.List < TYPE_2 > VAR_1 , final java.util.List < java.lang.String > VAR_2 ) { return VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( final java.util.List < TYPE_2 > VAR_1 , final java.util.List < java.lang.String > VAR_2 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; }",['Delete VariableRead'],162,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
138,138,"private static void METHOD_1 ( TYPE_1 p , java.lang.Integer VAR_1 ) { VAR_2 . put ( p , VAR_1 ) ; }","private static void METHOD_1 ( TYPE_1 p , java.lang.Double VAR_1 ) { VAR_2 . put ( p , VAR_1 ) ; }",['Update TypeReference'],163,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
139,139,"public void METHOD_1 ( TYPE_1 item ) throws TYPE_2 { if ( VAR_1 ) throw new TYPE_2 ( VAR_1 , false ) ; VAR_2 . add ( item ) ; VAR_1 = true ; }",public void METHOD_1 ( TYPE_1 item ) throws TYPE_2 { if ( VAR_1 ) throw new TYPE_2 ( VAR_1 ) ; VAR_2 . add ( item ) ; VAR_1 = true ; },['Delete Literal'],164,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
140,140,protected boolean METHOD_1 ( TYPE_1 status ) { return VAR_1 . contains ( status . METHOD_2 ( ) ) ; },protected boolean METHOD_1 ( TYPE_1 status ) { return VAR_1 . contains ( status ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete Invocation']",165,['Delete Invocation'],"['Invocation', 'Invocation', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.25,0.4,1,0,3
141,141,public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_1 ( ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",166,['Insert ThisAccess'],"['FieldRead', 'ThisAccess', 'TypeAccess']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
142,142,"private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = ( VAR_3 ) / INT_1 ; VAR_1 . METHOD_2 ( VAR_4 , ( ( ( VAR_3 ) - ( VAR_4 . METHOD_3 ( ) ) ) - VAR_2 ) , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = ( VAR_3 ) / INT_1 ; VAR_1 . METHOD_2 ( VAR_4 , ( ( ( VAR_3 ) - ( VAR_4 . METHOD_3 ( ) ) ) - VAR_2 ) , VAR_2 ) ; }",['Update Wra'],168,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
143,143,"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , false , false ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , false ) ; }",['Delete Literal'],171,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
144,144,public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; },['Insert Literal'],172,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
145,145,"public boolean METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; return true ; }",public boolean METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; return true ; },"['Delete TypeReference', 'Delete Parameter']",173,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
146,146,public void METHOD_1 ( ) { VAR_1 . getActivity ( ) . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",174,"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation']","['TypeAccess', 'Invocation', 'Invocation']","['FieldRead', 'Invocation', 'Invocation']",Partial Match,0.3333333333333333,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
147,147,private void setValue ( java.lang.String value ) { value = VAR_1 . trim ( ) . toUpperCase ( VAR_2 ) ; if ( ! ( TYPE_1 . METHOD_1 ( value ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . value = value ; },private void setValue ( java.lang.String value ) { value = VAR_1 . trim ( ) . toUpperCase ( ) ; if ( ! ( TYPE_1 . METHOD_1 ( value ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . value = value ; },['Delete TypeAccess'],175,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
148,148,"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( new TYPE_2 ( VAR_1 . METHOD_4 ( ) , this ) ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 . METHOD_3 ( new TYPE_2 ( VAR_1 . METHOD_4 ( ) , this ) ) ; }","['Insert ConstructorCall', 'Move ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",176,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'ThisAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
149,149,"TYPE_1 < TYPE_2 > METHOD_1 ( int index , int count ) ;",TYPE_1 < TYPE_2 > METHOD_1 ( int index ) ;,"['Delete TypeReference', 'Delete Parameter']",177,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
150,150,java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_1 . METHOD_2 ( ) ; return STRING_1 ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } return STRING_2 ; },java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_1 . METHOD_2 ( ) ; return STRING_1 ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } return STRING_1 ; },['Update FieldRead'],178,['Update Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
151,151,"public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( VAR_1 , args ) ; VAR_1 . METHOD_1 ( ) ; }",public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall']",179,['Delete ConstructorCall'],"['VariableRead', 'VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
152,152,public TYPE_1 METHOD_1 ( TYPE_2 context ) { if ( ( message ) instanceof TYPE_3 ) { return ( ( TYPE_3 ) ( message ) ) . VAR_1 ; } throw VAR_2 . METHOD_2 ( STRING_1 ) ; },public TYPE_1 METHOD_1 ( TYPE_2 context ) { if ( ( name ) instanceof TYPE_3 ) { return ( ( TYPE_3 ) ( name ) ) . VAR_1 ; } throw VAR_2 . METHOD_2 ( STRING_1 ) ; },"['Update FieldRead', 'Update FieldRead']",181,"['Update VariableRead', 'Update VariableRead']","['FieldRead', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
153,153,public TYPE_1 METHOD_1 ( java.lang.String query ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( query ) ; return VAR_1 . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( java.lang.String query ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( query ) ; return VAR_1 . METHOD_3 ( query ) ; },['Insert VariableRead'],182,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
154,154,public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( id ) ; },"['Insert FieldRead', 'Delete TypeAccess']",183,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
155,155,"public boolean METHOD_1 ( int x , int y , TYPE_1 VAR_1 ) { return ( METHOD_2 ( x , y , VAR_1 , new java.util.HashSet < > ( ) , new java.util.HashSet < > ( ) ) . size ( ) ) > 0 ; }","public boolean METHOD_1 ( int x , int y , TYPE_1 VAR_1 ) { return ( METHOD_2 ( x , y , VAR_1 ) . size ( ) ) > 0 ; }","['Delete ConstructorCall', 'Delete ConstructorCall']",185,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference']","['ConstructorCall', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,2,2,0
156,156,public boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) && ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; },private boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) && ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; },['Update Wra'],186,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
157,157,public boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? true : VAR_1 ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? false : VAR_1 ; },['Update Literal'],187,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
158,158,public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ( ( METHOD_3 ( ) ) + 1 ) ) ; METHOD_4 ( METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( ( ( METHOD_3 ( ) ) + 1 ) ) ; METHOD_4 ( METHOD_3 ( ) ) ; },"['Delete TypeReference', 'Delete Parameter']",188,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
159,159,public int METHOD_1 ( ) { return ( VAR_1 . size ( ) ) < ( VAR_2 . size ( ) ) ? VAR_1 . size ( ) : VAR_2 . size ( ) ; },public int METHOD_1 ( ) { return ( VAR_1 . size ( ) ) > ( VAR_2 . size ( ) ) ? VAR_1 . size ( ) : VAR_2 . size ( ) ; },['Update BinaryOperator'],189,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
160,160,"public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_1 ; }",public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",190,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal']","['TypeAccess', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,0.75,0.75,3,1,1
161,161,"public static boolean METHOD_1 ( java.lang.String path , java.util.Collection < ? > VAR_1 ) { return TYPE_1 . METHOD_1 ( new java.io.File ( path ) , VAR_1 , STRING_1 , true ) ; }","public static boolean METHOD_1 ( java.lang.String path , java.util.Collection < ? > VAR_1 ) { return TYPE_1 . METHOD_1 ( new java.io.File ( path ) , VAR_1 , STRING_1 , false ) ; }",['Update Literal'],191,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
162,162,public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == ( - 1 ) ) || ( ( VAR_1 ) >= ( VAR_2 . size ( ) ) ) ) { return null ; } return VAR_2 . get ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == ( - 1 ) ) || ( ( VAR_1 ) == ( VAR_2 . size ( ) ) ) ) { return null ; } return VAR_2 . get ( VAR_1 ) ; },['Update BinaryOperator'],192,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
163,163,"public void METHOD_1 ( ) { int id = METHOD_2 ( 0 ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( id ) ; METHOD_4 ( STRING_1 , VAR_1 ) ; METHOD_5 ( STRING_2 ) ; }","public void METHOD_1 ( ) { int id = METHOD_2 ( ""id"" ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( id ) ; METHOD_4 ( STRING_1 , VAR_1 ) ; METHOD_5 ( STRING_2 ) ; }",['Update Literal'],193,"['Delete Literal', 'Insert Literal']",['Literal'],"['Literal', 'Literal']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
164,164,public static TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( INT_1 ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( true ) . METHOD_6 ( false ) . build ( ) ; },public static TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( 1 ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( true ) . METHOD_6 ( false ) . build ( ) ; },"['Insert Literal', 'Delete TypeAccess']",194,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
165,165,"public TYPE_1 METHOD_1 ( final int VAR_1 , final java.awt.Color VAR_2 ) { this . VAR_3 = new TYPE_2 ( ) ; return this ; }","public TYPE_1 METHOD_1 ( final int VAR_1 , final java.awt.Color VAR_2 ) { this . VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 ) ; return this ; }","['Update ConstructorCall', 'Insert VariableRead', 'Insert VariableRead']",196,"['Insert VariableRead', 'Insert VariableRead']","['ConstructorCall', 'VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.6666666666666666,0.8,2,0,1
166,166,public java.lang.String METHOD_1 ( ) { return getClass ( ) . METHOD_2 ( ) . toLowerCase ( ) ; },public java.lang.String METHOD_1 ( ) { return getClass ( ) . getName ( ) . toLowerCase ( ) ; },['Update Invocation'],197,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
167,167,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null ) ; },"['Update ConstructorCall', 'Insert Literal']",198,['Insert Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
168,168,"private boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return false ; }","private boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { }","['Delete Literal', 'Delete Return']",200,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
169,169,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( STRING_1 , id ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( ""id"" , id ) ; }","['Insert Literal', 'Delete TypeAccess']",203,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
170,170,"public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return ( ( ( ( METHOD_2 ( VAR_1 ) ) + STRING_1 ) + VAR_2 ) + STRING_2 ) + VAR_3 ; }","public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return ( ( ( ( METHOD_2 ( ( VAR_1 + 1 ) ) ) + STRING_1 ) + VAR_2 ) + STRING_2 ) + VAR_3 ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",204,"['Insert BinaryOperator', 'Insert Literal']","['BinaryOperator', 'VariableRead', 'Literal']","['BinaryOperator', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
171,171,"public TYPE_1 build ( ) { return new TYPE_1 ( this . VAR_1 , this . VAR_2 , this . VAR_3 ) ; }","public TYPE_1 build ( ) { return new TYPE_1 ( this . VAR_2 , this . VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldRead']",206,['Delete FieldRead'],"['ThisAccess', 'FieldRead']",['FieldRead'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
172,172,public TYPE_1 remove ( TYPE_2 key ) { return null ; },public TYPE_1 remove ( TYPE_2 key ) { },"['Delete Literal', 'Delete Return']",207,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
173,173,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( file , new TYPE_4 ( file ) ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_3 ( file , new TYPE_4 ( file ) ) ; }","['Delete TypeReference', 'Delete Parameter']",208,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
174,174,"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; return true ; }",['Delete Invocation'],209,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
175,175,"public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 ) ; }","['Insert FieldRead', 'Delete Invocation']",210,"['Delete Invocation', 'Insert VariableRead']","['FieldRead', 'Invocation']","['Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
176,176,"private void METHOD_1 ( int VAR_1 , TYPE_1 state , TYPE_2 VAR_2 ) { VAR_3 = METHOD_2 ( state . METHOD_3 ( ) ) ; }",private void METHOD_1 ( TYPE_1 state ) { VAR_3 = METHOD_2 ( state . METHOD_3 ( ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",211,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
177,177,private boolean METHOD_1 ( java.lang.Class < ? > VAR_1 ) { return VAR_2 class . METHOD_2 ( VAR_1 ) ; },private static boolean METHOD_1 ( java.lang.Class < ? > VAR_1 ) { return VAR_2 class . METHOD_2 ( VAR_1 ) ; },['Insert Wra'],212,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
178,178,public java.lang.String METHOD_1 ( ) { return this . number ; },public java.lang.String METHOD_1 ( ) { return number ; },['Delete ThisAccess'],213,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
179,179,public TYPE_1 METHOD_1 ( java.lang.String id ) { VAR_1 . info ( ( STRING_1 + id ) ) ; TYPE_1 VAR_2 ; VAR_2 = VAR_3 . METHOD_2 ( id ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( java.lang.String id ) { VAR_1 . info ( ( STRING_1 + id ) ) ; TYPE_1 VAR_2 ; VAR_2 = VAR_3 . METHOD_1 ( id ) ; return VAR_2 ; },['Update Invocation'],214,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
180,180,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return this . VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_1 , 0 , null , null , null ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return this . VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_1 , 0 , null , null ) ) ; }","['Update ConstructorCall', 'Delete Literal']",215,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
181,181,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 . get ( VAR_4 . METHOD_3 ( ) ) , VAR_5 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 . get ( position ) , VAR_5 ) . show ( ) ; }","['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",216,"['Update VariableRead', 'Delete FieldRead', 'Delete Invocation']","['FieldRead', 'TypeAccess', 'Invocation']","['VariableRead', 'FieldRead', 'Invocation']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
182,182,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , null ) ; }","public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , null ) ; }",['Update TypeAccess'],217,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
183,183,"public void METHOD_1 ( java.lang.String title , java.lang.String content ) { VAR_1 . show ( title , content , STRING_1 ) ; }","public void METHOD_1 ( java.lang.String title , java.lang.String content ) { VAR_1 . show ( title , content ) ; }",['Delete TypeAccess'],218,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
184,184,"protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , this , METHOD_2 ( ) , true ) ; } return VAR_1 ; }","protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , this , METHOD_2 ( ) ) ; } return VAR_1 ; }",['Delete Literal'],219,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
185,185,"protected void end ( ) { VAR_1 . METHOD_1 ( 0 , 0 , true , false ) ; }","protected void end ( ) { VAR_1 . METHOD_1 ( 0 , 0 , true ) ; }",['Delete Literal'],220,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
186,186,"public void METHOD_1 ( TYPE_1 response ) { VAR_1 . assertEquals ( VAR_2 . getId ( ) , STRING_1 ) ; }","public void METHOD_1 ( java.lang.String response ) { VAR_1 . assertEquals ( response , STRING_1 ) ; }","['Update TypeReference', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",221,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'Parameter', 'VariableRead']",Partial Match,0.4,0.3333333333333333,0.25,0.28571428571428575,1,2,3
187,187,"TYPE_1 METHOD_1 ( android.content.Context context , int VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 , int VAR_6 ) { return new TYPE_1 ( context . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","TYPE_1 METHOD_1 ( android.content.Context context , int VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 ) { return new TYPE_1 ( context . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",222,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
188,188,"public void METHOD_1 ( TYPE_1 VAR_1 ) { query . METHOD_2 ( this ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_2 ) { query . METHOD_2 ( this ) ; },"['Update Parameter', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",223,"['Update Parameter', 'Delete Invocation', 'Delete VariableRead']","['Parameter', 'TypeAccess', 'TypeAccess', 'Invocation']","['Parameter', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
189,189,public double METHOD_1 ( ) { return 0.0 ; },public double METHOD_1 ( ) { },"['Delete Literal', 'Delete Return']",224,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
190,190,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Delete VariableRead', 'Delete Return']",225,['Delete Return'],"['VariableRead', 'Return']",['Return'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
191,191,public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( int y ) { this . VAR_2 = y ; return this ; },"['Update Parameter', 'Update VariableRead']",226,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
192,192,public void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 ; METHOD_2 ( ) ; },protected void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 ; METHOD_2 ( ) ; },['Update Wra'],228,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
193,193,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( CHAR_1 ) ; VAR_2 . assertEquals ( CHAR_1 , VAR_1 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( CHAR_1 , VAR_1 . METHOD_5 ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( CHAR_1 ) ; TYPE_1 . METHOD_4 ( CHAR_1 , VAR_1 . METHOD_3 ( ) ) ; VAR_2 . assertEquals ( CHAR_1 , VAR_1 . METHOD_5 ( ) ) ; }","['Update Invocation', 'Update Invocation', 'Move TypeAccess', 'Move TypeAccess']",230,"['Move Invocation', 'Move Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess']","['Invocation', 'Invocation']",GPT Missed Nodes,0.5,0.0,0.0,0.0,0,2,4
194,194,private void METHOD_1 ( final TYPE_1 VAR_1 ) { java.lang.Thread VAR_2 = new java.lang.Thread ( ) { public void METHOD_2 ( ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } } ; VAR_4 . start ( ) ; },private void METHOD_1 ( final TYPE_1 VAR_1 ) { java.lang.Thread VAR_2 = new java.lang.Thread ( ) { public void METHOD_2 ( ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } } ; VAR_2 . METHOD_2 ( ) ; },"['Update Invocation', 'Insert VariableRead', 'Delete TypeAccess']",231,"['Insert Invocation', 'Delete Invocation']","['Invocation', 'VariableRead', 'TypeAccess']","['Invocation', 'Invocation']",GPT Missed Nodes,0.3333333333333333,0.0,0.0,0.0,0,2,3
195,195,"private static java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 . METHOD_2 ( ) ) + ""\n"" ) + ( TYPE_1 . METHOD_3 ( ) ) ; }","public java.lang.String METHOD_1 ( ) { return ( ( this . METHOD_2 ( ) ) + ""\n"" ) + ( this . METHOD_3 ( ) ) ; }","['Update Wra', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete Wra', 'Delete TypeAccess', 'Delete TypeAccess']",232,"['Delete Wra', 'Delete Wra', 'Insert Wra', 'Update TypeAccess', 'Insert ThisAccess', 'Update TypeAccess', 'Insert ThisAccess']","['Wra', 'ThisAccess', 'ThisAccess', 'Wra', 'TypeAccess', 'TypeAccess']","['Wra', 'Wra', 'Wra', 'TypeAccess', 'ThisAccess', 'TypeAccess', 'ThisAccess']",Exact Match,1.0,0.42857142857142855,0.5,0.4615384615384615,3,4,3
196,196,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 , java.lang.String type ) ;",public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",233,"['Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
197,197,"private boolean METHOD_1 ( TYPE_1 item , TYPE_2 file ) { return ( VAR_1 . getName ( ) . equals ( VAR_2 . getText ( 0 ) ) ) && ( file . METHOD_2 ( ) . equals ( VAR_2 . getText ( INT_1 ) ) ) ; }","private boolean METHOD_1 ( TYPE_1 item , TYPE_2 file ) { return ( VAR_1 . getName ( ) . equals ( VAR_2 . getText ( 0 ) ) ) && ( file . METHOD_2 ( ) . equals ( VAR_2 . getText ( 1 ) ) ) ; }","['Insert Literal', 'Delete TypeAccess']",234,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
198,198,void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 ) ; },void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Update Invocation', 'Delete Literal']",235,"['Update Invocation', 'Delete Literal']","['Invocation', 'Literal']","['Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
199,199,public void METHOD_1 ( ) { java.lang.System.out.print ( TYPE_1 . METHOD_2 ( java.util.Calendar.getInstance ( ) ) ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( TYPE_1 . METHOD_2 ( java.util.Calendar.getInstance ( ) ) ) ; },['Update Invocation'],236,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
200,200,public java.lang.String execute ( ) throws TYPE_1 { if ( ! ( METHOD_1 ( ) ) ) throw new TYPE_1 ( STRING_1 ) ; return VAR_1 ; },public java.lang.String execute ( ) throws java.lang.Exception { if ( ! ( METHOD_1 ( ) ) ) throw new java.lang.Exception ( STRING_1 ) ; return VAR_1 ; },"['Update TypeReference', 'Update ConstructorCall']",237,"['Update TypeReference', 'Update TypeReference']","['TypeReference', 'ConstructorCall']","['TypeReference', 'TypeReference']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
201,201,public TYPE_1 METHOD_1 ( TYPE_2 path ) throws java.io.IOException { if ( path == null ) { return null ; } TYPE_2 VAR_1 = METHOD_2 ( path ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( TYPE_2 path ) throws java.io.IOException { TYPE_2 VAR_1 = METHOD_2 ( path ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",239,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
202,202,"public TYPE_1 METHOD_1 ( int size ) { TYPE_2 . METHOD_2 ( ( size > 0 ) , STRING_1 ) ; VAR_1 . set ( new TYPE_3 ( size ) ) ; this . VAR_2 = size ; return this ; }","public TYPE_1 METHOD_1 ( int size ) { TYPE_2 . METHOD_2 ( ( size > 0 ) , STRING_1 ) ; VAR_1 . set ( new TYPE_3 ( VAR_2 ) ) ; this . VAR_2 = size ; return this ; }","['Update ConstructorCall', 'Insert FieldRead', 'Delete VariableRead']",240,"['Delete VariableRead', 'Insert FieldRead']","['ConstructorCall', 'FieldRead', 'VariableRead']","['VariableRead', 'FieldRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
203,203,public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer type ) throws TYPE_2 { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( type ) ; if ( VAR_3 . isEmpty ( VAR_1 ) ) { throw new TYPE_2 ( STRING_1 ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 . isEmpty ( VAR_1 ) ) { throw new TYPE_2 ( STRING_1 ) ; } return VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",241,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
204,204,"public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { java.lang.String VAR_1 = new java.util.Scanner ( new java.io.File ( VAR_2 ) , VAR_3 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) . execute ( VAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { java.lang.String VAR_1 = new java.util.Scanner ( new java.io.File ( VAR_2 ) ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) . execute ( VAR_1 ) ; return this ; }","['Update ConstructorCall', 'Delete FieldRead']",242,"['Delete VariableRead', 'Delete VariableRead']","['ConstructorCall', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
205,205,public int METHOD_1 ( int index ) { if ( index <= ( VAR_1 . size ( ) ) ) return VAR_2 . get ( VAR_1 . get ( ( index - 1 ) ) ) ; else return - 1 ; },public int METHOD_1 ( int index ) { if ( index <= ( VAR_1 . size ( ) ) ) return VAR_2 . get ( VAR_1 . get ( index ) ) ; else return - 1 ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",244,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
206,206,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( 0 ) ; METHOD_3 ( VAR_2 , true ) ; VAR_3 . put ( STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( 0 ) ; METHOD_3 ( VAR_2 , true ) ; VAR_3 . put ( ""type"" , STRING_2 ) ; METHOD_4 ( VAR_2 ) ; }","['Insert Literal', 'Delete TypeAccess']",245,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
207,207,public TYPE_1 METHOD_1 ( TYPE_1 t ) { this . VAR_1 . METHOD_2 ( t ) ; return t ; },public void METHOD_1 ( TYPE_1 t ) { VAR_1 . METHOD_2 ( t ) ; },"['Update TypeReference', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Return']",246,"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']","['TypeReference', 'TypeAccess', 'ThisAccess', 'FieldRead', 'VariableRead', 'Return']","['TypeReference', 'ThisAccess', 'Return']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,3,0,3
208,208,"long METHOD_1 ( TYPE_1 obj , byte [ ] VAR_1 , double [ ] VAR_2 , int VAR_3 , int VAR_4 , double VAR_5 , int [ ] VAR_6 ) ;","long METHOD_1 ( TYPE_1 obj , byte [ ] VAR_1 , double [ ] VAR_2 , long VAR_3 , long VAR_4 , double VAR_5 , int [ ] VAR_6 ) ;","['Update TypeReference', 'Update TypeReference']",247,"['Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
209,209,protected void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; ( VAR_3 ) ++ ; if ( ( VAR_3 ) >= ( VAR_4 . length ) ) { METHOD_2 ( ) ; } else { VAR_5 . METHOD_3 ( VAR_6 ) ; } },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; ( VAR_3 ) ++ ; if ( ( VAR_3 ) >= ( VAR_4 . length ) ) { METHOD_2 ( ) ; } else { VAR_5 . METHOD_3 ( VAR_6 ) ; } },['Update Wra'],249,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
210,210,"public void METHOD_1 ( long VAR_1 , long length , byte [ ] VAR_2 , java.lang.String VAR_3 , int VAR_4 ) { }","protected abstract void METHOD_1 ( long VAR_1 , long length , byte [ ] VAR_2 , java.lang.String VAR_3 , int VAR_4 ) ;","['Update Wra', 'Insert Wra']",250,"['Insert Wra', 'Insert Wra', 'Delete Block']","['Wra', 'Wra']","['Wra', 'Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.3333333333333333,0.5,0.4,1,2,1
211,211,"private static long METHOD_1 ( long VAR_1 , int VAR_2 , long VAR_3 , int VAR_4 , long VAR_5 ) { return 0 ; }","private static native long METHOD_1 ( long VAR_1 , int VAR_2 , long VAR_3 , int VAR_4 , long VAR_5 ) ;","['Insert Wra', 'Delete Literal', 'Delete Return']",251,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
212,212,void METHOD_1 ( long number ) { VAR_1 += java.lang.String . METHOD_2 ( number ) ; VAR_2 . setText ( VAR_1 ) ; },void METHOD_1 ( int number ) { VAR_1 += java.lang.String . METHOD_2 ( number ) ; VAR_2 . setText ( VAR_1 ) ; },['Update TypeReference'],252,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
213,213,"public static java.lang.String METHOD_1 ( java.lang.String path ) { return TYPE_1 . METHOD_1 ( path , STRING_1 ) ; }","public static java.lang.String METHOD_1 ( java.lang.String path ) { return TYPE_1 . METHOD_1 ( path , null ) ; }","['Insert Literal', 'Delete TypeAccess']",253,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
214,214,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) { if ( ( VAR_4 ) >= ( VAR_5 ) ) { message = STRING_1 ; } else { message = STRING_2 ; } return VAR_6 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) { if ( ( VAR_4 ) > ( VAR_5 ) ) { message = STRING_1 ; } else { message = STRING_2 ; } return VAR_6 ; }",['Update BinaryOperator'],254,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
215,215,"protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_3 ( VAR_2 ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ; }","protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_3 ( VAR_2 ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ; }",['Delete ConstructorCall'],255,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
216,216,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_2 , 0 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_2 , 1 ) ; }","['Update Literal', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",256,"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal']","['Literal', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'Literal']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
217,217,public final double METHOD_1 ( ) { return ( METHOD_2 ( ) ) - ( METHOD_3 ( ) ) ; },public final double METHOD_1 ( ) { return ( this . METHOD_2 ( ) ) - ( this . METHOD_3 ( ) ) ; },"['Insert ThisAccess', 'Insert ThisAccess']",257,"['Insert ThisAccess', 'Insert ThisAccess']","['ThisAccess', 'ThisAccess']","['ThisAccess', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
218,218,public void METHOD_1 ( java.util.Date endTime ) { this . endTime = new java.util.Date ( VAR_1 . getTime ( ) ) ; },public void METHOD_1 ( java.util.Date endTime ) { this . endTime = endTime ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall']",258,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'Invocation', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'Invocation', 'FieldRead', 'VariableRead']",Partial Match,0.5,0.4,0.5,0.4444444444444445,2,3,2
219,219,"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final TYPE_4 context ) throws java.io.IOException { return METHOD_2 ( VAR_3 , VAR_1 , VAR_2 , null , null , context ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final TYPE_4 context ) throws java.io.IOException { return METHOD_2 ( VAR_3 , VAR_1 , VAR_2 , null , context ) ; }",['Delete Literal'],259,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
220,220,public TYPE_1 METHOD_1 ( short VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },public void METHOD_1 ( short VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess', 'Delete Return']",260,"['Update TypeReference', 'Delete Return']","['TypeReference', 'ThisAccess', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
221,221,"void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Long VAR_2 ) ;",void METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",261,"['Delete Parameter', 'Delete TypeReference']","['TypeReference', 'Parameter']","['Parameter', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
222,222,"public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_1 = new TYPE_3 ( new TYPE_4 ( ( - INT_1 ) , INT_1 ) , INT_2 , INT_2 ) ; t . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( ) ; TYPE_2 VAR_1 = new TYPE_3 ( new TYPE_4 ( ( - INT_1 ) , INT_1 ) , INT_2 , INT_2 ) ; t . METHOD_2 ( VAR_1 ) ; }",['Delete FieldRead'],262,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
223,223,"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( INT_1 , INT_2 , INT_3 , VAR_2 ) ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; },"['Update ConstructorCall', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall']",263,"['Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete VariableRead', 'Insert Literal']","['ConstructorCall', 'Literal', 'FieldRead', 'FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall']","['ConstructorCall', 'ConstructorCall', 'Literal', 'Literal', 'Literal', 'VariableRead', 'Literal']",Partial Match,0.5,0.2857142857142857,0.2857142857142857,0.2857142857142857,2,5,5
224,224,"public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int VAR_4 , int count , java.lang.String VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 , java.lang.String VAR_8 ) throws TYPE_1 ;","public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int VAR_4 , int count , java.lang.String VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",264,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
225,225,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 . NULL ) ) { VAR_1 . METHOD_3 ( ) ; return null ; } return TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 . NULL ) ) { return null ; } return TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation']",265,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
226,226,private java.lang.Long METHOD_1 ( final long VAR_1 ) { return VAR_1 < ( VAR_2 ) ? VAR_1 : VAR_2 ; },private java.lang.Long METHOD_1 ( final long VAR_1 ) { return VAR_1 < ( VAR_2 ) ? VAR_1 + 1 : VAR_2 ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",266,"['Insert Literal', 'Insert BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
227,227,"public void METHOD_1 ( android.view.View view , TYPE_1 event ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( true ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 event ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( ) ; }",['Delete Literal'],267,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
228,228,"protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String field ) { VAR_2 . put ( VAR_1 , field ) ; return VAR_1 ; }","private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String field ) { VAR_2 . put ( VAR_1 , field ) ; return VAR_1 ; }",['Update Wra'],268,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
229,229,void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 = false ; },"void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( METHOD_3 ( ) , true ) ; VAR_1 = false ; }",['Insert Literal'],269,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
230,230,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , true ) ; }",['Update Literal'],270,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
231,231,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( null != ( VAR_2 . getId ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( null != ( VAR_2 . getId ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Return']",271,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
232,232,public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },['Insert ThisAccess'],272,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
233,233,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) <= 0 ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) > 0 ; },['Update BinaryOperator'],273,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
234,234,private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) ( VAR_3 ) ++ ; else ( VAR_4 ) ++ ; } },private void METHOD_1 ( java.util.List < TYPE_1 > VAR_2 ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) ( VAR_3 ) ++ ; else ( VAR_4 ) ++ ; } },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Insert TypeReference', 'Delete FieldRead']",274,"['Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert Parameter']","['Parameter', 'TypeReference', 'VariableRead', 'TypeReference', 'FieldRead']","['TypeReference', 'TypeReference', 'TypeReference', 'Parameter']",GPT Missed Nodes,0.5,0.75,0.6,0.6666666666666665,3,1,2
235,235,public TYPE_1 METHOD_1 ( ) { return this . METHOD_2 ( ) . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( ) { return this . METHOD_2 ( ) . METHOD_1 ( ) ; },['Update Invocation'],276,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
236,236,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( new TYPE_3 ( VAR_2 , VAR_3 , new TYPE_4 ( ) , STRING_1 , STRING_2 , 0 , STRING_3 ) ) . build ( ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( new TYPE_3 ( VAR_2 , VAR_3 , new TYPE_4 ( ) , null , null , 0 , null ) ) . build ( ) ; }","['Insert Literal', 'Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",277,"['Update Literal', 'Update Literal', 'Update Literal']","['Literal', 'Literal', 'Literal', 'FieldRead', 'FieldRead', 'FieldRead']","['Literal', 'Literal', 'Literal']",GPT Missed Nodes,0.5,0.0,0.0,0.0,0,3,6
237,237,"public TYPE_1 METHOD_1 ( java.lang.String url , int i ) throws java.io.IOException { return VAR_1 . METHOD_1 ( METHOD_2 ( url ) , i ) ; }",public TYPE_1 METHOD_1 ( java.lang.String url ) throws java.io.IOException { return VAR_1 . METHOD_1 ( METHOD_2 ( url ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",278,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
238,238,"< TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , java.lang.String key ) ;","< TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Object array , java.lang.String key ) ;",['Update Parameter'],279,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
239,239,"public < TYPE_1 > java.util.Collection < TYPE_1 > METHOD_1 ( java.lang.Class < TYPE_1 > t ) { return METHOD_1 ( this , t , new java.util.ArrayList < TYPE_1 > ( ) , true ) ; }","public < TYPE_1 > java.util.Collection < TYPE_1 > METHOD_1 ( java.lang.Class < TYPE_1 > t ) { return METHOD_1 ( this , t , new java.util.ArrayList < TYPE_1 > ( ) ) ; }",['Delete Literal'],280,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
240,240,"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 . replaceAll ( STRING_1 , STRING_2 ) ; VAR_4 = VAR_5 . get ( VAR_1 ) ; VAR_6 . METHOD_2 ( ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_4 = VAR_5 . get ( VAR_1 ) ; VAR_6 . METHOD_2 ( ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",281,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Literal']","['VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal', 'Literal']",Partial Match,0.2,0.25,0.2,0.22222222222222224,1,3,4
241,241,"protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , boolean VAR_4 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , new TYPE_2 ( ) , true ) ; }","protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , new TYPE_2 ( ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete Literal']",283,"['Delete Parameter', 'Delete Literal']","['TypeReference', 'Parameter', 'Literal']","['Parameter', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
242,242,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = VAR_2 . trim ( ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = VAR_1 ; } },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",284,"['Delete Invocation', 'Delete FieldRead']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'FieldRead']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
243,243,public java.lang.String METHOD_1 ( int VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) return VAR_3 . get ( VAR_1 ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( int VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) return VAR_3 . get ( VAR_1 ) ; return null ; },"['Insert Literal', 'Delete FieldRead']",285,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
244,244,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_2 ) - ( VAR_1 . METHOD_4 ( ) ) ) ) . METHOD_5 ( INT_1 ) . start ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_2 ) - ( VAR_1 . METHOD_4 ( ) ) ) ) . METHOD_5 ( INT_1 ) . start ( ) ; },['Update Wra'],286,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
245,245,public static java.lang.String METHOD_1 ( java.lang.Object VAR_1 ) throws java.lang.Exception { if ( VAR_1 == null ) return null ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return VAR_2 . METHOD_2 ( ) ; },public static java.lang.String METHOD_1 ( java.lang.Object VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return VAR_2 . METHOD_2 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",287,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
246,246,"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 . getText ( ) . toString ( ) , this ) ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( VAR_1 , VAR_3 . getText ( ) . toString ( ) , this ) ) ; }",['Delete FieldRead'],288,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
247,247,"private java.util.HashMap < java.lang.Integer , java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return null ; }",private METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Literal', 'Delete Return']",289,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'TypeReference', 'TypeReference', 'Literal', 'Return']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'Return', 'Literal']",Exact Match,1.0,0.7142857142857143,1.0,0.8333333333333333,5,2,0
248,248,public static void i ( java.lang.String message ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( i ) . i ( message ) ; } },public static void i ( java.lang.String message ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_1 . get ( 0 ) . i ( message ) ; } },"['Insert Literal', 'Delete VariableRead']",292,['Update Literal'],"['Literal', 'VariableRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
249,249,public void METHOD_1 ( final java.lang.String value ) { this . VAR_1 = TYPE_1 . METHOD_2 ( value ) . METHOD_3 ( ) ; },public void METHOD_1 ( final java.lang.String value ) { this . VAR_1 = value ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",293,"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Insert Assignment', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['TypeAccess', 'Invocation', 'Invocation', 'Assignment', 'Assignment', 'VariableRead']",GPT Hallucinated Nodes,0.75,0.5,0.75,0.6,3,3,1
250,250,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Insert TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator']",294,"['Delete BinaryOperator', 'Delete VariableRead']","['TypeAccess', 'FieldRead', 'VariableRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
251,251,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.HashSet < > ( ) ; } VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_3 . add ( VAR_1 ) ; },['Update ConstructorCall'],295,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
252,252,private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_3 . toString ( ) ) ; } },private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { java.lang.System.out.println ( VAR_3 . toString ( ) ) ; } },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",297,"['Update TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert FieldRead', 'Insert FieldRead']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'FieldRead', 'FieldRead', 'FieldRead']",GPT Missed Nodes,0.6666666666666666,0.4,0.5,0.4444444444444445,2,3,2
253,253,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_1 . METHOD_2 ( null , VAR_2 , null ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 . METHOD_2 ( null , null , null ) . METHOD_3 ( ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",298,"['Delete Parameter', 'Insert Literal', 'Delete VariableRead']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Literal', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
254,254,public boolean METHOD_1 ( ) { return ( ( VAR_1 ) == null ) && ( ( VAR_2 ) == null ) ; },public boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator']",299,"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Insert Literal']","['Literal', 'FieldRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Literal', 'BinaryOperator', 'BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Literal', 'BinaryOperator', 'BinaryOperator', 'Literal']",Partial Match,0.5,0.75,0.75,0.75,6,2,2
255,255,"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_2 ( VAR_1 , VAR_3 ) ; }","['Insert ThisAccess', 'Delete TypeAccess']",300,"['Delete FieldRead', 'Insert ThisAccess']","['ThisAccess', 'TypeAccess']","['FieldRead', 'ThisAccess']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
256,256,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String value , java.lang.String VAR_6 , java.util.List < java.lang.String > VAR_7 ) ;","TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String value , java.lang.String VAR_6 ) ;","['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",302,['Delete Parameter'],"['TypeReference', 'TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
257,257,"public java.lang.String METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { TYPE_1 writer = new TYPE_1 ( ) ; METHOD_1 ( writer , VAR_1 , true ) ; return VAR_2 . toString ( ) ; }","public java.lang.String METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { TYPE_1 writer = new TYPE_1 ( ) ; METHOD_1 ( writer , VAR_1 , false ) ; return VAR_2 . toString ( ) ; }",['Update Literal'],303,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
258,258,public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } else { METHOD_3 ( true ) ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },['Delete Literal'],304,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
259,259,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) , true ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },['Delete Literal'],305,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
260,260,"public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( state ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; return new TYPE_1 ( VAR_3 ) ; }","public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( state ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; return new TYPE_1 ( VAR_3 ) ; }","['Delete VariableRead', 'Delete Invocation']",306,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
261,261,private boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( VAR_2 ) ) != null ; },private boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( VAR_2 ) ) == null ; },['Update BinaryOperator'],311,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
262,262,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 [ ] VAR_2 = this . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 . length ) == 0 ) { return null ; } return VAR_2 [ 0 ] ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 [ ] VAR_2 = this . METHOD_2 ( VAR_1 ) ; return VAR_2 [ 0 ] ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",312,"['Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['FieldRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Literal', 'BinaryOperator', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
263,263,public static int METHOD_1 ( final byte b ) { int VAR_1 = b ; if ( b < 0 ) { VAR_1 = b + INT_1 ; } return VAR_1 ; },private static int METHOD_1 ( final byte b ) { int VAR_1 = b ; if ( b < 0 ) { VAR_1 = b + INT_1 ; } return VAR_1 ; },['Update Wra'],313,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
264,264,private TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_2 ) ) ; this . VAR_2 . METHOD_4 ( ) ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_2 ) ) ; this . VAR_2 . METHOD_4 ( ) ; return this ; },['Update Wra'],314,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
265,265,public void METHOD_1 ( java.util.ArrayList < java.lang.Integer > values ) { VAR_1 = new java.util.ArrayList < java.lang.Integer > ( values ) ; VAR_2 = new java.util.ArrayList < java.lang.Integer > ( values ) ; },public void METHOD_1 ( java.util.ArrayList < java.lang.Integer > values ) { VAR_1 = values ; VAR_2 = values ; },"['Move VariableRead', 'Move VariableRead', 'Delete ConstructorCall', 'Delete ConstructorCall']",315,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['VariableRead', 'VariableRead', 'ConstructorCall', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",Partial Match,0.3333333333333333,0.2,0.25,0.22222222222222224,1,4,3
266,266,private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } else { VAR_2 . start ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } else { VAR_2 . start ( ) ; } },['Update Wra'],316,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
267,267,"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( this ) ; return VAR_3 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { super . METHOD_1 ( intent , VAR_1 , VAR_2 ) ; java.lang.System.out.print ( STRING_1 ) ; TYPE_1 . METHOD_2 ( this ) ; return VAR_3 ; }",['Update Invocation'],317,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
268,268,"private TYPE_1 METHOD_1 ( ) { long startTime = TYPE_2 . METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , STRING_1 , VAR_4 , VAR_5 ) ; VAR_6 = ( TYPE_2 . METHOD_2 ( ) ) - startTime ; return VAR_1 ; }","private TYPE_1 METHOD_1 ( ) { long startTime = TYPE_2 . METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , STRING_1 , VAR_4 , false ) ; VAR_6 = ( TYPE_2 . METHOD_2 ( ) ) - startTime ; return VAR_1 ; }","['Insert Literal', 'Delete TypeAccess']",318,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
269,269,"private static long METHOD_1 ( long VAR_1 , double VAR_2 ) { return 0 ; }","private static native long METHOD_1 ( long VAR_1 , double VAR_2 ) ;","['Insert Wra', 'Delete Literal', 'Delete Return']",319,"['Insert Wra', 'Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.6,1.0,0.7499999999999999,3,2,0
270,270,private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return null ; },private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete Literal', 'Delete Return']",321,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
271,271,public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { VAR_2 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { VAR_2 . METHOD_1 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } },['Update Invocation'],322,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
272,272,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }",['Delete Literal'],323,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
273,273,"public static boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { java.lang.String VAR_4 = ( ( TYPE_2 . METHOD_2 ( ) ) + STRING_1 ) + VAR_3 ; return TYPE_3 . METHOD_3 ( VAR_1 , VAR_2 , VAR_4 ) ; }","public static boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { java.lang.String VAR_4 = ( ( TYPE_2 . METHOD_2 ( ) ) + STRING_1 ) + VAR_3 ; return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_4 ) ; }",['Update Invocation'],324,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
274,274,"public void METHOD_1 ( ) throws java.lang.Exception { try { METHOD_2 ( 0 ) ; METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) ) ; } finally { METHOD_3 ( ) ; } }","public void METHOD_1 ( ) throws java.lang.Exception { try { METHOD_2 ( 0 ) ; METHOD_2 ( STRING_1 , STRING_2 , null ) ; } finally { METHOD_3 ( ) ; } }","['Insert Literal', 'Delete ConstructorCall']",326,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
275,275,"public void METHOD_1 ( ) { for ( java.lang.Integer VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , VAR_3 ) ; } }",public void METHOD_1 ( ) { for ( java.lang.Integer VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 ) ; } },['Delete TypeAccess'],327,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
276,276,"static TYPE_1 METHOD_1 ( java.io.InputStream VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 , VAR_3 ) ; }","static TYPE_1 METHOD_1 ( java.io.InputStream VAR_1 , int VAR_2 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 , 0 ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",329,"['Delete Parameter', 'Insert Literal']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Literal']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
277,277,"private int METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { VAR_1 . METHOD_2 ( ) ; int VAR_2 = java.lang.Integer.parseInt ( VAR_3 . getText ( ) ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; return VAR_2 ; }","private int METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 { VAR_1 . METHOD_2 ( ) ; int VAR_2 = java.lang.Integer.parseInt ( VAR_3 . getName ( ) ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; return VAR_2 ; }",['Update Invocation'],330,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
278,278,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_3 ( METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",331,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
279,279,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( STRING_1 ) ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) ; },"['Delete TypeReference', 'Delete Parameter']",332,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
280,280,"public int METHOD_1 ( TYPE_1 a , TYPE_1 b ) { return VAR_1 . getName ( ) . METHOD_2 ( VAR_2 . getName ( ) ) ; }","public int METHOD_1 ( TYPE_1 a , TYPE_1 b ) { return VAR_1 . getName ( ) . compareTo ( VAR_2 . getName ( ) ) ; }",['Update Invocation'],333,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
281,281,"protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( 1 , false ) ; }",protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( false ) ; },"['Update ConstructorCall', 'Delete Literal']",334,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
282,282,"public static void error ( java.lang.Exception VAR_1 ) { VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) , true , new java.util.Date ( ) ) ; }","public static void error ( java.lang.Exception VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) , true , new java.util.Date ( ) ) ; }","['Delete VariableRead', 'Delete Invocation']",335,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
283,283,"private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 . METHOD_2 ( ) ) ; }","private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 . METHOD_2 ( ) ) ; }",['Update BinaryOperator'],336,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
284,284,void METHOD_1 ( int position ) ;,void METHOD_1 ( int index ) ;,['Update Parameter'],337,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
285,285,public void METHOD_1 ( ) { VAR_1 [ index ] = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 [ index ] = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( ) ; },['Delete Invocation'],341,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
286,286,protected java.lang.Object [ ] METHOD_1 ( ) { return VAR_1 ; },protected java.lang.Object [ ] METHOD_1 ( ) { return this . VAR_1 ; },['Insert ThisAccess'],343,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
287,287,public double METHOD_1 ( ) { return y ; },public double METHOD_1 ( ) { return x ; },['Update FieldRead'],344,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
288,288,"public static void METHOD_1 ( int i ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , i ) . METHOD_5 ( ) ; }","public static void METHOD_1 ( int i ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , i ) . commit ( ) ; }",['Update Invocation'],345,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
289,289,"public java.lang.String update ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { VAR_4 . METHOD_1 ( VAR_2 ) ; return METHOD_2 ( VAR_3 ) ; }","public java.lang.String update ( TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { VAR_4 . METHOD_1 ( VAR_2 ) ; return METHOD_2 ( VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter']",346,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
290,290,"public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String state , java.lang.String VAR_1 ) ;",public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",347,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
291,291,"public java.lang.String METHOD_1 ( java.lang.Integer a , java.lang.Integer b ) { return STRING_1 ; }",public java.lang.String METHOD_1 ( ) { return STRING_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",348,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
292,292,"public static boolean METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_1 result = TYPE_3 . METHOD_2 ( item ) ; if ( result == null ) { return false ; } return VAR_1 . METHOD_3 ( result ) ; }","public static boolean METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_1 result = TYPE_3 . METHOD_2 ( item ) ; if ( result == null ) { return false ; } return VAR_1 . METHOD_3 ( item ) ; }",['Update VariableRead'],349,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
293,293,public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; return null ; },"['Insert Literal', 'Delete FieldRead']",350,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
294,294,void METHOD_1 ( int y ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",351,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
295,295,public void METHOD_1 ( TYPE_1 view ) { if ( ! ( VAR_1 . contains ( view ) ) ) { java.lang.System.err.println ( ( ( VAR_2 ) + STRING_1 ) ) ; return ; } VAR_1 . remove ( view ) ; },public void METHOD_1 ( TYPE_1 view ) { if ( ! ( VAR_1 . contains ( view ) ) ) { java.lang.System.err.println ( ( ( VAR_2 ) + STRING_1 ) ) ; return ; } VAR_1 . add ( view ) ; },['Update Invocation'],352,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
296,296,public TYPE_1 METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { return new TYPE_1 ( false ) ; } return METHOD_2 ( VAR_1 ) . not ( ) ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { return new TYPE_1 ( false ) ; } return new TYPE_1 ( true ) ; },"['Insert ConstructorCall', 'Insert Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",354,"['Delete Invocation', 'Delete Invocation', 'Insert ConstructorCall', 'Insert Literal']","['ConstructorCall', 'Literal', 'VariableRead', 'Invocation', 'Invocation']","['Invocation', 'Invocation', 'ConstructorCall', 'Literal']",GPT Missed Nodes,0.75,1.0,0.8,0.888888888888889,4,0,1
297,297,"public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; return new TYPE_2 ( VAR_1 , TYPE_3 . METHOD_2 ( type ) ) ; }",public TYPE_2 METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; return this ; },"['Update TypeReference', 'Insert ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall']",355,"['Update TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Parameter', 'Insert ThisAccess']","['TypeReference', 'ThisAccess', 'FieldRead', 'TypeAccess', 'FieldRead', 'Invocation', 'ConstructorCall']","['TypeReference', 'ConstructorCall', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'Parameter', 'ThisAccess']",Partial Match,0.625,0.625,0.7142857142857143,0.6666666666666666,5,3,2
298,298,"public void METHOD_1 ( char [ ] number , boolean VAR_1 ) { long num = java.lang.Long.parseLong ( java.lang.String . METHOD_2 ( number ) ) ; if ( VAR_2 . METHOD_3 ( num ) ) { VAR_3 . put ( num , VAR_1 ) ; } }","public void METHOD_1 ( char [ ] number , boolean VAR_1 ) { long num = java.lang.Long.parseLong ( java.lang.String . METHOD_2 ( number ) ) ; if ( VAR_3 . contains ( num ) ) { VAR_3 . put ( num , VAR_1 ) ; } }","['Update Invocation', 'Update TypeAccess']",356,['Update Invocation'],"['Invocation', 'TypeAccess']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
299,299,"private void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( this , VAR_1 ) ; VAR_3 . start ( ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( this , VAR_1 ) ; VAR_3 . start ( ) ; }",['Update Wra'],359,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
300,300,"private static void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 , TYPE_2 format , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_1 [ 1 ] [ format . METHOD_2 ( ) ] = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , true ) ; }","private static void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 , TYPE_2 format , int VAR_2 ) { VAR_1 [ 1 ] [ format . METHOD_2 ( ) ] = new TYPE_1 ( VAR_2 ) ; }","['Update ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal']",360,"['Delete Parameter', 'Delete Parameter', 'Delete Literal', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal']","['ConstructorCall', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'Literal']","['Parameter', 'Parameter', 'Literal', 'VariableRead', 'VariableRead', 'Literal']",GPT Missed Nodes,0.6,0.8333333333333334,0.625,0.7142857142857143,5,1,3
301,301,protected boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_2 ; } },protected boolean METHOD_1 ( ) { synchronized ( VAR_2 ) { return VAR_2 ; } },['Update FieldRead'],361,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
302,302,public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update Invocation'],362,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
303,303,"public static java.lang.String METHOD_1 ( java.lang.String name , java.lang.String value ) { return ( ( ( STRING_1 + ( VAR_1 . replaceAll ( STRING_2 , STRING_3 ) ) ) + STRING_4 ) + ( VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ) ) + STRING_5 ; }","public static java.lang.String METHOD_1 ( java.lang.String name , java.lang.String value ) { return ( ( ( STRING_1 + name ) + STRING_4 ) + ( VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ) ) + STRING_5 ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",364,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.4,0.5,2,1,3
304,304,protected TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) { VAR_2 = VAR_1 [ 0 ] ; VAR_3 = VAR_4 . url ; return TYPE_3 . METHOD_2 ( VAR_3 ) ; },protected TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) { VAR_2 = VAR_1 [ 0 ] ; VAR_3 = VAR_4 . url ; return METHOD_2 ( VAR_3 ) ; },['Update TypeAccess'],365,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
305,305,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) ;","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",366,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
306,306,public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",367,"['Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'Invocation']","['Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
307,307,public java.util.Set < java.lang.Object > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ( ( java.lang.Object ) ( this ) ) ) ; },public java.util.Set < java.lang.Object > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this ) ; },"['Update ThisAccess', 'Delete TypeReference']",368,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['ThisAccess', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference']",GPT Missed Nodes,0.5,0.3333333333333333,0.5,0.4,1,2,1
308,308,"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( getActivity ( ) , VAR_2 , null ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",369,"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'Invocation', 'TypeAccess', 'Literal', 'Invocation']","['TypeAccess', 'Invocation', 'Invocation', 'Literal']",Exact Match,1.0,1.0,0.8,0.888888888888889,4,0,1
309,309,"public java.lang.String getValue ( TYPE_1 type , int VAR_1 ) { return VAR_2 [ VAR_1 ] [ type . METHOD_1 ( ) ] ; }","public java.lang.String getValue ( TYPE_1 type , int VAR_1 ) { return rows [ ( VAR_1 + 1 ) ] [ type . METHOD_1 ( ) ] ; }","['Update FieldRead', 'Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",370,"['Update VariableRead', 'Insert BinaryOperator', 'Insert Literal']","['FieldRead', 'BinaryOperator', 'VariableRead', 'Literal']","['VariableRead', 'BinaryOperator', 'Literal']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
310,310,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 src , TYPE_2 VAR_2 ) { assert ( VAR_3 ) != null ; if ( VAR_3 . METHOD_2 ( VAR_1 , src , VAR_2 ) ) { METHOD_3 ( ) ; return true ; } else { return false ; } }","public boolean METHOD_1 ( TYPE_1 src , TYPE_2 VAR_2 ) { assert ( VAR_3 ) != null ; if ( VAR_3 . METHOD_2 ( this , src , VAR_2 ) ) { METHOD_3 ( ) ; return true ; } else { return false ; } }","['Insert ThisAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",372,"['Delete Parameter', 'Update Parameter', 'Insert ThisAccess']","['ThisAccess', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'ThisAccess']",GPT Missed Nodes,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
311,311,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 ;",public void METHOD_1 ( TYPE_2 VAR_2 ) throws TYPE_3 ;,"['Delete TypeReference', 'Delete Parameter']",373,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
312,312,public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; this . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; this . METHOD_4 ( ) ; },['Update Literal'],375,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
313,313,"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) , 0 ) ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; },['Delete Literal'],376,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
314,314,public java.util.Set < TYPE_1 > METHOD_1 ( ) { return new TYPE_2 < TYPE_1 > ( METHOD_2 ( ) . VAR_1 . values ( ) ) ; },public java.util.Set < TYPE_1 > METHOD_1 ( ) { return new java.util.HashSet < TYPE_1 > ( METHOD_2 ( ) . VAR_1 . values ( ) ) ; },['Update ConstructorCall'],377,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
315,315,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; },['Update Invocation'],378,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
316,316,"public static java.lang.Object [ ] METHOD_1 ( TYPE_1 TYPE_2 ) { return new java.lang.Object [ ] { TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) , VAR_1 . getId ( ) } ; }","public static java.lang.Object [ ] METHOD_1 ( TYPE_1 TYPE_2 ) { return new java.lang.Object [ ] { TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) } ; }","['Delete TypeAccess', 'Delete Invocation']",379,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
317,317,public void METHOD_1 ( java.lang.String content ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . equals ( content ) ) ) return ; VAR_1 = VAR_3 . trim ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String content ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . equals ( content ) ) ) return ; VAR_1 = content ; METHOD_2 ( ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",380,"['Delete TypeAccess', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
318,318,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ( ( java.lang.Integer ) ( VAR_1 . METHOD_4 ( ) ) ) ) ; VAR_2 . METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( position ) ; VAR_2 . METHOD_5 ( ) ; },"['Insert FieldRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']",381,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Insert VariableRead']","['FieldRead', 'TypeReference', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'FieldRead', 'VariableRead']",Exact Match,1.0,0.4,0.5,0.4444444444444445,2,3,2
319,319,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( ( STRING_1 + VAR_1 ) , VAR_2 ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; return this ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",382,"['Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
320,320,"public void METHOD_1 ( java.util.HashMap < java.lang.String , java.lang.String > VAR_1 , boolean VAR_2 ) throws java.io.IOException { this . VAR_3 = VAR_1 ; METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( java.util.HashMap < java.lang.String , java.lang.String > VAR_1 ) throws java.io.IOException { this . VAR_3 = VAR_1 ; METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",383,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
321,321,"public TYPE_1 METHOD_1 ( java.lang.String key , java.lang.Object value ) { VAR_1 . METHOD_1 ( key , value ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String key , java.lang.String value ) { VAR_1 . METHOD_1 ( key , value ) ; return this ; }",['Update TypeReference'],384,"['Update Parameter', 'Update TypeReference']",['TypeReference'],"['Parameter', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
322,322,TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) ;,TYPE_1 < java.lang.String > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",385,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
323,323,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_3 ( VAR_1 , VAR_4 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Delete TypeAccess']",386,"['Update Invocation', 'Delete VariableRead']","['Invocation', 'TypeAccess']","['Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
324,324,"public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_3 ( VAR_2 . compareTo ( STRING_1 ) ) . METHOD_4 ( 1 ) ; VAR_3 . assertEquals ( 1 , VAR_2 . compareTo ( STRING_1 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_3 ( VAR_2 . compareTo ( STRING_1 ) ) . METHOD_4 ( 1 ) ; assertEquals ( 1 , VAR_2 . compareTo ( STRING_1 ) ) ; }",['Update TypeAccess'],387,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
325,325,"public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; this . VAR_6 = VAR_1 . METHOD_2 ( this . VAR_6 , event . METHOD_3 ( ) , false ) ; }","public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; this . VAR_6 = VAR_1 . METHOD_2 ( this . VAR_6 , event . METHOD_3 ( ) ) ; }",['Delete Literal'],388,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
326,326,protected abstract int METHOD_1 ( TYPE_1 key ) ;,public abstract int METHOD_1 ( TYPE_1 key ) ;,['Update Wra'],389,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
327,327,public boolean isEmpty ( ) { return ( VAR_1 . equals ( VAR_2 ) ) && ( VAR_3 . equals ( VAR_4 ) ) ; },public boolean isEmpty ( ) { return ( VAR_1 . equals ( VAR_4 ) ) && ( VAR_3 . equals ( VAR_4 ) ) ; },['Update TypeAccess'],390,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
328,328,public boolean METHOD_1 ( ) { return METHOD_2 ( true ) ; },public boolean METHOD_1 ( ) { return METHOD_2 ( false ) ; },['Update Literal'],391,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
329,329,public void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( STRING_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } },public static void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } },"['Insert Wra', 'Delete TypeReference', 'Delete Parameter']",392,"['Delete Parameter', 'Insert Wra']","['Wra', 'TypeReference', 'Parameter']","['Parameter', 'Wra']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
330,330,public void METHOD_1 ( TYPE_1 target ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . add ( target ) ; } },private void METHOD_1 ( TYPE_1 target ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . add ( target ) ; } },['Update Wra'],394,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
331,331,"void METHOD_1 ( java.util.List < TYPE_1 > data , int position , java.lang.String VAR_1 , java.lang.String VAR_2 , double VAR_3 , java.lang.String VAR_4 , double VAR_5 ) ;","void METHOD_1 ( java.util.List < TYPE_1 > data , int position , java.lang.String VAR_1 , java.lang.String VAR_2 , double VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",395,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
332,332,"public void METHOD_1 ( TYPE_1 VAR_1 , float VAR_2 ) { VAR_3 . i ( STRING_1 , ( STRING_2 + VAR_2 ) ) ; VAR_4 . METHOD_2 ( ) ; listener . METHOD_3 ( java.lang.Math.round ( VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , float VAR_2 ) { VAR_3 . i ( STRING_1 , ( STRING_2 + VAR_2 ) ) ; listener . METHOD_3 ( java.lang.Math.round ( VAR_2 ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",397,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
333,333,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) <= INT_1 ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) <= 1 ; },"['Insert Literal', 'Delete FieldRead']",399,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
334,334,private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( true ) ; },"['Delete VariableRead', 'Delete Invocation']",400,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
335,335,public java.lang.Double METHOD_1 ( ) { return this . VAR_1 ; },public java.lang.String METHOD_1 ( ) { return this . VAR_1 ; },['Update TypeReference'],402,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
336,336,private void METHOD_1 ( java.lang.String pattern ) { VAR_1 . add ( pattern ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String pattern ) { VAR_1 . add ( pattern ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },['Update Wra'],403,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
337,337,"public void METHOD_1 ( java.awt.Color VAR_1 ) { for ( TYPE_1 [ ] VAR_2 : VAR_3 ) for ( TYPE_1 VAR_4 : VAR_2 ) VAR_5 . METHOD_2 ( VAR_4 , VAR_1 ) ; }","private void METHOD_1 ( java.awt.Color VAR_1 ) { for ( TYPE_1 [ ] VAR_2 : VAR_3 ) for ( TYPE_1 VAR_4 : VAR_2 ) VAR_5 . METHOD_2 ( VAR_4 , VAR_1 ) ; }",['Update Wra'],404,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
338,338,public final int METHOD_1 ( ) { return VAR_1 . method ; },protected final int METHOD_1 ( ) { return VAR_1 . method ; },['Update Wra'],405,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
339,339,public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( ( VAR_1 != null ) && VAR_1 ) VAR_2 . setText ( METHOD_2 ( ) . getString ( VAR_3 ) ) ; else VAR_2 . setText ( METHOD_2 ( ) . getString ( VAR_4 ) ) ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 ) VAR_2 . setText ( METHOD_2 ( ) . getString ( VAR_3 ) ) ; else VAR_2 . setText ( METHOD_2 ( ) . getString ( VAR_4 ) ) ; },"['Move VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator']",406,"['Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal']","['VariableRead', 'VariableRead', 'Literal', 'BinaryOperator', 'BinaryOperator']","['BinaryOperator', 'FieldRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.4,0.5,2,1,3
340,340,protected final boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; return VAR_3 . remove ( VAR_2 ) ; },"protected final boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; return VAR_3 . remove ( VAR_2 , VAR_1 ) ; }",['Insert VariableRead'],407,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
341,341,"public void METHOD_1 ( int VAR_1 , TYPE_1 value ) { METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( buffer , value ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 value ) { METHOD_2 ( VAR_1 ) ; VAR_2 = 0 ; TYPE_2 . METHOD_3 ( buffer , value ) ; }","['Insert Literal', 'Delete VariableRead']",408,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
342,342,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; },['Update Wra'],409,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
343,343,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( INT_1 , 0 , INT_1 , 1 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( INT_1 , INT_1 , INT_1 , 1 ) ; }","['Insert TypeAccess', 'Delete Literal']",410,"['Delete Literal', 'Insert VariableRead']","['TypeAccess', 'Literal']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
344,344,public static void main ( java.lang.String [ ] args ) { TYPE_1 f = new TYPE_1 ( ) ; VAR_1 . add ( new TYPE_2 ( ) ) ; f . METHOD_1 ( ) ; f . METHOD_2 ( true ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 f = new TYPE_1 ( ) ; VAR_1 . add ( new TYPE_2 ( ) ) ; f . METHOD_2 ( true ) ; },"['Delete VariableRead', 'Delete Invocation']",411,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
345,345,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 ) ; },['Update TypeAccess'],413,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
346,346,"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this , VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , false ) , true ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this , VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , false ) ) ; }",['Delete Literal'],414,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
347,347,public void METHOD_1 ( ) { java.lang.System.out.println ( METHOD_2 ( ) . toString ( 0 ) ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( METHOD_2 ( ) . toString ( ) ) ; },['Delete Literal'],415,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
348,348,"public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 status = VAR_3 ; if ( METHOD_2 ( VAR_2 ) ) { status = VAR_4 . METHOD_3 ( VAR_1 ) ; } METHOD_4 ( ) ; return status ; }","public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 status = VAR_3 ; if ( METHOD_2 ( VAR_2 ) ) { status = VAR_4 . METHOD_3 ( VAR_1 ) ; } METHOD_4 ( status , VAR_2 ) ; return status ; }","['Insert VariableRead', 'Insert VariableRead']",416,"['Insert VariableRead', 'Insert VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
349,349,"public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { if ( VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( VAR_4 ) { return ; } TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { if ( VAR_4 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; return ; } TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move FieldRead', 'Move Return', 'Delete FieldRead', 'Delete Block', 'Delete If']",417,"['Delete If', 'Move TypeAccess', 'Move Invocation', 'Move VariableRead', 'Move VariableRead', 'Move Return']","['FieldRead', 'Return', 'FieldRead', 'Block', 'If']","['If', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'Return']",Partial Match,0.2857142857142857,0.3333333333333333,0.4,0.3636363636363636,2,4,3
350,350,"private byte [ ] METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 , long VAR_3 ) { return TYPE_2 . METHOD_2 ( VAR_4 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_5 ) , TYPE_2 . METHOD_5 ( VAR_2 ) , TYPE_2 . METHOD_5 ( VAR_3 ) ) ; }","private byte [ ] METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 , long VAR_3 ) { return TYPE_2 . METHOD_2 ( VAR_4 , VAR_1 . METHOD_1 ( ) . METHOD_4 ( VAR_5 ) , TYPE_2 . METHOD_5 ( VAR_2 ) , TYPE_2 . METHOD_5 ( VAR_3 ) ) ; }",['Update Invocation'],418,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
351,351,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) ;",public java.util.List < TYPE_1 > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",419,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
352,352,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 . assertEquals ( STRING_1 , true , VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; assertEquals ( STRING_1 , true , VAR_1 . METHOD_3 ( ) ) ; }",['Update TypeAccess'],420,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
353,353,private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) ; },private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) . getTime ( ) ) ; },['Update Invocation'],421,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
354,354,public void METHOD_1 ( TYPE_1 event ) { VAR_1 . init ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . init ( event ) ; },['Insert VariableRead'],422,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
355,355,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( new TYPE_3 ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( new TYPE_3 ( STRING_1 ) ) ; },"['Delete VariableRead', 'Delete Invocation']",423,"['Delete Invocation', 'Delete FieldRead']","['VariableRead', 'Invocation']","['Invocation', 'FieldRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
356,356,"public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , STRING_1 } ; }","public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 } ; }",['Delete FieldRead'],424,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
357,357,"public java.util.List < java.lang.Integer > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < java.lang.Integer > VAR_2 , java.util.List < java.lang.Integer > VAR_3 , TYPE_2 VAR_4 ) { return VAR_2 ; }","public java.util.List < java.lang.Integer > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < java.lang.Integer > VAR_2 , java.util.List < java.lang.Integer > VAR_3 , TYPE_2 VAR_4 ) { return null ; }","['Insert Literal', 'Delete VariableRead']",425,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
358,358,"void METHOD_1 ( java.lang.String id , java.lang.String name ) ;",void METHOD_1 ( java.lang.String id ) ;,"['Delete TypeReference', 'Delete Parameter']",427,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
359,359,"public int delete ( int VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 ;",public int delete ( int VAR_1 ) throws TYPE_1 ;,"['Delete TypeReference', 'Delete Parameter']",428,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
360,360,"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( context , VAR_1 . METHOD_3 ( ) , VAR_2 ) . show ( ) ; }",public void METHOD_1 ( android.view.View view ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",430,"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']","['TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation']","['TypeAccess', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']",Partial Match,0.5,0.6,0.42857142857142855,0.5,3,2,4
361,361,public synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },public synchronized void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; },['Update Invocation'],431,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
362,362,"public int remove ( TYPE_1 VAR_1 ) { final int index = VAR_2 . METHOD_1 ( VAR_1 ) ; if ( 0 <= index ) { VAR_3 . remove ( index ) ; } METHOD_2 ( VAR_4 , null , null ) ; return index ; }","public int remove ( TYPE_1 VAR_1 ) { final int index = VAR_2 . METHOD_1 ( VAR_1 ) ; if ( 0 < index ) { VAR_3 . remove ( index ) ; } METHOD_2 ( VAR_4 , null , null ) ; return index ; }",['Update BinaryOperator'],432,"['Delete Literal', 'Delete BinaryOperator', 'Insert Literal', 'Insert BinaryOperator']",['BinaryOperator'],"['Literal', 'BinaryOperator', 'Literal', 'BinaryOperator']",GPT Hallucinated Nodes,0.5,0.0,0.0,0.0,0,4,1
363,363,"public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; return VAR_3 . METHOD_1 ( VAR_2 , VAR_1 ) ; }","protected java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; return VAR_3 . METHOD_1 ( VAR_2 , VAR_1 ) ; }",['Update Wra'],434,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
364,364,public void METHOD_1 ( java.lang.String error ) { assertTrue ( false ) ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String error ) { },"['Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",435,"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']","['Literal', 'Invocation', 'TypeAccess', 'Invocation']","['TypeAccess', 'Literal', 'Invocation', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
365,365,"private void METHOD_1 ( ) { VAR_1 . add ( new TYPE_1 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_2 ( ) ; }","private void METHOD_1 ( ) { VAR_1 . add ( new TYPE_1 ( INT_2 , INT_2 ) ) ; VAR_2 . METHOD_2 ( ) ; }",['Update FieldRead'],436,['Update Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
366,366,"public static void METHOD_1 ( int i ) { new TYPE_1 ( ) . METHOD_2 ( VAR_1 , VAR_2 . get ( i ) . METHOD_3 ( ) ) ; VAR_2 . remove ( i ) ; }","public static void METHOD_1 ( int i ) { new TYPE_1 ( i ) . METHOD_2 ( VAR_1 , VAR_2 . get ( i ) . METHOD_3 ( ) ) ; }","['Update ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",437,"['Insert VariableRead', 'Delete Invocation', 'Delete Invocation']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation']","['VariableRead', 'Invocation', 'Invocation']",GPT Missed Nodes,0.5,0.3333333333333333,0.25,0.28571428571428575,1,2,3
367,367,"protected java.util.Map < java.lang.String , java.lang.Class < ? extends TYPE_1 > > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 class , STRING_2 , VAR_2 class , STRING_3 , VAR_3 class ) ; }","protected java.util.Map < java.lang.String , java.lang.Class < ? extends TYPE_1 > > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( STRING_2 , VAR_2 class , STRING_3 , VAR_3 class ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",438,"['Delete Literal', 'Delete TypeReference', 'Delete Literal', 'Delete TypeReference']","['TypeAccess', 'TypeAccess']","['Literal', 'TypeReference', 'Literal', 'TypeReference']",Partial Match,0.0,0.0,0.0,0.0,0,4,2
368,368,private boolean METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_2 . METHOD_1 ( VAR_1 ) ) { case 0 : TYPE_1 . METHOD_2 ( VAR_3 ) ; return true ; default : TYPE_1 . METHOD_3 ( VAR_4 ) ; return false ; } },private boolean METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_2 . METHOD_1 ( VAR_1 ) ) { case 0 : return true ; default : return false ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",440,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,4,2,2
369,369,protected TYPE_1 METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; },protected TYPE_1 METHOD_1 ( int index ) { return VAR_2 . get ( index ) ; },"['Update Parameter', 'Update VariableRead']",441,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
370,370,"private TYPE_1 METHOD_1 ( final long position ) { return VAR_1 [ TYPE_2 . METHOD_2 ( position , VAR_2 ) ] ; }","private TYPE_1 METHOD_1 ( final long position ) { return VAR_1 [ METHOD_2 ( position , VAR_2 ) ] ; }",['Update TypeAccess'],442,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
371,371,"void METHOD_1 ( java.lang.String VAR_1 , java.util.Set < java.lang.String > VAR_2 , java.util.List < java.util.Map < java.lang.String , java.lang.Object > > VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.Boolean VAR_6 ) throws TYPE_1 ;","void METHOD_1 ( java.util.Set < java.lang.String > VAR_2 , java.util.List < java.util.Map < java.lang.String , java.lang.Object > > VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.Boolean VAR_6 ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",444,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
372,372,java.lang.String METHOD_1 ( java.lang.String text ) throws java.lang.Exception { if ( VAR_1 . equals ( STRING_1 ) ) { return new java.lang.String ( STRING_2 ) ; } return null ; },java.lang.String METHOD_1 ( java.lang.String text ) throws java.lang.Exception { return null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return', 'Delete Block', 'Delete If']",446,"['Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'ConstructorCall', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Literal', 'Invocation', 'ConstructorCall', 'Literal']",Partial Match,0.5,0.6666666666666666,0.5,0.5714285714285715,4,2,4
373,373,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; return STRING_2 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_1 ( ) ) ; return STRING_2 ; }",['Update Invocation'],447,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
374,374,"public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , 0 , 0 , 0 , 0 ) ; }","public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 , 0 , 0 , 0 ) ; }",['Update Invocation'],448,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
375,375,"public void METHOD_1 ( java.lang.String id ) { METHOD_1 ( VAR_1 . item ( id ) , 1 ) ; }",public void METHOD_1 ( java.lang.String id ) { METHOD_1 ( VAR_1 . item ( id ) ) ; },['Delete Literal'],449,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
376,376,protected void METHOD_1 ( java.lang.Void result ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } METHOD_3 ( STRING_1 ) ; },protected void METHOD_1 ( java.lang.Void result ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } METHOD_3 ( ) ; },['Delete TypeAccess'],450,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
377,377,"public void METHOD_1 ( java.lang.String value ) throws TYPE_1 { METHOD_2 ( STRING_1 , value , true , true ) ; }","public void METHOD_1 ( java.lang.String value ) throws TYPE_1 { METHOD_2 ( STRING_1 , value , true ) ; }",['Delete Literal'],451,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
378,378,"public abstract TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) ;","public abstract TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",452,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
379,379,public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; },['Update ConstructorCall'],453,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
380,380,"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( false , new TYPE_2 ( ) , new TYPE_2 ( ) ) ; VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 = new TYPE_4 ( INT_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( false ) ; VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 = new TYPE_4 ( INT_1 ) ; },"['Update ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall']",454,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference']","['ConstructorCall', 'ConstructorCall', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,0.6666666666666666,0.5714285714285715,2,2,1
381,381,"public TYPE_1 METHOD_1 ( final long VAR_1 , final int offset , final int VAR_2 , final java.lang.String VAR_3 ) { return VAR_4 . METHOD_1 ( VAR_1 , offset , VAR_2 , TYPE_2 . METHOD_2 ( VAR_3 ) ) ; }","public TYPE_1 METHOD_1 ( final long VAR_1 , final int offset , final int VAR_2 , final TYPE_2 VAR_3 ) { return VAR_4 . METHOD_1 ( VAR_1 , offset , VAR_2 , VAR_3 ) ; }","['Update TypeReference', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",455,"['Update TypeReference', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
382,382,public void METHOD_1 ( final TYPE_1 VAR_1 ) { for ( final TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( final TYPE_1 VAR_1 ) { for ( final TYPE_2 VAR_2 : this . VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },['Insert ThisAccess'],456,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
383,383,protected synchronized void METHOD_1 ( TYPE_1 obj ) { VAR_1 . remove ( obj . METHOD_2 ( ) ) ; },public synchronized void METHOD_1 ( TYPE_1 obj ) { VAR_1 . remove ( obj . METHOD_2 ( ) ) ; },['Update Wra'],457,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
384,384,public static synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( ) ; return VAR_2 ; },"['Delete Wra', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",458,"['Delete Wra', 'Delete Parameter', 'Delete VariableRead']","['Wra', 'TypeReference', 'Parameter', 'VariableRead']","['Wra', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
385,385,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 params ) throws java.lang.Exception { final TYPE_3 VAR_2 = new TYPE_3 ( params ) ; final TYPE_4 VAR_3 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , params . METHOD_4 ( ) , VAR_3 ) ; return VAR_3 ; }","private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 params ) throws java.lang.Exception { final TYPE_3 VAR_2 = new TYPE_3 ( params ) ; final TYPE_4 VAR_3 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; return VAR_3 ; }","['Delete VariableRead', 'Delete Invocation']",459,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
386,386,"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null == ( VAR_2 ) ) { VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 , null ) ; } VAR_2 . METHOD_3 ( VAR_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null == ( VAR_2 ) ) { VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 ) ; } VAR_2 . METHOD_3 ( VAR_1 ) ; },['Delete Literal'],461,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
387,387,"public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) [ 0 ] ) ) ; view = ( ( TYPE_2 ) ( METHOD_2 ( ) [ 1 ] ) ) ; METHOD_3 ( new TYPE_3 ( this , INT_1 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) [ 0 ] ) ) ; view = ( ( TYPE_2 ) ( METHOD_2 ( ) [ 1 ] ) ) ; METHOD_3 ( new TYPE_3 ( this , 1 ) ) ; }","['Update ConstructorCall', 'Insert Literal', 'Delete FieldRead']",462,"['Delete TypeAccess', 'Delete FieldRead', 'Insert Literal']","['ConstructorCall', 'Literal', 'FieldRead']","['TypeAccess', 'FieldRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
388,388,public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) { return ; } for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",463,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.16666666666666666,0.2857142857142857,1,0,5
389,389,public final void start ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; VAR_3 = TYPE_2 . METHOD_1 ( ) ; },public final void start ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; },"['Insert ConstructorCall', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",465,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall', 'Insert VariableRead']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
390,390,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },['Insert ThisAccess'],466,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
391,391,"private java.lang.String METHOD_1 ( java.lang.String str ) { return VAR_1 . replace ( STRING_1 , STRING_2 ) . replace ( STRING_3 , STRING_4 ) . replace ( ""\n"" , STRING_5 ) . replace ( STRING_6 , STRING_7 ) ; }","private java.lang.String METHOD_1 ( java.lang.String str ) { return VAR_1 . replace ( STRING_3 , STRING_4 ) . replace ( ""\n"" , STRING_5 ) . replace ( STRING_6 , STRING_7 ) . replace ( STRING_1 , STRING_2 ) ; }","['Insert Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Move Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Move TypeAccess', 'Delete Invocation']",467,['Move Invocation'],"['Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.125,0.2222222222222222,1,0,7
392,392,"public void METHOD_1 ( int VAR_1 , boolean [ ] VAR_2 ) { METHOD_1 ( this . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) , null , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , boolean [ ] VAR_2 ) { METHOD_1 ( this . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) , VAR_2 ) ; }",['Delete Literal'],468,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
393,393,"public long METHOD_1 ( java.lang.String line ) throws TYPE_1 { java.lang.String VAR_1 = STRING_1 ; return java.lang.Long.parseLong ( METHOD_2 ( line , VAR_1 ) ) ; }","private long METHOD_1 ( java.lang.String line ) throws TYPE_1 { java.lang.String VAR_1 = STRING_1 ; return java.lang.Long.parseLong ( METHOD_2 ( line , VAR_1 ) ) ; }",['Update Wra'],469,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
394,394,"private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.util.Map < java.lang.String , TYPE_1 > VAR_2 ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 , STRING_1 , VAR_2 ) ) ; }","private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.util.Set < java.lang.String > VAR_2 ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 , STRING_1 , VAR_2 ) ) ; }","['Update TypeReference', 'Delete TypeReference']",471,['Update TypeReference'],"['TypeReference', 'TypeReference']",['TypeReference'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
395,395,private void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; VAR_2 = 0 ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; VAR_2 = 0 ; METHOD_2 ( ) ; },['Update Invocation'],472,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
396,396,"private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_4 , VAR_5 . key , java.lang.String . METHOD_2 ( VAR_3 ) ) ; }","private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_4 , VAR_5 . key , VAR_3 ) ; }","['Update TypeReference', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",473,"['Update TypeReference', 'Update Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Insert VariableRead']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
397,397,"protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getActivity ( ) ) . content ( VAR_2 ) . METHOD_2 ( true , 0 ) . show ( ) ; }","protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getContext ( ) ) . content ( VAR_2 ) . METHOD_2 ( true , 0 ) . show ( ) ; }",['Update Invocation'],474,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
398,398,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_5 = new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; }",public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_5 = new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; },['Delete FieldRead'],475,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
399,399,"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; VAR_3 = TYPE_3 . METHOD_3 ( this ) ; VAR_4 = new TYPE_4 ( ) . METHOD_4 ( VAR_5 , VAR_6 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; VAR_3 = TYPE_3 . METHOD_3 ( this ) ; VAR_4 = TYPE_4 . METHOD_4 ( VAR_5 , VAR_6 ) ; }","['Insert TypeAccess', 'Delete ConstructorCall']",477,"['Delete ConstructorCall', 'Delete Invocation', 'Insert TypeAccess', 'Insert Invocation']","['TypeAccess', 'ConstructorCall']","['ConstructorCall', 'Invocation', 'TypeAccess', 'Invocation']",GPT Hallucinated Nodes,0.6666666666666666,0.5,1.0,0.6666666666666666,2,2,0
400,400,"public void METHOD_1 ( ) { for ( TYPE_1 < java.lang.String , java.lang.String > index : this . VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + index ) ) ; } }","public void METHOD_1 ( ) { for ( TYPE_1 < java.lang.String , java.lang.String > index : this . VAR_1 ) { java.lang.System.out.println ( index ) ; } }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",478,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
401,401,public char METHOD_1 ( char c ) { TYPE_1 VAR_1 = VAR_2 . get ( TYPE_1 . METHOD_2 ( c ) ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } return VAR_3 ; },public char METHOD_1 ( char c ) { TYPE_1 VAR_1 = VAR_2 . get ( new TYPE_1 ( c ) ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } return VAR_3 ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",479,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
402,402,"protected void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + result ) ) ; }","protected void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; TYPE_1 . METHOD_2 ( STRING_1 , result ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",480,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
403,403,"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",481,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
404,404,"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) . setValue ( new TYPE_1 ( VAR_3 . getText ( ) . toString ( ) , TYPE_2 . METHOD_3 ( ) , VAR_4 ) ) ; VAR_3 . setText ( STRING_1 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) . setValue ( new TYPE_1 ( VAR_3 . getText ( ) . toString ( ) , VAR_4 ) ) ; VAR_3 . setText ( STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",482,"['Delete TypeAccess', 'Delete Invocation']","['TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
405,405,public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { main . METHOD_1 ( ) ; },"['Insert FieldRead', 'Delete TypeAccess']",483,"['Delete TypeAccess', 'Insert VariableRead']","['FieldRead', 'TypeAccess']","['TypeAccess', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
406,406,public int METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return VAR_1 . get ( ) ; } else { return super . METHOD_1 ( ) ; } },public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return VAR_1 . get ( ) ; } else { return super . METHOD_1 ( ) ; } },['Update TypeReference'],484,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
407,407,public boolean METHOD_1 ( ) { return ( VAR_1 ) && ( VAR_2 ) ; },public boolean METHOD_1 ( ) { return VAR_2 ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",485,"['Delete VariableRead', 'Delete BinaryOperator']","['FieldRead', 'FieldRead', 'BinaryOperator']","['VariableRead', 'BinaryOperator']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
408,408,public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; java.lang.System.exit ( INT_1 ) ; },private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; java.lang.System.exit ( INT_1 ) ; },['Update Wra'],486,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
409,409,"private static boolean METHOD_1 ( final java.lang.String name , final boolean VAR_1 ) { final java.lang.String value = TYPE_1 . METHOD_2 ( name , java.lang.String . METHOD_3 ( VAR_1 ) ) ; return java.lang.Boolean . METHOD_4 ( value ) ; }","private static boolean METHOD_1 ( final java.lang.String name , final boolean VAR_1 ) { final java.lang.String value = TYPE_1 . METHOD_2 ( name , new java.lang.Boolean ( VAR_1 ) . toString ( ) ) ; return java.lang.Boolean . METHOD_4 ( value ) ; }","['Update Invocation', 'Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess']",487,"['Insert ConstructorCall', 'Insert Invocation', 'Delete TypeAccess', 'Delete Invocation']","['Invocation', 'ConstructorCall', 'VariableRead', 'TypeAccess']","['ConstructorCall', 'Invocation', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.75,0.5,0.5,0.5,2,2,2
410,410,"public static TYPE_1 METHOD_1 ( java.util.Date date , int VAR_1 ) { return TYPE_2 . METHOD_2 ( date , VAR_2 , VAR_1 ) ; }","public static TYPE_1 METHOD_1 ( java.util.Date date , int VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( ) , VAR_2 , VAR_1 ) ; }","['Insert ConstructorCall', 'Delete VariableRead']",488,"['Insert ConstructorCall', 'Delete VariableRead']","['ConstructorCall', 'VariableRead']","['ConstructorCall', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
411,411,void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_1 ) ; },['Insert VariableRead'],489,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
412,412,public void METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { super . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { super . METHOD_1 ( VAR_1 ) ; },['Update Invocation'],490,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
413,413,private TYPE_1 METHOD_1 ( TYPE_1 date ) { return TYPE_2 . METHOD_2 ( date ) . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) . METHOD_6 ( ) ; },private TYPE_1 METHOD_1 ( TYPE_1 date ) { return date . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) . METHOD_6 ( ) ; },"['Update Invocation', 'Move Invocation', 'Update Invocation', 'Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",491,"['Delete TypeAccess', 'Delete Invocation']","['Invocation', 'Invocation', 'Invocation', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.2857142857142857,0.4444444444444445,2,0,5
414,414,"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.Throwable t ) { VAR_2 . error ( STRING_1 , t ) ; }","['Update Parameter', 'Update VariableRead']",492,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
415,415,"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ( VAR_3 . equals ( STRING_1 ) ) && ( VAR_4 . equals ( STRING_2 ) ) ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return false ; }","['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",493,"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Insert Literal']","['Literal', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'BinaryOperator']","['VariableRead', 'Invocation', 'Literal', 'VariableRead', 'Invocation', 'Literal', 'BinaryOperator', 'Literal']",Partial Match,0.6,0.5,0.5,0.5,4,4,4
416,416,public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( 1 ) ; TYPE_2 msg = VAR_2 . METHOD_3 ( ) ; VAR_3 = INT_1 ; VAR_4 . obj = VAR_1 ; VAR_2 . METHOD_4 ( msg ) ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( 1 ) ; TYPE_2 msg = VAR_2 . METHOD_3 ( ) ; VAR_3 = 1 ; VAR_4 . obj = VAR_1 ; VAR_2 . METHOD_4 ( msg ) ; },"['Insert Literal', 'Delete FieldRead']",494,"['Delete TypeAccess', 'Delete FieldRead', 'Insert Literal']","['Literal', 'FieldRead']","['TypeAccess', 'FieldRead', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
417,417,"TYPE_1 < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , TYPE_3 ;","TYPE_1 < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_3 ;",['Delete TypeReference'],495,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
418,418,private final void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) < VAR_1 ) { VAR_2 = ( VAR_3 ) - ( VAR_1 - ( VAR_2 ) ) ; } else { VAR_2 = ( VAR_2 ) - VAR_1 ; } },private final void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) < VAR_1 ) { VAR_2 = ( VAR_3 ) - ( VAR_1 - ( VAR_2 ) ) ; } else { VAR_2 = ( VAR_2 ) - 1 ; } },"['Insert Literal', 'Delete VariableRead']",496,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
419,419,public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; out . METHOD_2 ( ( ( ( ( STRING_2 + ( name ) ) + STRING_3 ) + VAR_1 ) + STRING_4 ) ) ; out . METHOD_3 ( ) ; },"public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; out . METHOD_2 ( ( ( ( ( STRING_2 + ( name ) ) + STRING_3 ) + VAR_1 ) + ""\n"" ) ) ; out . METHOD_3 ( ) ; }","['Insert Literal', 'Delete FieldRead']",498,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
420,420,public int [ ] [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this . VAR_1 ) ; },public int [ ] [ ] METHOD_1 ( ) { return VAR_1 ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",499,"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Move VariableRead']","['FieldRead', 'TypeAccess', 'ThisAccess', 'FieldRead', 'Invocation']","['TypeAccess', 'Invocation', 'ThisAccess', 'FieldRead', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.8,0.8,0.8000000000000002,4,1,1
421,421,private boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_2 ; } },private boolean METHOD_1 ( ) { synchronized ( VAR_2 ) { return VAR_2 ; } },['Update FieldRead'],500,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
422,422,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Invocation']",502,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
423,423,"protected java.lang.Object METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) throws java.io.IOException { TYPE_3 b = ( ( TYPE_3 ) ( super . METHOD_1 ( null , VAR_2 , VAR_3 ) ) ) ; return VAR_4 . build ( ) ; }","protected java.lang.Object METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) throws java.io.IOException { TYPE_3 b = ( ( TYPE_3 ) ( super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ) ) ; return VAR_4 . build ( ) ; }","['Insert VariableRead', 'Delete Literal']",505,"['Delete Literal', 'Insert VariableRead']","['VariableRead', 'Literal']","['Literal', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
424,424,private void METHOD_1 ( ) throws TYPE_1 { if ( ( this . VAR_1 ) != null ) { TYPE_2 . METHOD_1 ( this . VAR_1 ) ; this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } },private void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Insert Invocation', 'Insert Invocation', 'Move TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess']",506,"['Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'ThisAccess', 'ThisAccess', 'FieldRead', 'Invocation', 'ThisAccess', 'FieldRead', 'Invocation', 'ThisAccess']","['ThisAccess', 'ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.25,1.0,0.23076923076923078,0.375,3,0,10
425,425,public void METHOD_1 ( TYPE_1 node ) { this . VAR_1 = node ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 node ) { this . VAR_1 = node ; METHOD_2 ( false ) ; },['Insert Literal'],507,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
426,426,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { new TYPE_4 ( ) . execute ( ) ; return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Delete ConstructorCall', 'Delete Invocation']",508,"['Delete ConstructorCall', 'Delete Invocation']","['ConstructorCall', 'Invocation']","['ConstructorCall', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
427,427,public static boolean METHOD_1 ( java.lang.Object ... VAR_1 ) { for ( java.lang.Object item : VAR_1 ) { if ( item != null ) { return true ; } } return false ; },public static boolean METHOD_1 ( java.lang.Object ... VAR_1 ) { for ( java.lang.Object item : VAR_1 ) { if ( item != null ) { return true ; } } return true ; },['Update Literal'],509,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
428,428,"public static TYPE_1 error ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return new TYPE_1 ( VAR_1 , TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; }","public static TYPE_1 error ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return new TYPE_1 ( VAR_1 , TYPE_2 . METHOD_1 ( VAR_2 ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",510,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
429,429,"public void METHOD_1 ( android.view.View view ) { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , false ) ; }",public void METHOD_1 ( android.view.View view ) { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; },['Delete Literal'],511,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
430,430,"public boolean METHOD_1 ( int VAR_1 , int id ) { return ( ( VAR_1 == ( VAR_2 ) ? ( this . METHOD_2 ( VAR_1 ) ) & INT_1 : this . METHOD_3 ( VAR_1 ) ) & ( 1L < < id ) ) > 0 ; }","public boolean METHOD_1 ( int VAR_1 , int id ) { return ( ( VAR_1 == ( VAR_2 ) ? ( this . METHOD_2 ( VAR_1 ) ) & INT_1 : this . METHOD_3 ( VAR_1 ) ) & ( 1 < < id ) ) > 0 ; }",['Update Literal'],512,"['Delete Literal', 'Insert Literal']",['Literal'],"['Literal', 'Literal']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
431,431,"private void METHOD_1 ( java.lang.String answer ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , answer ) ; METHOD_2 ( ) . METHOD_3 ( STRING_2 , STRING_3 ) ; METHOD_4 ( ) ; }","private void METHOD_1 ( java.lang.String answer ) { METHOD_4 ( answer ) ; METHOD_2 ( ) . METHOD_3 ( STRING_1 , answer ) ; }","['Move Invocation', 'Insert VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",513,"['Insert VariableRead', 'Insert Parameter', 'Delete Invocation', 'Delete Invocation']","['Invocation', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['VariableRead', 'Parameter', 'Invocation', 'Invocation']",Partial Match,0.5,0.75,0.5,0.6,3,1,3
432,432,public boolean METHOD_1 ( ) { return ( this . VAR_1 ) > 0 ; },public boolean METHOD_1 ( ) { return ( this . VAR_1 ) != 0 ; },['Update BinaryOperator'],514,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
433,433,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; },"['Update TypeReference', 'Move VariableRead', 'Delete Invocation']",515,"['Update TypeReference', 'Delete Invocation', 'Delete FieldRead']","['TypeReference', 'VariableRead', 'Invocation']","['TypeReference', 'Invocation', 'FieldRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
434,434,public java.util.Set < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { return this . VAR_1 . METHOD_1 ( ) ; },public java.util.Set < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_1 ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",516,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
435,435,"private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( 0 , null , this ) ; }","private void METHOD_1 ( ) { METHOD_3 ( ) . METHOD_4 ( 0 , null , this ) ; }",['Delete Invocation'],517,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
436,436,double METHOD_1 ( ) throws java.lang.Exception { return java.lang.Double . METHOD_2 ( this . METHOD_3 ( ) ) ; },double METHOD_1 ( ) throws java.lang.Exception { return java.lang.Double . METHOD_2 ( METHOD_3 ( ) ) ; },['Delete ThisAccess'],518,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
437,437,protected java.lang.String METHOD_1 ( ) { return new java.lang.String ( this . VAR_1 ) ; },public java.lang.String METHOD_1 ( ) { return new java.lang.String ( this . VAR_1 ) ; },['Update Wra'],519,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
438,438,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( STRING_1 , VAR_4 ) ; VAR_5 . show ( VAR_2 , STRING_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( STRING_1 , position ) ; VAR_5 . show ( VAR_2 , STRING_2 ) ; }","['Insert FieldRead', 'Delete TypeAccess']",521,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
439,439,"private static float METHOD_1 ( final float value , final float min , final float VAR_1 ) { if ( min == VAR_1 ) { return FLOAT_1 ; } return ( value - min ) / ( VAR_1 - min ) ; }","private static float METHOD_1 ( final float value , final float min , final float VAR_1 ) { return ( value - min ) / ( VAR_1 - min ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",522,"['Delete If', 'Delete Literal', 'Delete Return']","['VariableRead', 'VariableRead', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If']","['If', 'Literal', 'Return']",Partial Match,0.2857142857142857,0.6666666666666666,0.2857142857142857,0.4,2,1,5
440,440,"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { if ( VAR_3 != null ) { TYPE_2 . METHOD_2 ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; } }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { if ( VAR_3 != null ) TYPE_2 . METHOD_2 ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; else { } }",['Insert Block'],523,"['Delete Block', 'Insert Block']",['Block'],"['Block', 'Block']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
441,441,"public TYPE_1 METHOD_1 ( int position ) { return TYPE_2 . METHOD_2 ( VAR_1 . get ( position ) . VAR_2 , position ) ; }",public TYPE_1 METHOD_1 ( int position ) { return TYPE_2 . METHOD_2 ( VAR_1 . get ( position ) . VAR_2 ) ; },['Delete VariableRead'],524,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
442,442,"public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( INT_1 , INT_2 , INT_3 , INT_4 ) . METHOD_1 ( ) ; }","public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( INT_4 , INT_2 , INT_3 , INT_4 ) . METHOD_1 ( ) ; }",['Update FieldRead'],525,['Update Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
443,443,"public java.lang.String METHOD_1 ( java.lang.String ... params ) { return ( VAR_1 . METHOD_2 ( ) . replace ( STRING_1 , VAR_2 . getConfig ( ) . getString ( STRING_2 ) ) ) + ( METHOD_3 ( params ) ) ; }","private java.lang.String METHOD_1 ( java.lang.String ... params ) { return ( VAR_1 . METHOD_2 ( ) . replace ( STRING_1 , VAR_2 . getConfig ( ) . getString ( STRING_2 ) ) ) + ( METHOD_3 ( params ) ) ; }",['Update Wra'],526,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
444,444,public static boolean METHOD_1 ( java.lang.Integer VAR_1 ) { return VAR_1 >= 0 ; },public static boolean METHOD_1 ( java.lang.Integer VAR_1 ) { return VAR_1 > 0 ; },['Update BinaryOperator'],527,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
445,445,"public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . assertNotNull ( VAR_1 ) ; org.testng.Assert.assertEquals ( VAR_1 , VAR_4 ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; assertNotNull ( VAR_1 ) ; org.testng.Assert.assertEquals ( VAR_1 , VAR_4 ) ; }",['Update TypeAccess'],528,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
446,446,"public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( int VAR_1 ) { return this . METHOD_1 ( VAR_1 , false ) ; }","public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( int VAR_1 ) { return this . METHOD_1 ( VAR_1 , true ) ; }",['Update Literal'],529,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
447,447,"protected TYPE_1 getValue ( java.lang.Object VAR_1 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , VAR_2 , null , null ) ; }","protected TYPE_1 getValue ( java.lang.Object VAR_1 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , VAR_2 ) ; }","['Delete Literal', 'Delete Literal']",530,"['Delete Literal', 'Delete Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
448,448,"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < TYPE_1 > VAR_2 , int select ) { VAR_3 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , select ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { VAR_3 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , 0 ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",531,"['Delete Parameter', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'Literal']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
449,449,"public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String label ) { TYPE_2 . METHOD_1 ( VAR_1 , label , ( - 1 ) , ( - 1 ) , 0.0F ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String label ) { TYPE_2 . METHOD_1 ( VAR_1 , label , ( - 1 ) , ( - 1 ) ) ; }",['Delete Literal'],532,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
450,450,"public static void handle ( final java.lang.String info , final java.lang.Throwable VAR_1 , java.lang.Class < ? > VAR_2 , boolean VAR_3 ) { VAR_4 . handle ( info , VAR_1 , true , VAR_2 , null , null , VAR_3 ) ; }","public static void handle ( final java.lang.String info , final java.lang.Exception VAR_1 , java.lang.Class < ? > VAR_2 , boolean VAR_3 ) { VAR_4 . handle ( info , VAR_1 , true , VAR_2 , null , null , VAR_3 ) ; }",['Update TypeReference'],533,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
451,451,void METHOD_1 ( ) { VAR_1 . remove ( ) ; },void METHOD_1 ( ) { VAR_1 . remove ( 0 ) ; },['Insert Literal'],534,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
452,452,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . id , VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; if ( METHOD_3 ( ) ) TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . id , VAR_1 ) ; if ( METHOD_3 ( ) ) TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; }","['Delete VariableRead', 'Delete Invocation']",536,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
453,453,"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; VAR_1 . METHOD_3 ( ) ; } else { TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; } else { TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ; } }","['Delete VariableRead', 'Delete Invocation']",537,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
454,454,public boolean METHOD_1 ( int VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; return false ; } return true ; },public boolean METHOD_1 ( int value ) { try { VAR_2 . METHOD_2 ( value ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; return false ; } return true ; },"['Update Parameter', 'Update VariableRead']",538,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
455,455,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },['Delete Invocation'],539,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
456,456,public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; } return VAR_1 ; },private static synchronized TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; } return VAR_1 ; },['Update Wra'],541,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
457,457,public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return this . VAR_1 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },['Delete ThisAccess'],542,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
458,458,"public TYPE_1 append ( java.lang.String fieldName , int value ) { if ( fieldName != null ) { METHOD_1 ( fieldName ) ; VAR_1 . METHOD_2 ( VAR_2 , value ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } return this ; }","public TYPE_1 append ( java.lang.String fieldName , int value ) { if ( fieldName != null ) { VAR_1 . METHOD_1 ( VAR_2 , fieldName ) ; VAR_1 . METHOD_2 ( VAR_2 , value ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete Return']",543,"['Delete Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert VariableRead', 'Delete Return', 'Delete ThisAccess']","['TypeAccess', 'ThisAccess', 'Return']","['Invocation', 'Invocation', 'VariableRead', 'VariableRead', 'Return', 'ThisAccess']",Partial Match,0.4,0.3333333333333333,0.6666666666666666,0.4444444444444444,2,4,1
459,459,private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; } },private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( false ) ; } },"['Insert Literal', 'Delete Invocation']",544,"['Delete Invocation', 'Insert Literal']","['Literal', 'Invocation']","['Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
460,460,"void METHOD_1 ( TYPE_1 view , int position , java.lang.String VAR_1 , java.lang.String type ) ;","void METHOD_1 ( TYPE_1 view , int position , java.lang.String VAR_1 ) ;","['Delete TypeReference', 'Delete Parameter']",545,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
461,461,public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_3 . METHOD_1 ( ) . METHOD_2 ( VAR_1 ) ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( ) . METHOD_2 ( VAR_1 ) ; },"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",548,"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']","['ConstructorCall', 'TypeAccess', 'Invocation']","['ConstructorCall', 'TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
462,462,public void METHOD_1 ( java.lang.String type ) { VAR_1 = type ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Parameter', 'Update VariableRead', 'Insert ThisAccess']",549,"['Update Parameter', 'Insert ThisAccess', 'Insert FieldWrite', 'Delete Assignment']","['Parameter', 'VariableRead', 'ThisAccess']","['Parameter', 'ThisAccess', 'FieldWrite', 'Assignment']",Partial Match,0.4,0.5,0.6666666666666666,0.5714285714285715,2,2,1
463,463,public boolean METHOD_1 ( ) { return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ; },private boolean METHOD_1 ( ) { return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ; },['Update Wra'],550,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
464,464,public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . info ( STRING_1 ) ; } java.lang.System.out.println ( STRING_2 ) ; java.lang.Thread . METHOD_1 ( INT_2 ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . info ( STRING_1 ) ; } java.lang.System.out.println ( STRING_2 ) ; java.lang.Thread . METHOD_1 ( INT_1 ) ; },['Update TypeAccess'],551,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
465,465,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( ) ; return STRING_1 + ( VAR_4 . path ( STRING_2 ) . METHOD_3 ( ) ) ; }",public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return list ( VAR_1 ) ; },"['Insert Invocation', 'Insert VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator']",552,"['Delete Parameter', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Update Invocation']","['Invocation', 'VariableRead', 'TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'BinaryOperator']","['Parameter', 'Invocation', 'FieldRead', 'Literal', 'FieldRead', 'Literal', 'Invocation', 'Invocation', 'Invocation']",Partial Match,0.375,0.5555555555555556,0.4166666666666667,0.4761904761904762,5,4,7
466,466,"protected TYPE_1 METHOD_1 ( java.lang.Void ... params ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }",protected TYPE_1 METHOD_1 ( java.lang.Void ... params ) { return VAR_1 . METHOD_2 ( VAR_2 ) ; },['Delete TypeAccess'],553,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
467,467,public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . assertThat ( VAR_1 ) . METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; assertThat ( VAR_1 ) . METHOD_3 ( STRING_1 ) ; },['Update TypeAccess'],554,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
468,468,"private void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 ) ; }","private void METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 ) ; }",['Update TypeReference'],555,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
469,469,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { if ( ( VAR_2 . METHOD_2 ( ) ) != null ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; } } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { if ( ( VAR_2 . METHOD_2 ( ) ) != null ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } } },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",557,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
470,470,"public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 state ) throws java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( state . METHOD_4 ( ) ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 state ) throws java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( state . METHOD_4 ( ) ) ; }",['Update Invocation'],558,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
471,471,"public final boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ) ) { VAR_2 . add ( VAR_1 ) ; return true ; } return false ; }",public final boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_2 . add ( VAR_1 ) ; return false ; } return true ; },"['Move Return', 'Move Return', 'Delete VariableRead', 'Delete Invocation']",559,"['Delete Invocation', 'Delete VariableRead', 'Update Return', 'Update Return']","['Return', 'Return', 'VariableRead', 'Invocation']","['Invocation', 'VariableRead', 'Return', 'Return']",Exact Match,1.0,0.5,0.5,0.5,2,2,2
472,472,protected java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 node ) { TYPE_1 path = VAR_1 . path ( VAR_2 ) ; if ( METHOD_2 ( path ) ) { return METHOD_3 ( path ) ; } return METHOD_3 ( node ) ; },protected java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 node ) { TYPE_1 path = VAR_1 . path ( VAR_2 ) ; if ( METHOD_2 ( path ) ) { return METHOD_3 ( path ) ; } return null ; },"['Insert Literal', 'Delete VariableRead', 'Delete Invocation']",560,"['Delete Invocation', 'Insert Literal']","['Literal', 'VariableRead', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
473,473,protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { values . METHOD_2 ( ) ; values . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; if ( ! ( VAR_2 ) ) { METHOD_5 ( ) ; } else { METHOD_6 ( VAR_3 ) ; } },protected void METHOD_1 ( java.lang.String msg ) { METHOD_4 ( ) ; if ( ! ( VAR_2 ) ) { METHOD_5 ( ) ; } else { METHOD_6 ( VAR_3 ) ; } },"['Update Parameter', 'Update TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",561,"['Update Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['Parameter', 'TypeReference', 'TypeReference', 'FieldRead', 'Invocation', 'FieldRead', 'VariableRead', 'Invocation']","['Parameter', 'TypeReference', 'TypeReference', 'TypeReference', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.8,0.75,0.75,0.75,6,2,2
474,474,"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , java.util.ArrayList < java.lang.Integer > VAR_2 ) { VAR_3 = VAR_1 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; }",public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_3 = VAR_1 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",562,"['Delete Parameter', 'Delete TypeReference']","['TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
475,475,public void METHOD_1 ( java.lang.Throwable t ) { METHOD_2 ( null ) ; },public void METHOD_1 ( java.lang.Throwable t ) { METHOD_2 ( ) ; },['Delete Literal'],563,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
476,476,"public void METHOD_1 ( java.lang.String path ) { java.io.File VAR_1 = new java.io.File ( path ) ; java.lang.String [ ] VAR_2 = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 } ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String path ) { java.io.File VAR_1 = new java.io.File ( path ) ; java.lang.String [ ] VAR_2 = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }",['Delete FieldRead'],565,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
477,477,"public void METHOD_1 ( int [ ] VAR_1 , int VAR_2 , TYPE_1 field ) { VAR_3 [ METHOD_2 ( VAR_1 ) ] . METHOD_1 ( VAR_2 , field ) ; }","public void METHOD_1 ( int [ ] VAR_1 , int VAR_2 , TYPE_1 field ) { VAR_3 [ index ( VAR_1 ) ] . METHOD_1 ( VAR_2 , field ) ; }",['Update Invocation'],566,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
478,478,"private < TYPE_1 > TYPE_1 getValue ( TYPE_1 value , TYPE_1 VAR_1 ) { return value != null ? value : VAR_1 ; }","private < TYPE_1 > TYPE_1 getValue ( TYPE_1 value , TYPE_1 VAR_1 ) { return value == null ? VAR_1 : value ; }","['Move VariableRead', 'Update BinaryOperator']",567,"['Update BinaryOperator', 'Move VariableRead', 'Move VariableRead']","['VariableRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
479,479,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = VAR_1 . getName ( 1 ) ; org.testng.Assert.assertEquals ( name , STRING_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = VAR_1 . getName ( 1 ) ; assertEquals ( name , STRING_1 ) ; }",['Delete FieldRead'],569,"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead']",['FieldRead'],"['TypeAccess', 'TypeAccess', 'FieldRead']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
480,480,public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; VAR_3 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; VAR_3 = new TYPE_2 ( ) ; },['Delete ConstructorCall'],570,"['Delete ConstructorCall', 'Delete TypeAccess']",['ConstructorCall'],"['ConstructorCall', 'TypeAccess']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
481,481,"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; if ( ! ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) VAR_3 . put ( VAR_1 , VAR_2 ) ; }",['Update VariableRead'],571,"['Delete Block', 'Update VariableRead']",['VariableRead'],"['Block', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
482,482,public void METHOD_1 ( TYPE_1 VAR_1 ) { ++ ( VAR_2 ) ; if ( ( VAR_2 ) > ( VAR_3 ) ) VAR_2 = VAR_3 ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) ) ; },public void METHOD_1 ( ) { ++ ( VAR_2 ) ; if ( ( VAR_2 ) > ( VAR_3 ) ) VAR_2 = VAR_3 ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",572,"['Delete Parameter', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['TypeReference', 'Parameter', 'VariableRead', 'ConstructorCall', 'Invocation']","['Parameter', 'VariableRead', 'Invocation', 'ConstructorCall', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
483,483,"protected void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( ) . add ( VAR_1 , VAR_2 , VAR_3 ) . METHOD_3 ( VAR_3 ) . commit ( ) ; }","protected void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( ) . add ( VAR_1 , VAR_2 ) . METHOD_3 ( VAR_3 ) . commit ( ) ; }","['Update Invocation', 'Move Invocation', 'Update Invocation', 'Update Invocation', 'Move Invocation', 'Move Invocation', 'Move VariableRead', 'Move VariableRead', 'Delete VariableRead']",573,['Delete VariableRead'],"['Invocation', 'Invocation', 'Invocation', 'Invocation', 'Invocation', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,1.0,0.1111111111111111,0.19999999999999998,1,0,8
484,484,"protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 x , boolean VAR_3 , boolean VAR_4 , boolean VAR_5 , boolean VAR_6 ) { return METHOD_2 ( VAR_1 , VAR_2 , x , VAR_3 , VAR_4 , VAR_5 , VAR_6 , false ) ; }","protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_2 x , byte VAR_3 , byte VAR_4 , byte VAR_5 , byte VAR_6 ) { return METHOD_2 ( VAR_1 , VAR_2 , x , VAR_3 , VAR_4 , VAR_5 , VAR_6 , false ) ; }","['Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference']",576,"['Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
485,485,private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ; },public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ; },['Update Wra'],577,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
486,486,"public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( null , null ) ; VAR_3 . assertNotNull ( VAR_1 ) ; VAR_3 . assertEquals ( VAR_4 . size ( ) , 0 ) ; }","public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( null , null , null ) ; VAR_3 . assertNotNull ( VAR_1 ) ; VAR_3 . assertEquals ( VAR_4 . size ( ) , 0 ) ; }",['Insert Literal'],578,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
487,487,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_2 ) ; VAR_1 . METHOD_5 ( 1 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_2 ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",579,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
488,488,public void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = ( VAR_1 . METHOD_2 ( ( ( INT_1 - INT_2 ) + 1 ) ) ) + INT_2 ; VAR_3 -= VAR_2 ; },public void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = ( VAR_1 . METHOD_2 ( ( ( INT_1 - INT_2 ) + 1 ) ) ) + INT_2 ; this . VAR_3 -= VAR_2 ; },['Insert ThisAccess'],580,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
489,489,public double METHOD_1 ( ) { return x . METHOD_2 ( ) ; },public double METHOD_1 ( ) { return this . METHOD_1 ( ) ; },"['Update Invocation', 'Insert ThisAccess', 'Delete FieldRead']",581,"['Update FieldRead', 'Update Invocation', 'Insert ThisAccess']","['Invocation', 'ThisAccess', 'FieldRead']","['FieldRead', 'Invocation', 'ThisAccess']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
490,490,public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_2 ) { } },"['Delete VariableRead', 'Delete Invocation']",582,"['Delete VariableRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
491,491,public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 != null ) return VAR_1 ; return null ; },protected TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 != null ) return VAR_1 ; return null ; },['Update Wra'],583,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
492,492,"public static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }","public static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }",['Move VariableRead'],584,['Update Invocation'],['VariableRead'],['Invocation'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
493,493,"private static void METHOD_1 ( long VAR_1 , long offset ) { }","private static native void METHOD_1 ( long VAR_1 , long offset ) ;",['Insert Wra'],586,"['Insert Wra', 'Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
494,494,"protected void METHOD_1 ( final java.lang.CharSequence name , final java.lang.CharSequence VAR_1 , final int VAR_2 ) { VAR_3 . put ( VAR_4 . toString ( ) , new TYPE_1 ( VAR_4 . toString ( ) , VAR_5 . toString ( ) , VAR_2 ) ) ; }","protected void METHOD_1 ( final java.lang.CharSequence name , final java.lang.CharSequence VAR_1 , final int VAR_2 ) { VAR_3 . add ( new TYPE_1 ( VAR_4 . toString ( ) , VAR_5 . toString ( ) , VAR_2 ) ) ; }","['Update Invocation', 'Delete TypeAccess', 'Delete Invocation']",587,['Update Invocation'],"['Invocation', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
495,495,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) . info ( ( STRING_1 + ( VAR_4 . getName ( ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) . info ( ( STRING_1 + ( VAR_4 . getName ( ) ) ) ) ; },"['Insert VariableRead', 'Delete TypeAccess']",588,['Update FieldRead'],"['VariableRead', 'TypeAccess']",['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
496,496,public float METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) / FLOAT_1 ) * ( VAR_2 ) ; },private float METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) / FLOAT_1 ) * ( VAR_2 ) ; },['Update Wra'],589,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
497,497,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( true ) ; METHOD_4 ( ) ; },"['Delete VariableRead', 'Delete Invocation']",590,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
498,498,"public static TYPE_1 [ ] METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , int VAR_3 ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , TYPE_2 . METHOD_2 ( VAR_3 ) ) ; }","public static TYPE_1 [ ] METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , int VAR_3 ) { return TYPE_2 . METHOD_1 ( new TYPE_1 ( ) , VAR_2 , VAR_3 , TYPE_2 . METHOD_2 ( VAR_3 ) ) ; }","['Insert ConstructorCall', 'Delete VariableRead']",591,"['Insert ConstructorCall', 'Delete VariableRead', 'Delete TypeReference']","['ConstructorCall', 'VariableRead']","['ConstructorCall', 'VariableRead', 'TypeReference']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
499,499,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 != null ) { VAR_4 . METHOD_4 ( VAR_1 , true ) ; } }",public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 != null ) { VAR_4 . METHOD_4 ( VAR_1 ) ; } },['Delete Literal'],592,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
500,500,public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 class ) { if ( ( VAR_3 ) != null ) VAR_4 . add ( VAR_1 ) ; else super . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_3 ) { if ( ( VAR_3 ) != null ) VAR_4 . add ( VAR_1 ) ; else super . METHOD_1 ( VAR_1 ) ; } },['Update FieldRead'],593,['Delete TypeAccess'],['FieldRead'],['TypeAccess'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
501,501,"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( 0 , VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },['Delete Literal'],594,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
502,502,"public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; boolean VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; assertTrue ( VAR_3 ) ; VAR_3 = VAR_4 . METHOD_2 ( VAR_2 , VAR_1 ) ; assertTrue ( VAR_3 ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; boolean VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; assertTrue ( VAR_3 ) ; VAR_3 = VAR_4 . METHOD_2 ( VAR_2 , VAR_1 ) ; assertTrue ( output ) ; }","['Insert FieldRead', 'Delete VariableRead']",595,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
503,503,"public int METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_1 ( ( ( int ) ( VAR_3 ) ) , VAR_4 . intValue ( ) ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_3 , VAR_4 . intValue ( ) ) ; }",['Delete TypeReference'],596,"['Delete TypeReference', 'Delete VariableRead']",['TypeReference'],"['TypeReference', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
504,504,"public TYPE_1 METHOD_1 ( java.lang.Long id , TYPE_2 VAR_1 ) { return VAR_2 . METHOD_2 ( id , VAR_3 ) ? VAR_4 : VAR_5 ; }","public TYPE_1 METHOD_1 ( java.lang.Long id , java.lang.String token ) { return VAR_2 . METHOD_2 ( id , token ) ? VAR_4 : VAR_5 ; }","['Update Parameter', 'Update TypeReference', 'Insert VariableRead', 'Delete TypeAccess']",597,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'TypeAccess']","['TypeReference', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
505,505,"private java.lang.String getString ( java.lang.String value ) { if ( value == null ) { return null ; } return VAR_1 . replace ( VAR_2 , VAR_3 ) . trim ( ) ; }","private java.lang.String getString ( java.lang.String value ) { return VAR_1 . replace ( VAR_2 , VAR_3 ) . trim ( ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",598,"['Delete If', 'Delete Return', 'Delete Literal']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Return', 'Literal']",GPT Missed Nodes,0.5,1.0,0.42857142857142855,0.6,3,0,4
506,506,"public void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > value ) { remove ( VAR_1 . key ) ; value . METHOD_2 ( ) ; put ( VAR_1 . key , value ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > value ) { remove ( VAR_1 . key ) ; put ( VAR_1 . key , value ) ; }","['Delete VariableRead', 'Delete Invocation']",599,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
507,507,private void METHOD_1 ( java.lang.CharSequence text ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . setText ( text ) ; },private void METHOD_1 ( java.lang.String text ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . setText ( text ) ; },['Update TypeReference'],602,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
508,508,public static TYPE_1 METHOD_1 ( java.lang.String fileName ) { try { return TYPE_2 . METHOD_1 ( new java.io.File ( fileName ) ) ; } catch ( java.io.IOException VAR_1 ) { throw new TYPE_3 ( ) ; } },public static TYPE_1 METHOD_1 ( java.lang.String fileName ) { try { return TYPE_2 . METHOD_1 ( new java.io.File ( fileName ) ) ; } catch ( java.io.IOException VAR_1 ) { throw new TYPE_3 ( VAR_1 ) ; } },"['Update ConstructorCall', 'Insert VariableRead']",603,['Insert VariableRead'],"['ConstructorCall', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
509,509,public TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = this . METHOD_2 ( 1 ) . METHOD_3 ( ) ; if ( VAR_2 . isEmpty ( ) ) { return null ; } else { return VAR_2 . get ( 0 ) ; } },public TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = this . METHOD_2 ( 1 ) . METHOD_3 ( ) ; if ( VAR_1 == null ) { return null ; } else { return VAR_2 . get ( 0 ) ; } },"['Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",605,"['Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Delete Invocation', 'Delete VariableRead']","['BinaryOperator', 'VariableRead', 'Literal', 'TypeAccess', 'Invocation']","['BinaryOperator', 'VariableRead', 'Literal', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.8,0.8,0.8,0.8000000000000002,4,1,1
510,510,public java.lang.Void execute ( TYPE_1 < java.lang.Void > VAR_1 ) throws java.lang.Throwable { assertTrue ( VAR_1 . METHOD_1 ( ) ) ; VAR_2 . set ( true ) ; VAR_3 . get ( ) ; return null ; },public java.lang.Void execute ( TYPE_1 < java.lang.Void > VAR_1 ) throws java.lang.Throwable { assertTrue ( VAR_1 . METHOD_1 ( ) ) ; VAR_2 . set ( true ) ; return null ; },"['Delete TypeAccess', 'Delete Invocation']",606,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
511,511,"public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; }",public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; },['Delete TypeAccess'],607,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
512,512,public TYPE_1 METHOD_1 ( ) { return ( VAR_1 . size ( ) ) > 0 ? VAR_2 . METHOD_2 ( ) : null ; },private TYPE_1 METHOD_1 ( ) { return ( VAR_1 . size ( ) ) > 0 ? VAR_2 . METHOD_2 ( ) : null ; },['Update Wra'],608,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
513,513,public final int METHOD_1 ( ) { return this . VAR_1 ; },public int METHOD_1 ( ) { return VAR_1 ; },"['Delete Wra', 'Delete ThisAccess']",609,"['Delete Wra', 'Delete ThisAccess']","['Wra', 'ThisAccess']","['Wra', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
514,514,"public static TYPE_1 METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( format , args ) ) ; }","public static TYPE_1 METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { return new TYPE_1 ( java.lang.String.format ( format , args ) ) ; }","['Update ConstructorCall', 'Update Invocation', 'Update TypeAccess']",610,"['Update TypeAccess', 'Update Invocation']","['ConstructorCall', 'Invocation', 'TypeAccess']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
515,515,protected void METHOD_1 ( TYPE_1 message ) { this . METHOD_1 ( message ) ; },protected void METHOD_1 ( TYPE_1 message ) { METHOD_1 ( message ) ; },['Delete ThisAccess'],611,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
516,516,public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; if ( ( VAR_1 . METHOD_1 ( ) ) == null ) { return null ; } return new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; },public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; return new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",612,"['Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete BinaryOperator']","['VariableRead', 'Invocation', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Invocation', 'Literal', 'Return', 'BinaryOperator']",Partial Match,0.625,0.8333333333333334,0.625,0.7142857142857143,5,1,3
517,517,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( VAR_5 ) == VAR_2 ) { return VAR_3 ; } } return null ; }",public TYPE_1 METHOD_1 ( int VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( VAR_5 ) == VAR_2 ) { return VAR_3 ; } } return null ; },"['Delete TypeReference', 'Delete Parameter']",613,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
518,518,"public TYPE_1 METHOD_1 ( java.util.Date VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception ;",public TYPE_1 METHOD_1 ( java.util.Date VAR_1 ) throws java.lang.Exception ;,"['Delete TypeReference', 'Delete Parameter']",614,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
519,519,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 , VAR_1 , STRING_1 ) . METHOD_4 ( null ) . commit ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 , VAR_1 ) . METHOD_4 ( null ) . commit ( ) ; }",['Delete TypeAccess'],615,"['Delete VariableRead', 'Delete Literal']",['TypeAccess'],"['VariableRead', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
520,520,"public java.lang.String METHOD_1 ( ) { try { return VAR_1 . get ( ) . METHOD_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; } catch ( TYPE_1 | TYPE_2 VAR_4 ) { return VAR_4 . METHOD_4 ( ) ; } }","public java.lang.String METHOD_1 ( ) { try { return VAR_1 . get ( ) . METHOD_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_4 ) { return VAR_4 . METHOD_4 ( ) ; } }",['Insert TypeReference'],616,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
521,521,"public static int [ ] METHOD_1 ( boolean VAR_1 ) { return new int [ ] { INT_1 , INT_2 } ; }","public int [ ] METHOD_1 ( boolean VAR_1 ) { return new int [ ] { INT_1 , INT_2 } ; }",['Delete Wra'],617,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
522,522,public java.lang.String end ( TYPE_1 VAR_1 ) { return new TYPE_2 ( ) . handle ( VAR_1 ) ; },public java.lang.String end ( ) { return new TYPE_2 ( ) . handle ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",618,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
523,523,public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; },public java.lang.Object METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ; },"['Update TypeReference', 'Insert TypeReference']",619,"['Update TypeReference', 'Insert TypeReference', 'Insert VariableRead', 'Insert BinaryOperator']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'VariableRead', 'BinaryOperator']",GPT Hallucinated Nodes,0.3333333333333333,0.5,1.0,0.6666666666666666,2,2,0
524,524,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < java.lang.String > VAR_2 ) { METHOD_1 ( VAR_1 , ( ( METHOD_2 ( VAR_1 ) ) * FLOAT_1 ) , ( ( METHOD_2 ( VAR_1 ) ) * FLOAT_1 ) , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , ( ( METHOD_2 ( VAR_1 ) ) * FLOAT_1 ) , ( ( METHOD_2 ( VAR_1 ) ) * FLOAT_1 ) ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",620,"['Delete Parameter', 'Delete TypeReference', 'Delete Invocation']","['TypeReference', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
525,525,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { data . METHOD_4 ( ) ; index = 1 ; getData ( index ) ; } } , INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { data . METHOD_4 ( ) ; getData ( ) ; index = 1 ; } } , INT_1 ) ; }",['Delete FieldRead'],621,['Move Invocation'],['FieldRead'],['Invocation'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
526,526,private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_1 . METHOD_2 ( true ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_4 ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_1 . METHOD_2 ( true ) ; },['Update FieldRead'],622,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
527,527,"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , java.lang.String VAR_4 ) { METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_2 . METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , java.lang.String VAR_4 ) { METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete VariableRead', 'Delete Invocation']",623,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
528,528,"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null != VAR_1 ) { this . METHOD_2 ( VAR_2 . key , VAR_3 , VAR_4 , VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null != VAR_1 ) { this . METHOD_2 ( VAR_2 . key , VAR_3 , VAR_5 ) ; } }",['Delete TypeAccess'],624,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
529,529,void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; },void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( 1 ) ; },['Insert Literal'],626,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
530,530,"java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_3 > > METHOD_1 ( final java.util.Set < TYPE_2 > VAR_1 , final TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 { return METHOD_1 ( null , VAR_1 , VAR_2 , false ) ; }","java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_3 > > METHOD_1 ( final java.util.Set < TYPE_2 > VAR_1 , final TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 { return METHOD_1 ( null , VAR_1 , VAR_2 ) ; }",['Delete Literal'],627,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
531,531,"protected < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > c ) throws java.lang.Exception { return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , c ) ; }","private < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > c ) throws java.lang.Exception { return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , c ) ; }",['Update Wra'],628,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
532,532,"public void METHOD_1 ( final java.lang.String ... VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = java.util.Arrays.asList ( VAR_1 ) ; }","public void METHOD_1 ( final java.lang.String ... VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = VAR_1 ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",629,"['Delete TypeAccess', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
533,533,"public int METHOD_1 ( int a , int b ) { return a * b ; }","public int METHOD_1 ( int a , int b ) { return a + b ; }",['Update BinaryOperator'],631,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
534,534,"public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , double VAR_4 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_5 ) TYPE_1 . METHOD_3 ( false ) ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_5 ) TYPE_1 . METHOD_3 ( false ) ; }",['Update TypeReference'],632,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
535,535,"private int METHOD_1 ( int i , int j ) { return ( ( i - 1 ) * ( VAR_1 ) ) + j ; }","private int METHOD_1 ( int i , int j ) { return ( i * ( VAR_1 ) ) + j ; }","['Update BinaryOperator', 'Move BinaryOperator', 'Update BinaryOperator', 'Move VariableRead', 'Move FieldRead', 'Delete Literal', 'Delete BinaryOperator']",633,"['Delete Literal', 'Delete BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'VariableRead', 'FieldRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.5,1.0,0.2857142857142857,0.4444444444444445,2,0,5
536,536,"public static int METHOD_1 ( int VAR_1 , int VAR_2 ) { return java.lang.Math.round ( ( VAR_2 / VAR_1 ) ) ; }","public static int METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_1 == 0 ) return VAR_2 ; return java.lang.Math.round ( ( VAR_2 / VAR_1 ) ) ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert VariableRead']",634,"['Insert If', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert VariableRead']","['If', 'BinaryOperator', 'Block', 'VariableRead', 'Literal', 'Return', 'VariableRead']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return', 'VariableRead']",GPT Missed Nodes,0.8333333333333334,1.0,0.8571428571428571,0.923076923076923,6,0,1
537,537,"protected abstract void METHOD_1 ( android.view.View VAR_1 , int position , int VAR_2 ) ;","public abstract void METHOD_1 ( android.view.View VAR_1 , int position , int VAR_2 ) ;",['Update Wra'],635,"['Delete Wra', 'Insert Wra']",['Wra'],"['Wra', 'Wra']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
538,538,public void METHOD_1 ( java.lang.String arg ) { if ( arg == null ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . trim ( ) ) ) ) ; } },public void METHOD_1 ( java.lang.String arg ) { if ( arg != null ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . trim ( ) ) ) ) ; } },['Update BinaryOperator'],636,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
539,539,protected java.lang.String METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( this . VAR_2 ) . METHOD_3 ( ) . toString ( ) ; },private java.lang.String METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( this . VAR_2 ) . METHOD_3 ( ) . toString ( ) ; },['Update Wra'],637,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
540,540,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertThat ( this . VAR_2 . METHOD_2 ( VAR_3 ) , TYPE_1 . METHOD_3 ( VAR_4 , VAR_5 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertThat ( this . VAR_2 . METHOD_2 ( VAR_3 ) , contains ( VAR_4 , VAR_5 ) ) ; }","['Update Invocation', 'Update TypeAccess']",638,"['Delete TypeAccess', 'Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'Invocation', 'Invocation']",Exact Match,1.0,0.0,0.0,0.0,0,3,2
541,541,"private TYPE_1 METHOD_1 ( TYPE_2 j , TYPE_1 a ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( j , false ) ; return a ; }","private TYPE_1 METHOD_1 ( TYPE_2 j , TYPE_1 a ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( j , true ) ; return a ; }",['Update Literal'],639,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
542,542,"public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { if ( VAR_2 == null ) { return null ; } return METHOD_1 ( VAR_3 , new TYPE_2 ( this , name , VAR_1 , VAR_2 ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { if ( VAR_2 == null ) { return null ; } return METHOD_1 ( new TYPE_2 ( this , name , VAR_1 , VAR_2 ) , VAR_3 ) ; }",['Move VariableRead'],640,['Move VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
543,543,public void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) == null ) { this . VAR_1 = VAR_1 ; return ; } this . VAR_1 = ( VAR_2 . METHOD_2 ( ) ) - VAR_1 ; },public void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) == null ) { this . VAR_1 = VAR_1 ; } this . VAR_1 = ( VAR_2 . METHOD_2 ( ) ) - VAR_1 ; },['Delete Return'],641,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
544,544,public void METHOD_1 ( java.lang.Object message ) throws TYPE_1 { METHOD_2 ( METHOD_3 ( message ) ) ; },public void METHOD_1 ( java.lang.Object message ) throws TYPE_1 { METHOD_3 ( message ) ; METHOD_2 ( message ) ; },"['Move Invocation', 'Insert VariableRead']",644,"['Delete Invocation', 'Insert Invocation', 'Insert VariableRead']","['Invocation', 'VariableRead']","['Invocation', 'Invocation', 'VariableRead']",Exact Match,1.0,0.3333333333333333,0.5,0.4,1,2,1
545,545,"public boolean METHOD_1 ( TYPE_1 element , long VAR_1 ) { return METHOD_1 ( METHOD_2 ( element ) , VAR_1 ) ; }","protected boolean METHOD_1 ( TYPE_1 element , long VAR_1 ) { return METHOD_1 ( METHOD_2 ( element ) , VAR_1 ) ; }",['Update Wra'],646,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
546,546,public void METHOD_1 ( ) { assertNotNull ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public void METHOD_1 ( ) { assertTrue ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },['Update Invocation'],647,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
547,547,"public void METHOD_1 ( TYPE_1 c , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { }","public void METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { }","['Delete TypeReference', 'Delete Parameter']",648,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
548,548,"public static double METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int VAR_4 ) { java.lang.String VAR_5 = STRING_1 ; boolean VAR_6 = true ; return TYPE_1 . METHOD_2 ( VAR_1 , VAR_6 , VAR_5 , VAR_2 , VAR_3 , VAR_4 , true ) ; }","public static double METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int VAR_4 ) { java.lang.String VAR_5 = STRING_1 ; boolean VAR_6 = true ; return TYPE_1 . METHOD_2 ( VAR_1 , VAR_6 , VAR_5 , VAR_2 , VAR_3 , VAR_4 ) ; }",['Delete Literal'],649,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
549,549,"public TYPE_1 METHOD_1 ( java.util.List < java.lang.String > VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { return METHOD_1 ( VAR_1 , VAR_2 , true ) ; }","public TYPE_1 METHOD_1 ( java.util.List < java.lang.String > VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { return METHOD_1 ( VAR_1 , VAR_2 , false ) ; }",['Update Literal'],650,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
550,550,public void handle ( TYPE_1 t ) { VAR_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; },public void handle ( TYPE_1 t ) { VAR_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; java.lang.System.exit ( 0 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Insert Literal']",651,"['Insert TypeAccess', 'Insert Invocation', 'Insert Literal']","['Invocation', 'TypeAccess', 'Literal']","['TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
551,551,"private boolean METHOD_1 ( ) { return METHOD_2 ( ) . get ( VAR_1 , false ) ; }","private boolean METHOD_1 ( ) { return METHOD_2 ( ) . get ( VAR_1 , true ) ; }",['Update Literal'],652,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
552,552,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 , TYPE_4 VAR_4 , TYPE_5 VAR_5 , TYPE_6 VAR_6 ) throws java.io.IOException ;","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_4 VAR_4 , TYPE_5 VAR_5 , TYPE_3 VAR_2 , java.lang.String VAR_3 , TYPE_6 event ) throws java.io.IOException ;","['Move Parameter', 'Move Parameter', 'Update Parameter']",653,"['Move Parameter', 'Move Parameter', 'Move Parameter', 'Update Parameter']","['Parameter', 'Parameter', 'Parameter']","['Parameter', 'Parameter', 'Parameter', 'Parameter']",Exact Match,1.0,0.75,1.0,0.8571428571428571,3,1,0
553,553,private static java.lang.String METHOD_1 ( ) { return STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ; },public java.lang.String METHOD_1 ( ) { return STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ; },"['Update Wra', 'Delete Wra']",654,"['Delete Wra', 'Delete Wra']","['Wra', 'Wra']","['Wra', 'Wra']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
554,554,public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( file ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 . execute ( ) ; return STRING_1 ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( file ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 . execute ( ) ; },"['Update TypeReference', 'Delete FieldRead', 'Delete Return']",655,"['Update TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'FieldRead', 'Return']","['TypeReference', 'Return', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
555,555,"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 . replace ( STRING_1 , STRING_2 ) ; if ( VAR_4 [ 0 ] ) VAR_5 . setText ( VAR_2 ) ; if ( VAR_4 [ 1 ] ) VAR_6 . setText ( VAR_2 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_4 [ 0 ] ) VAR_5 . setText ( VAR_2 ) ; if ( VAR_4 [ 1 ] ) VAR_6 . setText ( VAR_2 ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",656,"['Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete Literal', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['Invocation', 'FieldRead', 'Literal', 'Literal', 'VariableRead']",Partial Match,0.4,0.4,0.4,0.4000000000000001,2,3,3
556,556,"private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 != null ? VAR_2 . substring ( 0 , VAR_1 . METHOD_2 ( STRING_1 ) ) : null ; }",private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 != null ? VAR_2 . substring ( ( ( VAR_1 . METHOD_2 ( 0 ) ) + 1 ) ) : null ; },"['Insert BinaryOperator', 'Move Invocation', 'Insert Literal', 'Move Literal', 'Delete TypeAccess']",657,"['Insert BinaryOperator', 'Insert Literal', 'Delete Literal', 'Delete Invocation']","['BinaryOperator', 'Invocation', 'Literal', 'Literal', 'TypeAccess']","['BinaryOperator', 'Literal', 'Literal', 'Invocation']",GPT Missed Nodes,0.75,0.5,0.4,0.4444444444444445,2,2,3
557,557,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( java.lang.Integer.parseInt ( args [ 0 ] ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( java.lang.Integer.parseInt ( args [ 1 ] ) ) ; },['Update Literal'],658,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
558,558,public float METHOD_1 ( int VAR_1 ) throws TYPE_1 { return METHOD_2 ( VAR_1 ) ? 0 : ( ( float ) ( VAR_2 . METHOD_3 ( ( VAR_1 - 1 ) ) ) ) ; },public float METHOD_1 ( int VAR_1 ) throws TYPE_1 { return METHOD_2 ( VAR_1 ) ? 0 : ( ( float ) ( VAR_2 . METHOD_3 ( VAR_1 ) ) ) ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",659,"['Delete Literal', 'Delete BinaryOperator', 'Update VariableRead']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator', 'VariableRead']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
559,559,private void METHOD_1 ( java.lang.String msg ) { VAR_1 . METHOD_1 ( msg ) ; },private void METHOD_1 ( java.lang.String msg ) { java.lang.System.out.println ( msg ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",660,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Update Invocation', 'Update FieldRead']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead']",Exact Match,1.0,0.4,0.5,0.4444444444444445,2,3,2
560,560,"private static long METHOD_1 ( long VAR_1 , long source , long VAR_2 , int VAR_3 , int VAR_4 , double VAR_5 , long VAR_6 ) { return 0 ; }","private static native long METHOD_1 ( long VAR_1 , long source , long VAR_2 , int VAR_3 , int VAR_4 , double VAR_5 , long VAR_6 ) ;","['Insert Wra', 'Delete Literal', 'Delete Return']",661,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
561,561,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getClass ( ) . toString ( ) , STRING_1 ) ; METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; METHOD_6 ( false ) ; } } , INT_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getClass ( ) . toString ( ) , STRING_1 ) ; METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; METHOD_6 ( false ) ; } } ) ; }",['Delete TypeAccess'],662,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
562,562,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; try { METHOD_2 ( ) ; } catch ( TYPE_2 | TYPE_3 VAR_3 ) { VAR_4 . error ( VAR_3 . METHOD_3 ( ) , VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; try { METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( VAR_3 . METHOD_3 ( ) , VAR_3 ) ; } }",['Insert TypeReference'],664,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
563,563,"public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( VAR_1 , STRING_1 ) ; }","public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( STRING_1 , VAR_1 ) ; }",['Move VariableRead'],665,['Move VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
564,564,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; },public void METHOD_1 ( TYPE_1 name ) { VAR_2 = null ; },['Update Parameter'],666,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
565,565,public java.lang.String METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; },public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",667,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
566,566,"public TYPE_1 METHOD_1 ( java.lang.String name , boolean VAR_1 ) { return ( ( TYPE_1 ) ( super . METHOD_2 ( name , VAR_1 ) ) ) ; }",public TYPE_1 METHOD_1 ( java.lang.String name ) { return ( ( TYPE_1 ) ( super . METHOD_2 ( name ) ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",670,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
567,567,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String query = VAR_2 ; query += STRING_1 + VAR_1 ; int VAR_3 = METHOD_2 ( VAR_4 ) ; return new TYPE_1 ( VAR_3 , VAR_5 , VAR_6 , VAR_7 , query , VAR_8 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String query = VAR_2 ; query += STRING_1 + VAR_1 ; int VAR_3 = METHOD_2 ( VAR_4 ) ; return new TYPE_1 ( VAR_3 , VAR_5 , VAR_6 , VAR_7 , query ) ; }",['Delete FieldRead'],671,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
568,568,void METHOD_1 ( float value ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",672,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
569,569,protected TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; },private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update Wra'],673,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
570,570,"public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this . VAR_1 , VAR_2 , STRING_1 ) ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this , VAR_2 , STRING_1 ) ; }","['Move ThisAccess', 'Delete FieldRead']",674,['Delete FieldRead'],"['ThisAccess', 'FieldRead']",['FieldRead'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
571,571,java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( ) ) ) { return STRING_1 ; } return VAR_2 . getText ( ) ; },java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) | ( VAR_1 . METHOD_2 ( ) ) ) { return STRING_1 ; } return VAR_2 . getText ( ) ; },['Update BinaryOperator'],675,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
572,572,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setValue ( STRING_1 , this . VAR_3 ) ; VAR_1 . METHOD_2 ( INT_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setValue ( STRING_1 , this . VAR_3 ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",676,"['Delete Invocation', 'Delete VariableRead', 'Delete Literal']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'VariableRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
573,573,"void METHOD_1 ( boolean VAR_1 , TYPE_1 file ) ;",void METHOD_1 ( boolean VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",677,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
574,574,public void METHOD_1 ( ) { this . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },['Delete ThisAccess'],678,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
575,575,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , null , null , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; VAR_2 . assertEquals ( VAR_1 . METHOD_3 ( STRING_7 ) . getText ( ) , STRING_8 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; VAR_2 . assertEquals ( VAR_1 . METHOD_3 ( STRING_7 ) . getText ( ) , STRING_8 ) ; }","['Delete Literal', 'Delete Literal']",679,"['Delete Literal', 'Delete Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
576,576,"public void METHOD_1 ( int x , int y , int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( x , y , ( x + VAR_1 ) , ( y + VAR_2 ) , VAR_3 ) ; }","public void METHOD_1 ( int x , int y , int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( x , y , ( x + VAR_1 ) , ( x + VAR_2 ) , VAR_3 ) ; }",['Update VariableRead'],680,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
577,577,"public void execute ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( result , VAR_1 ) ; }",public void execute ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( result ) ; },['Delete TypeAccess'],681,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
578,578,public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete VariableRead', 'Delete Invocation']",682,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
579,579,public long METHOD_1 ( int position ) { if ( position < ( VAR_1 . size ( ) ) ) return VAR_1 . get ( position ) . METHOD_2 ( ) ; else return ( VAR_1 . size ( ) ) + 1 ; },public long METHOD_1 ( int position ) { if ( position <= ( VAR_1 . size ( ) ) ) return VAR_1 . get ( position ) . METHOD_2 ( ) ; else return ( VAR_1 . size ( ) ) + 1 ; },['Update BinaryOperator'],683,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
580,580,"public void METHOD_1 ( ) { new TYPE_1 ( ) . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; } } , 1 , 1 ) ; }","public void METHOD_1 ( ) { new TYPE_1 ( ) . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; } } , 0 , 1 ) ; }",['Update Literal'],684,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
581,581,"public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.String VAR_1 , java.lang.String VAR_2 ) { return new TYPE_1 ( ) ; }","public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.String VAR_1 , java.lang.String VAR_2 ) { return null ; }","['Insert Literal', 'Delete ConstructorCall']",687,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
582,582,"public TYPE_1 delete ( java.lang.String VAR_1 , java.lang.Object value ) { new TYPE_2 ( this . VAR_2 , VAR_1 , value ) ; METHOD_1 ( false ) ; return this ; }","public TYPE_1 delete ( java.lang.String VAR_1 , java.lang.Object value ) { new TYPE_2 ( this . VAR_2 , VAR_1 , value ) ; METHOD_1 ( true ) ; return this ; }",['Update Literal'],688,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
583,583,"public void METHOD_1 ( int id , java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( new TYPE_1 ( id , VAR_1 ) ) ; }","public void METHOD_1 ( int id , java.lang.String name ) { VAR_2 . METHOD_1 ( new TYPE_1 ( id , name ) ) ; }","['Update Parameter', 'Update VariableRead']",689,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
584,584,public java.util.Set < java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; },public java.util.List < java.lang.String > METHOD_1 ( ) { return VAR_1 ; },"['Update TypeReference', 'Delete ThisAccess']",690,"['Update TypeReference', 'Delete ThisAccess', 'Update TypeReference']","['TypeReference', 'ThisAccess']","['TypeReference', 'ThisAccess', 'TypeReference']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
585,585,"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 . METHOD_2 ( ) ; return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { return false ; }","['Delete VariableRead', 'Delete Invocation']",694,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
586,586,"public void METHOD_1 ( ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_1 , new TYPE_1 ( ) ) ; } }",public void METHOD_1 ( ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_1 ) ; } },['Delete ConstructorCall'],695,"['Delete ConstructorCall', 'Delete TypeReference']",['ConstructorCall'],"['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
587,587,"public static TYPE_1 METHOD_1 ( java.util.Date date ) { return TYPE_1 . METHOD_2 ( VAR_1 . getTime ( ) , TYPE_2 . METHOD_3 ( ) , VAR_2 ) ; }","public static TYPE_1 METHOD_1 ( java.util.Date date ) { return TYPE_1 . METHOD_2 ( VAR_1 . getTime ( ) , TYPE_2 . METHOD_3 ( ) ) ; }",['Delete TypeAccess'],696,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
588,588,private void METHOD_1 ( ) { ( this . VAR_1 ) ++ ; },public void METHOD_1 ( ) { ( this . VAR_1 ) ++ ; },['Update Wra'],697,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
589,589,"public static TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( path , VAR_1 . METHOD_4 ( ) , VAR_3 ) ; return VAR_2 ; }","public static TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( path , null , VAR_3 ) ; return VAR_2 ; }","['Insert Literal', 'Delete VariableRead', 'Delete Invocation']",698,"['Delete VariableRead', 'Delete Invocation', 'Insert Literal']","['Literal', 'VariableRead', 'Invocation']","['VariableRead', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
590,590,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , TYPE_1 VAR_4 , java.lang.String VAR_5 ) ;","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , TYPE_1 VAR_4 ) ;","['Delete TypeReference', 'Delete Parameter']",699,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
591,591,"public static TYPE_1 < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String param , java.lang.Object value ) { TYPE_2 < java.lang.String , java.lang.Object > VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . put ( param , value ) ; return VAR_2 . build ( ) ; }","protected static TYPE_1 < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String param , java.lang.Object value ) { TYPE_2 < java.lang.String , java.lang.Object > VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . put ( param , value ) ; return VAR_2 . build ( ) ; }",['Update Wra'],701,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
592,592,public void METHOD_1 ( ) { int VAR_1 = size ( ) ; while ( ( VAR_1 -- ) > 0 ) VAR_2 . remove ( METHOD_2 ( ) ) ; },public void METHOD_1 ( ) { int VAR_1 = size ( ) ; while ( ( VAR_1 -- ) >= 0 ) VAR_2 . remove ( METHOD_2 ( ) ) ; },['Update BinaryOperator'],702,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
593,593,public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_2 . getText ( ) . trim ( ) . equals ( STRING_1 ) ) { METHOD_2 ( VAR_3 ) ; } },public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( this . VAR_2 . getText ( ) . trim ( ) . equals ( STRING_1 ) ) { this . METHOD_2 ( this . VAR_3 ) ; } },"['Insert ThisAccess', 'Insert FieldRead', 'Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess']",703,"['Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess']","['ThisAccess', 'FieldRead', 'FieldRead', 'ThisAccess', 'ThisAccess', 'TypeAccess', 'TypeAccess']","['ThisAccess', 'ThisAccess', 'ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.3333333333333333,0.75,0.42857142857142855,0.5454545454545454,3,1,4
594,594,public boolean METHOD_1 ( double VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 > 0 ) { this . length = VAR_1 ; VAR_2 = true ; } else { this . length = VAR_3 ; } return VAR_2 ; },public void METHOD_1 ( double VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 > 0 ) { this . length = VAR_1 ; VAR_2 = true ; } else { this . length = VAR_3 ; } },"['Update TypeReference', 'Delete VariableRead', 'Delete Return']",704,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
595,595,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ""true"" ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; TYPE_3 . METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ""true"" , true ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; TYPE_3 . METHOD_4 ( VAR_2 ) ; }",['Insert Literal'],705,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
596,596,public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) . METHOD_2 ( TYPE_1 : : getData ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) . METHOD_7 ( TYPE_4 : : METHOD_8 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( 1 ) . METHOD_2 ( TYPE_1 : : getData ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) . METHOD_7 ( TYPE_4 : : METHOD_8 ) ; },"['Insert Literal', 'Delete VariableRead']",706,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
597,597,"public boolean contains ( TYPE_1 p ) { return get ( VAR_1 , p , 0 ) ; }","public boolean contains ( TYPE_1 p ) { return get ( VAR_1 , p ) ; }",['Delete Literal'],707,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
598,598,public java.util.Set < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.Set < TYPE_1 > set = this . VAR_2 . get ( VAR_1 ) ; return set == null ? new java.util.HashSet < TYPE_1 > ( ) : new java.util.HashSet < TYPE_1 > ( set ) ; },public java.util.Set < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.Set < TYPE_1 > set = this . VAR_2 . get ( VAR_1 ) ; return set == null ? new java.util.HashSet < TYPE_1 > ( ) : new java.util.HashSet ( set ) ; },[],709,['Delete TypeReference'],[],['TypeReference'],GPT Hallucinated Nodes,0.0,0.0,0.0,0.0,0,1,0
599,599,"protected void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( super . METHOD_3 ( VAR_1 ) , ( STRING_1 + ( METHOD_4 ( ) ) ) , INT_1 ) ; }","protected void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( super . METHOD_3 ( VAR_1 ) , ( STRING_1 + ( METHOD_4 ( ) ) ) ) ; }",['Delete TypeAccess'],710,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
600,600,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( true ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( true ) ; } },['Delete FieldRead'],711,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
601,601,public abstract void METHOD_1 ( ) ;,protected abstract void METHOD_1 ( ) ;,['Update Wra'],712,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
602,602,"public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_2 ) != null ? VAR_1 . METHOD_2 ( VAR_2 , null ) . METHOD_1 ( ) : TYPE_3 . METHOD_3 ( ) ; }","public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 != null ? VAR_1 . METHOD_2 ( VAR_2 , null ) . METHOD_1 ( ) : TYPE_3 . METHOD_3 ( ) ; }","['Insert VariableRead', 'Delete FieldRead']",713,"['Delete Parenthesis', 'Delete VariableRead', 'Insert VariableRead']","['VariableRead', 'FieldRead']","['Parenthesis', 'VariableRead', 'VariableRead']",Partial Match,0.3333333333333333,0.3333333333333333,0.5,0.4,1,2,1
603,603,public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( true ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( true ) ; } },['Update Wra'],714,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
604,604,public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( name ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( name ) ; METHOD_3 ( ) . METHOD_1 ( ) ; },['Update Invocation'],715,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
605,605,"private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this ) . getBoolean ( getString ( VAR_1 ) , true ) ; }","private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this ) . getBoolean ( getString ( VAR_1 ) , false ) ; }",['Update Literal'],716,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
606,606,"void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; }","void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( event , ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; }","['Insert FieldRead', 'Delete VariableRead']",718,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
607,607,"protected static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { TYPE_1 VAR_5 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_3 ( VAR_5 ) ; return VAR_5 ; }","private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { TYPE_1 VAR_5 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_3 ( VAR_5 ) ; return VAR_5 ; }",['Update Wra'],719,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
608,608,public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { final java.lang.String VAR_2 = ( TYPE_1 . METHOD_2 ( VAR_1 ) ) + STRING_1 ; return VAR_2 ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { final java.lang.String VAR_2 = VAR_1 + STRING_1 ; return VAR_2 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",720,"['Delete TypeAccess', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
609,609,"public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.Long VAR_2 ) { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",721,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
610,610,public java.lang.Long getId ( ) { return id ; },public long getId ( ) { return id ; },['Update TypeReference'],722,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
611,611,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; },['Update TypeAccess'],723,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
612,612,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; assertTrue ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; },['Update Invocation'],725,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
613,613,"public final java.util.HashMap < java.lang.String , java.lang.Object > METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } return this . VAR_1 ; }","public final java.util.HashMap < java.lang.String , java.lang.Object > METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } return VAR_1 ; }",['Delete ThisAccess'],726,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
614,614,"public void METHOD_1 ( int VAR_1 , byte [ ] data , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , data , VAR_2 , true ) ; }","public void METHOD_1 ( int VAR_1 , byte [ ] value ) { VAR_3 . METHOD_2 ( VAR_1 , value , true ) ; }","['Update Parameter', 'Update VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",727,"['Delete Parameter', 'Update Parameter', 'Delete Parameter', 'Update VariableRead']","['Parameter', 'VariableRead', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.75,0.6,0.6666666666666665,3,1,2
615,615,"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , TYPE_3 VAR_5 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , TYPE_3 VAR_5 , double startTime ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , startTime ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead']",728,"['Insert Parameter', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
616,616,"public TYPE_1 < TYPE_2 > build ( ) { return new TYPE_1 ( new TYPE_3 ( VAR_1 , 0 , VAR_2 ) ) ; }","public TYPE_1 build ( ) { return new TYPE_1 ( new TYPE_3 ( VAR_1 , 0 , VAR_2 ) ) ; }",['Delete TypeReference'],729,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
617,617,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 != null ) VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",730,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess']","['VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'ThisAccess', 'Invocation', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Invocation', 'ThisAccess']",GPT Missed Nodes,0.8571428571428571,1.0,0.75,0.8571428571428571,6,0,2
618,618,"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 = true ; } else { VAR_3 . setText ( STRING_2 ) ; VAR_4 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 = true ; } else { VAR_3 . setText ( STRING_2 ) ; VAR_4 = true ; } }",['Update Literal'],732,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
619,619,"protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 param ) ;",protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",733,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
620,620,"public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( ( VAR_2 . size ( ) ) < 0 ) TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; else TYPE_2 . METHOD_3 ( this , STRING_2 ) ; }","public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( ( VAR_2 . size ( ) ) == 0 ) TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; else TYPE_2 . METHOD_3 ( this , STRING_2 ) ; }",['Update BinaryOperator'],734,"['Update BinaryOperator', 'Update Literal']",['BinaryOperator'],"['BinaryOperator', 'Literal']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
621,621,"public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_2 . put ( TYPE_2 . METHOD_2 ( url ) , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_2 . put ( url , VAR_1 ) ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",735,"['Delete TypeAccess', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
622,622,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( STRING_1 , VAR_3 ) ; java.lang.String view = STRING_2 ; return view ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( STRING_1 , VAR_3 ) ; java.lang.String view = STRING_2 ; return STRING_2 ; }","['Insert FieldRead', 'Delete VariableRead']",736,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
623,623,public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( VAR_2 . toLowerCase ( ) . trim ( ) . contains ( STRING_1 ) ) ) { return true ; } else { return false ; } },public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( VAR_2 . toLowerCase ( ) . trim ( ) . startsWith ( STRING_1 ) ) ) { return true ; } else { return false ; } },['Update Invocation'],737,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
624,624,public static TYPE_1 get ( ) { return VAR_1 ; },public static TYPE_1 get ( ) { return new TYPE_1 ( ) ; },"['Insert ConstructorCall', 'Delete FieldRead']",738,"['Delete VariableRead', 'Insert ConstructorCall', 'Insert TypeReference']","['ConstructorCall', 'FieldRead']","['VariableRead', 'ConstructorCall', 'TypeReference']",Partial Match,0.25,0.3333333333333333,0.5,0.4,1,2,1
625,625,public void METHOD_1 ( ) { VAR_1 . delete ( VAR_2 . METHOD_2 ( ) . get ( 0 ) ) ; VAR_3 . assertTrue ( ( ( VAR_1 . count ( ) ) == 1 ) ) ; },public void METHOD_1 ( ) { VAR_1 . delete ( VAR_2 . METHOD_2 ( ) . get ( 0 ) ) ; assertTrue ( ( ( VAR_1 . count ( ) ) == 1 ) ) ; },['Update TypeAccess'],740,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
626,626,public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_1 = TYPE_1 . METHOD_1 ( ) ; },public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_1 = new TYPE_1 ( ) ; },"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",741,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
627,627,public java.util.Date METHOD_1 ( long VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 class ) ; },public java.util.Date METHOD_1 ( long VAR_1 ) { return TYPE_1 . METHOD_2 ( ) ; },['Delete TypeAccess'],742,"['Delete VariableRead', 'Delete TypeReference']",['TypeAccess'],"['VariableRead', 'TypeReference']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
628,628,public void METHOD_1 ( java.lang.Long data ) { VAR_1 = VAR_2 ; METHOD_2 ( java.lang.String . METHOD_3 ( data ) ) ; },public void METHOD_1 ( long data ) { VAR_1 = VAR_2 ; METHOD_2 ( java.lang.String . METHOD_3 ( data ) ) ; },['Update TypeReference'],743,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
629,629,"protected < TYPE_1 , TYPE_2 , TYPE_3 > TYPE_4 < TYPE_1 , TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_5 < TYPE_1 , TYPE_2 , TYPE_3 > VAR_1 ) { return new TYPE_6 ( VAR_1 ) ; }","private < TYPE_1 , TYPE_2 , TYPE_3 > TYPE_4 < TYPE_1 , TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_5 < TYPE_1 , TYPE_2 , TYPE_3 > VAR_1 ) { return new TYPE_6 < TYPE_1 , TYPE_2 , TYPE_3 > ( VAR_1 ) ; }",['Update Wra'],744,"['Update Wra', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference']",['Wra'],"['Wra', 'TypeReference', 'TypeReference', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.25,1.0,0.4,1,3,0
630,630,"public boolean METHOD_1 ( ) throws TYPE_1 , TYPE_2 { if ( ! ( this . METHOD_2 ( ) ) ) return false ; if ( ( this . METHOD_3 ( ) ) != 0 ) { return true ; } return false ; }","public boolean METHOD_1 ( ) throws TYPE_1 , TYPE_2 { if ( ! ( this . METHOD_2 ( ) ) ) return false ; if ( ( this . METHOD_3 ( ) ) == 0 ) { return true ; } return false ; }",['Update BinaryOperator'],745,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
631,631,"public int METHOD_1 ( int line , int VAR_1 ) { return ( VAR_2 . get ( ( line - 1 ) ) ) + VAR_1 ; }","public int METHOD_1 ( int line , int VAR_1 ) { return ( VAR_2 . get ( line ) ) + VAR_1 ; }","['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",746,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
632,632,"static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String path ) { return null ; }",static java.lang.String METHOD_1 ( java.lang.String path ) { return null ; },"['Delete TypeReference', 'Delete Parameter']",747,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
633,633,public double METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 [ index ] ; },public double METHOD_1 ( ) { return VAR_1 [ index ] ; },['Delete Invocation'],748,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
634,634,"public TYPE_1 METHOD_1 ( double VAR_1 , double to ) { VAR_2 = VAR_3 . METHOD_1 ( VAR_1 , to ) ; VAR_4 = VAR_5 . METHOD_1 ( VAR_1 , to ) ; VAR_6 = VAR_7 . METHOD_1 ( VAR_1 , to ) ; return VAR_8 ; }","public TYPE_1 METHOD_1 ( double VAR_1 , double to ) { VAR_2 = VAR_3 . METHOD_1 ( VAR_1 , to ) ; VAR_4 = VAR_3 . METHOD_1 ( VAR_1 , to ) ; VAR_6 = VAR_3 . METHOD_1 ( VAR_1 , to ) ; return VAR_8 ; }","['Update TypeAccess', 'Update TypeAccess']",749,"['Update FieldRead', 'Update FieldRead']","['TypeAccess', 'TypeAccess']","['FieldRead', 'FieldRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
635,635,"public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( VAR_2 class , false ) ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 class ) ; }","public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( VAR_2 class , false ) ) ; VAR_1 . METHOD_2 ( ""0"" , VAR_2 class ) ; }","['Insert Literal', 'Delete TypeAccess']",751,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
636,636,"public void METHOD_1 ( java.util.Date VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( query ( VAR_1 ) , new java.lang.String [ ] { } ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( query ( ) , new java.lang.String [ ] { } ) ; METHOD_4 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",752,"['Delete Parameter', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
637,637,public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.Void item ) { METHOD_2 ( ) ; },"['Update Parameter', 'Update TypeReference', 'Delete TypeReference']",753,"['Update TypeReference', 'Update TypeReference', 'Update Parameter']","['Parameter', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'Parameter']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
638,638,"public TYPE_1 METHOD_1 ( final android.content.Context context ) { return new TYPE_1 ( VAR_1 , VAR_2 . getString ( VAR_3 ) , context ) ; }","public TYPE_1 METHOD_1 ( final android.content.Context context ) { return new TYPE_1 ( VAR_1 , context ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",754,"['Delete FieldRead', 'Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
639,639,"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { long VAR_3 = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_5 = true ; METHOD_2 ( ) ; return VAR_3 != ( - 1 ) ; }","public boolean METHOD_1 ( int VAR_1 , boolean VAR_2 ) { long VAR_3 = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_5 = true ; METHOD_2 ( ) ; return VAR_3 != ( - 1 ) ; }",['Update TypeReference'],755,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
640,640,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . i ( VAR_4 , STRING_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_5 . put ( VAR_2 . METHOD_3 ( ) , VAR_2 ) ; METHOD_4 ( VAR_2 , STRING_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . i ( VAR_4 , STRING_1 ) ; VAR_5 . put ( VAR_2 . METHOD_3 ( ) , VAR_2 ) ; METHOD_4 ( VAR_2 , STRING_2 ) ; }","['Delete VariableRead', 'Delete Invocation']",756,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
641,641,public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },public boolean METHOD_1 ( ) { return false ; },"['Update TypeReference', 'Insert Return', 'Insert Literal', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",757,"['Update TypeReference', 'Insert Return', 'Insert Literal', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'Return', 'Literal', 'TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation']","['TypeReference', 'Return', 'Literal', 'TypeReference', 'TypeReference', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.7142857142857143,0.7142857142857143,0.7142857142857143,5,2,2
642,642,public double METHOD_1 ( ) { return FLOAT_1 ; },public double METHOD_1 ( ) { return 1.0 ; },"['Insert Literal', 'Delete FieldRead']",758,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
643,643,"protected void execute ( ) { METHOD_1 ( ) ; VAR_1 . set ( VAR_2 , VAR_3 ) ; }","protected void execute ( ) { METHOD_1 ( ) ; VAR_1 . set ( VAR_2 , VAR_2 ) ; }",['Update TypeAccess'],759,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
644,644,"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { VAR_3 . put ( VAR_1 , new java.util.ArrayList < TYPE_1 > ( ) ) ; } }",public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { VAR_3 . remove ( VAR_1 ) ; } },"['Update Invocation', 'Delete ConstructorCall']",760,"['Update Invocation', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation']","['Invocation', 'ConstructorCall']","['Invocation', 'ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation']",GPT Hallucinated Nodes,0.6666666666666666,0.4,1.0,0.5714285714285715,2,3,0
645,645,"public static void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + ( java.lang.String . METHOD_3 ( VAR_1 ) ) ) + STRING_2 ) , false ) ; }",public static void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + ( java.lang.String . METHOD_3 ( VAR_1 ) ) ) + STRING_2 ) ) ; },['Delete Literal'],762,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
646,646,"public static void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) . METHOD_5 ( ) ; } }","public static void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) . commit ( ) ; } }",['Update Invocation'],763,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
647,647,"private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String fileName ) throws java.io.IOException { return METHOD_1 ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + VAR_1 ) + ( VAR_2 ) ) + fileName ) ) ; }","protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String fileName ) throws java.io.IOException { return METHOD_1 ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + VAR_1 ) + ( VAR_2 ) ) + fileName ) ) ; }",['Update Wra'],764,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
648,648,"public static void METHOD_1 ( TYPE_1 p , int VAR_1 ) { if ( ( p . METHOD_2 ( VAR_1 ) ) != INT_1 ) return ; if ( p . METHOD_3 ( VAR_1 ) ) { java.lang.System.out.println ( STRING_1 ) ; } return ; }",public static void METHOD_1 ( TYPE_1 p ) { if ( ( p . METHOD_2 ( ) ) != INT_1 ) return ; if ( p . METHOD_3 ( ) ) { java.lang.System.out.println ( STRING_1 ) ; } return ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",765,"['Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Update Invocation', 'Update Invocation']","['TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'VariableRead', 'VariableRead', 'Invocation', 'Invocation']",Partial Match,0.5,0.6,0.75,0.6666666666666665,3,2,1
649,649,private void METHOD_1 ( int id ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( id ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( ) ; } },private void METHOD_1 ( int id ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( id ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) . commit ( ) ; } },['Update Invocation'],768,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
650,650,"private TYPE_1 METHOD_1 ( java.lang.String key ) { return TYPE_1 . METHOD_2 ( this . VAR_1 . replace ( VAR_2 , TYPE_1 . METHOD_3 ( key ) ) , VAR_3 ) ; }","private TYPE_1 METHOD_1 ( java.lang.String key ) { return TYPE_1 . METHOD_2 ( this . VAR_1 . replace ( VAR_2 , TYPE_1 . METHOD_3 ( key ) ) ) ; }",['Delete TypeAccess'],770,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
651,651,public double METHOD_1 ( double VAR_1 ) { return VAR_1 / ( ( VAR_2 . t ) / ( VAR_2 . k ) ) ; },public long METHOD_1 ( long VAR_1 ) { return VAR_1 / ( ( VAR_2 . t ) / ( VAR_2 . k ) ) ; },"['Update TypeReference', 'Update TypeReference']",772,"['Update TypeReference', 'Update TypeReference', 'Update Parameter', 'Update VariableRead']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'Parameter', 'VariableRead']",GPT Hallucinated Nodes,0.3333333333333333,0.5,1.0,0.6666666666666666,2,2,0
652,652,public void METHOD_1 ( ) { this . VAR_1 = new java.util.ArrayList < TYPE_1 < TYPE_2 > > ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; },"['Insert Literal', 'Delete ConstructorCall']",774,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.4,1.0,0.5714285714285715,2,3,0
653,653,"public java.util.Iterator < TYPE_1 > iterator ( ) { return this . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public java.util.Iterator < TYPE_1 > iterator ( ) { return METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete ThisAccess'],775,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
654,654,"public void METHOD_1 ( int count , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) VAR_2 . setText ( java.lang.Integer.toString ( count ) ) ; else VAR_2 . setText ( STRING_1 ) ; }","public void METHOD_1 ( int count , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) VAR_2 . setText ( java.lang.Integer.toString ( count ) ) ; else VAR_2 . setText ( 0 ) ; }","['Insert Literal', 'Delete TypeAccess']",776,"['Delete Literal', 'Insert Literal']","['Literal', 'TypeAccess']","['Literal', 'Literal']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
655,655,public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_1 ( VAR_1 ) ; },"['Insert ThisAccess', 'Delete TypeAccess']",778,"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Insert ThisAccess', 'Insert Invocation']","['ThisAccess', 'TypeAccess']","['VariableRead', 'TypeAccess', 'Invocation', 'ThisAccess', 'Invocation']",GPT Hallucinated Nodes,0.5,0.4,1.0,0.5714285714285715,2,3,0
656,656,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . end = VAR_2 . getName ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . end = VAR_1 ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",779,"['Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'TypeAccess', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.75,1.0,0.8571428571428571,3,1,0
657,657,"public static double METHOD_1 ( double n ) { if ( n < 0 ) { throw new TYPE_1 ( STRING_1 ) ; } if ( n == 0 ) { return 0 ; } return TYPE_2 . METHOD_2 ( n , 1 ) ; }","public static double METHOD_1 ( double n ) { if ( n < 0 ) { throw new TYPE_1 ( ) ; } return TYPE_2 . METHOD_2 ( n , 1 ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",780,"['Delete Literal', 'Delete Return', 'Delete BinaryOperator', 'Delete Literal', 'Delete If']","['FieldRead', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['Literal', 'Return', 'BinaryOperator', 'Literal', 'If']",GPT Missed Nodes,0.5714285714285714,1.0,0.625,0.7692307692307693,5,0,3
658,658,public final java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( ) ; },public final java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; },['Insert ThisAccess'],782,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
659,659,"public java.util.List METHOD_1 ( java.lang.String item , java.lang.String type ) ;",public java.util.List METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",783,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
660,660,"public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ""0"" ) ) ; }",public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( 0 ) ) ; },['Update Literal'],784,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
661,661,private static void METHOD_1 ( java.lang.String message ) { java.lang.System.out.println ( ( STRING_1 + message ) ) ; },private static void METHOD_1 ( java.lang.String message ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",786,"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator']","['TypeAccess', 'FieldRead', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation']","['TypeAccess', 'TypeAccess', 'FieldRead', 'Invocation', 'Literal', 'VariableRead', 'BinaryOperator']",GPT Hallucinated Nodes,0.8333333333333334,0.7142857142857143,0.8333333333333334,0.7692307692307692,5,2,1
662,662,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) , position , VAR_4 . METHOD_7 ( ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) , position ) ; }","['Delete TypeAccess', 'Delete Invocation']",787,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
663,663,public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( true ) ; },public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; },['Delete Literal'],788,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
664,664,"public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] VAR_2 ) { for ( java.lang.String VAR_3 : VAR_2 ) { if ( ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 ) ) != ( VAR_4 ) ) { return false ; } } return true ; }","public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] VAR_2 ) { for ( java.lang.String VAR_3 : VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( VAR_3 ) ) != ( VAR_4 ) ) { return false ; } } return true ; }",['Delete TypeAccess'],790,"['Delete TypeAccess', 'Delete VariableRead', 'Update Invocation']",['TypeAccess'],"['TypeAccess', 'VariableRead', 'Invocation']",GPT Hallucinated Nodes,0.3333333333333333,0.3333333333333333,1.0,0.5,1,2,0
665,665,"public final void METHOD_1 ( java.lang.String name , long date ) { VAR_1 . METHOD_1 ( name , date ) ; }","protected final void METHOD_1 ( java.lang.String name , long date ) { VAR_1 . METHOD_1 ( name , date ) ; }",['Update Wra'],791,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
666,666,"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_3 . add ( VAR_1 , VAR_4 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( false ) ; VAR_3 . add ( VAR_1 , VAR_4 ) ; }",['Update Literal'],792,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
667,667,public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . METHOD_2 ( ) ; return ; } ( this . VAR_2 ) ++ ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . METHOD_2 ( ) ; } ( this . VAR_2 ) ++ ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; },['Delete Return'],795,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
668,668,public TYPE_1 METHOD_1 ( long id ) { return VAR_1 . METHOD_2 ( id ) ; },public TYPE_1 METHOD_1 ( int id ) { return VAR_1 . METHOD_2 ( id ) ; },['Update TypeReference'],796,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
669,669,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertEquals ( INT_1 , ( INT_2 + INT_3 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertEquals ( INT_1 , ( INT_2 + INT_2 ) ) ; }",['Update FieldRead'],797,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
670,670,public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation']",799,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
671,671,"public int METHOD_1 ( ) { return VAR_1 . METHOD_2 ( query , true ) ; }",public int METHOD_1 ( ) { return VAR_1 . METHOD_2 ( query ) ; },['Delete Literal'],800,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
672,672,public static boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) return true ; return false ; },public static boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) return true ; return true ; },['Update Literal'],801,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
673,673,public int METHOD_1 ( int position ) { if ( position >= ( VAR_1 . size ( ) ) ) { return 1 ; } else { return 0 ; } },public int METHOD_1 ( int position ) { return 1 ; },"['Move Return', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",803,['Delete If'],"['Return', 'VariableRead', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Block', 'Literal', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.125,1.0,0.1,0.18181818181818182,1,0,9
674,674,public float METHOD_1 ( long VAR_1 ) { return FLOAT_1 ; },public float METHOD_1 ( long VAR_1 ) { return 0 ; },"['Insert Literal', 'Delete FieldRead']",804,"['Delete TypeAccess', 'Delete FieldRead', 'Insert Literal']","['Literal', 'FieldRead']","['TypeAccess', 'FieldRead', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
675,675,public java.util.ArrayList < java.lang.String > METHOD_1 ( ) { return VAR_1 ; },public java.util.ArrayList < java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; },['Insert ThisAccess'],805,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
676,676,"public void METHOD_1 ( ) { TYPE_1 TYPE_2 = new TYPE_1 ( ) ; int sum = TYPE_2 . METHOD_2 ( INT_1 , INT_2 ) ; VAR_1 . assertEquals ( INT_3 , sum ) ; }","public void METHOD_1 ( ) { TYPE_1 TYPE_2 = new TYPE_1 ( ) ; int sum = TYPE_2 . METHOD_2 ( INT_1 , INT_2 ) ; VAR_1 . assertEquals ( 1 , sum ) ; }","['Insert Literal', 'Delete TypeAccess']",806,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
677,677,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = ( ( this . VAR_2 ) + STRING_1 ) + VAR_1 ; },"public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = ( ( this . VAR_2 ) + ""\n"" ) + VAR_1 ; }","['Insert Literal', 'Delete FieldRead']",807,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
678,678,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 method , TYPE_4 VAR_2 ) throws java.io.IOException { return METHOD_1 ( VAR_1 , method , VAR_2 , TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 method , TYPE_4 VAR_2 ) throws java.io.IOException { return METHOD_1 ( VAR_1 , method , VAR_2 , TYPE_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; }",['Update VariableRead'],808,['Update FieldRead'],['VariableRead'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
679,679,"public void METHOD_1 ( java.lang.Long VAR_1 , java.lang.String text ) { this . VAR_2 . METHOD_1 ( VAR_1 , text ) ; }",public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",809,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
680,680,"public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 context ) { return TYPE_3 . METHOD_2 ( context , VAR_1 ) ; }","public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 context ) { return TYPE_3 . METHOD_2 ( context , VAR_1 , true , true ) ; }","['Insert Literal', 'Insert Literal']",810,"['Insert Literal', 'Insert Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
681,681,boolean METHOD_1 ( ) { return ( VAR_1 ) < INT_1 ? true : false ; },boolean METHOD_1 ( ) { return ( VAR_1 ) <= INT_1 ? true : false ; },['Update BinaryOperator'],811,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
682,682,"public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.Class < ? extends TYPE_2 > type ) { return null ; }","public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.Class < ? extends TYPE_2 > type ) { }","['Delete Literal', 'Delete Return']",812,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
683,683,"public java.lang.String METHOD_1 ( java.util.Map VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_3 . METHOD_2 ( VAR_4 , INT_1 ) ) ; return STRING_2 ; }","public java.lang.String METHOD_1 ( java.util.Map VAR_1 ) { VAR_2 . put ( STRING_2 , VAR_3 . METHOD_2 ( VAR_4 , INT_1 ) ) ; return STRING_2 ; }",['Update TypeAccess'],813,['Update Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
684,684,"public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; }","public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( VAR_2 , false ) ) ; }","['Insert Literal', 'Delete TypeAccess']",814,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
685,685,public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_3 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( FLOAT_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_3 . METHOD_4 ( ) ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",815,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
686,686,"private void METHOD_1 ( boolean error ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_3 ) ; VAR_4 . setText ( VAR_1 ) ; METHOD_5 ( VAR_5 , error ) ; }","private void METHOD_1 ( boolean error ) { java.lang.String VAR_1 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . toString ( VAR_3 ) ; VAR_4 . setText ( VAR_1 ) ; METHOD_5 ( VAR_5 , error ) ; }","['Update Invocation', 'Delete TypeAccess']",816,"['Delete TypeAccess', 'Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'Invocation', 'Invocation']",Exact Match,1.0,0.3333333333333333,0.5,0.4,1,2,1
687,687,public void METHOD_1 ( java.util.Date VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( ) { this . VAR_2 = new java.util.Date ( ) ; },"['Insert ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",817,"['Delete Parameter', 'Insert ConstructorCall']","['ConstructorCall', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'ConstructorCall']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
688,688,public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) { this . VAR_2 . add ( VAR_1 ) ; } },public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ! ( this . VAR_2 . contains ( VAR_1 ) ) ) { this . VAR_2 . add ( VAR_1 ) ; } },"['Update Invocation', 'Insert FieldRead', 'Insert ThisAccess']",819,"['Insert ThisAccess', 'Insert FieldRead', 'Insert Invocation', 'Delete Invocation']","['Invocation', 'FieldRead', 'ThisAccess']","['ThisAccess', 'FieldRead', 'Invocation', 'Invocation']",Exact Match,1.0,0.5,0.6666666666666666,0.5714285714285715,2,2,1
689,689,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; return ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },['Delete Return'],820,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
690,690,"public void METHOD_1 ( TYPE_1 source ) { java.util.List VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_2 . contains ( METHOD_2 ( ) ) ) { METHOD_5 ( true , null ) ; } }",public void METHOD_1 ( TYPE_1 source ) { java.util.List VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_2 . contains ( METHOD_2 ( ) ) ) { METHOD_5 ( true ) ; } },['Delete Literal'],821,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
691,691,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer VAR_1 , java.util.Date VAR_2 ) ;",public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",822,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
692,692,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 . METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_5 . METHOD_3 ( VAR_4 class ) ; VAR_5 = new TYPE_6 ( VAR_3 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 . METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( VAR_4 class ) ; VAR_5 = new TYPE_6 ( VAR_3 ) ; },['Update TypeAccess'],825,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
693,693,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; return ( VAR_2 != null ) || ( VAR_4 != null ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ; return ( VAR_2 == null ) || ( VAR_4 != null ) ; },"['Update Invocation', 'Update BinaryOperator']",827,"['Update Invocation', 'Update BinaryOperator']","['Invocation', 'BinaryOperator']","['Invocation', 'BinaryOperator']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
694,694,"public void METHOD_1 ( int VAR_1 , int VAR_2 ) throws java.io.IOException ;",public void METHOD_1 ( int VAR_2 ) throws java.io.IOException ;,"['Delete TypeReference', 'Delete Parameter']",829,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
695,695,public void METHOD_1 ( TYPE_1 item ) ;,public void METHOD_1 ( int key ) ;,"['Update Parameter', 'Update TypeReference']",831,"['Update TypeReference', 'Update Parameter']","['Parameter', 'TypeReference']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
696,696,private boolean METHOD_1 ( TYPE_1 b ) { if ( b == null ) return false ; TYPE_2 VAR_1 = VAR_2 . getType ( ) ; for ( TYPE_2 VAR_3 : VAR_4 ) if ( VAR_5 . equals ( VAR_1 ) ) return true ; return false ; },private boolean METHOD_1 ( TYPE_1 b ) { TYPE_2 VAR_1 = VAR_2 . getType ( ) ; for ( TYPE_2 VAR_3 : VAR_4 ) if ( VAR_5 . equals ( VAR_1 ) ) return true ; return false ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",832,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
697,697,"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; delete ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; delete ( VAR_1 , VAR_2 , VAR_1 , VAR_2 ) ; }","['Update VariableRead', 'Update VariableRead']",833,"['Update VariableRead', 'Update VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
698,698,public TYPE_1 METHOD_1 ( TYPE_2 arg ) { return new TYPE_1 ( ) ; },public void METHOD_1 ( ) { },"['Update TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete ConstructorCall', 'Delete Return']",834,"['Update TypeReference', 'Update Parameter', 'Delete Return', 'Delete ConstructorCall']","['TypeReference', 'TypeReference', 'Parameter', 'ConstructorCall', 'Return']","['TypeReference', 'Parameter', 'Return', 'ConstructorCall']",Exact Match,1.0,0.75,0.6,0.6666666666666665,3,1,2
699,699,"public void METHOD_1 ( ) { state = VAR_1 ; METHOD_2 ( VAR_2 , null ) ; }",public void METHOD_1 ( ) { state = VAR_1 ; METHOD_2 ( VAR_2 ) ; },['Delete Literal'],835,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
700,700,"private void METHOD_1 ( long VAR_1 , long VAR_2 , java.lang.String VAR_3 ) { java.lang.String result = this . VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result , ( VAR_3 + STRING_1 ) ) ; }","private void METHOD_1 ( long VAR_1 , long VAR_2 , java.lang.String VAR_3 ) { java.lang.String result = this . VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result , VAR_3 ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",837,"['Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
701,701,public boolean METHOD_1 ( TYPE_1 state ) { if ( ( state . METHOD_2 ( ) ) == null ) { return false ; } TYPE_2 VAR_1 = state . METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . contains ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 state ) { TYPE_2 VAR_1 = state . METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_2 . contains ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",838,"['Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['VariableRead', 'Invocation', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Invocation', 'Literal', 'BinaryOperator', 'Return']",Partial Match,0.625,0.8333333333333334,0.625,0.7142857142857143,5,1,3
702,702,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_1 . METHOD_3 ( ) , new TYPE_3 ( VAR_2 . getId ( ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 . getId ( ) ) ) ; }","['Delete VariableRead', 'Delete Invocation']",840,"['Delete Invocation', 'Delete FieldRead']","['VariableRead', 'Invocation']","['Invocation', 'FieldRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
703,703,public boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 1 ) { return false ; } else if ( VAR_1 > ( this . METHOD_2 ( ) ) ) { return false ; } else { return true ; } },public boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) { return false ; } else if ( VAR_1 > ( this . METHOD_2 ( ) ) ) { return false ; } else { return true ; } },['Update Literal'],841,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
704,704,"public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , int offset , int VAR_2 ) { return TYPE_4 . METHOD_1 ( VAR_1 . METHOD_2 ( VAR_3 , 0 , VAR_4 ) . METHOD_3 ( ""name"" , 1 ) , offset , VAR_2 , VAR_5 class ) ; }","public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , int offset , int VAR_2 ) { return TYPE_4 . METHOD_1 ( VAR_1 . METHOD_3 ( ""name"" , 1 ) , offset , VAR_2 , VAR_5 class ) ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",842,['Delete Invocation'],"['VariableRead', 'TypeAccess', 'Literal', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.25,1.0,0.2,0.33333333333333337,1,0,4
705,705,"void METHOD_1 ( double VAR_1 , int VAR_2 ) ;",void METHOD_1 ( int VAR_1 ) ;,"['Update Parameter', 'Delete TypeReference', 'Delete Parameter']",843,"['Delete Parameter', 'Update TypeReference']","['Parameter', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference']",Exact Match,1.0,0.5,0.3333333333333333,0.4,1,1,2
706,706,"protected TYPE_1 METHOD_1 ( java.lang.Double VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this , VAR_3 ) ; return VAR_2 ; }","protected TYPE_1 METHOD_1 ( java.lang.Double VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this , true ) ; return VAR_2 ; }","['Update ConstructorCall', 'Insert Literal', 'Delete FieldRead']",845,"['Delete VariableRead', 'Insert Literal']","['ConstructorCall', 'Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
707,707,public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( STRING_1 ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; },['Delete TypeAccess'],846,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
708,708,public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return null ; } return VAR_2 . METHOD_3 ( ) ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",847,"['Delete If', 'Delete Return', 'Delete Literal']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Return', 'Literal']",GPT Missed Nodes,0.5,1.0,0.42857142857142855,0.6,3,0,4
709,709,"public static void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) < FLOAT_1 ) TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ; }","private static void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) < FLOAT_1 ) TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ; }",['Update Wra'],848,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
710,710,"java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 status , TYPE_4 VAR_2 , TYPE_5 item , TYPE_6 VAR_3 , TYPE_7 VAR_4 ) ;","java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 status , TYPE_4 VAR_2 , TYPE_5 item , TYPE_7 VAR_4 ) ;","['Delete TypeReference', 'Delete Parameter']",849,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
711,711,"private void METHOD_1 ( int [ ] VAR_1 ) { METHOD_1 ( VAR_1 [ VAR_2 ] , VAR_1 [ VAR_3 ] ) ; }","public void METHOD_1 ( int [ ] VAR_1 ) { METHOD_1 ( VAR_1 [ VAR_2 ] , VAR_1 [ VAR_3 ] ) ; }",['Update Wra'],850,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
712,712,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; VAR_1 . METHOD_2 ( STRING_3 , ( STRING_4 + ( VAR_3 ) ) ) ; }","public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; VAR_1 . METHOD_2 ( STRING_3 , ( STRING_4 + ( VAR_3 ) ) ) ; }",['Insert Wra'],851,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
713,713,"void METHOD_1 ( int VAR_1 , TYPE_1 < TYPE_2 > response ) ;",void METHOD_1 ( int VAR_1 ) ;,"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",852,"['Delete Parameter', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
714,714,private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } else { VAR_1 . METHOD_2 ( ) ; } VAR_2 = ! ( VAR_3 . equals ( null ) ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = new TYPE_1 ( ) ; } else { VAR_1 . METHOD_2 ( ) ; } VAR_2 = ! ( VAR_3 . equals ( null ) ) ; },['Update BinaryOperator'],853,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
715,715,public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( ) { VAR_4 . METHOD_6 ( ) ; } } ) ; },public void METHOD_1 ( ) { METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( ) { VAR_4 . METHOD_6 ( ) ; } } ) ; },['Update Invocation'],854,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
716,716,"public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( name , VAR_1 , this ) ; VAR_2 . METHOD_2 ( ) ; this . VAR_3 . add ( VAR_2 ) ; this . METHOD_2 ( ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( name , VAR_1 , this ) ; this . VAR_3 . add ( VAR_2 ) ; this . METHOD_2 ( ) ; return VAR_2 ; }","['Delete VariableRead', 'Delete Invocation']",855,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
717,717,public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; },['Update Wra'],856,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
718,718,"public java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { return METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) , new java.lang.String [ ] { STRING_2 } ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) , new java.lang.String [ ] { STRING_2 } ) ; }","['Delete TypeReference', 'Delete Parameter']",857,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
719,719,"public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 , java.util.Date VAR_2 , TYPE_2 VAR_3 , int VAR_4 ) ;","public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 , java.util.Date VAR_2 , TYPE_2 VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",858,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
720,720,protected TYPE_1 METHOD_1 ( ) { throw new TYPE_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { throw new TYPE_2 ( ) ; },['Update Wra'],859,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
721,721,"private void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 ) ) ; } }",private void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ; } },"['Update Invocation', 'Move Invocation', 'Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete VariableRead']",860,['Delete VariableRead'],"['Invocation', 'Invocation', 'Invocation', 'Invocation', 'VariableRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,1.0,0.16666666666666666,0.2857142857142857,1,0,5
722,722,private void METHOD_1 ( java.awt.Color VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.awt.Color VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update Wra'],861,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
723,723,"public static TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) . get ( ) . VAR_1 ; java.lang.String VAR_3 = VAR_2 . METHOD_2 ( ) . get ( ) . VAR_4 ; TYPE_2 . METHOD_1 ( VAR_1 , VAR_3 ) ; return VAR_5 ; }","public static void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) . get ( ) . VAR_1 ; java.lang.String VAR_3 = VAR_2 . METHOD_2 ( ) . get ( ) . VAR_4 ; TYPE_2 . METHOD_1 ( VAR_1 , VAR_3 ) ; }","['Update TypeReference', 'Delete FieldRead', 'Delete Return']",862,"['Update TypeReference', 'Delete Return']","['TypeReference', 'FieldRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
724,724,private void METHOD_1 ( int VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = STRING_1 + VAR_1 ; if ( VAR_1 > 0 ) { VAR_3 . METHOD_2 ( ( STRING_2 + VAR_2 ) ) ; handle ( ) . METHOD_3 ( VAR_2 ) ; } },private void METHOD_1 ( int VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = STRING_1 + VAR_1 ; if ( VAR_1 > 1 ) { VAR_3 . METHOD_2 ( ( STRING_2 + VAR_2 ) ) ; handle ( ) . METHOD_3 ( VAR_2 ) ; } },['Update Literal'],864,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
725,725,"public boolean METHOD_1 ( TYPE_1 b , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ! ( VAR_1 . METHOD_3 ( VAR_3 ) ) ) ; }","public boolean METHOD_1 ( TYPE_1 b , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return ( ! ( VAR_2 . METHOD_2 ( ) ) ) && ( ! ( VAR_2 . METHOD_3 ( VAR_3 ) ) ) ; }","['Update VariableRead', 'Update VariableRead']",865,"['Update FieldRead', 'Update FieldRead']","['VariableRead', 'VariableRead']","['FieldRead', 'FieldRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
726,726,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . id = VAR_3 ; ( VAR_3 ) ++ ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . status = STRING_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String status ) { this . id = VAR_3 ; ( VAR_3 ) ++ ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . status = STRING_1 ; }","['Insert Parameter', 'Insert TypeReference']",866,['Insert Parameter'],"['Parameter', 'TypeReference']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
727,727,public TYPE_1 METHOD_1 ( java.lang.String className ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( className ) ) { return VAR_1 . METHOD_2 ( ) ; } } return null ; },public TYPE_1 METHOD_1 ( java.lang.String className ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( className ) ) { return VAR_1 . METHOD_2 ( ) ; } } return null ; },['Update Invocation'],867,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
728,728,void METHOD_1 ( boolean VAR_1 ) { VAR_2 = false ; VAR_3 = false ; response . METHOD_2 ( ( VAR_4 ? VAR_5 : VAR_6 . METHOD_3 ( ) ? VAR_7 : VAR_8 ) ) ; VAR_9 = VAR_1 ; METHOD_4 ( true ) ; },"void METHOD_1 ( boolean VAR_4 , boolean VAR_1 ) { VAR_2 = false ; VAR_3 = false ; response . METHOD_2 ( ( VAR_4 ? VAR_5 : VAR_6 . METHOD_3 ( ) ? VAR_7 : VAR_8 ) ) ; VAR_9 = VAR_1 ; METHOD_4 ( true ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete FieldRead']",868,['Insert Parameter'],"['Parameter', 'TypeReference', 'VariableRead', 'FieldRead']",['Parameter'],GPT Missed Nodes,0.25,1.0,0.25,0.4,1,0,3
729,729,"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , TYPE_1 . METHOD_3 ( ) . METHOD_4 ( METHOD_5 ( ) , METHOD_6 ( ) ) ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , TYPE_1 . METHOD_3 ( ) . METHOD_4 ( METHOD_5 ( ) , METHOD_6 ( ) ) ) ; }",['Update Wra'],869,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
730,730,public void METHOD_1 ( int i ) { this . VAR_1 = i ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Parameter', 'Update TypeReference', 'Update VariableRead']",870,"['Update Parameter', 'Update TypeReference', 'Update Assignment', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'TypeReference', 'Assignment', 'VariableRead']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
731,731,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_2 . trim ( ) . isEmpty ( ) ) ) return ; VAR_3 . setText ( VAR_1 ) ; VAR_4 . get ( ) . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . setText ( VAR_1 ) ; VAR_4 . get ( ) . METHOD_2 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",871,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Invocation', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.125,1.0,0.1,0.18181818181818182,1,0,9
732,732,public java.lang.String getName ( ) { return this . METHOD_1 ( ) . getName ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; },public java.lang.String getName ( ) { return this . METHOD_1 ( ) . getName ( ) . METHOD_2 ( ) . get ( ) ; },['Delete TypeAccess'],872,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
733,733,"public static boolean METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , TYPE_1 VAR_3 , double VAR_4 , TYPE_2 VAR_5 ) { return TYPE_3 . METHOD_1 ( VAR_6 . x , VAR_6 . y , VAR_2 , VAR_7 . x , VAR_7 . y , VAR_4 , VAR_5 ) ; }","public static boolean METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , TYPE_1 VAR_3 , double VAR_4 , TYPE_2 VAR_5 ) { return TYPE_3 . METHOD_1 ( VAR_6 . x , VAR_6 . y , VAR_4 , VAR_7 . x , VAR_7 . y , VAR_4 , VAR_5 ) ; }",['Update VariableRead'],873,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
734,734,"public java.lang.String METHOD_1 ( ) { return VAR_1 . getString ( STRING_1 , STRING_2 ) ; }",public java.lang.String METHOD_1 ( ) { return VAR_1 . getString ( STRING_1 ) ; },['Delete TypeAccess'],874,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
735,735,"public boolean METHOD_1 ( TYPE_1 b , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return true ; }","protected boolean METHOD_1 ( TYPE_1 b , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return true ; }",['Update Wra'],875,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
736,736,private void init ( ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_2 = new java.lang.StringBuilder ( ) ; VAR_3 = new java.lang.StringBuilder ( ) ; VAR_4 = new java.lang.StringBuilder ( ) ; METHOD_1 ( true ) ; },private void init ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.lang.StringBuilder ( ) ; VAR_3 = new java.lang.StringBuilder ( ) ; VAR_4 = new java.lang.StringBuilder ( ) ; METHOD_1 ( true ) ; },['Update ConstructorCall'],876,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
737,737,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) return false ; return VAR_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) return false ; return VAR_1 . METHOD_4 ( this ) ; },"['Move VariableRead', 'Delete Invocation']",877,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
738,738,"public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 . METHOD_2 ( ) . compareTo ( VAR_2 . METHOD_2 ( ) ) ; }",['Update Invocation'],878,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
739,739,"public boolean METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 listener ) { return METHOD_1 ( VAR_1 , false , STRING_1 , true , listener ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 listener ) { return METHOD_1 ( VAR_1 , false , listener ) ; }","['Delete TypeAccess', 'Delete Literal']",879,"['Delete Literal', 'Delete Literal', 'Delete VariableRead']","['TypeAccess', 'Literal']","['Literal', 'Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.3333333333333333,0.5,0.4,1,2,1
740,740,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return list ( VAR_1 , VAR_2 , null , false , 0 ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return list ( VAR_1 , VAR_2 , null , 0 ) ; }",['Delete Literal'],880,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
741,741,"public static java.lang.String METHOD_1 ( TYPE_1 target ) { return java.lang.String.format ( STRING_1 , VAR_1 . get ( VAR_2 . getClass ( ) ) , target . METHOD_2 ( ) ) ; }","public static java.lang.String METHOD_1 ( TYPE_1 target ) { return java.lang.String.format ( STRING_1 , VAR_1 . get ( VAR_2 . getClass ( ) ) , VAR_2 . getName ( ) ) ; }","['Update Invocation', 'Insert TypeAccess', 'Delete VariableRead']",881,"['Delete Invocation', 'Insert FieldRead', 'Insert Invocation']","['Invocation', 'TypeAccess', 'VariableRead']","['Invocation', 'FieldRead', 'Invocation']",Partial Match,0.25,0.0,0.0,0.0,0,3,3
742,742,public synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },['Delete Wra'],882,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
743,743,public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( event . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( new TYPE_3 ( ) ) ; VAR_1 . METHOD_4 ( new TYPE_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( event . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( new TYPE_3 ( ) ) ; },"['Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",883,"['Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall', 'Invocation']","['Invocation', 'ConstructorCall', 'TypeReference']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
744,744,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation', 'Delete ConstructorCall']",885,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead']","['VariableRead', 'Invocation', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'Invocation', 'FieldRead']",Partial Match,0.4,0.5,0.6666666666666666,0.5714285714285715,2,2,1
745,745,"protected boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.lang.String > VAR_2 ) { for ( java.lang.String str : VAR_2 ) { if ( VAR_3 . contains ( str ) ) return true ; } return false ; }","private boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.lang.String > VAR_2 ) { for ( java.lang.String str : VAR_2 ) { if ( VAR_3 . contains ( str ) ) return true ; } return false ; }",['Update Wra'],886,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
746,746,"public void METHOD_1 ( ) throws java.io.IOException { for ( TYPE_1 VAR_1 : VAR_2 ) { try { VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 , VAR_3 , STRING_3 ) ) ; } catch ( java.io.IOException VAR_4 ) { } } java.lang.System.exit ( 0 ) ; }","public void METHOD_1 ( ) throws java.io.IOException { for ( TYPE_1 VAR_1 : VAR_2 ) { try { VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 , VAR_3 , null ) ) ; } catch ( java.io.IOException VAR_4 ) { } } java.lang.System.exit ( 0 ) ; }","['Insert Literal', 'Delete FieldRead']",887,"['Delete Literal', 'Insert Literal']","['Literal', 'FieldRead']","['Literal', 'Literal']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
747,747,public static TYPE_1 METHOD_1 ( TYPE_2 context ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( context ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( TYPE_2 context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",888,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
748,748,public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ( i + 1 ) ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( i ) ; },"['Move FieldRead', 'Delete Literal', 'Delete BinaryOperator']",890,"['Delete Literal', 'Delete BinaryOperator']","['FieldRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
749,749,protected final boolean METHOD_1 ( ) { if ( VAR_1 ) { return false ; } VAR_1 = true ; return true ; },public final boolean METHOD_1 ( ) { if ( VAR_1 ) { return false ; } VAR_1 = true ; return true ; },['Update Wra'],891,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
750,750,"public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 status = METHOD_2 ( VAR_2 ) ; if ( status == null ) { return null ; } return status == ( VAR_3 ) ? true : null ; }","public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 status = METHOD_2 ( VAR_2 ) ; if ( status == null ) { return false ; } return status == ( VAR_3 ) ? true : false ; }","['Update Literal', 'Update Literal']",892,"['Update Literal', 'Update Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
751,751,public void METHOD_1 ( int n ) { for ( int i = 0 ; i < n ; i ++ ) { java.lang.System.out.print ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; } },public void METHOD_1 ( int n ) { for ( int i = 1 ; i < n ; i ++ ) { java.lang.System.out.print ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; } },['Update Literal'],893,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
752,752,"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 , filePath , VAR_3 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 , filePath ) ; }",['Delete TypeAccess'],894,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
753,753,private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_1 writer = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( VAR_2 ) > 0 ) { writer . METHOD_3 ( VAR_2 ) ; } return writer ; },private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_1 writer = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( VAR_2 ) != null ) { writer . METHOD_3 ( VAR_2 ) ; } return writer ; },"['Update BinaryOperator', 'Update Literal']",895,"['Insert BinaryOperator', 'Insert Literal', 'Delete Literal', 'Delete BinaryOperator']","['BinaryOperator', 'Literal']","['BinaryOperator', 'Literal', 'Literal', 'BinaryOperator']",Exact Match,1.0,0.0,0.0,0.0,0,4,2
754,754,public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 ; java.lang.String VAR_2 ; VAR_1 = VAR_3 . getText ( ) . toString ( ) ; VAR_2 = VAR_4 . getText ( ) . toString ( ) ; METHOD_2 ( ) ; },"public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 ; java.lang.String VAR_2 ; VAR_1 = VAR_3 . getText ( ) . toString ( ) ; VAR_2 = VAR_4 . getText ( ) . toString ( ) ; start ( VAR_1 , VAR_2 ) ; }","['Update Invocation', 'Insert VariableRead', 'Insert VariableRead']",897,"['Delete Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert VariableRead']","['Invocation', 'VariableRead', 'VariableRead']","['Invocation', 'Invocation', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.5,0.6666666666666666,0.5714285714285715,2,2,1
755,755,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( context , VAR_3 , false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( context , VAR_3 , true ) ; }",['Update Literal'],898,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
756,756,public TYPE_1 METHOD_1 ( java.lang.Long id ) throws TYPE_2 { return this . VAR_1 . METHOD_1 ( id ) ; },public TYPE_1 METHOD_1 ( java.lang.Long id ) throws TYPE_2 { return VAR_1 . METHOD_1 ( id ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",899,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
757,757,"public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { TYPE_2 VAR_5 = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; VAR_6 . execute ( VAR_3 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { TYPE_2 VAR_5 = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; VAR_6 . execute ( VAR_3 , VAR_1 , VAR_2 ) ; }","['Insert VariableRead', 'Insert VariableRead']",900,"['Insert VariableRead', 'Insert VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
758,758,"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , STRING_1 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },['Delete TypeAccess'],902,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
759,759,"public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }","public static TYPE_1 METHOD_1 ( android.content.Context context ) { return new TYPE_1 ( context , VAR_1 , VAR_2 ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead']",904,"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.75,1.0,0.8571428571428571,3,1,0
760,760,public void METHOD_1 ( ) { if ( ! ( this . VAR_1 ) ) VAR_2 . remove ( this ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ! ( this . VAR_1 ) ) VAR_2 . add ( this ) ; super . METHOD_1 ( ) ; },['Update Invocation'],905,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
761,761,"public void METHOD_1 ( long VAR_1 , java.lang.String className ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , className ) ; }","public void METHOD_1 ( long VAR_1 , java.lang.String className ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , className ) ; }",['Update Invocation'],906,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
762,762,"protected void METHOD_1 ( java.lang.Double result ) { VAR_1 . METHOD_2 ( VAR_2 , result ) ; }","protected void METHOD_1 ( java.lang.Long result ) { VAR_1 . METHOD_2 ( VAR_2 , result ) ; }",['Update TypeReference'],907,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
763,763,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.util.List < TYPE_1 > result = VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . assertThat ( result , TYPE_2 . METHOD_2 ( VAR_4 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.util.List < TYPE_1 > result = VAR_2 . METHOD_1 ( VAR_1 ) ; assertThat ( result , TYPE_2 . METHOD_2 ( VAR_4 ) ) ; }",['Update TypeAccess'],908,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
764,764,private static java.lang.String METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return VAR_2 . getString ( STRING_1 ) ; } else { return VAR_2 . getString ( STRING_2 ) ; } },public static java.lang.String METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return VAR_2 . getString ( STRING_1 ) ; } else { return VAR_2 . getString ( STRING_2 ) ; } },['Update Wra'],909,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
765,765,"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) , STRING_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; },['Delete TypeAccess'],910,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
766,766,"public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . replaceAll ( STRING_1 , STRING_2 ) ; } else { return null ; } }","private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . replaceAll ( STRING_1 , STRING_2 ) ; } else { return null ; } }",['Update Wra'],911,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
767,767,"public static java.lang.String METHOD_1 ( final java.lang.String string , final char VAR_1 ) { final java.lang.String VAR_2 = java.lang.String . METHOD_2 ( VAR_1 ) ; return VAR_3 . replace ( ( STRING_1 + VAR_2 ) , VAR_2 ) ; }","public static java.lang.String METHOD_1 ( final java.lang.String string , final char VAR_1 ) { final java.lang.String VAR_2 = java.lang.String . METHOD_2 ( VAR_1 ) ; return VAR_3 . replaceAll ( ( STRING_1 + VAR_2 ) , VAR_2 ) ; }",['Update Invocation'],912,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
768,768,public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_2 ) ( context ) ) . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; },"['Insert Invocation', 'Update Invocation', 'Move Invocation', 'Move TypeReference', 'Delete FieldRead']",913,"['Insert Invocation', 'Delete VariableRead']","['Invocation', 'Invocation', 'Invocation', 'TypeReference', 'FieldRead']","['Invocation', 'VariableRead']",Partial Match,0.25,0.5,0.2,0.28571428571428575,1,1,4
769,769,public void METHOD_1 ( ) { TYPE_1 = VAR_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( 0 ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( ) ; VAR_3 = new TYPE_3 ( TYPE_1 ) ; },public void METHOD_1 ( ) { TYPE_1 = VAR_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( 1 ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( ) ; VAR_3 = new TYPE_3 ( TYPE_1 ) ; },['Update Literal'],914,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
770,770,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; },"['Update Literal', 'Delete TypeAccess', 'Delete Invocation']",915,"['Update Literal', 'Delete Invocation', 'Delete VariableRead']","['Literal', 'TypeAccess', 'Invocation']","['Literal', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
771,771,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_5 . getId ( ) , null , VAR_6 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_5 . getId ( ) , VAR_6 ) ; }",['Delete Literal'],916,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
772,772,private void METHOD_1 ( int n ) { VAR_1 += n ; },public void METHOD_1 ( int n ) { VAR_1 += n ; },['Update Wra'],917,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
773,773,"private static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { return new TYPE_1 ( VAR_1 , VAR_2 , false , VAR_3 , VAR_4 ) ; }","private static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 , false ) ; }","['Update ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",918,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5714285714285714,0.7272727272727273,4,0,3
774,774,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) throws TYPE_4 , TYPE_5 , TYPE_6 { return this . METHOD_1 ( VAR_1 , VAR_2 , null , null ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.Set < TYPE_3 > VAR_2 ) throws TYPE_4 , TYPE_5 , TYPE_6 { return this . METHOD_1 ( VAR_1 , VAR_2 , null , null ) ; }",['Update TypeReference'],919,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
775,775,public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( 0 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; return VAR_2 ; },"['Update ConstructorCall', 'Delete Literal']",921,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
776,776,public boolean METHOD_1 ( ) throws TYPE_1 { java.lang.Thread . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; METHOD_5 ( VAR_4 ) ; return true ; },public void METHOD_1 ( ) throws TYPE_1 { java.lang.Thread . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; METHOD_5 ( VAR_4 ) ; },"['Update TypeReference', 'Delete Literal', 'Delete Return']",922,"['Update TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
777,777,"public static int [ ] METHOD_1 ( java.util.List < java.util.Date > VAR_1 , java.util.List < java.util.Date > VAR_2 ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , true ) ; }","public static int [ ] METHOD_1 ( java.util.List < java.util.Date > VAR_1 , java.util.List < java.util.Date > VAR_2 ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , false ) ; }",['Update Literal'],923,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
778,778,"public void METHOD_1 ( TYPE_1 message ) { METHOD_2 ( message , false ) ; }",public void METHOD_1 ( TYPE_1 message ) { METHOD_2 ( message ) ; },['Delete Literal'],924,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
779,779,public TYPE_1 METHOD_1 ( boolean b ) { VAR_1 = b ; return this ; },public TYPE_1 METHOD_1 ( boolean b ) { VAR_1 = true ; return this ; },"['Insert Literal', 'Delete VariableRead']",925,['Update Literal'],"['Literal', 'VariableRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
780,780,"public static int METHOD_1 ( int a , int b ) { if ( b == 0 ) { return 0 ; } return ( a / b ) * b ; }","public static int METHOD_1 ( int a , int b ) { return ( a / b ) * b ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",926,"['Delete If', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Literal', 'BinaryOperator', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
781,781,void METHOD_1 ( java.io.File file ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",927,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
782,782,public int METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = 0 ; int VAR_3 = java.lang.Integer.parseInt ( VAR_1 ) ; if ( VAR_3 <= ( VAR_4 ) ) { VAR_2 = VAR_3 ; } return VAR_2 ; },public int METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = 0 ; int VAR_3 = java.lang.Integer.parseInt ( VAR_1 ) ; if ( VAR_3 < ( VAR_4 ) ) { VAR_2 = VAR_3 ; } return VAR_2 ; },['Update BinaryOperator'],928,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
783,783,"public boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_3 , VAR_1 , VAR_4 , ( ( ( VAR_3 ) - VAR_1 ) > ( VAR_4 ) ) ) ; return ( ( VAR_3 ) - VAR_1 ) >= ( VAR_4 ) ; }","public boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_3 , VAR_1 , VAR_4 , ( ( ( VAR_3 ) - VAR_1 ) > ( VAR_4 ) ) ) ; return ( ( VAR_3 ) - VAR_1 ) > ( VAR_4 ) ; }",['Update BinaryOperator'],930,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
784,784,"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) throws TYPE_2 { try { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_2 ( VAR_4 ) ; } }","protected void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) throws TYPE_2 { try { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_2 ( VAR_4 ) ; } }",['Update Wra'],931,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
785,785,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 , response ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 , response ) ; }",['Update Wra'],932,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
786,786,private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . delete ( ) ; } VAR_3 . intent ( this ) . start ( ) ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . delete ( ) ; } METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",933,"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess']","['TypeAccess', 'ThisAccess', 'Invocation', 'Invocation']","['FieldRead', 'Invocation', 'Invocation', 'ThisAccess']",Partial Match,0.5,0.75,0.75,0.75,3,1,1
787,787,"public void METHOD_1 ( java.lang.String name , java.lang.String id ) { VAR_1 . METHOD_2 ( id ) ; view . METHOD_3 ( name ) ; }",public void METHOD_1 ( java.lang.String id ) { VAR_1 . METHOD_2 ( id ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",934,"['Delete Parameter', 'Delete Parameter', 'Delete Invocation']","['TypeReference', 'Parameter', 'FieldRead', 'VariableRead', 'Invocation']","['Parameter', 'Parameter', 'Invocation']",GPT Missed Nodes,0.4,0.6666666666666666,0.4,0.5,2,1,3
788,788,private static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; TYPE_4 VAR_2 = VAR_3 ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_4 . build ( ) ; },private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; TYPE_4 VAR_2 = VAR_3 ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_4 . build ( ) ; },['Delete Wra'],935,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
789,789,"private void METHOD_1 ( ) { METHOD_2 ( target . METHOD_3 ( ) , target . METHOD_4 ( ) , target . METHOD_5 ( ) ) ; target = null ; }","public void METHOD_1 ( ) { METHOD_2 ( target . METHOD_3 ( ) , target . METHOD_4 ( ) , target . METHOD_5 ( ) ) ; target = null ; }",['Update Wra'],936,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
790,790,"public java.io.InputStream METHOD_1 ( TYPE_1 path , TYPE_2 VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_3 . get ( path ) ) ; }",public java.io.InputStream METHOD_1 ( TYPE_1 path ) { return VAR_2 . METHOD_2 ( VAR_3 . get ( path ) ) ; },"['Delete TypeReference', 'Delete Parameter']",937,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
791,791,"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( VAR_1 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ) ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( VAR_1 , null ) ; }","['Insert Literal', 'Delete ConstructorCall']",938,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
792,792,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , 1 ) ; VAR_1 . METHOD_2 ( ) ; assertTrue ( TYPE_1 . METHOD_3 ( ) . get ( 0 ) . equals ( VAR_1 ) ) ; }",public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; assertTrue ( TYPE_1 . METHOD_3 ( ) . get ( 0 ) . equals ( VAR_1 ) ) ; },"['Delete FieldRead', 'Delete Literal']",940,"['Delete Literal', 'Delete Literal', 'Delete Literal']","['FieldRead', 'Literal']","['Literal', 'Literal', 'Literal']",GPT Missed Nodes,0.5,0.3333333333333333,0.5,0.4,1,2,1
793,793,public static void METHOD_1 ( android.content.Context context ) { VAR_1 . get ( ) . METHOD_2 ( ) ; },public static void METHOD_1 ( android.content.Context context ) { VAR_1 . get ( ) . METHOD_2 ( context ) ; },['Insert VariableRead'],941,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
794,794,public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",942,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
795,795,public boolean METHOD_1 ( final java.lang.String fileName ) { return ( VAR_1 ) || ( ( VAR_2 . contains ( STRING_1 ) ) && ( VAR_3 . contains ( VAR_2 . split ( STRING_1 ) [ 1 ] ) ) ) ; },public boolean METHOD_1 ( final java.lang.String fileName ) { return ( VAR_1 ) || ( ( VAR_3 . contains ( STRING_1 ) ) && ( VAR_3 . contains ( VAR_2 . split ( STRING_1 ) [ 1 ] ) ) ) ; },['Update TypeAccess'],943,"['Delete FieldRead', 'Insert FieldRead']",['TypeAccess'],"['FieldRead', 'FieldRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
796,796,public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",944,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
797,797,"private void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , TYPE_2 < java.lang.String > args ) throws java.lang.Exception { METHOD_2 ( VAR_1 , false , args ) ; }","private void METHOD_1 ( TYPE_2 < java.lang.String > args ) throws java.lang.Exception { METHOD_2 ( false , args ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",945,"['Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
798,798,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 , ( ( TYPE_1 ) ( null ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 , null ) ; }","['Update Literal', 'Delete TypeReference']",946,"['Delete TypeReference', 'Delete Literal']","['Literal', 'TypeReference']","['TypeReference', 'Literal']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
799,799,"private void METHOD_1 ( ) { TYPE_1 a = new TYPE_1 ( VAR_1 , VAR_2 ) ; VAR_3 . add ( a ) ; VAR_4 . METHOD_2 ( a ) ; }",private void METHOD_1 ( ) { TYPE_1 a = new TYPE_1 ( VAR_1 ) ; VAR_3 . add ( a ) ; VAR_4 . METHOD_2 ( a ) ; },['Delete FieldRead'],947,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
800,800,public static void METHOD_1 ( int VAR_1 ) { VAR_2 = ( VAR_2 ) - VAR_1 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; },public static void METHOD_1 ( int VAR_1 ) { VAR_2 = ( VAR_2 ) - VAR_1 ; java.lang.System.out.print ( ( STRING_1 + ( VAR_2 ) ) ) ; },['Update Invocation'],948,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
801,801,"protected final java.lang.String toString ( java.lang.String VAR_1 , boolean VAR_2 ) { return ""false"" ; }","protected final java.lang.String toString ( java.lang.String VAR_1 , boolean VAR_2 ) { return ""true"" ; }",['Update Literal'],950,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
802,802,"public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_2 , VAR_3 ) ; return true ; } return super . METHOD_1 ( item ) ; }","public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( VAR_3 , VAR_2 ) ; return true ; } return super . METHOD_1 ( item ) ; }",['Move TypeAccess'],951,"['Move VariableRead', 'Move VariableRead']",['TypeAccess'],"['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
803,803,"private long METHOD_1 ( final long VAR_1 ) { if ( VAR_1 >= ( VAR_2 ) ) { VAR_3 = METHOD_2 ( VAR_1 , 0 ) ; VAR_2 = METHOD_2 ( VAR_1 , 1 ) ; } return VAR_1 - ( VAR_3 ) ; }",private long METHOD_1 ( final long VAR_1 ) { if ( VAR_1 >= ( VAR_2 ) ) { VAR_3 = METHOD_2 ( 0 ) ; VAR_2 = METHOD_2 ( 1 ) ; } return VAR_1 - ( VAR_3 ) ; },"['Delete VariableRead', 'Delete VariableRead']",953,"['Delete VariableRead', 'Delete Literal']","['VariableRead', 'VariableRead']","['VariableRead', 'Literal']",GPT Hallucinated Nodes,0.5,0.5,0.5,0.5,1,1,1
804,804,protected abstract double METHOD_1 ( ) ;,public abstract double METHOD_1 ( ) ;,['Update Wra'],954,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
805,805,public void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_2 ( ) . METHOD_1 ( message ) ; },public void METHOD_1 ( java.lang.String msg ) { VAR_1 . METHOD_2 ( ) . METHOD_1 ( msg ) ; },"['Update Parameter', 'Update VariableRead']",955,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
806,806,void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; },void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( ) ; },['Update TypeAccess'],956,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
807,807,"public java.util.Iterator < java.lang.String > METHOD_1 ( int n ) throws java.lang.Exception { return new TYPE_1 ( VAR_1 , n ) . METHOD_2 ( ) ; }","public java.util.Iterator < java.lang.String > METHOD_1 ( int n ) throws java.lang.Exception { return new TYPE_1 ( VAR_1 , 1 ) . METHOD_2 ( ) ; }","['Insert Literal', 'Delete VariableRead']",957,"['Update VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
808,808,private static int METHOD_1 ( java.lang.String method ) { if ( VAR_1 . startsWith ( STRING_1 ) ) { return VAR_2 ; } if ( VAR_1 . startsWith ( STRING_2 ) ) { return VAR_3 ; } return - 1 ; },public static int METHOD_1 ( java.lang.String method ) { if ( VAR_1 . startsWith ( STRING_1 ) ) { return VAR_2 ; } if ( VAR_1 . startsWith ( STRING_2 ) ) { return VAR_3 ; } return - 1 ; },['Update Wra'],958,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
809,809,public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . add ( VAR_2 ) ; } catch ( TYPE_1 VAR_3 ) { VAR_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . add ( VAR_2 ) ; } catch ( TYPE_1 VAR_3 ) { } },"['Delete TypeAccess', 'Delete Invocation']",959,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
810,810,"static void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_1 , 0 ) ) ; }",static void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_1 ) ) ; },['Delete Literal'],960,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
811,811,private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },protected void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },['Update Wra'],961,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
812,812,"public int METHOD_1 ( int [ ] VAR_1 , int VAR_2 , int VAR_3 ) { return VAR_3 ; }","public int METHOD_1 ( int [ ] VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete VariableRead', 'Delete Return']",962,"['Delete Return', 'Delete VariableRead']","['VariableRead', 'Return']","['Return', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
813,813,"public void METHOD_1 ( ) { try { METHOD_2 ( false , true , view , VAR_1 ) ; TYPE_1 . METHOD_3 ( view , STRING_1 , VAR_2 ) . show ( ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } }","public void METHOD_1 ( ) { try { METHOD_2 ( false , view , VAR_1 ) ; TYPE_1 . METHOD_3 ( view , STRING_1 , VAR_2 ) . show ( ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } }",['Delete Literal'],963,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
814,814,"protected void METHOD_1 ( java.lang.Exception VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; }","protected void METHOD_1 ( java.lang.Exception VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",964,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
815,815,final java.lang.String METHOD_1 ( ) { final java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( STRING_1 ) . append ( VAR_2 ) ; VAR_3 . append ( STRING_2 ) . append ( VAR_4 ) . append ( STRING_3 ) ; return VAR_3 . toString ( ) ; },protected java.lang.String METHOD_1 ( ) { final java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( STRING_1 ) . append ( VAR_2 ) ; VAR_3 . append ( STRING_2 ) . append ( VAR_4 ) . append ( STRING_3 ) ; return VAR_3 . toString ( ) ; },['Update Wra'],965,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
816,816,"public java.util.List < TYPE_1 > METHOD_1 ( int size ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; return VAR_1 . METHOD_5 ( 0 , size ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( int size ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; return VAR_1 . METHOD_5 ( 0 , size ) ; }",['Delete Invocation'],966,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
817,817,"public native int METHOD_1 ( long VAR_1 , double [ ] VAR_2 , long offset ) ;","public native int METHOD_1 ( long VAR_1 , double [ ] VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",967,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
818,818,private boolean METHOD_1 ( final TYPE_1 file ) { final java.lang.String VAR_1 = file . METHOD_2 ( ) ; if ( VAR_1 == null ) return false ; return ( VAR_2 . equals ( STRING_1 ) ) || ( VAR_2 . equals ( STRING_2 ) ) ; },private boolean METHOD_1 ( final TYPE_1 file ) { final java.lang.String VAR_1 = file . METHOD_2 ( ) ; return ( VAR_2 . equals ( STRING_1 ) ) || ( VAR_2 . equals ( STRING_2 ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",968,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
819,819,public java.lang.String toString ( ) { return ( ( ( ( ( STRING_1 + ( this . VAR_1 ) ) + STRING_2 ) + ( this . VAR_2 ) ) + STRING_3 ) + ( this . VAR_3 ) ) + STRING_4 ; },public java.lang.String toString ( ) { return ( ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ; },"['Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess']",969,"['Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess']","['ThisAccess', 'ThisAccess', 'ThisAccess']","['ThisAccess', 'ThisAccess', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
820,820,"public void METHOD_1 ( java.lang.String path , TYPE_1 listener ) { super . METHOD_1 ( path , listener ) ; VAR_1 = false ; }",public void METHOD_1 ( java.lang.String path ) { super . METHOD_1 ( path ) ; VAR_1 = false ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",971,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
821,821,public void METHOD_1 ( ) { assert ! ( TYPE_1 . METHOD_2 ( getView ( ) ) ) : STRING_1 ; },public void METHOD_1 ( ) { assert ! ( getView ( ) . METHOD_2 ( ) ) : STRING_1 ; },['Delete TypeAccess'],972,"['Delete TypeAccess', 'Move Invocation']",['TypeAccess'],"['TypeAccess', 'Invocation']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
822,822,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) VAR_1 . METHOD_2 ( ) ; },['Update BinaryOperator'],973,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
823,823,"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . METHOD_4 ( ) ) ; TYPE_4 . METHOD_5 ( VAR_1 , response , STRING_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { VAR_1 . METHOD_3 ( STRING_1 , VAR_2 . METHOD_4 ( ) ) ; TYPE_4 . METHOD_5 ( VAR_1 , response , STRING_2 ) ; }","['Move VariableRead', 'Delete Invocation']",974,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
824,824,public double METHOD_1 ( ) { return ( super . METHOD_1 ( ) ) * ( - 1 ) ; },public double METHOD_1 ( ) { return ( super . getValue ( ) ) * ( - 1 ) ; },['Update Invocation'],975,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
825,825,"public static java.lang.String METHOD_1 ( android.content.Context context ) { return TYPE_1 . METHOD_2 ( context ) . getString ( VAR_1 , STRING_1 ) ; }","public static java.lang.String METHOD_1 ( android.content.Context context ) { return TYPE_1 . METHOD_2 ( context ) . getString ( VAR_1 , null ) ; }","['Insert Literal', 'Delete TypeAccess']",976,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
826,826,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { double VAR_3 = VAR_1 . METHOD_2 ( ) ; double VAR_4 = VAR_2 . METHOD_3 ( ) ; double VAR_5 = VAR_4 * VAR_3 ; VAR_6 . setValue ( VAR_5 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_3 { double VAR_3 = VAR_1 . METHOD_2 ( ) ; double VAR_4 = VAR_2 . METHOD_3 ( ) ; double VAR_5 = VAR_4 * VAR_3 ; VAR_6 . setValue ( VAR_5 ) ; },"['Insert TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",977,['Delete Parameter'],"['TypeAccess', 'TypeReference', 'Parameter', 'VariableRead']",['Parameter'],GPT Missed Nodes,0.25,1.0,0.25,0.4,1,0,3
827,827,public final void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public final void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",978,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
828,828,public boolean METHOD_1 ( ) { return ( VAR_1 . size ( ) ) >= 1 ; },public boolean METHOD_1 ( ) { return ( VAR_1 . size ( ) ) > 1 ; },['Update BinaryOperator'],979,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
829,829,"public TYPE_1 build ( ) { return new TYPE_1 ( title , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","public TYPE_1 build ( ) { return new TYPE_1 ( title , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }",['Delete FieldRead'],980,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
830,830,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation']",981,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
831,831,"private void METHOD_1 ( TYPE_1 node ) { this . VAR_1 . put ( VAR_2 . getId ( ) , node ) ; }","public void METHOD_1 ( TYPE_1 node ) { this . VAR_1 . put ( VAR_2 . getId ( ) , node ) ; }",['Update Wra'],982,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
832,832,"protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 < ? > VAR_2 , boolean VAR_3 ) { return TYPE_3 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , VAR_3 ) . add ( TYPE_4 . METHOD_3 ( VAR_2 ) ) ; }","protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 < ? > VAR_2 , boolean VAR_3 ) { return METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , VAR_3 ) . add ( TYPE_4 . METHOD_3 ( VAR_2 ) ) ; }",['Update TypeAccess'],983,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
833,833,public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } else { VAR_3 = true ; METHOD_3 ( new java.util.ArrayList < > ( TYPE_1 . METHOD_4 ( VAR_4 ) ) ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } else { VAR_3 = true ; METHOD_3 ( new java.util.ArrayList < > ( java.util.Arrays.asList ( VAR_4 ) ) ) ; } },"['Update Invocation', 'Update TypeAccess']",985,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert Invocation', 'Delete TypeAccess', 'Delete Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']",Exact Match,1.0,0.0,0.0,0.0,0,5,2
834,834,protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . update ( VAR_1 ) ; },protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . update ( VAR_1 ) ; },['Update TypeReference'],986,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
835,835,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return false ; }","['Update Literal', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",987,"['Delete Invocation', 'Delete VariableRead', 'Delete Return', 'Insert Literal']","['Literal', 'VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'VariableRead', 'Return', 'Literal']",Partial Match,0.6,0.5,0.5,0.5,2,2,2
836,836,public java.util.List < TYPE_1 > METHOD_1 ( ) { try { return VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; return null ; } },public java.util.List < TYPE_1 > METHOD_1 ( ) { try { return VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } },"['Delete VariableRead', 'Delete Invocation']",988,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
837,837,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.Object > VAR_3 ) throws java.lang.Exception { METHOD_1 ( null , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { METHOD_1 ( null , VAR_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",989,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,2,0,4
838,838,"public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 , null , date , VAR_3 , VAR_4 , VAR_5 , VAR_6 , STRING_2 , STRING_3 , 1 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 , null , date , VAR_3 , VAR_4 , VAR_5 , VAR_6 , STRING_2 , STRING_3 ) ; }",['Delete Literal'],990,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
839,839,public static boolean isEmpty ( java.lang.CharSequence str ) { return ( str == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ; },public static boolean isEmpty ( java.lang.String str ) { return ( str == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ; },['Update TypeReference'],991,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
840,840,public int METHOD_1 ( int [ ] VAR_1 ) { return java.lang.Math.abs ( ( ( METHOD_2 ( VAR_1 ) ) + ( VAR_2 ) ) ) ; },public int METHOD_1 ( int [ ] VAR_1 ) { return java.lang.Math.abs ( ( ( METHOD_2 ( VAR_1 ) ) - ( VAR_2 ) ) ) ; },['Update BinaryOperator'],992,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
841,841,private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_1 . METHOD_2 ( ) ; VAR_2 . remove ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . remove ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",993,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'BinaryOperator', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.8333333333333334,0.9090909090909091,5,0,1
842,842,public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },['Update Wra'],995,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
843,843,"public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( VAR_2 , VAR_1 , false ) ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( VAR_1 , false ) ; }",['Delete TypeAccess'],997,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
844,844,private native void METHOD_1 ( java.lang.Object VAR_1 ) ;,public native void METHOD_1 ( ) ;,"['Update Wra', 'Delete TypeReference', 'Delete Parameter']",999,"['Delete Parameter', 'Update Wra']","['Wra', 'TypeReference', 'Parameter']","['Parameter', 'Wra']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
845,845,"public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 , false ) ; }",public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 ) ; },['Delete Literal'],1000,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
846,846,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( this ) ; return new TYPE_1 ( VAR_3 , VAR_1 , VAR_4 , VAR_5 , METHOD_3 ( ) ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( this ) ; return new TYPE_1 ( VAR_3 , VAR_1 , VAR_4 , VAR_5 ) ; }",['Delete Invocation'],1001,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
847,847,"public void update ( TYPE_1 [ ] VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; }",public void update ( TYPE_1 [ ] VAR_1 ) { VAR_3 . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1003,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
848,848,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return TYPE_3 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return null ; }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1004,"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'Invocation', 'Invocation', 'VariableRead', 'VariableRead', 'Literal']",Exact Match,1.0,0.8571428571428571,1.0,0.923076923076923,6,1,0
849,849,public abstract void METHOD_1 ( final java.lang.String VAR_1 ) ;,public void METHOD_1 ( final java.lang.String VAR_1 ) { },['Delete Wra'],1005,"['Delete Wra', 'Insert Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
850,850,TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { VAR_1 = VAR_3 . METHOD_2 ( ) ; } return VAR_1 ; },TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { this . VAR_1 = VAR_3 . METHOD_2 ( ) ; } return VAR_1 ; },['Insert ThisAccess'],1006,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
851,851,public java.lang.String METHOD_1 ( ) { return ( this . label ) == null ? STRING_1 : this . VAR_1 ; },public java.lang.String METHOD_1 ( ) { return ( this . label ) == null ? null : this . VAR_1 ; },"['Insert Literal', 'Delete FieldRead']",1007,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
852,852,"private static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_2 ) , VAR_2 . METHOD_4 ( VAR_3 ) ) ; }",private static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1008,"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'Literal', 'VariableRead']",GPT Hallucinated Nodes,0.75,0.75,0.75,0.75,3,1,1
853,853,"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { long VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; long VAR_4 = TYPE_1 . METHOD_2 ( VAR_2 ) ; return VAR_4 < VAR_3 ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { long VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; long VAR_4 = TYPE_1 . METHOD_2 ( VAR_2 ) ; return VAR_4 > VAR_3 ; }",['Update BinaryOperator'],1009,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
854,854,public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 . show ( ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . show ( ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1011,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.2,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
855,855,"public static TYPE_1 METHOD_1 ( TYPE_2 c , int VAR_1 , boolean VAR_2 ) { return TYPE_3 . METHOD_1 ( c . METHOD_2 ( ) , c . METHOD_3 ( ) , VAR_1 , VAR_2 ) ; }","public static int METHOD_1 ( TYPE_2 c , int VAR_1 , boolean VAR_2 ) { return TYPE_3 . METHOD_1 ( c . METHOD_2 ( ) , c . METHOD_3 ( ) , VAR_1 , VAR_2 ) ; }",['Update TypeReference'],1012,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
856,856,public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; if ( ! ( VAR_5 . METHOD_4 ( ) ) ) VAR_6 . show ( ) ; },public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; if ( ! ( VAR_5 . METHOD_4 ( ) ) ) VAR_6 . show ( ) ; return ; },['Insert Return'],1013,['Insert Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
857,857,"public void METHOD_1 ( java.lang.String name ) { ( ( TYPE_1 ) ( TYPE_2 ) ) . METHOD_1 ( name , 1 ) ; }","public void METHOD_1 ( java.lang.String name , int size ) { ( ( TYPE_1 ) ( TYPE_2 ) ) . METHOD_1 ( name , size ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete Literal']",1014,"['Insert Parameter', 'Delete Literal', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'Literal']","['Parameter', 'Literal', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
858,858,"public void METHOD_1 ( TYPE_1 VAR_1 , short VAR_2 ) { }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete Parameter']",1015,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
859,859,"public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 class ) , VAR_3 , null , new TYPE_2 ( ) ) ; }","public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 class ) , VAR_3 , null , new TYPE_2 ( ) ) ; }",['Update TypeAccess'],1016,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
860,860,public short METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( VAR_2 ) ; },private short METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( VAR_2 ) ; },['Update Wra'],1017,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
861,861,"private void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . index ( VAR_1 , true ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . index ( VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; } }",['Delete Literal'],1019,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
862,862,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; VAR_3 . METHOD_7 ( VAR_1 , this ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",1021,"['Delete Invocation', 'Delete VariableRead', 'Delete ThisAccess']","['TypeAccess', 'VariableRead', 'ThisAccess', 'Invocation']","['Invocation', 'VariableRead', 'ThisAccess']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
863,863,"void METHOD_1 ( java.lang.String VAR_1 , java.lang.String to , java.lang.String date , java.lang.String time , java.lang.Boolean VAR_2 ) ;",void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1022,"['Delete Parameter', 'Delete Parameter', 'Delete Parameter', 'Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter', 'Parameter', 'Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,5,0,5
864,864,"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( STRING_1 , STRING_2 , STRING_3 , STRING_2 , STRING_4 , STRING_5 ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",1025,"['Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess']","['Literal', 'Literal', 'Literal', 'Literal', 'Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,6,6
865,865,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_2 ;",TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 ;,"['Delete TypeReference', 'Delete Parameter']",1027,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
866,866,public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( ( ( ( ( STRING_1 + ( METHOD_3 ( ) ) ) + STRING_2 ) + STRING_3 ) + ( VAR_1 ) ) + STRING_4 ) + ( VAR_2 ) ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( ( ( ( ( STRING_1 + ( METHOD_3 ( ) ) ) + STRING_2 ) + STRING_3 ) + ( VAR_1 ) ) + STRING_4 ) + ( VAR_2 ) ) ) ; },['Delete Wra'],1028,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
867,867,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; android.widget.Button VAR_6 = ( ( android.widget.Button ) ( VAR_4 . METHOD_3 ( VAR_7 ) ) ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; android.widget.Button VAR_6 = ( ( android.widget.Button ) ( VAR_4 . METHOD_3 ( VAR_7 ) ) ) ; }","['Delete VariableRead', 'Delete Return']",1029,['Delete Return'],"['VariableRead', 'Return']",['Return'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
868,868,public static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; },public static void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",1030,"['Delete TypeAccess', 'Delete Invocation', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'FieldRead', 'Invocation']",Exact Match,1.0,0.5,0.75,0.6,3,3,1
869,869,"public void METHOD_1 ( final int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( this , VAR_1 , VAR_4 ) ; VAR_5 . show ( ) ; }","private void METHOD_1 ( final int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( this , VAR_1 , VAR_4 ) ; VAR_5 . show ( ) ; }",['Update Wra'],1031,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
870,870,"public void METHOD_1 ( TYPE_1 position , TYPE_2 context ) { }",public void METHOD_1 ( TYPE_1 position ) { },"['Delete TypeReference', 'Delete Parameter']",1033,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
871,871,public void METHOD_1 ( java.lang.Throwable VAR_1 ) { fail ( ) ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { fail ( state ) ; },['Insert FieldRead'],1035,['Insert VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
872,872,"public java.lang.String METHOD_1 ( int offset , int VAR_1 ) { java.util.List < TYPE_1 > list = VAR_2 . METHOD_1 ( offset , VAR_1 ) ; return VAR_3 . toString ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( int offset , int VAR_1 ) { java.util.List < TYPE_1 > list = VAR_2 . METHOD_1 ( offset , VAR_1 ) ; return list ; }","['Update TypeReference', 'Insert TypeReference', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1037,"['Update TypeReference', 'Update TypeReference', 'Update Return', 'Update VariableRead', 'Delete Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'Return', 'VariableRead', 'Invocation']",Partial Match,0.6,0.4,0.4,0.4000000000000001,2,3,3
873,873,protected void METHOD_1 ( final java.io.File VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) { ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; } },private void METHOD_1 ( final java.io.File VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) { ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; } },['Update Wra'],1038,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
874,874,"public void METHOD_1 ( java.lang.Throwable t ) { TYPE_1 . METHOD_2 ( STRING_1 , t . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.Throwable t ) { TYPE_1 . METHOD_2 ( STRING_1 , t . METHOD_3 ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",1039,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
875,875,public static boolean METHOD_1 ( java.util.Collection VAR_1 ) { return ( VAR_1 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ; },public static boolean METHOD_1 ( java.util.Collection VAR_1 ) { return ( VAR_1 != null ) || ( ! ( VAR_2 . isEmpty ( ) ) ) ; },['Update BinaryOperator'],1040,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
876,876,public java.lang.Integer METHOD_1 ( ) { return getInt ( METHOD_2 ( VAR_1 ) ) ; },public java.lang.String METHOD_1 ( ) { return getString ( METHOD_2 ( VAR_1 ) ) ; },"['Update TypeReference', 'Update Invocation']",1042,"['Update TypeReference', 'Update TypeReference', 'Update Invocation']","['TypeReference', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
877,877,"public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) > ( ( VAR_1 ) + INT_1 ) ) { METHOD_3 ( new TYPE_1 ( ) , TYPE_2 . METHOD_4 ( INT_2 ) ) ; } VAR_2 = METHOD_4 ( INT_3 ) ; }","public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) > ( ( VAR_1 ) + INT_1 ) ) { METHOD_3 ( new TYPE_1 ( ) , TYPE_2 . METHOD_4 ( INT_2 ) ) ; } VAR_2 = METHOD_4 ( INT_2 ) ; }",['Update TypeAccess'],1043,['Update Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
878,878,"private synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( INT_1 , VAR_2 ) ; } }","private synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( INT_1 , 1 ) ; } }","['Insert Literal', 'Delete TypeAccess']",1044,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
879,879,public TYPE_1 [ ] METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },public TYPE_1 [ ] METHOD_1 ( ) { return METHOD_1 ( 0 ) ; },"['Update Invocation', 'Move Invocation', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",1045,"['Update Invocation', 'Insert Literal', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'Invocation', 'Literal', 'TypeAccess', 'Invocation']","['Invocation', 'Literal', 'Invocation', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6,0.6,0.6,3,2,2
880,880,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) ;","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1046,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
881,881,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 . getValue ( VAR_4 class ) ) ; VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 . getValue ( VAR_4 class ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",1047,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
882,882,public TYPE_1 METHOD_1 ( TYPE_2 file ) { VAR_1 = file ; return this ; },public TYPE_1 METHOD_1 ( java.io.File file ) { VAR_1 = file ; return this ; },['Update TypeReference'],1048,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
883,883,"public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( 1 , 1 ) ; label . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( 1 , 0 ) ; label . METHOD_3 ( ) ; }",['Update Literal'],1049,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
884,884,protected void METHOD_1 ( TYPE_1 VAR_1 ) { return ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { return ; },['Update Wra'],1050,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
885,885,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getText ( ) . length ( ) ) > INT_1 ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getText ( ) . length ( ) ) >= INT_1 ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } },['Update BinaryOperator'],1051,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
886,886,"public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) ;","public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , int VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1053,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
887,887,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( ) . add ( VAR_1 . METHOD_3 ( ) ) ; },"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( ) . put ( ( ( this . METHOD_2 ( ) . size ( ) ) + 1 ) , VAR_1 . METHOD_3 ( ) ) ; }","['Update Invocation', 'Insert BinaryOperator', 'Insert Invocation', 'Insert Literal', 'Insert Invocation', 'Insert ThisAccess']",1054,"['Update Invocation', 'Insert Invocation', 'Insert ThisAccess', 'Insert Invocation', 'Insert BinaryOperator', 'Insert Literal']","['Invocation', 'BinaryOperator', 'Invocation', 'Literal', 'Invocation', 'ThisAccess']","['Invocation', 'Invocation', 'ThisAccess', 'Invocation', 'BinaryOperator', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
888,888,private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , false ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; }",['Insert Literal'],1055,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
889,889,protected void METHOD_1 ( java.lang.String result ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( result ) ; VAR_3 . execute ( VAR_1 ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },protected void METHOD_1 ( java.lang.String result ) { try { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( result ) ; VAR_3 . execute ( VAR_1 ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },['Delete FieldRead'],1057,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
890,890,"public static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( 0 , true , false , VAR_1 ) ; }","public static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( 0 , false , VAR_1 ) ; }","['Update ConstructorCall', 'Delete Literal']",1058,"['Delete Literal', 'Delete Literal']","['ConstructorCall', 'Literal']","['Literal', 'Literal']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
891,891,"private void METHOD_1 ( final java.util.Set < TYPE_1 < ? , ? > > VAR_1 ) { METHOD_2 ( VAR_1 , false , true , true ) ; }","private void METHOD_1 ( final java.util.Set < TYPE_1 < ? , ? > > VAR_1 ) { METHOD_2 ( VAR_1 , false , true ) ; }",['Delete Literal'],1059,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
892,892,public void METHOD_1 ( android.view.View view ) { METHOD_2 ( 0 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; },['Update Literal'],1060,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
893,893,"private boolean METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; int result = VAR_1 . METHOD_1 ( VAR_3 , VAR_4 , VAR_5 ) ; return result == ( VAR_6 ) ; }","public boolean METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; int result = VAR_1 . METHOD_1 ( VAR_3 , VAR_4 , VAR_5 ) ; return result == ( VAR_6 ) ; }",['Update Wra'],1061,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
894,894,protected float METHOD_1 ( ) { return VAR_1 [ ( ( VAR_2 ) + 1 ) ] ; },public float METHOD_1 ( ) { return VAR_1 [ ( ( VAR_2 ) + 1 ) ] ; },['Update Wra'],1062,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
895,895,"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; }",private void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1063,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
896,896,public java.util.List < TYPE_1 > METHOD_1 ( final int VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },public java.util.List < TYPE_1 > METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update TypeReference'],1064,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
897,897,public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.ArrayList < TYPE_2 > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( METHOD_2 ( 1 ) ) ; return new TYPE_3 ( VAR_1 ) ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.ArrayList < TYPE_2 > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( METHOD_2 ( ) ) ; return new TYPE_3 ( VAR_1 ) ; },['Delete Literal'],1065,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
898,898,"public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1066,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
899,899,"public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 , TYPE_2 { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 , true , true , true , STRING_3 , VAR_4 , STRING_4 , STRING_5 ) ; }","public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 , TYPE_2 { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 , true , true , STRING_3 , VAR_4 , STRING_4 , STRING_5 ) ; }",['Delete Literal'],1067,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
900,900,public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },['Delete Invocation'],1068,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
901,901,"TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String [ ] VAR_2 , java.lang.String [ ] VAR_3 , boolean VAR_4 , boolean VAR_5 ) throws TYPE_2 , TYPE_3 { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 , true , VAR_5 ) ; }","TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String [ ] VAR_2 , java.lang.String [ ] VAR_3 , boolean VAR_4 ) throws TYPE_2 , TYPE_3 { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 , true ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1070,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
902,902,"private TYPE_1 METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 , TYPE_1 writer ) { for ( java.lang.String obj : VAR_1 ) { writer . METHOD_2 ( obj ) ; } writer . METHOD_2 ( STRING_1 ) ; return writer ; }","private void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 , TYPE_1 writer ) { for ( java.lang.String obj : VAR_1 ) { writer . METHOD_2 ( obj ) ; } writer . METHOD_2 ( STRING_1 ) ; }","['Update TypeReference', 'Delete VariableRead', 'Delete Return']",1071,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
903,903,public boolean isEmpty ( ) { return ( length ) == 0 ; },public boolean isEmpty ( ) { return false ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1073,"['Delete VariableRead', 'Delete BinaryOperator', 'Insert Literal']","['Literal', 'FieldRead', 'Literal', 'BinaryOperator']","['VariableRead', 'BinaryOperator', 'Literal']",Partial Match,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
904,904,"public int METHOD_1 ( int x , int y ) { return x - y ; }","public int METHOD_1 ( int x , int y ) { return x + y ; }",['Update BinaryOperator'],1074,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
905,905,"public void METHOD_1 ( java.lang.String VAR_1 , long VAR_2 ) throws java.lang.Exception { VAR_3 . set ( VAR_2 ) ; VAR_4 . METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , long VAR_2 ) throws java.lang.Exception { VAR_3 . set ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1075,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
906,906,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . equals ( STRING_1 ) ) { return new TYPE_1 ( 1 , STRING_2 ) ; } else { return new TYPE_1 ( 0 , STRING_3 ) ; } }",public int METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . equals ( STRING_1 ) ) { return 0 ; } else { return 1 ; } },"['Update TypeReference', 'Move Literal', 'Move Literal', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete ConstructorCall']",1076,"['Update TypeReference', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Insert Literal', 'Insert Literal']","['TypeReference', 'Literal', 'Literal', 'FieldRead', 'ConstructorCall', 'FieldRead', 'ConstructorCall']","['TypeReference', 'ConstructorCall', 'Literal', 'Literal', 'Literal', 'ConstructorCall', 'Literal', 'Literal']",GPT Missed Nodes,0.75,0.375,0.42857142857142855,0.39999999999999997,3,5,4
907,907,"private native int METHOD_1 ( long VAR_1 , long VAR_2 , float x , float y , int VAR_3 ) ;","private native int METHOD_1 ( long VAR_1 , long VAR_2 , float x , float y ) ;","['Delete TypeReference', 'Delete Parameter']",1078,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
908,908,public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( false ) ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( true ) ; },['Update Literal'],1079,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
909,909,public java.lang.String toString ( ) { if ( ( VAR_1 ) == null ) { return STRING_1 ; } return METHOD_1 ( VAR_1 ) ; },public java.lang.String toString ( ) { return METHOD_1 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",1080,['Delete If'],"['FieldRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.14285714285714285,0.25,1,0,6
910,910,public void METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; VAR_1 . METHOD_2 ( null ) ; VAR_2 . remove ( VAR_1 ) ; assert ! ( VAR_2 . contains ( VAR_1 ) ) ; assert METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; VAR_2 . remove ( VAR_1 ) ; assert ! ( VAR_2 . contains ( VAR_1 ) ) ; assert METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1081,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
911,911,"public boolean METHOD_1 ( ) { return VAR_1 . equals ( this . VAR_2 , new byte [ 1 ] ) ? false : true ; }","public boolean METHOD_1 ( ) { return VAR_1 . equals ( this . VAR_2 , new byte [ 1 ] ) ? true : false ; }",['Move Literal'],1082,"['Update Literal', 'Update Literal']",['Literal'],"['Literal', 'Literal']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
912,912,private int METHOD_1 ( ) { return position ; },public int METHOD_1 ( ) { return position ; },['Update Wra'],1084,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
913,913,"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( intent ) ; }","['Delete TypeReference', 'Delete Parameter']",1085,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
914,914,public TYPE_1 get ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return null ; TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; },public TYPE_1 get ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1086,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
915,915,"void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) ;","void METHOD_1 ( int VAR_2 , TYPE_1 VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",1087,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
916,916,protected boolean METHOD_1 ( java.lang.Boolean VAR_1 ) { return ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ; },protected boolean METHOD_1 ( java.lang.Boolean VAR_1 ) { return ( VAR_1 != null ) && VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",1089,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
917,917,protected int METHOD_1 ( ) { return 0 ; },protected int METHOD_1 ( ) { return 1 ; },['Update Literal'],1090,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
918,918,"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; ( VAR_3 ) ++ ; METHOD_2 ( VAR_3 , false , false ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; ( VAR_3 ) ++ ; METHOD_2 ( VAR_3 , false ) ; }",['Delete Literal'],1091,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
919,919,private java.lang.String METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) ) + STRING_1 ; },private java.lang.String METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( 0 ) ) + STRING_1 ; },['Insert Literal'],1092,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
920,920,"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return null ; }",public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { return null ; },"['Delete TypeReference', 'Delete Parameter']",1093,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
921,921,"public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; }",['Update Invocation'],1094,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
922,922,"public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return false ; }","public static java.lang.Object METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return null ; }","['Update TypeReference', 'Update Literal']",1097,"['Update TypeReference', 'Update TypeReference', 'Update Return', 'Update Literal']","['TypeReference', 'Literal']","['TypeReference', 'TypeReference', 'Return', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.5,1.0,0.6666666666666666,2,2,0
923,923,"public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = true ; VAR_5 = VAR_3 ; VAR_6 = true ; VAR_7 = VAR_3 ; VAR_8 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_9 ) ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = true ; VAR_5 = VAR_3 ; VAR_6 = true ; VAR_7 = VAR_3 ; VAR_8 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; }",['Delete TypeAccess'],1098,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
924,924,"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; VAR_3 = new TYPE_4 ( this , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; VAR_3 = new TYPE_4 ( VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; },['Delete ThisAccess'],1099,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
925,925,"public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ( java.lang.Double . METHOD_2 ( VAR_1 ) ) < ( java.lang.Double . METHOD_2 ( VAR_2 ) ) ? VAR_3 : VAR_4 ; }","private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ( java.lang.Double . METHOD_2 ( VAR_1 ) ) < ( java.lang.Double . METHOD_2 ( VAR_2 ) ) ? VAR_3 : VAR_4 ; }","['Update Wra', 'Delete Wra']",1100,"['Delete Wra', 'Delete Wra']","['Wra', 'Wra']","['Wra', 'Wra']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
926,926,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_2 . METHOD_3 ( ) ; double VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ( VAR_4 / VAR_3 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_2 . METHOD_3 ( ) ; double VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ( VAR_3 / VAR_4 ) ) ; },['Move VariableRead'],1101,"['Update VariableRead', 'Update VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
927,927,"public java.lang.String METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","public java.lang.String METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( this . VAR_1 , this . VAR_2 , this . VAR_3 ) ) ; }","['Insert FieldRead', 'Insert FieldRead', 'Insert FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",1103,"['Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess']","['FieldRead', 'FieldRead', 'FieldRead', 'ThisAccess', 'ThisAccess', 'ThisAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess']","['ThisAccess', 'ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,3,0,6
928,928,public void METHOD_1 ( ) { if ( ( ( VAR_1 . size ( ) ) > 0 ) || ( ( VAR_2 . size ( ) ) > 0 ) ) { throw new TYPE_1 ( STRING_1 ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 . size ( ) ) != 0 ) && ( ( VAR_2 . size ( ) ) != 0 ) ) { throw new TYPE_1 ( STRING_1 ) ; } },"['Update BinaryOperator', 'Update BinaryOperator', 'Update BinaryOperator']",1104,"['Update BinaryOperator', 'Update BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'BinaryOperator']","['BinaryOperator', 'BinaryOperator']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
929,929,"public static void METHOD_1 ( ) { java.lang.System.out.println ( TYPE_1 . METHOD_2 ( INT_1 , INT_2 ) ) ; }","public static void METHOD_1 ( ) { java.lang.System.out.println ( TYPE_1 . METHOD_2 ( INT_2 , INT_2 ) ) ; }",['Update TypeAccess'],1105,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
930,930,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return new TYPE_1 ( TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return null ; }","['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete ConstructorCall']",1107,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal', 'Insert Literal']","['Literal', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'TypeAccess', 'VariableRead', 'Literal', 'Invocation', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead', 'Literal', 'Literal']",GPT Hallucinated Nodes,0.7142857142857143,0.6153846153846154,0.8,0.6956521739130435,8,5,2
931,931,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . buffer = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . buffer = buffer ; },"['Insert FieldRead', 'Delete VariableRead']",1108,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
932,932,public TYPE_1 METHOD_1 ( int VAR_1 ) { return VAR_2 ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { return null ; },"['Insert Literal', 'Delete FieldRead']",1109,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
933,933,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },['Update Wra'],1110,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
934,934,"public void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_2 , false ) ; } }","public void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_2 , true ) ; } }",['Update Literal'],1113,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
935,935,"public TYPE_1 METHOD_1 ( TYPE_2 key , TYPE_1 value ) { return METHOD_1 ( key , value , this . VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 key , TYPE_1 value ) { return put ( key , value , this . VAR_1 ) ; }",['Update Invocation'],1115,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
936,936,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_2 ) ; this . VAR_2 . METHOD_5 ( VAR_1 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_2 ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1116,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
937,937,public static boolean contains ( java.lang.Object VAR_1 ) { synchronized ( VAR_2 . set ) { return VAR_3 . contains ( VAR_1 ) ; } },public static boolean contains ( java.lang.Object VAR_1 ) { synchronized ( VAR_1 ) { return VAR_3 . contains ( VAR_1 ) ; } },"['Insert VariableRead', 'Delete FieldRead']",1117,"['Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Insert VariableRead']","['VariableRead', 'FieldRead']","['FieldRead', 'FieldRead', 'TypeAccess', 'VariableRead']",GPT Hallucinated Nodes,0.6666666666666666,0.5,1.0,0.6666666666666666,2,2,0
938,938,"public static TYPE_1 METHOD_1 ( java.lang.String id ) { response ( ) . METHOD_2 ( STRING_1 ) ; TYPE_2 response = VAR_1 . handle ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , id ) ; return METHOD_6 ( response ) ; }",public static TYPE_1 METHOD_1 ( ) { response ( ) . METHOD_2 ( STRING_1 ) ; TYPE_2 response = VAR_1 . handle ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; return METHOD_6 ( response ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1118,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
939,939,private boolean METHOD_1 ( ) { boolean VAR_1 = false ; if ( ( counter ) >= INT_1 ) { VAR_1 = true ; } return VAR_1 ; },private boolean METHOD_1 ( ) { boolean VAR_1 = false ; if ( ( counter ) <= INT_1 ) { VAR_1 = true ; } return VAR_1 ; },['Update BinaryOperator'],1119,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
940,940,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 . show ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( getActivity ( ) ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 . show ( ) ; },"['Insert Invocation', 'Delete FieldRead']",1120,"['Insert Invocation', 'Delete VariableRead']","['Invocation', 'FieldRead']","['Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
941,941,public void delete ( ) { METHOD_1 ( true ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . delete ( ) ; } },public void delete ( ) { METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . delete ( ) ; } },['Delete Literal'],1121,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
942,942,"public void METHOD_1 ( TYPE_1 result ) { VAR_1 . i ( VAR_2 , ( STRING_1 + ( result . METHOD_2 ( ) ) ) ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) , STRING_2 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 result ) { VAR_1 . i ( VAR_2 , ( STRING_1 + result ) ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) , STRING_2 , VAR_3 ) . show ( ) ; }","['Move VariableRead', 'Delete Invocation']",1123,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
943,943,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 , int VAR_3 , int VAR_4 ) { return new TYPE_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_3 , ( VAR_4 + 1 ) ) , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 , int VAR_3 , int VAR_4 ) { return new TYPE_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_4 ) , VAR_2 ) ; }","['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1124,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
944,944,public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; } },['Delete Invocation'],1125,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
945,945,private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.NullPointerException { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.NullPointerException { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( getContext ( ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Update Wra', 'Update Invocation']",1127,"['Update Wra', 'Update Invocation']","['Wra', 'Invocation']","['Wra', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
946,946,public void METHOD_1 ( java.util.Collection < java.lang.String > VAR_1 ) { this . VAR_1 = new java.util.ArrayList < > ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Update TypeReference', 'Move VariableRead', 'Delete ConstructorCall']",1129,"['Update TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'VariableRead', 'ConstructorCall']","['TypeReference', 'ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",GPT Missed Nodes,0.6666666666666666,0.25,0.6666666666666666,0.36363636363636365,2,6,1
947,947,"public static void delete ( java.lang.String url , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 . delete ( url , new TYPE_3 ( VAR_1 ) ) ; }","private static void delete ( java.lang.String url , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 . delete ( url , new TYPE_3 ( VAR_1 ) ) ; }",['Update Wra'],1130,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
948,948,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws TYPE_3 { return METHOD_1 ( new TYPE_4 ( VAR_1 , VAR_2 ) , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws TYPE_3 { return METHOD_1 ( new TYPE_4 ( VAR_1 ) , VAR_2 ) ; }",['Delete VariableRead'],1131,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
949,949,public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_1 . METHOD_4 ( VAR_2 ) ; } } ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_1 . METHOD_4 ( VAR_2 ) ; } } ) ; VAR_1 . METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1133,['Delete Invocation'],"['VariableRead', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
950,950,"public void update ( int VAR_1 , TYPE_1 param , TYPE_1 VAR_2 ) { if ( VAR_2 != null ) { METHOD_1 ( VAR_2 , VAR_1 ) ; } METHOD_2 ( param , VAR_1 ) ; }","public void update ( int VAR_1 , TYPE_1 param , TYPE_1 VAR_2 ) { if ( VAR_2 != null ) { METHOD_1 ( VAR_2 , VAR_1 ) ; } METHOD_2 ( VAR_2 , VAR_1 ) ; }",['Update VariableRead'],1134,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
951,951,"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( VAR_3 . getContext ( ) , VAR_4 class ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( new android.content.Intent ( VAR_3 . getContext ( ) , VAR_4 class ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",1135,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
952,952,"public void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( new TYPE_3 ( ) ) ; TYPE_4 . METHOD_4 ( view . METHOD_5 ( ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { if ( VAR_1 == null ) return ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( new TYPE_3 ( ) ) ; METHOD_4 ( view . METHOD_5 ( ) , VAR_1 ) ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Update TypeAccess', 'Insert VariableRead', 'Insert Literal', 'Insert Return']",1136,"['Insert If', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Delete TypeAccess']","['If', 'BinaryOperator', 'Block', 'TypeAccess', 'VariableRead', 'Literal', 'Return']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return', 'TypeAccess']",GPT Missed Nodes,0.8571428571428571,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
953,953,"public void execute ( java.lang.String VAR_1 , java.util.List < java.lang.String > VAR_2 ) { execute ( VAR_1 , VAR_2 . METHOD_1 ( new java.lang.String [ VAR_3 . size ( ) ] ) ) ; }","public void execute ( java.lang.String VAR_1 , java.util.List < java.lang.String > VAR_2 ) { execute ( VAR_1 , VAR_2 . METHOD_1 ( new java.lang.String [ 0 ] ) ) ; }","['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",1137,"['Delete FieldRead', 'Delete Invocation', 'Insert Literal']","['Literal', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
954,954,"public int METHOD_1 ( final float x , final float y ) { int VAR_1 = METHOD_2 ( x ) ; int VAR_2 = METHOD_3 ( y ) ; return METHOD_1 ( VAR_1 , VAR_2 ) ; }","public int METHOD_1 ( final float x , final float y ) { int VAR_1 = METHOD_2 ( x ) ; int VAR_2 = METHOD_2 ( y ) ; return METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Update Invocation'],1138,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
955,955,"public TYPE_1 < java.lang.Long > METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 , java.lang.String VAR_3 , java.lang.Integer offset , java.lang.Integer VAR_4 ) { return new TYPE_1 < java.lang.Long > ( new java.util.ArrayList < java.lang.Long > ( ) , VAR_3 ) ; }","public TYPE_1 < java.lang.Long > METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 , java.lang.String VAR_3 , java.lang.Integer offset , java.lang.Integer VAR_4 ) { return null ; }","['Insert Literal', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete ConstructorCall']",1139,"['Delete ConstructorCall', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Insert Literal']","['Literal', 'ConstructorCall', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'Literal']",GPT Hallucinated Nodes,0.6,0.5,1.0,0.6666666666666666,4,4,0
956,956,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return ; this . VAR_1 = VAR_1 ; this . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1140,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.16666666666666666,0.2857142857142857,1,0,5
957,957,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( false ) ; VAR_5 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( false ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1141,"['Delete Invocation', 'Delete VariableRead', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation']","['Invocation', 'VariableRead', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
958,958,public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ( ( message + STRING_1 ) + ( VAR_2 ) ) ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( message ) ; } },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",1142,"['Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator']","['FieldRead', 'FieldRead', 'BinaryOperator', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator', 'VariableRead', 'BinaryOperator']",Partial Match,0.25,0.5,0.4,0.4444444444444445,2,2,3
959,959,"public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . assertEquals ( this . VAR_1 . METHOD_3 ( ) , STRING_2 ) ; VAR_2 . assertEquals ( this . VAR_1 . METHOD_4 ( ) , STRING_3 ) ; }","public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( STRING_1 ) ; assertEquals ( this . VAR_1 . METHOD_3 ( ) , STRING_2 ) ; assertEquals ( this . VAR_1 . METHOD_4 ( ) , STRING_3 ) ; }","['Update TypeAccess', 'Update TypeAccess']",1144,"['Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'TypeAccess']","['FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.0,0.0,0.0,0.0,0,4,2
960,960,"public static synchronized void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_1 , null , VAR_2 ) ; }","public static synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 , null ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1145,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
961,961,"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = new TYPE_2 ( false , INT_1 ) ; METHOD_2 ( VAR_3 , new TYPE_2 ( false , INT_1 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = new TYPE_2 ( true , INT_1 ) ; METHOD_2 ( VAR_3 , new TYPE_2 ( true , INT_1 ) ) ; }","['Update Literal', 'Update Literal']",1146,"['Update Literal', 'Update Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
962,962,public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { },['Delete Wra'],1147,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
963,963,"private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . getName ( ) ) ) ; }",['Update Invocation'],1148,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
964,964,protected int METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( INT_1 ) ) + INT_2 ; },public int METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( INT_1 ) ) + INT_2 ; },['Update Wra'],1149,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
965,965,"protected TYPE_1 METHOD_1 ( java.lang.String type , TYPE_1 [ ] VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_3 . equals ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_2 ; } } return null ; }","private TYPE_1 METHOD_1 ( java.lang.String type , TYPE_1 [ ] VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_3 . equals ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_2 ; } } return null ; }",['Update Wra'],1150,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
966,966,private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < TYPE_1 > node = TYPE_2 . METHOD_2 ( VAR_1 ) ; this . VAR_2 = node ; this . VAR_3 = node ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 node = TYPE_2 . METHOD_2 ( VAR_1 ) ; this . VAR_2 = node ; this . VAR_3 = node ; },['Delete TypeReference'],1151,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
967,967,public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },['Delete FieldRead'],1152,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
968,968,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 , TYPE_2 VAR_4 , TYPE_2 VAR_5 , java.lang.String VAR_6 ) { return METHOD_1 ( VAR_1 , new TYPE_3 ( ) , VAR_5 , VAR_4 , VAR_2 , VAR_3 , VAR_6 ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 , TYPE_2 VAR_4 , TYPE_2 VAR_5 , java.lang.String VAR_6 ) { return METHOD_1 ( VAR_1 , new TYPE_3 ( ) , VAR_5 , VAR_4 , VAR_2 , 0 , VAR_6 ) ; }","['Insert Literal', 'Delete VariableRead']",1154,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
969,969,synchronized void f ( ) { },protected void f ( ) { },['Update Wra'],1156,"['Delete Wra', 'Insert Wra']",['Wra'],"['Wra', 'Wra']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
970,970,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 , TYPE_3 { return VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }",['Delete TypeReference'],1157,['Delete TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
971,971,public float METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 ; },public float METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter']",1158,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
972,972,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 == null ) { return null ; } return METHOD_3 ( VAR_3 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; return METHOD_3 ( VAR_3 ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1159,"['Delete If', 'Delete Return', 'Delete Literal']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Return', 'Literal']",GPT Missed Nodes,0.5,1.0,0.42857142857142855,0.6,3,0,4
973,973,public void to ( final int c ) { if ( c < 0 ) throw new TYPE_1 ( ) ; this . c = c ; },public void to ( final int i ) { if ( i < 0 ) throw new TYPE_1 ( ) ; this . c = i ; },"['Update Parameter', 'Update VariableRead', 'Update VariableRead']",1160,"['Update Parameter', 'Update VariableRead', 'Update Assignment']","['Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'VariableRead', 'Assignment']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
974,974,"public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { switch ( id ) { case 1 : return new TYPE_4 ( this , VAR_1 , null , VAR_2 , null , VAR_3 ) ; case INT_1 : break ; } return null ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { switch ( id ) { case 1 : return new TYPE_4 ( this , VAR_1 , null , VAR_2 , null , null ) ; case INT_1 : break ; } return null ; }","['Insert Literal', 'Delete FieldRead']",1161,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
975,975,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( context ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; },['Delete FieldRead'],1162,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
976,976,"private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; boolean VAR_2 = VAR_3 . getBoolean ( STRING_1 , true ) ; return VAR_2 ; }","private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( getActivity ( ) ) ; boolean VAR_2 = VAR_3 . getBoolean ( STRING_1 , true ) ; return VAR_2 ; }","['Update Invocation', 'Update TypeAccess']",1164,"['Delete TypeAccess', 'Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'Invocation', 'Invocation']",Exact Match,1.0,0.0,0.0,0.0,0,3,2
977,977,"public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = true ; this . VAR_3 = VAR_1 ; VAR_4 . set ( this . id , VAR_1 ) ; }","public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = true ; this . VAR_3 = VAR_1 ; VAR_4 . set ( this . id , false ) ; }","['Insert Literal', 'Delete VariableRead']",1165,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
978,978,"public static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { int VAR_3 = INT_1 ; boolean VAR_4 = false ; if ( ( ( VAR_1 + INT_2 ) * VAR_3 ) <= VAR_2 ) { VAR_4 = true ; } return VAR_4 ; }","private static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { int VAR_3 = INT_1 ; boolean VAR_4 = false ; if ( ( ( VAR_1 + INT_2 ) * VAR_3 ) <= VAR_2 ) { VAR_4 = true ; } return VAR_4 ; }",['Update Wra'],1166,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
979,979,"public void METHOD_1 ( final TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Long VAR_3 , java.lang.Long VAR_4 , java.lang.Long VAR_5 , java.lang.String key ) { synchronized ( this ) { METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; } }","public void METHOD_1 ( final TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Long VAR_3 , java.lang.Long VAR_4 , java.lang.Long VAR_5 , java.lang.String key ) { synchronized ( this ) { METHOD_2 ( VAR_3 , VAR_4 ) ; } }",['Delete VariableRead'],1167,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
980,980,public void METHOD_1 ( java.lang.Boolean result ) { assertNotNull ( result ) ; assertTrue ( result ) ; VAR_1 . METHOD_2 ( ) ; },"public void METHOD_1 ( java.lang.Boolean result ) { assertNotNull ( result ) ; assertEquals ( result , new java.lang.Boolean ( true ) ) ; assertTrue ( result ) ; VAR_1 . METHOD_2 ( ) ; }","['Insert Invocation', 'Insert VariableRead', 'Insert ConstructorCall', 'Insert Literal']",1168,"['Insert Invocation', 'Insert VariableRead', 'Insert ConstructorCall', 'Insert Literal']","['Invocation', 'VariableRead', 'ConstructorCall', 'Literal']","['Invocation', 'VariableRead', 'ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
981,981,"public int METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_2 <= 0 ) { return 1 ; } return VAR_1 * ( METHOD_1 ( VAR_1 , ( VAR_2 - 1 ) ) ) ; }","public int METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_2 <= 0 ) { return 1 ; } if ( VAR_2 == VAR_1 ) { return VAR_1 ; } return VAR_1 * ( METHOD_1 ( VAR_1 , ( VAR_2 - 1 ) ) ) ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert VariableRead', 'Insert Return', 'Insert VariableRead']",1171,"['Insert If', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert VariableRead']","['If', 'BinaryOperator', 'Block', 'VariableRead', 'VariableRead', 'Return', 'VariableRead']","['If', 'BinaryOperator', 'VariableRead', 'VariableRead', 'Literal', 'Return', 'VariableRead']",Partial Match,0.6666666666666666,0.8571428571428571,0.8571428571428571,0.8571428571428571,6,1,1
982,982,"private static void METHOD_1 ( ) { if ( VAR_1 ) return ; VAR_1 = true ; VAR_2 . add ( new TYPE_1 ( new TYPE_2 ( STRING_1 ) , STRING_2 , STRING_3 , new TYPE_3 ( STRING_4 ) ) ) ; }","private static void METHOD_1 ( ) { if ( VAR_1 ) return ; VAR_1 = true ; VAR_2 . add ( new TYPE_1 ( new TYPE_2 ( STRING_1 ) , STRING_2 , STRING_3 ) ) ; }","['Delete FieldRead', 'Delete ConstructorCall']",1173,['Delete ConstructorCall'],"['FieldRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
983,983,"public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , TYPE_2 title ) { return new TYPE_1 ( id , VAR_1 , title ) ; }","public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return new TYPE_1 ( id , VAR_1 ) ; }","['Update ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1174,"['Delete Parameter', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
984,984,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { if ( ( VAR_3 . size ( ) ) > ( VAR_4 ) ) { VAR_2 . METHOD_2 ( ) ; } return VAR_2 . METHOD_1 ( VAR_1 ) ; } },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { if ( ( VAR_3 . size ( ) ) < ( VAR_4 ) ) { VAR_2 . METHOD_2 ( ) ; } return VAR_2 . METHOD_1 ( VAR_1 ) ; } },['Update BinaryOperator'],1175,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
985,985,public TYPE_1 METHOD_1 ( ) { if ( ( start ) == ( end ) ) { throw new TYPE_2 ( ) ; } TYPE_1 result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; },private TYPE_1 METHOD_1 ( ) { if ( ( start ) == ( end ) ) { throw new TYPE_2 ( ) ; } TYPE_1 result = data [ end ] ; data [ end ] = null ; ( end ) -- ; return result ; },['Update Wra'],1177,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
986,986,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1178,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
987,987,public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; if ( VAR_1 == null ) return null ; VAR_1 = METHOD_4 ( VAR_1 ) ; return METHOD_5 ( VAR_1 ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 = METHOD_4 ( VAR_1 ) ; return METHOD_5 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1179,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
988,988,"private java.lang.String METHOD_1 ( java.lang.String id , java.util.List < java.lang.String > VAR_1 ) { if ( id != null ) { for ( java.lang.String VAR_2 : VAR_1 ) { if ( id . METHOD_2 ( VAR_2 ) ) { return VAR_2 ; } } } return null ; }","private java.lang.String METHOD_1 ( java.lang.String id , java.util.List < java.lang.String > VAR_1 ) { if ( id != null ) { for ( java.lang.String VAR_2 : VAR_1 ) { if ( VAR_2 . METHOD_2 ( id ) ) { return VAR_2 ; } } } return null ; }",['Move VariableRead'],1181,"['Move VariableRead', 'Move VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
989,989,"public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 = new TYPE_3 ( VAR_3 , this , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 = new TYPE_3 ( this , VAR_4 , VAR_5 ) ; }",['Delete FieldRead'],1182,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
990,990,"public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; }",public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },['Delete FieldRead'],1183,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
991,991,"TYPE_1 < TYPE_2 > METHOD_1 ( double VAR_1 , double VAR_2 ) ;",TYPE_1 < TYPE_2 > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1184,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
992,992,"java.lang.CharSequence METHOD_1 ( android.content.Context context , int type , java.lang.String VAR_1 , boolean VAR_2 ) ;","java.lang.CharSequence METHOD_1 ( android.content.Context context , int type , java.lang.String VAR_1 ) ;","['Delete TypeReference', 'Delete Parameter']",1186,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
993,993,public boolean update ( TYPE_1 VAR_1 ) { return false ; },public TYPE_1 update ( TYPE_1 VAR_1 ) { return null ; },"['Update TypeReference', 'Update Literal']",1187,"['Update TypeReference', 'Update Literal']","['TypeReference', 'Literal']","['TypeReference', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
994,994,"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) ) ; METHOD_4 ( false , false ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getText ( ) , VAR_3 . getText ( ) ) ; METHOD_4 ( false ) ; }",['Delete Literal'],1190,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
995,995,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",1191,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
996,996,public static void METHOD_1 ( java.util.ArrayList message ) { VAR_1 . info ( ( message != null ? VAR_2 . toString ( ) : STRING_1 ) ) ; },public static void METHOD_1 ( java.util.ArrayList message ) { VAR_1 . info ( ( message != null ? VAR_2 . toString ( ) : null ) ) ; },"['Insert Literal', 'Delete FieldRead']",1192,"['Delete Literal', 'Insert Literal']","['Literal', 'FieldRead']","['Literal', 'Literal']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
997,997,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( STRING_1 ) ; intent . METHOD_3 ( VAR_2 ) ; METHOD_4 ( intent , INT_1 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( STRING_1 ) ; intent . METHOD_3 ( VAR_2 ) ; METHOD_4 ( intent , 1 ) ; }","['Insert Literal', 'Delete TypeAccess']",1193,"['Delete VariableRead', 'Delete TypeAccess', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'TypeAccess', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
998,998,public TYPE_1 METHOD_1 ( int index ) { return VAR_1 . get ( index ) ; },public TYPE_1 METHOD_1 ( int index ) { return this . VAR_1 . get ( index ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",1194,['Insert ThisAccess'],"['FieldRead', 'ThisAccess', 'TypeAccess']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
999,999,"public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + STRING_2 ; assertEquals ( new TYPE_1 ( VAR_1 , VAR_2 ) . METHOD_2 ( ) . first ( ) , new TYPE_2 ( INT_1 ) ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + STRING_2 ; assertEquals ( new TYPE_1 ( VAR_1 ) . METHOD_2 ( ) . first ( ) , new TYPE_2 ( INT_1 ) ) ; }","['Update ConstructorCall', 'Delete FieldRead']",1195,"['Delete VariableRead', 'Delete VariableRead']","['ConstructorCall', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1000,1000,public static java.lang.String [ ] METHOD_1 ( java.lang.String str ) { if ( ( str == null ) || ( VAR_1 . isEmpty ( ) ) ) return null ; java.lang.String [ ] VAR_2 = VAR_1 . split ( VAR_3 ) ; return VAR_2 ; },public static java.lang.String [ ] METHOD_1 ( java.lang.String str ) { java.lang.String [ ] VAR_2 = VAR_1 . split ( VAR_3 ) ; return VAR_2 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1196,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.125,1.0,0.1,0.18181818181818182,1,0,9
1001,1001,private void METHOD_1 ( TYPE_1 VAR_1 ) { this . start = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . start = VAR_1 ; },['Update Wra'],1198,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1002,1002,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( false ) ; VAR_2 . METHOD_5 ( 1.0F ) ; TYPE_1 . METHOD_6 ( VAR_3 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( false ) ; VAR_2 . METHOD_5 ( 1.0F ) ; METHOD_6 ( VAR_3 ) ; },"['Update TypeAccess', 'Update TypeAccess']",1199,"['Delete TypeAccess', 'Delete TypeAccess']","['TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess']",Exact Match,1.0,0.0,0.0,0.0,0,2,2
1003,1003,private static void METHOD_1 ( ) { new TYPE_1 ( new TYPE_2 ( ) . METHOD_2 ( 0 ) . METHOD_3 ( 0 ) ) . METHOD_4 ( ) ; },private static void METHOD_1 ( ) { new TYPE_1 ( new TYPE_2 ( ) ) . METHOD_4 ( ) ; },"['Update Invocation', 'Move Invocation', 'Insert ConstructorCall', 'Move ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation']",1200,"['Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Literal']","['Invocation', 'Invocation', 'ConstructorCall', 'ConstructorCall', 'Literal', 'Literal', 'Invocation', 'ConstructorCall', 'Invocation']","['Invocation', 'Literal', 'Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.4444444444444444,0.6153846153846153,4,0,5
1004,1004,"public java.lang.String METHOD_1 ( ) { return METHOD_1 ( CHAR_1 , false ) ; }",public java.lang.String METHOD_1 ( ) { return METHOD_1 ( CHAR_1 ) ; },['Delete Literal'],1201,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1005,1005,private static void METHOD_1 ( java.lang.String id ) { },public void METHOD_1 ( java.lang.String id ) { },"['Update Wra', 'Delete Wra']",1202,"['Delete Wra', 'Delete Wra']","['Wra', 'Wra']","['Wra', 'Wra']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
1006,1006,"public void METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] VAR_3 ) { try { VAR_4 . get ( VAR_1 ) . METHOD_1 ( VAR_2 , VAR_3 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] VAR_3 ) { try { VAR_4 . get ( VAR_1 ) . METHOD_1 ( VAR_2 , VAR_3 , p ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } }",['Insert FieldRead'],1203,['Insert VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1007,1007,public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . update ( true ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . update ( ) ; },['Delete Literal'],1204,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1008,1008,private java.lang.String METHOD_1 ( final java.lang.Object VAR_1 ) { return VAR_1 instanceof java.lang.String ? VAR_2 . toString ( ) : null ; },private java.lang.String METHOD_1 ( final java.lang.Object VAR_1 ) { return VAR_1 instanceof java.lang.String ? ( ( java.lang.String ) ( VAR_1 ) ) : null ; },"['Insert VariableRead', 'Insert TypeReference', 'Delete TypeAccess', 'Delete Invocation']",1206,"['Insert TypeReference', 'Insert VariableRead', 'Insert TypeReference', 'Insert VariableRead', 'Insert TypeReference', 'Delete FieldRead', 'Delete Invocation']","['VariableRead', 'TypeReference', 'TypeAccess', 'Invocation']","['TypeReference', 'VariableRead', 'TypeReference', 'VariableRead', 'TypeReference', 'FieldRead', 'Invocation']",Partial Match,0.6,0.42857142857142855,0.75,0.5454545454545454,3,4,1
1009,1009,"public boolean METHOD_1 ( int x , int y ) { return this . VAR_1 [ x ] [ y ] ; }","public boolean METHOD_1 ( int i , int j ) { return this . VAR_1 [ i ] [ j ] ; }","['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead']",1207,"['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
1010,1010,public TYPE_1 METHOD_1 ( java.lang.String value ) { return VAR_1 . isEmpty ( value ) ? null : new TYPE_1 ( value ) ; },public TYPE_1 METHOD_1 ( java.lang.String value ) { return value == null ? null : new TYPE_1 ( value ) ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",1208,"['Insert VariableRead', 'Insert Literal', 'Delete FieldRead', 'Delete Invocation']","['BinaryOperator', 'VariableRead', 'Literal', 'TypeAccess', 'Invocation']","['VariableRead', 'Literal', 'FieldRead', 'Invocation']",Partial Match,0.5,0.5,0.4,0.4444444444444445,2,2,3
1011,1011,public static TYPE_1 METHOD_1 ( int n ) { TYPE_1 VAR_1 = VAR_2 ; for ( int i = n ; i > 1 ; i -- ) { VAR_1 = VAR_1 . METHOD_2 ( new TYPE_1 ( java.lang.Integer.toString ( i ) ) ) ; } return VAR_1 ; },private static TYPE_1 METHOD_1 ( int n ) { TYPE_1 VAR_1 = VAR_2 ; for ( int i = n ; i > 1 ; i -- ) { VAR_1 = VAR_1 . METHOD_2 ( new TYPE_1 ( java.lang.Integer.toString ( i ) ) ) ; } return VAR_1 ; },['Update Wra'],1210,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1012,1012,"private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( INT_1 , INT_1 , VAR_1 , null ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( INT_1 , INT_1 , null , null ) ; }","['Insert Literal', 'Delete FieldRead']",1211,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1013,1013,"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { switch ( VAR_1 ) { case VAR_3 : if ( VAR_2 == ( VAR_4 ) ) { METHOD_2 ( data ) ; } break ; default : break ; } }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { switch ( VAR_1 ) { case VAR_3 : if ( VAR_2 == ( VAR_4 ) ) { METHOD_2 ( data , true ) ; } break ; default : break ; } }",['Insert Literal'],1212,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1014,1014,public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { VAR_1 = new java.util.Vector < java.lang.Integer > ( ) ; VAR_2 = VAR_3 ; },['Update ConstructorCall'],1213,"['Update TypeReference', 'Insert TypeReference', 'Update ConstructorCall']",['ConstructorCall'],"['TypeReference', 'TypeReference', 'ConstructorCall']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
1015,1015,"private synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } }","protected synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 . toString ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } }",['Update Wra'],1214,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1016,1016,protected TYPE_1 METHOD_1 ( int index ) { return null ; },protected TYPE_1 METHOD_1 ( int index ) { return ; },['Delete Literal'],1215,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1017,1017,"private boolean METHOD_1 ( ) { try ( TYPE_1 VAR_1 = new TYPE_1 ( ) ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 , java.lang.Integer.parseInt ( VAR_3 ) ) , INT_1 ) ; return true ; } catch ( java.io.IOException VAR_4 ) { return false ; } }","public boolean METHOD_1 ( ) { try ( TYPE_1 VAR_1 = new TYPE_1 ( ) ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 , java.lang.Integer.parseInt ( VAR_3 ) ) , INT_1 ) ; return true ; } catch ( java.io.IOException VAR_4 ) { return false ; } }",['Update Wra'],1216,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1018,1018,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( new TYPE_4 ( new TYPE_5 ( ) ) , new TYPE_6 ( ) ) ; return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( new TYPE_4 ( ) , new TYPE_6 ( ) ) ; return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) ) ; }",['Delete ConstructorCall'],1217,"['Delete ConstructorCall', 'Delete TypeReference']",['ConstructorCall'],"['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1019,1019,public TYPE_1 METHOD_1 ( ) { return ; },public TYPE_1 METHOD_1 ( ) { return null ; },['Insert Literal'],1218,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1020,1020,protected boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { return ( VAR_2 . size ( ) ) < ( VAR_3 . length ) ; },protected boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { return ( VAR_2 . size ( ) ) <= ( VAR_3 . length ) ; },['Update BinaryOperator'],1219,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1021,1021,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( java.lang.Thread : : METHOD_3 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( java.lang.Thread : : METHOD_3 ) ; },['Update Wra'],1221,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1022,1022,"private static void METHOD_1 ( long VAR_1 , long source , int VAR_2 , float VAR_3 ) { }","private static native void METHOD_1 ( long VAR_1 , long source , int VAR_2 , float VAR_3 ) ;",['Insert Wra'],1222,"['Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1023,1023,"public static void main ( java.lang.String [ ] args ) { TYPE_1 params = new TYPE_1 ( args , VAR_1 , STRING_1 ) ; VAR_2 = VAR_1 ; new TYPE_2 ( params ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_1 params = new TYPE_1 ( args ) ; VAR_2 = VAR_1 ; new TYPE_2 ( params ) ; },"['Update ConstructorCall', 'Delete FieldRead', 'Delete FieldRead']",1223,"['Delete VariableRead', 'Delete FieldRead', 'Delete Literal']","['ConstructorCall', 'FieldRead', 'FieldRead']","['VariableRead', 'FieldRead', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1024,1024,public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_2 . METHOD_3 ( VAR_1 ) ) ; },public static TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1224,"['Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Update Invocation']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'VariableRead', 'Invocation']",Partial Match,0.5,0.5,0.6666666666666666,0.5714285714285715,2,2,1
1025,1025,private boolean METHOD_1 ( ) { return false ; },private boolean METHOD_1 ( ) { return true ; },['Update Literal'],1225,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1026,1026,public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1226,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'Literal', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1027,1027,private void METHOD_1 ( ) { if ( ( count ) <= 0 ) { status = VAR_1 ; } else { status = VAR_2 ; } },private void METHOD_1 ( ) { if ( ( count ) == 0 ) { status = VAR_1 ; } else { status = VAR_2 ; } },['Update BinaryOperator'],1227,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1028,1028,public boolean METHOD_1 ( float VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; return false ; } return true ; },public boolean METHOD_1 ( float value ) { try { VAR_2 . METHOD_2 ( value ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; return false ; } return true ; },"['Update Parameter', 'Update VariableRead']",1228,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1029,1029,protected java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },['Update Wra'],1229,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1030,1030,"public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( VAR_1 , true , null , false ) ; }","public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( VAR_1 , true , null ) ; }",['Delete Literal'],1230,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1031,1031,"static long METHOD_1 ( int VAR_1 , int n ) { long start ; long end ; start = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 , n ) ; end = TYPE_1 . METHOD_2 ( ) ; return end - start ; }","public static long METHOD_1 ( long VAR_1 , long n ) { long start ; long end ; start = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 , n ) ; end = TYPE_1 . METHOD_2 ( ) ; return end - start ; }","['Insert Wra', 'Update TypeReference', 'Update TypeReference']",1231,"['Insert Wra', 'Update Parameter', 'Update Parameter']","['Wra', 'TypeReference', 'TypeReference']","['Wra', 'Parameter', 'Parameter']",Partial Match,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1032,1032,"public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return VAR_2 ; } int [ ] result = new int [ ] { VAR_2 } ; METHOD_2 ( VAR_1 , result ) ; return result [ 0 ] ; }","public int METHOD_1 ( TYPE_1 VAR_1 ) { int [ ] result = new int [ ] { 0 } ; METHOD_2 ( VAR_1 , 0 , result ) ; return result [ 0 ] ; }","['Insert Literal', 'Insert Literal', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldRead']",1232,"['Delete If', 'Delete Return', 'Delete VariableRead', 'Delete Literal', 'Insert Literal', 'Insert Literal', 'Insert VariableRead', 'Update Invocation']","['Literal', 'Literal', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If', 'FieldRead']","['If', 'Return', 'VariableRead', 'Literal', 'Literal', 'Literal', 'VariableRead', 'Invocation']",Partial Match,0.5,0.75,0.6,0.6666666666666665,6,2,4
1033,1033,"public void METHOD_1 ( java.lang.String VAR_1 , java.util.ArrayList < java.lang.Long > VAR_2 , java.util.ArrayList < java.lang.Long > VAR_3 ) { METHOD_2 ( VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.Long VAR_1 , java.util.ArrayList < java.lang.Long > VAR_2 , java.util.ArrayList < java.lang.Long > VAR_3 ) { METHOD_2 ( VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; }",['Update TypeReference'],1233,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1034,1034,private void METHOD_1 ( ) { for ( java.util.List < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) { for ( TYPE_1 p : VAR_1 ) { p . METHOD_2 ( false ) ; p . METHOD_3 ( false ) ; } } VAR_3 = false ; },private void METHOD_1 ( ) { for ( java.util.List < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) { for ( TYPE_1 p : VAR_1 ) { p . METHOD_2 ( false ) ; } } VAR_3 = false ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1234,"['Delete Invocation', 'Delete FieldRead', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'FieldRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1035,1035,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == VAR_1 ) return null ; TYPE_1 VAR_3 = VAR_2 ; VAR_2 = VAR_1 ; if ( VAR_1 != null ) METHOD_2 ( ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == VAR_1 ) return null ; TYPE_1 VAR_3 = VAR_2 ; VAR_2 = VAR_1 ; if ( VAR_1 != null ) this . METHOD_2 ( ) ; return VAR_3 ; },['Insert ThisAccess'],1235,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1036,1036,public boolean METHOD_1 ( TYPE_1 temp ) { VAR_1 . add ( temp ) ; return true ; },public boolean METHOD_1 ( TYPE_1 temp ) { if ( false ) { return false ; } VAR_1 . add ( temp ) ; return true ; },"['Insert If', 'Insert Literal', 'Insert Block', 'Insert Return', 'Insert Literal']",1236,"['Insert If', 'Insert Literal', 'Insert Return']","['If', 'Literal', 'Block', 'Return', 'Literal']","['If', 'Literal', 'Return']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
1037,1037,protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_2 ( TYPE_2 . METHOD_5 ( ) . getText ( ) ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_2 ( TYPE_2 . METHOD_5 ( ) . getText ( ) ) ; METHOD_6 ( ) ; },"['Delete TypeReference', 'Delete Parameter']",1237,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1038,1038,"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 , new TYPE_2 ( ) ) ; return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation']",1238,"['Delete Invocation', 'Delete Literal', 'Delete ConstructorCall']","['VariableRead', 'TypeAccess', 'ConstructorCall', 'Invocation']","['Invocation', 'Literal', 'ConstructorCall']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
1039,1039,private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . title = VAR_4 . getString ( VAR_5 ) ; VAR_6 = VAR_4 . getString ( VAR_7 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . title = VAR_4 . getString ( VAR_5 ) ; VAR_6 = VAR_4 . getString ( VAR_7 ) ; },['Update Wra'],1239,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1040,1040,protected boolean METHOD_1 ( java.lang.Object VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; boolean VAR_2 = index != ( - 1 ) ; if ( VAR_2 ) { METHOD_1 ( index ) ; } return VAR_2 ; },protected boolean METHOD_1 ( java.lang.Object VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; boolean VAR_2 = index != ( - 1 ) ; if ( VAR_2 ) { remove ( index ) ; } return VAR_2 ; },['Update Invocation'],1240,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1041,1041,"public int METHOD_1 ( java.lang.Integer a , java.lang.Integer b ) { return a - b ; }","public int METHOD_1 ( java.lang.Integer a , java.lang.Integer b ) { return b - a ; }",['Move VariableRead'],1241,"['Move VariableRead', 'Move VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
1042,1042,"public void METHOD_1 ( ) throws TYPE_1 { long VAR_1 = VAR_2 . METHOD_2 ( ) ; this . VAR_2 = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , this . VAR_5 ) ; this . VAR_6 = 0 ; }","private void METHOD_1 ( ) throws TYPE_1 { long VAR_1 = VAR_2 . METHOD_2 ( ) ; this . VAR_2 = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , this . VAR_5 ) ; this . VAR_6 = 0 ; }",['Update Wra'],1242,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1043,1043,"public TYPE_1 < TYPE_2 , TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { final TYPE_4 t = VAR_2 . METHOD_2 ( VAR_1 ) ; return TYPE_1 . METHOD_3 ( METHOD_4 ( t ) , new TYPE_5 ( 0 ) ) ; }","public TYPE_1 < TYPE_2 , TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { final TYPE_4 t = VAR_2 . METHOD_2 ( VAR_1 ) ; return TYPE_1 . METHOD_3 ( METHOD_4 ( t ) , null ) ; }","['Insert Literal', 'Delete Literal', 'Delete ConstructorCall']",1243,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal', 'Insert Literal']","['Literal', 'Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'Literal', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.75,1.0,0.8571428571428571,3,1,0
1044,1044,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . toUpperCase ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1244,"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.6,1.0,0.7499999999999999,3,2,0
1045,1045,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { final TYPE_3 VAR_2 = this . VAR_3 . METHOD_2 ( VAR_1 ) ; this . VAR_4 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { final TYPE_3 VAR_2 = this . VAR_3 . METHOD_2 ( VAR_1 ) ; this . VAR_4 . METHOD_1 ( VAR_2 ) ; return VAR_1 ; },['Update Invocation'],1245,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1046,1046,protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getText ( ) ) ; },private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getText ( ) ) ; },['Update Wra'],1247,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1047,1047,public java.lang.Object METHOD_1 ( TYPE_1 node ) { super . METHOD_1 ( node ) ; METHOD_2 ( node ) ; return false ; },public java.lang.Object METHOD_1 ( TYPE_1 node ) { super . METHOD_1 ( node ) ; METHOD_2 ( node ) ; return null ; },['Update Literal'],1248,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1048,1048,"public TYPE_1 update ( TYPE_1 VAR_1 ) { init ( ) ; VAR_2 = VAR_3 . METHOD_1 ( true ) ; VAR_4 . update ( ( ( VAR_5 ) + STRING_1 ) , VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; return VAR_1 ; }","public TYPE_1 update ( TYPE_1 VAR_1 ) { init ( ) ; VAR_2 = VAR_3 . METHOD_1 ( ) ; VAR_4 . update ( ( ( VAR_5 ) + STRING_1 ) , VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; return VAR_1 ; }",['Delete Literal'],1249,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1049,1049,"public void METHOD_1 ( java.util.Map < java.lang.Object , java.lang.Object > VAR_1 , TYPE_1 VAR_2 ) { if ( ( this . VAR_2 ) != null ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } TYPE_2 . METHOD_3 ( VAR_5 , STRING_1 , this . VAR_2 ) ; }","public void METHOD_1 ( java.util.Map < java.lang.Object , java.lang.Object > VAR_1 , TYPE_1 VAR_2 ) { if ( ( this . VAR_2 ) == null ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } TYPE_2 . METHOD_3 ( VAR_5 , STRING_1 , this . VAR_2 ) ; }",['Update BinaryOperator'],1250,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1050,1050,protected void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) VAR_3 . add ( VAR_2 . get ( i ) ) ; },protected void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) VAR_3 . add ( VAR_2 . get ( i ) ) ; },"['Delete VariableRead', 'Delete Invocation']",1251,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1051,1051,"private void METHOD_1 ( boolean commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 ... VAR_3 ) throws TYPE_4 { VAR_2 . METHOD_2 ( ) ; METHOD_1 ( commit , VAR_1 , VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 ... VAR_3 ) throws TYPE_4 { VAR_2 . METHOD_2 ( ) ; METHOD_1 ( VAR_1 , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1252,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1052,1052,public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) ;,public java.util.List < TYPE_1 > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1253,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1053,1053,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; VAR_2 . assertTrue ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; assertTrue ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; },"['Update TypeAccess', 'Update TypeAccess']",1254,"['Delete TypeAccess', 'Delete TypeAccess']","['TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess']",Exact Match,1.0,0.0,0.0,0.0,0,2,2
1054,1054,public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; if ( VAR_2 == null ) throw new TYPE_3 ( ) ; return VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) . METHOD_3 ( ) ; if ( VAR_2 == null ) throw new TYPE_3 ( ) ; return VAR_2 ; },['Update Invocation'],1255,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1055,1055,public boolean equals ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) == ( this . METHOD_1 ( ) ) ) { return true ; } else { return false ; } },public boolean equals ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) == ( METHOD_1 ( ) ) ) { return true ; } else { return false ; } },['Delete ThisAccess'],1256,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1056,1056,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 , TYPE_3 VAR_5 ) { return METHOD_2 ( VAR_1 , ( STRING_1 + ( TYPE_4 . METHOD_3 ( ) ) ) , VAR_2 , VAR_3 , VAR_5 , VAR_6 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_3 VAR_5 ) { return METHOD_2 ( VAR_1 , ( STRING_1 + ( TYPE_4 . METHOD_3 ( ) ) ) , VAR_2 , VAR_3 , VAR_5 , VAR_6 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1257,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1057,1057,"private static boolean METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_1 VAR_2 ) { return ( VAR_2 . METHOD_2 ( ) . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) . getId ( ) ) ) && ( VAR_3 . METHOD_3 ( VAR_4 ) ) ; }","private static boolean METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_1 VAR_2 ) { return ( VAR_2 . METHOD_2 ( ) . getId ( ) . equals ( VAR_2 . METHOD_2 ( ) . getId ( ) ) ) && ( VAR_3 . METHOD_3 ( VAR_4 ) ) ; }",['Update VariableRead'],1260,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1058,1058,public static TYPE_1 METHOD_1 ( TYPE_1 type ) { return TYPE_1 . METHOD_2 ( VAR_1 . name ( ) ) ; },public static TYPE_1 METHOD_1 ( TYPE_1 type ) { return TYPE_1 . METHOD_2 ( VAR_1 . toString ( ) ) ; },['Update Invocation'],1261,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1059,1059,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String to , java.lang.String VAR_2 , java.lang.String status ) ;","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String to , java.lang.String VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1263,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1060,1060,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 response ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter']",1264,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1061,1061,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String id ) ;",TYPE_1 METHOD_1 ( java.lang.String id ) ;,"['Delete TypeReference', 'Delete Parameter']",1265,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1062,1062,"java.util.Map < java.lang.Integer , TYPE_1 > METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 , java.lang.Integer VAR_2 ) throws java.lang.Exception ;","java.util.Map < java.lang.Integer , TYPE_1 > METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 ) throws java.lang.Exception ;","['Delete TypeReference', 'Delete Parameter']",1266,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1063,1063,public abstract void METHOD_1 ( final TYPE_1 p ) ;,protected abstract void METHOD_1 ( final TYPE_1 p ) ;,['Update Wra'],1267,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1064,1064,public boolean METHOD_1 ( java.lang.String str ) { return true ; },public boolean METHOD_1 ( java.lang.String str ) { return false ; },['Update Literal'],1268,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1065,1065,"public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 array , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { return METHOD_2 ( VAR_1 , TYPE_5 . METHOD_3 ( ( ( double [ ] ) ( TYPE_6 . METHOD_4 ( array ) ) ) ) , array , VAR_2 ) ; }","public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 array , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { return METHOD_2 ( VAR_1 , TYPE_5 . METHOD_3 ( ( ( double [ ] ) ( TYPE_6 . METHOD_4 ( array ) ) ) ) , VAR_2 ) ; }",['Delete VariableRead'],1269,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1066,1066,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) throw new java.lang.NullPointerException ( STRING_1 ) ; VAR_2 . add ( new TYPE_1 ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) throw new java.lang.NullPointerException ( STRING_1 ) ; VAR_2 . add ( VAR_1 ) ; },"['Move VariableRead', 'Delete ConstructorCall']",1270,['Delete ConstructorCall'],"['VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1067,1067,"public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( event . METHOD_3 ( ) , event . METHOD_3 ( ) . METHOD_4 ( ) ) ; }",public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( event . METHOD_3 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1271,['Delete Invocation'],"['VariableRead', 'Invocation', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
1068,1068,public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( VAR_1 == ( VAR_2 ) ) { METHOD_1 ( ) ; } else if ( VAR_1 == ( VAR_3 ) ) { METHOD_2 ( ) ; } else { throw new TYPE_1 ( STRING_1 ) ; } },public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( VAR_1 == ( VAR_2 ) ) { METHOD_1 ( ) ; } else if ( VAR_1 == ( VAR_3 ) ) { METHOD_2 ( ) ; } else { throw new java.io.IOException ( STRING_1 ) ; } },['Update ConstructorCall'],1272,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1069,1069,"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 != ( VAR_3 ) ) return ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 != 0 ) return ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","['Insert Literal', 'Delete FieldRead']",1274,"['Delete FieldRead', 'Insert Literal']","['Literal', 'FieldRead']","['FieldRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1070,1070,"public void METHOD_1 ( java.lang.String name ) { VAR_1 . add ( VAR_1 . size ( ) , new TYPE_1 ( name , false ) ) ; }","public void METHOD_1 ( java.lang.String name ) { VAR_1 . add ( VAR_1 . size ( ) , new TYPE_1 ( false , true , name ) ) ; }","['Update ConstructorCall', 'Move VariableRead', 'Insert Literal']",1276,"['Move Literal', 'Move Literal', 'Move VariableRead']","['ConstructorCall', 'VariableRead', 'Literal']","['Literal', 'Literal', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1071,1071,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; VAR_1 . METHOD_1 ( ) . METHOD_2 ( new TYPE_2 ( ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation']",1277,"['Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall']","['VariableRead', 'Invocation', 'ConstructorCall', 'Invocation']","['Invocation', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.6666666666666666,1.0,0.75,0.8571428571428571,3,0,1
1072,1072,"public void METHOD_1 ( int start , int end , TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_1 ( start , end , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( int start , int end , TYPE_1 VAR_1 , int VAR_2 ) { METHOD_1 ( start , end , VAR_1 , VAR_2 , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1278,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1073,1073,public double METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { return 0.0 ; } return ( VAR_2 ) / ( VAR_3 ) ; },public double METHOD_1 ( ) { return ( VAR_2 ) / ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1280,"['Delete If', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Return']","['FieldRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Literal', 'VariableRead', 'BinaryOperator', 'Return']",Partial Match,0.5714285714285714,0.8,0.5714285714285714,0.6666666666666666,4,1,3
1074,1074,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Integer i ) { this . VAR_2 . put ( VAR_1 , i ) ; return this ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; return this ; },"['Update Invocation', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1281,"['Delete Parameter', 'Delete VariableRead', 'Delete TypeReference', 'Update Invocation']","['Invocation', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'TypeReference', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
1075,1075,"public TYPE_1 METHOD_1 ( android.content.Context context , long id ) { return new TYPE_2 ( context ) . METHOD_1 ( id ) ; }","public TYPE_1 METHOD_1 ( android.content.Context context , long id ) { return new TYPE_2 ( context ) . METHOD_1 ( ( ( int ) ( id ) ) ) ; }",['Insert TypeReference'],1283,"['Insert TypeReference', 'Insert VariableRead']",['TypeReference'],"['TypeReference', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1076,1076,"public TYPE_1 replace ( long VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { VAR_4 . METHOD_1 ( ) ; return new TYPE_2 ( VAR_4 . METHOD_2 ( ) , VAR_5 , VAR_6 , VAR_7 , VAR_1 , VAR_2 , value , VAR_3 ) ; }","public TYPE_1 replace ( int VAR_5 , int VAR_6 ) { VAR_4 . METHOD_1 ( ) ; return new TYPE_2 ( VAR_4 . METHOD_2 ( ) , VAR_5 , VAR_6 , VAR_7 , VAR_1 , VAR_2 , value , VAR_3 ) ; }","['Update Parameter', 'Update Parameter', 'Update TypeReference', 'Update TypeReference', 'Move FieldRead', 'Insert VariableRead', 'Insert VariableRead', 'Update FieldRead', 'Update FieldRead', 'Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']",1284,"['Update Parameter', 'Update Parameter']","['Parameter', 'Parameter', 'TypeReference', 'TypeReference', 'FieldRead', 'VariableRead', 'VariableRead', 'FieldRead', 'FieldRead', 'FieldRead', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter']",GPT Missed Nodes,0.25,1.0,0.13333333333333333,0.23529411764705882,2,0,13
1077,1077,"public static void METHOD_1 ( java.lang.String ... VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , null ) ; } }","public static void METHOD_1 ( java.lang.String ... VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_2 , null ) ; } }",['Update Invocation'],1285,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1078,1078,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 target , TYPE_2 event ) { if ( target instanceof TYPE_3 ) { METHOD_2 ( VAR_1 , ( ( TYPE_3 ) ( target ) ) , event ) ; } else { METHOD_3 ( VAR_1 , event ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 target , TYPE_2 event ) { if ( target instanceof TYPE_3 ) { METHOD_2 ( VAR_1 , ( ( TYPE_3 ) ( target ) ) ) ; } else { METHOD_3 ( VAR_1 , event ) ; } }",['Delete VariableRead'],1286,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1079,1079,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = this . VAR_3 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; TYPE_3 . METHOD_4 ( VAR_1 , VAR_2 , STRING_1 ) ; return STRING_2 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = this . VAR_3 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; TYPE_3 . METHOD_4 ( VAR_1 , VAR_2 ) ; return STRING_2 ; }",['Delete TypeAccess'],1287,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1080,1080,"public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , true ) ; java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; return VAR_3 ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; return VAR_3 ; }",['Delete Literal'],1288,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1081,1081,"protected static native boolean METHOD_1 ( long handle , boolean VAR_1 , boolean VAR_2 ) ;","protected static native boolean METHOD_1 ( long handle , boolean VAR_1 ) ;","['Delete TypeReference', 'Delete Parameter']",1289,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1082,1082,public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = ( VAR_1 . METHOD_2 ( STRING_1 ) ) + INT_1 ; return VAR_3 . substring ( VAR_2 ) ; },"public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = ( VAR_1 . METHOD_2 ( STRING_1 ) ) + INT_1 ; return VAR_3 . substring ( VAR_2 , ( ( VAR_3 . length ( ) ) - VAR_2 ) ) ; }","['Insert BinaryOperator', 'Insert Invocation', 'Insert VariableRead', 'Insert TypeAccess']",1290,"['Insert Invocation', 'Insert FieldRead', 'Insert Invocation', 'Insert BinaryOperator', 'Insert VariableRead']","['BinaryOperator', 'Invocation', 'VariableRead', 'TypeAccess']","['Invocation', 'FieldRead', 'Invocation', 'BinaryOperator', 'VariableRead']",Partial Match,0.6,0.6,0.75,0.6666666666666665,3,2,1
1083,1083,public void METHOD_1 ( ) { if ( ( ( VAR_1 ) - 1 ) >= 0 ) { ( this . VAR_1 ) -- ; METHOD_2 ( VAR_1 ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) - 1 ) > 0 ) { ( this . VAR_1 ) -- ; METHOD_2 ( VAR_1 ) ; } },['Update BinaryOperator'],1292,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1084,1084,public TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { return execute ( new TYPE_3 ( VAR_1 ) ) ; },public TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { return execute ( new TYPE_3 ( ) ) ; },['Delete VariableRead'],1293,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1085,1085,"protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; return new TYPE_1 ( new TYPE_3 ( ) , VAR_1 ) ; }",protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; return new TYPE_1 ( ) ; },"['Delete ConstructorCall', 'Delete VariableRead']",1294,"['Delete ConstructorCall', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference']","['ConstructorCall', 'VariableRead']","['ConstructorCall', 'ConstructorCall', 'TypeReference', 'TypeReference']",Partial Match,0.3333333333333333,0.25,0.5,0.3333333333333333,1,3,1
1086,1086,"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_2 ( ( position + 1 ) ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_2 ( position ) ; }","['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1295,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1087,1087,public void METHOD_1 ( final long VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( final long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1296,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1088,1088,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.StringBuilder VAR_5 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , null , VAR_5 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , null ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1298,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1089,1089,"public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { java.lang.String VAR_3 = ( ( java.lang.String ) ( VAR_2 ) ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { java.lang.String VAR_3 = ( ( java.lang.String ) ( VAR_2 ) ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; return false ; }",['Update Literal'],1299,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1090,1090,"public static final void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { if ( ( VAR_2 != null ) && ( ! ( VAR_2 instanceof TYPE_3 ) ) ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } }","protected static final void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { if ( ( VAR_2 != null ) && ( ! ( VAR_2 instanceof TYPE_3 ) ) ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } }",['Update Wra'],1300,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1091,1091,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( data ) ; },"['Insert FieldRead', 'Delete Literal']",1301,"['Update Literal', 'Update VariableRead']","['FieldRead', 'Literal']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.0,0.0,0.0,0,2,2
1092,1092,public static boolean METHOD_1 ( java.lang.String name ) { return name . METHOD_2 ( STRING_1 ) ; },private static boolean METHOD_1 ( java.lang.String name ) { return name . METHOD_2 ( STRING_1 ) ; },['Update Wra'],1302,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1093,1093,public static int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return 0 ; TYPE_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 ; },public static int METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1303,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'BinaryOperator', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1094,1094,"public double METHOD_1 ( double VAR_1 , double VAR_2 ) { return VAR_1 * VAR_2 ; }","public double METHOD_1 ( double a , double b ) { return a * b ; }","['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead']",1304,"['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
1095,1095,"private void METHOD_1 ( int x , int y ) { int VAR_1 = 0 ; while ( VAR_1 < ( y - 1 ) ) { METHOD_2 ( VAR_1 , x ) ; VAR_1 ++ ; } }","private void METHOD_1 ( int x , int y ) { int VAR_1 = 0 ; while ( VAR_1 < y ) { METHOD_2 ( VAR_1 , x ) ; VAR_1 ++ ; } }","['Update BinaryOperator', 'Move BinaryOperator', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1305,"['Delete Literal', 'Delete BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.4,0.5714285714285715,2,0,3
1096,1096,"public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ; METHOD_2 ( VAR_1 , STRING_5 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ; METHOD_2 ( VAR_1 , STRING_5 , true ) ; }",['Insert Literal'],1306,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1097,1097,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 , this , STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_3 ( TYPE_4 . METHOD_4 ( ) ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 , this , STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_2 ) ; return VAR_2 ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1307,"['Delete Invocation', 'Delete TypeAccess']","['VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['Invocation', 'TypeAccess']",GPT Missed Nodes,0.6666666666666666,1.0,0.5,0.6666666666666666,2,0,2
1098,1098,"public static double METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , double VAR_3 ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public static double METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1308,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1099,1099,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( this ) ; },['Delete TypeAccess'],1310,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1100,1100,public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { if ( VAR_3 ) { METHOD_2 ( ) ; } else { METHOD_3 ( false ) ; } } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { if ( VAR_3 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } } },['Delete Literal'],1311,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1101,1101,public static < TYPE_1 > void METHOD_1 ( TYPE_1 t ) { if ( null == t ) return ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . delete ( ) . METHOD_4 ( t ) ; },public static < TYPE_1 > void METHOD_1 ( TYPE_1 t ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . delete ( ) . METHOD_4 ( t ) ; },"['Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1312,"['Delete If', 'Delete Literal', 'Delete VariableRead', 'Delete Return']","['Literal', 'VariableRead', 'BinaryOperator', 'Return', 'Block', 'If']","['If', 'Literal', 'VariableRead', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
1102,1102,public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( ) ; for ( int i = 0 ; i < INT_1 ; ++ i ) { VAR_1 . METHOD_2 ( ) ; } },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( ) ; for ( int i = 0 ; i < 1 ; ++ i ) { VAR_1 . METHOD_2 ( ) ; } },"['Insert Literal', 'Delete FieldRead']",1313,"['Delete TypeAccess', 'Insert Literal']","['Literal', 'FieldRead']","['TypeAccess', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1103,1103,"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_4 ( ) ; METHOD_5 ( VAR_6 , VAR_5 , STRING_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_4 ( ) ; METHOD_5 ( VAR_6 , VAR_5 ) ; }",['Delete TypeAccess'],1314,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1104,1104,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.NullPointerException { return new TYPE_3 ( this ) ; },"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.NullPointerException { return new TYPE_3 ( this , VAR_1 ) ; }","['Update ConstructorCall', 'Insert VariableRead']",1315,['Insert VariableRead'],"['ConstructorCall', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1105,1105,public static void main ( java.lang.String [ ] args ) { TYPE_1 t = new TYPE_1 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( null ) ; VAR_1 . METHOD_1 ( true ) ; t . METHOD_2 ( VAR_1 ) ; t . METHOD_1 ( true ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 t = new TYPE_1 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( true ) ; t . METHOD_2 ( VAR_1 ) ; t . METHOD_1 ( true ) ; },"['Update ConstructorCall', 'Delete Literal']",1316,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1106,1106,"public void METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_2 VAR_3 , final TYPE_2 VAR_4 , TYPE_3 VAR_5 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , VAR_5 , false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_2 VAR_3 , final TYPE_2 VAR_4 , TYPE_3 VAR_5 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , VAR_5 ) ; }",['Delete Literal'],1317,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1107,1107,"void METHOD_1 ( java.lang.Throwable VAR_1 , java.lang.String message ) ;","void METHOD_1 ( java.lang.Throwable t , java.lang.String message , java.lang.Object ... args ) ;","['Update Parameter', 'Insert Parameter']",1318,"['Update Parameter', 'Insert Parameter', 'Insert Parameter']","['Parameter', 'Parameter']","['Parameter', 'Parameter', 'Parameter']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
1108,1108,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertEquals ( true , TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . assertEquals ( true , METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) ; }",['Update TypeAccess'],1319,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1109,1109,public void METHOD_1 ( ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },private void METHOD_1 ( ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },['Update Wra'],1320,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1110,1110,public static boolean METHOD_1 ( final int status ) { return status > ( VAR_1 ) ; },public static boolean METHOD_1 ( final byte status ) { return status > ( VAR_1 ) ; },['Update TypeReference'],1321,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1111,1111,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 ) { return new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { return new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1322,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1112,1112,public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) ) ; VAR_2 . METHOD_4 ( ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; return VAR_2 ; },"['Update TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']",1323,"['Update TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'ConstructorCall', 'Invocation']",Partial Match,0.5,0.5,0.75,0.6,3,3,1
1113,1113,"public void METHOD_1 ( ) { if ( VAR_1 != ( - 1 ) ) { VAR_2 . METHOD_2 ( ( VAR_1 + 1 ) , VAR_3 . size ( ) ) ; } else { VAR_2 . METHOD_3 ( ) ; } }","public void METHOD_1 ( ) { if ( VAR_1 != ( - 1 ) ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . size ( ) ) ; } else { VAR_2 . METHOD_3 ( ) ; } }","['Insert TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1324,"['Delete Literal', 'Delete BinaryOperator']","['TypeAccess', 'FieldRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1114,1114,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String key , int VAR_1 ) { return ( ( TYPE_2 ) ( this . METHOD_2 ( ) ) ) . METHOD_3 ( key , TYPE_3 . METHOD_4 ( VAR_1 ) ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String key , int VAR_1 ) { return ( ( TYPE_2 ) ( this . METHOD_2 ( ) ) ) . METHOD_3 ( key ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1325,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1115,1115,public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { TYPE_2 < TYPE_3 > VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_4 . remove ( VAR_2 ) ; VAR_3 . remove ( VAR_1 ) ; VAR_5 . METHOD_1 ( VAR_2 ) ; },"public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { TYPE_2 < TYPE_3 > VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_4 . remove ( VAR_2 ) ; VAR_3 . remove ( VAR_1 , VAR_2 ) ; VAR_5 . METHOD_1 ( VAR_2 ) ; }",['Insert VariableRead'],1326,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1116,1116,public boolean METHOD_1 ( ) { return ( error ) == null ; },public boolean METHOD_1 ( ) { return ( error ) != null ; },['Update BinaryOperator'],1327,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1117,1117,"private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) ; }",['Update Wra'],1328,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1118,1118,"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { if ( VAR_1 == 0 ) { VAR_4 . METHOD_2 ( VAR_5 . METHOD_3 ( VAR_3 ) ) ; } else { VAR_6 . error ( VAR_1 ) ; } }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { if ( VAR_1 == 0 ) { VAR_4 . METHOD_2 ( VAR_5 . METHOD_3 ( VAR_3 ) ) ; } else { VAR_6 . error ( VAR_2 ) ; } }",['Update VariableRead'],1330,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1119,1119,"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 , VAR_1 , STRING_1 ) . METHOD_4 ( java.lang.String . METHOD_5 ( VAR_3 . getId ( ) ) ) . METHOD_6 ( VAR_4 ) . METHOD_7 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . add ( VAR_2 , VAR_1 , STRING_1 ) . METHOD_4 ( java.lang.String . METHOD_5 ( VAR_3 . getId ( ) ) ) . METHOD_6 ( VAR_4 ) . METHOD_7 ( ) ; }",['Update Invocation'],1331,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1120,1120,"public boolean METHOD_1 ( TYPE_1 state ) { for ( TYPE_1 [ ] VAR_1 : this . VAR_2 ) { if ( METHOD_2 ( VAR_1 , state ) ) return true ; } return false ; }","public boolean METHOD_1 ( TYPE_1 state ) { for ( TYPE_1 [ ] VAR_1 : this . VAR_2 ) { if ( METHOD_2 ( VAR_1 , state ) ) ; return true ; } return false ; }","['Move Return', 'Delete Block']",1332,"['Insert Block', 'Move Return']","['Return', 'Block']","['Block', 'Return']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
1121,1121,private static TYPE_1 METHOD_1 ( java.lang.String item ) { for ( TYPE_1 i : VAR_1 ) { if ( VAR_2 . equals ( item ) ) return new TYPE_1 ( i ) ; } return null ; },private static TYPE_1 METHOD_1 ( java.lang.String item ) { for ( TYPE_1 i : VAR_1 ) { if ( VAR_2 . equals ( item ) ) return i ; } return null ; },"['Move VariableRead', 'Delete ConstructorCall']",1333,['Delete ConstructorCall'],"['VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1122,1122,public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 ) ; return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 ) ; return true ; },['Update Literal'],1334,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1123,1123,"public java.lang.String METHOD_1 ( java.lang.Long id , TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , this . VAR_2 . METHOD_3 ( id ) ) ; VAR_1 . METHOD_2 ( STRING_2 , this . VAR_2 . METHOD_4 ( ) ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( java.lang.Long id , TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , this . VAR_2 . METHOD_3 ( id ) ) ; VAR_1 . METHOD_2 ( STRING_1 , this . VAR_2 . METHOD_4 ( ) ) ; return STRING_3 ; }",['Update TypeAccess'],1335,['Update Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1124,1124,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , this . VAR_4 ) ; return METHOD_3 ( VAR_2 . METHOD_4 ( new TYPE_3 ( ) , new TYPE_4 ( ) ) ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( this . VAR_1 , this . VAR_4 ) ; return METHOD_3 ( VAR_2 . METHOD_4 ( new TYPE_3 ( ) , new TYPE_4 ( ) ) ) ; }","['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1336,"['Delete Parameter', 'Insert ThisAccess', 'Insert FieldRead', 'Delete VariableRead']","['FieldRead', 'ThisAccess', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'ThisAccess', 'FieldRead', 'VariableRead']",GPT Missed Nodes,0.8,1.0,0.8,0.888888888888889,4,0,1
1125,1125,"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > args , boolean VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 { VAR_3 . set ( VAR_4 . get ( ) ) ; super . METHOD_1 ( args , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > args , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 { VAR_3 . set ( VAR_4 . get ( ) ) ; super . METHOD_1 ( args , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1337,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1126,1126,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( INT_1 , INT_1 ) ) ; VAR_2 . METHOD_5 ( ) ; }",public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",1338,"['Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal', 'Delete Literal']","['VariableRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'Invocation']","['Invocation', 'ConstructorCall', 'TypeReference', 'Literal', 'Literal']",Partial Match,0.3333333333333333,0.4,0.4,0.4000000000000001,2,3,3
1127,1127,public TYPE_1 < TYPE_2 > METHOD_1 ( double VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 < TYPE_2 > METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },['Update TypeReference'],1339,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1128,1128,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String message ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , ( ( ( ( this . getClass ( ) . METHOD_3 ( ) ) + STRING_1 ) + VAR_2 ) + STRING_2 ) , message ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String message ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , ( ( ( ( this . getClass ( ) . getName ( ) ) + STRING_1 ) + VAR_2 ) + STRING_2 ) , message ) ; }",['Update Invocation'],1341,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1129,1129,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( new TYPE_2 ( VAR_1 ) ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; METHOD_2 ( ) ; },"['Insert VariableRead', 'Insert TypeReference', 'Delete VariableRead', 'Delete ConstructorCall']",1344,"['Insert TypeReference', 'Insert TypeReference', 'Insert VariableRead', 'Insert VariableRead', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Delete ConstructorCall']","['VariableRead', 'TypeReference', 'VariableRead', 'ConstructorCall']","['TypeReference', 'TypeReference', 'VariableRead', 'VariableRead', 'BinaryOperator', 'BinaryOperator', 'ConstructorCall']",GPT Hallucinated Nodes,0.75,0.42857142857142855,0.75,0.5454545454545454,3,4,1
1130,1130,protected void METHOD_1 ( int status ) { },protected abstract void METHOD_1 ( int status ) ;,['Insert Wra'],1345,"['Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1131,1131,"public static void main ( java.lang.String [ ] args ) throws TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( STRING_1 , STRING_2 ) ; }","public static void main ( java.lang.String [ ] args ) throws TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( STRING_1 , STRING_1 ) ; }",['Update FieldRead'],1346,['Update Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1132,1132,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( ) ; },['Delete FieldRead'],1347,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1133,1133,"public float [ ] METHOD_1 ( int VAR_1 ) { final int VAR_2 = INT_1 ; final int VAR_3 = INT_1 ; final int VAR_4 = INT_1 ; return METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_1 ) ; }","public float [ ] METHOD_1 ( ) { final int VAR_2 = INT_1 ; final int VAR_3 = INT_1 ; final int VAR_4 = INT_1 ; return METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1348,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1134,1134,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = this . getClass ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; VAR_4 = this . getClass ( ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_3 = this . getClass ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; VAR_4 = this . getClass ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; },"['Update TypeAccess', 'Delete FieldRead']",1349,"['Delete VariableRead', 'Delete Parameter', 'Update Literal']","['TypeAccess', 'FieldRead']","['VariableRead', 'Parameter', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,3,2
1135,1135,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_5 , ( - 1 ) , null , VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_5 , ( - 1 ) , null , VAR_1 , VAR_2 ) ; METHOD_4 ( ) ; }",['Delete TypeAccess'],1350,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1136,1136,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < ? extends TYPE_3 > VAR_2 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_2 ) ; }","public void METHOD_1 ( java.lang.Integer VAR_1 , TYPE_2 < ? extends TYPE_3 > VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 . METHOD_4 ( ) , VAR_2 ) ; }","['Update Invocation', 'Update TypeReference', 'Move VariableRead', 'Delete Invocation']",1351,"['Update TypeReference', 'Update Invocation', 'Delete Invocation', 'Delete FieldRead']","['Invocation', 'TypeReference', 'VariableRead', 'Invocation']","['TypeReference', 'Invocation', 'Invocation', 'FieldRead']",Partial Match,0.5,0.75,0.75,0.75,3,1,1
1137,1137,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_3 . error ( STRING_1 ) ; return ; } VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { java.lang.System.err.println ( STRING_1 ) ; return ; } VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",1352,"['Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Exact Match,1.0,0.4,0.5,0.4444444444444445,2,3,2
1138,1138,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; return new TYPE_3 ( new TYPE_4 ( VAR_1 . METHOD_3 ( ) ) , STRING_1 , STRING_2 , STRING_3 ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; return new TYPE_3 ( new TYPE_4 ( VAR_1 . METHOD_3 ( ) ) , STRING_1 , STRING_2 ) ; }",['Delete FieldRead'],1353,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1139,1139,"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 , response ) ; return ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 , response ) ; }",['Delete Return'],1354,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1140,1140,"public void METHOD_1 ( ) { node . METHOD_2 ( VAR_1 ) ; VAR_2 . assertEquals ( VAR_3 . state , VAR_1 ) ; }","public void METHOD_1 ( ) { node . METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_3 . state , VAR_1 ) ; }",['Update TypeAccess'],1355,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1141,1141,"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , java.lang.Throwable VAR_4 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , java.lang.Throwable VAR_4 ) { TYPE_2 . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete VariableRead']",1356,"['Delete Literal', 'Delete VariableRead']","['TypeAccess', 'VariableRead']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1142,1142,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_6 ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( VAR_6 ) ; },"['Insert TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall']",1358,"['Delete ConstructorCall', 'Delete TypeReference']","['TypeAccess', 'FieldRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
1143,1143,public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_2 ) ; TYPE_1 . METHOD_4 ( STRING_1 ) ; TYPE_1 . METHOD_5 ( STRING_3 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; TYPE_1 . METHOD_4 ( STRING_1 ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; },"['Update TypeAccess', 'Update TypeAccess']",1359,"['Update Literal', 'Update Literal']","['TypeAccess', 'TypeAccess']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1144,1144,"public TYPE_1 content ( java.lang.String content ) { this . content = TYPE_2 . METHOD_1 ( content , TYPE_3 . METHOD_2 ( ) ) ; return this ; }",public TYPE_1 content ( java.lang.String content ) { this . content = content ; return this ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1360,"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,0.8,0.8,0.8000000000000002,4,1,1
1145,1145,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_2 . init ( ) ; },public void METHOD_1 ( ) { VAR_2 . init ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1361,"['Delete VariableRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation']","['VariableRead', 'Invocation', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1146,1146,public TYPE_1 < ? > METHOD_1 ( final TYPE_1 < ? > VAR_1 ) { return VAR_2 ; },public TYPE_1 < ? > METHOD_1 ( final TYPE_1 < ? > VAR_1 ) { return VAR_1 ; },"['Insert VariableRead', 'Delete FieldRead']",1362,['Update VariableRead'],"['VariableRead', 'FieldRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1147,1147,public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 c ) { super . METHOD_1 ( c ) ; VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_2 ( ) ; },"['Update Parameter', 'Update VariableRead']",1363,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1148,1148,public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) == null ; },public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) != null ; },['Update BinaryOperator'],1364,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1149,1149,"public boolean METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 , int VAR_2 ) { return false ; }","public boolean METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { return false ; }","['Delete TypeReference', 'Delete Parameter']",1365,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1150,1150,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; },['Update ConstructorCall'],1366,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1151,1151,protected float METHOD_1 ( ) { return VAR_1 [ VAR_2 ] ; },public float METHOD_1 ( ) { return VAR_1 [ VAR_2 ] ; },['Update Wra'],1367,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1152,1152,"public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 < TYPE_1 > METHOD_2 ( new TYPE_3 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 ) , new TYPE_7 ( VAR_1 ) ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 < TYPE_1 > METHOD_2 ( new TYPE_3 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 ) ) ; }","['Delete VariableRead', 'Delete ConstructorCall']",1368,"['Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1153,1153,private static long METHOD_1 ( long VAR_1 ) { return 0 ; },private static native long METHOD_1 ( long VAR_1 ) ;,"['Insert Wra', 'Delete Literal', 'Delete Return']",1369,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
1154,1154,"protected void METHOD_1 ( java.io.File file , TYPE_1 VAR_1 ) { METHOD_2 ( file , VAR_1 , false ) ; VAR_2 . put ( file , VAR_1 ) ; VAR_3 . get ( file , VAR_1 , INT_1 , INT_1 , true , true , VAR_4 ) ; }","protected void METHOD_1 ( java.io.File file , TYPE_1 VAR_1 ) { METHOD_2 ( file , VAR_1 ) ; VAR_2 . put ( file , VAR_1 ) ; VAR_3 . get ( file , VAR_1 , INT_1 , INT_1 , true , true , VAR_4 ) ; }",['Delete Literal'],1370,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1155,1155,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . delete ( VAR_2 ) ; METHOD_2 ( ) ; VAR_3 . assertTrue ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . delete ( VAR_2 ) ; METHOD_2 ( null ) ; VAR_3 . assertTrue ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; }",['Insert Literal'],1371,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1156,1156,"public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { if ( VAR_1 == null ) { return null ; } return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , new TYPE_3 ( ) ) ; }","public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , new TYPE_3 ( ) ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1372,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1157,1157,"private void METHOD_1 ( java.lang.Class < ? > VAR_1 ) { VAR_2 . add ( TYPE_1 . METHOD_2 ( ( ( VAR_3 . getName ( ) . replace ( STRING_1 , STRING_2 ) ) + STRING_3 ) ) ) ; }","private void METHOD_1 ( java.lang.Class < ? > VAR_1 ) { VAR_2 . add ( TYPE_1 . METHOD_2 ( ( ( VAR_3 . getName ( ) . replaceAll ( STRING_2 , STRING_2 ) ) + STRING_3 ) ) ) ; }","['Update Invocation', 'Update TypeAccess']",1373,"['Update Invocation', 'Delete Literal']","['Invocation', 'TypeAccess']","['Invocation', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1158,1158,private void METHOD_1 ( ) { this . VAR_1 . execute ( new TYPE_1 < TYPE_2 > ( ) . METHOD_2 ( this ) ) ; },private void METHOD_1 ( ) { this . VAR_1 . execute ( this ) ; },"['Update Invocation', 'Move Invocation', 'Move FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",1374,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation']","['Invocation', 'Invocation', 'FieldRead', 'ConstructorCall', 'Invocation']","['ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation']",Partial Match,0.5,0.5,0.4,0.4444444444444445,2,2,3
1159,1159,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( title ) != null ) && ( VAR_2 . equals ( VAR_1 ) ) ) return ; title = VAR_3 . trim ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( title ) != null ) && ( VAR_2 . equals ( VAR_1 ) ) ) return ; title = VAR_1 ; METHOD_2 ( ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1375,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1160,1160,"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; VAR_3 = data . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; VAR_3 = data . METHOD_2 ( VAR_4 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1376,"['Delete Invocation', 'Delete Invocation']","['TypeAccess', 'Invocation', 'Invocation']","['Invocation', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.6666666666666666,0.8,2,0,1
1161,1161,public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) . get ( 1 ) ; },public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) . get ( 0 ) ; },['Update Literal'],1377,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1162,1162,"public java.lang.String METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( ) . get ( VAR_1 , VAR_2 . METHOD_1 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { TYPE_3 . METHOD_3 ( VAR_4 , STRING_1 , VAR_3 ) ; } return null ; }","public java.lang.String METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( true ) . get ( VAR_1 , VAR_2 . METHOD_1 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { TYPE_3 . METHOD_3 ( VAR_4 , STRING_1 , VAR_3 ) ; } return null ; }",['Insert Literal'],1378,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1163,1163,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( null , true ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },['Delete Literal'],1379,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1164,1164,"void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , long VAR_4 , int VAR_5 ) throws TYPE_1 { if ( ( ( VAR_6 ) ++ ) > 0 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } }","void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int VAR_4 , int VAR_5 ) throws TYPE_1 { if ( ( ( VAR_6 ) ++ ) > 0 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } }",['Update TypeReference'],1381,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1165,1165,"protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this , new TYPE_3 [ ] { VAR_1 } , new TYPE_4 [ ] { VAR_2 } ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this , new TYPE_3 [ ] { VAR_1 } , new TYPE_4 [ ] { VAR_2 } ) ; }",['Update Wra'],1382,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1166,1166,public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . getString ( STRING_1 ) ) ; },protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . getString ( STRING_1 ) ) ; },['Update Wra'],1383,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1167,1167,private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },['Update Wra'],1384,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1168,1168,"public void METHOD_1 ( ) { TYPE_1 id = METHOD_2 ( ""id"" ) ; if ( id != null ) { if ( TYPE_2 . METHOD_3 ( id ) ) { METHOD_4 ( ) ; return ; } } METHOD_5 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 id = METHOD_2 ( ""id"" ) ; if ( id != null ) { if ( TYPE_2 . METHOD_3 ( id ) ) { METHOD_4 ( ) ; } } METHOD_5 ( ) ; }",['Delete Return'],1385,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1169,1169,"public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 , int VAR_3 , int [ ] VAR_4 , int VAR_5 , java.lang.Object [ ] args ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , args , null , false ) ; }","public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 , int VAR_3 , int [ ] VAR_4 , int VAR_5 , java.lang.Object [ ] args ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , args , null ) ; }",['Delete Literal'],1386,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1170,1170,"private boolean METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { if ( VAR_3 . equals ( VAR_2 ) ) { return true ; } else { return false ; } }","private boolean METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { if ( VAR_3 . equals ( VAR_1 ) ) { return true ; } else { return false ; } }",['Update VariableRead'],1388,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1171,1171,protected static boolean METHOD_1 ( ) { TYPE_1 response ; response = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 . toString ( ) ) ; return ! ( VAR_3 . getClass ( ) . equals ( VAR_4 class ) ) ; },private static boolean METHOD_1 ( ) { TYPE_1 response ; response = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 . toString ( ) ) ; return ! ( VAR_3 . getClass ( ) . equals ( VAR_4 class ) ) ; },['Update Wra'],1389,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1172,1172,"public boolean METHOD_1 ( TYPE_1 params ) { TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_1 + params ) ) ; VAR_2 . execute ( params ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 params ) { TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_1 + params ) ) ; VAR_2 . execute ( ) ; return true ; }",['Delete VariableRead'],1390,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1173,1173,"public int METHOD_1 ( ) { java.lang.String str = java.lang.String . METHOD_2 ( ( ( TYPE_1 ) ( VAR_1 ) ) . getText ( ) ) ; METHOD_3 ( str , true ) ; return VAR_2 ; }",public int METHOD_1 ( ) { java.lang.String str = java.lang.String . METHOD_2 ( ( ( TYPE_1 ) ( VAR_1 ) ) . getText ( ) ) ; METHOD_3 ( str ) ; return VAR_2 ; },['Delete Literal'],1392,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1174,1174,"public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= 0 ) && ( VAR_1 < INT_1 ) ) { METHOD_2 ( VAR_2 , VAR_1 ) ; } }","public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) && ( VAR_1 < INT_1 ) ) { METHOD_2 ( VAR_2 , VAR_1 ) ; } }",['Update BinaryOperator'],1393,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1175,1175,public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = METHOD_2 ( name ) ; if ( VAR_1 != null ) return VAR_1 ; throw new TYPE_2 ( ( ( STRING_1 + name ) + STRING_2 ) ) ; },protected TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = METHOD_2 ( name ) ; if ( VAR_1 != null ) return VAR_1 ; throw new TYPE_2 ( ( ( STRING_1 + name ) + STRING_2 ) ) ; },['Update Wra'],1394,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1176,1176,public void METHOD_1 ( TYPE_1 data ) { TYPE_2 . METHOD_2 ( VAR_1 . getContext ( ) ) . METHOD_3 ( data . METHOD_4 ( ) ) . METHOD_5 ( VAR_2 . get ( java.lang.Integer.parseInt ( VAR_3 ) ) ) ; },public void METHOD_1 ( TYPE_1 data ) { TYPE_2 . METHOD_2 ( VAR_1 . getContext ( ) ) . METHOD_3 ( data . METHOD_4 ( ) ) . METHOD_5 ( VAR_2 . get ( index ) ) ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1395,"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Insert VariableRead']","['FieldRead', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'Invocation', 'VariableRead']",Partial Match,0.5,0.5,0.75,0.6,3,3,1
1177,1177,"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_2 , VAR_3 , VAR_4 ) ; }",['Delete VariableRead'],1396,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1178,1178,"TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) ;",TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1397,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1179,1179,"boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) ;","boolean METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",1398,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1180,1180,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_1 ( VAR_1 ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; return TYPE_1 . METHOD_4 ( VAR_3 ) ; } },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_1 ( VAR_1 ) ) ; } catch ( java.lang.Exception VAR_3 ) { return TYPE_1 . METHOD_4 ( VAR_3 ) ; } },"['Delete VariableRead', 'Delete Invocation']",1399,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1181,1181,"public double METHOD_1 ( double a ) { return 1 / ( java.lang.Math.pow ( ( FLOAT_1 + a ) , INT_1 ) ) ; }","private double METHOD_1 ( double a ) { return 1 / ( java.lang.Math.pow ( ( FLOAT_1 + a ) , INT_1 ) ) ; }",['Update Wra'],1400,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1182,1182,"private static boolean METHOD_1 ( ) { return ( ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) || ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) ) & ( TYPE_1 . METHOD_2 ( VAR_4 , VAR_5 ) ) ; }","private static boolean METHOD_1 ( ) { return ( ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) || ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) ) && ( TYPE_1 . METHOD_2 ( VAR_4 , VAR_5 ) ) ; }",['Update BinaryOperator'],1402,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1183,1183,public void METHOD_1 ( TYPE_1 context ) { super . METHOD_1 ( context ) ; context . METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 context ) { super . METHOD_1 ( context ) ; context . METHOD_2 ( new TYPE_2 ( ) ) ; },['Delete FieldRead'],1403,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1184,1184,"java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.lang.Long > VAR_2 , java.lang.String query ) ;","java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.lang.Long > VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1405,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1185,1185,"private TYPE_1 getType ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getName ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ( ( TYPE_4 . METHOD_1 ( ) ) + VAR_2 ) ) ; return new TYPE_1 ( VAR_4 , VAR_4 , this , null ) ; }","private TYPE_1 getType ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getName ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ( ( TYPE_4 . METHOD_1 ( ) ) + VAR_2 ) ) ; return new TYPE_1 ( VAR_4 , VAR_4 ) ; }","['Delete ThisAccess', 'Delete Literal']",1406,"['Delete ThisAccess', 'Delete Literal']","['ThisAccess', 'Literal']","['ThisAccess', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1186,1186,"public static boolean METHOD_1 ( TYPE_1 name , java.lang.String k ) { return TYPE_2 . METHOD_1 ( name , k ) ; }","public static boolean METHOD_1 ( java.lang.String name , java.lang.String k ) { return TYPE_2 . METHOD_1 ( name , k ) ; }",['Update TypeReference'],1407,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1187,1187,public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },['Update TypeAccess'],1408,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1188,1188,public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( false ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },['Delete Literal'],1410,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1189,1189,"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) return null ; return TYPE_3 . METHOD_1 ( VAR_1 , TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getId ( ) ) ) ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_3 . METHOD_1 ( VAR_1 , TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getId ( ) ) ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1411,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1190,1190,"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; }",public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_1 ) ; },['Delete VariableRead'],1413,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1191,1191,"public static void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > args ) { TYPE_2 VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( true ) ; TYPE_3 . METHOD_5 ( VAR_1 , METHOD_6 ( ) , STRING_1 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > args ) { TYPE_2 VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_1 , METHOD_6 ( ) , STRING_1 ) ; }",['Delete Literal'],1414,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1192,1192,"public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( VAR_1 ) , this , VAR_3 ) . execute ( ) ; }","public void METHOD_1 ( ) { new TYPE_1 ( getActivity ( ) , VAR_2 , TYPE_2 . METHOD_2 ( getActivity ( ) ) , this , VAR_3 ) . execute ( ) ; }","['Insert Invocation', 'Insert Invocation', 'Move TypeAccess', 'Insert Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1415,"['Insert Invocation', 'Delete VariableRead', 'Insert Invocation', 'Delete VariableRead']","['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'TypeAccess', 'Invocation']","['Invocation', 'VariableRead', 'Invocation', 'VariableRead']",Partial Match,0.25,0.5,0.2857142857142857,0.36363636363636365,2,2,5
1193,1193,"public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Arrays.asList ( new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Arrays.asList ( new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( ) ) ; }",['Delete ConstructorCall'],1416,"['Delete ConstructorCall', 'Delete TypeReference']",['ConstructorCall'],"['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1194,1194,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_5 , STRING_6 , STRING_7 ) ; }",['Delete TypeAccess'],1417,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1195,1195,private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( METHOD_4 ( ( ( TYPE_3 ) ( VAR_1 ) ) ) ) ; },private TYPE_1 METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ; },"['Update TypeReference', 'Delete TypeReference']",1418,"['Update TypeReference', 'Update Parameter', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'TypeReference']","['TypeReference', 'Parameter', 'TypeReference', 'VariableRead']",GPT Hallucinated Nodes,0.3333333333333333,0.5,1.0,0.6666666666666666,2,2,0
1196,1196,"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_2 . METHOD_2 ( ) ; return new TYPE_3 ( VAR_1 , null , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_2 . METHOD_2 ( ) ; return new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","['Update ConstructorCall', 'Insert VariableRead', 'Delete Literal']",1419,"['Delete Literal', 'Insert VariableRead']","['ConstructorCall', 'VariableRead', 'Literal']","['Literal', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1197,1197,"java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) ;",java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1421,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1198,1198,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; assertEquals ( STRING_2 , VAR_3 , true ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_2 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; assertEquals ( VAR_3 , false ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_2 ) ; }","['Update Literal', 'Delete TypeAccess']",1422,"['Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Insert Literal']","['Literal', 'TypeAccess']","['Literal', 'Literal', 'TypeAccess', 'Literal']",Exact Match,1.0,0.25,0.5,0.3333333333333333,1,3,1
1199,1199,"protected boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { return ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ) < ( ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) ) ; }","private boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { return ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ) < ( ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) ) ; }",['Update Wra'],1423,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1200,1200,"public void METHOD_1 ( TYPE_1 VAR_1 , boolean value ) throws TYPE_2 { if ( value ) { VAR_1 . METHOD_2 ( ) ; } else { VAR_1 . METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean value ) throws TYPE_2 { }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1424,"['Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['VariableRead', 'VariableRead', 'Invocation', 'Block', 'VariableRead', 'Invocation', 'Block', 'If']","['If', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.4,0.42857142857142855,0.375,0.39999999999999997,3,4,5
1201,1201,public void METHOD_1 ( java.lang.String text ) { this . VAR_1 = java.lang.Double . METHOD_2 ( text ) ; },public void METHOD_1 ( java.lang.String text ) { this . VAR_1 = java.lang.Integer . METHOD_2 ( text ) ; },['Update TypeAccess'],1425,['Update TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1202,1202,public boolean METHOD_1 ( ) { return ( this . VAR_1 . size ( ) ) > ( VAR_2 ) ; },public boolean METHOD_1 ( ) { return ( this . VAR_1 . size ( ) ) == ( VAR_2 ) ; },['Update BinaryOperator'],1426,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1203,1203,"public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; break ; case VAR_2 : TYPE_2 . METHOD_3 ( STRING_1 , STRING_3 ) ; break ; } return false ; }","public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; break ; case VAR_2 : TYPE_2 . METHOD_3 ( STRING_1 , STRING_3 ) ; break ; } return true ; }",['Update Literal'],1427,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1204,1204,private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_3 . METHOD_4 ( VAR_2 ) ; },private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( true ) ; return VAR_3 . METHOD_4 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1428,"['Delete Parameter', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'Invocation']","['Parameter', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
1205,1205,"TYPE_1 METHOD_1 ( java.lang.Long id , TYPE_2 VAR_1 ) ;","TYPE_1 METHOD_1 ( java.lang.Long id , java.lang.String token ) ;","['Update Parameter', 'Update TypeReference']",1430,"['Update TypeReference', 'Update Parameter']","['Parameter', 'TypeReference']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1206,1206,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.util.ArrayList < TYPE_2 > > VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = METHOD_3 ( ( VAR_1 + STRING_1 ) ) ; return new TYPE_1 ( VAR_2 , VAR_3 ) ; }","private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.util.ArrayList < TYPE_2 > > VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = METHOD_3 ( ( VAR_1 + STRING_1 ) , 1 , f ) ; return new TYPE_1 ( VAR_2 , VAR_3 ) ; }","['Insert Literal', 'Insert FieldRead']",1431,"['Insert Literal', 'Insert Literal', 'Insert VariableRead']","['Literal', 'FieldRead']","['Literal', 'Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.3333333333333333,0.5,0.4,1,2,1
1207,1207,"public TYPE_1 METHOD_1 ( TYPE_2 c ) { return METHOD_2 ( c , VAR_1 . get ( c ) , true ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 c ) { return METHOD_2 ( c , VAR_1 . get ( c ) ) ; }",['Delete Literal'],1433,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1208,1208,public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) throw new TYPE_1 ( STRING_1 ) ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) throw new TYPE_1 ( STRING_1 ) ; VAR_2 = VAR_1 ; },['Delete ThisAccess'],1434,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1209,1209,"public static double METHOD_1 ( java.util.Date date , boolean VAR_1 ) { java.util.Calendar VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_2 . METHOD_2 ( date ) ; return TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; }","public static double METHOD_1 ( java.util.Date date , boolean VAR_1 ) { java.util.Calendar VAR_2 = new TYPE_1 ( VAR_4 ) ; VAR_2 . METHOD_2 ( date ) ; return TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; }",['Delete FieldRead'],1435,"['Delete VariableRead', 'Delete VariableRead']",['FieldRead'],"['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
1210,1210,public void add ( double x ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_1 ( x ) ; } else { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_1 ( x ) ) ; } VAR_3 += x ; },public void add ( double x ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( x ) ; } else { VAR_2 . METHOD_2 ( new TYPE_1 ( x ) ) ; } VAR_3 += x ; },"['Insert ConstructorCall', 'Insert ConstructorCall', 'Move VariableRead', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1436,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'ConstructorCall', 'VariableRead', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall', 'TypeAccess', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,6,0,2
1211,1211,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 . METHOD_2 ( new TYPE_3 ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) { } ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_3 ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) { } ) ; },"['Delete TypeReference', 'Delete Parameter']",1437,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1212,1212,"protected final TYPE_1 METHOD_1 ( short VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , new TYPE_2 ( ) ) ; }","protected final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , new TYPE_2 ( ) ) ; }",['Update TypeReference'],1438,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1213,1213,"private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . replace ( VAR_3 , STRING_1 ) . replaceAll ( STRING_2 , ""\n"" ) . trim ( ) ; }","private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . replaceAll ( VAR_3 , STRING_1 ) . replaceAll ( STRING_2 , ""\n"" ) . trim ( ) ; }",['Update Invocation'],1440,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1214,1214,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; java.lang.System.exit ( 0 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.exit ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1441,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1215,1215,"public void METHOD_1 ( ) { METHOD_2 ( ) ; boolean VAR_1 = false ; while ( ! VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_1 = METHOD_4 ( VAR_2 ) ; } java.lang.System.out.println ( ( STRING_1 + ""\n"" ) ) ; }",public void METHOD_1 ( ) { METHOD_2 ( ) ; boolean VAR_1 = false ; while ( ! VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_1 = METHOD_4 ( VAR_2 ) ; } java.lang.System.out.println ( STRING_1 ) ; },"['Insert TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",1443,"['Delete BinaryOperator', 'Delete Literal']","['TypeAccess', 'FieldRead', 'Literal', 'BinaryOperator']","['BinaryOperator', 'Literal']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1216,1216,"public static TYPE_1 METHOD_1 ( java.util.List < ? > list , int VAR_1 ) { return TYPE_2 . METHOD_2 ( list , VAR_1 ) . build ( ) ; }",public static TYPE_1 METHOD_1 ( java.util.List < ? > list ) { return TYPE_2 . METHOD_2 ( list ) . build ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1444,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1217,1217,"public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { for ( java.lang.String name : VAR_1 . METHOD_2 ( ) ) { this . METHOD_3 ( name , VAR_1 . METHOD_4 ( ) ) ; } return VAR_2 ; }","public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { for ( java.lang.String name : VAR_1 . METHOD_2 ( ) ) { this . METHOD_3 ( name ) ; } return VAR_2 ; }","['Delete VariableRead', 'Delete Invocation']",1445,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1218,1218,protected TYPE_1 METHOD_1 ( TYPE_2 handle ) { return new TYPE_1 ( handle ) ; },protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > handle ) { return new TYPE_1 ( handle ) ; },['Insert TypeReference'],1446,['Insert TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1219,1219,"private TYPE_1 select ( java.lang.String query ) { return VAR_1 . METHOD_1 ( query , null ) ; }","public TYPE_1 select ( java.lang.String query ) { return VAR_1 . METHOD_1 ( query , null ) ; }",['Update Wra'],1447,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1220,1220,"public boolean METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { return ( VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ) != null ; }","public boolean METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { return ( VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) != null ; }",['Move VariableRead'],1448,"['Update VariableRead', 'Update VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
1221,1221,public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( ) . toString ( ) ; },public java.lang.String METHOD_1 ( ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( ) . toString ( ) ; },"['Delete TypeReference', 'Delete Parameter']",1449,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1222,1222,public long METHOD_1 ( ) { return VAR_1 ; },public long METHOD_1 ( ) { return this . VAR_1 ; },['Insert ThisAccess'],1451,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1223,1223,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( context ) ; assertEquals ( new java.util.ArrayList < java.lang.String > ( ) , VAR_1 . METHOD_2 ( null ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( context ) ; assertEquals ( null , VAR_1 . METHOD_2 ( null ) ) ; }","['Insert Literal', 'Delete ConstructorCall']",1452,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference']","['Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference']",Partial Match,0.3333333333333333,0.3333333333333333,0.5,0.4,1,2,1
1224,1224,public boolean METHOD_1 ( TYPE_1 event ) { if ( ! ( METHOD_2 ( ) ) ) return false ; return true ; },public void METHOD_1 ( TYPE_1 event ) { if ( ! ( METHOD_2 ( ) ) ) return ; },"['Update TypeReference', 'Delete Literal', 'Delete Literal', 'Delete Return']",1453,"['Update TypeReference', 'Update Return', 'Delete Literal', 'Delete Return']","['TypeReference', 'Literal', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal', 'Return']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
1225,1225,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 msg ; msg = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . put ( msg , null ) ; VAR_5 . put ( VAR_6 , null ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 msg ; msg = new TYPE_2 ( VAR_2 , VAR_3 ) ; VAR_5 . put ( msg , null ) ; VAR_5 . put ( VAR_6 , null ) ; }",['Delete FieldRead'],1454,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1226,1226,public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } if ( ( VAR_1 . METHOD_4 ( ) ) == null ) { METHOD_5 ( false ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } if ( ( VAR_1 . METHOD_4 ( ) ) == null ) { METHOD_5 ( ) ; } },['Delete Literal'],1455,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1227,1227,"public double [ ] [ ] METHOD_1 ( double VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 , TYPE_1 type ) { return METHOD_2 ( VAR_1 , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , type ) ; }","public double [ ] [ ] METHOD_1 ( double VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 , TYPE_1 type ) { return METHOD_2 ( VAR_1 , VAR_1 , 0 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , type ) ; }",['Insert Literal'],1456,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1228,1228,public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . execute ( STRING_1 ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . execute ( ) ; },['Delete TypeAccess'],1457,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1229,1229,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 result = TYPE_3 . METHOD_2 ( ) ; result . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) . METHOD_7 ( VAR_2 . getType ( ) ) ; return result ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 result = TYPE_3 . METHOD_2 ( ) ; result . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) . METHOD_7 ( VAR_2 . getType ( ) ) ; return result ; },['Update Invocation'],1458,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1230,1230,"public TYPE_1 get ( java.lang.String VAR_1 ) throws java.io.IOException { return get ( VAR_1 , null , null ) ; }","public TYPE_1 get ( java.lang.String VAR_1 ) throws java.io.IOException { return get ( VAR_1 , null ) ; }",['Delete Literal'],1459,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1231,1231,private java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + STRING_1 ) + ( ( TYPE_1 . METHOD_3 ( ) ) / INT_1 ) ; },private java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + STRING_1 ) + ( ( TYPE_1 . METHOD_3 ( ) ) % INT_1 ) ; },['Update BinaryOperator'],1460,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1232,1232,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( INT_3 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( 0 ) ; VAR_1 . METHOD_5 ( INT_3 ) ; },"['Insert Literal', 'Delete TypeAccess']",1461,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1233,1233,"public native void open ( int VAR_1 , int VAR_2 ) ;","private native void open ( int VAR_1 , int VAR_2 ) ;",['Update Wra'],1462,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1234,1234,"int METHOD_1 ( java.lang.Long id , java.lang.Integer VAR_1 , java.lang.Long VAR_2 , TYPE_1 VAR_3 , java.lang.String VAR_4 , java.lang.String source , java.lang.String VAR_5 ) ;","int METHOD_1 ( java.lang.Long id , java.lang.Integer VAR_1 , TYPE_1 VAR_3 , java.lang.String VAR_4 , java.lang.String source , java.lang.String VAR_5 ) ;","['Delete TypeReference', 'Delete Parameter']",1463,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1235,1235,public void METHOD_1 ( TYPE_1 event ) { event . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete VariableRead', 'Delete Invocation']",1464,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1236,1236,public final boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; },public final boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1465,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1237,1237,public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_4 . get ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_4 . get ( VAR_1 ) ; },['Update TypeAccess'],1467,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1238,1238,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1469,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1239,1239,private void METHOD_1 ( ) { TYPE_1 VAR_1 ; for ( TYPE_2 c : VAR_2 . METHOD_2 ( ) ) { VAR_1 = ( ( TYPE_1 ) ( c ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } },private void METHOD_1 ( ) { TYPE_1 VAR_1 ; for ( TYPE_2 c : VAR_2 . METHOD_2 ( ) ) { VAR_1 = ( ( TYPE_1 ) ( c ) ) ; VAR_1 . METHOD_3 ( ) ; } },"['Delete VariableRead', 'Delete Invocation']",1470,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1240,1240,"public void METHOD_1 ( java.lang.String name , java.lang.String value ) { VAR_1 . put ( new TYPE_1 ( name ) , value ) ; }","public void METHOD_1 ( java.lang.String name , java.lang.String value ) { VAR_1 . put ( name , value ) ; }","['Move VariableRead', 'Delete ConstructorCall']",1472,['Delete ConstructorCall'],"['VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1241,1241,public void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 . toString ( VAR_3 ) ) ; },private void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 . toString ( VAR_3 ) ) ; },['Update Wra'],1473,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1242,1242,"private void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; }","private void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 + 1 ; METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",1474,"['Insert Literal', 'Insert BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1243,1243,"public void METHOD_1 ( double [ ] [ ] VAR_1 , int VAR_2 ) { VAR_3 . set ( VAR_2 , VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( double [ ] [ ] VAR_1 , int index ) { VAR_3 . set ( index , VAR_1 . METHOD_2 ( ) ) ; }","['Update Parameter', 'Update VariableRead']",1475,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1244,1244,public static java.lang.String METHOD_1 ( java.lang.String id ) { return TYPE_1 . METHOD_2 ( id ) . METHOD_3 ( ) ; },public static java.lang.String METHOD_1 ( java.lang.String id ) { if ( id == null ) { return null ; } return TYPE_1 . METHOD_2 ( id ) . METHOD_3 ( ) ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert Literal']",1476,"['Insert If', 'Insert VariableRead', 'Insert Literal', 'Insert BinaryOperator', 'Insert Return', 'Insert Literal']","['If', 'BinaryOperator', 'Block', 'VariableRead', 'Literal', 'Return', 'Literal']","['If', 'VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Literal']",GPT Missed Nodes,0.8333333333333334,1.0,0.8571428571428571,0.923076923076923,6,0,1
1245,1245,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String text ) { return new TYPE_1 ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( new TYPE_2 ( VAR_2 . String , text ) ) ; }","private TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String text ) { return new TYPE_1 ( ) . METHOD_2 ( name ) . METHOD_3 ( new TYPE_2 ( VAR_2 . String , text ) ) ; }","['Update Parameter', 'Update VariableRead']",1477,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1246,1246,private static synchronized TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_1 ( VAR_1 ) ; return VAR_3 ; },public static synchronized TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_1 ( VAR_1 ) ; return VAR_3 ; },['Update Wra'],1478,"['Delete Wra', 'Insert Wra']",['Wra'],"['Wra', 'Wra']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
1247,1247,"public static java.util.List < java.lang.Object > METHOD_1 ( java.lang.String VAR_1 , java.lang.String ... args ) { return TYPE_1 . METHOD_1 ( false , VAR_1 , args ) ; }","public static java.util.List < java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( false , VAR_1 ) ; }","['Delete Parameter', 'Delete VariableRead']",1480,"['Delete Parameter', 'Delete VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1248,1248,"public boolean contains ( TYPE_1 p ) { if ( p == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } return ( this . METHOD_1 ( p , true ) ) != null ; }",public boolean contains ( TYPE_1 p ) { if ( p == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } return ( this . METHOD_1 ( p ) ) != null ; },['Delete Literal'],1481,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1249,1249,"private void METHOD_1 ( ) { TYPE_1 TYPE_2 = new TYPE_3 ( this , VAR_1 ) ; METHOD_2 ( TYPE_2 ) ; TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( STRING_1 ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( null ) ; }","private void METHOD_1 ( ) { TYPE_1 TYPE_2 = new TYPE_3 ( this , VAR_1 ) ; METHOD_2 ( TYPE_2 ) ; METHOD_4 ( STRING_1 ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( null ) ; }","['Delete VariableRead', 'Delete Invocation']",1482,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1250,1250,"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( ""name"" ) ; VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ; VAR_3 . i ( STRING_2 , ( STRING_3 + VAR_1 ) ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( ""name"" ) ; VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ; java.lang.System.out.println ( VAR_1 ) ; }","['Update Invocation', 'Insert FieldRead', 'Move VariableRead', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete BinaryOperator']",1483,"['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation']","['Invocation', 'FieldRead', 'VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'FieldRead', 'BinaryOperator']","['TypeAccess', 'FieldRead', 'Invocation', 'TypeAccess', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.6,0.6666666666666666,0.5,0.5714285714285715,4,2,4
1251,1251,"public void METHOD_1 ( final TYPE_1 view , final int VAR_1 , final int VAR_2 ) { METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( final TYPE_1 view , final int VAR_1 , final int VAR_2 ) { METHOD_2 ( ) ; }",['Delete TypeAccess'],1484,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1252,1252,"public void METHOD_1 ( TYPE_1 field ) { this . VAR_1 . put ( ( ( ( VAR_2 . getName ( ) ) + STRING_1 ) + ( VAR_2 . getType ( ) ) ) , field ) ; }",public void METHOD_1 ( TYPE_1 field ) { this . VAR_1 . add ( field ) ; },"['Update Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",1485,"['Update Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator']","['Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'BinaryOperator', 'TypeAccess', 'Invocation', 'BinaryOperator']","['Invocation', 'Invocation', 'FieldRead', 'Literal', 'Invocation', 'BinaryOperator', 'FieldRead', 'Invocation', 'BinaryOperator']",Partial Match,0.6,0.6666666666666666,0.75,0.7058823529411765,6,3,2
1253,1253,"public TYPE_1 METHOD_1 ( java.lang.String str ) { if ( str == null ) throw new java.lang.NullPointerException ( ) ; return new TYPE_2 ( TYPE_3 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( str ) ) , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String str ) { if ( str == null ) throw new java.lang.NullPointerException ( ) ; return new TYPE_2 ( TYPE_3 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( str ) ) , VAR_3 ) ; }",['Delete FieldRead'],1487,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1254,1254,public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) ; },"['Update Invocation', 'Move Invocation', 'Update Invocation', 'Delete VariableRead', 'Delete Invocation']",1488,"['Delete Invocation', 'Delete FieldRead']","['Invocation', 'Invocation', 'Invocation', 'VariableRead', 'Invocation']","['Invocation', 'FieldRead']",Partial Match,0.3333333333333333,0.5,0.2,0.28571428571428575,1,1,4
1255,1255,"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 = new TYPE_3 ( new TYPE_4 ( ) , VAR_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 = new TYPE_3 ( VAR_1 ) ; },['Delete ConstructorCall'],1489,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1256,1256,"public int METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { int VAR_2 = VAR_3 . update ( STRING_1 , VAR_1 ) ; return VAR_2 ; }","public int METHOD_1 ( java.lang.String id ) throws TYPE_2 { int VAR_2 = VAR_3 . update ( STRING_1 , id ) ; return VAR_2 ; }","['Update Parameter', 'Update TypeReference', 'Update VariableRead']",1490,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['TypeReference', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1257,1257,"public static void main ( java.lang.String [ ] args ) { int VAR_1 = INT_1 ; int VAR_2 = 0 ; java.lang.System.out.println ( TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ) ; }","public static void main ( java.lang.String [ ] args ) { int VAR_1 = INT_1 ; int VAR_2 = 1 ; java.lang.System.out.println ( TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ) ; }",['Update Literal'],1491,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1258,1258,private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( int time ) { VAR_2 . METHOD_1 ( time ) ; },"['Update Parameter', 'Update TypeReference', 'Update VariableRead']",1493,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['TypeReference', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1259,1259,public java.lang.String [ ] METHOD_1 ( ) { final java.lang.String [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_3 . length ) > 0 ) ) return VAR_1 ; return null ; },public java.lang.String [ ] METHOD_1 ( ) { final java.lang.String [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_3 . length ) > 0 ) ) return VAR_1 ; return VAR_1 ; },"['Insert VariableRead', 'Delete Literal']",1494,['Update Return'],"['VariableRead', 'Literal']",['Return'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1260,1260,"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > list , java.lang.String VAR_2 , java.lang.String VAR_3 , boolean VAR_4 ) ;","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > list , java.lang.String VAR_2 , java.lang.String VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",1496,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1261,1261,public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( ) ; if ( VAR_1 == null ) { return ; } METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1497,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
1262,1262,public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },['Update TypeAccess'],1498,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1263,1263,"public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . put ( VAR_3 . getId ( ) , VAR_1 ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }","public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . put ( VAR_3 . getName ( ) , VAR_1 ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }",['Update Invocation'],1499,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1264,1264,"public void METHOD_1 ( java.lang.CharSequence title , TYPE_1 VAR_1 ) { if ( title != null ) { VAR_2 . setText ( title , VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; } else { VAR_3 . METHOD_2 ( VAR_5 ) ; } }","public void METHOD_1 ( java.lang.CharSequence title , TYPE_1 VAR_1 ) { if ( title != null ) { VAR_2 . setText ( title ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; } else { VAR_3 . METHOD_2 ( VAR_5 ) ; } }",['Delete VariableRead'],1500,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1265,1265,public void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) ) { int i = VAR_3 . METHOD_3 ( VAR_4 . state ) ; VAR_2 . METHOD_4 ( ( i + 1 ) ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) ) { int i = VAR_3 . METHOD_3 ( VAR_4 . state ) ; VAR_2 . METHOD_4 ( i ) ; } },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1501,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1266,1266,java.util.Collection < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },java.util.Collection < TYPE_1 > METHOD_1 ( ) { return this . VAR_1 ; },['Insert ThisAccess'],1502,"['Insert ThisAccess', 'Insert FieldRead', 'Delete VariableRead']",['ThisAccess'],"['ThisAccess', 'FieldRead', 'VariableRead']",GPT Hallucinated Nodes,0.3333333333333333,0.3333333333333333,1.0,0.5,1,2,0
1267,1267,"void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) ;",void METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1503,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1268,1268,"private TYPE_1 METHOD_1 ( final TYPE_2 event ) { return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( event . METHOD_4 ( ) ) ) ; }","private TYPE_1 METHOD_1 ( final TYPE_2 event ) { return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( event ) ) ; }","['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Update Invocation', 'Delete Invocation']",1504,['Delete Invocation'],"['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.16666666666666666,0.2857142857142857,1,0,5
1269,1269,public void METHOD_1 ( int position ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . get ( position ) ; TYPE_2 VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_5 . show ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( int position ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . get ( position ) ; TYPE_2 VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_5 . show ( VAR_1 ) ; VAR_5 . commit ( ) ; },"['Update Invocation', 'Insert TypeAccess', 'Delete VariableRead']",1505,"['Delete VariableRead', 'Delete Invocation', 'Insert VariableRead', 'Insert Invocation']","['Invocation', 'TypeAccess', 'VariableRead']","['VariableRead', 'Invocation', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.25,0.3333333333333333,0.28571428571428575,1,3,2
1270,1270,"public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) throws TYPE_2 { try { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_3 VAR_4 ) { throw ( ( TYPE_2 ) ( VAR_4 . METHOD_2 ( ) ) ) ; } }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) throws TYPE_2 { try { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_2 ( VAR_4 ) ; } }","['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeReference', 'Delete Invocation']",1506,"['Insert ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead']","['ConstructorCall', 'VariableRead', 'TypeReference', 'Invocation']","['ConstructorCall', 'TypeReference', 'Invocation', 'FieldRead']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
1271,1271,"protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { return new TYPE_5 < TYPE_1 > ( VAR_3 , VAR_1 , VAR_2 ) ; }","protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 VAR_1 , TYPE_1 VAR_3 ) { return new TYPE_5 < TYPE_1 > ( VAR_3 , VAR_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1507,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1272,1272,"java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 , java.lang.Long VAR_2 ) ;",java.util.List < TYPE_1 > METHOD_1 ( java.util.Date VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1509,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1273,1273,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String message , java.lang.String VAR_3 ) throws TYPE_1 ;","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String message ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",1511,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1274,1274,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { TYPE_2 VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; return VAR_4 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { TYPE_2 VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; return VAR_4 ; }",['Insert VariableRead'],1513,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1275,1275,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( index ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( getName ) ; },['Update FieldRead'],1514,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1276,1276,"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation']",1515,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1277,1277,"public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 , true ) ; }",public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },['Delete Literal'],1516,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1278,1278,private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( ) ; },['Update Wra'],1517,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1279,1279,public int METHOD_1 ( int VAR_1 ) { int VAR_2 = ( ( VAR_3 ) - VAR_1 ) - INT_1 ; if ( VAR_2 < 0 ) { return 0 ; } return VAR_2 ; },public int METHOD_1 ( int VAR_1 ) { int VAR_2 = ( ( VAR_3 ) - VAR_1 ) + INT_1 ; if ( VAR_2 < 0 ) { return 0 ; } return VAR_2 ; },['Update BinaryOperator'],1518,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1280,1280,"private void METHOD_1 ( java.lang.String token ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) , token ) ; }","private void METHOD_1 ( java.lang.String token ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) , token ) ; }","['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Update Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1519,"['Delete TypeAccess', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.2857142857142857,0.4444444444444445,2,0,5
1281,1281,public TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; return VAR_1 ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Return']",1520,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1282,1282,"int METHOD_1 ( java.lang.Long id , TYPE_1 VAR_1 , java.lang.Integer VAR_2 , java.lang.Long VAR_3 , java.lang.String source , java.lang.String VAR_4 ) ;","int METHOD_1 ( java.lang.Long id , TYPE_1 VAR_1 , java.lang.Integer VAR_2 , java.lang.String source , java.lang.String VAR_4 ) ;","['Delete TypeReference', 'Delete Parameter']",1521,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1283,1283,public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ; },public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) && ( METHOD_2 ( ) ) ) && ( METHOD_4 ( ) ) ; },['Update Invocation'],1522,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1284,1284,"public TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , error ) } ; }","public TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { new TYPE_2 ( VAR_2 , VAR_3 , error ) } ; }",['Delete FieldRead'],1523,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1285,1285,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 . assertEquals ( STRING_1 , 1 , VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; assertEquals ( STRING_1 , 1 , VAR_1 . METHOD_3 ( ) ) ; }",['Update TypeAccess'],1524,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1286,1286,public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 . remove ( VAR_2 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 . remove ( position ) ; METHOD_3 ( ) ; },"['Insert FieldRead', 'Delete TypeAccess']",1525,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1287,1287,"public void METHOD_1 ( TYPE_1 state , java.lang.Class < ? extends TYPE_2 > VAR_1 ) { state . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 state , int id , java.lang.Class < ? extends TYPE_2 > VAR_1 ) { state . METHOD_2 ( id , VAR_1 ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead']",1526,"['Insert Parameter', 'Insert VariableRead', 'Update Invocation']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'VariableRead', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1288,1288,"public TYPE_1 METHOD_1 ( java.lang.String field , java.lang.Object ... values ) { return METHOD_2 ( false , field , VAR_1 , values ) ; }","public TYPE_1 METHOD_1 ( java.lang.String field , java.lang.Object ... values ) { return METHOD_1 ( field , VAR_1 , values ) ; }","['Update Invocation', 'Delete Literal']",1527,"['Delete Literal', 'Update Invocation']","['Invocation', 'Literal']","['Literal', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1289,1289,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.List < java.lang.String > VAR_2 , int VAR_3 , java.lang.String VAR_4 , int VAR_5 ) ;","TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.List < java.lang.String > VAR_2 , int VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1528,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1290,1290,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( null , null , STRING_1 , VAR_3 ) ; VAR_4 . show ( METHOD_3 ( ) , STRING_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( null , java.util.Calendar.getInstance ( ) , STRING_1 , VAR_3 ) ; VAR_4 . show ( METHOD_3 ( ) , STRING_2 ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Delete Literal']",1529,"['Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeAccess', 'Literal']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1291,1291,public java.util.ArrayList METHOD_1 ( ) { return VAR_1 ; },private java.util.ArrayList METHOD_1 ( ) { return VAR_1 ; },['Update Wra'],1530,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1292,1292,"public void execute ( TYPE_1 VAR_1 , TYPE_2 file ) throws java.lang.Exception { METHOD_1 ( VAR_1 , file , VAR_2 ) ; }","public void execute ( TYPE_1 VAR_1 , TYPE_2 file ) throws java.lang.Exception { METHOD_1 ( VAR_1 , file ) ; }",['Delete TypeAccess'],1531,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1293,1293,"public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_3 . assertNotNull ( VAR_1 ) ; }","public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; assertNotNull ( VAR_1 ) ; }",['Update TypeAccess'],1532,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1294,1294,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { try { return new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_4 VAR_2 ) { throw TYPE_2 . METHOD_3 ( VAR_2 ) ; } },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { try { return new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) ; } catch ( java.lang.Throwable VAR_2 ) { throw TYPE_2 . METHOD_3 ( VAR_2 ) ; } },['Update TypeReference'],1533,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1295,1295,"public void METHOD_1 ( int i , int j , int time ) ;","public void METHOD_1 ( int i , int j ) ;","['Delete TypeReference', 'Delete Parameter']",1534,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1296,1296,"private void METHOD_1 ( long size ) { VAR_1 . info ( STRING_1 , size ) ; VAR_2 . METHOD_2 ( VAR_3 , null , 0 , size , false , false , false ) ; }","public void METHOD_1 ( long size ) { VAR_1 . info ( STRING_1 , size ) ; VAR_2 . METHOD_2 ( VAR_3 , null , 0 , size , false , false ) ; }","['Update Wra', 'Delete Literal']",1535,"['Update Wra', 'Delete Literal']","['Wra', 'Literal']","['Wra', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1297,1297,"private static void METHOD_1 ( long VAR_1 , long source , int VAR_2 , int VAR_3 , long VAR_4 , long VAR_5 , long VAR_6 ) { }","private static native void METHOD_1 ( long VAR_1 , long source , int VAR_2 , int VAR_3 , long VAR_4 , long VAR_5 , long VAR_6 ) ;",['Insert Wra'],1536,"['Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1298,1298,"private boolean METHOD_1 ( final java.lang.Object VAR_1 , final java.lang.Object VAR_2 ) { if ( ( VAR_1 == null ) || ( VAR_2 == null ) ) { return false ; } return VAR_3 . equals ( VAR_4 . getClass ( ) ) ; }","private boolean METHOD_1 ( final java.lang.Object VAR_1 , final java.lang.Object VAR_2 ) { if ( ( VAR_1 == null ) || ( VAR_2 == null ) ) { return false ; } return VAR_3 . equals ( VAR_4 . getClass ( ) . getName ( ) ) ; }","['Insert Invocation', 'Move Invocation']",1537,['Insert Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
1299,1299,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; },['Update TypeAccess'],1538,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1300,1300,public static void main ( java.lang.String [ ] arg ) { int n = INT_1 ; int size = INT_2 ; TYPE_1 VAR_1 = new TYPE_1 ( size ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( n ) . size ( ) ) ; },public static void main ( java.lang.String [ ] arg ) { int n = INT_1 ; int size = INT_2 ; TYPE_1 VAR_1 = new TYPE_1 ( size ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( n ) . toString ( ) ) ; },['Update Invocation'],1539,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1301,1301,"private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = VAR_2 ; while ( VAR_3 != null ) { if ( VAR_4 . equals ( VAR_3 ) ) { return true ; } VAR_3 = VAR_3 . METHOD_2 ( ) ; } return false ; }","private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = VAR_2 ; while ( VAR_3 != null ) { if ( VAR_4 . equals ( VAR_3 ) ) { return true ; } VAR_3 = VAR_2 . METHOD_2 ( ) ; } return false ; }",['Update VariableRead'],1540,['Update FieldRead'],['VariableRead'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1302,1302,"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 . setText ( ( ( ( VAR_3 . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_3 . METHOD_3 ( ) ) ) ) ; return true ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { return true ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",1543,"['Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']","['TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'BinaryOperator', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Invocation']","['FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'FieldRead', 'Invocation', 'BinaryOperator', 'Assignment']",GPT Hallucinated Nodes,0.6666666666666666,0.7,0.7777777777777778,0.7368421052631577,7,3,2
1303,1303,public int METHOD_1 ( TYPE_1 t ) { return VAR_1 . METHOD_1 ( t ) ; },public synchronized int METHOD_1 ( TYPE_1 t ) { return VAR_1 . METHOD_1 ( t ) ; },['Insert Wra'],1544,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1304,1304,"public static int METHOD_1 ( int i , int j ) { return i - j ; }","public static int METHOD_1 ( int i , int j ) { return i + j ; }",['Update BinaryOperator'],1545,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1305,1305,"private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String msg , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( VAR_1 , t , msg ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String msg , java.lang.Throwable t ) { VAR_2 . METHOD_2 ( VAR_1 , msg , t ) ; }",['Move VariableRead'],1547,['Update Invocation'],['VariableRead'],['Invocation'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1306,1306,public java.awt.Font METHOD_1 ( ) { return this . VAR_1 ; },public java.awt.Font METHOD_1 ( ) { return VAR_1 ; },['Delete ThisAccess'],1549,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1307,1307,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update Invocation'],1550,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1308,1308,private void METHOD_1 ( android.content.Context context ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( context ) ; try { VAR_2 = new TYPE_2 < TYPE_3 > ( VAR_1 . METHOD_3 ( ) ) ; } catch ( TYPE_4 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } },private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { VAR_2 = new TYPE_2 < TYPE_3 > ( VAR_1 . METHOD_3 ( ) ) ; } catch ( TYPE_4 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1552,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1309,1309,"public static java.lang.Object [ ] METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , 0 ) ; }","public static java.lang.Object [ ] METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , 1 ) ; }",['Update Literal'],1553,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1310,1310,public java.awt.Color METHOD_1 ( ) { return VAR_1 ; },public java.awt.Color METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",1555,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1311,1311,"public synchronized void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String name ) { new TYPE_1 ( VAR_1 , VAR_2 , name , VAR_3 ) ; }","public synchronized void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String name ) { new TYPE_1 ( VAR_1 , VAR_2 , name , this ) ; }","['Update ConstructorCall', 'Insert ThisAccess', 'Delete FieldRead']",1556,"['Delete VariableRead', 'Insert ThisAccess']","['ConstructorCall', 'ThisAccess', 'FieldRead']","['VariableRead', 'ThisAccess']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
1312,1312,void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },void METHOD_1 ( java.lang.String name ) { this . VAR_1 = name ; },"['Update Parameter', 'Update VariableRead']",1557,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1313,1313,public static TYPE_1 METHOD_1 ( java.lang.String key ) { return VAR_1 . remove ( key ) ; },static TYPE_1 METHOD_1 ( java.lang.String key ) { return VAR_1 . remove ( key ) ; },['Delete Wra'],1558,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1314,1314,"public void METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , TYPE_3 . METHOD_4 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ) ; }","public void METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , TYPE_3 . METHOD_4 ( STRING_1 , STRING_2 , STRING_3 ) ) ; }",['Delete TypeAccess'],1559,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1315,1315,"public void METHOD_1 ( int b ) { this . VAR_1 . put ( STRING_1 , b ) ; }","public void METHOD_1 ( int b ) { this . VAR_1 . replace ( STRING_1 , b ) ; }",['Update Invocation'],1560,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1316,1316,"private void error ( TYPE_1 VAR_1 , byte VAR_2 ) { VAR_1 . METHOD_1 ( ) . put ( VAR_2 ) ; try { VAR_1 . METHOD_2 ( 1 ) ; } catch ( java.io.IOException VAR_3 ) { } METHOD_3 ( VAR_1 ) ; }","private void error ( TYPE_1 VAR_1 , byte VAR_2 ) { VAR_1 . METHOD_1 ( ) . put ( VAR_2 ) ; try { VAR_1 . METHOD_2 ( 1 ) ; } catch ( java.io.IOException VAR_3 ) { } METHOD_3 ( VAR_1 , null ) ; }",['Insert Literal'],1561,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1317,1317,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( ( VAR_4 ) == null ) { VAR_5 = false ; VAR_6 . METHOD_5 ( false ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( ( VAR_4 ) == null ) { VAR_5 = false ; VAR_6 . METHOD_5 ( VAR_5 ) ; } },"['Insert TypeAccess', 'Delete Literal']",1562,"['Delete Literal', 'Insert VariableRead']","['TypeAccess', 'Literal']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1318,1318,"public void METHOD_1 ( ) throws java.lang.Exception { long VAR_1 = METHOD_2 ( VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) . execute ( ) ; org.testng.Assert.assertEquals ( VAR_4 . size ( ) , 1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { long VAR_1 = METHOD_2 ( VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) . execute ( ) ; assertEquals ( VAR_4 . size ( ) , 1 ) ; }",['Delete FieldRead'],1563,"['Delete TypeAccess', 'Delete FieldRead']",['FieldRead'],"['TypeAccess', 'FieldRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1319,1319,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( this . VAR_2 , 1 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( this . VAR_2 , 0 , VAR_1 ) ; }",['Update Literal'],1564,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1320,1320,public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . METHOD_2 ( ) ; return ; } ( this . VAR_2 ) -- ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . METHOD_2 ( ) ; } ( this . VAR_2 ) -- ; this . VAR_1 . METHOD_3 ( this . VAR_2 ) ; },['Delete Return'],1565,['Delete Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1321,1321,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { t . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_2 . METHOD_3 ( ) ; }","['Delete VariableRead', 'Delete Invocation']",1566,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1322,1322,"public static TYPE_1 METHOD_1 ( final java.lang.String name , final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_1 ( name , VAR_3 , VAR_1 , false , VAR_2 ) ; }","public static TYPE_1 METHOD_1 ( final java.lang.String name , final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_1 ( name , VAR_1 , false , VAR_2 ) ; }",['Delete TypeAccess'],1567,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1323,1323,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . getValue ( VAR_5 class ) ; VAR_6 . add ( VAR_3 ) ; VAR_7 = new TYPE_3 ( VAR_8 , VAR_9 ) ; VAR_10 . METHOD_2 ( VAR_7 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . getValue ( VAR_5 class ) ; VAR_6 . add ( VAR_3 ) ; VAR_7 = new TYPE_3 ( getActivity ( ) , VAR_9 ) ; VAR_10 . METHOD_2 ( VAR_7 ) ; }","['Insert Invocation', 'Delete FieldRead']",1568,"['Insert Invocation', 'Delete VariableRead']","['Invocation', 'FieldRead']","['Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1324,1324,"public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long id ) { METHOD_2 ( ( ( TYPE_2 ) ( VAR_4 . METHOD_3 ( VAR_3 ) ) ) , VAR_3 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long id ) { METHOD_2 ( ( ( TYPE_2 ) ( VAR_4 . METHOD_3 ( VAR_3 ) ) ) , ( VAR_3 - 1 ) ) ; return true ; }","['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",1569,"['Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal']","['BinaryOperator', 'VariableRead', 'Literal']","['BinaryOperator', 'VariableRead', 'Literal']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1325,1325,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; VAR_2 . assertNotNull ( VAR_1 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; VAR_2 . assertNotNull ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation']",1570,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1326,1326,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { t . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { t . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1573,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1327,1327,public void METHOD_1 ( java.lang.String error ) { listener . METHOD_2 ( error ) ; },public void METHOD_1 ( java.lang.String error ) { },"['Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1574,"['Delete FieldRead', 'Delete Invocation', 'Delete VariableRead']","['FieldRead', 'VariableRead', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1328,1328,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , boolean VAR_6 , java.lang.String VAR_7 ) ;","public TYPE_1 METHOD_1 ( TYPE_3 VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , boolean VAR_6 , java.lang.String VAR_7 ) ;","['Delete TypeReference', 'Delete Parameter']",1576,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1329,1329,"private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.String output = VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; output = output + ( METHOD_2 ( VAR_4 ) ) ; return output ; }","private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.String output = VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; output = output + ( METHOD_2 ( ) ) ; return output ; }",['Delete TypeAccess'],1577,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1330,1330,"public void add ( TYPE_1 VAR_1 ) { add ( VAR_1 , 0 , VAR_2 ) ; }","public void add ( TYPE_1 VAR_1 ) { add ( VAR_1 , 0 ) ; }",['Delete TypeAccess'],1580,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1331,1331,"public static TYPE_1 METHOD_1 ( int value , boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . setValue ( value ) ; VAR_2 . METHOD_2 ( 0 ) ; return TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 ) ; }",public static TYPE_1 METHOD_1 ( int value ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . setValue ( value ) ; VAR_2 . METHOD_2 ( 0 ) ; return TYPE_2 . METHOD_1 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1582,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1332,1332,public boolean isEmpty ( ) { return ( size ( ) ) <= 0 ; },public boolean isEmpty ( ) { return ( size ( ) ) < 0 ; },['Update BinaryOperator'],1583,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1333,1333,"public TYPE_1 value ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_1 . METHOD_1 ( ) ; return new TYPE_4 ( ( VAR_2 == null ? null : VAR_3 . getValue ( ) ) , VAR_1 . METHOD_2 ( ) ) ; }",public TYPE_1 value ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_1 . METHOD_1 ( ) ; return new TYPE_4 ( ( VAR_2 == null ? null : VAR_3 . getValue ( ) ) ) ; },"['Delete VariableRead', 'Delete Invocation']",1584,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1334,1334,"public TYPE_1 put ( TYPE_2 key , TYPE_1 VAR_1 ) { return ! ( VAR_2 . contains ( key ) ) ? super . put ( key , VAR_1 ) : VAR_1 ; }","public TYPE_1 put ( TYPE_2 key , TYPE_1 value ) { return ! ( VAR_2 . contains ( key ) ) ? super . put ( key , value ) : value ; }","['Update Parameter', 'Update VariableRead', 'Update VariableRead']",1586,"['Update Parameter', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1335,1335,"public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) VAR_1 . METHOD_2 ( VAR_3 , null ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_1 != null ) VAR_1 . METHOD_2 ( VAR_3 , null ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Insert VariableRead', 'Delete FieldRead']",1587,"['Delete FieldRead', 'Insert VariableRead']","['VariableRead', 'FieldRead']","['FieldRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1336,1336,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( METHOD_2 ( ) ) { return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { return METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( METHOD_2 ( ) ) { return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { return METHOD_3 ( VAR_1 , VAR_2 ) ; } }",['Delete VariableRead'],1588,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1337,1337,"boolean METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 ;","boolean METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",1589,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1338,1338,private boolean METHOD_1 ( java.lang.String filePath ) { if ( filePath == null ) { return false ; } java.io.File f = new java.io.File ( filePath ) ; return ( f . METHOD_2 ( ) ) && ( ! ( f . METHOD_3 ( ) ) ) ; },private boolean METHOD_1 ( java.lang.String filePath ) { java.io.File f = new java.io.File ( filePath ) ; return ( f . METHOD_2 ( ) ) && ( ! ( f . METHOD_3 ( ) ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1590,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
1339,1339,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation']",1591,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1340,1340,"public void METHOD_1 ( ) { assertThat ( VAR_1 . METHOD_2 ( ) , not ( null ) ) ; }","public java.lang.String METHOD_1 ( ) { assertThat ( VAR_1 . METHOD_2 ( ) , not ( null ) ) ; }",['Update TypeReference'],1593,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1341,1341,"public void METHOD_1 ( int type , int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( type , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int type , int VAR_1 ) { VAR_3 . METHOD_2 ( type , VAR_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1594,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1342,1342,private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_2 . show ( 0 ) ; } },private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_2 . show ( ) ; } },['Delete Literal'],1595,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1343,1343,"protected abstract TYPE_1 METHOD_1 ( long VAR_1 , long to , java.util.List < TYPE_2 > VAR_2 ) ;","protected abstract TYPE_1 METHOD_1 ( long VAR_1 , java.util.List < TYPE_2 > VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1596,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1344,1344,"public void METHOD_1 ( TYPE_1 target , float VAR_1 ) { float VAR_2 = INT_1 ; VAR_3 . METHOD_2 ( VAR_4 , this , target , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 target , float VAR_1 ) { float VAR_2 = 1 ; VAR_3 . METHOD_2 ( VAR_4 , this , target , VAR_1 , VAR_2 ) ; }","['Insert Literal', 'Delete FieldRead']",1597,"['Delete TypeReference', 'Delete TypeAccess', 'Insert Literal']","['Literal', 'FieldRead']","['TypeReference', 'TypeAccess', 'Literal']",Partial Match,0.25,0.3333333333333333,0.5,0.4,1,2,1
1345,1345,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_1 . METHOD_3 ( 0 ) ; METHOD_4 ( 0 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_1 . METHOD_3 ( 0 ) ; METHOD_4 ( 1 ) ; },['Update Literal'],1599,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1346,1346,"private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) ; if ( VAR_2 != null ) { METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) ; if ( VAR_2 != null ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } }","['Update Wra', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1601,"['Update Wra', 'Delete Invocation']","['Wra', 'VariableRead', 'VariableRead', 'Invocation']","['Wra', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.5,0.6666666666666666,2,0,2
1347,1347,"public final void METHOD_1 ( ) { VAR_1 . assertEquals ( java.util.Arrays.asList ( INT_1 , INT_2 , INT_3 ) , TYPE_1 . METHOD_2 ( STRING_1 ) ) ; }","public final void METHOD_1 ( ) { VAR_1 . assertEquals ( java.util.Arrays.asList ( INT_3 ) , TYPE_1 . METHOD_2 ( STRING_1 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",1602,"['Delete Literal', 'Delete Literal']","['TypeAccess', 'TypeAccess']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1348,1348,protected void init ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this ) ; METHOD_1 ( VAR_2 ) ; },protected void init ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; METHOD_1 ( VAR_2 ) ; },"['Update ConstructorCall', 'Delete ThisAccess']",1603,['Delete ThisAccess'],"['ConstructorCall', 'ThisAccess']",['ThisAccess'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1349,1349,private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_1 ; },['Update Wra'],1604,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1350,1350,"public static TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 , new java.util.ArrayList < > ( ) ) ) ; }",public static TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; },['Delete ConstructorCall'],1605,"['Delete ConstructorCall', 'Delete TypeReference']",['ConstructorCall'],"['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1351,1351,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1607,['Delete Invocation'],"['TypeAccess', 'VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1352,1352,void METHOD_1 ( boolean show ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1609,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1353,1353,private boolean METHOD_1 ( final int x ) { return ( ( VAR_1 ) <= x ) && ( x <= ( VAR_2 ) ) ; },private boolean METHOD_1 ( final int x ) { return ( ( VAR_1 ) <= x ) && ( x < ( VAR_2 ) ) ; },['Update BinaryOperator'],1610,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1354,1354,public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_3 ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1611,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1355,1355,"public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_3 [ VAR_4 ] ) - ( VAR_5 [ VAR_6 ] ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_3 [ VAR_4 ] ) - ( VAR_3 [ VAR_4 ] ) ; }","['Update FieldRead', 'Update FieldRead']",1613,"['Update VariableRead', 'Update VariableRead']","['FieldRead', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1356,1356,"private void METHOD_1 ( ) { for ( java.util.Map.Entry < TYPE_1 , java.awt.Color > VAR_1 : VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; }","public void METHOD_1 ( ) { for ( java.util.Map.Entry < TYPE_1 , java.awt.Color > VAR_1 : VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; }",['Update Wra'],1614,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1357,1357,"public void METHOD_1 ( ) { assertEquals ( VAR_1 . METHOD_2 ( ) . size ( ) , INT_1 ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_1 . METHOD_2 ( ) . size ( ) , 1 ) ; }","['Insert Literal', 'Delete TypeAccess']",1615,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1358,1358,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 VAR_2 : this ) { TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; VAR_1 = VAR_1 . METHOD_2 ( VAR_3 ) ; } return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 VAR_2 : this ) { TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; VAR_1 = VAR_1 . METHOD_2 ( VAR_3 ) ; } return VAR_1 ; },['Update Wra'],1616,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1359,1359,"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { return ! ( ( this . VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ) == null ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { return ! ( ( VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ) == null ) ; }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1617,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1360,1360,"private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { names = new TYPE_2 < java.lang.String , TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . put ( VAR_4 . getName ( ) , VAR_2 ) ; } }","private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { names = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . put ( VAR_4 . getName ( ) , VAR_2 ) ; } }",['Update ConstructorCall'],1618,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1361,1361,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } else { METHOD_3 ( ) ; METHOD_4 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },"['Delete Invocation', 'Delete Invocation', 'Delete Block']",1619,"['Delete Block', 'Delete Invocation', 'Delete Invocation']","['Invocation', 'Invocation', 'Block']","['Block', 'Invocation', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1362,1362,public void METHOD_1 ( java.util.ArrayList list ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { java.lang.System.out.println ( VAR_1 . get ( i ) . toString ( ) ) ; } return ; },public void METHOD_1 ( java.util.ArrayList list ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { java.lang.System.out.println ( VAR_1 . toString ( ) ) ; } return ; },"['Update Invocation', 'Move Invocation', 'Move FieldRead', 'Update Invocation', 'Delete VariableRead', 'Delete Invocation']",1621,"['Delete Invocation', 'Delete VariableRead']","['Invocation', 'Invocation', 'FieldRead', 'Invocation', 'VariableRead', 'Invocation']","['Invocation', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.3333333333333333,0.5,2,0,4
1363,1363,public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1622,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1364,1364,"private void METHOD_1 ( TYPE_1 VAR_1 , final java.lang.String VAR_2 , final TYPE_2 VAR_3 , final TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 VAR_3 , final java.lang.String VAR_2 , final TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; }","['Move Parameter', 'Move VariableRead']",1624,"['Move Parameter', 'Move Parameter', 'Move VariableRead', 'Move VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.5,1.0,0.6666666666666666,2,2,0
1365,1365,public boolean METHOD_1 ( java.lang.String name ) { if ( name == null ) { return false ; } TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( name ) ; return this . remove ( VAR_2 . name ( ) ) ; },public boolean METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( name ) ; return this . remove ( VAR_2 . name ( ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1626,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1366,1366,public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = ! VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = ! VAR_1 ; },['Delete ThisAccess'],1627,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1367,1367,"public void METHOD_1 ( TYPE_1 listener ) { METHOD_2 ( ) ; VAR_1 . add ( new TYPE_2 < TYPE_1 > ( listener , VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 listener ) { METHOD_2 ( ) ; VAR_1 . add ( new TYPE_2 < TYPE_1 > ( listener , VAR_2 , true ) ) ; }",['Insert Literal'],1628,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1368,1368,"public boolean METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_2 , true ) ; return true ; }","public boolean METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_2 , true ) ; return false ; }",['Update Literal'],1629,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1369,1369,"void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = TYPE_2 . METHOD_2 ( this , METHOD_3 ( context , VAR_1 , VAR_2 , VAR_3 ) ) ; VAR_4 . METHOD_1 ( ) ; }","void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = TYPE_2 . METHOD_2 ( this , METHOD_3 ( context , VAR_1 , VAR_2 , VAR_3 ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",1630,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1370,1370,public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Update VariableRead', 'Insert ThisAccess']",1631,"['Update Parameter', 'Insert ThisAccess', 'Update VariableRead']","['Parameter', 'VariableRead', 'ThisAccess']","['Parameter', 'ThisAccess', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1371,1371,"public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 += VAR_1 + ""\n"" ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 += VAR_1 ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1632,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1372,1372,private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 . start ( ) ; VAR_3 = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 . start ( ) ; VAR_3 = new TYPE_2 ( VAR_3 . METHOD_2 ( ) ) ; },['Update TypeAccess'],1633,['Update FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1373,1373,"public void METHOD_1 ( TYPE_1 position , TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( this . field , position , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 position , TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( field , position , VAR_1 ) ; }",['Delete ThisAccess'],1634,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1374,1374,"private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return VAR_1 == null ? null : new TYPE_4 ( VAR_1 , VAR_2 ) ; }",private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 == null ? null : new TYPE_4 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1635,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1375,1375,"private static java.lang.String METHOD_1 ( java.lang.String url ) throws TYPE_1 , java.io.IOException { return VAR_1 . getString ( new java.io.BufferedReader ( new TYPE_2 ( TYPE_3 . METHOD_2 ( url ) , STRING_1 ) ) ) ; }","private static java.lang.String METHOD_1 ( java.lang.String url ) throws TYPE_1 , java.io.IOException { return VAR_1 . getString ( new java.io.BufferedReader ( new TYPE_2 ( TYPE_3 . METHOD_2 ( url ) ) ) ) ; }",['Delete FieldRead'],1636,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1376,1376,"public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.io.BufferedWriter writer = new java.io.BufferedWriter ( new TYPE_2 ( VAR_2 . out ) ) ; TYPE_3 . METHOD_2 ( writer , VAR_1 ) ; writer . METHOD_3 ( ) ; writer . METHOD_4 ( ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.io.BufferedWriter writer = new java.io.BufferedWriter ( new TYPE_2 ( VAR_2 . out ) ) ; TYPE_3 . METHOD_2 ( writer , VAR_1 ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1637,"['Delete Invocation', 'Delete Invocation']","['VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['Invocation', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1377,1377,public boolean METHOD_1 ( ) { return ( VAR_1 ) > INT_1 ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) <= INT_1 ; },['Update BinaryOperator'],1638,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1378,1378,public java.lang.String METHOD_1 ( ) { return STRING_1 + ( STRING_2 + STRING_3 ) ; },public java.lang.String METHOD_1 ( ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Return']",1639,"['Delete Return', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead']","['FieldRead', 'FieldRead', 'FieldRead', 'BinaryOperator', 'BinaryOperator', 'Return']","['Return', 'BinaryOperator', 'VariableRead', 'BinaryOperator', 'VariableRead', 'VariableRead']",Partial Match,0.5,0.5,0.5,0.5,3,3,3
1379,1379,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_2 , VAR_2 ) , VAR_2 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( STRING_2 , VAR_2 ) , VAR_2 ) ; }",['Insert VariableRead'],1640,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1380,1380,"public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],1642,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1381,1381,private long add ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . add ( VAR_1 ) ; } return VAR_4 . METHOD_1 ( VAR_1 ) ; },public long add ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . add ( VAR_1 ) ; } return VAR_4 . METHOD_1 ( VAR_1 ) ; },['Update Wra'],1643,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1382,1382,"private void METHOD_1 ( double a , double b ) { VAR_1 = a + b ; VAR_2 = b - ( ( VAR_1 ) - a ) ; }","private void METHOD_1 ( double a , double b ) { VAR_1 = a + b ; VAR_2 = b - ( ( VAR_2 ) - a ) ; }",['Update FieldRead'],1646,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1383,1383,public final boolean isEmpty ( ) { return ( count ) == 0 ; },public boolean isEmpty ( ) { return ( first ) == null ; },"['Update FieldRead', 'Update Literal', 'Delete Wra']",1647,"['Delete Wra', 'Update VariableRead', 'Update Literal']","['FieldRead', 'Literal', 'Wra']","['Wra', 'VariableRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1384,1384,"private void METHOD_1 ( java.lang.String name ) { if ( ! ( VAR_1 . METHOD_1 ( name , STRING_1 ) ) ) { java.lang.System.out.println ( STRING_2 ) ; } }",private void METHOD_1 ( java.lang.String name ) { if ( ! ( VAR_1 . METHOD_1 ( name ) ) ) { java.lang.System.out.println ( STRING_2 ) ; } },['Delete TypeAccess'],1648,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1385,1385,public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; return STRING_3 ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; return STRING_3 ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1650,['Delete Invocation'],"['VariableRead', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1386,1386,"public void append ( TYPE_1 VAR_1 ) { TYPE_2 node = new TYPE_2 ( VAR_1 , this . VAR_2 ) ; VAR_3 = this ; VAR_4 = this . VAR_5 ; if ( ( VAR_5 ) != null ) VAR_6 = node ; this . VAR_5 = node ; }",public void append ( TYPE_1 VAR_1 ) { TYPE_2 node = new TYPE_2 ( VAR_1 ) ; VAR_3 = this ; VAR_4 = this . VAR_5 ; if ( ( VAR_5 ) != null ) VAR_6 = node ; this . VAR_5 = node ; },"['Delete ThisAccess', 'Delete FieldRead']",1652,"['Delete ThisAccess', 'Delete FieldRead']","['ThisAccess', 'FieldRead']","['ThisAccess', 'FieldRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1387,1387,public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",1653,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1388,1388,"public void METHOD_1 ( ) { TYPE_1 VAR_1 ; VAR_1 = VAR_2 . get ( 0 ) ; VAR_3 . METHOD_2 ( this , VAR_1 ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 ; VAR_1 = VAR_2 . get ( 0 ) ; VAR_3 . METHOD_2 ( this , VAR_1 ) ; }","['Insert Parameter', 'Insert TypeReference']",1655,['Insert Parameter'],"['Parameter', 'TypeReference']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1389,1389,public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) . getString ( STRING_1 ) ; if ( TYPE_1 . METHOD_3 ( VAR_1 ) ) { return VAR_2 . getString ( STRING_2 ) ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) . getString ( STRING_1 ) ; if ( TYPE_1 . METHOD_3 ( VAR_1 ) ) { return VAR_2 . getString ( STRING_2 ) ; } return null ; },"['Insert Literal', 'Delete VariableRead']",1656,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1390,1390,public synchronized void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },private synchronized void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },['Update Wra'],1657,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1391,1391,private int [ ] [ ] [ ] METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 ; },public int [ ] [ ] [ ] METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 ; },['Update Wra'],1658,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1392,1392,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( 0 ) ; VAR_5 = VAR_3 ; VAR_6 = - 1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( 0 ) ; VAR_5 = VAR_3 ; VAR_6 = - 1 ; },['Insert ThisAccess'],1659,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1393,1393,"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_4 , STRING_1 ) ; VAR_5 . METHOD_3 ( ) ; return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_4 , STRING_1 ) ; return false ; }","['Delete TypeAccess', 'Delete Invocation']",1660,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1394,1394,public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( STRING_1 + ( VAR_2 ) ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( STRING_1 + ( VAR_2 ) ) ) ; },['Insert ThisAccess'],1661,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1395,1395,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_2 ( INT_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_2 ) ; VAR_2 . METHOD_2 ( INT_1 ) ; },"['Move TypeAccess', 'Move TypeAccess']",1662,"['Update Literal', 'Update Literal']","['TypeAccess', 'TypeAccess']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1396,1396,public void METHOD_1 ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) { java.lang.System.out.print ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; } },public void METHOD_1 ( int n ) { for ( int i = 1 ; i < n ; i ++ ) { java.lang.System.out.print ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; } },['Update BinaryOperator'],1663,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1397,1397,public void METHOD_1 ( ) throws TYPE_1 { java.lang.String [ ] args = new java.lang.String [ 0 ] ; VAR_1 . main = new TYPE_2 ( VAR_2 ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { java.lang.String [ ] args = new java.lang.String [ 0 ] ; VAR_1 . main = new TYPE_2 ( args ) ; VAR_3 . start ( ) ; },"['Update ConstructorCall', 'Insert VariableRead', 'Delete FieldRead']",1664,['Update VariableRead'],"['ConstructorCall', 'VariableRead', 'FieldRead']",['VariableRead'],GPT Missed Nodes,0.3333333333333333,0.0,0.0,0.0,0,1,3
1398,1398,public final void METHOD_1 ( final double add ) { this . x += add ; },public void METHOD_1 ( final double x ) { this . x += x ; },"['Update Parameter', 'Update VariableRead', 'Delete Wra']",1665,"['Delete Wra', 'Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead', 'Wra']","['Wra', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1399,1399,private void METHOD_1 ( ) { source . METHOD_2 ( ) ; while ( METHOD_3 ( source . METHOD_4 ( ) ) ) { source . METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { source . METHOD_2 ( ) ; while ( METHOD_3 ( source . METHOD_4 ( ) ) ) { source . METHOD_2 ( ) ; } },['Update Wra'],1666,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1400,1400,"private TYPE_1 METHOD_1 ( java.io.File file , int VAR_1 , int VAR_2 ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( file , VAR_1 , VAR_2 , VAR_3 ) ) ; }","private TYPE_1 METHOD_1 ( java.io.File file , int VAR_2 ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( file , VAR_2 ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete TypeAccess']",1667,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead', 'TypeAccess']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.5,0.5,0.5,2,2,2
1401,1401,"private void METHOD_1 ( java.lang.String key , java.util.Set < TYPE_1 > VAR_1 ) { java.util.Set < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 : : toString ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( key , VAR_2 ) . METHOD_5 ( ) ; }","private void METHOD_1 ( java.lang.String key , java.util.Set < TYPE_1 > VAR_1 ) { java.util.Set < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 : : toString ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( key , VAR_2 ) . commit ( ) ; }",['Update Invocation'],1668,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1402,1402,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 ) { return new TYPE_1 ( VAR_1 , VAR_2 , new TYPE_6 ( this , new TYPE_7 ( ) ) , VAR_3 , VAR_4 ) ; }","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , new TYPE_6 ( this , new TYPE_7 ( ) ) , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1669,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1403,1403,"public java.util.Map < java.lang.Integer , java.lang.Object > METHOD_1 ( ) { return ( VAR_1 ) == null ? new java.util.HashMap < java.lang.Integer , java.lang.Object > ( ) : VAR_1 . METHOD_1 ( ) ; }","public java.util.Map < java.lang.Integer , java.lang.Object > METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . METHOD_1 ( ) ; }","['Insert Literal', 'Delete ConstructorCall']",1670,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.5,1.0,0.6666666666666666,2,2,0
1404,1404,private void METHOD_1 ( TYPE_1 event ) throws java.io.IOException { ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 event ) throws java.io.IOException { ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; },['Update Wra'],1671,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1405,1405,public boolean METHOD_1 ( ) { return ( value ) != null ; },public boolean METHOD_1 ( ) { return ( value ) == null ; },['Update BinaryOperator'],1672,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1406,1406,public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { VAR_2 . METHOD_1 ( VAR_1 ) ; },"public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { VAR_2 . METHOD_1 ( VAR_1 , 0 ) ; }",['Insert Literal'],1673,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1407,1407,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 1 , ( 1 + ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; VAR_1 . METHOD_5 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , ( 1 + ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; VAR_1 . METHOD_5 ( ) ; }",['Update Literal'],1674,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1408,1408,public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_4 ( ) ; },['Delete Invocation'],1675,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1409,1409,"public void METHOD_1 ( ) { assertEquals ( INT_1 , ( ( long ) ( METHOD_2 ( b . METHOD_1 ( INT_1 ) ) ) ) ) ; }","public void METHOD_1 ( ) { assertEquals ( INT_1 , METHOD_2 ( b . METHOD_1 ( INT_1 ) ) ) ; }",['Delete TypeReference'],1676,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']",['TypeReference'],"['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,0.125,1.0,0.2222222222222222,1,7,0
1410,1410,"public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( final java.lang.Class < TYPE_1 > VAR_1 , java.lang.String VAR_2 , java.lang.String id , java.lang.String VAR_3 ) throws java.lang.Exception { return null ; }","public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( final java.lang.Class < TYPE_1 > VAR_1 , java.lang.String id , java.lang.String VAR_3 ) throws java.lang.Exception { return null ; }","['Delete TypeReference', 'Delete Parameter']",1677,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1411,1411,"private boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case INT_1 : return METHOD_2 ( VAR_3 , 1 ) ; case INT_2 : return METHOD_2 ( VAR_3 , INT_1 ) ; } return true ; }","private boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case 1 : return METHOD_2 ( VAR_3 , INT_2 ) ; case INT_1 : return METHOD_2 ( VAR_3 , INT_1 ) ; } return true ; }","['Move Literal', 'Move FieldRead', 'Insert TypeAccess', 'Delete FieldRead']",1678,"['Update Literal', 'Update Literal']","['Literal', 'FieldRead', 'TypeAccess', 'FieldRead']","['Literal', 'Literal']",GPT Missed Nodes,0.3333333333333333,0.0,0.0,0.0,0,2,4
1412,1412,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 . add ( 0 , VAR_2 . remove ( VAR_3 ) ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( null ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 . add ( 0 , VAR_2 . remove ( VAR_3 ) ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1679,"['Delete Invocation', 'Delete FieldRead', 'Delete Literal']","['TypeAccess', 'Literal', 'Invocation']","['Invocation', 'FieldRead', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1413,1413,private boolean METHOD_1 ( ) { for ( TYPE_1 [ ] VAR_1 : VAR_2 ) { for ( TYPE_1 b : VAR_1 ) { if ( b . METHOD_2 ( ) ) return true ; } } return false ; },public boolean METHOD_1 ( ) { for ( TYPE_1 [ ] VAR_1 : VAR_2 ) { for ( TYPE_1 b : VAR_1 ) { if ( b . METHOD_2 ( ) ) return true ; } } return false ; },['Update Wra'],1680,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1414,1414,public static void METHOD_1 ( double VAR_1 ) { final double VAR_2 = FLOAT_1 ; double VAR_3 ; VAR_3 = VAR_1 / VAR_2 ; java.lang.System.out.println ( ( STRING_1 + VAR_3 ) ) ; },public static void METHOD_1 ( double VAR_1 ) { final double VAR_2 = FLOAT_1 ; double VAR_3 ; VAR_3 = VAR_1 * VAR_2 ; java.lang.System.out.println ( ( STRING_1 + VAR_3 ) ) ; },['Update BinaryOperator'],1681,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1415,1415,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( index , VAR_1 . toString ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( index , text ) ; }","['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1683,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['FieldRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1416,1416,public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 / INT_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",1684,"['Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1417,1417,public java.lang.String METHOD_1 ( java.lang.Long id ) { TYPE_1 VAR_1 = METHOD_2 ( id ) ; if ( VAR_1 != null ) { VAR_2 . remove ( VAR_1 ) ; return STRING_1 ; } else { return STRING_2 ; } },public java.lang.String METHOD_1 ( java.lang.Long id ) { TYPE_1 VAR_1 = METHOD_2 ( new java.lang.Long ( id ) ) ; if ( VAR_1 != null ) { VAR_2 . remove ( VAR_1 ) ; return STRING_1 ; } else { return STRING_2 ; } },"['Insert ConstructorCall', 'Move VariableRead']",1685,['Insert ConstructorCall'],"['ConstructorCall', 'VariableRead']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1418,1418,"public static void METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { VAR_3 . METHOD_3 ( ( STRING_1 + VAR_1 ) , VAR_2 ) ; } }","public static void METHOD_1 ( java.lang.String id , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { VAR_3 . METHOD_3 ( ( STRING_1 + id ) , VAR_2 ) ; } }","['Update Parameter', 'Update VariableRead']",1686,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1419,1419,"public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 item : VAR_2 ) { VAR_3 . METHOD_2 ( item , 1 , true ) ; VAR_4 . METHOD_3 ( item , 1 , false , true ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 item : VAR_2 ) { VAR_3 . METHOD_2 ( item , 1 ) ; VAR_4 . METHOD_3 ( item , 1 , false ) ; } }","['Delete Literal', 'Delete Literal']",1687,"['Delete Literal', 'Delete Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1420,1420,"public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String message ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_1 , message ) ; } }","protected void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String message ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_1 , message ) ; } }",['Update Wra'],1688,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1421,1421,"public void METHOD_1 ( boolean VAR_1 , int index ) { VAR_2 [ ( INT_1 - index ) ] = VAR_1 ; }","public void METHOD_1 ( boolean VAR_1 , int index ) { VAR_2 [ index ] = VAR_1 ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",1690,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
1422,1422,"public boolean METHOD_1 ( int x , int y ) { return ( ( ( x > ( VAR_1 ) ) && ( x < ( VAR_2 ) ) ) && ( y > ( VAR_3 ) ) ) && ( y < ( VAR_4 ) ) ; }","private boolean METHOD_1 ( int x , int y ) { return ( ( ( x > ( VAR_1 ) ) && ( x < ( VAR_2 ) ) ) && ( y > ( VAR_3 ) ) ) && ( y < ( VAR_4 ) ) ; }",['Update Wra'],1691,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1423,1423,"public void METHOD_1 ( int VAR_1 , boolean VAR_2 ) { if ( ! ( VAR_3 ) ) { VAR_4 = new java.util.Date ( ) . getTime ( ) ; } VAR_5 = VAR_1 ; }",public void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_3 ) ) { VAR_4 = new java.util.Date ( ) . getTime ( ) ; } VAR_5 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter']",1692,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1424,1424,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View VAR_3 = VAR_4 . METHOD_2 ( VAR_5 , VAR_1 , false ) ; TYPE_1 VAR_6 = new TYPE_1 ( VAR_3 ) ; return VAR_6 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View VAR_3 = VAR_4 . METHOD_2 ( VAR_5 , null ) ; TYPE_1 VAR_6 = new TYPE_1 ( VAR_3 ) ; return VAR_6 ; }","['Update Literal', 'Delete VariableRead']",1694,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
1425,1425,"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_2 . setText ( VAR_3 [ ( position % INT_1 ) ] ) ; VAR_1 . METHOD_2 ( position ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { VAR_2 . setText ( VAR_3 [ ( position % INT_1 ) ] ) ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",1696,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
1426,1426,private boolean METHOD_1 ( double x ) { return ( VAR_1 . METHOD_2 ( ) ) <= x ; },private boolean METHOD_1 ( double x ) { return ( VAR_1 . METHOD_2 ( ) ) < x ; },['Update BinaryOperator'],1697,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1427,1427,"private void METHOD_1 ( long id ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( ( VAR_4 ) + STRING_1 ) , new java.lang.String [ ] { java.lang.String . METHOD_3 ( id ) } ) ; }","public void METHOD_1 ( long id ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( ( VAR_4 ) + STRING_1 ) , new java.lang.String [ ] { java.lang.String . METHOD_3 ( id ) } ) ; }",['Update Wra'],1698,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1428,1428,public void METHOD_1 ( ) { VAR_1 . assertTrue ( VAR_2 . isEmpty ( STRING_1 ) ) ; },public void METHOD_1 ( ) { assertTrue ( VAR_2 . isEmpty ( STRING_1 ) ) ; },['Update TypeAccess'],1699,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1429,1429,"public TYPE_1 METHOD_1 ( TYPE_2 [ ] args ) { return METHOD_2 ( args , VAR_1 , false ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 [ ] args ) { return METHOD_2 ( args , VAR_1 , false , true ) ; }",['Insert Literal'],1700,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1430,1430,void METHOD_1 ( android.content.Context VAR_1 ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1701,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1431,1431,"public void METHOD_1 ( java.lang.String data , TYPE_1 VAR_1 , java.lang.String time , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_3 , data ) ) ; }","public void METHOD_1 ( java.lang.String data , TYPE_1 VAR_1 , java.lang.String time , TYPE_2 VAR_2 ) { java.lang.System.out.println ( data ) ; VAR_2 . METHOD_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_3 , data ) ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",1702,"['Insert TypeAccess', 'Insert FieldRead', 'Insert FieldRead', 'Insert Invocation', 'Insert VariableRead']","['Invocation', 'FieldRead', 'VariableRead', 'TypeAccess']","['TypeAccess', 'FieldRead', 'FieldRead', 'Invocation', 'VariableRead']",Exact Match,1.0,0.8,1.0,0.888888888888889,4,1,0
1432,1432,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) ; return VAR_2 ; }",public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; return VAR_2 ; },"['Update Parameter', 'Update TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1703,"['Update Parameter', 'Delete Invocation']","['Parameter', 'TypeReference', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation']","['Parameter', 'Invocation']",GPT Missed Nodes,0.4,1.0,0.3333333333333333,0.5,2,0,4
1433,1433,"public boolean METHOD_1 ( java.io.File VAR_1 , java.lang.String name ) { return VAR_2 . contains ( ( VAR_3 + STRING_1 ) ) ; }","public boolean METHOD_1 ( java.io.File VAR_1 , java.lang.String name ) { return VAR_2 . contains ( VAR_3 ) ; }","['Insert TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",1704,"['Delete BinaryOperator', 'Delete Literal']","['TypeAccess', 'FieldRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'Literal']",Partial Match,0.25,0.5,0.25,0.3333333333333333,1,1,3
1434,1434,public void start ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; } },public void start ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; } },['Update BinaryOperator'],1705,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1435,1435,"public void count ( ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 , ( ( VAR_3 . getInt ( VAR_2 , 0 ) ) + 1 ) ) . METHOD_3 ( ) ; }","public void count ( ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 , ( ( VAR_3 . getInt ( VAR_2 , 0 ) ) + 1 ) ) . commit ( ) ; }",['Update Invocation'],1706,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1436,1436,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String status ) throws TYPE_2 ;",public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException ;,"['Update TypeReference', 'Delete TypeReference', 'Delete Parameter']",1707,"['Delete Parameter', 'Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference', 'TypeReference']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1437,1437,TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ;,METHOD_1 ( TYPE_2 VAR_1 ) { },['Delete TypeReference'],1708,"['Delete TypeReference', 'Delete TypeReference', 'Insert Block']",['TypeReference'],"['TypeReference', 'TypeReference', 'Block']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
1438,1438,"public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { return new TYPE_4 ( this , id , args ) ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( int id , TYPE_3 args ) { return new TYPE_4 ( this , id , args , null ) ; }",['Insert Literal'],1709,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1439,1439,"private int METHOD_1 ( int index , int length ) { if ( index < 0 ) { return index + length ; } if ( index > ( length - 1 ) ) { return index % length ; } return index ; }","private int METHOD_1 ( int index , int length ) { if ( index > ( length - 1 ) ) { return index % length ; } return index ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1711,"['Delete If', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'VariableRead', 'BinaryOperator', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'Literal', 'Return', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.5555555555555556,0.7142857142857143,5,0,4
1440,1440,"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( ) ; if ( VAR_2 . equals ( VAR_3 ) ) { METHOD_3 ( context ) ; } }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( ) ; if ( VAR_2 . equals ( VAR_3 ) ) { METHOD_3 ( ) ; } }",['Delete VariableRead'],1712,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1441,1441,"public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( null , null , null ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( null , null ) ; }",['Delete Literal'],1714,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1442,1442,"private int METHOD_1 ( java.lang.String title ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ ] { STRING_1 , STRING_2 } ; return TYPE_1 . METHOD_2 ( VAR_2 , title , STRING_3 , VAR_3 , VAR_4 , null , VAR_1 , VAR_1 [ 0 ] ) ; }","public int METHOD_1 ( java.lang.String title ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ ] { STRING_1 , STRING_2 } ; return TYPE_1 . METHOD_2 ( VAR_2 , title , STRING_3 , VAR_3 , VAR_4 , null , VAR_1 , VAR_1 [ 0 ] ) ; }",['Update Wra'],1715,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1443,1443,private TYPE_1 METHOD_1 ( java.lang.Integer position ) { return this . VAR_1 . get ( position ) ; },public TYPE_1 METHOD_1 ( java.lang.Integer position ) { return this . VAR_1 . get ( position ) ; },['Update Wra'],1717,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1444,1444,public boolean contains ( java.lang.Object VAR_1 ) { if ( ( VAR_1 == null ) || ( ! ( VAR_1 instanceof java.lang.String ) ) ) return false ; return VAR_2 . contains ( ( ( java.lang.String ) ( VAR_1 ) ) . toLowerCase ( ) ) ; },public boolean contains ( java.lang.Object VAR_1 ) { if ( ( VAR_1 == null ) && ( ! ( VAR_1 instanceof java.lang.String ) ) ) return false ; return VAR_2 . contains ( ( ( java.lang.String ) ( VAR_1 ) ) . toLowerCase ( ) ) ; },['Update BinaryOperator'],1718,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1445,1445,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Class < TYPE_1 > VAR_2 ) throws TYPE_2 ;","TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Object data , java.lang.Class < TYPE_1 > VAR_2 ) throws TYPE_2 ;","['Insert Parameter', 'Insert TypeReference']",1719,['Insert Parameter'],"['Parameter', 'TypeReference']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1446,1446,"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 writer ) throws TYPE_3 { boolean VAR_2 = false ; VAR_2 = VAR_2 | ( METHOD_2 ( VAR_2 , VAR_1 , writer ) ) ; if ( VAR_2 ) { writer . METHOD_3 ( ) ; } }","void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 writer ) throws TYPE_3 { boolean VAR_2 = false ; VAR_2 = VAR_2 & ( METHOD_2 ( VAR_2 , VAR_1 , writer ) ) ; if ( VAR_2 ) { writer . METHOD_3 ( ) ; } }",['Update BinaryOperator'],1721,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1447,1447,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",1722,"['Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall', 'Invocation']","['FieldRead', 'Invocation', 'ConstructorCall', 'TypeReference']",Partial Match,0.4,0.5,0.6666666666666666,0.5714285714285715,2,2,1
1448,1448,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , boolean VAR_4 ) { VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; this . METHOD_2 ( VAR_1 , VAR_2 ) ; return this . METHOD_1 ( VAR_3 , VAR_4 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , boolean VAR_4 ) { VAR_2 . METHOD_2 ( ) ; this . METHOD_2 ( VAR_1 , VAR_2 ) ; return this . METHOD_1 ( VAR_3 , VAR_4 ) ; }","['Delete VariableRead', 'Delete Invocation']",1723,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1449,1449,"public static boolean METHOD_1 ( java.lang.Class VAR_1 ) { return ( TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 ) , null ) ) != null ; }",public static boolean METHOD_1 ( java.lang.Class VAR_1 ) { return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) != null ; },"['Move Literal', 'Move VariableRead', 'Delete ConstructorCall', 'Delete Literal']",1724,['Delete ConstructorCall'],"['Literal', 'VariableRead', 'ConstructorCall', 'Literal']",['ConstructorCall'],GPT Missed Nodes,0.3333333333333333,1.0,0.25,0.4,1,0,3
1450,1450,public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; return null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Update TypeReference', 'Delete Literal', 'Delete Return']",1725,"['Update TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1451,1451,public java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + STRING_1 ) + ( METHOD_3 ( ) ) ; },public java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + STRING_1 ) + ( getTime ( ) ) ; },['Update Invocation'],1727,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1452,1452,"protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , ( ( float ) ( FLOAT_1 ) ) , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; return VAR_1 ; }","protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , ( ( float ) ( FLOAT_1 ) ) , STRING_3 , STRING_4 , STRING_5 ) ; return VAR_1 ; }",['Delete FieldRead'],1729,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1453,1453,"public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_1 , VAR_3 ) . METHOD_4 ( ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_1 , VAR_3 ) . METHOD_4 ( ) ; }",['Delete TypeAccess'],1731,"['Delete TypeAccess', 'Delete VariableRead', 'Insert VariableRead']",['TypeAccess'],"['TypeAccess', 'VariableRead', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
1454,1454,public boolean METHOD_1 ( float VAR_1 ) { return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) > 0 ; },public boolean METHOD_1 ( float VAR_1 ) { return VAR_1 > 0 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1732,"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['VariableRead', 'TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1455,1455,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 } ) ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 } ) ) ; METHOD_6 ( ) ; }",['Update TypeAccess'],1733,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1456,1456,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( ) ; }",public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1734,"['Delete Parameter', 'Delete Parameter', 'Delete FieldRead']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'FieldRead']",Partial Match,0.25,0.6666666666666666,0.4,0.5,2,1,3
1457,1457,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; super . METHOD_1 ( ) ; },['Update Wra'],1736,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1458,1458,"public void init ( TYPE_1 VAR_1 , long id ) { METHOD_1 ( METHOD_2 ( ) , 1 , VAR_1 . METHOD_2 ( ) , id ) ; init ( ) ; }","public void init ( TYPE_1 VAR_1 , java.lang.String name ) { METHOD_1 ( METHOD_2 ( ) , 1 , VAR_1 . METHOD_2 ( ) , name ) ; init ( ) ; }","['Update Parameter', 'Update TypeReference', 'Update VariableRead']",1737,"['Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1459,1459,public java.lang.String execute ( ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this ) ; return VAR_2 ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; return VAR_4 ; } },public java.lang.String execute ( ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this ) ; return VAR_2 ; } catch ( java.io.IOException VAR_3 ) { return VAR_4 ; } },"['Delete VariableRead', 'Delete Invocation']",1738,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1460,1460,public boolean METHOD_1 ( java.lang.String key ) { VAR_1 . METHOD_2 ( key ) ; return true ; },private boolean METHOD_1 ( java.lang.String key ) { VAR_1 . METHOD_2 ( key ) ; return true ; },['Update Wra'],1741,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1461,1461,public TYPE_1 getType ( ) { return this . type ; },public TYPE_1 getType ( ) { return type ; },['Delete ThisAccess'],1742,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1462,1462,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; if ( ( VAR_2 ) != null ) VAR_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",1743,"['Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall', 'Invocation']","['Invocation', 'ConstructorCall', 'TypeReference']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1463,1463,"public abstract void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) ;",public abstract void METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1744,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1464,1464,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.util.List < TYPE_2 > VAR_4 , java.lang.String VAR_5 ) ;","METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.util.List < TYPE_2 > VAR_4 , java.lang.String VAR_5 ) { }",['Delete TypeReference'],1745,"['Delete TypeReference', 'Insert Block']",['TypeReference'],"['TypeReference', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1465,1465,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int i ) { android.view.View VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( VAR_2 , VAR_5 . get ( i ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int i ) { android.view.View VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( VAR_2 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1746,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
1466,1466,"void METHOD_1 ( java.lang.String VAR_1 , short VAR_2 ) { VAR_3 . put ( VAR_1 , ( ( int ) ( VAR_2 ) ) ) ; }","void METHOD_1 ( java.lang.String VAR_1 , short VAR_2 ) { VAR_3 . put ( VAR_2 , VAR_1 ) ; }","['Move VariableRead', 'Delete TypeReference']",1747,"['Move VariableRead', 'Move VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeReference', 'Delete VariableRead']","['VariableRead', 'TypeReference']","['VariableRead', 'VariableRead', 'TypeReference', 'VariableRead', 'TypeReference', 'VariableRead']",Exact Match,1.0,0.3333333333333333,1.0,0.5,2,4,0
1467,1467,public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; },['Update Literal'],1748,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1468,1468,public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; return this . VAR_1 ; },['Insert ThisAccess'],1749,"['Insert ThisAccess', 'Insert FieldRead', 'Delete VariableRead']",['ThisAccess'],"['ThisAccess', 'FieldRead', 'VariableRead']",GPT Hallucinated Nodes,0.3333333333333333,0.3333333333333333,1.0,0.5,1,2,0
1469,1469,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; },['Update Wra'],1750,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1470,1470,"private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 , ""type"" , STRING_2 ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 , ""type"" ) ; }",['Delete FieldRead'],1751,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1471,1471,"private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , true ) ; METHOD_3 ( intent ) ; }","private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1752,"['Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'Literal', 'Invocation']","['Invocation', 'Literal', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
1472,1472,"public void append ( TYPE_1 event ) { final TYPE_2 VAR_1 = event . METHOD_1 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; } }","public void append ( TYPE_1 event ) { final TYPE_2 VAR_1 = event . METHOD_1 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_2 ( VAR_2 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; } }","['Delete TypeAccess', 'Delete Invocation']",1753,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1473,1473,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 . get ( VAR_3 . toLowerCase ( ) ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 . get ( VAR_3 . toUpperCase ( ) ) ; },['Update Invocation'],1754,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1474,1474,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) throws TYPE_2 , java.io.IOException { TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 . toString ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) throws TYPE_2 , java.io.IOException { TYPE_3 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( VAR_4 . toString ( ) ) ; }","['Delete VariableRead', 'Delete Invocation']",1755,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1475,1475,private static void METHOD_1 ( ) { java.lang.System.out.print ( STRING_1 ) ; },public static void METHOD_1 ( ) { java.lang.System.out.print ( STRING_1 ) ; },['Update Wra'],1756,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1476,1476,private void METHOD_1 ( ) { for ( java.util.List < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) { for ( TYPE_1 p : VAR_1 ) { p . METHOD_2 ( true ) ; p . METHOD_3 ( true ) ; } } VAR_3 = true ; },private void METHOD_1 ( ) { for ( java.util.List < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) { for ( TYPE_1 p : VAR_1 ) { p . METHOD_2 ( true ) ; } } VAR_3 = true ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",1757,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1477,1477,public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( new TYPE_2 ( ) . METHOD_2 ( ) ) ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; },"['Insert ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Invocation']",1758,"['Delete TypeReference', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Invocation']","['ConstructorCall', 'TypeReference', 'ConstructorCall', 'Invocation']","['TypeReference', 'TypeReference', 'ConstructorCall', 'Invocation']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
1478,1478,"public TYPE_1 append ( java.lang.String fieldName , java.lang.Object VAR_1 ) { if ( fieldName != null ) { METHOD_1 ( fieldName ) ; METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; } return this ; }","public TYPE_1 append ( java.lang.String fieldName , java.lang.Object VAR_1 ) { if ( fieldName != null ) { VAR_2 . METHOD_1 ( VAR_3 , fieldName ) ; METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; } return this ; }",['Insert TypeAccess'],1759,"['Insert VariableRead', 'Insert VariableRead', 'Insert Invocation', 'Delete Invocation']",['TypeAccess'],"['VariableRead', 'VariableRead', 'Invocation', 'Invocation']",Partial Match,0.0,0.0,0.0,0.0,0,4,1
1479,1479,"private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 ) { return METHOD_2 ( false , VAR_1 , VAR_3 , VAR_2 ) ; }","private TYPE_1 METHOD_1 ( TYPE_2 node , TYPE_2 VAR_3 , TYPE_2 VAR_2 ) { return METHOD_2 ( false , node , VAR_3 , VAR_2 ) ; }","['Move Parameter', 'Update Parameter', 'Update VariableRead']",1760,"['Update Parameter', 'Update VariableRead']","['Parameter', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
1480,1480,"public TYPE_1 METHOD_1 ( int VAR_1 ) { java.lang.Float value = VAR_2 . METHOD_2 ( ) ; if ( value != null ) return METHOD_3 ( VAR_1 , value ) ; return null ; }",public TYPE_1 METHOD_1 ( ) { java.lang.Float value = VAR_2 . METHOD_2 ( ) ; if ( value != null ) return METHOD_3 ( value ) ; return null ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1761,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1481,1481,private void METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_4 = 0 ; },private void METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 = 0 ; },['Update ConstructorCall'],1763,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1482,1482,public < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > type ) throws TYPE_3 { VAR_1 . METHOD_2 ( ) ; return ( ( TYPE_4 ) ( VAR_2 ) ) . METHOD_1 ( type ) ; },public < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > type ) throws TYPE_3 { VAR_1 . METHOD_2 ( ) ; return VAR_2 . METHOD_1 ( type ) ; },['Delete TypeReference'],1764,"['Delete TypeReference', 'Delete TypeReference']",['TypeReference'],"['TypeReference', 'TypeReference']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
1483,1483,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , INT_1 , INT_2 ) ; VAR_2 . assertEquals ( STRING_2 , VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , INT_1 , INT_2 ) ; assertEquals ( STRING_2 , VAR_1 . METHOD_2 ( ) ) ; }",['Update TypeAccess'],1765,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1484,1484,public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; } return VAR_2 ; },public static TYPE_1 METHOD_1 ( java.lang.String str ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( str ) ) ; return VAR_2 ; },"['Update Parameter', 'Insert Invocation', 'Move VariableRead', 'Insert ConstructorCall', 'Insert VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Block', 'Delete If']",1766,"['Update Parameter', 'Update VariableRead', 'Delete If']","['Parameter', 'Invocation', 'VariableRead', 'ConstructorCall', 'VariableRead', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'ConstructorCall', 'Invocation', 'Block', 'If']","['Parameter', 'VariableRead', 'If']",GPT Missed Nodes,0.375,0.6666666666666666,0.15384615384615385,0.25,2,1,11
1485,1485,public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 = ( ( double ) ( VAR_2 ) ) / FLOAT_1 ; VAR_4 = new java.lang.Double ( VAR_3 ) . toString ( 1.0 ) ; VAR_5 . setText ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 = ( ( double ) ( VAR_2 ) ) / FLOAT_1 ; VAR_4 = new java.lang.Double ( VAR_3 ) . toString ( ) ; VAR_5 . setText ( VAR_4 ) ; },['Delete Literal'],1767,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1486,1486,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1768,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1487,1487,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Invocation']",1769,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1488,1488,"public TYPE_1 METHOD_1 ( final int VAR_1 , TYPE_2 VAR_2 , TYPE_3 type , boolean VAR_3 , TYPE_4 VAR_4 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , VAR_2 , type , VAR_3 , VAR_4 , null ) ; }","public TYPE_1 METHOD_1 ( final int VAR_1 , TYPE_2 VAR_2 , TYPE_3 type , TYPE_4 VAR_4 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , VAR_2 , type , VAR_4 , null ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1770,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1489,1489,"protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) , VAR_1 . not ( METHOD_3 ( ) ) , new TYPE_3 ( METHOD_4 ( ) ) , null ) ; }","protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) , VAR_1 . not ( METHOD_3 ( ) ) , null , null ) ; }","['Insert Literal', 'Delete Invocation', 'Delete ConstructorCall']",1771,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation']","['Literal', 'Invocation', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1490,1490,public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = getActivity ( ) . METHOD_2 ( VAR_3 ) ; } },"['Insert Invocation', 'Delete TypeAccess']",1772,['Insert Invocation'],"['Invocation', 'TypeAccess']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1491,1491,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; boolean VAR_2 = ! ( VAR_3 . METHOD_2 ( ) ) ; VAR_4 . setEnabled ( VAR_2 ) ; VAR_5 . setEnabled ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; boolean VAR_2 = ! ( VAR_3 . METHOD_2 ( ) ) ; VAR_4 . setEnabled ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1773,['Delete Invocation'],"['TypeAccess', 'VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1492,1492,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; new TYPE_2 ( ) . METHOD_3 ( this ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; new TYPE_2 ( ) . show ( this ) ; }",['Update Invocation'],1775,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1493,1493,"public static void METHOD_1 ( android.content.Context context ) { java.lang.String url = VAR_1 ; new TYPE_1 ( url , false , VAR_2 , VAR_3 , context ) . METHOD_2 ( VAR_4 ) ; }","public static void METHOD_1 ( android.content.Context context ) { java.lang.String url = VAR_1 ; new TYPE_1 ( url , true , VAR_2 , VAR_3 , context ) . METHOD_2 ( VAR_4 ) ; }",['Update Literal'],1776,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1494,1494,private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = ( METHOD_2 ( ) ) * FLOAT_1 ; VAR_4 = ( - ( METHOD_2 ( ) ) ) * FLOAT_2 ; VAR_5 = ( METHOD_3 ( ) ) * FLOAT_3 ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = ( METHOD_2 ( ) ) * FLOAT_2 ; VAR_4 = ( - ( METHOD_2 ( ) ) ) * FLOAT_1 ; VAR_5 = ( METHOD_3 ( ) ) * FLOAT_3 ; },"['Move FieldRead', 'Move FieldRead']",1778,"['Update Literal', 'Update Literal']","['FieldRead', 'FieldRead']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1495,1495,"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( VAR_4 , VAR_1 ) ; METHOD_2 ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( VAR_4 , VAR_1 ) ; METHOD_2 ( ) ; }",['Delete Literal'],1779,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1496,1496,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) ;",public void METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1780,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1497,1497,"public java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { return METHOD_2 ( null , null ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( null , null ) ; }","['Delete TypeReference', 'Delete Parameter']",1781,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1498,1498,"public TYPE_1 METHOD_1 ( TYPE_2 view , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { return TYPE_5 . METHOD_2 ( new TYPE_6 ( VAR_3 . getContext ( ) , VAR_4 ) , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( android.content.Context context , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { return TYPE_5 . METHOD_2 ( new TYPE_6 ( context , VAR_4 ) , VAR_2 ) ; }","['Update Parameter', 'Update TypeReference', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1782,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.6,0.6666666666666666,0.4,0.5,2,1,3
1499,1499,"void METHOD_1 ( java.util.Map < java.lang.String , java.util.List < java.lang.String > > VAR_1 , java.util.List < java.lang.String > VAR_2 ) ;","void METHOD_1 ( java.util.Map < java.lang.String , java.util.List < java.lang.String > > VAR_1 , java.util.List < java.lang.String > message ) ;",['Update Parameter'],1783,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1500,1500,public void METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1784,['Delete Invocation'],"['TypeAccess', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
1501,1501,"public static java.lang.String METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { return new java.lang.String ( VAR_1 , STRING_1 ) ; }","private static java.lang.String METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { return new java.lang.String ( VAR_1 , STRING_1 ) ; }",['Update Wra'],1785,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1502,1502,"public TYPE_1 METHOD_1 ( java.io.File [ ] VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 . size ( ) ) == 0 ) { return null ; } return VAR_3 . get ( 0 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( java.io.File [ ] VAR_1 ) { if ( ( VAR_3 . size ( ) ) == 0 ) { return null ; } return VAR_3 . get ( 0 ) . METHOD_1 ( VAR_1 , this ) ; }","['Insert ThisAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1786,"['Delete Parameter', 'Update VariableRead', 'Insert ThisAccess']","['ThisAccess', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'ThisAccess']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
1503,1503,public int METHOD_1 ( ) { return java.lang.Integer . METHOD_2 ( METHOD_3 ( ) ) ; },public int METHOD_1 ( ) { return java.lang.Integer.parseInt ( METHOD_3 ( ) ) ; },['Update Invocation'],1787,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1504,1504,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { VAR_1 . METHOD_2 ( ( ( java.lang.String ) ( VAR_2 . METHOD_3 ( ""id"" ) ) ) ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; java.lang.String url = STRING_1 ; return new TYPE_1 ( url ) ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; java.lang.String url = STRING_1 ; return new TYPE_1 ( url ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",1789,"['Delete Parameter', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete TypeReference', 'Delete Invocation']","['TypeReference', 'Parameter', 'VariableRead', 'TypeReference', 'VariableRead', 'Literal', 'Invocation', 'Invocation']","['Parameter', 'FieldRead', 'Invocation', 'Literal', 'TypeReference', 'Invocation']",Partial Match,0.6666666666666666,0.8333333333333334,0.625,0.7142857142857143,5,1,3
1505,1505,TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.lang.String id ) ;,TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1790,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1506,1506,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( this . METHOD_2 ( ) ) . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_3 ( this ) . METHOD_2 ( ) ; },"['Update Invocation', 'Move Invocation', 'Update Invocation', 'Move VariableRead', 'Delete Invocation', 'Delete Invocation']",1792,"['Delete Invocation', 'Delete Invocation', 'Delete ThisAccess']","['Invocation', 'Invocation', 'Invocation', 'VariableRead', 'Invocation', 'Invocation']","['Invocation', 'Invocation', 'ThisAccess']",Partial Match,0.3333333333333333,0.6666666666666666,0.3333333333333333,0.4444444444444444,2,1,4
1507,1507,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( ) ; },['Delete FieldRead'],1793,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1508,1508,protected int METHOD_1 ( ) { return ( super . METHOD_1 ( ) ) ^ ( TYPE_1 . METHOD_2 ( values ) ) ; },protected int METHOD_1 ( ) { return ( super . METHOD_2 ( ) ) ^ ( TYPE_1 . METHOD_2 ( values ) ) ; },['Update Invocation'],1794,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1509,1509,private void METHOD_1 ( ) { switch ( VAR_1 ) { case INT_1 : VAR_2 = VAR_3 ; break ; case INT_2 : VAR_2 = VAR_4 ; break ; case INT_3 : VAR_2 = VAR_5 ; break ; case INT_4 : VAR_2 = VAR_6 ; break ; } },public void METHOD_1 ( ) { switch ( VAR_1 ) { case INT_1 : VAR_2 = VAR_3 ; break ; case INT_2 : VAR_2 = VAR_4 ; break ; case INT_3 : VAR_2 = VAR_5 ; break ; case INT_4 : VAR_2 = VAR_6 ; break ; } },['Update Wra'],1795,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1510,1510,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_4 ( ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_4 ( ) ; METHOD_4 ( ) ; },['Update Wra'],1796,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1511,1511,"public TYPE_1 METHOD_1 ( int id ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; VAR_2 . add ( TYPE_3 . METHOD_3 ( STRING_1 , id ) ) ; return ( ( TYPE_1 ) ( VAR_1 . METHOD_4 ( ) ) ) ; }","public TYPE_1 METHOD_1 ( int id ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; VAR_2 . add ( TYPE_3 . METHOD_3 ( ""id"" , id ) ) ; return ( ( TYPE_1 ) ( VAR_1 . METHOD_4 ( ) ) ) ; }","['Insert Literal', 'Delete TypeAccess']",1797,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1512,1512,"public boolean METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 , TYPE_1 < TYPE_2 > target , boolean VAR_3 ) { VAR_4 . METHOD_2 ( ) ; return false ; }","public boolean METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 , TYPE_1 < TYPE_2 > target , boolean VAR_3 ) { return false ; }","['Delete TypeAccess', 'Delete Invocation']",1798,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1513,1513,public boolean METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 class ) ; if ( VAR_1 != null ) { VAR_3 = VAR_1 . METHOD_5 ( ) ; } return ( VAR_3 ) != null ; },private boolean METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 class ) ; if ( VAR_1 != null ) { VAR_3 = VAR_1 . METHOD_5 ( ) ; } return ( VAR_3 ) != null ; },['Update Wra'],1799,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1514,1514,"protected void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . assertThat ( STRING_1 , VAR_1 , TYPE_2 . METHOD_2 ( ( ( TYPE_1 ) ( null ) ) ) ) ; }","protected void METHOD_1 ( final TYPE_1 VAR_1 ) { assertThat ( STRING_1 , VAR_1 , TYPE_2 . METHOD_2 ( ( ( TYPE_1 ) ( null ) ) ) ) ; }",['Update TypeAccess'],1800,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1515,1515,"public boolean add ( TYPE_1 view , boolean VAR_1 , boolean VAR_2 ) { if ( METHOD_1 ( view , VAR_1 , VAR_2 , null ) ) { METHOD_2 ( view ) ; return true ; } return false ; }","public boolean add ( TYPE_1 view , boolean VAR_1 , boolean VAR_2 ) { if ( METHOD_1 ( view , VAR_1 , VAR_2 ) ) { METHOD_2 ( view ) ; return true ; } return false ; }",['Delete Literal'],1801,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1516,1516,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; },public abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ;,"['Insert Wra', 'Delete Literal', 'Delete Return']",1804,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
1517,1517,public TYPE_1 METHOD_1 ( ) { try { return VAR_1 . METHOD_2 ( VAR_2 . String class ) ; } catch ( final TYPE_2 VAR_3 ) { throw VAR_3 ; } catch ( final java.lang.Exception VAR_3 ) { return null ; } },public TYPE_1 METHOD_1 ( ) { try { return c . METHOD_2 ( VAR_2 . String class ) ; } catch ( final TYPE_2 VAR_3 ) { throw VAR_3 ; } catch ( final java.lang.Exception VAR_3 ) { return null ; } },"['Insert FieldRead', 'Delete TypeAccess']",1805,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1518,1518,public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { this . VAR_2 . remove ( this . METHOD_2 ( VAR_1 ) . getId ( ) ) ; },public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { this . VAR_2 . remove ( this . METHOD_2 ( VAR_1 ) . toString ( ) ) ; },['Update Invocation'],1806,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1519,1519,private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ) ; },private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ) ; },['Delete Wra'],1807,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1520,1520,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( 1L , INT_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) . METHOD_2 ( 1L , INT_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( 1L , INT_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_2 ( 1L , INT_1 ) ) ; }","['Move Invocation', 'Move Invocation', 'Move TypeAccess']",1808,"['Move Invocation', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess']","['Invocation', 'Invocation']",GPT Missed Nodes,0.5,0.5,0.3333333333333333,0.4,1,1,2
1521,1521,public java.lang.String METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 && ( ( VAR_2 ) != null ) ) { return VAR_2 ; } else { return VAR_3 ; } },protected java.lang.String METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 && ( ( VAR_2 ) != null ) ) { return VAR_2 ; } else { return VAR_3 ; } },['Update Wra'],1809,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1522,1522,"public void METHOD_1 ( ) { java.lang.String string = STRING_1 ; java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( string ) ; VAR_3 . assertThat ( VAR_1 ) . METHOD_3 ( STRING_2 , STRING_3 , STRING_4 ) ; }","public void METHOD_1 ( ) { java.lang.String string = STRING_1 ; java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( string ) ; assertThat ( VAR_1 ) . METHOD_3 ( STRING_2 , STRING_3 , STRING_4 ) ; }",['Update TypeAccess'],1810,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1523,1523,private static void METHOD_1 ( int id ) { },private static native void METHOD_1 ( int id ) ;,['Insert Wra'],1811,"['Insert Wra', 'Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
1524,1524,public int METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; },public int METHOD_1 ( ) { return ; return METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; },['Insert Return'],1812,['Insert Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1525,1525,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( VAR_1 == ( VAR_3 ) ) { this . VAR_4 = VAR_5 ; } else { this . VAR_4 = VAR_6 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( VAR_1 == ( VAR_3 ) ) { VAR_4 = VAR_5 ; } else { VAR_4 = VAR_6 ; } },"['Delete ThisAccess', 'Delete ThisAccess']",1813,"['Delete ThisAccess', 'Delete ThisAccess']","['ThisAccess', 'ThisAccess']","['ThisAccess', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1526,1526,public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return null ; return new java.util.HashSet < java.lang.String > ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; },public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return new java.util.HashSet < java.lang.String > ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1814,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1527,1527,"private static native void METHOD_1 ( java.lang.Object method , java.lang.String VAR_1 , boolean VAR_2 , int VAR_3 , int VAR_4 ) ;","private static native void METHOD_1 ( java.lang.Object method , java.lang.String VAR_1 , boolean VAR_2 , int VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",1815,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1528,1528,"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 , TYPE_3 VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , ( ( byte ) ( - 1 ) ) , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { return METHOD_2 ( VAR_1 , VAR_2 , ( ( byte ) ( - 1 ) ) , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1816,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1529,1529,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1817,"['Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation']","['FieldRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Block', 'If']","['If', 'FieldRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.7142857142857143,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
1530,1530,"private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_1 ) ; } TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { if ( VAR_1 != null ) { throw new TYPE_1 ( STRING_1 ) ; } TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 ) ; }",['Update BinaryOperator'],1818,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1531,1531,public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_5 ( null ) ; } if ( TYPE_1 . METHOD_6 ( ) ) TYPE_1 . METHOD_7 ( ) ; },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) METHOD_3 ( ) . METHOD_4 ( this ) ; if ( TYPE_1 . METHOD_6 ( ) ) TYPE_1 . METHOD_7 ( ) ; },"['Delete Literal', 'Delete Invocation']",1819,"['Delete Block', 'Delete Invocation', 'Delete Literal']","['Literal', 'Invocation']","['Block', 'Invocation', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
1532,1532,"public static void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( event , VAR_3 ) ; } }","private static void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( event , VAR_3 ) ; } }",['Update Wra'],1821,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1533,1533,"public synchronized TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 == null ) { add ( VAR_2 ) ; return VAR_2 ; } return VAR_3 ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 == null ) { add ( VAR_2 ) ; return VAR_2 ; } return VAR_3 ; }",['Delete Wra'],1822,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1534,1534,private void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update Wra'],1823,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1535,1535,public static TYPE_1 METHOD_1 ( boolean VAR_1 ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ) ) ; },public static TYPE_1 METHOD_1 ( boolean VAR_1 ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( false ) ) ) ; },"['Insert Literal', 'Delete VariableRead']",1824,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1536,1536,"public final void response ( int state , java.lang.String message ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . put ( VAR_3 , INT_1 ) ; VAR_2 . put ( VAR_4 , message ) ; this . response ( VAR_1 ) ; }","protected final void response ( int state , java.lang.String message ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . put ( VAR_3 , INT_1 ) ; VAR_2 . put ( VAR_4 , message ) ; this . response ( VAR_1 ) ; }",['Update Wra'],1825,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1537,1537,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 , t ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { TYPE_3 . METHOD_2 ( VAR_2 , STRING_1 , null ) ; }","['Insert Literal', 'Delete VariableRead']",1826,"['Update VariableRead', 'Update Invocation', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Invocation', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.3333333333333333,0.5,0.4,1,2,1
1538,1538,public int METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",1827,"['Update TypeReference', 'Delete Return', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'VariableRead', 'Invocation', 'Return']","['TypeReference', 'Return', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
1539,1539,private boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 . equals ( key ) ) return true ; } return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 . equals ( key ) ) return true ; } return false ; },['Update Wra'],1828,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1540,1540,"private void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_1 ) ; METHOD_3 ( intent ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( ""id"" , VAR_1 ) ; METHOD_3 ( intent ) ; }","['Insert Literal', 'Delete TypeAccess']",1829,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1541,1541,"public void METHOD_1 ( final int position , TYPE_1 item ) { METHOD_2 ( item ) ; }","public void METHOD_1 ( final int position , TYPE_1 item ) { METHOD_2 ( position , item ) ; }",['Insert VariableRead'],1830,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1542,1542,"static void METHOD_1 ( java.lang.Object VAR_1 , int VAR_2 , TYPE_1 ... VAR_3 ) { TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , true , VAR_3 ) ; }","static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , TYPE_1 ... VAR_3 ) { TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , true , VAR_3 ) ; }",['Update TypeReference'],1832,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1543,1543,public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) { VAR_1 . METHOD_3 ( ) ; } METHOD_4 ( this ) ; VAR_1 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) { VAR_1 . METHOD_3 ( ) ; } METHOD_4 ( this ) ; VAR_1 . METHOD_5 ( ) ; },['Update Wra'],1833,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1544,1544,void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( 1 ) ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( 0 ) ; } },['Update Literal'],1835,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1545,1545,"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = java.lang.Integer.toString ( VAR_1 . METHOD_2 ( ) ) ; return ( VAR_3 . delete ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) , new java.lang.String [ ] { VAR_2 } ) ) > 0 ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = java.lang.Integer.toString ( VAR_1 . METHOD_2 ( ) ) ; return ( VAR_3 . delete ( VAR_5 , ( ( VAR_5 ) + STRING_1 ) , new java.lang.String [ ] { VAR_2 } ) ) > 0 ; }",['Update TypeAccess'],1836,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1546,1546,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; },"['Delete VariableRead', 'Delete Invocation']",1837,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1547,1547,public static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( VAR_1 > ( VAR_2 . length ) ) ) { VAR_1 = 0 ; } return VAR_3 [ VAR_1 ] ; },public static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( VAR_1 >= ( VAR_2 . length ) ) ) { VAR_1 = 0 ; } return VAR_3 [ VAR_1 ] ; },['Update BinaryOperator'],1838,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1548,1548,"public final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . assertEquals ( 1 , VAR_4 . size ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( 1 , VAR_4 . size ( ) ) ; }","['Update TypeAccess', 'Delete Wra']",1839,"['Delete Wra', 'Delete FieldRead']","['TypeAccess', 'Wra']","['Wra', 'FieldRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1549,1549,"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final int VAR_2 ) { return new TYPE_1 ( TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 . getContext ( ) ) , VAR_1 , false ) ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final int VAR_2 ) { return new TYPE_1 ( VAR_1 ) ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",1840,"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'Literal', 'Invocation']","['TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'Literal']",Partial Match,0.6,0.8571428571428571,0.75,0.7999999999999999,6,1,2
1550,1550,public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { java.util.List VAR_2 = VAR_3 . METHOD_1 ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; return VAR_2 == null ? TYPE_2 . METHOD_3 ( ) : VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { java.util.List VAR_2 = this . VAR_3 . METHOD_1 ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; return VAR_2 == null ? TYPE_2 . METHOD_3 ( ) : VAR_2 ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",1841,['Insert ThisAccess'],"['FieldRead', 'ThisAccess', 'TypeAccess']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1551,1551,public boolean METHOD_1 ( java.util.Collection < ? > VAR_1 ) { boolean VAR_2 = false ; for ( java.lang.Object VAR_3 : VAR_1 ) { VAR_2 |= this . remove ( VAR_3 ) ; } return VAR_2 ; },public boolean METHOD_1 ( java.util.Collection < ? > VAR_1 ) { boolean VAR_2 = true ; for ( java.lang.Object VAR_3 : VAR_1 ) { VAR_2 &= this . remove ( VAR_3 ) ; } return VAR_2 ; },['Update Literal'],1842,"['Update Literal', 'Update BinaryOperator']",['Literal'],"['Literal', 'BinaryOperator']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1552,1552,public void METHOD_1 ( final java.lang.String [ ] VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( final java.lang.String [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",1844,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1553,1553,public java.lang.Object METHOD_1 ( java.lang.String VAR_1 ) { try { return super . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { return VAR_3 . get ( ) . get ( VAR_1 ) ; } },public java.lang.Object METHOD_1 ( java.lang.String VAR_1 ) { try { return super . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { return null ; } },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1847,"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation']","['FieldRead', 'Invocation', 'Invocation', 'VariableRead', 'Literal']",Partial Match,0.6,0.8,0.8,0.8000000000000002,4,1,1
1554,1554,"public void METHOD_1 ( int item ) { METHOD_1 ( item , true ) ; }","public void METHOD_1 ( int item ) { METHOD_1 ( item , false ) ; }",['Update Literal'],1848,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1555,1555,"public static void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String msg ) { TYPE_1 . METHOD_1 ( VAR_2 . getClass ( ) . METHOD_2 ( ) , msg ) ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_2 . getClass ( ) . METHOD_2 ( ) , msg ) ; }","public static void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String msg ) { TYPE_1 . METHOD_1 ( VAR_2 . getClass ( ) . getName ( ) , msg ) ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_2 . getClass ( ) . getName ( ) , msg ) ; }","['Update Invocation', 'Update Invocation']",1849,"['Update Invocation', 'Update Invocation']","['Invocation', 'Invocation']","['Invocation', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1556,1556,public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_4 . add ( VAR_3 ) ; } METHOD_3 ( ) ; },private void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_4 . add ( VAR_3 ) ; } METHOD_3 ( ) ; },['Update Wra'],1850,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1557,1557,public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( true ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },['Delete Literal'],1852,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1558,1558,void METHOD_1 ( int x ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1853,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1559,1559,"public void setValue ( TYPE_1 VAR_1 , java.lang.Integer value ) { VAR_2 = value ; VAR_1 . METHOD_1 ( ) ; }","public void setValue ( TYPE_1 VAR_1 , java.lang.Integer value ) { VAR_2 = value ; }","['Delete VariableRead', 'Delete Invocation']",1854,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1560,1560,"protected void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }","protected void init ( ) { VAR_1 = new TYPE_1 ( VAR_3 , VAR_4 ) ; }",['Delete FieldRead'],1855,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1561,1561,"private void info ( java.lang.String VAR_1 , java.lang.String message ) { VAR_2 . info ( message ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_4 , METHOD_2 ( ) . METHOD_3 ( message ) ) ; }","private void info ( java.lang.String message ) { VAR_2 . info ( message ) ; VAR_3 . METHOD_1 ( null , VAR_4 , METHOD_2 ( ) . METHOD_3 ( message ) ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1856,"['Delete Parameter', 'Insert Literal']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Literal']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1562,1562,"public void METHOD_1 ( TYPE_1 item , boolean VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_3 . x , VAR_3 . y ) ; VAR_4 = VAR_2 ; if ( VAR_2 != null ) { VAR_5 . add ( item , VAR_1 ) ; } }","public void METHOD_1 ( TYPE_1 item ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_3 . x , VAR_3 . y ) ; VAR_4 = VAR_2 ; if ( VAR_2 != null ) { VAR_5 . add ( item ) ; } }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1857,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1563,1563,"public void info ( long VAR_1 , java.lang.String VAR_2 , java.lang.Object ... VAR_3 ) { this . METHOD_1 ( VAR_4 , VAR_2 , VAR_1 , VAR_3 ) ; }","public void info ( long VAR_1 , java.lang.String VAR_2 , java.lang.Object ... VAR_3 ) { METHOD_1 ( VAR_4 , VAR_2 , VAR_1 , VAR_3 ) ; }",['Delete ThisAccess'],1858,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1564,1564,"public final boolean METHOD_1 ( int index , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { this . METHOD_3 ( index , VAR_1 , VAR_2 ) ; return true ; } return false ; }","public final boolean METHOD_1 ( int index , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { METHOD_3 ( index , VAR_1 , VAR_2 ) ; return true ; } return false ; }",['Delete ThisAccess'],1859,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1565,1565,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_3 ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_3 ( VAR_4 ) ; } },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1860,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.16666666666666666,0.2857142857142857,1,0,5
1566,1566,"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( VAR_2 . METHOD_2 ( STRING_1 ) ) { if ( METHOD_3 ( VAR_1 ) ) { return true ; } else { return false ; } } else { return false ; } }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( VAR_1 . METHOD_2 ( STRING_1 ) ) { if ( METHOD_3 ( VAR_1 ) ) { return true ; } else { return false ; } } else { return false ; } }",['Update VariableRead'],1861,['Update FieldRead'],['VariableRead'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1567,1567,"void METHOD_1 ( android.content.Context context , int VAR_1 ) { if ( ( VAR_2 ) <= VAR_1 ) { VAR_2 = VAR_1 + 1 ; METHOD_2 ( context ) ; } }",void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) <= VAR_1 ) { VAR_2 = VAR_1 + 1 ; METHOD_2 ( ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1862,"['Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Insert Invocation']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'TypeReference', 'Invocation', 'Invocation']",Partial Match,0.5,0.4,0.6666666666666666,0.5,2,3,1
1568,1568,"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( getContext ( ) , VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; }",['Update Invocation'],1863,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1569,1569,"public TYPE_1 METHOD_1 ( java.lang.Object id ) { return this . VAR_1 . METHOD_1 ( VAR_2 , id ) ; }","public TYPE_1 METHOD_1 ( java.lang.Object id ) { return VAR_1 . METHOD_1 ( VAR_2 , id ) ; }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1865,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1570,1570,"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( VAR_3 , VAR_4 . NULL , VAR_5 . get ( ) ) ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( VAR_3 , VAR_4 . NULL , VAR_5 . get ( ) ) ) ; }","['Delete Invocation', 'Delete Invocation']",1866,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
1571,1571,"TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.Date date ) ;",TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1867,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1572,1572,"private TYPE_1 < ? > METHOD_1 ( TYPE_2 VAR_1 , java.util.Set < TYPE_3 > VAR_2 ) { return TYPE_2 ( VAR_3 . type , METHOD_1 ( VAR_4 [ 0 ] , VAR_2 ) , VAR_3 . index , VAR_1 . METHOD_2 ( ) ) ; }","private TYPE_1 < ? > METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_2 ( VAR_3 . type , METHOD_1 ( VAR_4 [ 0 ] ) , VAR_3 . index , VAR_1 . METHOD_2 ( ) ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1868,"['Delete Parameter', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,0.75,0.8571428571428571,3,0,1
1573,1573,"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; this . VAR_3 . add ( VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; VAR_3 . add ( VAR_1 ) ; }","['Insert TypeAccess', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead']",1870,"['Delete ThisAccess', 'Delete ThisAccess']","['TypeAccess', 'TypeAccess', 'ThisAccess', 'FieldRead', 'ThisAccess', 'FieldRead']","['ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,2,0,4
1574,1574,"private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_1 , STRING_1 , java.lang.String . METHOD_2 ( VAR_2 ) ) ; }","private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) ) ; }",['Delete TypeAccess'],1872,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1575,1575,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) && ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == ( VAR_2 ) ) ; },protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) && ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == ( VAR_2 ) ) ; },['Update Wra'],1873,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1576,1576,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 ) ; VAR_4 . assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( INT_2 ) . toString ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 ) ; VAR_4 . assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( INT_1 ) . toString ( ) ) ; }",['Update TypeAccess'],1874,['Update Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1577,1577,public double METHOD_1 ( ) { return ( METHOD_2 ( ) ) * FLOAT_1 ; },public double METHOD_1 ( ) { return ( METHOD_2 ( ) ) / FLOAT_1 ; },['Update BinaryOperator'],1876,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1578,1578,public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( ( STRING_1 + args ) ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( ( STRING_1 + args ) ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete VariableRead', 'Delete Invocation']",1877,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1579,1579,public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; },"public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , 1 ) ; } VAR_2 . METHOD_3 ( ) ; }",['Insert Literal'],1878,"['Delete FieldRead', 'Delete Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert Literal']",['Literal'],"['FieldRead', 'Invocation', 'Invocation', 'VariableRead', 'Literal']",GPT Hallucinated Nodes,0.25,0.2,1.0,0.33333333333333337,1,4,0
1580,1580,public int METHOD_1 ( int position ) { return VAR_1 ; },public int METHOD_1 ( int position ) { return 0 ; },"['Insert Literal', 'Delete FieldRead']",1879,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1581,1581,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",1880,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1582,1582,"public void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_2 ( VAR_2 , ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) ; VAR_3 . METHOD_3 ( new java.lang.Integer ( VAR_1 ) ) ; ( VAR_4 ) ++ ; }","public void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_2 ( VAR_2 , ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) , VAR_4 ) ; VAR_3 . METHOD_3 ( new java.lang.Integer ( VAR_1 ) ) ; ( VAR_4 ) ++ ; }",['Insert TypeAccess'],1881,['Insert VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1583,1583,"int update ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) ;",int update ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",1883,"['Delete Parameter', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,0.75,0.8571428571428571,3,0,1
1584,1584,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( TYPE_1 . METHOD_3 ( ) ? 1 : 0 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( TYPE_1 . METHOD_3 ( ) ? 0 : 1 ) ) ; },['Move Literal'],1884,"['Update Literal', 'Update Literal']",['Literal'],"['Literal', 'Literal']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
1585,1585,"protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_3 ( ) ) ; }","protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_4 ( ) , new TYPE_3 ( ) ) ; }",['Delete ConstructorCall'],1885,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1586,1586,"public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . add ( VAR_4 , new TYPE_3 ( ) ) ; VAR_2 . METHOD_4 ( null ) ; VAR_3 . commit ( ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . replace ( VAR_4 , new TYPE_3 ( ) ) ; VAR_2 . METHOD_4 ( null ) ; VAR_3 . commit ( ) ; }",['Update Invocation'],1886,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1587,1587,"public void METHOD_1 ( java.lang.String [ ] args ) { super . METHOD_1 ( args ) ; VAR_1 = new TYPE_1 [ TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ] ; VAR_2 = VAR_3 . open ( STRING_1 , true ) ; }",public void METHOD_1 ( java.lang.String [ ] args ) { super . METHOD_1 ( args ) ; VAR_1 = new TYPE_1 [ TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ] ; VAR_2 = VAR_3 . open ( STRING_1 ) ; },['Delete Literal'],1887,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1588,1588,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . METHOD_2 ( ) . toLowerCase ( ) , VAR_1 ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . METHOD_2 ( ) . toLowerCase ( ) , VAR_1 ) ; }","['Delete VariableRead', 'Delete Invocation']",1888,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1589,1589,public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_2 . getText ( ) ) ; METHOD_2 ( java.lang.Double . METHOD_3 ( VAR_3 . getText ( ) ) ) ; VAR_4 . METHOD_4 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_2 . getText ( ) ) ; METHOD_2 ( java.lang.Double . METHOD_3 ( VAR_3 . getText ( ) ) ) ; },"['Delete TypeAccess', 'Delete Invocation']",1889,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1590,1590,public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { final java.lang.String value = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( null == value ) { return VAR_1 . METHOD_4 ( ) ; } return VAR_3 . trim ( ) ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { final java.lang.String value = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( null == value ) { return VAR_1 . METHOD_4 ( ) ; } return value ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1890,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1591,1591,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; return VAR_3 ; }","public void METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; }","['Update TypeReference', 'Delete VariableRead', 'Delete Return']",1892,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1592,1592,public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_2 = VAR_2 ; },public void METHOD_1 ( java.lang.Double VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Insert VariableRead', 'Delete FieldRead']",1893,['Update Parameter'],"['Parameter', 'VariableRead', 'FieldRead']",['Parameter'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1593,1593,"public int METHOD_1 ( java.lang.String num , java.lang.String name , float VAR_1 ) ;","public int METHOD_1 ( java.lang.String id , java.lang.String name , float VAR_1 ) ;",['Update Parameter'],1894,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1594,1594,"protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this , VAR_1 ) ; }",['Update Wra'],1895,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1595,1595,"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = METHOD_2 ( VAR_1 , true , true ) ; if ( ! result ) { this . METHOD_3 ( STRING_1 ) ; } return result ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = METHOD_2 ( VAR_1 , true ) ; if ( ! result ) { this . METHOD_3 ( STRING_1 ) ; } return result ; }",['Delete Literal'],1897,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1596,1596,"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_3 . METHOD_2 ( this , VAR_4 [ VAR_5 ] ) ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } else { TYPE_1 . METHOD_4 ( this , VAR_5 , VAR_6 ) ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( TYPE_1 . METHOD_2 ( this , VAR_4 [ 0 ] ) ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } else { TYPE_1 . METHOD_4 ( this , VAR_5 , VAR_6 ) ; } }","['Update TypeAccess', 'Insert Literal', 'Delete FieldRead']",1898,"['Delete FieldRead', 'Insert TypeAccess', 'Delete VariableRead', 'Insert Literal']","['TypeAccess', 'Literal', 'FieldRead']","['FieldRead', 'TypeAccess', 'VariableRead', 'Literal']",GPT Hallucinated Nodes,0.75,0.5,0.6666666666666666,0.5714285714285715,2,2,1
1597,1597,public void METHOD_1 ( int number ) { this . number = number + 1 ; },public void METHOD_1 ( int number ) { this . number = number ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",1899,"['Delete BinaryOperator', 'Delete Literal', 'Delete VariableRead']","['VariableRead', 'Literal', 'BinaryOperator']","['BinaryOperator', 'Literal', 'VariableRead']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1598,1598,"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( INT_1 , INT_2 , INT_3 , false , false ) ) ; TYPE_1 . METHOD_3 ( true ) ; new java.lang.Thread ( new TYPE_1 ( ) ) . start ( ) ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( INT_1 , INT_2 , INT_3 , true , false ) ) ; TYPE_1 . METHOD_3 ( true ) ; new java.lang.Thread ( new TYPE_1 ( ) ) . start ( ) ; }",['Update Literal'],1900,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1599,1599,"private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 item = new TYPE_1 ( VAR_2 , 1 ) ; TYPE_3 VAR_3 = item . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; item . METHOD_4 ( VAR_3 ) ; return item ; }","private static TYPE_1 METHOD_1 ( ) { TYPE_1 item = new TYPE_1 ( VAR_2 , 1 ) ; TYPE_3 VAR_3 = item . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; item . METHOD_4 ( VAR_3 ) ; return item ; }","['Delete TypeReference', 'Delete Parameter']",1902,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1600,1600,private native java.lang.String METHOD_1 ( java.lang.String VAR_1 ) ;,private native java.lang.String METHOD_1 ( java.lang.String id ) ;,['Update Parameter'],1904,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1601,1601,public TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) ;,public TYPE_1 [ ] METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",1905,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1602,1602,"public void METHOD_1 ( java.util.List < java.lang.Long > VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 , VAR_1 ) . METHOD_4 ( ) ; }","public void METHOD_1 ( java.util.List < java.lang.Long > VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 , VAR_1 ) . METHOD_4 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 , VAR_1 ) . METHOD_4 ( ) ; }","['Insert Invocation', 'Insert Invocation', 'Insert Invocation', 'Insert TypeAccess', 'Insert VariableRead', 'Insert TypeAccess', 'Insert TypeAccess']",1906,['Insert Invocation'],"['Invocation', 'Invocation', 'Invocation', 'TypeAccess', 'VariableRead', 'TypeAccess', 'TypeAccess']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.14285714285714285,0.25,1,0,6
1603,1603,"public void METHOD_1 ( int x , int y ) { }",public void METHOD_1 ( int x ) { },"['Delete TypeReference', 'Delete Parameter']",1907,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1604,1604,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_3 ( ) . replace ( VAR_3 , VAR_2 ) . commit ( ) ; VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_3 ( ) . replace ( VAR_3 , VAR_2 ) . commit ( ) ; }","['Delete VariableRead', 'Delete Invocation']",1908,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1605,1605,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 , VAR_5 . get ( VAR_6 ) . getId ( ) ) ; VAR_2 . METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 , VAR_5 . get ( position ) . getId ( ) ) ; VAR_2 . METHOD_3 ( intent ) ; }","['Insert FieldRead', 'Delete TypeAccess']",1910,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1606,1606,"TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 ) ;",TYPE_1 METHOD_1 ( int id ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1911,"['Delete Parameter', 'Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,3,0,3
1607,1607,public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },['Update Invocation'],1912,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1608,1608,"public void execute ( final TYPE_1 VAR_1 ) { METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_1 ) ; }","public void execute ( final TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_4 ) ; }","['Move VariableRead', 'Delete TypeAccess']",1913,"['Move VariableRead', 'Delete VariableRead', 'Delete VariableRead']","['VariableRead', 'TypeAccess']","['VariableRead', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.3333333333333333,0.5,0.4,1,2,1
1609,1609,"public boolean METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return false ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return false ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",1914,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1610,1610,public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( STRING_1 ) ; return VAR_1 ; },public java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1915,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.25,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1611,1611,"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { METHOD_2 ( position , true ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { METHOD_2 ( position ) ; }",['Delete Literal'],1916,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1612,1612,public boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) ;,public boolean METHOD_1 ( TYPE_1 < TYPE_2 > set ) ;,['Update Parameter'],1917,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1613,1613,private void update ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; },private void update ( ) { METHOD_1 ( true ) ; METHOD_2 ( ) ; },['Insert Literal'],1918,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1614,1614,public java.lang.String METHOD_1 ( java.lang.CharSequence VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update TypeReference'],1919,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1615,1615,"public java.lang.String execute ( ) throws java.lang.Exception { state = VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; if ( ( state ) >= 0 ) return VAR_4 ; return VAR_5 ; }","public java.lang.String execute ( ) throws java.lang.Exception { state = VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; if ( ( state ) > 0 ) return VAR_4 ; return VAR_5 ; }",['Update BinaryOperator'],1920,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1616,1616,"protected void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 , long VAR_2 ) { long VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_4 . assertTrue ( java.lang.String.format ( STRING_1 , VAR_2 , VAR_3 ) , ( VAR_3 < VAR_2 ) ) ; }","private void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 , long VAR_2 ) { long VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_4 . assertTrue ( java.lang.String.format ( STRING_1 , VAR_2 , VAR_3 ) , ( VAR_3 < VAR_2 ) ) ; }",['Update Wra'],1921,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1617,1617,static final java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return null ; return TYPE_1 . METHOD_2 ( VAR_1 ) . replaceAll ( STRING_1 ) ; },static final java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) . replaceAll ( STRING_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1922,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1618,1618,private static final java.lang.String METHOD_1 ( java.lang.String id ) { return STRING_1 ; },private static final java.lang.String METHOD_1 ( java.lang.String id ) { return id ; },"['Insert VariableRead', 'Delete FieldRead']",1923,['Update VariableRead'],"['VariableRead', 'FieldRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1619,1619,private static long METHOD_1 ( int type ) { return 0 ; },private static native long METHOD_1 ( int type ) ;,"['Insert Wra', 'Delete Literal', 'Delete Return']",1925,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
1620,1620,"TYPE_1 < TYPE_2 > METHOD_1 ( long VAR_1 , TYPE_3 VAR_2 ) ;",TYPE_1 < TYPE_2 > METHOD_1 ( long VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",1926,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1621,1621,protected void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( true ) ; },public void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( true ) ; },['Update Wra'],1927,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1622,1622,"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; }",['Insert TypeAccess'],1929,['Insert VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1623,1623,public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( VAR_1 ) >= INT_1 ? new TYPE_2 ( ) : new TYPE_3 ( ) ) ) ; },public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( VAR_1 ) >= INT_1 ? new TYPE_3 ( ) : new TYPE_3 ( ) ) ) ; },['Update ConstructorCall'],1930,['Update ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1624,1624,private void METHOD_1 ( ) { },public void METHOD_1 ( ) { },['Update Wra'],1931,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1625,1625,"public void METHOD_1 ( TYPE_1 VAR_1 , int index , TYPE_2 VAR_2 ) throws TYPE_3 { assert VAR_2 != null ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . set ( index , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int index , java.lang.String VAR_2 ) throws TYPE_3 { assert VAR_2 != null ; VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; VAR_3 . set ( index , VAR_1 ) ; }","['Update TypeReference', 'Insert ConstructorCall', 'Move VariableRead']",1932,"['Update TypeReference', 'Insert ConstructorCall', 'Insert TypeReference', 'Insert VariableRead']","['TypeReference', 'ConstructorCall', 'VariableRead']","['TypeReference', 'ConstructorCall', 'TypeReference', 'VariableRead']",Exact Match,1.0,0.5,0.6666666666666666,0.5714285714285715,2,2,1
1626,1626,"public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_3 . get ( VAR_4 . getId ( ) ) ) - ( VAR_3 . get ( VAR_5 . getId ( ) ) ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_3 . get ( VAR_4 . getName ( ) ) ) - ( VAR_3 . get ( VAR_5 . getName ( ) ) ) ; }","['Update Invocation', 'Update Invocation']",1933,"['Update Invocation', 'Update Invocation']","['Invocation', 'Invocation']","['Invocation', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1627,1627,"public static int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) ; }","public static int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 ) ; }","['Insert Literal', 'Delete TypeAccess']",1934,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1628,1628,"public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { this . METHOD_1 ( VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { this . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1935,"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'TypeReference', 'TypeReference', 'VariableRead']",GPT Hallucinated Nodes,0.75,0.4,0.6666666666666666,0.5,2,3,1
1629,1629,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( STRING_1 + STRING_2 ) ) ; VAR_1 . METHOD_2 ( ( STRING_3 + STRING_4 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( STRING_1 + STRING_2 ) ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1936,"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']","['VariableRead', 'FieldRead', 'FieldRead', 'BinaryOperator', 'Invocation']","['FieldRead', 'FieldRead', 'BinaryOperator', 'FieldRead', 'FieldRead', 'BinaryOperator', 'Invocation']",GPT Missed Nodes,0.75,0.5714285714285714,0.8,0.6666666666666666,4,3,1
1630,1630,"public void METHOD_1 ( java.lang.String key , TYPE_1 response ) throws java.io.IOException { VAR_1 . METHOD_1 ( key ) ; }",public void METHOD_1 ( java.lang.String key ) throws java.io.IOException { VAR_1 . METHOD_1 ( key ) ; },"['Delete TypeReference', 'Delete Parameter']",1937,"['Delete Parameter', 'Delete TypeReference']","['TypeReference', 'Parameter']","['Parameter', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1631,1631,private java.lang.String METHOD_1 ( int y ) { return java.lang.String . METHOD_2 ( ( ( char ) ( CHAR_1 + y ) ) ) ; },private java.lang.String METHOD_1 ( int y ) { return java.lang.String . METHOD_2 ( ( ( CHAR_1 - 1 ) + ( ( char ) ( y ) ) ) ) ; },"['Insert BinaryOperator', 'Move FieldRead', 'Insert Literal', 'Move TypeReference']",1938,"['Insert Literal', 'Insert BinaryOperator', 'Move VariableRead', 'Move Literal', 'Move BinaryOperator']","['BinaryOperator', 'FieldRead', 'Literal', 'TypeReference']","['Literal', 'BinaryOperator', 'VariableRead', 'Literal', 'BinaryOperator']",Partial Match,0.4,0.4,0.5,0.4444444444444445,2,3,2
1632,1632,private static java.lang.String METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return STRING_1 ; case VAR_3 : return STRING_2 ; case VAR_4 : return STRING_3 ; default : return STRING_4 ; } },private static final java.lang.String METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return STRING_1 ; case VAR_3 : return STRING_2 ; case VAR_4 : return STRING_3 ; default : return STRING_4 ; } },['Insert Wra'],1939,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1633,1633,"public static double METHOD_1 ( TYPE_1 VAR_1 , java.lang.String str ) { return ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 . substring ( 0 , ( ( VAR_2 . length ( ) ) - 1 ) ) ) ) / INT_1 ; }","public static double METHOD_1 ( java.lang.String str ) { return ( TYPE_2 . METHOD_2 ( VAR_2 . substring ( 0 , ( ( VAR_2 . length ( ) ) - 1 ) ) ) ) / INT_1 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1940,"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['TypeReference', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1634,1634,public void METHOD_1 ( ) { java.lang.System.out.print ( ( ( ( ( STRING_1 + ( this . x ) ) + STRING_2 ) + ( this . y ) ) + STRING_3 ) ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( ( ( ( ( STRING_1 + ( this . x ) ) + STRING_2 ) + ( this . y ) ) + STRING_3 ) ) ; },['Update Invocation'],1941,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1635,1635,private void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update Wra'],1942,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1636,1636,"public void METHOD_1 ( java.lang.String url , java.util.Map < java.lang.String , java.lang.Object > parameters , TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) . build ( ) . METHOD_1 ( VAR_2 , url , parameters , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String url , java.util.Map < java.lang.String , java.lang.Object > parameters , TYPE_1 VAR_1 ) { METHOD_2 ( null ) . build ( ) . METHOD_1 ( VAR_2 , url , parameters , VAR_1 ) ; }","['Insert Literal', 'Delete TypeAccess']",1943,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1637,1637,"public static java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return VAR_1 ; }","public static java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return null ; }","['Insert Literal', 'Delete FieldRead']",1944,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1638,1638,public java.lang.Boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? true : VAR_1 ; },public java.lang.Boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? false : VAR_1 ; },['Update Literal'],1945,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1639,1639,"public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; final boolean VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_3 . assertTrue ( VAR_1 ) ; VAR_3 . assertEquals ( 0 , VAR_2 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; final boolean VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_3 . assertTrue ( VAR_1 ) ; VAR_3 . assertEquals ( 1 , VAR_2 . METHOD_4 ( ) ) ; }",['Update Literal'],1946,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1640,1640,"private void METHOD_1 ( java.lang.String text , int line ) { final TYPE_1 VAR_1 = new TYPE_1 ( text , line , this ) ; VAR_2 . add ( VAR_1 ) ; }","private void METHOD_1 ( java.lang.String text , int line ) { final TYPE_1 VAR_1 = new TYPE_1 ( text , line ) ; VAR_2 . add ( VAR_1 ) ; }","['Update ConstructorCall', 'Delete ThisAccess']",1947,['Delete ThisAccess'],"['ConstructorCall', 'ThisAccess']",['ThisAccess'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1641,1641,"public void execute ( ) throws TYPE_1 , TYPE_2 { execute ( VAR_1 , VAR_2 , VAR_3 class , new TYPE_3 ( VAR_4 , VAR_5 ) ) ; }","public void execute ( ) throws TYPE_1 , TYPE_2 { execute ( VAR_1 , VAR_2 , VAR_3 class , new TYPE_3 ( VAR_4 , null ) ) ; }","['Insert Literal', 'Delete FieldRead']",1948,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1642,1642,"public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { name , VAR_1 . toString ( ) , new java.lang.String ( key , VAR_2 ) } ; }","public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { name , VAR_1 . toString ( ) , new java.lang.String ( key ) } ; }","['Update ConstructorCall', 'Delete FieldRead']",1949,"['Delete VariableRead', 'Delete FieldRead']","['ConstructorCall', 'FieldRead']","['VariableRead', 'FieldRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1643,1643,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; return VAR_2 ; },"['Update TypeAccess', 'Update TypeAccess']",1950,"['Update VariableRead', 'Update VariableRead']","['TypeAccess', 'TypeAccess']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1644,1644,"public void METHOD_1 ( int position , TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",1952,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1645,1645,public void METHOD_1 ( float x ) throws TYPE_1 { if ( x > ( VAR_1 ) ) { throw new TYPE_1 ( ( x - ( VAR_1 ) ) ) ; } else { float b = ( VAR_1 ) - x ; VAR_1 = b ; } },public void METHOD_1 ( float x ) throws TYPE_1 { if ( x > ( VAR_1 ) ) { throw new TYPE_1 ( ) ; } else { float b = ( VAR_1 ) - x ; VAR_1 = b ; } },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",1953,"['Delete BinaryOperator', 'Delete VariableRead']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1646,1646,"public TYPE_1 METHOD_1 ( final java.lang.String token ) { return METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( STRING_1 , token ) . METHOD_3 ( STRING_2 , true ) . METHOD_4 ( STRING_3 , TYPE_3 . METHOD_5 ( ) ) ) ; }","public TYPE_1 METHOD_1 ( final java.lang.String token ) { return METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( STRING_1 , token ) . METHOD_3 ( STRING_2 , true ) . METHOD_3 ( STRING_3 , TYPE_3 . METHOD_5 ( ) ) ) ; }",['Update Invocation'],1954,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1647,1647,"public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 , VAR_4 ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 , VAR_1 ) ; VAR_2 . METHOD_5 ( ) ; }","public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 , VAR_4 ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 , true ) ; VAR_2 . METHOD_5 ( ) ; }","['Insert Literal', 'Delete VariableRead']",1955,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1648,1648,"void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 ) { TYPE_1 VAR_6 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 . METHOD_3 ( VAR_5 ) ; }","void METHOD_1 ( float VAR_1 , float VAR_2 , int VAR_5 ) { TYPE_1 VAR_6 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_6 . METHOD_3 ( VAR_5 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",1957,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
1649,1649,public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; TYPE_4 . METHOD_4 ( STRING_1 ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_4 . METHOD_4 ( STRING_1 ) ; },"['Insert Invocation', 'Insert TypeAccess']",1958,"['Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1650,1650,public void update ( ) { if ( ( VAR_1 ) && ( METHOD_1 ( ) ) ) { ( VAR_2 ) ++ ; } else { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = null ; key = STRING_1 ; } },public void update ( ) { if ( ( VAR_1 ) && ( METHOD_1 ( ) ) ) { ( VAR_2 ) ++ ; } else { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = null ; key = null ; } },"['Insert Literal', 'Delete FieldRead']",1959,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1651,1651,public void METHOD_1 ( ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_2 ) ; if ( view == null ) { return ; } this . METHOD_3 ( view ) ; },public void METHOD_1 ( ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( view ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",1960,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return', 'BinaryOperator']",GPT Missed Nodes,0.8333333333333334,1.0,0.8333333333333334,0.9090909090909091,5,0,1
1652,1652,"public void METHOD_1 ( boolean b ) { METHOD_2 ( new android.content.Intent ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( VAR_4 , getString ( VAR_5 ) ) ; } }","public void METHOD_1 ( ) { METHOD_2 ( new android.content.Intent ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( VAR_4 , getString ( VAR_5 ) ) ; } }","['Delete TypeReference', 'Delete Parameter']",1962,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1653,1653,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }",public TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1963,"['Delete Parameter', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead']","['TypeReference', 'Parameter', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['Parameter', 'Invocation', 'Invocation', 'FieldRead']",Partial Match,0.4,0.75,0.5,0.6,3,1,3
1654,1654,public int METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { return VAR_1 . METHOD_2 ( ) ; },public int METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { return 0 ; },"['Insert Literal', 'Delete VariableRead', 'Delete Invocation']",1965,"['Delete VariableRead', 'Delete Invocation', 'Insert Literal']","['Literal', 'VariableRead', 'Invocation']","['VariableRead', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1655,1655,public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ; } else { return VAR_3 ; } },public java.lang.String METHOD_1 ( ) { if ( ( VAR_3 ) != null ) { return ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ; } else { return VAR_3 ; } },['Update FieldRead'],1966,['Update FieldRead'],['FieldRead'],['FieldRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1656,1656,protected boolean METHOD_1 ( ) { return VAR_1 ; },public boolean METHOD_1 ( ) { return VAR_1 ; },['Update Wra'],1967,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1657,1657,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; assertTrue ( VAR_3 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( VAR_4 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; assertTrue ( VAR_3 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 . METHOD_3 ( ) ) ; },['Update TypeAccess'],1968,['Update FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1658,1658,private TYPE_1 getColor ( java.lang.String message ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { if ( VAR_3 . contains ( VAR_4 . toString ( ) ) ) return VAR_1 ; } return VAR_5 ; },public TYPE_1 getColor ( java.lang.String message ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { if ( VAR_3 . contains ( VAR_4 . toString ( ) ) ) return VAR_1 ; } return VAR_5 ; },['Update Wra'],1969,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1659,1659,public void METHOD_1 ( ) { this . METHOD_2 ( true ) ; this . METHOD_3 ( false ) ; this . METHOD_4 ( false ) ; },private void METHOD_1 ( ) { this . METHOD_2 ( true ) ; this . METHOD_3 ( false ) ; this . METHOD_4 ( false ) ; },['Update Wra'],1970,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1660,1660,protected void METHOD_1 ( final TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( ) ; },protected final void METHOD_1 ( final TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( ) ; },['Insert Wra'],1971,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1661,1661,"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { java.util.List < TYPE_3 > VAR_1 = VAR_2 . METHOD_2 ( 1 ) ; VAR_3 . info ( VAR_4 . METHOD_3 ( VAR_1 ) ) ; assert VAR_1 != null ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { java.util.List < TYPE_3 > VAR_1 = VAR_2 . METHOD_2 ( 0 ) ; VAR_3 . info ( VAR_4 . METHOD_3 ( VAR_1 ) ) ; assert VAR_1 != null ; }",['Update Literal'],1972,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1662,1662,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) ;","public TYPE_1 METHOD_1 ( TYPE_3 VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) ;","['Delete TypeReference', 'Delete Parameter']",1973,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1663,1663,public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; return ( VAR_2 != null ) && ( ( VAR_2 . METHOD_3 ( VAR_3 class ) ) != null ) ; },private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; return ( VAR_2 != null ) && ( ( VAR_2 . METHOD_3 ( VAR_3 class ) ) != null ) ; },"['Update Wra', 'Delete Wra']",1974,"['Delete Wra', 'Delete Wra']","['Wra', 'Wra']","['Wra', 'Wra']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
1664,1664,public abstract void update ( TYPE_1 VAR_1 ) ;,public void update ( TYPE_1 VAR_1 ) { },['Delete Wra'],1976,"['Delete Wra', 'Insert Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1665,1665,"public void METHOD_1 ( java.lang.String key , boolean value ) { METHOD_2 ( ) . METHOD_3 ( key , value ) ; }","protected void METHOD_1 ( java.lang.String key , boolean value ) { METHOD_2 ( ) . METHOD_3 ( key , value ) ; }",['Update Wra'],1977,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1666,1666,"private void METHOD_1 ( boolean VAR_1 , java.lang.String ... VAR_2 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_1 , ( ( java.lang.String [ ] ) ( null ) ) ) ; }","private void METHOD_1 ( java.lang.String ... VAR_2 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , ( ( java.lang.String [ ] ) ( null ) ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1978,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1667,1667,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 , android.content.Context context ) { return new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , context ) ; }","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 ) { return new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1979,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1668,1668,"public void METHOD_1 ( ) { final java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , METHOD_3 ( ) , false ) ; VAR_3 . execute ( ) ; }","public void METHOD_1 ( ) { final java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , METHOD_3 ( ) , true ) ; VAR_3 . execute ( ) ; }",['Update Literal'],1981,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1669,1669,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getValue ( VAR_4 class ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( VAR_5 ) , false ) ; VAR_6 = true ; METHOD_6 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getValue ( VAR_4 class ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( VAR_5 ) ) ; VAR_6 = true ; METHOD_6 ( ) ; },['Delete Literal'],1982,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1670,1670,"public void METHOD_1 ( ) { METHOD_2 ( ( - INT_1 ) , FLOAT_1 , VAR_1 , false ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ( - INT_1 ) , 0 , VAR_1 , false ) ; }","['Insert Literal', 'Delete TypeAccess']",1983,"['Insert Literal', 'Delete VariableRead']","['Literal', 'TypeAccess']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1671,1671,"public double METHOD_1 ( ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; }","public int METHOD_1 ( ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; }",['Update TypeReference'],1984,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1672,1672,public TYPE_1 METHOD_1 ( ) { return METHOD_1 ( true ) ; },public TYPE_1 METHOD_1 ( ) { return METHOD_1 ( false ) ; },['Update Literal'],1985,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1673,1673,private void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 [ VAR_3 ] . METHOD_2 ( ) ; VAR_4 . setText ( VAR_1 ) ; },private void METHOD_1 ( ) { int VAR_1 = VAR_2 [ VAR_3 ] . METHOD_2 ( ) ; VAR_4 . setText ( VAR_1 ) ; },['Update TypeReference'],1987,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1674,1674,java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { int b = VAR_1 . METHOD_2 ( ) ; return java.lang.Boolean . METHOD_3 ( ( ( b & INT_1 ) != 0 ) ) ; },java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { int b = VAR_1 . METHOD_2 ( ) ; return java.lang.Boolean . METHOD_3 ( ( ( b & 1 ) != 0 ) ) ; },"['Insert Literal', 'Delete FieldRead']",1988,"['Delete TypeAccess', 'Insert Literal']","['Literal', 'FieldRead']","['TypeAccess', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1675,1675,"public double get ( int i , int j ) { return VAR_1 . get ( i ) . get ( j ) ; }","private double get ( int i , int j ) { return 1 ; }","['Update Wra', 'Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1989,"['Update Wra', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Insert Literal']","['Wra', 'Literal', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['Wra', 'VariableRead', 'Invocation', 'Invocation', 'VariableRead', 'Invocation', 'Literal']",GPT Missed Nodes,0.8,0.8571428571428571,0.8571428571428571,0.8571428571428571,6,1,1
1676,1676,"public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = new TYPE_3 ( VAR_3 ) ; field = new TYPE_4 ( VAR_4 , VAR_5 . height , VAR_3 ) ; VAR_6 = new TYPE_5 ( field , VAR_3 , VAR_2 ) ; }","public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = new TYPE_3 ( ) ; field = new TYPE_4 ( VAR_4 , VAR_5 . height , VAR_3 ) ; VAR_6 = new TYPE_5 ( field , VAR_3 , VAR_2 ) ; }",['Delete FieldRead'],1990,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1677,1677,"public static TYPE_1 METHOD_1 ( int VAR_1 , int size , int VAR_2 ) { return new TYPE_1 ( VAR_1 , size , VAR_2 , VAR_3 ) ; }","public static TYPE_1 METHOD_1 ( int VAR_1 , int size ) { return new TYPE_1 ( VAR_1 , size , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1991,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1678,1678,public void METHOD_1 ( android.content.Context VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_1 ( this ) ; } VAR_3 . METHOD_1 ( VAR_1 ) ; },"public void METHOD_1 ( android.content.Context VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_1 ( VAR_2 , this ) ; } }","['Update ConstructorCall', 'Insert FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1992,"['Insert VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete VariableRead']","['ConstructorCall', 'FieldRead', 'TypeAccess', 'VariableRead', 'Invocation']","['VariableRead', 'ThisAccess', 'Invocation', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.4,0.4444444444444445,2,2,3
1679,1679,public int METHOD_1 ( int y ) { y = y % ( this . VAR_1 ) ; if ( y < 0 ) { y = y + ( this . VAR_1 ) ; } return y ; },public int METHOD_1 ( int y ) { y = y % ( this . VAR_1 ) ; if ( y < 0 ) { y = y + ( this . VAR_1 ) ; } return x ; },"['Insert FieldRead', 'Delete VariableRead']",1993,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1680,1680,private void METHOD_1 ( ) { VAR_1 . commit ( ) ; },public void METHOD_1 ( ) { VAR_1 . commit ( ) ; },['Update Wra'],1996,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1681,1681,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { this . VAR_4 . add ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_4 . add ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",1997,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1682,1682,"public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( VAR_2 class , false ) ) ; TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( VAR_2 class , false ) ) ; TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ""0"" ) ) ; }","['Insert Literal', 'Delete TypeAccess']",1998,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1683,1683,"public java.util.List < java.lang.Object [ ] > METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_2 > VAR_2 , long VAR_3 ) { java.lang.String VAR_4 = METHOD_2 ( ) ; return METHOD_3 ( VAR_1 , VAR_2 , VAR_4 , VAR_3 ) ; }","public java.util.List < java.lang.Object [ ] > METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_2 > VAR_2 ) { java.lang.String VAR_4 = METHOD_2 ( ) ; return METHOD_3 ( VAR_1 , VAR_2 , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",1999,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1684,1684,"public static TYPE_1 METHOD_1 ( TYPE_2 type , TYPE_3 [ ] VAR_1 ) { return new TYPE_4 ( VAR_2 , type , type , new TYPE_5 ( STRING_1 , TYPE_6 . METHOD_2 ( VAR_3 , VAR_1 ) , java.util.Arrays.asList ( VAR_1 ) , VAR_4 ) ) ; }","public static TYPE_1 METHOD_1 ( TYPE_2 type , TYPE_3 [ ] VAR_1 ) { return new TYPE_4 ( VAR_2 , type , type , new TYPE_5 ( java.util.Arrays.asList ( VAR_1 ) , VAR_4 ) ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2000,"['Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead']","['FieldRead', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['Literal', 'TypeAccess', 'Invocation', 'Invocation', 'FieldRead']",Partial Match,0.6,0.6,0.6,0.6,3,2,2
1685,1685,"public void update ( ) { update ( true , null ) ; }","public void update ( ) { update ( false , null ) ; }",['Update Literal'],2001,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1686,1686,public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; return METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { this . VAR_1 = false ; return METHOD_2 ( ) ; },['Insert ThisAccess'],2002,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1687,1687,protected void METHOD_1 ( ) { this . VAR_1 . get ( ) . METHOD_2 ( ) ; this . VAR_2 = TYPE_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { this . VAR_1 . get ( ) . METHOD_2 ( ) ; this . VAR_2 = null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2003,"['Delete TypeAccess', 'Delete Invocation', 'Insert Literal']","['Literal', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1688,1688,"protected static boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { return VAR_1 == null ? VAR_2 == null : VAR_3 . equals ( VAR_2 ) ; }","private static boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { return VAR_1 == null ? VAR_2 == null : VAR_3 . equals ( VAR_2 ) ; }",['Update Wra'],2005,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1689,1689,TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { getData ( context ) ; } if ( ( VAR_1 ) != null ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; } return VAR_2 ; },TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { getData ( ) ; } if ( ( VAR_1 ) != null ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; } return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2006,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1690,1690,"private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( true , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( this , 0 ) ; VAR_2 . show ( METHOD_5 ( ) , STRING_1 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_4 ( this , 0 ) ; VAR_2 . show ( METHOD_5 ( ) , STRING_1 ) ; }",['Delete Invocation'],2007,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1691,1691,"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( id , VAR_1 , VAR_2 , VAR_3 . METHOD_1 ( ) ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( id , VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation']",2008,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1692,1692,"public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; ++ i ) { METHOD_2 ( i , false ) ; } }",public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; ++ i ) { METHOD_2 ( false ) ; } },['Delete VariableRead'],2009,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1693,1693,"TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;",TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2011,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1694,1694,public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( new java.io.File ( STRING_1 ) ) ; },"public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( null , new java.io.File ( STRING_1 ) ) ; }","['Update ConstructorCall', 'Insert Literal']",2012,['Insert Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1695,1695,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( ) ; VAR_2 . setText ( VAR_3 . toString ( ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( ) ; VAR_2 . setText ( VAR_3 . toString ( ) ) ; },['Update Wra'],2013,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1696,1696,"public native void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String string ) ;","public native void METHOD_1 ( TYPE_1 element , java.lang.String string ) ;",['Update Parameter'],2014,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1697,1697,public static java.lang.String METHOD_1 ( int count ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; for ( int i = 0 ; i < count ; ++ i ) VAR_2 . append ( STRING_1 ) ; return VAR_2 . toString ( ) ; },private static java.lang.String METHOD_1 ( int count ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; for ( int i = 0 ; i < count ; ++ i ) VAR_2 . append ( STRING_1 ) ; return VAR_2 . toString ( ) ; },['Update Wra'],2016,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1698,1698,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; java.lang.System.out.println ( STRING_1 ) ; }","['Delete VariableRead', 'Delete Invocation']",2017,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1699,1699,public static int METHOD_1 ( int VAR_1 ) { return INT_1 * VAR_1 ; },public static int METHOD_1 ( int VAR_1 ) { return 0 ; },"['Insert Literal', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator']",2018,"['Delete TypeAccess', 'Delete BinaryOperator', 'Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead', 'VariableRead', 'BinaryOperator']","['TypeAccess', 'BinaryOperator', 'VariableRead', 'Literal']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
1700,1700,private final void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 listener : VAR_2 ) { listener . METHOD_2 ( VAR_1 ) ; } },public final void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 listener : VAR_2 ) { listener . METHOD_2 ( VAR_1 ) ; } },['Update Wra'],2019,"['Delete Wra', 'Insert Wra']",['Wra'],"['Wra', 'Wra']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
1701,1701,public void add ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( this . VAR_3 . size ( ) ) > INT_1 ) { this . VAR_2 . METHOD_2 ( ) ; } this . VAR_4 = VAR_1 ; },public void add ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( this . VAR_3 . size ( ) ) > INT_1 ) { this . VAR_3 . remove ( 0 ) ; } this . VAR_4 = VAR_1 ; },"['Update Invocation', 'Update FieldRead', 'Insert Literal']",2020,"['Update FieldRead', 'Update Invocation', 'Insert Literal']","['Invocation', 'FieldRead', 'Literal']","['FieldRead', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1702,1702,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Integer VAR_2 , java.lang.String name , java.lang.String VAR_3 , java.lang.String VAR_4 ) { return METHOD_1 ( type , VAR_1 , VAR_2 , name , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String name , java.lang.String VAR_3 , java.lang.String VAR_4 ) { return METHOD_1 ( type , VAR_1 , VAR_2 , name , VAR_3 , VAR_4 ) ; }",['Update TypeReference'],2021,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1703,1703,"public synchronized void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; try { METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { VAR_5 . error ( STRING_2 , VAR_4 ) ; } }","public synchronized void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; try { METHOD_2 ( ) ; VAR_5 . info ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { VAR_5 . error ( STRING_2 , VAR_4 ) ; } }","['Update Invocation', 'Update TypeAccess']",2023,"['Update FieldRead', 'Update Invocation']","['Invocation', 'TypeAccess']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1704,1704,"public static void assertNotNull ( java.lang.Object VAR_1 ) { VAR_2 . assertNotNull ( VAR_1 , null ) ; }",public static void assertNotNull ( java.lang.Object VAR_1 ) { VAR_2 . assertTrue ( ( VAR_1 == null ) ) ; },"['Update Invocation', 'Insert BinaryOperator', 'Move VariableRead', 'Move Literal']",2024,"['Update Invocation', 'Insert BinaryOperator', 'Insert Literal', 'Delete Literal']","['Invocation', 'BinaryOperator', 'VariableRead', 'Literal']","['Invocation', 'BinaryOperator', 'Literal', 'Literal']",GPT Missed Nodes,0.75,0.5,0.5,0.5,2,2,2
1705,1705,public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( 0 ) ) == true ) { METHOD_3 ( STRING_1 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == true ) { METHOD_3 ( STRING_1 ) ; } },['Delete Literal'],2025,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1706,1706,"private TYPE_1 METHOD_1 ( java.util.List < java.lang.String > start , java.util.List < java.lang.String > end , boolean VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( start , end , VAR_1 , VAR_4 , VAR_2 ) ; return VAR_3 ; }","private TYPE_1 METHOD_1 ( java.util.List < java.lang.String > start , java.util.List < java.lang.String > end , boolean VAR_1 ) { TYPE_3 VAR_3 = new TYPE_3 ( start , end , VAR_1 , VAR_4 ) ; return VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2026,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1707,1707,"public boolean METHOD_1 ( java.lang.String key , boolean VAR_1 ) { java.lang.Object obj = get ( key ) ; if ( obj == null ) return false ; if ( obj instanceof java.lang.Boolean ) return ( ( java.lang.Boolean ) ( obj ) ) ; return VAR_1 ; }",public boolean METHOD_1 ( java.lang.String key ) { java.lang.Object obj = get ( key ) ; if ( obj == null ) return false ; if ( obj instanceof java.lang.Boolean ) return ( ( java.lang.Boolean ) ( obj ) ) ; return false ; },"['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2028,"['Delete Parameter', 'Delete VariableRead', 'Delete Return', 'Insert Literal']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'Return', 'Literal']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
1708,1708,"public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( true , VAR_1 , true ) ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( true , VAR_1 ) ; }",['Delete Literal'],2029,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1709,1709,public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 + 1 ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",2030,"['Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'Literal', 'BinaryOperator']","['BinaryOperator', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1710,1710,"private static long METHOD_1 ( long VAR_1 , long VAR_2 , int VAR_3 , int method , int VAR_4 , long VAR_5 ) { return 0 ; }","private static native long METHOD_1 ( long VAR_1 , long VAR_2 , int VAR_3 , int method , int VAR_4 , long VAR_5 ) ;","['Insert Wra', 'Delete Literal', 'Delete Return']",2031,"['Insert Wra', 'Delete Block', 'Delete Return', 'Delete Literal']","['Wra', 'Literal', 'Return']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
1711,1711,"public void execute ( final TYPE_1 VAR_1 ) { execute ( false , VAR_1 ) ; }","public void execute ( final TYPE_1 VAR_1 ) { execute ( true , VAR_1 ) ; }",['Update Literal'],2033,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1712,1712,"public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_8 ) ; }",['Delete TypeAccess'],2035,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1713,1713,"public static void METHOD_1 ( java.util.Date time ) { if ( time != null ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , VAR_2 . getTime ( ) ) . METHOD_5 ( ) ; } }","public static void METHOD_1 ( java.util.Date time ) { if ( time != null ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , VAR_2 . getTime ( ) ) . commit ( ) ; } }",['Update Invocation'],2036,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1714,1714,"java.util.List < TYPE_1 > update ( android.content.Context context , TYPE_2 VAR_1 ) ;",java.util.List < TYPE_1 > update ( TYPE_2 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2037,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1715,1715,public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . VAR_1 ) >= ( METHOD_2 ( ) . METHOD_3 ( 0 ) ) ; },public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . VAR_1 ) > ( METHOD_2 ( ) . METHOD_3 ( 0 ) ) ; },['Update BinaryOperator'],2038,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1716,1716,"private static void METHOD_1 ( TYPE_1 query , java.util.Map < java.lang.Object , TYPE_2 > VAR_1 , TYPE_3 VAR_2 , boolean VAR_3 ) throws java.io.IOException { TYPE_4 . METHOD_2 ( query . METHOD_3 ( VAR_2 ) , VAR_1 , VAR_2 , VAR_3 ) ; }","private static void METHOD_1 ( TYPE_1 query , java.util.Map < java.lang.Object , TYPE_2 > VAR_1 , TYPE_3 VAR_2 , boolean VAR_3 ) throws java.io.IOException { TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( query , VAR_2 ) , VAR_1 , VAR_2 , VAR_3 ) ; }",['Insert TypeAccess'],2039,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert VariableRead', 'Delete FieldRead', 'Delete Invocation']",['TypeAccess'],"['TypeAccess', 'TypeAccess', 'VariableRead', 'FieldRead', 'Invocation']",GPT Hallucinated Nodes,0.25,0.2,1.0,0.33333333333333337,1,4,0
1717,1717,protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },['Update Wra'],2040,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1718,1718,public double METHOD_1 ( ) { double VAR_1 = this . METHOD_2 ( 1 ) ; if ( ( VAR_1 < 0 ) && ( VAR_1 >= ( - FLOAT_1 ) ) ) { return 0 ; } return VAR_1 ; },public double METHOD_1 ( ) { double VAR_1 = this . METHOD_2 ( 1 ) ; if ( ( VAR_1 < 0 ) && ( VAR_1 > ( - FLOAT_1 ) ) ) { return 0 ; } return VAR_1 ; },['Update BinaryOperator'],2041,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1719,1719,"public void METHOD_1 ( java.lang.String message ) { final java.lang.String VAR_1 = message ; VAR_2 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { TYPE_2 . METHOD_4 ( VAR_3 this , VAR_1 , VAR_4 ) . show ( ) ; } } ) ; }","private void METHOD_1 ( java.lang.String message ) { final java.lang.String VAR_1 = message ; VAR_2 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { TYPE_2 . METHOD_4 ( VAR_3 this , VAR_1 , VAR_4 ) . show ( ) ; } } ) ; }",['Update Wra'],2042,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1720,1720,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( ( VAR_3 . getId ( ) ) + STRING_1 ) , VAR_4 . METHOD_3 ( VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( ( VAR_3 . getName ( ) ) + STRING_1 ) , VAR_4 . METHOD_3 ( VAR_1 ) ) ; }",['Update Invocation'],2044,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1721,1721,"private void METHOD_1 ( java.lang.String words , int VAR_1 ) { VAR_2 . METHOD_1 ( words , VAR_1 , null ) ; }","private void METHOD_1 ( java.lang.String words , int VAR_1 ) { VAR_2 . METHOD_1 ( words , VAR_1 , null , null ) ; }",['Insert Literal'],2045,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1722,1722,public void METHOD_1 ( ) { VAR_1 = VAR_2 . list ( VAR_3 . METHOD_2 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 . list ( VAR_3 . METHOD_2 ( ) ) ; },['Update Wra'],2047,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1723,1723,"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , new java.lang.String [ ] { ""true"" , ""false"" } , 0 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , new java.lang.String [ ] { ""true"" , ""true"" } , 0 ) ; }",['Update Literal'],2048,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1724,1724,private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete VariableRead', 'Delete Invocation']",2049,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1725,1725,"public int METHOD_1 ( TYPE_1 t , int id ) { VAR_1 . add ( id , t ) ; return id ; }","public int METHOD_1 ( TYPE_1 t , int id ) { VAR_1 . add ( t ) ; return VAR_1 . size ( ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Delete VariableRead', 'Delete VariableRead']",2050,"['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Insert VariableRead', 'Insert Invocation', 'Update Return']","['Invocation', 'TypeAccess', 'VariableRead', 'VariableRead']","['VariableRead', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation', 'Return']",Partial Match,0.5,0.5,0.75,0.6,3,3,1
1726,1726,"public static boolean METHOD_1 ( int VAR_1 , TYPE_1 error ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , error ) ; }",public static boolean METHOD_1 ( TYPE_1 error ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( error ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2051,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1727,1727,"public TYPE_1 METHOD_1 ( double VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) , VAR_1 ) ; VAR_4 = false ; METHOD_6 ( ) ; return this ; }","public TYPE_1 METHOD_1 ( double VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( false ) , VAR_2 . METHOD_5 ( false ) , VAR_1 ) ; VAR_4 = false ; METHOD_6 ( ) ; return this ; }","['Insert Literal', 'Insert Literal']",2053,"['Insert Literal', 'Insert Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1728,1728,protected boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) <= ( VAR_2 ) ; },protected boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) >= ( VAR_2 ) ; },['Update BinaryOperator'],2054,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1729,1729,protected TYPE_1 METHOD_1 ( ) throws java.io.IOException { return VAR_1 . METHOD_2 ( ) ; },private TYPE_1 METHOD_1 ( ) throws java.io.IOException { return VAR_1 . METHOD_2 ( ) ; },['Update Wra'],2056,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1730,1730,private void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 == 0 ? VAR_3 : VAR_4 ) ) ; },private void METHOD_1 ( int value ) { VAR_2 . METHOD_2 ( ( value == 0 ? VAR_3 : VAR_4 ) ) ; },"['Update Parameter', 'Update VariableRead']",2057,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1731,1731,"private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 , null , 1 , 0 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 , null , 0 , 0 ) ; }",['Update Literal'],2058,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1732,1732,private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) <= ( VAR_3 ) ) { METHOD_2 ( VAR_1 ) ; } ( VAR_2 ) ++ ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { METHOD_2 ( VAR_1 ) ; } ( VAR_2 ) ++ ; },['Update BinaryOperator'],2059,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1733,1733,public java.lang.String METHOD_1 ( ) { TYPE_1 t = getClass ( ) . METHOD_2 ( VAR_1 class ) ; return t == null ? getClass ( ) . METHOD_3 ( ) : VAR_2 . name ( ) ; },public java.lang.String METHOD_1 ( ) { TYPE_1 t = getClass ( ) . METHOD_2 ( VAR_1 class ) ; return t == null ? getClass ( ) . getName ( ) : VAR_2 . name ( ) ; },['Update Invocation'],2062,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1734,1734,public final boolean METHOD_1 ( java.lang.String name ) { return ( ( context ) != null ) && ( context . METHOD_2 ( name ) ) ; },protected final boolean METHOD_1 ( java.lang.String name ) { return ( ( context ) != null ) && ( context . METHOD_2 ( name ) ) ; },['Update Wra'],2064,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1735,1735,"public void METHOD_1 ( ) throws TYPE_1 { org.testng.Assert.assertEquals ( METHOD_2 ( VAR_1 , 1 , 1 ) , 0 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { assertEquals ( METHOD_2 ( VAR_1 , 1 , 1 ) , 0 ) ; }",['Delete FieldRead'],2065,['Delete TypeAccess'],['FieldRead'],['TypeAccess'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1736,1736,"public static TYPE_1 METHOD_1 ( final int min , final int VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( min , VAR_1 ) ) . msg ( ( ( ( ( STRING_1 + min ) + STRING_2 ) + VAR_1 ) + STRING_3 ) ) ; }","public static TYPE_1 METHOD_1 ( final int min , final int VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_1 ) ) . msg ( ( ( ( ( STRING_1 + min ) + STRING_2 ) + VAR_1 ) + STRING_3 ) ) ; }",['Update VariableRead'],2066,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1737,1737,"public static java.lang.String METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( new java.io.File ( path ) , VAR_1 ) ; }","public static java.lang.String METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( new java.io.File ( path ) ) ; }",['Delete VariableRead'],2067,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1738,1738,"protected void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_3 ( ) , null ) . METHOD_5 ( ) ; }","protected void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_3 ( ) , null , false ) . METHOD_5 ( ) ; }",['Insert Literal'],2068,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1739,1739,"public void METHOD_1 ( ) { p . METHOD_2 ( ) . METHOD_3 ( p , STRING_1 ) ; }",public void METHOD_1 ( ) { p . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; },['Delete FieldRead'],2069,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1740,1740,public TYPE_1 METHOD_1 ( TYPE_2 TYPE_3 ) { if ( TYPE_3 == null ) return null ; return VAR_1 . METHOD_1 ( METHOD_2 ( ) ) ; },public TYPE_1 METHOD_1 ( TYPE_2 TYPE_3 ) { return VAR_1 . METHOD_1 ( METHOD_2 ( ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2071,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'BinaryOperator', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1741,1741,public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . update ( VAR_1 ) ; },public static java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . update ( VAR_1 ) ; return 1 ; },"['Update TypeReference', 'Insert Return', 'Insert Literal']",2072,"['Insert TypeReference', 'Insert Return', 'Insert Literal']","['TypeReference', 'Return', 'Literal']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1742,1742,"public void METHOD_1 ( TYPE_1 error , java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( getString ( VAR_4 ) ) ; VAR_5 . setEnabled ( true ) ; }","public void METHOD_1 ( TYPE_1 error , java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( getString ( VAR_4 ) ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2073,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeAccess', 'Literal', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1743,1743,public TYPE_1 < TYPE_2 < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; },"public TYPE_1 < TYPE_2 < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 , null ) ; }",['Insert Literal'],2074,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1744,1744,"public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( ) ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2075,"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']","['VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'BinaryOperator']",Partial Match,0.5,0.8,0.8,0.8000000000000002,4,1,1
1745,1745,public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; new TYPE_1 ( ) . METHOD_4 ( ) ; info ( STRING_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; new TYPE_1 ( ) . METHOD_4 ( this ) ; info ( STRING_1 ) ; },['Insert ThisAccess'],2076,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1746,1746,"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 out ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { out.write ( VAR_1 ) ; } out.write ( id ) ; super . METHOD_1 ( STRING_1 , out ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 out ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { out.write ( VAR_1 ) ; } out.write ( id ) ; super . METHOD_1 ( VAR_1 , out ) ; }","['Insert VariableRead', 'Delete TypeAccess']",2077,"['Update Literal', 'Update Invocation']","['VariableRead', 'TypeAccess']","['Literal', 'Invocation']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1747,1747,"public static TYPE_1 METHOD_1 ( TYPE_2 t , byte [ ] b ) { return null ; }","public static TYPE_1 METHOD_1 ( TYPE_2 t , byte [ ] b ) { return t . METHOD_1 ( b ) ; }","['Insert Invocation', 'Insert VariableRead', 'Insert VariableRead', 'Delete Literal']",2078,"['Delete Literal', 'Insert VariableRead', 'Insert Invocation']","['Invocation', 'VariableRead', 'VariableRead', 'Literal']","['Literal', 'VariableRead', 'Invocation']",Exact Match,1.0,1.0,0.75,0.8571428571428571,3,0,1
1748,1748,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_1 = new TYPE_1 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( VAR_1 , VAR_1 . METHOD_6 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_1 = new TYPE_1 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation']",2079,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1749,1749,"public static TYPE_1 METHOD_1 ( int id , int VAR_1 , boolean VAR_2 ) { if ( VAR_3 ) throw new TYPE_2 ( STRING_1 ) ; return new TYPE_1 ( id , false , VAR_1 , VAR_2 ) ; }","public static TYPE_1 METHOD_1 ( int id , int VAR_1 , boolean VAR_2 ) { if ( VAR_3 ) throw new TYPE_2 ( STRING_1 ) ; return new TYPE_1 ( id , false , null , VAR_1 , VAR_2 ) ; }","['Update ConstructorCall', 'Insert Literal']",2080,['Insert Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1750,1750,public void METHOD_1 ( ) { for ( java.lang.String VAR_1 : VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; } },private void METHOD_1 ( ) { for ( java.lang.String VAR_1 : VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; } },['Update Wra'],2082,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1751,1751,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = VAR_3 . first ( ) . file ( ) . METHOD_2 ( ) . replace ( CHAR_1 , CHAR_2 ) ; METHOD_3 ( false ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = VAR_3 . first ( ) . file ( ) . METHOD_2 ( ) . replace ( CHAR_1 , CHAR_2 ) ; METHOD_3 ( ) ; }",['Delete Literal'],2083,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1752,1752,"public TYPE_1 handle ( TYPE_2 VAR_1 , TYPE_3 response ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_4 . METHOD_1 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; return new TYPE_1 ( VAR_2 , STRING_5 ) ; }","public TYPE_1 handle ( TYPE_2 VAR_1 , TYPE_3 response ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_4 . METHOD_1 ( STRING_1 , STRING_2 ) ; return new TYPE_1 ( VAR_2 , STRING_5 ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",2084,"['Delete Literal', 'Delete Literal']","['TypeAccess', 'TypeAccess']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1753,1753,public void METHOD_1 ( android.view.View view ) { if ( ( context ) instanceof TYPE_1 ) { ( ( TYPE_1 ) ( context ) ) . METHOD_2 ( string ) ; } },public void METHOD_1 ( android.view.View view ) { if ( ( context ) instanceof TYPE_1 ) { ( ( TYPE_1 ) ( context ) ) . METHOD_2 ( string ) ; } else { } },['Insert Block'],2085,"['Insert If', 'Insert Block']",['Block'],"['If', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1754,1754,"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , this ) ; }","['Update Invocation', 'Move Invocation', 'Insert Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Move TypeAccess', 'Move TypeAccess', 'Delete Invocation']",2086,"['Delete ThisAccess', 'Insert ThisAccess', 'Update Invocation']","['Invocation', 'Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['ThisAccess', 'ThisAccess', 'Invocation']",Partial Match,0.3333333333333333,0.3333333333333333,0.125,0.18181818181818182,1,2,7
1755,1755,"public synchronized void METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_1 ) ; }","public synchronized void METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; }",['Insert VariableRead'],2087,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1756,1756,"public static void METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 ) { if ( ! ( VAR_3 ) ) { java.lang.System.err.println ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_3 = false ; } }","public static void METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 ) { if ( ! ( VAR_3 ) ) { java.lang.System.err.println ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_3 = true ; } }",['Update Literal'],2088,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1757,1757,public final void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },protected final void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update Wra'],2090,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1758,1758,"public void METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String data ) { if ( VAR_3 . contains ( VAR_1 ) ) VAR_3 . remove ( ( ( java.lang.Integer ) ( VAR_1 ) ) ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String data ) { if ( VAR_3 . contains ( VAR_1 ) ) VAR_3 . remove ( VAR_1 ) ; }",['Delete TypeReference'],2091,"['Delete TypeReference', 'Delete VariableRead']",['TypeReference'],"['TypeReference', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1759,1759,"protected TYPE_1 METHOD_1 ( TYPE_2 context , java.lang.String path ) throws TYPE_3 { TYPE_1 file = METHOD_2 ( context , path ) ; if ( file == null ) { throw new TYPE_3 ( ( ( STRING_1 + path ) + STRING_2 ) ) ; } return file ; }","protected TYPE_1 METHOD_1 ( TYPE_2 context , java.lang.String path ) throws TYPE_3 { TYPE_1 file = METHOD_2 ( context , path ) ; if ( file == null ) { throw new TYPE_3 ( ( ( STRING_1 + file ) + STRING_2 ) ) ; } return file ; }",['Update VariableRead'],2092,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1760,1760,"private boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getName ( ) , true ) ; }","private boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . getName ( ) , false ) ; }",['Update Literal'],2094,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1761,1761,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2095,"['Delete Invocation', 'Delete Literal', 'Delete Literal']","['VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation']","['Invocation', 'Literal', 'Literal']",Partial Match,0.25,0.3333333333333333,0.25,0.28571428571428575,1,2,3
1762,1762,"public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 p = new TYPE_1 ( ) ; p . METHOD_2 ( false ) ; p . METHOD_3 ( METHOD_4 ( STRING_1 ) ) ; VAR_1 . assertEquals ( STRING_2 , VAR_2 . getValue ( STRING_3 ) ) ; }","public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 p = new TYPE_1 ( ) ; p . METHOD_2 ( false ) ; p . METHOD_3 ( METHOD_4 ( STRING_1 ) ) ; assertEquals ( STRING_2 , VAR_2 . getValue ( STRING_3 ) ) ; }",['Update TypeAccess'],2096,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1763,1763,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( new java.util.Date ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",2097,"['Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall', 'Invocation']","['Invocation', 'ConstructorCall', 'TypeReference']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1764,1764,public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_1 ( 0 ) ) == true ) { METHOD_2 ( STRING_1 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_1 ( ) ) == true ) { METHOD_2 ( STRING_1 ) ; } },['Delete Literal'],2098,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1765,1765,public long METHOD_1 ( int VAR_1 ) { return VAR_1 ; },public long METHOD_1 ( int VAR_1 ) { return 0 ; },"['Insert Literal', 'Delete VariableRead']",2099,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1766,1766,"private java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , boolean VAR_4 , java.lang.String VAR_5 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 , VAR_5 ) ; }","private java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",2100,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
1767,1767,public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( STRING_1 ) ; new TYPE_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( STRING_1 ) ; new TYPE_3 ( this ) ; METHOD_4 ( ) ; },['Delete Invocation'],2101,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1768,1768,"public void METHOD_1 ( java.lang.Long id , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; this . VAR_4 . update ( VAR_3 , VAR_1 , VAR_2 , id ) ; }","public void METHOD_1 ( java.lang.Long id , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; this . VAR_4 . update ( VAR_3 , VAR_1 , id ) ; }",['Delete VariableRead'],2102,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1769,1769,private void event ( TYPE_1 event ) { METHOD_1 ( ) . METHOD_2 ( event . METHOD_3 ( ) ) . METHOD_4 ( event . METHOD_5 ( ) ) . METHOD_6 ( event . METHOD_7 ( ) ) ; },public void event ( TYPE_1 event ) { METHOD_1 ( ) . METHOD_2 ( event . METHOD_3 ( ) ) . METHOD_4 ( event . METHOD_5 ( ) ) . METHOD_6 ( event . METHOD_7 ( ) ) ; },['Update Wra'],2103,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1770,1770,public int METHOD_1 ( java.lang.String VAR_1 ) { return INT_1 ; },public int METHOD_1 ( java.lang.String VAR_1 ) { return 1 ; },"['Insert Literal', 'Delete FieldRead']",2104,"['Delete TypeAccess', 'Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['TypeAccess', 'VariableRead', 'Literal']",Partial Match,0.25,0.3333333333333333,0.5,0.4,1,2,1
1771,1771,private TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( name ) ; VAR_2 . add ( VAR_3 ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; },private TYPE_1 METHOD_1 ( java.lang.String label ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( label ) ; VAR_2 . add ( VAR_3 ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; },"['Update Parameter', 'Update VariableRead']",2105,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1772,1772,protected double [ ] METHOD_1 ( ) { return new double [ ] { INT_1 } ; },protected double [ ] METHOD_1 ( ) { return new double [ 0 ] ; },"['Insert Literal', 'Delete FieldRead']",2106,"['Insert Literal', 'Delete Literal']","['Literal', 'FieldRead']","['Literal', 'Literal']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
1773,1773,public void delete ( TYPE_1 t ) { },public void delete ( ) { },"['Delete TypeReference', 'Delete Parameter']",2107,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1774,1774,public void METHOD_1 ( ) { try { new TYPE_1 ( ) ; VAR_1 . fail ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { } },public void METHOD_1 ( ) { try { new TYPE_1 ( ) ; fail ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { } },['Update TypeAccess'],2108,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1775,1775,"public boolean METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { return false ; }",public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Delete TypeReference', 'Delete Parameter']",2109,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1776,1776,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) , VAR_1 ) ; }",public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2111,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1777,1777,"public abstract void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int VAR_4 , int VAR_5 ) ;","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int VAR_4 , int VAR_5 ) { }",['Delete Wra'],2112,"['Delete Wra', 'Insert Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1778,1778,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2113,"['Delete Parameter', 'Delete Parameter', 'Delete FieldRead']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'FieldRead']",Partial Match,0.25,0.6666666666666666,0.4,0.5,2,1,3
1779,1779,protected boolean METHOD_1 ( java.lang.String VAR_1 ) { int index = VAR_1 . METHOD_2 ( STRING_1 ) ; return ( index != ( - 1 ) ) && ( ( VAR_2 . substring ( index ) . length ( ) ) > 1 ) ; },protected boolean METHOD_1 ( java.lang.String VAR_1 ) { int index = VAR_1 . METHOD_2 ( STRING_1 ) ; return ( index != ( - 1 ) ) && ( ( VAR_2 . substring ( index ) . length ( ) ) > 0 ) ; },['Update Literal'],2114,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1780,1780,protected void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; METHOD_2 ( VAR_1 ) ; },['Update Wra'],2115,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1781,1781,"public void METHOD_1 ( java.lang.Integer VAR_1 ) { assertTrue ( ( ( VAR_1 == ( VAR_2 ) ) || ( VAR_1 == ( VAR_3 ) ) ) , VAR_4 . getString ( STRING_1 , VAR_1 ) ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 ) { assertTrue ( ( ( VAR_1 == ( VAR_2 ) ) || ( VAR_1 == ( VAR_3 ) ) ) , VAR_4 . getString ( STRING_1 , VAR_1 ) ) ; this . VAR_1 = VAR_1 ; }",['Update TypeReference'],2117,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1782,1782,public void METHOD_1 ( ) { VAR_1 . remove ( ( ( VAR_2 ) - 1 ) ) ; if ( ( VAR_2 ) >= ( ( VAR_1 . size ( ) ) - 1 ) ) { ( VAR_2 ) -- ; } },public void METHOD_1 ( ) { VAR_1 . remove ( ( ( VAR_2 ) - 1 ) ) ; if ( ( VAR_2 ) == ( ( VAR_1 . size ( ) ) - 1 ) ) { ( VAR_2 ) -- ; } },['Update BinaryOperator'],2118,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1783,1783,private void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },['Update Wra'],2119,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1784,1784,public float METHOD_1 ( TYPE_1 VAR_1 ) { return FLOAT_1 ; },public float METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Return']",2121,"['Delete Return', 'Delete Literal']","['FieldRead', 'Return']","['Return', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1785,1785,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.util.Map < java.lang.String , TYPE_3 < TYPE_4 > > VAR_2 = null ; }","public java.util.Map < java.lang.String , TYPE_3 < TYPE_4 > > METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.util.Map < java.lang.String , TYPE_3 < TYPE_4 > > VAR_2 = null ; return VAR_2 ; }","['Update TypeReference', 'Insert Return', 'Insert TypeReference', 'Insert TypeReference', 'Insert VariableRead', 'Insert TypeReference']",2122,"['Insert TypeReference', 'Insert Return', 'Insert VariableRead']","['TypeReference', 'Return', 'TypeReference', 'TypeReference', 'VariableRead', 'TypeReference']","['TypeReference', 'Return', 'VariableRead']",Exact Match,1.0,1.0,0.5,0.6666666666666666,3,0,3
1786,1786,"public void METHOD_1 ( ) { boolean b = VAR_1 . METHOD_2 ( null , null ) ; TYPE_1 . METHOD_3 ( b ) ; }","public void METHOD_1 ( ) { boolean b = VAR_1 . METHOD_2 ( null , null ) ; METHOD_3 ( b ) ; }",['Update TypeAccess'],2123,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1787,1787,"private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 VAR_3 ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 VAR_3 = null ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; }","['Update Wra', 'Insert Literal']",2124,"['Update Wra', 'Insert Assignment', 'Insert Literal']","['Wra', 'Literal']","['Wra', 'Assignment', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
1788,1788,"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this . x , this . y ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this . x , this . y , false ) ; }",['Insert Literal'],2125,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1789,1789,"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( getIntent ( ) ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( ) , VAR_1 ) ; VAR_2 . METHOD_5 ( this ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( getIntent ( ) ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_5 ( this ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2126,"['Delete TypeAccess', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.4,0.5714285714285715,2,0,3
1790,1790,public TYPE_1 METHOD_1 ( TYPE_2 b ) { for ( TYPE_1 c : VAR_1 ) { if ( ( VAR_2 ) == b ) { return c ; } } return null ; },public TYPE_1 METHOD_1 ( TYPE_2 b ) { for ( TYPE_1 c : VAR_1 ) { } return null ; },"['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",2127,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Parameter', 'Delete Return']","['FieldRead', 'VariableRead', 'BinaryOperator', 'VariableRead', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Parameter', 'Return']",Partial Match,0.5714285714285714,0.8,0.5714285714285714,0.6666666666666666,4,1,3
1791,1791,"protected java.lang.String [ ] METHOD_1 ( ) { return VAR_1 . toString ( ) . split ( ""\n"" ) ; }","public java.lang.String [ ] METHOD_1 ( ) { return VAR_1 . toString ( ) . split ( ""\n"" ) ; }",['Update Wra'],2128,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1792,1792,protected float METHOD_1 ( float VAR_1 ) { return ( ( float ) ( VAR_1 * FLOAT_1 ) ) ; },private float METHOD_1 ( float VAR_1 ) { return ( ( float ) ( VAR_1 * FLOAT_1 ) ) ; },['Update Wra'],2129,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1793,1793,"protected long METHOD_1 ( ) throws java.lang.Exception { if ( ( getType ( ) ) == ( VAR_1 ) ) { return - 1 ; } return METHOD_2 ( false , false ) . METHOD_3 ( ) . getTime ( ) ; }",protected long METHOD_1 ( ) throws java.lang.Exception { if ( ( getType ( ) ) == ( VAR_1 ) ) { return - 1 ; } return METHOD_2 ( false ) . METHOD_3 ( ) . getTime ( ) ; },['Delete Literal'],2130,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1794,1794,"public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( STRING_1 , ( ( STRING_2 + VAR_1 ) + STRING_2 ) ) ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( STRING_1 , VAR_1 ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",2131,"['Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'Literal']",Partial Match,0.25,0.6666666666666666,0.4,0.5,2,1,3
1795,1795,private double METHOD_1 ( ) { double VAR_1 = 0.0 ; for ( TYPE_1 item : this . VAR_2 ) { VAR_1 += item . METHOD_2 ( ) ; } return ( java.lang.Math.round ( ( VAR_1 * FLOAT_1 ) ) ) / FLOAT_1 ; },private double METHOD_1 ( ) { double VAR_1 = 0.0 ; for ( TYPE_1 item : this . VAR_2 ) { VAR_1 += item . METHOD_2 ( ) ; } return VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",2132,"['Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'TypeAccess', 'FieldRead', 'BinaryOperator', 'Invocation', 'FieldRead', 'BinaryOperator']","['TypeAccess', 'Invocation', 'BinaryOperator', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal']",Partial Match,0.6666666666666666,0.5714285714285714,0.5714285714285714,0.5714285714285714,4,3,3
1796,1796,"private TYPE_1 < TYPE_2 , java.lang.Long > METHOD_1 ( TYPE_3 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . count ( ) ; }","public TYPE_1 < TYPE_2 , java.lang.Long > METHOD_1 ( TYPE_3 VAR_1 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . count ( ) ; }",['Update Wra'],2133,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1797,1797,"public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , float VAR_5 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , float VAR_5 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }",['Delete VariableRead'],2135,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1798,1798,"public TYPE_1 METHOD_1 ( int i ) { switch ( i ) { case 0 : return TYPE_2 . METHOD_2 ( VAR_1 ) ; case 1 : return TYPE_3 . METHOD_2 ( null , STRING_1 ) ; } return null ; }",public TYPE_1 METHOD_1 ( int i ) { switch ( i ) { case 0 : return TYPE_2 . METHOD_2 ( VAR_1 ) ; case 1 : return TYPE_2 . METHOD_2 ( null ) ; } return null ; },"['Update TypeAccess', 'Delete TypeAccess']",2136,"['Update TypeAccess', 'Delete Literal']","['TypeAccess', 'TypeAccess']","['TypeAccess', 'Literal']",GPT Hallucinated Nodes,0.5,0.5,0.5,0.5,1,1,1
1799,1799,"protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { METHOD_2 ( ( VAR_1 - INT_1 ) , ( VAR_2 - INT_1 ) ) ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Move VariableRead', 'Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",2137,"['Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal']","['VariableRead', 'VariableRead', 'FieldRead', 'BinaryOperator', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'Literal', 'BinaryOperator', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,2,2,4
1800,1800,private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete Invocation']",2138,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1801,1801,public void METHOD_1 ( int VAR_1 ) { assert ! ( METHOD_2 ( ) ) : STRING_1 ; assert ( ( VAR_2 ) + VAR_1 ) >= 0 ; assert ( ( VAR_2 ) + VAR_1 ) <= ( VAR_3 ) ; VAR_2 += VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { assert ! ( METHOD_2 ( ) ) ; assert ( ( VAR_2 ) + VAR_1 ) >= 0 ; assert ( ( VAR_2 ) + VAR_1 ) <= ( VAR_3 ) ; VAR_2 += VAR_1 ; },['Delete FieldRead'],2139,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1802,1802,"protected java.lang.Void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , p , VAR_2 ) ; return null ; }","protected java.lang.Void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , p ) ; return null ; }",['Delete TypeAccess'],2141,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1803,1803,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 , 0 , 0 , 0 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( java.lang.Integer.parseInt ( STRING_1 ) , 0 , 0 , 0 ) ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Move TypeAccess']",2142,"['Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
1804,1804,"public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , int VAR_3 , float VAR_4 ) { VAR_5 . METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 ) , VAR_2 , VAR_3 , VAR_4 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , float VAR_3 ) { VAR_5 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Update Parameter', 'Update Parameter', 'Update Parameter', 'Move VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",2143,"['Delete TypeReference', 'Delete Parameter', 'Delete Invocation', 'Delete TypeAccess', 'Update Parameter', 'Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'Parameter', 'Parameter', 'VariableRead', 'TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'VariableRead']","['TypeReference', 'Parameter', 'Invocation', 'TypeAccess', 'Parameter', 'Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.7,0.7777777777777778,0.7368421052631577,7,3,2
1805,1805,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String to ) { try { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , to ) ; VAR_3 . remove ( VAR_2 ) ; return VAR_2 ; } catch ( TYPE_2 VAR_4 ) { return null ; } }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String to ) { try { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , to ) ; VAR_3 . remove ( VAR_2 ) ; } catch ( TYPE_2 VAR_4 ) { } }","['Update TypeReference', 'Delete VariableRead', 'Delete Return', 'Delete Literal', 'Delete Return']",2144,"['Update TypeReference', 'Delete Return', 'Delete Literal', 'Delete Return']","['TypeReference', 'VariableRead', 'Return', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal', 'Return']",GPT Missed Nodes,0.75,1.0,0.8,0.888888888888889,4,0,1
1806,1806,"void METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , TYPE_1 > VAR_2 , java.util.Map < java.lang.String , java.lang.String > VAR_3 ) ;","void METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , TYPE_1 > VAR_2 ) ;","['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",2145,"['Delete Parameter', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'Parameter']","['Parameter', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,0.75,0.8571428571428571,3,0,1
1807,1807,public void METHOD_1 ( java.lang.String query ) { VAR_1 . setText ( query ) ; },public void METHOD_1 ( java.lang.String query ) { java.lang.System.out.println ( query ) ; VAR_1 . setText ( query ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",2146,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'FieldRead', 'VariableRead', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
1808,1808,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } METHOD_2 ( ( ( ( VAR_1 . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ) ) ; METHOD_5 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ( ( ( VAR_1 . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ) ) ; METHOD_5 ( false ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",2147,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.16666666666666666,0.2857142857142857,1,0,5
1809,1809,"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) ; VAR_2 = new TYPE_1 ( STRING_4 , TYPE_2 . METHOD_2 ( STRING_5 , STRING_6 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ) ; VAR_2 = new TYPE_1 ( STRING_4 , TYPE_2 . METHOD_2 ( STRING_4 , STRING_5 , STRING_6 ) ) ; }","['Insert TypeAccess', 'Insert TypeAccess']",2148,"['Insert VariableRead', 'Insert VariableRead']","['TypeAccess', 'TypeAccess']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1810,1810,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , true ) ; VAR_5 . remove ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . remove ( VAR_4 ) ; }",['Delete Literal'],2150,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1811,1811,protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( null ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( null ) ; },['Update TypeReference'],2151,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1812,1812,"public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 } ; }","public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } ; }",['Delete FieldRead'],2152,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1813,1813,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , int VAR_3 ) throws java.io.IOException { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_3 ) throws java.io.IOException { return METHOD_2 ( VAR_1 , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2154,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1814,1814,private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = ( VAR_1 . METHOD_2 ( this . line ) ) + ( this . VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = ( VAR_1 . METHOD_2 ( this . line ) ) + ( this . VAR_3 ) ; },['Update Wra'],2155,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1815,1815,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_3 , TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_3 , null , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2156,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1816,1816,"private void METHOD_1 ( java.lang.Double VAR_1 , java.lang.Double VAR_2 ) { VAR_3 . METHOD_2 ( ( VAR_2 / VAR_1 ) ) ; }","private void METHOD_1 ( java.lang.Double VAR_1 , java.lang.Double VAR_2 ) { VAR_3 . METHOD_2 ( ( VAR_1 / VAR_2 ) ) ; }",['Move VariableRead'],2157,"['Update VariableRead', 'Update VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.0,0.0,0.0,0,2,1
1817,1817,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { VAR_6 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2158,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1818,1818,"void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 , int position , TYPE_1 VAR_3 ) ;","void METHOD_1 ( android.view.View view , boolean VAR_2 , int position , TYPE_1 VAR_3 ) ;",['Update Parameter'],2159,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1819,1819,public java.lang.String METHOD_1 ( ) { return ( ( VAR_1 ) + ( VAR_2 ) ) + ( VAR_3 ) ; },public java.lang.String METHOD_1 ( java.lang.String size ) { return ( ( VAR_1 ) + size ) + ( VAR_3 ) ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete FieldRead']",2160,"['Insert Parameter', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'FieldRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1820,1820,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 f = METHOD_3 ( STRING_2 , VAR_1 ) ; VAR_3 . assertEquals ( VAR_4 , f ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 f = METHOD_3 ( STRING_2 , VAR_1 ) ; assertEquals ( VAR_4 , f ) ; }",['Update TypeAccess'],2161,"['Delete FieldRead', 'Delete Invocation']",['TypeAccess'],"['FieldRead', 'Invocation']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
1821,1821,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { }",['Update Parameter'],2162,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1822,1822,"public synchronized void METHOD_1 ( int index , TYPE_1 target ) throws TYPE_2 { VAR_1 . METHOD_1 ( index , target ) ; METHOD_2 ( ) ; }",public synchronized void METHOD_1 ( TYPE_1 target ) throws TYPE_2 { VAR_1 . METHOD_1 ( target ) ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2167,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1823,1823,"TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.lang.String id , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String src , java.lang.String VAR_3 ) ;","TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.lang.String id , java.lang.String VAR_1 , java.lang.String src , java.lang.String VAR_3 ) ;","['Delete TypeReference', 'Delete Parameter']",2168,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1824,1824,"public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 ) throws java.io.IOException { for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_1 . METHOD_2 ( VAR_1 , VAR_4 . type ) ; } return VAR_1 ; }","public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 ) throws java.io.IOException { for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_1 . METHOD_2 ( VAR_4 . type ) ; } return VAR_1 ; }",['Delete VariableRead'],2169,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1825,1825,private boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 [ VAR_3 ] ) ) { return true ; } else { METHOD_2 ( ) ; return false ; } },public boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 [ VAR_3 ] ) ) { return true ; } else { METHOD_2 ( ) ; return false ; } },['Update Wra'],2170,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1826,1826,public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( METHOD_2 ( ) ) instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; } return 0 ; },public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( METHOD_2 ( ) ) != null ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; } return 0 ; },"['Update BinaryOperator', 'Insert Literal', 'Delete TypeAccess']",2171,"['Insert BinaryOperator', 'Insert Literal', 'Delete TypeReference']","['BinaryOperator', 'Literal', 'TypeAccess']","['BinaryOperator', 'Literal', 'TypeReference']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1827,1827,"public TYPE_1 METHOD_1 ( TYPE_2 p ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( p ) , VAR_2 , VAR_3 , VAR_4 , VAR_5 , false ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 p ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( p ) , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }",['Delete Literal'],2172,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1828,1828,"protected void execute ( ) { VAR_1 . METHOD_1 ( ( - ( VAR_2 . METHOD_2 ( ) ) ) , ( - ( ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_2 ( ) ) ) ) ; }","protected void execute ( ) { VAR_1 . METHOD_1 ( ( - ( VAR_2 . METHOD_2 ( ) ) ) , ( - ( VAR_3 . METHOD_2 ( ) ) ) ) ; }",['Delete TypeReference'],2173,"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall']",['TypeReference'],"['TypeReference', 'VariableRead', 'ConstructorCall']",GPT Hallucinated Nodes,0.3333333333333333,0.3333333333333333,1.0,0.5,1,2,0
1829,1829,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( java.lang.String error ) { METHOD_2 ( error ) ; },"['Update Parameter', 'Update VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2174,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.6666666666666666,0.8,0.7272727272727272,4,2,1
1830,1830,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 ) ; return new TYPE_1 ( view ) ; }",['Delete Literal'],2175,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1831,1831,public java.lang.String toString ( ) { return name ( ) . toLowerCase ( VAR_1 ) ; },public java.lang.String toString ( ) { return name ( ) . toLowerCase ( ) ; },['Delete TypeAccess'],2176,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1832,1832,public void METHOD_1 ( ) { int VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getText ( ) ) ; if ( VAR_1 > INT_1 ) { VAR_1 -- ; VAR_3 = VAR_1 * INT_2 ; VAR_2 . setText ( java.lang.String . METHOD_2 ( VAR_1 ) ) ; } },public void METHOD_1 ( ) { int VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getText ( ) ) ; if ( VAR_1 > INT_1 ) { VAR_1 -- ; VAR_3 = VAR_1 ; VAR_2 . setText ( java.lang.String . METHOD_2 ( VAR_1 ) ) ; } },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2178,"['Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1833,1833,"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 . info ( STRING_1 , VAR_2 , VAR_1 , VAR_3 ) ; return VAR_3 ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 . info ( ( STRING_1 + VAR_2 ) , VAR_1 , VAR_3 ) ; return VAR_3 ; }","['Insert BinaryOperator', 'Insert FieldRead', 'Move VariableRead', 'Delete TypeAccess']",2179,"['Insert BinaryOperator', 'Delete VariableRead']","['BinaryOperator', 'FieldRead', 'VariableRead', 'TypeAccess']","['BinaryOperator', 'VariableRead']",GPT Missed Nodes,0.5,0.5,0.25,0.3333333333333333,1,1,3
1834,1834,"public java.lang.String METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = response . METHOD_2 ( ) ; if ( VAR_1 != null ) { return VAR_2 . toString ( VAR_1 , STRING_1 ) ; } else { return null ; } }",public java.lang.String METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = response . METHOD_2 ( ) ; if ( VAR_1 != null ) { return VAR_2 . toString ( VAR_1 ) ; } else { return null ; } },['Delete TypeAccess'],2180,"['Delete VariableRead', 'Delete Literal']",['TypeAccess'],"['VariableRead', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
1835,1835,"private java.util.List < ? > METHOD_1 ( java.lang.Object VAR_1 , java.util.Collection < ? > VAR_2 , TYPE_1 VAR_3 , java.lang.Object VAR_4 , TYPE_2 VAR_5 ) { return METHOD_2 ( VAR_1 , VAR_3 , VAR_2 , VAR_4 , VAR_5 ) ; }","private java.util.List < ? > METHOD_1 ( java.lang.Object VAR_1 , java.util.Collection < ? > VAR_2 , TYPE_1 VAR_3 , java.lang.Object VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_3 , VAR_2 , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2181,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1836,1836,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 key = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . assertTrue ( VAR_1 . METHOD_4 ( key ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 key = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertTrue ( VAR_1 . METHOD_4 ( key ) ) ; },['Update TypeAccess'],2182,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
1837,1837,"private double METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return 0 ; }","private double METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { }","['Delete Literal', 'Delete Return']",2183,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1838,1838,"public static int METHOD_1 ( int VAR_1 , int min ) { return ( new java.util.Random ( ) . METHOD_2 ( VAR_1 ) ) + min ; }","public static int METHOD_1 ( double VAR_1 , double min ) { return ( ( int ) ( min + ( ( java.lang.Math.random ( ) ) * ( ( VAR_1 - min ) + 1 ) ) ) ) ; }","['Update TypeReference', 'Update TypeReference', 'Insert BinaryOperator', 'Insert TypeReference', 'Insert VariableRead', 'Insert BinaryOperator', 'Insert Invocation', 'Insert BinaryOperator', 'Insert TypeAccess', 'Update BinaryOperator', 'Move BinaryOperator', 'Insert Literal', 'Move VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",2184,"['Update TypeReference', 'Update TypeReference', 'Update Parameter', 'Update Parameter', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Insert TypeReference', 'Insert TypeAccess', 'Insert Invocation', 'Insert Literal', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Insert UnaryOperator', 'Insert VariableRead', 'Insert VariableRead', 'Insert VariableRead']","['TypeReference', 'TypeReference', 'BinaryOperator', 'TypeReference', 'VariableRead', 'BinaryOperator', 'Invocation', 'BinaryOperator', 'TypeAccess', 'BinaryOperator', 'BinaryOperator', 'Literal', 'VariableRead', 'ConstructorCall', 'Invocation']","['TypeReference', 'TypeReference', 'Parameter', 'Parameter', 'ConstructorCall', 'TypeReference', 'Invocation', 'VariableRead', 'TypeReference', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'UnaryOperator', 'VariableRead', 'VariableRead', 'VariableRead']",GPT Hallucinated Nodes,0.7777777777777778,0.6,0.8,0.6857142857142857,12,8,3
1839,1839,"public static boolean METHOD_1 ( java.lang.String string , int size ) { return false ; }","public static boolean METHOD_1 ( java.lang.String string , int size ) { return true ; }",['Update Literal'],2185,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1840,1840,"public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String data ) { VAR_1 . METHOD_2 ( ) . put ( name , data ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.Object data ) { VAR_1 . METHOD_2 ( ) . put ( name , data ) ; return this ; }",['Update TypeReference'],2187,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1841,1841,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_3 < > ( ) ; } VAR_3 . add ( VAR_1 ) ; return ( ( TYPE_1 ) ( ( java.lang.Object ) ( this ) ) ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.LinkedList < > ( ) ; } VAR_3 . add ( VAR_1 ) ; return ( ( TYPE_1 ) ( ( java.lang.Object ) ( this ) ) ) ; },['Update ConstructorCall'],2188,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1842,1842,"private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( VAR_3 ) VAR_4 . getText ( ) . METHOD_3 ( ) ; }",private void METHOD_1 ( TYPE_2 VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete Wra', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",2189,"['Delete Wra', 'Delete Parameter', 'Delete Parameter', 'Delete If']","['TypeAccess', 'Wra', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation', 'Block', 'If']","['Wra', 'Parameter', 'Parameter', 'If']",GPT Missed Nodes,0.375,1.0,0.3076923076923077,0.47058823529411764,4,0,9
1843,1843,public int METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return 0 ; } return this . VAR_2 . METHOD_3 ( VAR_3 . split ( STRING_1 ) ) ; },public int METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return 0 ; } return this . VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2190,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Update VariableRead']","['VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal', 'VariableRead']",Partial Match,0.4,0.25,0.25,0.25,1,3,3
1844,1844,"public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . replace ( VAR_2 . METHOD_1 ( ) , STRING_1 ) ; }","public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . replaceAll ( VAR_2 . METHOD_1 ( ) , STRING_1 ) ; }",['Update Invocation'],2192,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1845,1845,public static void METHOD_1 ( ) { TYPE_1 = new TYPE_2 ( ) ; VAR_1 = new TYPE_3 [ INT_1 ] ; VAR_2 = new TYPE_4 [ 1 ] ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 = new TYPE_2 ( ) ; VAR_1 = new TYPE_3 [ INT_1 ] ; VAR_2 = new TYPE_4 [ INT_1 ] ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Insert FieldRead', 'Delete Literal']",2193,"['Delete Literal', 'Insert VariableRead']","['FieldRead', 'Literal']","['Literal', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1846,1846,"private void METHOD_1 ( TYPE_1 token ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( VAR_2 . equals ( token ) ) ) METHOD_3 ( ) ; else error ( token , VAR_1 ) ; }","private TYPE_1 METHOD_1 ( TYPE_1 token ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( VAR_2 . equals ( token ) ) ) return VAR_1 ; else { error ( token , VAR_1 ) ; return null ; } }","['Update TypeReference', 'Insert Return', 'Insert Return', 'Insert VariableRead', 'Insert Literal', 'Delete Invocation']",2194,"['Update TypeReference', 'Insert Return', 'Insert VariableRead', 'Insert Block', 'Insert Return', 'Insert Literal', 'Delete Invocation']","['TypeReference', 'Return', 'Return', 'VariableRead', 'Literal', 'Invocation']","['TypeReference', 'Return', 'VariableRead', 'Block', 'Return', 'Literal', 'Invocation']",GPT Hallucinated Nodes,0.8333333333333334,0.8571428571428571,1.0,0.923076923076923,6,1,0
1847,1847,"public < TYPE_1 extends TYPE_2 > void METHOD_1 ( java.lang.Class < ? extends TYPE_2 > VAR_1 , TYPE_3 < TYPE_1 > VAR_2 ) { METHOD_2 ( VAR_1 ) . remove ( new TYPE_4 ( VAR_2 , 0 , false ) ) ; }","public < TYPE_1 extends TYPE_2 > void METHOD_1 ( java.lang.Class < ? extends TYPE_2 > VAR_1 , TYPE_3 < TYPE_1 > VAR_2 ) { METHOD_2 ( VAR_1 ) . remove ( new TYPE_4 ( VAR_2 , 0 ) ) ; }",['Delete Literal'],2195,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1848,1848,"public static java.lang.String METHOD_1 ( java.io.File file ) { try { long VAR_1 = VAR_2 . length ( ) ; if ( VAR_1 > 0L ) { return java.lang.String.format ( STRING_1 , VAR_1 ) ; } } catch ( TYPE_1 VAR_3 ) { } return STRING_2 ; }",public static java.lang.String METHOD_1 ( java.io.File file ) { try { long VAR_1 = VAR_2 . length ( ) ; if ( VAR_1 > 0L ) { return ( ( java.lang.String ) ( VAR_1 ) ) ; } } catch ( TYPE_1 VAR_3 ) { } return STRING_2 ; },"['Insert VariableRead', 'Insert TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2196,"['Delete TypeAccess', 'Delete Invocation', 'Insert TypeReference', 'Insert VariableRead']","['VariableRead', 'TypeReference', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,0.6666666666666666,0.8,4,0,2
1849,1849,"public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return TYPE_2 . METHOD_2 ( VAR_3 . getName ( ) , VAR_4 . getName ( ) ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_3 . getName ( ) . compareTo ( VAR_4 . getName ( ) ) ; }","['Update Invocation', 'Delete TypeAccess']",2197,"['Delete TypeAccess', 'Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeAccess']","['TypeAccess', 'Invocation', 'Invocation']",Exact Match,1.0,0.3333333333333333,0.5,0.4,1,2,1
1850,1850,"public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 date ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 class ) . METHOD_3 ( STRING_1 , date ) . METHOD_4 ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 date ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 class ) . METHOD_4 ( ) ; }","['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2198,"['Delete Literal', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation']","['Literal', 'VariableRead', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.4,0.5,2,1,3
1851,1851,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; }","['Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete Invocation']",2199,"['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess']","['Invocation', 'Invocation', 'VariableRead', 'Invocation']","['Invocation', 'Invocation', 'TypeAccess']",Partial Match,0.3333333333333333,0.3333333333333333,0.25,0.28571428571428575,1,2,3
1852,1852,"private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , VAR_3 , STRING_1 ) ; }","private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , VAR_2 , STRING_1 ) ; }",['Update TypeAccess'],2200,['Update VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1853,1853,public synchronized android.content.Intent [ ] METHOD_1 ( ) { return VAR_1 ; },public android.content.Intent [ ] METHOD_1 ( ) { return VAR_1 ; },['Delete Wra'],2201,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1854,1854,"protected static double METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.util.List < java.lang.String > > VAR_2 , java.lang.String VAR_3 ) { return ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) * ( TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; }","public static double METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.util.List < java.lang.String > > VAR_2 , java.lang.String VAR_3 ) { return ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) * ( TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; }",['Update Wra'],2202,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1855,1855,void METHOD_1 ( java.lang.Boolean VAR_1 ) ;,void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",2203,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1856,1856,"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , false ) ; }","protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; }","['Move TypeAccess', 'Delete Invocation']",2204,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1857,1857,public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = new java.util.ArrayList ( VAR_1 ) ; },public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete ConstructorCall']",2206,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.2,0.5,0.28571428571428575,1,4,1
1858,1858,"public void METHOD_1 ( byte [ ] VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { byte [ ] VAR_4 = VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; target . METHOD_1 ( VAR_4 ) ; }","public void METHOD_1 ( byte [ ] VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { byte [ ] VAR_4 = VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; target . METHOD_1 ( VAR_4 , VAR_2 , VAR_3 ) ; }","['Insert VariableRead', 'Insert VariableRead']",2207,"['Insert VariableRead', 'Insert VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1859,1859,"public void METHOD_1 ( ) { TYPE_1 element = new TYPE_1 ( this . VAR_1 , this . VAR_2 ) ; VAR_3 . assertEquals ( STRING_1 , VAR_4 . getString ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 element = new TYPE_1 ( this . VAR_1 , this . VAR_2 ) ; assertEquals ( STRING_1 , VAR_4 . getString ( ) ) ; }",['Update TypeAccess'],2209,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1860,1860,public TYPE_1 to ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return this ; },protected TYPE_1 to ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return this ; },['Update Wra'],2210,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1861,1861,"public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . field ( VAR_4 , false ) ; VAR_2 . METHOD_3 ( ) ; VAR_5 . commit ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . field ( VAR_4 , false ) ; VAR_5 . commit ( ) ; }","['Delete VariableRead', 'Delete Invocation']",2211,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1862,1862,"public void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) throws TYPE_1 { }","public void METHOD_1 ( int VAR_2 , boolean VAR_3 ) throws TYPE_1 { }","['Delete TypeReference', 'Delete Parameter']",2212,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1863,1863,public void METHOD_1 ( TYPE_1 type ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 ) ; ++ VAR_1 ) { VAR_3 [ VAR_1 ] . METHOD_1 ( type ) ; } },public void METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 ) ; ++ VAR_1 ) { VAR_3 [ VAR_1 ] . METHOD_1 ( ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2213,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1864,1864,private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_1 . METHOD_3 ( ) ; },"['Insert Literal', 'Delete TypeAccess']",2214,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1865,1865,"public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",public java.util.Set < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2215,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1866,1866,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { }",public void METHOD_1 ( java.lang.String VAR_2 ) { },"['Delete TypeReference', 'Delete Parameter']",2217,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1867,1867,"public TYPE_1 METHOD_1 ( java.lang.String path , java.lang.String label , TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_3 VAR_3 ) { return METHOD_1 ( path , label , VAR_1 , VAR_2 , VAR_3 , false ) ; }","public TYPE_1 METHOD_1 ( java.lang.String path , java.lang.String label , TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_3 VAR_3 ) { return METHOD_1 ( path , label , VAR_1 , VAR_2 , null , false ) ; }","['Insert Literal', 'Delete VariableRead']",2218,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1868,1868,public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . get ( ) . add ( new TYPE_2 ( VAR_1 ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; },"['Move TypeAccess', 'Delete Invocation']",2219,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1869,1869,"public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.Class < ? extends TYPE_2 > VAR_1 ) { return null ; }","public TYPE_1 METHOD_1 ( java.lang.String string , java.lang.Class < ? extends TYPE_2 > type ) { return null ; }",['Update Parameter'],2221,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1870,1870,"private void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.util.Date > VAR_2 ) { METHOD_2 ( VAR_3 . get ( 0 ) ) ; if ( VAR_1 . METHOD_3 ( ) ) { METHOD_4 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.util.Date > VAR_2 ) { METHOD_2 ( VAR_3 . get ( 0 ) ) ; if ( VAR_1 . METHOD_3 ( ) ) { METHOD_4 ( ) ; } }",['Update Wra'],2222,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1871,1871,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( getView ( ) ) ; METHOD_4 ( true ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( results , VAR_2 ) ; METHOD_3 ( getView ( ) ) ; METHOD_4 ( true ) ; }","['Insert FieldRead', 'Delete TypeAccess']",2223,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1872,1872,"public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , null ) ; }","public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , null , false ) ; }",['Insert Literal'],2224,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1873,1873,protected void execute ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) . METHOD_2 ( FLOAT_1 ) ; VAR_3 . METHOD_1 ( ) . METHOD_2 ( FLOAT_1 ) ; VAR_1 = true ; },protected void execute ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) . METHOD_2 ( 0.0 ) ; VAR_3 . METHOD_1 ( ) . METHOD_2 ( 0.0 ) ; VAR_1 = true ; },"['Insert Literal', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess']",2225,"['Delete VariableRead', 'Insert Literal', 'Delete VariableRead', 'Insert Literal']","['Literal', 'Literal', 'TypeAccess', 'TypeAccess']","['VariableRead', 'Literal', 'VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,2,2,2
1874,1874,"TYPE_1 METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) , METHOD_8 ( ) , METHOD_9 ( STRING_1 , METHOD_1 ( ) , STRING_2 ) ) ; }","TYPE_1 METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) , METHOD_9 ( STRING_1 , METHOD_1 ( ) , STRING_2 ) ) ; }",['Delete Invocation'],2226,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1875,1875,public boolean METHOD_1 ( ) { ( VAR_1 ) -- ; return ( VAR_1 ) <= 0 ; },public boolean METHOD_1 ( ) { ( VAR_1 ) -- ; return ( VAR_1 ) == 0 ; },['Update BinaryOperator'],2227,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1876,1876,private boolean METHOD_1 ( char VAR_1 ) { return ( CHAR_1 <= VAR_1 ) && ( VAR_1 <= CHAR_2 ) ; },protected boolean METHOD_1 ( char VAR_1 ) { return ( CHAR_1 <= VAR_1 ) && ( VAR_1 <= CHAR_2 ) ; },['Update Wra'],2228,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1877,1877,public boolean METHOD_1 ( int VAR_1 ) { return ( args.length ) >= VAR_1 ; },public boolean METHOD_1 ( int VAR_1 ) { return ( ( args.length ) + 1 ) >= VAR_1 ; },"['Insert BinaryOperator', 'Update BinaryOperator', 'Move BinaryOperator', 'Move VariableRead', 'Insert Literal']",2230,"['Insert BinaryOperator', 'Insert Literal']","['BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'VariableRead', 'Literal']","['BinaryOperator', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.4,0.5714285714285715,2,0,3
1878,1878,"public void METHOD_1 ( java.lang.Integer n , long VAR_1 , long offset ) { VAR_2 . remove ( n ) ; VAR_3 . put ( n , new java.util.Date ( ( VAR_1 + offset ) ) ) ; }","public void METHOD_1 ( java.lang.Integer n , java.util.Date date ) { VAR_2 . remove ( n ) ; VAR_3 . put ( n , date ) ; }","['Update Parameter', 'Update TypeReference', 'Insert VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete ConstructorCall']",2233,"['Delete Parameter', 'Delete Parameter', 'Insert Parameter', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'BinaryOperator', 'ConstructorCall']","['Parameter', 'Parameter', 'Parameter', 'ConstructorCall', 'TypeReference', 'TypeReference', 'BinaryOperator', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.7,0.7777777777777778,0.7368421052631577,7,3,2
1879,1879,"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { for ( int i = 0 ; i < ( VAR_4 . METHOD_2 ( ) ) ; i ++ ) VAR_4 . METHOD_3 ( i ) . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { for ( int i = 0 ; i < VAR_2 ; i ++ ) VAR_4 . METHOD_3 ( i ) . METHOD_4 ( ) ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2234,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1880,1880,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException { return METHOD_2 ( VAR_2 . METHOD_1 ( new TYPE_3 ( VAR_1 ) , VAR_3 ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException { return METHOD_2 ( VAR_2 . METHOD_1 ( VAR_1 , VAR_3 ) ) ; }","['Move VariableRead', 'Delete ConstructorCall']",2235,['Delete ConstructorCall'],"['VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1881,1881,"public static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 ) { java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_1 , STRING_1 ) . METHOD_2 ( STRING_2 ) ; return VAR_2 . METHOD_3 ( ) ? VAR_2 . METHOD_4 ( ) : STRING_3 ; }",public static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 ) { java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_1 ) . METHOD_2 ( STRING_2 ) ; return VAR_2 . METHOD_3 ( ) ? VAR_2 . METHOD_4 ( ) : STRING_3 ; },"['Update ConstructorCall', 'Delete FieldRead']",2236,['Delete Literal'],"['ConstructorCall', 'FieldRead']",['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1882,1882,public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( 0 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( 1 ) ; },['Update Literal'],2237,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1883,1883,"public static void METHOD_1 ( TYPE_1 p , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( p ) . METHOD_7 ( ) ; }","public static void METHOD_1 ( TYPE_1 p , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( p ) . METHOD_7 ( ) ; }","['Update Invocation', 'Move Invocation', 'Update Invocation', 'Update Invocation', 'Move VariableRead', 'Move VariableRead', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",2238,"['Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']","['Invocation', 'Invocation', 'Invocation', 'Invocation', 'VariableRead', 'VariableRead', 'Literal', 'Literal', 'Invocation', 'Invocation']","['Invocation', 'Literal', 'Invocation', 'Literal', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.8,0.4,0.5333333333333333,4,1,6
1884,1884,"public TYPE_1 METHOD_1 ( TYPE_2 b , java.util.ArrayList < TYPE_1 > c ) { return null ; }",public boolean METHOD_1 ( ) { return false ; },"['Update TypeReference', 'Update Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",2242,"['Update TypeReference', 'Delete Parameter', 'Delete Parameter', 'Update Literal']","['TypeReference', 'Literal', 'TypeReference', 'Parameter', 'TypeReference', 'TypeReference', 'Parameter']","['TypeReference', 'Parameter', 'Parameter', 'Literal']",Exact Match,1.0,1.0,0.5714285714285714,0.7272727272727273,4,0,3
1885,1885,"public void METHOD_1 ( TYPE_1 source , java.lang.String VAR_1 ) { METHOD_1 ( source , new TYPE_2 ( ) . add ( VAR_1 ) . build ( ) ) ; }","public void METHOD_1 ( TYPE_1 source , java.lang.String VAR_1 ) { METHOD_1 ( source , new TYPE_2 ( ) . add ( VAR_1 ) . toString ( ) ) ; }",['Update Invocation'],2243,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1886,1886,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 . add ( METHOD_2 ( METHOD_3 ( VAR_4 class ) . METHOD_4 ( message ) ) . METHOD_5 ( ) ) ; return VAR_2 ; }",private TYPE_1 METHOD_1 ( java.lang.String message ) { TYPE_1 VAR_2 = new TYPE_1 ( message ) ; VAR_3 . add ( METHOD_2 ( METHOD_3 ( VAR_4 class ) . METHOD_4 ( message ) ) . METHOD_5 ( ) ) ; return VAR_2 ; },"['Update VariableRead', 'Delete TypeReference', 'Delete Parameter']",2244,"['Delete Parameter', 'Update ConstructorCall']","['VariableRead', 'TypeReference', 'Parameter']","['Parameter', 'ConstructorCall']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
1887,1887,"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_2 ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_1 , false ) ; } return VAR_3 ; }","public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_2 ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_1 ) ; } return VAR_3 ; }",['Delete Literal'],2245,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1888,1888,public TYPE_1 METHOD_1 ( final int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( VAR_1 > ( VAR_2 ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( final int VAR_1 ) { if ( ( VAR_1 < 0 ) && ( VAR_1 > ( VAR_2 ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },['Update BinaryOperator'],2246,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1889,1889,"public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; METHOD_3 ( ) ; return new TYPE_3 ( new TYPE_4 ( value ) , VAR_1 ) ; }",public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; METHOD_3 ( ) ; return new TYPE_3 ( new TYPE_4 ( value ) ) ; },"['Update ConstructorCall', 'Delete FieldRead']",2247,['Delete VariableRead'],"['ConstructorCall', 'FieldRead']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
1890,1890,"public void handle ( TYPE_1 event ) { METHOD_1 ( VAR_1 , VAR_2 ) ; }",public void handle ( TYPE_1 event ) { METHOD_1 ( VAR_1 ) ; },['Delete TypeAccess'],2248,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1891,1891,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . query ( VAR_5 , null , VAR_1 , VAR_2 , null , null , null ) ; return new TYPE_1 ( VAR_3 ) ; }","private TYPE_2 METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . query ( VAR_5 , null , VAR_1 , VAR_2 , null , null , null ) ; return VAR_3 ; }","['Update TypeReference', 'Move VariableRead', 'Delete ConstructorCall']",2250,"['Update TypeReference', 'Update TypeReference', 'Delete ConstructorCall']","['TypeReference', 'VariableRead', 'ConstructorCall']","['TypeReference', 'TypeReference', 'ConstructorCall']",GPT Missed Nodes,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1892,1892,"public void METHOD_1 ( java.lang.String path , TYPE_1 type ) { VAR_1 . getConfig ( ) . set ( path , type ) ; }","public void METHOD_1 ( java.lang.String path , TYPE_1 type ) { getConfig ( ) . set ( path , type ) ; }",['Update TypeAccess'],2251,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1893,1893,"private int METHOD_1 ( int i , int j , int n ) { if ( n == INT_1 ) { return j ; } return METHOD_1 ( j , ( i + j ) , ( n - 1 ) ) ; }","private int METHOD_1 ( int i , int j , int n ) { if ( n == INT_1 ) { return i ; } return METHOD_1 ( j , ( i + j ) , ( n - 1 ) ) ; }",['Update VariableRead'],2253,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1894,1894,protected static long METHOD_1 ( ) { return ( ( long ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 ) ) ) ; },private static long METHOD_1 ( ) { return ( ( long ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 ) ) ) ; },['Update Wra'],2254,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1895,1895,public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = ( ( ( ( this . METHOD_2 ( ) ) + STRING_1 ) + ( this . METHOD_3 ( ) ) ) + STRING_2 ) + ( this . METHOD_4 ( ) ) ; return VAR_1 ; },public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = ( ( ( ( this . METHOD_2 ( ) ) + STRING_1 ) + ( this . METHOD_3 ( ) ) ) + STRING_2 ) + ( this . METHOD_4 ( ) ) ; },"['Delete VariableRead', 'Delete Return']",2255,['Delete Return'],"['VariableRead', 'Return']",['Return'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1896,1896,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_4 ) ; }",['Delete VariableRead'],2256,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1897,1897,public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Return']",2258,"['Delete Return', 'Delete Literal']","['FieldRead', 'Return']","['Return', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1898,1898,"public < TYPE_1 extends TYPE_2 > java.util.List < TYPE_1 > METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 , boolean VAR_3 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , null , VAR_2 , VAR_3 ) ; }","public < TYPE_1 extends TYPE_2 > java.util.List < TYPE_1 > METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , null , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2259,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1899,1899,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 time , int VAR_2 , int VAR_3 , java.lang.String VAR_4 , TYPE_2 startTime , TYPE_2 endTime ) { VAR_5 . METHOD_1 ( VAR_1 , time , VAR_3 , VAR_4 , startTime , endTime ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 time , int VAR_2 , int VAR_3 , java.lang.String VAR_4 , TYPE_2 startTime , TYPE_2 endTime ) { VAR_5 . METHOD_1 ( VAR_1 , time , VAR_2 , VAR_3 , VAR_4 , startTime , endTime ) ; }",['Insert VariableRead'],2260,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1900,1900,protected void METHOD_1 ( java.lang.Void VAR_1 ) { },protected void METHOD_1 ( java.lang.Void VAR_1 ) { return ; },['Insert Return'],2261,['Insert Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1901,1901,"public static java.lang.String METHOD_1 ( java.lang.String name , int value ) { return ( ( ( STRING_1 + ( VAR_1 . replaceAll ( STRING_2 , STRING_3 ) ) ) + STRING_4 ) + ( java.lang.Integer.toString ( value ) ) ) + STRING_5 ; }","public static java.lang.String METHOD_1 ( java.lang.String name , int value ) { return ( ( ( STRING_1 + name ) + STRING_4 ) + ( java.lang.Integer.toString ( value ) ) ) + STRING_5 ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2262,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'Literal', 'VariableRead']",Partial Match,0.4,0.5,0.4,0.4444444444444445,2,2,3
1902,1902,"public TYPE_1 METHOD_1 ( int VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = METHOD_3 ( index ) ; VAR_1 = METHOD_4 ( VAR_1 , index ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; }",public TYPE_1 METHOD_1 ( int VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = METHOD_3 ( index ) ; VAR_1 = METHOD_4 ( index ) ; return VAR_2 . METHOD_1 ( VAR_1 ) ; },['Delete VariableRead'],2263,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1903,1903,public java.util.List < TYPE_1 < TYPE_2 > > METHOD_1 ( ) { return new java.util.ArrayList < TYPE_1 < TYPE_2 > > ( VAR_1 ) ; },public java.util.List < TYPE_1 < TYPE_2 > > METHOD_1 ( ) { return new java.util.ArrayList < TYPE_1 < TYPE_2 > > ( this . VAR_1 ) ; },['Insert ThisAccess'],2264,"['Insert ThisAccess', 'Move FieldRead']",['ThisAccess'],"['ThisAccess', 'FieldRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1904,1904,public java.lang.String METHOD_1 ( java.lang.String path ) throws java.io.IOException { return STRING_1 ; },public java.lang.String METHOD_1 ( java.lang.String path ) throws java.io.IOException { return null ; },"['Insert Literal', 'Delete FieldRead']",2265,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1905,1905,"private int METHOD_1 ( android.content.Intent intent ) { TYPE_1 . METHOD_1 ( intent . METHOD_2 ( VAR_1 , ( - 1 ) ) ) ; return VAR_2 ; }","private void METHOD_1 ( android.content.Intent intent ) { TYPE_1 . METHOD_1 ( intent . METHOD_2 ( VAR_1 , ( - 1 ) ) ) ; }","['Update TypeReference', 'Delete FieldRead', 'Delete Return']",2266,"['Update TypeReference', 'Delete Return', 'Update Wra']","['TypeReference', 'FieldRead', 'Return']","['TypeReference', 'Return', 'Wra']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
1906,1906,"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( context ) ; }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_2 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( context ) ; }","['Update Parameter', 'Insert VariableRead', 'Delete FieldRead']",2267,['Update Parameter'],"['Parameter', 'VariableRead', 'FieldRead']",['Parameter'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1907,1907,public void METHOD_1 ( int n ) { },public void METHOD_1 ( int n ) { return ; },['Insert Return'],2268,['Insert Return'],['Return'],['Return'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1908,1908,"private void METHOD_1 ( android.content.Intent intent , java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( intent , VAR_1 ) ; METHOD_3 ( VAR_2 , intent ) ; }","private void METHOD_1 ( android.content.Intent intent , java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( intent , VAR_1 ) ; METHOD_3 ( VAR_2 , intent , VAR_1 ) ; }",['Insert VariableRead'],2269,['Insert VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1909,1909,"public void METHOD_1 ( java.lang.String msg ) { TYPE_1 . METHOD_2 ( VAR_1 , msg , VAR_2 ) . show ( ) ; }","public void METHOD_1 ( java.lang.String msg ) { TYPE_1 . METHOD_2 ( this , msg , VAR_2 ) . show ( ) ; }","['Insert ThisAccess', 'Delete TypeAccess']",2270,"['Delete VariableRead', 'Insert ThisAccess']","['ThisAccess', 'TypeAccess']","['VariableRead', 'ThisAccess']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1910,1910,protected TYPE_1 METHOD_1 ( ) { return this . VAR_1 ? new TYPE_1 ( ) : null ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_1 ? new TYPE_1 ( ) : null ; },['Update Wra'],2271,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1911,1911,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { try ( TYPE_2 VAR_3 = VAR_4 . open ( ) ) { return TYPE_3 . METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; } }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_2 ) { try ( TYPE_2 VAR_3 = VAR_4 . open ( ) ) { return TYPE_3 . METHOD_1 ( VAR_3 , VAR_2 ) ; } }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2273,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1912,1912,public TYPE_1 METHOD_1 ( ) { final TYPE_2 t = new TYPE_2 ( METHOD_2 ( ) ) ; t . METHOD_3 ( METHOD_4 ( ) ) ; t . METHOD_5 ( METHOD_6 ( ) ) ; return t ; },public TYPE_2 METHOD_1 ( ) { final TYPE_2 t = new TYPE_2 ( METHOD_2 ( ) ) ; t . METHOD_3 ( METHOD_4 ( ) ) ; t . METHOD_5 ( METHOD_6 ( ) ) ; return t ; },['Update TypeReference'],2274,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1913,1913,"public void METHOD_1 ( int VAR_1 , boolean VAR_2 , boolean VAR_3 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; if ( VAR_3 ) VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_6 . update ( VAR_4 ) ; }","public void METHOD_1 ( int VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_6 . update ( VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",2275,"['Delete Parameter', 'Delete If']","['TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead', 'Invocation', 'Block', 'If']","['Parameter', 'If']",GPT Missed Nodes,0.3333333333333333,1.0,0.25,0.4,2,0,6
1914,1914,static TYPE_1 METHOD_1 ( ) { return null ; },static TYPE_1 METHOD_1 ( ) { return void . class ; },"['Insert FieldRead', 'Delete Literal']",2276,"['Delete Literal', 'Insert TypeAccess']","['FieldRead', 'Literal']","['Literal', 'TypeAccess']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1915,1915,"protected abstract TYPE_1 METHOD_1 ( java.lang.String path , java.lang.StringBuilder VAR_1 ) throws java.lang.Exception ;",protected abstract TYPE_1 METHOD_1 ( java.lang.String path ) throws java.lang.Exception ;,"['Delete TypeReference', 'Delete Parameter']",2278,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1916,1916,"public byte [ ] METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) throws java.io.IOException { synchronized ( VAR_1 ) { return VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } }","public byte [ ] METHOD_1 ( java.io.InputStream VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) throws java.io.IOException { synchronized ( VAR_1 ) { return VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } }",['Update TypeReference'],2280,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1917,1917,public java.lang.String METHOD_1 ( ) { return STRING_1 + STRING_2 ; },public java.lang.String METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",2282,"['Delete Literal', 'Delete Literal', 'Delete BinaryOperator', 'Insert Literal']","['Literal', 'FieldRead', 'FieldRead', 'BinaryOperator']","['Literal', 'Literal', 'BinaryOperator', 'Literal']",GPT Missed Nodes,0.6666666666666666,0.5,0.5,0.5,2,2,2
1918,1918,"public static boolean METHOD_1 ( TYPE_1 p ) { return TYPE_2 . METHOD_1 ( p , null , null ) ; }","public static boolean METHOD_1 ( TYPE_1 p ) { return TYPE_2 . METHOD_1 ( p , null ) ; }",['Delete Literal'],2283,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1919,1919,"protected TYPE_1 METHOD_1 ( double VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 , double VAR_6 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","protected TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","['Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference']",2284,"['Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
1920,1920,protected final TYPE_1 METHOD_1 ( TYPE_2 message ) { return this . VAR_1 . METHOD_2 ( message ) ; },private TYPE_1 METHOD_1 ( TYPE_2 message ) { return this . VAR_1 . METHOD_2 ( message ) ; },"['Update Wra', 'Delete Wra']",2285,['Update Wra'],"['Wra', 'Wra']",['Wra'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
1921,1921,"public void METHOD_1 ( java.lang.String type , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( type , VAR_1 ) ; VAR_3 . add ( VAR_2 ) ; }",public void METHOD_1 ( java.lang.String type ) { TYPE_1 VAR_2 = new TYPE_1 ( type ) ; VAR_3 . add ( VAR_2 ) ; },"['Update ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2286,"['Delete Parameter', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
1922,1922,"private static TYPE_1 < java.lang.Double > METHOD_1 ( TYPE_1 < java.lang.Double > target , TYPE_1 < java.lang.Double > VAR_1 ) { return TYPE_2 ( target , VAR_1 ) ; }","private static TYPE_1 < java.lang.Double > METHOD_1 ( TYPE_1 < java.lang.Double > target , TYPE_1 < java.lang.Double > VAR_1 ) { return new TYPE_2 ( target , VAR_1 ) ; }","['Insert ConstructorCall', 'Move VariableRead', 'Move VariableRead', 'Delete Invocation']",2287,['Insert ConstructorCall'],"['ConstructorCall', 'VariableRead', 'VariableRead', 'Invocation']",['ConstructorCall'],GPT Missed Nodes,0.3333333333333333,1.0,0.25,0.4,1,0,3
1923,1923,"public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( p . METHOD_4 ( STRING_2 ) ) , STRING_3 , new java.lang.Object [ ] { VAR_2 . string ( STRING_4 ) } , new TYPE_1 [ ] { } ) ; }","public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_2 . name ( p . METHOD_4 ( STRING_2 ) ) , STRING_3 , new java.lang.Object [ ] { VAR_2 . string ( STRING_4 ) } , new TYPE_1 [ ] { } ) ; }","['Update Invocation', 'Update TypeAccess']",2288,"['Update FieldRead', 'Update Invocation']","['Invocation', 'TypeAccess']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1924,1924,"private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean results = METHOD_2 ( true ) ; if ( results ) { TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean results = METHOD_2 ( ) ; if ( results ) { TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; } }",['Delete Literal'],2289,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1925,1925,private java.lang.String getValue ( java.lang.String line ) { int VAR_1 = line . METHOD_1 ( STRING_1 ) ; return VAR_2 . substring ( ( VAR_1 + 1 ) ) . trim ( ) ; },private java.lang.String getValue ( java.lang.String line ) { int VAR_1 = line . METHOD_1 ( STRING_1 ) ; return VAR_2 . substring ( VAR_1 ) ; },"['Move Invocation', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",2290,"['Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']","['Invocation', 'VariableRead', 'Literal', 'BinaryOperator', 'Invocation']","['Literal', 'BinaryOperator', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
1926,1926,"TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , false , true ) ; }","TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; }",['Delete Literal'],2291,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1927,1927,public int METHOD_1 ( ) { return x ; },private int METHOD_1 ( ) { return x ; },['Update Wra'],2293,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1928,1928,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_3 ) == null ) { VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( ) { if ( ( VAR_3 ) == null ) { VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } }","['Insert TypeAccess', 'Insert TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']",2294,"['Delete Parameter', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead']","['TypeAccess', 'TypeAccess', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,4,0,4
1929,1929,public java.lang.String METHOD_1 ( java.lang.String value ) { if ( value == null ) { return null ; } return VAR_1 ? VAR_2 . METHOD_2 ( value ) : value ; },public java.lang.String METHOD_1 ( java.lang.String value ) { return VAR_1 ? VAR_2 . METHOD_2 ( value ) : value ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2295,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1930,1930,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ( ( TYPE_3 . METHOD_4 ( ) ) / INT_1 ) ) ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",2296,"['Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal']","['TypeAccess', 'Invocation', 'FieldRead', 'BinaryOperator']","['TypeAccess', 'Invocation', 'BinaryOperator', 'Literal']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
1931,1931,public void show ( ) { this . VAR_1 . show ( ) ; },public void show ( ) { VAR_1 . show ( ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2297,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1932,1932,protected TYPE_1 METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) return null ; if ( ( VAR_2 . length ) != 1 ) return null ; return VAR_1 [ 0 ] ; },protected TYPE_1 METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 . length ) != 1 ) return null ; return VAR_1 [ 0 ] ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2298,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1933,1933,"private static void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , int VAR_4 , long VAR_5 ) { }","private static native void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , int VAR_4 , long VAR_5 ) ;",['Insert Wra'],2299,"['Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
1934,1934,public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return true ; },['Update Literal'],2300,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1935,1935,protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { super . execute ( ) ; METHOD_2 ( ) ; },"['Update Invocation', 'Delete VariableRead']",2301,"['Update Invocation', 'Delete VariableRead']","['Invocation', 'VariableRead']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1936,1936,"public final TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 , INT_1 , INT_2 , INT_3 , INT_1 , 0 , INT_4 , INT_1 ) ; return VAR_1 ; }","public final TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 , INT_1 , INT_2 , INT_3 , INT_1 ) ; return VAR_1 ; }","['Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess']",2302,"['Delete Literal', 'Delete VariableRead', 'Delete VariableRead']","['Literal', 'TypeAccess', 'TypeAccess']","['Literal', 'VariableRead', 'VariableRead']",Partial Match,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1937,1937,public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },['Update Invocation'],2303,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1938,1938,"public int METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) return 0 ; return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public int METHOD_1 ( int VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2304,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
1939,1939,"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess']",2305,"['Delete VariableRead', 'Delete VariableRead']","['TypeAccess', 'TypeAccess']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
1940,1940,public java.lang.String METHOD_1 ( ) { return new java.io.File ( this . path ) . getName ( ) ; },public java.lang.String METHOD_1 ( ) { return name ; },"['Insert FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",2306,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['FieldRead', 'ThisAccess', 'FieldRead', 'ConstructorCall', 'Invocation']","['ConstructorCall', 'TypeReference', 'ThisAccess', 'FieldRead', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,0.8,0.7272727272727272,4,2,1
1941,1941,public static void METHOD_1 ( java.lang.Long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . remove ( VAR_1 ) ; try { VAR_2 . METHOD_2 ( false ) ; } catch ( java.lang.Exception VAR_4 ) { } },public static void METHOD_1 ( java.lang.Long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; try { VAR_2 . METHOD_2 ( false ) ; } catch ( java.lang.Exception VAR_4 ) { } },['Update Invocation'],2307,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1942,1942,public void METHOD_1 ( TYPE_1 event ) { VAR_1 . data = METHOD_2 ( event ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . data = this . METHOD_2 ( event ) ; },['Insert ThisAccess'],2309,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1943,1943,public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",2310,"['Delete TypeAccess', 'Delete Invocation']","['ConstructorCall', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1944,1944,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { try { VAR_2 . METHOD_2 ( true , null ) ; } catch ( TYPE_3 VAR_3 ) { TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { try { VAR_2 . METHOD_2 ( true ) ; } catch ( TYPE_3 VAR_3 ) { TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; } }",['Delete Literal'],2312,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1945,1945,"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( position , VAR_1 ) ; }","['Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2313,"['Insert VariableRead', 'Delete FieldRead', 'Delete Invocation']","['FieldRead', 'TypeAccess', 'Invocation']","['VariableRead', 'FieldRead', 'Invocation']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
1946,1946,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return METHOD_1 ( new TYPE_3 ( VAR_1 ) , VAR_2 ) ; }",public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( new TYPE_3 ( VAR_1 ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2314,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1947,1947,protected java.lang.String getId ( ) { return VAR_1 ; },public java.lang.String getId ( ) { return VAR_1 ; },['Update Wra'],2315,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1948,1948,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 += VAR_2 ; TYPE_2 f = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_4 . add ( f ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 += VAR_2 ; TYPE_2 f = new TYPE_2 ( VAR_1 , VAR_3 ) ; VAR_4 . add ( f ) ; }","['Insert FieldRead', 'Delete VariableRead']",2316,['Update VariableRead'],"['FieldRead', 'VariableRead']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
1949,1949,private void METHOD_1 ( ) { this . VAR_1 = 1 ; },private void METHOD_1 ( ) { this . VAR_1 = 0 ; },['Update Literal'],2317,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1950,1950,public synchronized java.io.InputStream METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { return VAR_1 = new java.io.FileInputStream ( VAR_2 . METHOD_2 ( ) ) ; } },public synchronized java.io.InputStream METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { return VAR_1 ; } else { return VAR_1 = new java.io.FileInputStream ( VAR_2 . METHOD_2 ( ) ) ; } },['Update BinaryOperator'],2318,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1951,1951,"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . show ( METHOD_2 ( ) , STRING_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . show ( METHOD_2 ( ) , STRING_1 ) ; }",['Update Wra'],2319,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1952,1952,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String params ) { boolean x = VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , params ) ; return TYPE_3 . METHOD_2 ( x ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String params ) { int x = VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , params ) ; return TYPE_3 . METHOD_2 ( x ) ; }",['Update TypeReference'],2322,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1953,1953,public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_1 ( VAR_1 ) ; VAR_2 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_1 ( VAR_1 ) ; VAR_2 . add ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete VariableRead', 'Delete Invocation']",2323,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1954,1954,"public boolean METHOD_1 ( int x , int y ) { return array [ ( x + ( ( VAR_1 ) * y ) ) ] ; }","public boolean METHOD_1 ( int i , int j ) { return array [ ( ( i * ( VAR_1 ) ) + j ) ] ; }","['Update Parameter', 'Update Parameter', 'Move VariableRead', 'Move FieldRead', 'Update VariableRead', 'Update VariableRead']",2324,"['Update Parameter', 'Update Parameter', 'Move VariableRead', 'Move VariableRead', 'Move VariableRead', 'Move VariableRead', 'Move BinaryOperator', 'Move BinaryOperator']","['Parameter', 'Parameter', 'VariableRead', 'FieldRead', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'BinaryOperator', 'BinaryOperator']",Partial Match,0.5,0.375,0.5,0.42857142857142855,3,5,3
1955,1955,"private java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; return ( VAR_1 + STRING_2 ) + VAR_1 ; }","public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; return ( VAR_1 + STRING_2 ) + VAR_1 ; }",['Update Wra'],2326,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1956,1956,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; TYPE_3 . METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , false ) ; boolean VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , new java.util.HashMap < > ( ) ) ; TYPE_3 . METHOD_4 ( VAR_2 ) ; }",['Insert Literal'],2327,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1957,1957,public double METHOD_1 ( ) { long c = super . diff ( ) ; return ( ( double ) ( ( VAR_1 ) - ( VAR_2 ) ) ) / c ; },public double METHOD_1 ( ) { long c = super . diff ( ) ; if ( c == 0 ) { return 0 ; } return ( ( double ) ( ( VAR_1 ) - ( VAR_2 ) ) ) / c ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert Literal']",2329,"['Insert If', 'Insert BinaryOperator', 'Insert Literal', 'Insert Return']","['If', 'BinaryOperator', 'Block', 'VariableRead', 'Literal', 'Return', 'Literal']","['If', 'BinaryOperator', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
1958,1958,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = null ; try { VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_2 ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_4 ) ; return null ; } },private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = null ; try { VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_2 ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_4 ) ; return null ; } },['Update Wra'],2330,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1959,1959,"protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object [ ] params ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , true , false ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object [ ] params ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , true ) ; }",['Delete Literal'],2331,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1960,1960,private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_1 ) ; },['Update Wra'],2332,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1961,1961,"public static native void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) ;",public static native void METHOD_1 ( java.lang.String VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2333,"['Delete TypeReference', 'Delete Parameter']","['TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1962,1962,"public java.lang.Void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; return null ; }",public java.lang.Void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . error ( VAR_1 ) ; return null ; },['Delete TypeAccess'],2335,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1963,1963,"private TYPE_1 METHOD_1 ( ) { TYPE_2 delete = new TYPE_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( delete . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; return delete . METHOD_5 ( ) ; }","private void METHOD_1 ( ) { TYPE_2 delete = new TYPE_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( delete . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; }","['Update TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",2337,"['Update TypeReference', 'Delete Return', 'Delete Invocation', 'Delete FieldRead']","['TypeReference', 'VariableRead', 'Invocation', 'Return']","['TypeReference', 'Return', 'Invocation', 'FieldRead']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
1964,1964,"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , new java.util.ArrayList < > ( ) ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; }",['Delete ConstructorCall'],2338,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1965,1965,public double METHOD_1 ( ) { return this . length ; },public double METHOD_1 ( ) { return length ; },['Delete ThisAccess'],2339,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1966,1966,"public abstract boolean METHOD_1 ( int VAR_1 , int VAR_2 ) ;","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return true ; }","['Insert Return', 'Insert Literal', 'Delete Wra']",2340,"['Delete Wra', 'Insert Block', 'Insert Return', 'Insert Literal']","['Return', 'Literal', 'Wra']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
1967,1967,private boolean METHOD_1 ( ) { return ( this . VAR_1 ) && ( ( this . VAR_2 ) < ( this . position ) ) ; },private boolean METHOD_1 ( ) { return ( this . VAR_1 ) && ( ( this . VAR_2 ) <= ( this . position ) ) ; },['Update BinaryOperator'],2341,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1968,1968,"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( new TYPE_1 ( STRING_1 , STRING_2 ) ) ; }",['Delete FieldRead'],2342,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1969,1969,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 , null ) ; VAR_2 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 , null ) ; }","['Delete VariableRead', 'Delete Invocation']",2343,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
1970,1970,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 == ( VAR_2 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 != ( VAR_2 ) ; },['Update BinaryOperator'],2345,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1971,1971,public void METHOD_1 ( TYPE_1 f ) { VAR_1 . METHOD_1 ( f ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2346,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
1972,1972,"private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { if ( VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { return METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } }","protected boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { if ( VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } else { return METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; } }",['Update Wra'],2347,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1973,1973,"public void METHOD_1 ( double VAR_1 , TYPE_1 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public boolean METHOD_1 ( double VAR_1 , TYPE_1 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; return true ; }","['Update TypeReference', 'Insert Return', 'Insert Literal']",2348,"['Update TypeReference', 'Insert Return', 'Insert Literal']","['TypeReference', 'Return', 'Literal']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
1974,1974,private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },['Update Wra'],2349,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1975,1975,public boolean METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; return true ; } catch ( TYPE_1 VAR_3 ) { METHOD_2 ( VAR_3 ) ; } return false ; },public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_2 ( VAR_3 ) ; } },"['Update TypeReference', 'Delete Literal', 'Delete Return', 'Delete Literal', 'Delete Return']",2350,"['Delete Return', 'Delete Literal', 'Update TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return', 'Literal', 'Return']","['Return', 'Literal', 'TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
1976,1976,public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = 0 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = 1 ; },['Update Literal'],2351,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1977,1977,public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( STRING_2 ) ; TYPE_2 . METHOD_2 ( STRING_3 ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 . METHOD_1 ( STRING_2 ) ; TYPE_2 . METHOD_2 ( STRING_3 ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; },['Update TypeAccess'],2352,['Update TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1978,1978,"public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( ( VAR_1 ) == null ) throw new TYPE_2 ( STRING_1 ) ; return new TYPE_3 ( VAR_2 , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( ( VAR_1 ) == null ) throw new TYPE_2 ( STRING_1 ) ; return new TYPE_3 ( VAR_2 , VAR_4 ) ; }",['Delete FieldRead'],2353,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1979,1979,public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; view . METHOD_3 ( false ) ; VAR_1 . METHOD_3 ( true ) ; },private void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; view . METHOD_3 ( false ) ; VAR_1 . METHOD_3 ( true ) ; },['Update Wra'],2355,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1980,1980,public boolean METHOD_1 ( final java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_4 . getName ( ) . equals ( VAR_1 ) ) { VAR_5 = VAR_2 ; return true ; } } return false ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_4 . getName ( ) . equals ( VAR_1 ) ) { VAR_5 = VAR_2 ; return ; } } },"['Update TypeReference', 'Delete Literal', 'Delete Literal', 'Delete Return']",2356,"['Update TypeReference', 'Delete Literal', 'Delete Return', 'Update Return']","['TypeReference', 'Literal', 'Literal', 'Return']","['TypeReference', 'Literal', 'Return', 'Return']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
1981,1981,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; return true ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2358,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
1982,1982,public final void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } },public final void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { } } },"['Delete VariableRead', 'Delete Invocation']",2359,"['Delete VariableRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1983,1983,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return true ; },public boolean METHOD_1 ( ) { return true ; },"['Delete TypeReference', 'Delete Parameter']",2360,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1984,1984,"public void METHOD_1 ( float VAR_1 , float VAR_2 ) throws java.io.IOException { if ( ! ( VAR_3 ) ) { throw new TYPE_1 ( STRING_1 ) ; } METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_2 ) ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 ) throws java.io.IOException { if ( ! ( VAR_3 ) ) { throw new java.io.IOException ( STRING_1 ) ; } METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_2 ) ; }",['Update ConstructorCall'],2362,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
1985,1985,public TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { new TYPE_2 ( this ) } ; },public TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { new TYPE_2 ( ) } ; },"['Update ConstructorCall', 'Delete ThisAccess']",2363,['Delete ThisAccess'],"['ConstructorCall', 'ThisAccess']",['ThisAccess'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
1986,1986,protected java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.Void ... VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = TYPE_1 . METHOD_2 ( getActivity ( ) ) ; return VAR_2 ; },protected java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.Void ... VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = TYPE_1 . METHOD_2 ( getContext ( ) ) ; return VAR_2 ; },['Update Invocation'],2364,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1987,1987,private void METHOD_1 ( ) { try { new java.io.File ( this . VAR_1 ) . delete ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },private void METHOD_1 ( ) { try { new java.io.File ( this . VAR_1 ) . delete ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete VariableRead', 'Delete Invocation']",2365,"['Delete VariableRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1988,1988,"public int METHOD_1 ( int VAR_1 ) { java.lang.String VAR_2 = VAR_1 + STRING_1 ; java.lang.String VAR_3 = VAR_1 + STRING_2 ; return METHOD_2 ( VAR_2 , VAR_3 ) ; }","public int METHOD_1 ( int VAR_1 ) { java.lang.String VAR_2 = VAR_1 + STRING_1 ; java.lang.String VAR_3 = ( VAR_1 + 1 ) + STRING_1 ; return METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Insert BinaryOperator', 'Move BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Delete FieldRead']",2366,"['Insert BinaryOperator', 'Insert Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess']","['BinaryOperator', 'BinaryOperator', 'FieldRead', 'Literal', 'FieldRead']","['BinaryOperator', 'Literal', 'VariableRead', 'BinaryOperator', 'TypeAccess']",Partial Match,0.4,0.4,0.4,0.4000000000000001,2,3,3
1989,1989,"public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , null ) ; }",public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; },['Delete Literal'],2367,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1990,1990,"public void METHOD_1 ( java.lang.Integer VAR_1 ) { java.lang.Integer VAR_2 = this . VAR_1 ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( STRING_1 , VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { int VAR_2 = this . VAR_1 ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( STRING_1 , VAR_2 , VAR_1 ) ; }","['Update TypeReference', 'Update TypeReference']",2368,"['Update Parameter', 'Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference']","['Parameter', 'TypeReference', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.6666666666666666,1.0,0.8,2,1,0
1991,1991,"public static boolean METHOD_1 ( int [ ] [ ] VAR_1 , int id , int VAR_2 , int VAR_3 ) { return ( VAR_1 [ ( id - 1 ) ] [ ( VAR_2 - 1 ) ] ) >= VAR_3 ; }","public static boolean METHOD_1 ( int [ ] [ ] VAR_1 , int id , int VAR_2 , int VAR_3 ) { return ( VAR_1 [ id ] [ VAR_2 ] ) >= VAR_3 ; }","['Move VariableRead', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator']",2370,"['Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator', 'Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
1992,1992,"protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 function ) { return METHOD_2 ( VAR_1 , function , null , true ) ; }","protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 function ) { return METHOD_2 ( VAR_1 , function , null ) ; }",['Delete Literal'],2372,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1993,1993,public void METHOD_1 ( int size ) { VAR_1 . METHOD_2 ( getActivity ( ) ) ; },public void METHOD_1 ( int size ) { VAR_1 . METHOD_2 ( size ) ; },"['Insert VariableRead', 'Delete Invocation']",2373,"['Delete Invocation', 'Insert VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
1994,1994,"public static < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , null ) ; }","public static < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , null , null ) ; }",['Insert Literal'],2374,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1995,1995,"public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( true ) ; METHOD_5 ( METHOD_6 ( ) . getString ( VAR_2 ) , METHOD_6 ( ) . getString ( VAR_3 ) , true ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( true ) ; METHOD_5 ( METHOD_6 ( ) . getString ( VAR_2 ) , METHOD_6 ( ) . getString ( VAR_3 ) ) ; }",['Delete Literal'],2375,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1996,1996,"protected TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ) ) ; }","private TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ) ) ; }",['Update Wra'],2377,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
1997,1997,"private static java.lang.String METHOD_1 ( int i ) { return VAR_1 [ TYPE_1 . METHOD_2 ( i , 0 ) ] ; }",private static java.lang.String METHOD_1 ( int i ) { return VAR_1 [ i ] ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2378,"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']","['VariableRead', 'TypeAccess', 'Literal', 'Invocation']","['VariableRead', 'TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
1998,1998,"public TYPE_1 METHOD_1 ( java.lang.String name ) { if ( VAR_1 . equals ( STRING_1 ) ) return new TYPE_2 ( ) ; if ( VAR_1 . equals ( STRING_2 ) ) return new TYPE_3 ( STRING_3 , true ) ; return super . METHOD_1 ( name ) ; }",public TYPE_1 METHOD_1 ( java.lang.String name ) { if ( VAR_1 . equals ( STRING_1 ) ) return new TYPE_2 ( ) ; return super . METHOD_1 ( name ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Return', 'Delete Block', 'Delete If']",2379,"['Delete If', 'Delete Invocation', 'Delete Literal', 'Delete ConstructorCall']","['TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'Literal', 'ConstructorCall', 'Return', 'Block', 'If']","['If', 'Invocation', 'Literal', 'ConstructorCall']",GPT Missed Nodes,0.5,1.0,0.4444444444444444,0.6153846153846153,4,0,5
1999,1999,private java.lang.String METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 . length ) ; ++ VAR_1 ) buf [ VAR_1 ] = VAR_3 [ VAR_4 . METHOD_2 ( VAR_5 . length ) ] ; return new java.lang.String ( buf ) ; },public java.lang.String METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 . length ) ; ++ VAR_1 ) buf [ VAR_1 ] = VAR_3 [ VAR_4 . METHOD_2 ( VAR_5 . length ) ] ; return new java.lang.String ( buf ) ; },['Update Wra'],2380,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2000,2000,protected java.lang.Void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( ) . METHOD_3 ( ) ; return null ; },protected java.lang.Void METHOD_1 ( ) throws java.lang.Throwable { start ( ) ; return null ; },"['Update Invocation', 'Move Invocation', 'Delete Invocation']",2381,['Update Invocation'],"['Invocation', 'Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.3333333333333333,0.5,1,0,2
2001,2001,public static void main ( java.lang.String [ ] args ) { new java.lang.Thread ( new TYPE_1 ( ) ) . start ( ) ; },public static void main ( ) { new java.lang.Thread ( new TYPE_1 ( ) ) . start ( ) ; },['Delete Parameter'],2382,['Delete Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2002,2002,public void METHOD_1 ( double VAR_1 ) { if ( ( ( ( VAR_2 ) + VAR_1 ) <= INT_1 ) || ( ( ( VAR_2 ) + VAR_1 ) >= 1 ) ) { this . VAR_2 = ( VAR_2 ) + VAR_1 ; } },public void METHOD_1 ( double VAR_1 ) { if ( ( ( ( VAR_2 ) + VAR_1 ) <= INT_1 ) || ( ( ( VAR_2 ) + VAR_1 ) >= 0 ) ) { this . VAR_2 = ( VAR_2 ) + VAR_1 ; } },['Update Literal'],2383,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2003,2003,protected int METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) { return 0 ; } int result = 1 ; while ( VAR_1 > 0 ) { result *= VAR_1 -- ; } return result ; },protected int METHOD_1 ( int VAR_1 ) { int result = 1 ; while ( VAR_1 > 0 ) { result *= VAR_1 -- ; } return result ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2385,"['Delete If', 'Delete Literal', 'Delete VariableRead', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'Literal', 'VariableRead', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
2004,2004,public int METHOD_1 ( float VAR_1 ) { return - ( ( METHOD_2 ( ) ) / INT_1 ) ; },public int METHOD_1 ( ) { return - ( ( METHOD_2 ( ) ) / INT_1 ) ; },"['Delete TypeReference', 'Delete Parameter']",2386,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2005,2005,public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } catch ( TYPE_1 VAR_2 ) { } },private void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } catch ( TYPE_1 VAR_2 ) { } },['Update Wra'],2389,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2006,2006,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 { this . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , null , null , null , true ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 { this . METHOD_1 ( VAR_1 , VAR_2 , null , null , true ) ; }","['Move Literal', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete Literal']",2390,"['Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']","['Literal', 'VariableRead', 'VariableRead', 'Literal', 'Literal']","['VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.3333333333333333,0.4,0.3636363636363636,2,4,3
2007,2007,TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Long VAR_1 ) ;,METHOD_1 ( java.lang.Long VAR_1 ) { },"['Delete TypeReference', 'Delete TypeReference']",2391,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
2008,2008,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String url ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Update Parameter', 'Insert TypeAccess', 'Delete VariableRead']",2393,['Update Parameter'],"['Parameter', 'TypeAccess', 'VariableRead']",['Parameter'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2009,2009,public TYPE_1 get ( ) throws java.io.IOException { return new TYPE_2 ( VAR_1 ) ; },public TYPE_1 get ( ) throws java.io.IOException { return new TYPE_2 ( ) ; },['Delete FieldRead'],2394,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2010,2010,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; return null ; },"['Insert Literal', 'Delete ThisAccess']",2395,['Update Literal'],"['Literal', 'ThisAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2011,2011,"java.lang.String format ( float value , float VAR_1 ) ;",java.lang.String format ( float value ) ;,"['Delete TypeReference', 'Delete Parameter']",2397,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2012,2012,"public void METHOD_1 ( java.lang.String message ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + ( name ) ) + STRING_2 ) , INT_1 ) ; TYPE_2 . METHOD_3 ( ) . METHOD_1 ( ( message + STRING_3 ) , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String message ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + ( name ) ) + STRING_2 ) , INT_1 ) ; TYPE_2 . METHOD_3 ( ) . METHOD_1 ( message , VAR_1 , VAR_2 ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2398,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
2013,2013,"public boolean remove ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . size ( ) ) > 1 ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_1 ) ; } return VAR_4 . METHOD_2 ( ) ; }","public boolean remove ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . size ( ) ) > 1 ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_1 ) ; } return METHOD_2 ( ) ; }",['Update TypeAccess'],2399,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2014,2014,"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String message = VAR_2 . getText ( ) ; VAR_3 . METHOD_2 ( message , VAR_4 ) ; VAR_2 . setText ( STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String message = VAR_2 . getText ( ) ; VAR_3 . METHOD_2 ( message ) ; VAR_2 . setText ( STRING_1 ) ; },['Delete TypeAccess'],2400,"['Delete VariableRead', 'Delete FieldRead']",['TypeAccess'],"['VariableRead', 'FieldRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
2015,2015,"public void METHOD_1 ( TYPE_1 < java.lang.Void > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this , VAR_3 , null , VAR_2 . METHOD_4 ( ) , VAR_4 , VAR_5 , null ) ; }","public void METHOD_1 ( TYPE_1 < java.lang.Void > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( this , VAR_3 , getIntent ( ) , VAR_2 . METHOD_4 ( ) , VAR_4 , VAR_5 , null ) ; }","['Insert Invocation', 'Delete Literal']",2401,"['Insert Invocation', 'Delete Literal']","['Invocation', 'Literal']","['Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2016,2016,"public static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 , int VAR_2 ) throws java.io.IOException , TYPE_1 { return TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) ; }",public static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2402,"['Delete Parameter', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,0.75,0.8571428571428571,3,0,1
2017,2017,public void METHOD_1 ( ) { if ( ( VAR_1 ) >= 0 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . select ( ) ; } },protected void METHOD_1 ( ) { if ( ( VAR_1 ) >= 0 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . select ( ) ; } },['Update Wra'],2406,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2018,2018,"public void METHOD_1 ( ) { int VAR_1 = INT_1 ; assertEquals ( STRING_1 , VAR_1 , VAR_2 . METHOD_1 ( INT_2 ) . size ( ) ) ; }","public void METHOD_1 ( ) { int VAR_1 = INT_1 ; assertEquals ( STRING_1 , VAR_1 , VAR_2 . METHOD_1 ( ) . size ( ) ) ; }",['Delete TypeAccess'],2408,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2019,2019,public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; },private TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; },['Update Wra'],2409,['Insert Wra'],['Wra'],['Wra'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
2020,2020,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( 0 , VAR_1 ) ; TYPE_2 msg = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; VAR_5 . obj = VAR_1 ; VAR_6 . METHOD_3 ( msg ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; TYPE_2 msg = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; VAR_5 . obj = VAR_1 ; VAR_6 . METHOD_3 ( msg ) ; },['Delete Literal'],2410,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2021,2021,"public void METHOD_1 ( android.content.Context context , java.lang.Object item , int position ) { }","public void METHOD_1 ( android.content.Context context , java.lang.Object item ) { }","['Delete TypeReference', 'Delete Parameter']",2412,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2022,2022,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( element ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( null ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_3 ( VAR_3 ) ; METHOD_4 ( null ) ; }","['Update Parameter', 'Delete FieldRead', 'Delete Invocation']",2413,"['Update Parameter', 'Update VariableRead', 'Delete Invocation']","['Parameter', 'FieldRead', 'Invocation']","['Parameter', 'VariableRead', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2023,2023,"boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return ( ( VAR_1 >= 0 ) && ( VAR_1 <= INT_1 ) ) && ( ( VAR_2 >= 0 ) && ( VAR_2 <= INT_1 ) ) ; }","boolean METHOD_1 ( int i , int j ) { return ( ( i >= 0 ) && ( i <= INT_1 ) ) && ( ( j >= 0 ) && ( j <= INT_1 ) ) ; }","['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']",2414,"['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,6,0,0
2024,2024,"private boolean METHOD_1 ( int VAR_1 , java.util.ArrayList < java.util.HashSet < java.lang.Integer > > VAR_2 ) { for ( java.util.Set < java.lang.Integer > set : VAR_2 ) if ( VAR_3 . contains ( VAR_1 ) ) return true ; return false ; }","private boolean METHOD_1 ( int VAR_1 , java.util.ArrayList < java.util.Set < java.lang.Integer > > list ) { for ( java.util.Set < java.lang.Integer > set : list ) if ( VAR_3 . contains ( VAR_1 ) ) return true ; return false ; }","['Update Parameter', 'Update VariableRead', 'Update TypeReference']",2415,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead', 'TypeReference']","['TypeReference', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2025,2025,public TYPE_1 METHOD_1 ( TYPE_2 < ? > value ) { return METHOD_1 ( VAR_1 . end ( ) ) ; },public TYPE_1 METHOD_1 ( TYPE_2 < ? > value ) { return METHOD_1 ( value ) ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2416,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2026,2026,"public boolean METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 ) { int [ ] id = METHOD_2 ( name ) ; if ( ( VAR_2 . length ) == 0 ) return false ; METHOD_3 ( id , VAR_1 ) ; return VAR_1 . METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 ) { int [ ] id = METHOD_2 ( name ) ; if ( ( VAR_2 . length ) == 0 ) return ; METHOD_3 ( id , VAR_1 ) ; }","['Update TypeReference', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",2417,"['Update TypeReference', 'Update Return', 'Delete Return', 'Delete Invocation']","['TypeReference', 'Literal', 'VariableRead', 'Invocation', 'Return']","['TypeReference', 'Return', 'Return', 'Invocation']",GPT Missed Nodes,0.6,0.75,0.6,0.6666666666666665,3,1,2
2027,2027,public void METHOD_1 ( ) { VAR_1 = 0 ; },private void METHOD_1 ( ) { VAR_1 = 0 ; },['Update Wra'],2418,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2028,2028,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , VAR_2 , null ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , VAR_2 , null , null ) ; }",['Insert Literal'],2419,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2029,2029,public void METHOD_1 ( int [ ] VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( int [ ] VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",2421,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2030,2030,protected void setText ( java.util.List < java.lang.String > text ) { VAR_1 . setText ( text ) ; },protected void setText ( java.util.List < java.lang.String > text ) { VAR_1 . setText ( ) ; },['Delete VariableRead'],2422,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2031,2031,public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean end ) { VAR_1 = end ; METHOD_2 ( ) ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete Literal']",2423,"['Insert Parameter', 'Update Assignment']","['Parameter', 'TypeReference', 'VariableRead', 'Literal']","['Parameter', 'Assignment']",Partial Match,0.2,0.5,0.25,0.3333333333333333,1,1,3
2032,2032,"public void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 . info ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ; }","public void METHOD_1 ( long VAR_1 , long VAR_2 ) { java.lang.System.out.println ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ; }","['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",2425,"['Delete FieldRead', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert FieldRead']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['FieldRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'FieldRead', 'FieldRead']",GPT Missed Nodes,0.6666666666666666,0.3333333333333333,0.5,0.4,2,4,2
2033,2033,public static java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },public static java.util.List < TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead']",2426,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2034,2034,"public void METHOD_1 ( TYPE_1 item ) { VAR_1 . add ( 0 , item ) ; }",public void METHOD_1 ( TYPE_1 item ) { VAR_1 . add ( item ) ; },['Delete Literal'],2427,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2035,2035,"public static void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( java.lang.Thread . METHOD_3 ( ) , true , ( VAR_1 * INT_1 ) ) ; }","public static void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( java.lang.Thread . METHOD_3 ( ) , true , VAR_1 ) ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2428,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
2036,2036,"private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { TYPE_6 writer = new TYPE_6 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , writer ) ; return new TYPE_1 ( VAR_4 . toString ( ) ) ; }","private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { TYPE_6 writer = new TYPE_6 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , writer ) ; return new TYPE_1 ( writer ) ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2429,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
2037,2037,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( ) ; },['Insert ThisAccess'],2430,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2038,2038,"public static TYPE_1 METHOD_1 ( final long min , final long VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( min , VAR_1 ) ) . msg ( ( ( ( ( STRING_1 + min ) + STRING_2 ) + VAR_1 ) + STRING_3 ) ) ; }","public static TYPE_1 METHOD_1 ( final long min , final long VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_1 ) ) . msg ( ( ( ( ( STRING_1 + min ) + STRING_2 ) + VAR_1 ) + STRING_3 ) ) ; }",['Update VariableRead'],2431,['Update ConstructorCall'],['VariableRead'],['ConstructorCall'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2039,2039,private void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_2 < TYPE_3 > ( ) { public void METHOD_4 ( TYPE_3 VAR_2 ) { VAR_1 . METHOD_5 ( VAR_2 ) ; } } ) ; },public TYPE_3 METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_2 < TYPE_3 > ( ) { public void METHOD_4 ( TYPE_3 VAR_2 ) { VAR_1 . METHOD_5 ( VAR_2 ) ; } } ) ; return this ; },"['Update TypeReference', 'Insert Return', 'Update Wra', 'Insert ThisAccess']",2432,"['Update Wra', 'Update Wra', 'Update TypeReference', 'Insert Return', 'Insert ThisAccess']","['TypeReference', 'Return', 'Wra', 'ThisAccess']","['Wra', 'Wra', 'TypeReference', 'Return', 'ThisAccess']",Exact Match,1.0,0.8,1.0,0.888888888888889,4,1,0
2040,2040,"public double getValue ( double x , double y ) { return x + y ; }","public double getValue ( double x , double y ) { return 1 ; }","['Insert Literal', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator']",2434,"['Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead', 'VariableRead', 'BinaryOperator']","['VariableRead', 'BinaryOperator', 'VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
2041,2041,"private boolean METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = TYPE_2 . METHOD_2 ( this , VAR_1 ) ; return ( VAR_2 > 0 ) && ( VAR_2 <= ( VAR_3 ) ) ; }","private boolean METHOD_1 ( TYPE_1 data ) { int VAR_2 = TYPE_2 . METHOD_2 ( this , data ) ; return ( VAR_2 > 0 ) && ( VAR_2 <= ( VAR_3 ) ) ; }","['Update Parameter', 'Update TypeReference', 'Update VariableRead']",2435,"['Update Parameter', 'Update TypeReference', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'TypeReference', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2042,2042,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },['Delete FieldRead'],2438,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2043,2043,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; boolean VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 , true ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; boolean VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; },['Delete Literal'],2440,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2044,2044,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . show ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . show ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete Invocation']",2441,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2045,2045,private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_3 ( VAR_6 ) ; VAR_7 = context . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_3 ( VAR_6 ) ; VAR_7 = VAR_1 . METHOD_3 ( VAR_4 ) ; },"['Insert VariableRead', 'Delete FieldRead', 'Delete Invocation']",2442,"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Insert VariableRead', 'Insert Invocation']","['VariableRead', 'FieldRead', 'Invocation']","['FieldRead', 'Invocation', 'Invocation', 'VariableRead', 'Invocation']",Exact Match,1.0,0.6,1.0,0.7499999999999999,3,2,0
2046,2046,public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { java.lang.System.out.println ( VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; } },public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { java.lang.System.out.println ( VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; } },"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",2443,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2047,2047,"public static java.util.Collection < TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > > METHOD_1 ( ) { return java.util.Arrays.asList ( new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( ) , new TYPE_8 ( ) , new TYPE_9 ( ) ) ; }","public static java.util.Collection < TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > > METHOD_1 ( ) { return java.util.Arrays.asList ( new TYPE_5 ( ) ) ; }","['Delete ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall']",2445,"['Delete ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall']","['ConstructorCall', 'ConstructorCall', 'ConstructorCall', 'ConstructorCall']","['ConstructorCall', 'ConstructorCall', 'ConstructorCall', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
2048,2048,"public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 ) { METHOD_2 ( STRING_1 , VAR_1 ) ; METHOD_2 ( STRING_2 , VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_3 ) ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 ) { METHOD_2 ( STRING_1 , VAR_1 ) ; METHOD_2 ( STRING_2 , VAR_1 ) ; METHOD_2 ( STRING_3 , VAR_3 ) ; }",['Update VariableRead'],2447,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2049,2049,"public android.view.View METHOD_1 ( int position ) { return getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( position , VAR_2 ) , null ) ; }","public android.view.View METHOD_1 ( int position ) { return getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( position , 0 ) , null ) ; }","['Insert Literal', 'Delete TypeAccess']",2448,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2050,2050,public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete ConstructorCall']",2449,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation']",Partial Match,0.25,0.25,0.5,0.3333333333333333,1,3,1
2051,2051,java.util.List < ? > METHOD_1 ( java.io.File content ) throws TYPE_1 ;,java.util.List < ? > METHOD_1 ( java.io.File file ) throws TYPE_1 ;,['Update Parameter'],2451,['Update Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2052,2052,"public static byte [ ] METHOD_1 ( short VAR_1 , int VAR_2 , int VAR_3 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 , VAR_2 , VAR_3 ) ; }","public static byte [ ] METHOD_1 ( short VAR_1 , int VAR_2 , int VAR_3 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 , VAR_2 , VAR_2 ) ; }",['Update VariableRead'],2452,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2053,2053,public static java.lang.String METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= 1 ) && ( VAR_1 <= INT_1 ) ) { return TYPE_1 . METHOD_1 ( VAR_1 ) ; } else { return STRING_1 ; } },public static java.lang.String METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= 1 ) || ( VAR_1 <= INT_1 ) ) { return TYPE_1 . METHOD_1 ( VAR_1 ) ; } else { return STRING_1 ; } },['Update BinaryOperator'],2453,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2054,2054,"public abstract void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) ;","public abstract void METHOD_1 ( int VAR_1 , int VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",2454,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2055,2055,public void remove ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; } synchronized ( VAR_4 ) { VAR_5 . remove ( new TYPE_2 ( VAR_1 ) ) ; } },public void remove ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . remove ( VAR_1 ) ; } synchronized ( VAR_4 ) { VAR_5 . remove ( VAR_1 ) ; } },"['Move VariableRead', 'Delete ConstructorCall']",2455,"['Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2056,2056,public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; },private void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; },['Update Wra'],2456,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2057,2057,"public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_2 == null ) || ( ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) > ( VAR_3 ) ) ; }","public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_2 == null ) && ( ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) > ( VAR_3 ) ) ; }",['Update BinaryOperator'],2457,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2058,2058,public TYPE_1 get ( java.lang.Object key ) { return ( ( TYPE_1 ) ( VAR_1 . get ( new TYPE_2 ( ( ( TYPE_3 ) ( key ) ) ) ) ) ) ; },public TYPE_1 get ( java.lang.Object key ) { return ( ( TYPE_1 ) ( VAR_1 . get ( key ) ) ) ; },"['Insert VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall']",2458,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference']","['VariableRead', 'TypeReference', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference']",GPT Missed Nodes,0.6666666666666666,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2059,2059,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.util.ArrayList < TYPE_1 > VAR_4 , java.util.Date VAR_5 ) { new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) . start ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.util.ArrayList < TYPE_1 > VAR_4 , java.util.Date VAR_5 , android.content.Context context ) { new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , context ) . start ( ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead']",2459,"['Insert Parameter', 'Insert VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2060,2060,"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 , TYPE_1 VAR_4 , java.lang.String VAR_5 , int VAR_6 , boolean VAR_7 ) throws TYPE_2 ;","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 , TYPE_1 VAR_4 , java.lang.String VAR_5 , int VAR_6 ) throws TYPE_2 ;","['Delete TypeReference', 'Delete Parameter']",2460,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2061,2061,public TYPE_1 METHOD_1 ( TYPE_1 node ) { TYPE_2 VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( true ) ; } VAR_2 . METHOD_4 ( node ) ; VAR_3 . METHOD_5 ( ) ; return node ; },public void METHOD_1 ( TYPE_1 node ) { TYPE_2 VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( true ) ; } VAR_2 . METHOD_4 ( node ) ; VAR_3 . METHOD_5 ( ) ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Return']",2461,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2062,2062,protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( STRING_1 ) ; return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( STRING_1 ) ; return VAR_1 ; },['Update Wra'],2462,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2063,2063,public void METHOD_1 ( java.lang.String VAR_1 ) ;,public void METHOD_1 ( ) ;,"['Delete TypeReference', 'Delete Parameter']",2463,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2064,2064,"public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.Long > VAR_1 , java.lang.Long VAR_2 ) { return new java.util.ArrayList < TYPE_1 > ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.Long > VAR_1 , java.lang.Long VAR_2 ) { return null ; }","['Insert Literal', 'Delete ConstructorCall']",2464,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2065,2065,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , STRING_2 , null , new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( context , STRING_3 ) ; } } ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , STRING_2 , true , null , new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( context , STRING_3 ) ; } } ) ; }",['Insert Literal'],2465,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2066,2066,public static void METHOD_1 ( java.lang.Integer [ ] data ) { VAR_1 = new java.util.ArrayList < java.lang.Integer > ( java.util.Arrays.asList ( data ) ) ; },public static void METHOD_1 ( java.lang.Integer [ ] data ) { VAR_1 = java.util.Arrays.asList ( data ) ; },"['Move Invocation', 'Delete ConstructorCall']",2466,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['Invocation', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference']",Partial Match,0.3333333333333333,0.25,0.5,0.3333333333333333,1,3,1
2067,2067,public java.lang.Object METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Return']",2467,"['Update TypeReference', 'Delete Return']","['TypeReference', 'VariableRead', 'Return']","['TypeReference', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2068,2068,public int METHOD_1 ( ) { return this . y ; },public int METHOD_1 ( ) { return y ; },['Delete ThisAccess'],2468,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2069,2069,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; },['Delete TypeAccess'],2469,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2070,2070,"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 ;",void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_3 ;,"['Delete TypeReference', 'Delete Parameter']",2470,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2071,2071,protected < TYPE_1 > boolean METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { return false ; },protected < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { },"['Update TypeReference', 'Delete Literal', 'Delete Return']",2471,"['Update TypeReference', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2072,2072,"private void error ( java.lang.String error ) { this . METHOD_1 ( STRING_1 , null , ( error + ( TYPE_1 . METHOD_2 ( ) ) ) ) ; }","private void error ( java.lang.String error ) { this . METHOD_1 ( STRING_1 , null , error ) ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",2472,"['Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'Invocation', 'BinaryOperator']","['BinaryOperator', 'TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
2073,2073,"public TYPE_1 METHOD_1 ( java.lang.String name , int id , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return new TYPE_1 ( id , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String name , int id , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return new TYPE_1 ( id , VAR_1 , VAR_2 ) ; }","['Insert VariableRead', 'Insert VariableRead', 'Delete FieldRead', 'Delete FieldRead']",2473,"['Update VariableRead', 'Update VariableRead']","['VariableRead', 'VariableRead', 'FieldRead', 'FieldRead']","['VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.0,0.0,0.0,0,2,4
2074,2074,"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . getName ( ) , STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . getName ( ) , STRING_1 ) ; METHOD_3 ( ) ; }",['Delete TypeAccess'],2474,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2075,2075,protected void METHOD_1 ( ) { main . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },public final void METHOD_1 ( ) { main . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Update Wra', 'Insert Wra']",2475,"['Update Wra', 'Insert Wra']","['Wra', 'Wra']","['Wra', 'Wra']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2076,2076,"public static byte [ ] METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = ( ( ( ( VAR_4 ) + STRING_1 ) + VAR_1 ) + STRING_2 ) + VAR_2 ; return VAR_3 . METHOD_2 ( ) ; }","public static byte [ ] METHOD_1 ( long VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = ( ( ( ( VAR_4 ) + STRING_1 ) + VAR_1 ) + STRING_1 ) + VAR_2 ; return VAR_3 . METHOD_2 ( ) ; }",['Update FieldRead'],2476,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2077,2077,private void METHOD_1 ( int VAR_1 ) { java.lang.Object value = get ( VAR_1 ) ; if ( value instanceof TYPE_1 ) { ( ( TYPE_1 ) ( value ) ) . METHOD_2 ( ) ; } },private void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) return ; java.lang.Object value = get ( VAR_1 ) ; if ( value instanceof TYPE_1 ) { ( ( TYPE_1 ) ( value ) ) . METHOD_2 ( ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Insert Return']",2477,"['Insert If', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Insert Return']","['If', 'BinaryOperator', 'Block', 'VariableRead', 'Literal', 'Return']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.8333333333333334,0.9090909090909091,5,0,1
2078,2078,private void METHOD_1 ( ) { TYPE_1 < java.lang.String > file = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( file . METHOD_3 ( ) ) { METHOD_4 ( VAR_2 . get ( ) ) ; } else { VAR_3 . info ( STRING_1 ) ; } },private void METHOD_1 ( ) { TYPE_1 < java.lang.String > file = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( file . METHOD_3 ( ) ) { METHOD_4 ( VAR_2 . get ( ) ) ; } else { java.lang.System.out.println ( STRING_1 ) ; } },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess']",2478,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert FieldRead']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'FieldRead', 'FieldRead']",GPT Missed Nodes,0.6666666666666666,0.5,0.5,0.5,2,2,2
2079,2079,"public void METHOD_1 ( TYPE_1 context ) { final TYPE_2 VAR_1 = context . METHOD_2 ( ) ; final TYPE_3 < ? > VAR_2 = context . METHOD_3 ( ) ; this . METHOD_4 ( VAR_1 , VAR_2 , context ) ; }","public void METHOD_1 ( TYPE_1 context ) { final TYPE_2 VAR_1 = context . METHOD_2 ( ) ; final TYPE_3 < ? > VAR_2 = context . METHOD_3 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; this . METHOD_4 ( VAR_1 , VAR_2 , context ) ; }","['Insert Invocation', 'Insert VariableRead', 'Insert VariableRead']",2479,"['Insert Invocation', 'Insert VariableRead', 'Insert Invocation']","['Invocation', 'VariableRead', 'VariableRead']","['Invocation', 'VariableRead', 'Invocation']",Exact Match,1.0,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2080,2080,"private void execute ( TYPE_1 p , TYPE_1 VAR_1 ) { METHOD_1 ( p , VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 , p , VAR_1 ) ; }",private void execute ( ) { METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']",2481,"['Delete Parameter', 'Delete Parameter', 'Update Invocation', 'Update Invocation']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'Invocation', 'Invocation']",Partial Match,0.25,0.5,0.25,0.3333333333333333,2,2,6
2081,2081,"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 = new TYPE_2 ( VAR_2 , this , VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 = new TYPE_2 ( VAR_2 , this , VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; }",['Delete Invocation'],2482,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2082,2082,"public boolean METHOD_1 ( java.util.Calendar VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) >= 0 ) { return true ; } return false ; }","public boolean METHOD_1 ( java.util.Calendar VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) > 0 ) { return true ; } return false ; }",['Update BinaryOperator'],2483,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2083,2083,"public void METHOD_1 ( java.lang.String VAR_1 , boolean delete ) { }",public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeReference', 'Delete Parameter']",2484,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2084,2084,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; for ( java.lang.String value : VAR_4 ) { TYPE_2 . METHOD_2 ( value , VAR_1 . METHOD_3 ( value ) ) ; } }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; for ( java.lang.String value : VAR_4 ) { TYPE_2 . METHOD_2 ( value , VAR_1 . METHOD_3 ( value ) ) ; } }",['Delete FieldRead'],2485,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2085,2085,public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( this . VAR_1 ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2486,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2086,2086,private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return null ; } TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return null ; } return TYPE_3 . METHOD_3 ( VAR_2 ) ; },private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return null ; } return TYPE_3 . METHOD_3 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2487,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
2087,2087,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( ( ( int ) ( VAR_1 . METHOD_2 ( ) ) ) , ( ( int ) ( VAR_1 . METHOD_3 ( ) ) ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; }","['Delete TypeReference', 'Delete TypeReference']",2488,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete BinaryOperator', 'Delete BinaryOperator']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'BinaryOperator', 'BinaryOperator']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,2,4,0
2088,2088,public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( 1 ) ; VAR_2 . METHOD_3 ( ) ; },"['Insert Literal', 'Delete TypeAccess']",2489,"['Delete TypeAccess', 'Delete FieldRead', 'Insert Literal']","['Literal', 'TypeAccess']","['TypeAccess', 'FieldRead', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
2089,2089,public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update Wra'],2490,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2090,2090,"public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_2 , VAR_1 ) ; getActivity ( ) . METHOD_3 ( VAR_3 , intent ) ; getActivity ( ) . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_2 , VAR_1 ) ; getActivity ( ) . METHOD_3 ( 0 , intent ) ; getActivity ( ) . METHOD_4 ( ) ; }","['Insert Literal', 'Delete TypeAccess']",2491,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2091,2091,"public void init ( android.content.Context context ) { boolean VAR_1 = ( ( boolean ) ( TYPE_1 . METHOD_1 ( context , STRING_1 ) ) ) ; TYPE_2 . METHOD_2 ( ( VAR_1 ? new TYPE_3 ( ) : new TYPE_4 ( ) ) ) ; }","public void init ( android.content.Context context ) { boolean VAR_1 = ( ( boolean ) ( TYPE_1 . METHOD_1 ( context , STRING_1 ) ) ) ; TYPE_2 . METHOD_2 ( ( VAR_1 ? new TYPE_3 ( ) : new TYPE_4 ( info , error ) ) ) ; }","['Insert FieldRead', 'Insert FieldRead']",2492,"['Insert VariableRead', 'Insert VariableRead']","['FieldRead', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
2092,2092,"protected void METHOD_1 ( TYPE_1 attribute ) { this . METHOD_2 ( ) . add ( attribute ) ; this . METHOD_3 ( ) . put ( VAR_1 . getName ( ) , attribute ) ; }","private void METHOD_1 ( TYPE_1 attribute ) { this . METHOD_2 ( ) . add ( attribute ) ; this . METHOD_3 ( ) . put ( VAR_1 . getName ( ) , attribute ) ; }",['Update Wra'],2493,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2093,2093,"private TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_2 = new TYPE_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; return VAR_1 ; }","protected TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_2 = new TYPE_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; return VAR_1 ; }",['Update Wra'],2494,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2094,2094,"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Random VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 ) { }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.Random VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 ) { return false ; }","['Update TypeReference', 'Insert Return', 'Insert Literal']",2495,"['Update TypeReference', 'Insert Return', 'Insert Literal']","['TypeReference', 'Return', 'Literal']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2095,2095,"protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , false , STRING_3 ) ; return VAR_1 ; }","protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , true , STRING_3 ) ; return VAR_1 ; }",['Update Literal'],2496,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2096,2096,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( true ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2498,"['Delete Invocation', 'Delete Literal']","['TypeAccess', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2097,2097,public void METHOD_1 ( final int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },['Update TypeReference'],2499,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2098,2098,public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > info = TYPE_2 . METHOD_2 ( ) ; METHOD_1 ( info ) ; return VAR_1 . list ( info ) . METHOD_3 ( ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > info = TYPE_2 . METHOD_2 ( ) ; METHOD_1 ( info ) ; return info ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2500,"['Delete FieldRead', 'Delete Invocation', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['FieldRead', 'Invocation', 'Invocation']",Partial Match,0.25,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2099,2099,"public static TYPE_1 METHOD_1 ( final char value ) { if ( value > INT_1 ) { throw new TYPE_2 ( VAR_1 . format ( STRING_1 , value ) ) ; } return new TYPE_1 ( ( ( int ) ( value ) ) ) ; }",public static TYPE_1 METHOD_1 ( final char value ) { if ( value > INT_1 ) { throw new TYPE_2 ( STRING_1 ) ; } return new TYPE_1 ( ( ( int ) ( value ) ) ) ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2501,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['FieldRead', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
2100,2100,"void METHOD_1 ( java.util.List < TYPE_1 > data , boolean VAR_1 ) ;",void METHOD_1 ( java.util.List < TYPE_1 > data ) ;,"['Delete TypeReference', 'Delete Parameter']",2502,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2101,2101,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( INT_1 , TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . assertThat ( VAR_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( false ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . assertThat ( VAR_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( false ) ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Delete FieldRead']",2504,"['Delete Literal', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeAccess', 'FieldRead']","['Literal', 'TypeAccess', 'Invocation']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2102,2102,"void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 ;","void METHOD_1 ( java.lang.String VAR_2 , java.lang.String [ ] VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 ;","['Delete TypeReference', 'Delete Parameter']",2505,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2103,2103,"protected void METHOD_1 ( final java.lang.String VAR_1 , final TYPE_1 writer ) { if ( VAR_1 != null ) { writer . METHOD_2 ( STRING_1 ) ; VAR_2 . setValue ( VAR_3 . toString ( ) ) ; writer . METHOD_3 ( ) ; } }","protected void METHOD_1 ( final java.lang.Boolean VAR_1 , final TYPE_1 writer ) { if ( VAR_1 != null ) { writer . METHOD_2 ( STRING_1 ) ; VAR_2 . setValue ( VAR_3 . toString ( ) ) ; writer . METHOD_3 ( ) ; } }",['Update TypeReference'],2506,"['Update TypeReference', 'Update Parameter']",['TypeReference'],"['TypeReference', 'Parameter']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2104,2104,private static void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) ) ) ; },private static void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) ) ) ; java.lang.System.exit ( 1 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Insert Literal']",2508,"['Insert TypeAccess', 'Insert Invocation', 'Insert Literal']","['Invocation', 'TypeAccess', 'Literal']","['TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2105,2105,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; } if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } return this ; },['Move VariableRead'],2509,"['Update FieldRead', 'Update Invocation']",['VariableRead'],"['FieldRead', 'Invocation']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
2106,2106,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.Integer VAR_2 ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; }",public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2510,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2107,2107,protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; super . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; super . METHOD_1 ( VAR_1 ) ; },['Insert ThisAccess'],2511,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2108,2108,public int METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( 1 ) ) ; },private int METHOD_1 ( ) { return METHOD_2 ( METHOD_3 ( 1 ) ) ; },['Update Wra'],2512,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2109,2109,"public boolean METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 ; if ( ( VAR_4 [ VAR_1 ] ) == null ) { VAR_4 [ VAR_1 ] = VAR_2 ; VAR_3 = true ; } else { VAR_3 = false ; } return VAR_3 ; }","public boolean METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 ; if ( ( VAR_4 [ VAR_1 ] ) != null ) { VAR_4 [ VAR_1 ] = VAR_2 ; VAR_3 = true ; } else { VAR_3 = false ; } return VAR_3 ; }",['Update BinaryOperator'],2513,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2110,2110,private int METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_2 ) - ( VAR_3 ) ) / INT_1 ; },public int METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_2 ) - ( VAR_3 ) ) / INT_1 ; },['Update Wra'],2514,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2111,2111,public void METHOD_1 ( java.util.List < java.lang.Boolean > VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.Boolean > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",2515,"['Delete Invocation', 'Delete VariableRead']","['VariableRead', 'Invocation']","['Invocation', 'VariableRead']",Exact Match,1.0,0.5,0.5,0.5,1,1,1
2112,2112,"public static TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { final java.lang.String VAR_1 = STRING_1 ; final byte [ ] VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; return TYPE_3 . METHOD_3 ( VAR_2 ) ; }","public final TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { final java.lang.String VAR_1 = STRING_1 ; final byte [ ] VAR_2 = METHOD_2 ( VAR_1 ) ; return METHOD_3 ( VAR_2 ) ; }","['Move Wra', 'Update Wra', 'Update TypeAccess', 'Update TypeAccess']",2517,"['Delete Wra', 'Insert Wra', 'Delete TypeAccess', 'Delete TypeAccess', 'Update Invocation', 'Update Invocation']","['Wra', 'Wra', 'TypeAccess', 'TypeAccess']","['Wra', 'Wra', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']",GPT Hallucinated Nodes,0.6666666666666666,0.0,0.0,0.0,0,6,4
2113,2113,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( x , y , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( x , x , VAR_2 , VAR_3 ) ; }",['Update FieldRead'],2519,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2114,2114,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; },['Delete Invocation'],2522,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2115,2115,"public java.io.File [ ] METHOD_1 ( ) { return new java.io.File [ ] { new java.io.File ( VAR_1 , STRING_1 ) , new java.io.File ( VAR_1 , STRING_2 ) , new java.io.File ( VAR_1 , STRING_3 ) } ; }","public java.io.File [ ] METHOD_1 ( ) { return new java.io.File [ ] { new java.io.File ( VAR_1 , STRING_1 ) } ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall']",2523,"['Delete ConstructorCall', 'Delete ConstructorCall']","['FieldRead', 'FieldRead', 'ConstructorCall', 'FieldRead', 'FieldRead', 'ConstructorCall']","['ConstructorCall', 'ConstructorCall']",GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,2,0,4
2116,2116,"protected void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 , boolean VAR_5 ) throws java.io.IOException { METHOD_1 ( name , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , null , null , VAR_5 ) ; }","protected void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 ) throws java.io.IOException { METHOD_1 ( name , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , null , null ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2524,"['Delete Parameter', 'Delete Parameter', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'Parameter', 'Invocation', 'VariableRead']",Partial Match,0.5,0.5,0.6666666666666666,0.5714285714285715,2,2,1
2117,2117,public final java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return VAR_2 ; } else { return VAR_1 ; } },protected final java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return VAR_2 ; } else { return VAR_1 ; } },['Update Wra'],2525,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2118,2118,"public static int METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; return VAR_2 . getInt ( VAR_3 , INT_1 ) ; }","public static int METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; return VAR_2 . getInt ( VAR_3 , 0 ) ; }","['Insert Literal', 'Delete TypeAccess']",2526,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2119,2119,"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( data ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object data ) { VAR_2 . METHOD_2 ( data ) ; }","['Move Parameter', 'Update Parameter', 'Update Parameter', 'Update TypeReference', 'Update TypeReference', 'Delete TypeReference']",2528,"['Update TypeReference', 'Update TypeReference']","['Parameter', 'Parameter', 'Parameter', 'TypeReference', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference']",GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,2,0,4
2120,2120,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_2 . assertThat ( TYPE_2 . METHOD_2 ( STRING_1 ) , TYPE_3 . METHOD_3 ( VAR_3 . toString ( ) ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; assertThat ( TYPE_2 . METHOD_2 ( STRING_1 ) , TYPE_3 . METHOD_3 ( VAR_3 . toString ( ) ) ) ; }",['Update TypeAccess'],2529,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
2121,2121,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; }","['Delete VariableRead', 'Delete Invocation']",2530,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2122,2122,"public int METHOD_1 ( int VAR_1 , int VAR_2 ) ;",public int METHOD_1 ( int VAR_2 ) ;,"['Delete TypeReference', 'Delete Parameter']",2531,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2123,2123,private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; },['Delete TypeAccess'],2533,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2124,2124,"int METHOD_1 ( int id , java.lang.String name , boolean VAR_1 , java.lang.String VAR_2 , boolean VAR_3 , int VAR_4 , int VAR_5 , java.lang.String VAR_6 ) ;","int METHOD_1 ( int id , java.lang.String name , boolean VAR_1 , int VAR_4 , int VAR_5 , java.lang.String VAR_6 ) ;","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",2534,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
2125,2125,private long METHOD_1 ( ) { long VAR_1 = VAR_2 ; long VAR_3 = VAR_2 ; VAR_3 ^= VAR_3 < < INT_1 ; VAR_3 ^= VAR_3 > > > INT_2 ; VAR_3 ^= VAR_3 < < INT_3 ; VAR_2 = VAR_3 ; return VAR_1 + VAR_3 ; },private int METHOD_1 ( ) { int VAR_1 = VAR_2 ; int VAR_3 = VAR_2 ; VAR_3 ^= VAR_3 < < INT_1 ; VAR_3 ^= VAR_3 > > > INT_2 ; VAR_3 ^= VAR_3 < < INT_3 ; VAR_2 = VAR_3 ; return VAR_1 + VAR_3 ; },"['Update TypeReference', 'Update TypeReference', 'Update TypeReference']",2535,"['Update TypeReference', 'Update TypeReference', 'Update TypeReference']","['TypeReference', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2126,2126,"public static TYPE_1 METHOD_1 ( final TYPE_2 [ ] VAR_1 ) { return TYPE_3 . METHOD_2 ( VAR_1 , false , false , null , null , null ) ; }","public static TYPE_1 METHOD_1 ( final TYPE_2 [ ] VAR_1 ) { return TYPE_3 . METHOD_2 ( VAR_1 , false , false , null , null ) ; }",['Delete Literal'],2536,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2127,2127,"public void get ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_2 . execute ( new TYPE_2 ( url , VAR_1 , VAR_3 ) ) ; }","public void get ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_2 . execute ( new TYPE_2 ( url , VAR_1 ) ) ; }",['Delete FieldRead'],2537,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2128,2128,"public void METHOD_1 ( int VAR_1 ) { for ( int i = 1 ; i <= ( VAR_2 . size ( ) ) ; i ++ ) TYPE_1 . METHOD_2 ( i , VAR_3 . get ( VAR_1 ) ) ; }","public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) TYPE_1 . METHOD_2 ( i , VAR_3 . get ( VAR_1 ) ) ; }","['Update BinaryOperator', 'Update Literal']",2538,"['Update Literal', 'Update BinaryOperator']","['BinaryOperator', 'Literal']","['Literal', 'BinaryOperator']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2129,2129,"public TYPE_1 METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 ) { return VAR_3 . METHOD_2 ( VAR_4 , STRING_1 , VAR_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( double VAR_1 , TYPE_2 VAR_2 ) { return VAR_3 . METHOD_2 ( VAR_4 , STRING_1 , VAR_2 ) ; }","['Update TypeReference', 'Delete VariableRead']",2539,"['Update TypeReference', 'Update Parameter', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'VariableRead']","['TypeReference', 'Parameter', 'VariableRead', 'VariableRead']",GPT Hallucinated Nodes,0.6666666666666666,0.5,1.0,0.6666666666666666,2,2,0
2130,2130,public boolean METHOD_1 ( double VAR_1 ) { return ( VAR_1 >= ( VAR_2 ) ) && ( VAR_1 < ( VAR_3 ) ) ; },public boolean METHOD_1 ( double VAR_1 ) { return ( VAR_1 >= ( VAR_2 ) ) && ( VAR_1 <= ( VAR_3 ) ) ; },['Update BinaryOperator'],2540,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2131,2131,"protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 , VAR_1 ) ; }",protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) ; },['Delete FieldRead'],2541,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2132,2132,"public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; intent . METHOD_2 ( STRING_1 , VAR_1 ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2543,"['Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['VariableRead', 'TypeAccess', 'VariableRead', 'Invocation']","['Invocation', 'Literal', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2133,2133,"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , false , false ) ; TYPE_1 . METHOD_2 ( VAR_3 , false , false ) ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( VAR_3 , false , false ) ; }","['Delete Literal', 'Delete Literal']",2544,"['Delete Literal', 'Delete Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2134,2134,"public void handle ( java.lang.Throwable t ) { t . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , this , true ) ; }","public void handle ( java.lang.Throwable t ) { METHOD_2 ( VAR_1 , this , true ) ; }","['Delete VariableRead', 'Delete Invocation']",2545,"['Delete VariableRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2135,2135,"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , false , 1 , ( VAR_3 + INT_1 ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , false , ( VAR_3 + INT_1 ) ) ; }",['Delete Literal'],2546,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2136,2136,"public static java.util.List < java.net.URL > METHOD_1 ( final TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( true , VAR_1 ) ; }","public static java.util.List < java.net.URL > METHOD_1 ( final TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( false , VAR_1 ) ; }",['Update Literal'],2547,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2137,2137,"public static void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 , VAR_3 . METHOD_2 ( ) , VAR_3 . METHOD_3 ( ) , VAR_2 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 , VAR_3 . METHOD_2 ( ) , VAR_3 . METHOD_3 ( ) , true ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2548,"['Delete Parameter', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'Literal']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
2138,2138,"protected void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 , int VAR_2 ) { for ( int i = 0 ; i < VAR_2 ; i ++ ) { VAR_3 . get ( i ) ; } }","private void METHOD_1 ( TYPE_1 < java.lang.Integer , java.lang.Integer > VAR_1 , int VAR_2 ) { for ( int i = 0 ; i < VAR_2 ; i ++ ) { VAR_3 . get ( i ) ; } }",['Update Wra'],2549,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2139,2139,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2551,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['FieldRead', 'Invocation', 'Literal']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2140,2140,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { return VAR_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_2 ) ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_3 , VAR_2 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2552,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2141,2141,public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . METHOD_2 ( this ) ; VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . METHOD_2 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation']",2553,['Delete Invocation'],"['TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2142,2142,public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( this ) ; new TYPE_3 ( ) . execute ( ( ( VAR_4 ) + STRING_1 ) ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( this ) ; new TYPE_3 ( ) . execute ( ( ( VAR_4 ) + STRING_1 ) ) ; },['Update Wra'],2554,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2143,2143,public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = new java.util.Date ( ) ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = null ; } this . VAR_1 = VAR_1 ; },"['Insert Literal', 'Delete ConstructorCall']",2555,"['Delete ConstructorCall', 'Delete TypeReference', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
2144,2144,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { VAR_2 . METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Update TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return']",2556,"['Update TypeReference', 'Delete Return', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'ConstructorCall', 'Return']","['TypeReference', 'Return', 'ConstructorCall', 'TypeReference', 'VariableRead']",Partial Match,0.6,0.6,0.75,0.6666666666666665,3,2,1
2145,2145,"public TYPE_1 METHOD_1 ( float VAR_1 , float height ) { return METHOD_2 ( new float [ ] { 0 , 0 } , new float [ ] { 0 , height } ) ; }","public TYPE_1 METHOD_1 ( float VAR_1 , float height ) { return METHOD_2 ( new float [ ] { 0 , 0 } , new float [ ] { 0 , VAR_1 } ) ; }",['Update VariableRead'],2557,"['Delete VariableRead', 'Insert VariableRead', 'Delete Parameter', 'Insert Parameter']",['VariableRead'],"['VariableRead', 'VariableRead', 'Parameter', 'Parameter']",GPT Hallucinated Nodes,0.5,0.0,0.0,0.0,0,4,1
2146,2146,"public java.lang.Object [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , parameters ) ; }","public java.lang.Object [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , parameters , false ) ; }",['Insert Literal'],2558,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2147,2147,"public static void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { VAR_1 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( ) ; }","private static void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { VAR_1 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( ) ; }",['Update Wra'],2559,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2148,2148,public void METHOD_1 ( TYPE_1 state ) { VAR_1 . add ( new TYPE_2 ( state ) ) ; },public void METHOD_1 ( TYPE_1 state ) { VAR_1 . add ( state ) ; },"['Move VariableRead', 'Delete ConstructorCall']",2560,"['Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2149,2149,"public boolean METHOD_1 ( java.lang.String key , boolean VAR_1 ) { return this . put ( key , new java.lang.Boolean ( VAR_1 ) ) ; }","public boolean METHOD_1 ( java.lang.String key , boolean VAR_1 ) { return this . put ( new java.lang.Boolean ( VAR_1 ) ) ; }",['Delete VariableRead'],2561,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2150,2150,"public java.lang.String METHOD_1 ( long VAR_1 ) { int index = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; if ( index <= ( - 1 ) ) return null ; return VAR_3 . get ( index ) . VAR_4 ; }","public java.lang.String METHOD_1 ( long VAR_1 ) { int index = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; if ( index == ( - 1 ) ) return null ; return VAR_3 . get ( index ) . VAR_4 ; }",['Update BinaryOperator'],2562,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2151,2151,"public void METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( STRING_1 , VAR_3 . size ( ) , TYPE_3 . METHOD_5 ( INT_1 ) ) ; }","public void METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( STRING_1 , VAR_3 . size ( ) , TYPE_3 . METHOD_5 ( 1 ) ) ; }","['Insert Literal', 'Delete TypeAccess']",2563,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2152,2152,"public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 context ) { return new TYPE_2 < TYPE_1 > ( context , ( ( TYPE_1 ) ( VAR_1 ) ) ) ; }","public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 context ) { return new TYPE_2 < TYPE_1 > ( TYPE_3 . METHOD_1 ( ) , ( ( TYPE_1 ) ( VAR_1 ) ) ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Delete VariableRead']",2564,"['Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeAccess', 'VariableRead']","['TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2153,2153,private void METHOD_1 ( java.lang.String [ ] message ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) ) ; },['Delete Parameter'],2565,['Delete Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2154,2154,"public static void METHOD_1 ( java.lang.String var ) { VAR_1 . put ( var , 0.0 ) ; }","public static void METHOD_1 ( java.lang.String var ) { VAR_1 . put ( var , null ) ; }",['Update Literal'],2566,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2155,2155,public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2568,['Delete Invocation'],"['VariableRead', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2156,2156,"java.util.List < TYPE_1 > METHOD_1 ( java.lang.String [ ] status , java.lang.String VAR_1 ) ;",java.util.List < TYPE_1 > METHOD_1 ( java.lang.String [ ] status ) ;,"['Delete TypeReference', 'Delete Parameter']",2569,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2157,2157,public TYPE_1 METHOD_1 ( ) { if ( ! ( this . VAR_1 . isEmpty ( ) ) ) { return this . VAR_1 . remove ( 0 ) ; } return null ; },public TYPE_1 METHOD_1 ( ) { if ( ! ( this . VAR_1 . isEmpty ( ) ) ) { return this . VAR_1 . remove ( 0 ) ; } },"['Delete Literal', 'Delete Return']",2572,"['Delete Return', 'Delete Literal']","['Literal', 'Return']","['Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2158,2158,public TYPE_1 < TYPE_2 > list ( ) { return VAR_1 . METHOD_1 ( INT_1 ) ; },public TYPE_1 < TYPE_2 > list ( ) { return VAR_1 . METHOD_1 ( 1 ) ; },"['Insert Literal', 'Delete TypeAccess']",2573,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Insert Literal']","['Literal', 'TypeAccess']","['TypeReference', 'TypeReference', 'TypeReference', 'Literal']",Partial Match,0.3333333333333333,0.25,0.5,0.3333333333333333,1,3,1
2159,2159,"public void METHOD_1 ( ) { try { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_4 ( VAR_5 , STRING_1 , VAR_3 ) ; } }","public void METHOD_1 ( ) { try { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) ; } catch ( java.io.IOException VAR_3 ) { VAR_4 . METHOD_4 ( VAR_5 , STRING_1 ) ; } }",['Delete VariableRead'],2574,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2160,2160,"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > result ) { int count = 1 ; VAR_1 . METHOD_2 ( ) ; for ( TYPE_2 temp : result ) { VAR_1 . METHOD_3 ( temp , ( count ++ ) ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > result ) { int count = 1 ; VAR_1 . METHOD_2 ( ) ; for ( TYPE_2 temp : result ) { VAR_1 . METHOD_3 ( temp , ( count ++ ) ) ; } }",['Update Wra'],2577,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2161,2161,"public void METHOD_1 ( ) throws java.lang.Exception { double VAR_1 = FLOAT_1 ; VAR_2 . assertThat ( TYPE_1 . METHOD_2 ( STRING_1 ) , TYPE_2 . METHOD_3 ( VAR_3 . toString ( VAR_1 ) ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { double VAR_1 = FLOAT_1 ; assertThat ( TYPE_1 . METHOD_2 ( STRING_1 ) , TYPE_2 . METHOD_3 ( VAR_3 . toString ( VAR_1 ) ) ) ; }",['Update TypeAccess'],2578,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2162,2162,"public static TYPE_1 METHOD_1 ( java.lang.String filePath , int size ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( new java.io.File ( filePath ) , size ) ; }",public static TYPE_1 METHOD_1 ( java.lang.String filePath ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( new java.io.File ( filePath ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2579,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2163,2163,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; METHOD_4 ( VAR_2 ) ; return new TYPE_1 ( VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; METHOD_4 ( VAR_2 ) ; return new TYPE_1 ( ) ; }","['Update ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2580,"['Delete Parameter', 'Update ConstructorCall']","['ConstructorCall', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'ConstructorCall']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
2164,2164,public final java.lang.String [ ] METHOD_1 ( ) throws TYPE_1 { return METHOD_1 ( true ) ; },public final java.lang.String [ ] METHOD_1 ( ) throws TYPE_1 { return METHOD_1 ( false ) ; },['Update Literal'],2581,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2165,2165,public boolean equals ( java.lang.Object obj ) { return ( obj instanceof TYPE_1 ) && ( ( ( TYPE_1 ) ( obj ) ) . METHOD_1 ( ) . equals ( this . METHOD_1 ( ) ) ) ; },public boolean equals ( java.lang.Object obj ) { return ( obj instanceof TYPE_1 ) && ( ( ( TYPE_1 ) ( obj ) ) . getId ( ) . equals ( this . getId ( ) ) ) ; },"['Update Invocation', 'Update Invocation']",2582,"['Update Invocation', 'Update Invocation']","['Invocation', 'Invocation']","['Invocation', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2166,2166,"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( VAR_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_2 ) ; super . METHOD_1 ( VAR_1 ) ; },"['Update Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",2586,"['Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation']","['Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess', 'TypeAccess']","['FieldRead', 'Invocation', 'Literal', 'FieldRead', 'TypeAccess', 'TypeAccess', 'FieldRead', 'Invocation']",GPT Hallucinated Nodes,0.75,0.25,0.4,0.3076923076923077,2,6,3
2167,2167,"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return false ; }",['Update Literal'],2587,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2168,2168,"private int METHOD_1 ( int x , int y ) { return ( y * ( VAR_1 ) ) + x ; }","private int METHOD_1 ( int x , int y ) { return ( x * ( VAR_1 ) ) + y ; }","['Update BinaryOperator', 'Move BinaryOperator', 'Update BinaryOperator', 'Move BinaryOperator', 'Move FieldRead']",2588,"['Update VariableRead', 'Update VariableRead']","['BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'FieldRead']","['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,5
2169,2169,TYPE_1 METHOD_1 ( ) { double VAR_1 = x ; x = - ( y ) ; y = VAR_1 ; return this ; },TYPE_1 METHOD_1 ( ) { float VAR_1 = x ; x = - ( y ) ; y = VAR_1 ; return this ; },['Update TypeReference'],2589,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2170,2170,public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : this . METHOD_3 ( ) ; return true ; case VAR_2 : METHOD_4 ( ) ; return true ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; return true ; case VAR_2 : METHOD_4 ( ) ; return true ; } return super . METHOD_1 ( item ) ; },['Delete ThisAccess'],2590,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2171,2171,public void METHOD_1 ( ) { size += 1 ; },public void METHOD_1 ( ) { this . size += 1 ; },['Insert ThisAccess'],2591,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2172,2172,public void METHOD_1 ( int VAR_1 ) { return this . METHOD_2 ( VAR_1 ) ; },public long METHOD_1 ( int VAR_1 ) { return this . METHOD_2 ( VAR_1 ) ; },['Update TypeReference'],2594,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2173,2173,public static boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( STRING_1 ) ) != null ; },public static boolean METHOD_1 ( ) { return true ; },"['Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",2595,"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal']","['Literal', 'TypeAccess', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator']","['TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'Literal']",Exact Match,1.0,0.8,0.6666666666666666,0.7272727272727272,4,1,2
2174,2174,"public void METHOD_1 ( ) throws java.lang.Throwable { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null , STRING_1 , VAR_2 class , 1 ) ; VAR_3 . handle ( ) . METHOD_3 ( 1 , INT_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Throwable { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 class , 1 ) ; VAR_3 . handle ( ) . METHOD_3 ( 1 , INT_1 ) ; }",['Delete Literal'],2596,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2175,2175,"public void METHOD_1 ( ) { java.util.List < java.lang.String > names = TYPE_1 . METHOD_2 ( VAR_1 ) . select ( VAR_2 ) . METHOD_3 ( ) ; VAR_3 . assertEquals ( STRING_1 , VAR_4 . toString ( ) ) ; }","public void METHOD_1 ( ) { java.util.List < java.lang.String > names = TYPE_1 . METHOD_2 ( VAR_1 ) . select ( VAR_2 ) . METHOD_3 ( ) ; assertEquals ( STRING_1 , VAR_4 . toString ( ) ) ; }",['Update TypeAccess'],2597,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2176,2176,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; }","['Delete VariableRead', 'Delete Invocation']",2598,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2177,2177,public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Insert VariableRead', 'Delete VariableRead', 'Delete Invocation']",2599,"['Update Parameter', 'Update VariableRead', 'Delete Invocation']","['Parameter', 'VariableRead', 'VariableRead', 'Invocation']","['Parameter', 'VariableRead', 'Invocation']",Exact Match,1.0,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2178,2178,"private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 . getData ( ) , VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( true ) ; return VAR_3 ; }","private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 . getData ( ) , VAR_2 . METHOD_3 ( ) ) ; return VAR_3 ; }","['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2600,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2179,2179,private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",2602,['Delete If'],"['FieldRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.16666666666666666,0.2857142857142857,1,0,5
2180,2180,"protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( ) ) ; }","protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_2 ( ) , new TYPE_4 ( ) ) ; }",['Delete ConstructorCall'],2603,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2181,2181,"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 , STRING_3 ) ; METHOD_5 ( STRING_2 ) ; METHOD_6 ( STRING_2 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 ) ; METHOD_5 ( STRING_2 ) ; METHOD_6 ( STRING_2 ) ; },['Delete TypeAccess'],2604,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2182,2182,"public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_2 , TYPE_1 < TYPE_2 > > VAR_1 ) { return VAR_2 . b ( ) . METHOD_2 ( VAR_2 . a ( ) ) ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_2 , TYPE_1 < TYPE_2 > > VAR_1 ) { return VAR_2 . b ( ) . append ( VAR_2 . a ( ) ) ; }",['Update Invocation'],2605,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2183,2183,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_2 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String url , java.lang.String path ) { return METHOD_1 ( VAR_1 , url , url , path ) ; }","['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']",2606,"['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
2184,2184,public java.lang.String toString ( ) { return ( ( ( ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ) + ( METHOD_2 ( ) ) ) + STRING_3 ) + ( METHOD_3 ( ) ) ; },public java.lang.String toString ( ) { return ( ( ( ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ) + ( METHOD_2 ( ) ) ) + STRING_3 ) + ( METHOD_2 ( ) ) ; },['Update Invocation'],2608,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2185,2185,public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = INT_1 ; VAR_2 = INT_2 ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = INT_1 ; VAR_2 = ( ( byte ) ( INT_2 ) ) ; },['Insert TypeReference'],2610,"['Insert TypeReference', 'Insert Literal']",['TypeReference'],"['TypeReference', 'Literal']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2186,2186,"public void METHOD_1 ( ) { VAR_1 . assertEquals ( ( INT_1 + ( VAR_2 ) ) , VAR_3 . query ( STRING_1 ) . size ( ) ) ; }","public void METHOD_1 ( ) { assertEquals ( ( INT_1 + ( VAR_2 ) ) , VAR_3 . query ( STRING_1 ) . size ( ) ) ; }",['Update TypeAccess'],2611,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2187,2187,"public void METHOD_1 ( java.lang.String VAR_1 ) { try { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_1 , VAR_3 ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) { try { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { METHOD_3 ( VAR_1 , VAR_3 ) ; } }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2612,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2188,2188,public void METHOD_1 ( ) { int i = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { int i = VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( i ) ; },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess']",2614,"['Insert TypeAccess', 'Insert TypeAccess', 'Insert Invocation', 'Insert VariableRead']","['Invocation', 'FieldRead', 'VariableRead', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.75,0.75,0.75,0.75,3,1,1
2189,2189,"public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = new TYPE_1 < java.lang.String , java.util.Map < java.lang.String , java.lang.String > > ( ) ; }",public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = null ; },"['Insert Literal', 'Delete ConstructorCall']",2615,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Insert Literal']","['Literal', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'Literal']",GPT Hallucinated Nodes,0.6666666666666666,0.2857142857142857,1.0,0.4444444444444445,2,5,0
2190,2190,public final void METHOD_1 ( long startTime ) { this . startTime = startTime ; },protected final void METHOD_1 ( long startTime ) { this . startTime = startTime ; },['Update Wra'],2616,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2191,2191,public boolean METHOD_1 ( java.util.Properties VAR_1 ) { return ( METHOD_2 ( VAR_1 ) ) != null ; },public boolean METHOD_1 ( java.util.Properties VAR_1 ) { return ( get ( VAR_1 ) ) != null ; },['Update Invocation'],2617,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2192,2192,"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.util.Date startTime ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , VAR_1 , VAR_2 . METHOD_3 ( ) , startTime ) ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , VAR_1 , VAR_2 . METHOD_3 ( ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2618,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2193,2193,"public static void METHOD_1 ( final java.net.URL url , final java.io.File file ) throws java.io.IOException , TYPE_1 { TYPE_2 . METHOD_1 ( url , file , false ) ; }","public static void METHOD_1 ( final java.net.URL url , final java.io.File file ) throws java.io.IOException , TYPE_1 { TYPE_2 . METHOD_1 ( url , file ) ; }",['Delete Literal'],2619,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2194,2194,private int METHOD_1 ( int VAR_1 ) { java.util.Random VAR_2 = new java.util.Random ( ) ; int i = VAR_2 . METHOD_2 ( VAR_1 ) ; return i ; },public int METHOD_1 ( int VAR_1 ) { java.util.Random VAR_2 = new java.util.Random ( ) ; int i = VAR_2 . METHOD_2 ( VAR_1 ) ; return i ; },['Update Wra'],2620,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2195,2195,"public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.String , java.lang.String > VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( this . VAR_3 , this . VAR_4 , new TYPE_4 ( this . VAR_1 , VAR_1 ) ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.String , java.lang.String > VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( this . VAR_3 , this . VAR_4 , new TYPE_4 ( VAR_1 ) ) ; return VAR_2 ; }","['Delete ThisAccess', 'Delete FieldRead']",2621,"['Delete ThisAccess', 'Delete FieldRead']","['ThisAccess', 'FieldRead']","['ThisAccess', 'FieldRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2196,2196,"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; TYPE_1 . METHOD_2 ( VAR_2 , null ) ; TYPE_1 . METHOD_2 ( VAR_3 , null ) ; TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; TYPE_1 . METHOD_2 ( VAR_2 , null ) ; TYPE_1 . METHOD_2 ( VAR_3 , null ) ; TYPE_1 . METHOD_2 ( VAR_4 , null ) ; }","['Insert Literal', 'Delete TypeAccess']",2622,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2197,2197,"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { synchronized ( VAR_3 ) { return VAR_3 . METHOD_2 ( new TYPE_1 < > ( VAR_2 , VAR_1 ) ) ; } }","public boolean METHOD_1 ( int VAR_1 , int token ) { synchronized ( VAR_3 ) { return VAR_3 . METHOD_2 ( new TYPE_1 < > ( token , VAR_1 ) ) ; } }","['Update Parameter', 'Update VariableRead']",2624,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2198,2198,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_4 , STRING_1 ) ) . build ( ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_4 , STRING_1 ) ) . build ( ) ; }","['Delete TypeReference', 'Delete Parameter']",2625,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2199,2199,"TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 , TYPE_7 VAR_6 , TYPE_8 VAR_7 , TYPE_9 VAR_8 ) { return new TYPE_10 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , VAR_5 , VAR_7 , VAR_8 ) ; }","TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_6 VAR_5 , TYPE_7 VAR_6 , TYPE_8 VAR_7 ) { return new TYPE_10 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , VAR_5 , VAR_7 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2626,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2200,2200,"private void METHOD_1 ( TYPE_1 n ) { VAR_1 . setText ( ( ( java.lang.String.format ( STRING_1 , n . METHOD_2 ( ) ) ) + STRING_2 ) ) ; }",private void METHOD_1 ( java.lang.String n ) { VAR_1 . setText ( ( n + STRING_2 ) ) ; },"['Update TypeReference', 'Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2627,"['Update TypeReference', 'Update Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Insert VariableRead']","['TypeReference', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'Literal', 'BinaryOperator', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.4444444444444444,0.6666666666666666,0.5333333333333333,4,5,2
2201,2201,public boolean METHOD_1 ( int index ) { return ( METHOD_2 ( index ) ) instanceof TYPE_1 ; },public boolean METHOD_1 ( int index ) { return ( get ( index ) ) instanceof TYPE_1 ; },['Update Invocation'],2628,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2202,2202,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2629,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2203,2203,private int METHOD_1 ( java.lang.String name ) { return ( ( java.lang.Integer ) ( VAR_1 . get ( name ) ) ) ; },protected int METHOD_1 ( java.lang.String name ) { return ( ( java.lang.Integer ) ( VAR_1 . get ( name ) ) ) ; },['Update Wra'],2630,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2204,2204,"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 ... VAR_4 ) throws java.io.IOException { return new TYPE_1 ( new TYPE_5 ( new java.io.FileInputStream ( VAR_1 ) ) , VAR_2 , VAR_3 , VAR_5 , VAR_4 ) ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 ... VAR_4 ) throws java.io.IOException { return new TYPE_1 ( new TYPE_5 ( new java.io.FileInputStream ( VAR_1 ) ) , VAR_2 , VAR_3 , VAR_4 ) ; }",['Delete FieldRead'],2631,['Delete VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2205,2205,private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) return STRING_1 ; else return METHOD_1 ( VAR_1 . METHOD_3 ( ) ) ; },private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) return METHOD_1 ( VAR_1 ) ; else return METHOD_1 ( VAR_1 . METHOD_3 ( ) ) ; },"['Insert Invocation', 'Insert VariableRead', 'Delete FieldRead']",2632,"['Delete Literal', 'Insert Invocation', 'Insert VariableRead']","['Invocation', 'VariableRead', 'FieldRead']","['Literal', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2206,2206,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; start ( ) ; if ( ( METHOD_2 ( ) ) == 0 ) { METHOD_3 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( METHOD_2 ( ) ) == 0 ) { METHOD_3 ( ) ; } },['Delete Invocation'],2633,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2207,2207,public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2634,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2208,2208,public int METHOD_1 ( ) throws java.io.IOException { return ( METHOD_2 ( ) ) / ( VAR_1 ) ; },public int METHOD_1 ( ) throws java.io.IOException { return ( METHOD_2 ( ) ) * ( VAR_1 ) ; },['Update BinaryOperator'],2635,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2209,2209,"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( ) . replace ( VAR_3 , new TYPE_2 ( ) ) . commit ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_3 , new TYPE_2 ( ) ) . commit ( ) ; }",['Update Invocation'],2636,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2210,2210,"public TYPE_1 < java.lang.Long > end ( long num ) { return new TYPE_2 ( start , ( ( start ) + num ) , VAR_1 ) ; }","public TYPE_1 < java.lang.Long > end ( long num ) { return new TYPE_2 ( min , ( ( min ) + num ) , VAR_1 ) ; }","['Update FieldRead', 'Update FieldRead']",2637,"['Update FieldRead', 'Update FieldRead']","['FieldRead', 'FieldRead']","['FieldRead', 'FieldRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2211,2211,"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { METHOD_2 ( ( VAR_1 != null ) , STRING_1 ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { METHOD_2 ( ( VAR_1 == null ) , STRING_1 ) ; this . VAR_1 = VAR_1 ; }",['Update BinaryOperator'],2638,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2212,2212,"public void METHOD_1 ( int VAR_1 , double VAR_2 ) { if ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_3 . length ) ) ) { VAR_4 [ VAR_1 ] = VAR_2 ; } METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , double VAR_2 ) { if ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_3 . length ) ) ) { VAR_4 [ VAR_1 ] = VAR_2 ; } }",['Delete Invocation'],2640,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2213,2213,public java.lang.String index ( TYPE_1 VAR_1 ) { return VAR_1 == null ? STRING_1 : STRING_2 ; },public java.lang.String index ( ) { return ( VAR_1 ) == null ? STRING_1 : STRING_2 ; },"['Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2641,"['Delete Parameter', 'Insert VariableRead']","['FieldRead', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.5,0.5,0.25,0.3333333333333333,1,1,3
2214,2214,protected final TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete Wra', 'Delete ThisAccess']",2642,"['Delete Wra', 'Delete ThisAccess']","['Wra', 'ThisAccess']","['Wra', 'ThisAccess']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2215,2215,"public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 . name ( ) , VAR_2 , VAR_5 . name ( ) , VAR_3 ) ) ; }","public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 . name ( ) , VAR_2 ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",2643,"['Delete Parameter', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'VariableRead']","['Parameter', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.4,0.4,0.4000000000000001,2,3,3
2216,2216,public void METHOD_1 ( int VAR_1 ) throws java.lang.Throwable { VAR_2 . assertThat ( VAR_1 ) . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( int VAR_1 ) throws java.lang.Throwable { assertThat ( VAR_1 ) . METHOD_2 ( VAR_3 ) ; },['Update TypeAccess'],2644,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2217,2217,"protected abstract void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.util.Map < java.lang.String , java.lang.Object > parameters , TYPE_1 ... VAR_2 ) throws java.io.IOException ;","protected abstract void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , TYPE_1 ... VAR_2 ) throws java.io.IOException ;","['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter']",2645,['Delete Parameter'],"['TypeReference', 'TypeReference', 'TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.25,0.4,1,0,3
2218,2218,public java.lang.Boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . contains ( VAR_1 ) ) || ( METHOD_2 ( ) . contains ( VAR_2 ) ) ) { return true ; } return false ; },public java.lang.Boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . contains ( VAR_1 ) ) && ( METHOD_2 ( ) . contains ( VAR_2 ) ) ) { return true ; } return false ; },['Update BinaryOperator'],2646,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2219,2219,"public static java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { final java.lang.StringBuilder VAR_3 = new java.lang.StringBuilder ( ) ; TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ; return VAR_4 . toString ( ) ; }","public static java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { final java.lang.StringBuilder VAR_3 = new java.lang.StringBuilder ( ) ; TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) ; return VAR_4 . toString ( ) ; }","['Move VariableRead', 'Delete Literal']",2648,"['Move VariableRead', 'Move VariableRead', 'Move VariableRead', 'Delete Literal']","['VariableRead', 'Literal']","['VariableRead', 'VariableRead', 'VariableRead', 'Literal']",Exact Match,1.0,0.5,1.0,0.6666666666666666,2,2,0
2220,2220,public void METHOD_1 ( TYPE_1 event ) { event . METHOD_2 ( new TYPE_2 ( ) ) ; event . METHOD_2 ( new TYPE_3 ( ) ) ; event . METHOD_2 ( new TYPE_4 ( ) ) ; event . METHOD_2 ( new TYPE_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 event ) { event . METHOD_2 ( new TYPE_2 ( ) ) ; event . METHOD_2 ( new TYPE_3 ( ) ) ; event . METHOD_2 ( new TYPE_4 ( ) ) ; },"['Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",2649,"['Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall', 'Invocation']","['Invocation', 'ConstructorCall', 'TypeReference']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2221,2221,public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( ) ; java.lang.Thread VAR_1 = new java.lang.Thread ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.Thread VAR_1 = new java.lang.Thread ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_1 ( ) ; },['Delete ConstructorCall'],2650,['Delete ConstructorCall'],['ConstructorCall'],['ConstructorCall'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2222,2222,"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_1 ) { TYPE_1 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move Parameter', 'Move VariableRead']",2653,"['Update Parameter', 'Update Parameter', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.0,0.0,0.0,0,4,2
2223,2223,"public abstract TYPE_1 < TYPE_2 , TYPE_2 > METHOD_1 ( TYPE_3 x ) ;","public TYPE_1 < TYPE_2 , TYPE_2 > METHOD_1 ( TYPE_3 x ) { return null ; }","['Insert Return', 'Insert Literal', 'Delete Wra']",2654,"['Delete Wra', 'Insert Block', 'Insert Return', 'Insert Literal']","['Return', 'Literal', 'Wra']","['Wra', 'Block', 'Return', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
2224,2224,public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2655,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2225,2225,"private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; } else { VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; } else { VAR_2 . METHOD_4 ( VAR_1 , VAR_3 , VAR_4 ) ; } }",['Insert TypeAccess'],2658,['Insert VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2226,2226,protected void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int num = VAR_1 . METHOD_2 ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_1 + num ) ) ; VAR_3 . add ( VAR_4 . get ( num ) ) ; },private void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int num = VAR_1 . METHOD_2 ( VAR_2 ) ; java.lang.System.out.println ( ( STRING_1 + num ) ) ; VAR_3 . add ( VAR_4 . get ( num ) ) ; },['Update Wra'],2660,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2227,2227,public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { int i ; int VAR_2 = VAR_3 . size ( ) ; for ( i = 0 ; i < VAR_2 ; i ++ ) { java.lang.System.out.println ( VAR_3 . get ( i ) ) ; } },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { int i ; int VAR_2 = VAR_3 . size ( ) ; for ( i = 0 ; i < VAR_2 ; i ++ ) { java.lang.System.out.println ( VAR_3 . get ( i ) ) ; } },['Update TypeReference'],2661,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2228,2228,public boolean METHOD_1 ( ) { return ( index ) < INT_1 ; },public boolean METHOD_1 ( ) { return ( index ) < 1 ; },"['Insert Literal', 'Delete FieldRead']",2662,['Update Literal'],"['Literal', 'FieldRead']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2229,2229,public static TYPE_1 METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 == null ) { return null ; } return TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; },public static TYPE_1 METHOD_1 ( long VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; },"['Update TypeReference', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2663,"['Delete If', 'Update TypeReference', 'Update Parameter']","['TypeReference', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'TypeReference', 'Parameter']",Partial Match,0.25,0.6666666666666666,0.25,0.36363636363636365,2,1,6
2230,2230,public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return TYPE_2 . METHOD_2 ( ) ; } return VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return null ; return VAR_2 ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2664,"['Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Insert Literal']","['Literal', 'TypeAccess', 'Invocation']","['Block', 'TypeAccess', 'Invocation', 'Literal']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
2231,2231,public int METHOD_1 ( ) { return length ; },public int METHOD_1 ( ) { return node . METHOD_1 ( ) ; },"['Insert Invocation', 'Insert FieldRead', 'Delete FieldRead']",2667,"['Insert FieldRead', 'Insert Invocation', 'Delete VariableRead']","['Invocation', 'FieldRead', 'FieldRead']","['FieldRead', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2232,2232,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . toUpperCase ( ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . toLowerCase ( ) ; return this ; },['Update Invocation'],2669,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2233,2233,public boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( ( VAR_3 . METHOD_2 ( ) ) == ( VAR_2 ) ) ; },public boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( VAR_3 . METHOD_2 ( ) ) == ( VAR_2 ) ) ; },['Update BinaryOperator'],2671,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2234,2234,"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 ;",public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 ;,"['Delete TypeReference', 'Delete Parameter']",2672,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2235,2235,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) ;",public TYPE_1 METHOD_1 ( TYPE_3 VAR_2 ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",2673,"['Delete Parameter', 'Delete Parameter', 'Update Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter', 'Parameter']",GPT Missed Nodes,0.5,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2236,2236,public void METHOD_1 ( ) { try { java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( fileName ) ) ; writer.write ( VAR_1 ) ; writer . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; } },public void METHOD_1 ( ) { try { java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( fileName ) ) ; writer.write ( VAR_1 ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; } },"['Delete VariableRead', 'Delete Invocation']",2674,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2237,2237,"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , STRING_2 , VAR_3 , VAR_4 ) ) == ( VAR_5 ) ) { VAR_2 . METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , STRING_2 , VAR_3 , VAR_4 ) ) == ( VAR_5 ) ) { java.lang.System.exit ( 0 ) ; } }","['Update Invocation', 'Update TypeAccess', 'Insert Literal']",2675,"['Delete FieldRead', 'Delete Invocation', 'Insert TypeAccess', 'Insert Invocation', 'Insert Literal']","['Invocation', 'TypeAccess', 'Literal']","['FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'Literal']",GPT Hallucinated Nodes,0.75,0.2,0.3333333333333333,0.25,1,4,2
2238,2238,public static TYPE_1 METHOD_1 ( TYPE_1 type ) { return TYPE_2 . METHOD_2 ( VAR_1 . name ( ) ) ; },public static TYPE_1 METHOD_1 ( TYPE_1 type ) { return TYPE_2 . METHOD_2 ( VAR_1 . toString ( ) ) ; },['Update Invocation'],2676,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2239,2239,"public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , this ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( 0 , null , this ) ; }","['Insert Literal', 'Delete TypeAccess']",2677,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2240,2240,public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 class ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ( ( TYPE_3 ) ( new TYPE_4 ( ) ) ) ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 class ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ( ( TYPE_3 ) ( null ) ) ) ) ; },"['Insert Literal', 'Move TypeReference', 'Delete ConstructorCall']",2678,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'TypeReference', 'ConstructorCall']","['ConstructorCall', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2241,2241,"public TYPE_1 METHOD_1 ( java.lang.String key ) throws TYPE_2 { return super . METHOD_2 ( VAR_1 class , STRING_1 , key ) ; }","public TYPE_1 METHOD_1 ( java.lang.String name ) throws TYPE_2 { return super . METHOD_2 ( VAR_1 class , ""name"" , name ) ; }","['Update Parameter', 'Insert Literal', 'Update VariableRead', 'Delete TypeAccess']",2680,"['Update Parameter', 'Update VariableRead', 'Update Literal']","['Parameter', 'Literal', 'VariableRead', 'TypeAccess']","['Parameter', 'VariableRead', 'Literal']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2242,2242,"public TYPE_1 < ? extends TYPE_2 < TYPE_3 , java.lang.Object > > METHOD_1 ( TYPE_1 < ? extends TYPE_4 < ? extends TYPE_5 > > VAR_1 ) { return METHOD_2 ( true , false , null , VAR_1 ) ; }","public TYPE_1 < ? extends TYPE_2 < TYPE_3 , java.lang.Object > > METHOD_1 ( TYPE_1 < ? extends TYPE_4 < ? extends TYPE_5 > > VAR_1 ) { return METHOD_2 ( true , null , VAR_1 ) ; }",['Delete Literal'],2681,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2243,2243,public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . get ( ( - INT_1 ) ) ; TYPE_2 . METHOD_2 ( result ) ; },public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . get ( ( - INT_1 ) ) ; METHOD_2 ( result ) ; },['Update TypeAccess'],2682,['Delete TypeAccess'],['TypeAccess'],['TypeAccess'],Exact Match,1.0,0.0,0.0,0.0,0,1,1
2244,2244,"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 params = new TYPE_1 ( ) ; VAR_3 . put ( STRING_1 , INT_1 ) ; VAR_3 . put ( STRING_2 , VAR_4 ) ; METHOD_2 ( params , true ) ; return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 params = new TYPE_1 ( ) ; VAR_3 . put ( STRING_1 , INT_1 ) ; VAR_3 . put ( STRING_2 , VAR_4 ) ; METHOD_2 ( params ) ; return true ; }",['Delete Literal'],2683,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2245,2245,public void METHOD_1 ( ) { throw new TYPE_1 ( STRING_1 ) ; },public void METHOD_1 ( ) { throw new java.lang.NullPointerException ( STRING_1 ) ; },['Update ConstructorCall'],2684,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2246,2246,"public boolean contains ( TYPE_1 p ) { return contains ( VAR_1 . x , VAR_1 . y ) ; }","public boolean contains ( TYPE_1 p ) { return contains ( ( ( float ) ( VAR_1 . x ) ) , ( ( float ) ( VAR_1 . y ) ) ) ; }","['Insert TypeReference', 'Insert TypeReference']",2686,"['Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference']","['TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",Exact Match,1.0,0.3333333333333333,1.0,0.5,2,4,0
2247,2247,"protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 class , VAR_2 ) ; VAR_3 . METHOD_2 ( true ) ; }","protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 class , VAR_2 ) ; VAR_3 . METHOD_2 ( false ) ; }",['Update Literal'],2687,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2248,2248,"public double METHOD_1 ( int VAR_1 , int VAR_2 ) { return TYPE_1 . METHOD_2 ( ( ( VAR_1 * VAR_1 ) + ( VAR_2 * VAR_2 ) ) ) ; }","private double METHOD_1 ( int VAR_1 , int VAR_2 ) { return TYPE_1 . METHOD_2 ( ( ( VAR_1 * VAR_1 ) + ( VAR_2 * VAR_2 ) ) ) ; }",['Update Wra'],2689,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2249,2249,"public java.lang.String METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( null , VAR_1 ) . toString ( ) ; }",public java.lang.String METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_1 ) . toString ( ) ; },"['Update ConstructorCall', 'Delete Literal']",2690,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2250,2250,"public void METHOD_1 ( int VAR_1 ) { java.util.ArrayList < TYPE_1 > temp = VAR_2 . get ( VAR_1 ) ; VAR_3 . add ( VAR_4 . get ( 0 ) ) ; VAR_4 . remove ( 0 ) ; VAR_2 . set ( VAR_1 , temp ) ; }","public void METHOD_1 ( int VAR_1 ) { java.util.ArrayList < TYPE_1 > temp = VAR_2 . get ( VAR_1 ) ; VAR_3 . add ( VAR_4 . get ( 0 ) ) ; VAR_4 . remove ( 0 ) ; VAR_2 . replace ( VAR_1 , temp ) ; }",['Update Invocation'],2691,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2251,2251,"private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 values = new TYPE_1 ( ) ; VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , VAR_5 . getName ( ) ) ; return values ; }","private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 values = new TYPE_1 ( ) ; VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , VAR_1 . METHOD_2 ( ) ) ; return values ; }","['Update Invocation', 'Insert VariableRead', 'Delete TypeAccess']",2692,"['Update FieldRead', 'Update Invocation']","['Invocation', 'VariableRead', 'TypeAccess']","['FieldRead', 'Invocation']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
2252,2252,public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } },public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete VariableRead', 'Delete Invocation']",2693,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2253,2253,"private boolean METHOD_1 ( float VAR_1 , boolean VAR_2 , boolean VAR_3 ) { if ( VAR_2 ) return VAR_1 >= 0 ; else return ( ! VAR_3 ) || ( VAR_1 <= 0 ) ; }","private boolean METHOD_1 ( float VAR_1 , boolean VAR_2 , boolean VAR_3 ) { if ( VAR_2 ) return VAR_1 > 0 ; else return ( ! VAR_3 ) || ( VAR_1 < 0 ) ; }","['Update BinaryOperator', 'Update BinaryOperator']",2694,"['Update BinaryOperator', 'Update BinaryOperator']","['BinaryOperator', 'BinaryOperator']","['BinaryOperator', 'BinaryOperator']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2254,2254,private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; },private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; return VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2695,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2255,2255,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; java.util.List < TYPE_2 > results = VAR_2 . query ( VAR_1 ) ; org.testng.Assert.assertEquals ( VAR_3 . size ( ) , 1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; java.util.List < TYPE_2 > results = VAR_2 . query ( VAR_1 ) ; assertEquals ( VAR_3 . size ( ) , 1 ) ; }",['Delete FieldRead'],2696,['Delete TypeAccess'],['FieldRead'],['TypeAccess'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2256,2256,public void METHOD_1 ( ) { VAR_1 . assertThat ( TYPE_1 . METHOD_2 ( STRING_1 ) ) . METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( ) { assertThat ( TYPE_1 . METHOD_2 ( STRING_1 ) ) . METHOD_3 ( STRING_1 ) ; },['Update TypeAccess'],2697,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2257,2257,"public void METHOD_1 ( android.view.View view , long VAR_1 ) { TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_1 ) ; }","public void METHOD_1 ( android.view.View view , long VAR_1 ) { TYPE_1 . METHOD_2 ( getContext ( ) , VAR_1 ) ; }",['Update Invocation'],2699,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2258,2258,public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . assertNotNull ( VAR_1 ) ; },"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . assertNotNull ( VAR_1 ) ; org.testng.Assert.assertEquals ( TYPE_1 . METHOD_2 ( ) , VAR_1 ) ; }","['Insert Invocation', 'Insert FieldRead', 'Insert Invocation', 'Insert VariableRead', 'Insert TypeAccess']",2700,"['Insert TypeAccess', 'Insert Invocation', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'FieldRead', 'Invocation', 'VariableRead', 'TypeAccess']","['TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.5,0.75,0.6,0.6666666666666665,3,1,2
2259,2259,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = new TYPE_4 ( this ) ; return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = new TYPE_4 ( ) ; return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","['Update ConstructorCall', 'Delete ThisAccess']",2701,['Delete ThisAccess'],"['ConstructorCall', 'ThisAccess']",['ThisAccess'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2260,2260,"public final int getInt ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = this . getString ( VAR_1 ) ; return TYPE_1 . METHOD_1 ( VAR_3 , VAR_2 ) ; }","protected final int getInt ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = this . getString ( VAR_1 ) ; return TYPE_1 . METHOD_1 ( VAR_3 , VAR_2 ) ; }",['Update Wra'],2702,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2261,2261,public TYPE_1 METHOD_1 ( final int VAR_1 ) { if ( ( VAR_1 < 1 ) || ( VAR_1 > ( VAR_2 ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( final int VAR_1 ) { if ( ( VAR_1 < 1 ) && ( VAR_1 > ( VAR_2 ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },['Update BinaryOperator'],2703,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2262,2262,private static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ; },public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 . METHOD_2 ( 0 ) ) == CHAR_1 ; },['Update Wra'],2704,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2263,2263,"public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return true ; }","public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return false ; }",['Update Literal'],2705,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2264,2264,protected void METHOD_1 ( TYPE_1 VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { throw new TYPE_2 ( ) ; },['Delete FieldRead'],2706,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2265,2265,private int METHOD_1 ( int i ) { return INT_1 + i ; },private int METHOD_1 ( ) { return INT_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete BinaryOperator']",2709,"['Delete Parameter', 'Delete VariableRead', 'Delete BinaryOperator']","['FieldRead', 'TypeReference', 'Parameter', 'VariableRead', 'BinaryOperator']","['Parameter', 'VariableRead', 'BinaryOperator']",GPT Missed Nodes,0.6,1.0,0.6,0.7499999999999999,3,0,2
2266,2266,private TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_2 ( new TYPE_3 ( new TYPE_4 ( VAR_2 ) ) ) ; } return this . VAR_1 ; },private TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_2 ( new TYPE_3 ( this . VAR_2 ) ) ; } return this . VAR_1 ; },"['Update ConstructorCall', 'Update ConstructorCall', 'Insert FieldRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall']",2710,"['Insert ThisAccess', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead']","['ConstructorCall', 'ConstructorCall', 'FieldRead', 'ThisAccess', 'FieldRead', 'ConstructorCall']","['ThisAccess', 'ConstructorCall', 'TypeReference', 'VariableRead']",Partial Match,0.4,0.5,0.3333333333333333,0.4,2,2,4
2267,2267,"public static void METHOD_1 ( TYPE_1 VAR_1 , int id ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( 1 , id ) ; VAR_3 . execute ( ) ; new TYPE_4 ( ) . METHOD_4 ( VAR_1 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , int id ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( 1 , id ) ; VAR_3 . execute ( ) ; }","['Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation']",2711,"['Delete ConstructorCall', 'Delete Invocation']","['ConstructorCall', 'VariableRead', 'Invocation']","['ConstructorCall', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2268,2268,public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },public java.util.Collection < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashSet < > ( ) ; } return VAR_1 ; },"['Update TypeReference', 'Update ConstructorCall']",2712,"['Update TypeReference', 'Update TypeReference', 'Update ConstructorCall']","['TypeReference', 'ConstructorCall']","['TypeReference', 'TypeReference', 'ConstructorCall']",Exact Match,1.0,0.6666666666666666,1.0,0.8,2,1,0
2269,2269,"public TYPE_1 METHOD_1 ( java.lang.Object id ) { return VAR_1 . METHOD_1 ( VAR_2 class , VAR_3 . toString ( ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.Object id ) { return VAR_1 . METHOD_1 ( VAR_2 class , id ) ; }","['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2713,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2270,2270,public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; },public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return null ; },"['Insert Literal', 'Delete VariableRead']",2714,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2271,2271,"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { try { VAR_1 . METHOD_2 ( status ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_2 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { try { VAR_1 . METHOD_2 ( status ) ; } catch ( java.io.IOException VAR_2 ) { VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_2 ) ; } }",['Update TypeReference'],2715,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2272,2272,"public TYPE_1 get ( java.lang.String VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_2 . isEmpty ( ) ) ) return null ; return METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ; }","public TYPE_1 get ( java.lang.String VAR_1 ) { return METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2717,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'FieldRead', 'Invocation']",Partial Match,0.5555555555555556,0.8333333333333334,0.5,0.625,5,1,5
2273,2273,"protected boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Integer VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_2 != ( VAR_3 ) ) ) { VAR_4 . METHOD_3 ( ) ; return true ; } return false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Integer VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_2 != ( VAR_3 ) ) ) { VAR_4 . METHOD_3 ( ) ; } }","['Update TypeReference', 'Delete Literal', 'Delete Return', 'Delete Literal', 'Delete Return']",2718,"['Update TypeReference', 'Update TypeReference', 'Delete Return', 'Delete Literal', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return', 'Literal', 'Return']","['TypeReference', 'TypeReference', 'Return', 'Literal', 'Return', 'Literal']",Exact Match,1.0,0.8333333333333334,1.0,0.9090909090909091,5,1,0
2274,2274,protected java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 = super . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( new java.util.LinkedList < TYPE_1 > ( VAR_1 ) ) ; return VAR_1 ; },protected java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 = super . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; },"['Move VariableRead', 'Delete ConstructorCall']",2719,['Delete ConstructorCall'],"['VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2275,2275,"public static TYPE_1 METHOD_1 ( final java.util.List < TYPE_2 > VAR_1 ) { return new TYPE_1 ( VAR_1 , null , null ) ; }","public static TYPE_1 METHOD_1 ( final java.util.List < TYPE_2 > VAR_1 ) { return new TYPE_1 ( VAR_1 , null ) ; }",['Delete Literal'],2720,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2276,2276,"private void METHOD_1 ( TYPE_1 event , java.lang.Boolean VAR_1 ) { METHOD_1 ( event , ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) , VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 event ) { METHOD_1 ( event , ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2721,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2277,2277,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; }",public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2722,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2278,2278,"private java.util.ArrayList < TYPE_1 < TYPE_2 > > METHOD_1 ( java.util.ArrayList < TYPE_1 < TYPE_2 > > VAR_1 , int num ) { return VAR_2 . METHOD_1 ( VAR_1 , num ) ; }",private java.util.ArrayList < TYPE_1 < TYPE_2 > > METHOD_1 ( java.util.ArrayList < TYPE_1 < TYPE_2 > > VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2723,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2279,2279,"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , 1 ) ; return VAR_2 . METHOD_3 ( VAR_3 . getId ( ) , 1 ) ; }",public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( VAR_3 . getId ( ) ) ; },"['Delete Literal', 'Delete Literal']",2725,"['Delete Literal', 'Delete Literal']","['Literal', 'Literal']","['Literal', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2280,2280,public boolean METHOD_1 ( java.lang.Object key ) { return VAR_1 . METHOD_1 ( new TYPE_1 ( ( ( TYPE_2 ) ( key ) ) ) ) ; },public boolean METHOD_1 ( java.lang.Object key ) { return VAR_1 . METHOD_1 ( key ) ; },"['Insert VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall']",2726,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead']","['VariableRead', 'TypeReference', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'VariableRead']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
2281,2281,"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , boolean VAR_2 ) ;",public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2727,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2282,2282,private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2728,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2283,2283,"public boolean METHOD_1 ( TYPE_1 x ) { METHOD_2 ( x , true ) ; return false ; }",public boolean METHOD_1 ( TYPE_1 x ) { METHOD_2 ( x ) ; return false ; },['Delete Literal'],2729,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2284,2284,private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = METHOD_2 ( false ) ; VAR_4 = METHOD_3 ( ) ; if ( ! ( VAR_1 . METHOD_4 ( ) ) ) VAR_1 = null ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = METHOD_2 ( false ) ; VAR_4 = METHOD_3 ( ) ; if ( ! ( VAR_1 . METHOD_4 ( ) ) ) VAR_1 = null ; return VAR_1 ; },['Update Wra'],2730,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2285,2285,"public TYPE_1 METHOD_1 ( int id ) { TYPE_1 result ; try { result = VAR_1 . METHOD_2 ( VAR_2 class , id ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } return result ; }","public TYPE_1 METHOD_1 ( int id ) { TYPE_1 result = null ; try { result = VAR_1 . METHOD_2 ( VAR_2 class , id ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } return result ; }",['Insert Literal'],2731,"['Insert Literal', 'Insert Assignment']",['Literal'],"['Literal', 'Assignment']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2286,2286,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name ) { return METHOD_2 ( name ) ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name ) { return this . METHOD_2 ( name ) ; }",['Insert ThisAccess'],2732,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2287,2287,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 + ( METHOD_2 ( ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation', 'Delete BinaryOperator']",2733,"['Delete Invocation', 'Delete BinaryOperator']","['VariableRead', 'Invocation', 'BinaryOperator']","['Invocation', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2288,2288,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String > result = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; this . VAR_2 . METHOD_3 ( VAR_1 ) ; return result ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String > result = new TYPE_1 ( ) ; this . VAR_2 . METHOD_3 ( VAR_1 ) ; return result ; },"['Delete VariableRead', 'Delete Invocation']",2734,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2289,2289,"public static java.lang.String METHOD_1 ( java.lang.String filePath ) throws java.io.IOException , TYPE_1 { java.io.InputStream VAR_1 = VAR_2 class . METHOD_2 ( ) . METHOD_3 ( filePath ) ; return VAR_3 . toString ( VAR_1 , STRING_1 ) ; }","public static java.lang.String METHOD_1 ( java.lang.String filePath ) throws java.io.IOException , TYPE_1 { java.io.InputStream VAR_1 = VAR_2 class . METHOD_2 ( ) . METHOD_3 ( filePath ) ; return VAR_3 . toString ( VAR_1 ) ; }",['Delete TypeAccess'],2735,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2290,2290,public void update ( TYPE_1 type ) { if ( VAR_1 . equals ( VAR_2 ) ) { if ( METHOD_1 ( ) ) { getView ( ) . METHOD_2 ( ) ; } } },public void update ( TYPE_1 type ) { if ( VAR_1 . equals ( VAR_2 ) ) { if ( METHOD_1 ( ) ) { getView ( ) . METHOD_2 ( ) ; } else { } } },['Insert Block'],2736,"['Insert Block', 'Insert If']",['Block'],"['Block', 'If']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2291,2291,public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; VAR_2 = new TYPE_1 < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },"['Update ConstructorCall', 'Update ConstructorCall']",2738,"['Update TypeReference', 'Update TypeReference']","['ConstructorCall', 'ConstructorCall']","['TypeReference', 'TypeReference']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
2292,2292,public java.lang.String METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; return null ; },"['Insert Literal', 'Delete FieldRead']",2739,"['Delete VariableRead', 'Delete TypeReference', 'Update Literal']","['Literal', 'FieldRead']","['VariableRead', 'TypeReference', 'Literal']",Partial Match,0.25,0.0,0.0,0.0,0,3,2
2293,2293,final java.lang.String METHOD_1 ( ) { return getString ( ) . toLowerCase ( VAR_1 ) ; },final java.lang.String METHOD_1 ( ) { return getString ( ) . toLowerCase ( ) ; },['Delete TypeAccess'],2740,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2294,2294,"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { context . METHOD_2 ( VAR_1 ) ; context . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_3 , STRING_1 ) ; TYPE_2 . METHOD_4 ( context , false ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { context . METHOD_2 ( VAR_1 ) ; context . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_3 , STRING_1 ) ; TYPE_2 . METHOD_4 ( context ) ; }",['Delete Literal'],2741,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2295,2295,public TYPE_1 METHOD_1 ( TYPE_2 info ) throws java.lang.Exception { VAR_1 . METHOD_2 ( info ) ; return new TYPE_3 ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( TYPE_2 info ) throws java.lang.Exception { VAR_1 . METHOD_2 ( info ) ; return null ; },"['Insert Literal', 'Delete FieldRead', 'Delete ConstructorCall']",2742,"['Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference', 'VariableRead', 'Literal']",Partial Match,0.4,0.5,0.6666666666666666,0.5714285714285715,2,2,1
2296,2296,"public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( VAR_1 , STRING_1 , STRING_1 , STRING_1 , STRING_1 , STRING_1 , STRING_1 ) ; }","public void METHOD_1 ( ) { this . METHOD_1 ( STRING_1 , STRING_1 , STRING_1 , STRING_1 , STRING_1 , STRING_1 ) ; }","['Move TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2743,"['Delete Parameter', 'Delete VariableRead', 'Delete Invocation']","['TypeAccess', 'TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead', 'Invocation']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
2297,2297,"public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return VAR_1 == VAR_2 ? VAR_3 [ 1 ] : VAR_3 [ 0 ] ; }","public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return VAR_1 == 1 ? VAR_3 [ 1 ] : VAR_3 [ 0 ] ; }","['Insert Literal', 'Delete VariableRead']",2744,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2298,2298,public void METHOD_1 ( TYPE_1 < java.lang.Object > response ) { super . METHOD_1 ( response ) ; VAR_1 = TYPE_2 . METHOD_2 ( response . METHOD_3 ( INT_1 ) ) ; },public void METHOD_1 ( TYPE_1 < java.lang.Object > response ) { super . METHOD_1 ( response ) ; VAR_1 = TYPE_2 . METHOD_2 ( response ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2745,"['Delete Invocation', 'Delete Literal']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['Invocation', 'Literal']",Partial Match,0.3333333333333333,0.5,0.2,0.28571428571428575,1,1,4
2299,2299,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 , android.content.Intent data ) { if ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_3 , data ) ) { return ; } }","public void METHOD_1 ( int VAR_2 , int VAR_3 , android.content.Intent data ) { if ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_3 , data ) ) { return ; } }","['Delete TypeReference', 'Delete Parameter']",2746,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2300,2300,"TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String token , int VAR_1 , TYPE_3 VAR_2 ) ;","TYPE_1 < java.lang.Void > METHOD_1 ( java.lang.String token , int VAR_1 , java.lang.String name ) ;","['Update Parameter', 'Update TypeReference', 'Update TypeReference']",2747,"['Update TypeReference', 'Update TypeReference', 'Update Parameter', 'Update TypeReference', 'Update Parameter']","['Parameter', 'TypeReference', 'TypeReference']","['TypeReference', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter']",Exact Match,1.0,0.6,1.0,0.7499999999999999,3,2,0
2301,2301,"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; }",['Delete Invocation'],2748,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2302,2302,"public java.lang.Void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( name , METHOD_3 ( VAR_1 , ( STRING_1 + name ) ) , true ) ; return null ; }","public java.lang.Void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( name , METHOD_3 ( VAR_1 , ( STRING_1 + name ) ) ) ; return null ; }",['Delete Literal'],2749,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2303,2303,"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2750,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2304,2304,"private static void METHOD_1 ( TYPE_1 handle , TYPE_2 VAR_1 ) throws TYPE_3 { VAR_2 = TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 ) , 0 ) ; VAR_4 = TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_4 ( VAR_3 ) , 1 ) ; }","private static void METHOD_1 ( TYPE_1 handle , TYPE_2 VAR_1 ) throws TYPE_3 { VAR_2 = TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 ) ) ; VAR_4 = TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_4 ( VAR_3 ) ) ; }","['Delete Literal', 'Delete Literal']",2752,['Delete Literal'],"['Literal', 'Literal']",['Literal'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
2305,2305,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 values = TYPE_3 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 , null , values ) ; }","public void METHOD_1 ( TYPE_1 c ) { TYPE_2 values = TYPE_3 . METHOD_2 ( c ) ; VAR_2 . METHOD_3 ( VAR_3 , null , values ) ; }","['Update Parameter', 'Update VariableRead']",2753,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2306,2306,public static java.lang.Double METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return null ; try { return new java.lang.Double ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } },public static java.lang.Double METHOD_1 ( java.lang.String VAR_1 ) { try { return new java.lang.Double ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2754,"['Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
2307,2307,"boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String url , java.lang.String method ) ;",boolean METHOD_1 ( java.lang.String VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",2755,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
2308,2308,public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },['Delete ThisAccess'],2756,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2309,2309,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) ; assertEquals ( true , ( VAR_1 instanceof TYPE_1 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 ) ; assertEquals ( true , ( VAR_1 instanceof TYPE_1 ) ) ; }",['Delete FieldRead'],2757,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2310,2310,"private void METHOD_1 ( ) { if ( ( java.lang.Integer.parseInt ( VAR_1 ) ) < ( VAR_2 ) ) TYPE_1 . METHOD_2 ( this , VAR_3 , false ) ; VAR_4 = true ; }","private void METHOD_1 ( ) { if ( ( java.lang.Integer.parseInt ( VAR_1 ) ) >= ( VAR_2 ) ) TYPE_1 . METHOD_2 ( this , VAR_3 , false ) ; VAR_4 = true ; }",['Update BinaryOperator'],2758,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2311,2311,public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2762,"['Delete Invocation', 'Delete Invocation']","['TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']","['Invocation', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
2312,2312,protected final void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },protected final void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Parameter']",2763,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter']","['Parameter', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2313,2313,"public void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { this . VAR_1 = VAR_1 ; }","protected void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 ) { this . VAR_1 = VAR_1 ; }",['Update Wra'],2764,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2314,2314,"protected void init ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( this ) ; TYPE_3 . METHOD_1 ( this ) ; }",private void init ( ) { TYPE_2 . METHOD_1 ( this ) ; TYPE_3 . METHOD_1 ( this ) ; },"['Update Wra', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",2765,"['Update Wra', 'Delete Parameter', 'Delete Parameter']","['Wra', 'TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Wra', 'Parameter', 'Parameter']",GPT Missed Nodes,0.6666666666666666,1.0,0.6,0.7499999999999999,3,0,2
2315,2315,private java.lang.String METHOD_1 ( ) { return STRING_1 ; },public java.lang.String METHOD_1 ( ) { return STRING_1 ; },['Update Wra'],2766,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2316,2316,"private void METHOD_1 ( android.content.Intent intent ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( false ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( intent , this ) ; } }","private void METHOD_1 ( android.content.Intent intent ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( intent , this ) ; } }",['Delete Literal'],2767,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2317,2317,public java.util.Date METHOD_1 ( ) { java.util.Date date ; if ( ( VAR_1 ) != null ) { date = new java.util.Date ( VAR_2 . getTime ( ) ) ; } else { date = METHOD_2 ( ) ; } return date ; },public java.util.Date METHOD_1 ( ) { java.util.Date date = null ; if ( ( VAR_1 ) != null ) { date = new java.util.Date ( VAR_2 . getTime ( ) ) ; } else { date = METHOD_2 ( ) ; } return date ; },['Insert Literal'],2769,"['Insert Literal', 'Update LocalVariable']",['Literal'],"['Literal', 'LocalVariable']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2318,2318,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return this . VAR_2 . remove ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . remove ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2770,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2319,2319,"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 ( ) { public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } } } ) ; }",public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) { public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } } } ) ; },['Delete TypeAccess'],2771,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2320,2320,public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } },public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2772,"['Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']","['TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation']","['TypeAccess', 'FieldRead', 'Literal', 'Invocation']",GPT Hallucinated Nodes,0.75,0.75,0.75,0.75,3,1,1
2321,2321,"public boolean remove ( java.lang.String element ) { return VAR_1 . remove ( element , 0 ) ; }","public boolean remove ( java.lang.String element ) { return VAR_1 . contains ( element , 0 ) ; }",['Update Invocation'],2773,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2322,2322,"public static int METHOD_1 ( byte [ ] VAR_1 , byte [ ] VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; return VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","public static int METHOD_1 ( byte [ ] VAR_1 , byte [ ] VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }",['Update VariableRead'],2774,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2323,2323,"public TYPE_1 get ( ) { return ( ( TYPE_1 ) ( METHOD_1 ( ) . get ( VAR_1 class , new java.lang.Long ( 0 ) ) ) ) ; }","public TYPE_1 get ( ) { return ( ( TYPE_1 ) ( METHOD_1 ( ) . get ( VAR_1 class , 0 ) ) ) ; }","['Move Literal', 'Delete ConstructorCall']",2775,"['Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference']","['Literal', 'ConstructorCall']","['TypeReference', 'ConstructorCall', 'TypeReference']",Partial Match,0.3333333333333333,0.3333333333333333,0.5,0.4,1,2,1
2324,2324,private char METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) [ 0 ] ; },public char METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) [ 0 ] ; },['Update Wra'],2776,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2325,2325,"public TYPE_1 METHOD_1 ( TYPE_2 view , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { return TYPE_5 . METHOD_2 ( new TYPE_6 ( VAR_3 ) , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( android.content.Context context , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { return TYPE_5 . METHOD_2 ( new TYPE_6 ( VAR_3 ) , VAR_2 ) ; }","['Update Parameter', 'Update TypeReference']",2777,"['Update TypeReference', 'Update Parameter']","['Parameter', 'TypeReference']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2326,2326,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 . add ( ( ( TYPE_3 ) ( VAR_1 ) ) ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; return this ; },['Delete TypeReference'],2778,"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall']",['TypeReference'],"['TypeReference', 'VariableRead', 'ConstructorCall']",GPT Hallucinated Nodes,0.3333333333333333,0.3333333333333333,1.0,0.5,1,2,0
2327,2327,"public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( java.util.Arrays.asList ( VAR_2 ) , VAR_1 ) ; }",public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( java.util.Arrays.asList ( VAR_2 ) ) ; },['Delete VariableRead'],2779,['Delete VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2328,2328,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new TYPE_2 < TYPE_1 > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new java.util.HashSet < TYPE_1 > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },['Update ConstructorCall'],2780,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2329,2329,protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 ( ( ( TYPE_3 ) ( METHOD_2 ( ) ) ) ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; return VAR_1 ; },"['Update ConstructorCall', 'Delete TypeReference']",2783,"['Delete TypeReference', 'Delete TypeReference']","['ConstructorCall', 'TypeReference']","['TypeReference', 'TypeReference']",GPT Missed Nodes,0.5,0.5,0.5,0.5,1,1,1
2330,2330,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },['Delete Literal'],2784,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2331,2331,"public void METHOD_1 ( ) { VAR_1 . assertEquals ( INT_1 , VAR_2 . METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ) ; }","public void METHOD_1 ( ) { assertEquals ( INT_1 , VAR_2 . METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ) ; }",['Update TypeAccess'],2785,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2332,2332,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( ) . open ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( ) . open ( ) ; VAR_2 . METHOD_2 ( ) . open ( ) ; return true ; }","['Insert Invocation', 'Insert Invocation', 'Insert VariableRead']",2786,['Insert Invocation'],"['Invocation', 'Invocation', 'VariableRead']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,1,0,2
2333,2333,public boolean METHOD_1 ( ) { METHOD_2 ( ) ; return true ; },public boolean METHOD_1 ( ) { return false ; },"['Update Literal', 'Delete Invocation']",2787,"['Delete Invocation', 'Update Literal']","['Literal', 'Invocation']","['Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2334,2334,"private void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 ) ; }",['Update Wra'],2788,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2335,2335,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_2 . toString ( ) . toLowerCase ( ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Update TypeReference', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2789,"['Update TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Insert VariableRead']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['TypeReference', 'FieldRead', 'TypeAccess', 'Invocation', 'Invocation', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.7142857142857143,1.0,0.8333333333333333,5,2,0
2336,2336,"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; METHOD_2 ( VAR_2 , true , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; METHOD_2 ( VAR_2 , true , VAR_3 , VAR_4 , 0 ) ; }",['Insert Literal'],2790,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2337,2337,"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , false ) ; }",public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall']",2791,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'FieldRead', 'Literal', 'ConstructorCall']","['ConstructorCall', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.5,0.6666666666666666,2,0,2
2338,2338,"public void METHOD_1 ( byte VAR_1 , long VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( byte VAR_1 , long VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 , VAR_1 ) ; }",['Move VariableRead'],2792,"['Move VariableRead', 'Move VariableRead']",['VariableRead'],"['VariableRead', 'VariableRead']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
2339,2339,"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { if ( VAR_1 != null ) { java.util.Map < java.lang.String , java.lang.String > VAR_2 = VAR_3 . get ( null ) ; if ( VAR_2 != null ) VAR_2 . METHOD_2 ( VAR_1 ) ; } }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { if ( VAR_1 != null ) { java.util.Map < java.lang.String , java.lang.String > VAR_2 = VAR_3 . get ( ) ; if ( VAR_2 != null ) VAR_2 . METHOD_2 ( VAR_1 ) ; } }",['Delete Literal'],2793,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2340,2340,"public void METHOD_1 ( java.lang.String text ) { METHOD_2 ( ) ; METHOD_3 ( text , METHOD_4 ( VAR_1 ) , false ) ; }","public void METHOD_1 ( java.lang.String text ) { METHOD_2 ( ) ; METHOD_3 ( text , METHOD_4 ( VAR_1 ) ) ; }",['Delete Literal'],2794,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2341,2341,"public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_2 ) new TYPE_2 ( STRING_1 , null ) . execute ( VAR_1 ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_2 ) new TYPE_2 ( STRING_1 , VAR_1 , null ) . execute ( ) ; }",['Move VariableRead'],2795,"['Insert VariableRead', 'Insert Literal', 'Delete Literal', 'Delete VariableRead']",['VariableRead'],"['VariableRead', 'Literal', 'Literal', 'VariableRead']",GPT Hallucinated Nodes,0.5,0.0,0.0,0.0,0,4,1
2342,2342,"public char [ ] METHOD_1 ( ) { return new char [ ] { CHAR_1 , CHAR_2 , CHAR_3 , CHAR_4 } ; }","public char [ ] METHOD_1 ( ) { return new char [ ] { CHAR_3 , CHAR_4 } ; }","['Delete FieldRead', 'Delete FieldRead']",2796,"['Delete Literal', 'Delete Literal']","['FieldRead', 'FieldRead']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
2343,2343,public java.lang.Boolean METHOD_1 ( ) { return true ; },public java.lang.Boolean METHOD_1 ( ) { return null ; },['Update Literal'],2797,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2344,2344,"public void METHOD_1 ( ) { for ( java.lang.Integer VAR_1 : VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , 1 ) ; } }",public void METHOD_1 ( ) { for ( java.lang.Integer VAR_1 : VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } },['Delete Literal'],2798,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2345,2345,"public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( INT_1 , true ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( false ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; }","public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( INT_1 , true ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( true ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; }",['Update Literal'],2799,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2346,2346,public TYPE_1 METHOD_1 ( java.lang.Object event ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . handle ( TYPE_2 . METHOD_3 ( event ) ) ; } finally { TYPE_3 . METHOD_4 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( java.lang.Object event ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . handle ( new TYPE_2 < java.lang.Object > ( event ) ) ; } finally { TYPE_3 . METHOD_4 ( ) ; } return VAR_1 ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2801,"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation']","['ConstructorCall', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
2347,2347,public static void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( true ) ; VAR_4 = VAR_3 . METHOD_3 ( VAR_2 ) ; },public static void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_3 . METHOD_3 ( VAR_2 ) ; },"['Update ConstructorCall', 'Delete Literal']",2802,['Delete Literal'],"['ConstructorCall', 'Literal']",['Literal'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2348,2348,public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = 0 ; VAR_4 = 1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = 0 ; VAR_4 = 0 ; },['Update Literal'],2805,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2349,2349,"public java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 ; synchronized ( VAR_2 ) { VAR_1 = new java.util.ArrayList ( VAR_2 ) ; java.util.Collections.sort ( VAR_1 , TYPE_2 . METHOD_2 ( ) ) ; return TYPE_2 . METHOD_3 ( VAR_1 ) ; } }",public java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 ; synchronized ( VAR_2 ) { VAR_1 = new java.util.ArrayList ( VAR_2 ) ; java.util.Collections.sort ( VAR_1 ) ; return TYPE_2 . METHOD_3 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation']",2806,"['Delete TypeAccess', 'Delete Invocation']","['TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2350,2350,"private static void METHOD_1 ( int operation , long VAR_1 ) { }","private static native void METHOD_1 ( int operation , long VAR_1 ) ;",['Insert Wra'],2807,"['Insert Wra', 'Insert Wra', 'Delete Block']",['Wra'],"['Wra', 'Wra', 'Block']",GPT Hallucinated Nodes,0.5,0.3333333333333333,1.0,0.5,1,2,0
2351,2351,"public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( 1 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 . assertEquals ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( 0 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 . assertEquals ( VAR_1 , VAR_3 ) ; }",['Update Literal'],2808,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2352,2352,protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; },protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return null ; },"['Insert Literal', 'Delete VariableRead', 'Delete ConstructorCall']",2809,"['Delete ConstructorCall', 'Insert Literal']","['Literal', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2353,2353,"private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) ) ; VAR_6 . replace ( VAR_7 , VAR_3 , STRING_1 ) . commit ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) ) ; VAR_6 . add ( VAR_7 , VAR_3 , STRING_1 ) . commit ( ) ; }",['Update Invocation'],2810,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2354,2354,"void METHOD_1 ( int VAR_1 , android.view.View view ) ;",void METHOD_1 ( int VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2811,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2355,2355,public void METHOD_1 ( java.lang.Void response ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( new TYPE_1 ( this ) ) ; VAR_4 . METHOD_4 ( true ) ; },public void METHOD_1 ( java.lang.Void response ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( new TYPE_1 ( this ) ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2813,"['Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['TypeAccess', 'Literal', 'Invocation']","['Invocation', 'Literal', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2356,2356,protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . url ( VAR_1 . METHOD_3 ( ) ) ) ; return VAR_1 ; },private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . url ( VAR_1 . METHOD_3 ( ) ) ) ; return VAR_1 ; },['Update Wra'],2815,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2357,2357,private java.lang.Boolean METHOD_1 ( TYPE_1 message ) { if ( ( message . METHOD_2 ( ) ) == null ) { return false ; } return TYPE_2 . METHOD_3 ( ) . contains ( message . METHOD_2 ( ) . toUpperCase ( ) ) ; },private java.lang.Boolean METHOD_1 ( TYPE_1 message ) { return TYPE_2 . METHOD_3 ( ) . contains ( message . METHOD_2 ( ) . toUpperCase ( ) ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2816,"['Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Return']","['VariableRead', 'Invocation', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'FieldRead', 'Invocation', 'Literal', 'Return']",Partial Match,0.5,0.8,0.5,0.6153846153846154,4,1,4
2358,2358,"public boolean METHOD_1 ( java.lang.String id ) { return VAR_1 . contains ( new TYPE_1 ( STRING_1 , id ) ) ; }",public boolean METHOD_1 ( java.lang.String id ) { return VAR_1 . contains ( id ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete ConstructorCall']",2817,"['Delete ConstructorCall', 'Delete Literal']","['VariableRead', 'FieldRead', 'ConstructorCall']","['ConstructorCall', 'Literal']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
2359,2359,private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = VAR_1 . METHOD_2 ( ) ; if ( VAR_3 == null ) { return null ; } TYPE_1 response = new TYPE_1 ( VAR_3 ) ; return response ; },private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_1 response = new TYPE_1 ( VAR_3 ) ; return response ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2818,"['Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
2360,2360,private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . toString ( ) ; java.lang.String VAR_4 = VAR_3 ; return VAR_4 + STRING_2 ; },private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . toString ( ) ; java.lang.String VAR_4 = VAR_3 ; return VAR_4 ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2819,"['Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal']","['VariableRead', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']",Partial Match,0.5,0.3333333333333333,0.3333333333333333,0.3333333333333333,1,2,2
2361,2361,public boolean METHOD_1 ( ) { return ( VAR_1 ) > ( METHOD_2 ( ) ) ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) != ( METHOD_2 ( ) ) ; },['Update BinaryOperator'],2820,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2362,2362,"public java.util.List < java.lang.String > METHOD_1 ( ) { return java.util.Arrays.asList ( STRING_1 , STRING_2 , STRING_3 ) ; }","public java.util.List < java.lang.String > METHOD_1 ( ) { return java.util.Arrays.asList ( STRING_1 , STRING_3 ) ; }",['Delete TypeAccess'],2821,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2363,2363,private boolean METHOD_1 ( TYPE_1 value ) { if ( ( value . METHOD_2 ( ) ) >= 0 ) { return true ; } else { return false ; } },private boolean METHOD_1 ( TYPE_1 value ) { if ( ( value instanceof java.lang.Integer ) && ( ( ( java.lang.Integer ) ( value ) ) >= 0 ) ) { return true ; } return false ; },"['Move Return', 'Update BinaryOperator', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Move VariableRead', 'Insert TypeAccess', 'Insert VariableRead', 'Move Literal', 'Insert TypeReference', 'Delete Invocation', 'Delete Block']",2823,"['Insert BinaryOperator', 'Insert BinaryOperator', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert Literal', 'Insert InstanceOf', 'Insert VariableRead', 'Insert VariableRead', 'Insert VariableRead', 'Insert VariableRead', 'Insert Return', 'Delete Invocation', 'Delete If', 'Delete FieldRead']","['Return', 'BinaryOperator', 'BinaryOperator', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'VariableRead', 'Literal', 'TypeReference', 'Invocation', 'Block']","['BinaryOperator', 'BinaryOperator', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'Literal', 'InstanceOf', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'Return', 'Invocation', 'If', 'FieldRead']",Partial Match,0.5454545454545454,0.3125,0.45454545454545453,0.3703703703703703,5,11,6
2364,2364,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 instanceof TYPE_3 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_2 ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 instanceof TYPE_3 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_2 ) ) ; VAR_3 . METHOD_3 ( this . VAR_4 ) ; } },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",2824,"['Insert ThisAccess', 'Insert FieldRead', 'Delete VariableRead']","['FieldRead', 'ThisAccess', 'TypeAccess']","['ThisAccess', 'FieldRead', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2365,2365,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },['Delete Invocation'],2825,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2366,2366,"public void METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) throws TYPE_1 { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; this . METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) throws TYPE_1 { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }",['Delete ThisAccess'],2827,['Delete ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2367,2367,"public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . assertThat ( VAR_2 . METHOD_3 ( VAR_4 ) . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( VAR_1 ) ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . assertThat ( VAR_2 . METHOD_3 ( true ) . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( VAR_1 ) ) ; }","['Insert Literal', 'Delete TypeAccess']",2829,"['Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
2368,2368,private int METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . contains ( STRING_1 ) ) { return VAR_3 ; } if ( VAR_2 . contains ( STRING_2 ) ) { return VAR_4 ; } return VAR_5 ; },private int METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . contains ( STRING_1 ) ) { return VAR_3 ; } if ( VAR_2 . contains ( STRING_2 ) ) { return VAR_4 ; } return VAR_4 ; },['Update FieldRead'],2831,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2369,2369,public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; },['Delete Invocation'],2832,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2370,2370,"public void METHOD_1 ( TYPE_1 path , TYPE_2 ... VAR_1 ) throws java.io.IOException { TYPE_3 . METHOD_2 ( path ) . METHOD_3 ( ) . METHOD_1 ( TYPE_3 . METHOD_2 ( path ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 path , TYPE_2 ... VAR_1 ) throws java.io.IOException { TYPE_3 . METHOD_2 ( path ) . METHOD_1 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2833,"['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'VariableRead', 'Invocation', 'Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,0.8,1.0,0.888888888888889,4,1,0
2371,2371,"public void METHOD_1 ( TYPE_1 response ) { assertThat ( VAR_1 , TYPE_2 . METHOD_2 ( 1 ) ) ; assertThat ( VAR_2 , TYPE_2 . METHOD_2 ( INT_1 ) ) ; }","public void METHOD_1 ( TYPE_1 response ) { assertThat ( VAR_1 , TYPE_2 . METHOD_2 ( 1 ) ) ; assertThat ( VAR_2 , TYPE_2 . METHOD_2 ( 0 ) ) ; }","['Insert Literal', 'Delete TypeAccess']",2834,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2372,2372,"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ; }",['Delete TypeAccess'],2835,['Delete VariableRead'],['TypeAccess'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2373,2373,public int METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { this . VAR_1 = -- ( VAR_1 ) ; } return this . VAR_1 ; },public int METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { this . VAR_1 = -- ( VAR_1 ) ; } return this . VAR_1 ; },['Update BinaryOperator'],2836,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2374,2374,private void METHOD_1 ( ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; },private void METHOD_1 ( ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) . size ( ) ) ; },"['Insert Invocation', 'Move Invocation']",2837,['Insert Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
2375,2375,"public int METHOD_1 ( long VAR_1 ) { return METHOD_1 ( VAR_1 , false , false ) ; }","public int METHOD_1 ( long VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; }",['Delete Literal'],2839,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2376,2376,"public java.lang.String [ ] METHOD_1 ( java.lang.String name , int ... VAR_1 ) throws java.io.IOException { return METHOD_1 ( name , 0 , new java.util.ArrayList < java.lang.String > ( ) , false , VAR_1 ) ; }","public java.lang.String [ ] METHOD_1 ( java.lang.String name , int ... VAR_1 ) throws java.io.IOException { return METHOD_1 ( name , 0 , new java.util.ArrayList < java.lang.String > ( ) , VAR_1 ) ; }",['Delete Literal'],2840,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2377,2377,"public void METHOD_1 ( ) { this . VAR_1 . open ( INT_1 , 1 ) ; VAR_2 . assertTrue ( STRING_1 , this . VAR_3 . METHOD_2 ( INT_1 , 1 ) ) ; }","public void METHOD_1 ( ) { this . VAR_1 . open ( INT_1 , 1 ) ; assertTrue ( STRING_1 , this . VAR_3 . METHOD_2 ( INT_1 , 1 ) ) ; }",['Update TypeAccess'],2841,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2378,2378,"public TYPE_1 METHOD_1 ( final android.content.Context context ) { return new TYPE_1 ( VAR_1 , VAR_2 . getString ( VAR_3 . height ) , context ) ; }","public TYPE_1 METHOD_1 ( final android.content.Context context ) { return new TYPE_1 ( VAR_1 , context ) ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2843,"['Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess']","['TypeAccess', 'FieldRead', 'Invocation']","['Invocation', 'FieldRead', 'TypeAccess']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2379,2379,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( STRING_1 + result ) + STRING_2 ) ) ; },['Update FieldRead'],2844,['Update VariableRead'],['FieldRead'],['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2380,2380,public java.lang.CharSequence METHOD_1 ( int position ) { switch ( position ) { case 0 : return STRING_1 ; case 1 : return STRING_2 ; case INT_1 : return STRING_3 ; } return STRING_4 ; },public java.lang.CharSequence METHOD_1 ( int position ) { switch ( position ) { case 0 : return STRING_4 ; case 1 : return STRING_2 ; case INT_1 : return STRING_3 ; } return STRING_4 ; },['Update FieldRead'],2845,['Update Return'],['FieldRead'],['Return'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2381,2381,public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; return VAR_2 . get ( index ) ; },public java.lang.String METHOD_1 ( int VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; return VAR_2 . get ( index ) ; },['Update TypeReference'],2846,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2382,2382,"public static android.content.Intent METHOD_1 ( android.content.Context context , final int VAR_1 ) { android.content.Intent intent = new android.content.Intent ( context , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_1 ) ; intent . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; return intent ; }","public static android.content.Intent METHOD_1 ( android.content.Context context , final int VAR_1 ) { android.content.Intent intent = new android.content.Intent ( context , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 , VAR_1 ) ; return intent ; }","['Delete VariableRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",2847,"['Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete VariableRead']","['VariableRead', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation']","['Invocation', 'BinaryOperator', 'Literal', 'VariableRead']",Partial Match,0.6,0.75,0.6,0.6666666666666665,3,1,2
2383,2383,public boolean METHOD_1 ( ) { METHOD_2 ( ) ; view . METHOD_3 ( ) ; return true ; },public boolean METHOD_1 ( ) { METHOD_2 ( ) ; return true ; },"['Delete FieldRead', 'Delete Invocation']",2848,"['Delete FieldRead', 'Delete Invocation']","['FieldRead', 'Invocation']","['FieldRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2384,2384,"public void METHOD_1 ( ) { for ( int i = 0 ; i < ( this . METHOD_2 ( ) ) ; i ++ ) this . METHOD_3 ( i , VAR_1 ) ; }","public void METHOD_1 ( ) { for ( int i = 0 ; i < ( this . METHOD_2 ( ) ) ; i ++ ) this . METHOD_3 ( i , null ) ; }","['Insert Literal', 'Delete TypeAccess']",2849,['Update Literal'],"['Literal', 'TypeAccess']",['Literal'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2385,2385,"public TYPE_1 METHOD_1 ( float min , float VAR_1 ) { METHOD_2 ( ) ; final TYPE_1 VAR_2 = new TYPE_1 ( getActivity ( ) ) ; VAR_2 . METHOD_3 ( min ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( float min , float VAR_1 ) { METHOD_2 ( ) ; final TYPE_1 VAR_2 = new TYPE_1 ( getContext ( ) ) ; VAR_2 . METHOD_3 ( min ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; }",['Update Invocation'],2850,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2386,2386,"public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( null , new java.util.ArrayList < java.lang.String > ( ) , null ) ) ; }","public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( null , new java.util.ArrayList < java.lang.String > ( ) , null , null ) ) ; }",['Insert Literal'],2851,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2387,2387,"private void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String data = new TYPE_1 ( this , getString ( VAR_2 ) , null ) . METHOD_2 ( STRING_1 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String data = new TYPE_1 ( this , null , null ) . METHOD_2 ( STRING_1 ) ; }","['Update ConstructorCall', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2852,"['Delete Invocation', 'Delete VariableRead']","['ConstructorCall', 'Literal', 'TypeAccess', 'Invocation']","['Invocation', 'VariableRead']",Partial Match,0.2,0.5,0.25,0.3333333333333333,1,1,3
2388,2388,public boolean equals ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return this . VAR_3 . equals ( VAR_4 ) ; },public boolean equals ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return this . VAR_3 . equals ( VAR_2 ) ; },"['Insert VariableRead', 'Delete TypeAccess']",2853,['Update VariableRead'],"['VariableRead', 'TypeAccess']",['VariableRead'],GPT Missed Nodes,0.5,0.0,0.0,0.0,0,1,2
2389,2389,"private void METHOD_1 ( TYPE_1 response ) { VAR_1 . assertThat ( STRING_1 , response . METHOD_2 ( ) . isEmpty ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( true ) ) ) ; }","private void METHOD_1 ( java.lang.String message , TYPE_1 response ) { VAR_1 . assertThat ( message , response . METHOD_2 ( ) . isEmpty ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( true ) ) ) ; }","['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete TypeAccess']",2854,"['Insert Parameter', 'Delete Literal', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead', 'TypeAccess']","['Parameter', 'Literal', 'VariableRead']",Partial Match,0.4,0.3333333333333333,0.25,0.28571428571428575,1,2,3
2390,2390,public final void METHOD_1 ( final int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public final void METHOD_1 ( final int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2855,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2391,2391,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return new TYPE_1 ( TYPE_3 . METHOD_2 ( getContext ( ) ) . METHOD_3 ( VAR_3 , VAR_1 , false ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { return new TYPE_1 ( TYPE_3 . METHOD_2 ( getContext ( ) ) . METHOD_3 ( VAR_3 , VAR_1 , true ) ) ; }",['Update Literal'],2856,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2392,2392,public static TYPE_1 METHOD_1 ( java.lang.String path ) { try { return VAR_1 . get ( VAR_2 class . METHOD_2 ( ) . METHOD_1 ( path ) . METHOD_3 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { throw new TYPE_3 ( VAR_3 ) ; } },public static TYPE_1 METHOD_1 ( java.lang.String path ) { try { return VAR_1 . get ( VAR_2 class . METHOD_1 ( path ) . METHOD_3 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { throw new TYPE_3 ( VAR_3 ) ; } },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Update Invocation', 'Update Invocation', 'Move VariableRead', 'Delete Invocation']",2858,['Delete Invocation'],"['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.14285714285714285,0.25,1,0,6
2393,2393,"public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 , 0 , 1 , TYPE_2 . METHOD_1 ( ) ) ; }","public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( 0 , 1 , TYPE_2 . METHOD_1 ( ) ) ; }",['Delete FieldRead'],2859,['Delete Literal'],['FieldRead'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2394,2394,private void METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( VAR_1 ) . METHOD_3 ( false ) ; },public void METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( VAR_1 ) . METHOD_3 ( false ) ; },['Update Wra'],2860,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2395,2395,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_3 , VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_2 ) ; }","['Move VariableRead', 'Delete Invocation', 'Delete Invocation']",2861,"['Delete Invocation', 'Delete Invocation', 'Delete FieldRead']","['VariableRead', 'Invocation', 'Invocation']","['Invocation', 'Invocation', 'FieldRead']",Partial Match,0.3333333333333333,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2396,2396,void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; },void METHOD_1 ( ) { this . VAR_1 = new java.util.Date ( ) ; },['Update ConstructorCall'],2862,['Update TypeReference'],['ConstructorCall'],['TypeReference'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2397,2397,"public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { return METHOD_1 ( VAR_1 , this . VAR_2 ) ; }","public TYPE_1 METHOD_1 ( long VAR_1 ) { return METHOD_1 ( ( ( java.lang.Object ) ( VAR_1 ) ) , true , true ) ; }","['Update TypeReference', 'Insert Literal', 'Insert Literal', 'Insert TypeReference', 'Delete ThisAccess', 'Delete FieldRead']",2863,"['Update Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Insert Literal', 'Insert Literal', 'Insert BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead']","['TypeReference', 'Literal', 'Literal', 'TypeReference', 'ThisAccess', 'FieldRead']","['Parameter', 'TypeReference', 'VariableRead', 'Literal', 'Literal', 'BinaryOperator', 'ThisAccess', 'FieldRead']",GPT Hallucinated Nodes,0.5714285714285714,0.625,0.8333333333333334,0.7142857142857143,5,3,1
2398,2398,public static TYPE_1 METHOD_1 ( java.lang.String value ) { return new TYPE_1 ( value ) ; },public TYPE_1 METHOD_1 ( java.lang.String value ) { return new TYPE_1 ( value ) ; },['Delete Wra'],2864,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2399,2399,public int METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 ;,public int METHOD_1 ( ) throws TYPE_1 ;,"['Delete TypeReference', 'Delete Parameter']",2865,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2400,2400,public void METHOD_1 ( android.view.View VAR_1 ) { ( VAR_2 ) -- ; METHOD_2 ( true ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { ( VAR_2 ) -- ; METHOD_2 ( ) ; },['Delete Literal'],2866,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2401,2401,"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , true ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },['Delete Literal'],2867,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2402,2402,public void METHOD_1 ( ) { VAR_1 . add ( TYPE_1 . METHOD_2 ( ) ) ; METHOD_3 ( ) ; context . METHOD_4 ( ) ; if ( ( VAR_2 ) != null ) { METHOD_5 ( ) ; } },public void METHOD_1 ( ) { VAR_1 . add ( TYPE_1 . METHOD_2 ( ) ) ; METHOD_3 ( false ) ; context . METHOD_4 ( ) ; if ( ( VAR_2 ) != null ) { METHOD_5 ( ) ; } },['Insert Literal'],2868,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2403,2403,public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { event . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.util.Set < TYPE_2 > VAR_1 ) { event . METHOD_1 ( VAR_1 ) ; },['Update TypeReference'],2869,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2404,2404,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( false ) ; VAR_4 . show ( METHOD_4 ( ) , STRING_1 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . show ( METHOD_4 ( ) , STRING_1 ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete Invocation']",2870,"['Delete Invocation', 'Delete Literal']","['VariableRead', 'Literal', 'Invocation']","['Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2405,2405,public abstract TYPE_1 < java.lang.String > METHOD_1 ( ) ;,public abstract java.lang.String METHOD_1 ( ) ;,"['Update TypeReference', 'Delete TypeReference']",2871,['Update TypeReference'],"['TypeReference', 'TypeReference']",['TypeReference'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
2406,2406,"public static java.lang.String METHOD_1 ( double VAR_1 , java.lang.String VAR_2 ) { return null ; }",public static java.lang.String METHOD_1 ( double VAR_1 ) { return null ; },"['Delete TypeReference', 'Delete Parameter']",2873,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2407,2407,"public static void METHOD_1 ( int content ) { if ( content >= 0 ) TYPE_1 . METHOD_2 ( new java.io.File ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) , content ) ; else java.lang.System.err.println ( STRING_3 ) ; }","public static void METHOD_1 ( int content ) { if ( content > 0 ) TYPE_1 . METHOD_2 ( new java.io.File ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) , content ) ; else java.lang.System.err.println ( STRING_3 ) ; }",['Update BinaryOperator'],2874,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2408,2408,public java.lang.Integer METHOD_1 ( java.lang.String value ) { return java.lang.Integer . METHOD_2 ( value ) ; },public java.lang.Integer METHOD_1 ( java.lang.String value ) { return null ; },"['Insert Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2875,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
2409,2409,private boolean METHOD_1 ( float VAR_1 ) { return ( ( this . METHOD_2 ( VAR_1 ) ) == false ) && ( ( this . METHOD_3 ( VAR_1 ) ) == false ) ; },private boolean METHOD_1 ( float VAR_1 ) { return ( ( this . METHOD_2 ( ) ) == false ) && ( ( this . METHOD_3 ( ) ) == false ) ; },"['Delete VariableRead', 'Delete VariableRead']",2876,"['Delete VariableRead', 'Delete VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2410,2410,public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_3 ( VAR_1 ) ; } },"['Delete VariableRead', 'Delete Invocation']",2877,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2411,2411,public java.lang.String METHOD_1 ( ) { return ( target . METHOD_2 ( VAR_1 ) ) && ( target . METHOD_3 ( ) ) ? TYPE_1 . METHOD_4 ( ) : null ; },public java.lang.String METHOD_1 ( ) { return ( target . METHOD_2 ( VAR_1 ) ) && ( this . target . METHOD_3 ( ) ) ? TYPE_1 . METHOD_4 ( ) : null ; },['Insert ThisAccess'],2878,"['Insert ThisAccess', 'Insert FieldRead']",['ThisAccess'],"['ThisAccess', 'FieldRead']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
2412,2412,private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = ( ( ( STRING_1 + ( VAR_3 . toLowerCase ( ) ) ) + STRING_2 ) + VAR_1 ) + STRING_3 ; return VAR_2 ; },private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_1 ) + STRING_3 ; return VAR_2 ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2879,"['Delete FieldRead', 'Delete Invocation', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2,1,1
2413,2413,"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_2 ( position ) ; VAR_3 . setText ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_3 . setText ( STRING_1 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2880,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeAccess', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2414,2414,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; TYPE_1 VAR_3 = TYPE_1 . METHOD_2 ( this , VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( this , intent , VAR_3 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; TYPE_1 VAR_3 = TYPE_1 . METHOD_2 ( this , VAR_1 , STRING_1 ) ; METHOD_3 ( intent , VAR_3 . METHOD_4 ( ) ) ; }","['Delete TypeAccess', 'Delete ThisAccess']",2881,['Delete TypeAccess'],"['TypeAccess', 'ThisAccess']",['TypeAccess'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2415,2415,public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return false ; } java.lang.String VAR_2 = VAR_3 . toLowerCase ( ) ; return ( VAR_4 . contains ( STRING_1 ) ) || ( VAR_4 . contains ( STRING_2 ) ) ; },public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = VAR_3 . toLowerCase ( ) ; return ( VAR_4 . contains ( STRING_1 ) ) || ( VAR_4 . contains ( STRING_2 ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2882,['Delete If'],"['VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']",['If'],GPT Missed Nodes,0.16666666666666666,1.0,0.14285714285714285,0.25,1,0,6
2416,2416,long METHOD_1 ( TYPE_1 VAR_1 ) ;,void METHOD_1 ( TYPE_1 VAR_1 ) ;,['Update TypeReference'],2883,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2417,2417,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; VAR_3 . assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 class ) ; assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; }","['Update TypeAccess', 'Update TypeAccess']",2884,"['Delete TypeAccess', 'Delete TypeAccess']","['TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess']",Exact Match,1.0,0.0,0.0,0.0,0,2,2
2418,2418,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( METHOD_6 ( ) ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( METHOD_6 ( ) ) ; return VAR_1 ; },['Update Wra'],2885,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2419,2419,public int METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } return 1 ; },public int METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } return 0 ; },['Update Literal'],2886,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2420,2420,public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.print ( VAR_1 . METHOD_3 ( this . METHOD_4 ( ) ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( VAR_1 . METHOD_3 ( this . METHOD_4 ( ) ) ) ; },['Update Invocation'],2887,['Update Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2421,2421,"public static int METHOD_1 ( int a , int b ) { if ( a > INT_1 ) { return a + b ; } else { return a - b ; } }","public static int METHOD_1 ( int a , int b ) { if ( a < INT_1 ) { return a + b ; } else { return a - b ; } }",['Update BinaryOperator'],2888,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2422,2422,public boolean METHOD_1 ( ) { if ( ( ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) + 1 ) >= ( ( VAR_1 ) / INT_1 ) ) return true ; else return false ; },public boolean METHOD_1 ( ) { if ( ( ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) + 1 ) >= ( ( VAR_1 ) - 1 ) ) return true ; else return false ; },"['Update BinaryOperator', 'Insert Literal', 'Delete FieldRead']",2890,"['Delete Literal', 'Delete BinaryOperator', 'Insert Literal', 'Insert BinaryOperator']","['BinaryOperator', 'Literal', 'FieldRead']","['Literal', 'BinaryOperator', 'Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,0.25,0.3333333333333333,0.28571428571428575,1,3,2
2423,2423,public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },['Delete Invocation'],2891,['Delete Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2424,2424,"void METHOD_1 ( boolean VAR_1 , int index ) ;",void METHOD_1 ( int index ) ;,"['Delete TypeReference', 'Delete Parameter']",2892,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2425,2425,"public static int METHOD_1 ( ) { final TYPE_1 query = TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , false ) ; final java.lang.Long num = ( ( java.lang.Long ) ( query . METHOD_3 ( ) ) ) ; return VAR_2 . intValue ( ) ; }","public static int METHOD_1 ( ) { final TYPE_1 query = TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 , true ) ; final java.lang.Long num = ( ( java.lang.Long ) ( query . METHOD_3 ( ) ) ) ; return VAR_2 . intValue ( ) ; }",['Update Literal'],2893,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2426,2426,"public TYPE_1 METHOD_1 ( int id , java.lang.Object VAR_1 ) ;",public TYPE_1 METHOD_1 ( int id ) ;,"['Delete TypeReference', 'Delete Parameter']",2894,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2427,2427,"private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , null , false ) ; }","private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , null ) ; }",['Delete Literal'],2896,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2428,2428,"java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) ;",java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter']",2897,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2429,2429,private void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) VAR_1 = ( VAR_2 . length ) - 1 ; else ( VAR_1 ) -- ; METHOD_2 ( 0 ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) VAR_1 = ( VAR_2 . length ) - 1 ; else ( VAR_1 ) -- ; METHOD_3 ( ) ; },"['Delete Literal', 'Delete Invocation']",2898,['Delete Invocation'],"['Literal', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2430,2430,"public boolean METHOD_1 ( final int index , final TYPE_1 item ) { VAR_1 . METHOD_2 ( VAR_2 ) ; return true ; }","public boolean METHOD_1 ( final int index , final TYPE_1 item ) { VAR_1 . METHOD_2 ( p ) ; return true ; }","['Insert FieldRead', 'Delete TypeAccess']",2899,['Update VariableRead'],"['FieldRead', 'TypeAccess']",['VariableRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,2
2431,2431,public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; },['Insert Invocation'],2901,['Insert Invocation'],['Invocation'],['Invocation'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2432,2432,public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( true ) ) ) ; return ( ( TYPE_1 ) ( VAR_1 . METHOD_5 ( STRING_1 ) ) ) ; },private TYPE_1 METHOD_1 ( TYPE_3 context ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( context . METHOD_3 ( ) . METHOD_4 ( true ) ) ) ; return ( ( TYPE_1 ) ( VAR_1 . METHOD_5 ( STRING_1 ) ) ) ; },"['Insert Parameter', 'Update Wra', 'Insert TypeReference', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2902,"['Update Wra', 'Insert Parameter', 'Delete TypeAccess', 'Delete Invocation']","['Parameter', 'Wra', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation']","['Wra', 'Parameter', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
2433,2433,"public void METHOD_1 ( ) { VAR_1 . assertEquals ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) , TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ) ; }","public void METHOD_1 ( ) { assertEquals ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) , TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ) ; }",['Update TypeAccess'],2903,['Delete FieldRead'],['TypeAccess'],['FieldRead'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2434,2434,public void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",2904,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2435,2435,"protected boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return ( TYPE_1 . METHOD_2 ( getValue ( ) , java.util.Arrays.asList ( VAR_1 . METHOD_3 ( ) ) ) ) == false ; } return false ; }","protected boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { return ( TYPE_1 . METHOD_2 ( getValue ( ) , java.util.Arrays.asList ( this . VAR_1 . METHOD_3 ( ) ) ) ) == false ; } return false ; }","['Insert ThisAccess', 'Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",2905,"['Insert ThisAccess', 'Insert ThisAccess']","['ThisAccess', 'FieldRead', 'ThisAccess', 'TypeAccess']","['ThisAccess', 'ThisAccess']",GPT Missed Nodes,0.3333333333333333,1.0,0.5,0.6666666666666666,2,0,2
2436,2436,"public void METHOD_1 ( int index , TYPE_1 element ) { METHOD_2 ( index ) ; if ( index == 1 ) METHOD_3 ( element ) ; else METHOD_4 ( element , node ( ( index - 1 ) ) ) ; }","public void METHOD_1 ( int index , TYPE_1 element ) { METHOD_2 ( index ) ; if ( index == 1 ) METHOD_3 ( element ) ; else METHOD_4 ( element , node ( index ) ) ; }","['Move VariableRead', 'Delete Literal', 'Delete BinaryOperator']",2906,"['Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'Literal', 'BinaryOperator']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2437,2437,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , STRING_2 , new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( context , STRING_3 ) ; } } ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , STRING_2 , true , new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_4 ( context , STRING_3 ) ; } } ) ; }",['Insert Literal'],2907,['Insert Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2438,2438,"public void METHOD_1 ( int VAR_1 , int height ) { super . METHOD_1 ( VAR_1 , height ) ; VAR_2 . info ( STRING_1 , VAR_1 , height ) ; METHOD_2 ( VAR_1 , height ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { super . METHOD_1 ( VAR_1 , height ) ; VAR_2 . info ( STRING_1 , VAR_1 , height ) ; METHOD_2 ( ) ; }","['Delete VariableRead', 'Delete VariableRead']",2908,"['Delete VariableRead', 'Delete VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2439,2439,"public void METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_5 , VAR_4 ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 , VAR_2 ) ; }","['Move VariableRead', 'Move VariableRead']",2909,"['Update VariableRead', 'Update VariableRead', 'Update VariableRead', 'Update VariableRead']","['VariableRead', 'VariableRead']","['VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.0,0.0,0.0,0,4,2
2440,2440,private void METHOD_1 ( int value ) { VAR_1 = value ; },private void METHOD_1 ( int value ) { VAR_1 = value + 1 ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal']",2910,"['Insert Literal', 'Insert BinaryOperator']","['BinaryOperator', 'VariableRead', 'Literal']","['Literal', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2441,2441,protected static void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },['Delete Wra'],2911,['Delete Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2442,2442,"public java.lang.Object get ( java.lang.Object key ) { TYPE_1 VAR_1 = METHOD_1 ( ) ; java.lang.Object value = VAR_2 . get ( VAR_1 , ( ( java.lang.String ) ( key ) ) ) ; VAR_1 . METHOD_2 ( ) ; return value ; }","public java.lang.Object get ( java.lang.Object key ) { TYPE_1 VAR_1 = this . METHOD_1 ( ) ; java.lang.Object value = VAR_2 . get ( VAR_1 , ( ( java.lang.String ) ( key ) ) ) ; VAR_1 . METHOD_2 ( ) ; return value ; }",['Insert ThisAccess'],2912,['Insert ThisAccess'],['ThisAccess'],['ThisAccess'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2443,2443,private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete Invocation']",2913,['Delete Invocation'],"['VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2444,2444,"public TYPE_1 METHOD_1 ( final TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) { return VAR_1 ; }","public TYPE_1 METHOD_1 ( final TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) { return null ; }","['Insert Literal', 'Delete VariableRead']",2915,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2445,2445,public void METHOD_1 ( java.lang.Object ... args ) ;,public void METHOD_1 ( ) ;,['Delete Parameter'],2916,['Delete Parameter'],['Parameter'],['Parameter'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2446,2446,public void METHOD_1 ( java.lang.String VAR_1 ) { if ( METHOD_2 ( ) ) METHOD_3 ( null ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( METHOD_2 ( ) ) METHOD_3 ( ) ; },['Delete Literal'],2917,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2447,2447,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . toLowerCase ( ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation']",2918,"['Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Insert VariableRead']","['VariableRead', 'TypeAccess', 'Invocation']","['Invocation', 'TypeAccess', 'FieldRead', 'VariableRead']",GPT Hallucinated Nodes,0.75,0.75,1.0,0.8571428571428571,3,1,0
2448,2448,"protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { return new TYPE_4 ( VAR_1 . size ( ) ) ; }","protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { return new TYPE_4 < TYPE_2 , TYPE_3 > ( size ( ) ) ; }",['Update TypeAccess'],2919,"['Insert TypeReference', 'Insert TypeReference', 'Delete FieldRead', 'Delete TypeAccess']",['TypeAccess'],"['TypeReference', 'TypeReference', 'FieldRead', 'TypeAccess']",GPT Hallucinated Nodes,0.3333333333333333,0.0,0.0,0.0,0,4,1
2449,2449,"public long METHOD_1 ( int VAR_1 , int VAR_2 ) { return VAR_2 ; }","public long METHOD_1 ( int VAR_1 , int VAR_2 ) { return 0 ; }","['Insert Literal', 'Delete VariableRead']",2920,"['Delete VariableRead', 'Insert Literal']","['Literal', 'VariableRead']","['VariableRead', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2450,2450,"public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_6 ( ) . METHOD_7 ( STRING_1 ) ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }",['Delete TypeAccess'],2922,['Delete Literal'],['TypeAccess'],['Literal'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2451,2451,"public java.util.Calendar METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return null ; while ( ! ( VAR_2 . contains ( VAR_3 . get ( VAR_4 ) ) ) ) { VAR_3 . add ( VAR_5 , 1 ) ; } return VAR_6 ; }","public java.util.Calendar METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return null ; while ( ! ( VAR_2 . contains ( VAR_3 . get ( VAR_4 ) ) ) ) { VAR_3 . add ( VAR_4 , 1 ) ; } return VAR_6 ; }",['Update TypeAccess'],2923,"['Delete VariableRead', 'Insert VariableRead']",['TypeAccess'],"['VariableRead', 'VariableRead']",Partial Match,0.0,0.0,0.0,0.0,0,2,1
2452,2452,public boolean METHOD_1 ( TYPE_1 end ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) >= ( end . METHOD_4 ( ) ) ; },public boolean METHOD_1 ( TYPE_1 end ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . compareTo ( end ) ) >= 0 ; },"['Update Invocation', 'Insert Literal', 'Move VariableRead', 'Delete Invocation']",2925,"['Update Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Insert Invocation', 'Insert VariableRead', 'Insert Literal']","['Invocation', 'Literal', 'VariableRead', 'Invocation']","['Invocation', 'Invocation', 'Invocation', 'TypeReference', 'Invocation', 'Invocation', 'VariableRead', 'Literal']",GPT Hallucinated Nodes,0.75,0.375,0.75,0.5,3,5,1
2453,2453,private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . contains ( STRING_1 ) ) { return true ; } return true ; },private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return true ; } return true ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2926,"['Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']","['BinaryOperator', 'VariableRead', 'Literal', 'Invocation', 'TypeAccess', 'Invocation']","['BinaryOperator', 'VariableRead', 'Literal', 'Invocation', 'Invocation', 'FieldRead', 'Literal', 'Invocation']",Partial Match,0.6666666666666666,0.5,0.6666666666666666,0.5714285714285715,4,4,2
2454,2454,"public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_1 , VAR_3 class ) . METHOD_3 ( STRING_2 , VAR_1 ) . METHOD_4 ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Integer VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_1 , VAR_3 class ) . METHOD_4 ( ) ; }","['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2927,"['Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['Invocation', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation']","['Invocation', 'Literal', 'VariableRead']",Partial Match,0.5,0.6666666666666666,0.4,0.5,2,1,3
2455,2455,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },['Update TypeReference'],2928,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2456,2456,public void METHOD_1 ( ) { for ( int p = 0 ; p < ( VAR_1 . size ( ) ) ; p ++ ) { TYPE_1 VAR_2 = VAR_1 . get ( p ) ; VAR_2 . METHOD_1 ( false ) ; } },public void METHOD_1 ( ) { for ( int p = 0 ; p < ( VAR_1 . size ( ) ) ; p ++ ) { TYPE_1 VAR_2 = VAR_1 . get ( p ) ; VAR_2 . METHOD_1 ( ) ; } },['Delete Literal'],2929,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2457,2457,"public void METHOD_1 ( int index , TYPE_1 VAR_1 ) { VAR_2 . set ( index , VAR_1 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( int index , java.lang.String value ) { VAR_2 . set ( index , value ) ; METHOD_2 ( ) ; }","['Update Parameter', 'Update TypeReference', 'Update VariableRead']",2930,"['Update TypeReference', 'Update Parameter', 'Update VariableRead']","['Parameter', 'TypeReference', 'VariableRead']","['TypeReference', 'Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2458,2458,public static void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; },private static void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; },['Update Wra'],2931,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2459,2459,"private TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 , TYPE_4 { return TYPE_5 . METHOD_2 ( METHOD_3 ( false ) , this . VAR_1 , this . VAR_2 , this . VAR_3 , this . VAR_4 ) ; }","private TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 , TYPE_4 { return TYPE_5 . METHOD_2 ( METHOD_3 ( ) , this . VAR_1 , this . VAR_2 , this . VAR_3 , this . VAR_4 ) ; }",['Delete Literal'],2932,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2460,2460,"public void METHOD_1 ( java.lang.Class VAR_1 , TYPE_1 listener ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , listener ) ; if ( VAR_2 != null ) { METHOD_1 ( VAR_2 ) ; } }","public void METHOD_1 ( java.lang.Class < TYPE_2 > VAR_1 , TYPE_1 listener ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , listener ) ; if ( VAR_2 != null ) { METHOD_1 ( VAR_2 ) ; } }",['Insert TypeReference'],2933,['Update Parameter'],['TypeReference'],['Parameter'],Partial Match,0.0,0.0,0.0,0.0,0,1,1
2461,2461,"public TYPE_1 < TYPE_2 , ? > METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) ) ; } return null ; }","public TYPE_1 < TYPE_2 , ? > METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_3 ( ) . METHOD_4 ( ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ) ; } return null ; }",['Insert TypeReference'],2934,['Insert TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2462,2462,public int METHOD_1 ( ) { return new java.lang.Integer ( VAR_1 . METHOD_2 ( STRING_1 ) . getValue ( ) ) ; },public int METHOD_1 ( ) { return new java.lang.Integer ( VAR_1 . METHOD_2 ( STRING_1 ) . getValue ( ) ) . intValue ( ) ; },"['Insert Invocation', 'Move ConstructorCall']",2936,['Insert Invocation'],"['Invocation', 'ConstructorCall']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2463,2463,"void METHOD_1 ( java.lang.String state , TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;","void METHOD_1 ( java.lang.String state , TYPE_2 VAR_2 ) ;","['Delete TypeReference', 'Delete Parameter']",2937,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2464,2464,"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_5 , VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_5 , VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2938,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2465,2465,"public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 = new TYPE_2 ( INT_1 , INT_1 ) ; }",public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 = new TYPE_2 ( ) ; },"['Delete FieldRead', 'Delete FieldRead']",2939,"['Delete Literal', 'Delete Literal']","['FieldRead', 'FieldRead']","['Literal', 'Literal']",Partial Match,0.0,0.0,0.0,0.0,0,2,2
2466,2466,"private boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_3 ) ; return true ; } return false ; }","private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_3 ) ; } }","['Update TypeReference', 'Delete Literal', 'Delete Return', 'Delete Literal', 'Delete Return']",2940,"['Update TypeReference', 'Delete Return', 'Delete Literal', 'Delete Return', 'Delete Literal']","['TypeReference', 'Literal', 'Return', 'Literal', 'Return']","['TypeReference', 'Return', 'Literal', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
2467,2467,"public static int METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { return VAR_4 . METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 ) , VAR_2 , VAR_3 ) ; }","public static int METHOD_1 ( int VAR_1 , int VAR_2 ) { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Parameter', 'Update Parameter', 'Move VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",2941,"['Delete TypeReference', 'Delete Parameter', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete VariableRead']","['Parameter', 'Parameter', 'VariableRead', 'TypeReference', 'Parameter', 'TypeAccess', 'Invocation', 'VariableRead']","['TypeReference', 'Parameter', 'Parameter', 'TypeAccess', 'Invocation', 'TypeReference', 'VariableRead']",Exact Match,1.0,0.7142857142857143,0.625,0.6666666666666666,5,2,3
2468,2468,"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false , x ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true , x ) ; }",['Update Literal'],2942,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2469,2469,public int METHOD_1 ( int id ) { return VAR_1 . contains ( id ) ? VAR_2 : VAR_3 ; },public int METHOD_1 ( int position ) { return VAR_1 . contains ( position ) ? VAR_2 : VAR_3 ; },"['Update Parameter', 'Update VariableRead']",2943,"['Update Parameter', 'Update VariableRead']","['Parameter', 'VariableRead']","['Parameter', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2470,2470,"public static int METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_1 , VAR_2 ) ; return VAR_4 . METHOD_5 ( VAR_1 ) ; }","public static int METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( 1 ) ; VAR_4 . METHOD_4 ( VAR_1 , VAR_2 ) ; return VAR_4 . METHOD_5 ( VAR_1 ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2944,"['Delete Parameter', 'Update Literal', 'Delete Invocation']","['Literal', 'TypeReference', 'Parameter', 'TypeAccess', 'TypeAccess', 'VariableRead', 'VariableRead', 'Invocation']","['Parameter', 'Literal', 'Invocation']",GPT Missed Nodes,0.5,0.6666666666666666,0.25,0.36363636363636365,2,1,6
2471,2471,public boolean METHOD_1 ( long VAR_1 ) { if ( ( VAR_1 % ( VAR_2 ) ) == 0 ) { METHOD_2 ( ) ; } return true ; },public boolean METHOD_1 ( long VAR_1 ) { if ( ( VAR_1 % ( VAR_2 ) ) == 0 ) { METHOD_2 ( ) ; } return false ; },['Update Literal'],2945,['Update Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2472,2472,public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },public static TYPE_1 METHOD_1 ( java.lang.String method ) { return new TYPE_1 ( method ) ; },"['Insert Parameter', 'Insert TypeReference', 'Update ConstructorCall', 'Insert VariableRead']",2946,"['Insert Parameter', 'Insert VariableRead', 'Insert TypeReference', 'Insert ConstructorCall']","['Parameter', 'TypeReference', 'ConstructorCall', 'VariableRead']","['Parameter', 'VariableRead', 'TypeReference', 'ConstructorCall']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
2473,2473,"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws java.io.IOException ;","void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException ;","['Delete TypeReference', 'Delete Parameter']",2947,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2474,2474,"public void METHOD_1 ( ) { listener . METHOD_2 ( VAR_1 . METHOD_3 ( ) , info . METHOD_4 ( ) ) ; }",public void METHOD_1 ( ) { listener . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldRead', 'Delete Invocation']",2948,"['Delete FieldRead', 'Delete Invocation']","['FieldRead', 'Invocation']","['FieldRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
2475,2475,protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( METHOD_3 ( ) ) { state = VAR_2 ; METHOD_4 ( VAR_3 ) ; } },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( METHOD_3 ( ) ) { state = VAR_2 ; METHOD_4 ( VAR_3 ) ; } },['Update Wra'],2950,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2476,2476,"void METHOD_1 ( int VAR_1 , java.lang.String message , java.lang.String VAR_2 ) ;",void METHOD_1 ( int VAR_1 ) ;,"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter']",2952,"['Delete Parameter', 'Delete Parameter']","['TypeReference', 'Parameter', 'TypeReference', 'Parameter']","['Parameter', 'Parameter']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
2477,2477,public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { return METHOD_2 ( VAR_1 ) ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_2 = VAR_3 . get ( id ) ; if ( VAR_2 == null ) { return METHOD_2 ( id ) ; } return VAR_2 ; },"['Update Parameter', 'Update VariableRead', 'Update VariableRead']",2953,"['Update Parameter', 'Update VariableRead', 'Update VariableRead']","['Parameter', 'VariableRead', 'VariableRead']","['Parameter', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2478,2478,"private TYPE_1 METHOD_1 ( java.lang.Integer id ) { return VAR_1 . METHOD_2 ( VAR_2 class , id ) ; }","private TYPE_1 METHOD_1 ( java.lang.Long id ) { return VAR_1 . METHOD_2 ( VAR_2 class , id ) ; }",['Update TypeReference'],2954,"['Update TypeReference', 'Update TypeReference']",['TypeReference'],"['TypeReference', 'TypeReference']",Exact Match,1.0,0.5,1.0,0.6666666666666666,1,1,0
2479,2479,public void METHOD_1 ( ) { if ( ( ( VAR_1 ) + ( step ) ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) + ( step ) ) == 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },['Update BinaryOperator'],2955,['Update BinaryOperator'],['BinaryOperator'],['BinaryOperator'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2480,2480,protected abstract int METHOD_1 ( TYPE_1 VAR_1 ) ;,protected abstract void METHOD_1 ( ) ;,"['Update TypeReference', 'Delete TypeReference', 'Delete Parameter']",2956,"['Update TypeReference', 'Delete Parameter']","['TypeReference', 'TypeReference', 'Parameter']","['TypeReference', 'Parameter']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
2481,2481,public static TYPE_1 METHOD_1 ( java.lang.String key ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( VAR_1 . url ( key ) ) ; },private static TYPE_1 METHOD_1 ( java.lang.String key ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( VAR_1 . url ( key ) ) ; },['Update Wra'],2957,['Update Wra'],['Wra'],['Wra'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
2482,2482,public void METHOD_1 ( double n ) { VAR_1 = n ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Parameter', 'Update VariableRead', 'Insert ThisAccess']",2958,"['Update Parameter', 'Insert ThisAccess', 'Insert FieldWrite', 'Insert VariableRead', 'Delete Assignment']","['Parameter', 'VariableRead', 'ThisAccess']","['Parameter', 'ThisAccess', 'FieldWrite', 'VariableRead', 'Assignment']",GPT Hallucinated Nodes,0.6,0.4,0.6666666666666666,0.5,2,3,1
2483,2483,"public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; }","public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; return 0 ; }","['Update TypeReference', 'Insert Return', 'Insert Literal']",2959,"['Update TypeReference', 'Insert Return', 'Insert Literal']","['TypeReference', 'Return', 'Literal']","['TypeReference', 'Return', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
2484,2484,"public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return METHOD_2 ( VAR_2 , 1 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_2 , 1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",2960,"['Delete Parameter', 'Delete VariableRead']","['TypeReference', 'Parameter', 'VariableRead']","['Parameter', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
2485,2485,protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 ; },protected TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter']",2961,['Delete Parameter'],"['TypeReference', 'Parameter']",['Parameter'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
2486,2486,private void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( TYPE_2 . METHOD_2 ( event ) ) ; this . VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; },private void METHOD_1 ( TYPE_1 event ) { VAR_1 . info ( TYPE_2 . METHOD_2 ( event ) ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; },"['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead']",2962,['Delete ThisAccess'],"['TypeAccess', 'ThisAccess', 'FieldRead']",['ThisAccess'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
2487,2487,"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; result = TYPE_1 . METHOD_2 ( first , VAR_3 , VAR_1 ) ; VAR_2 . setText ( null ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( java.lang.String ) ( VAR_2 . getText ( ) ) ) ; result = TYPE_1 . METHOD_2 ( first , result , VAR_1 ) ; VAR_2 . setText ( null ) ; }","['Move Invocation', 'Insert TypeReference', 'Insert FieldRead', 'Delete Invocation', 'Delete TypeAccess']",693,"['Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Delete Invocation', 'Update VariableRead', 'Update VariableRead']","['Invocation', 'TypeReference', 'FieldRead', 'Invocation', 'TypeAccess']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'VariableRead']",Partial Match,0.4,0.02564102564102564,0.4,0.048192771084337345,2,76,3
2488,2488,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 listener ) { VAR_3 . remove ( VAR_1 ) ; VAR_4 . add ( VAR_2 ) ; listener . METHOD_2 ( VAR_2 ) ; }","'public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 listener ) { VAR_3 . remove ( VAR_2 ) ; VAR_4 . add ( VAR_2 ) ; listener . METHOD_2 ( VAR_2 ) ; }'",['Update VariableRead'],692,['Update VariableRead'],['VariableRead'],['VariableRead'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
