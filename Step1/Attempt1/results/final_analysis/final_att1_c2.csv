fixed_code,buggy_code,gumtree_baseline,line_in_dataset,gpt_attempt1,baseline_nodes,gpt_nodes,node_set_match,jaccard_score,precision,recall,f1_score,tp,fp,fn
0,"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.8,0.8571428571428571,0.75,0.7999999999999999,6,1,2
1,public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( VAR_3 ) ; java.lang.System.out.print ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",4,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'VariableRead', 'Invocation', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'TypeReference', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.75,0.6666666666666666,0.7058823529411765,6,2,3
2,private java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 > result = new java.util.ArrayList < TYPE_1 > ( METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_1 ) TYPE_2 . METHOD_4 ( result ) ; return result ; },private java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { return new java.util.ArrayList < TYPE_1 > ( METHOD_2 ( ) . METHOD_3 ( ) ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",6,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Return', 'Move ConstructorCall']","['ConstructorCall', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'If', 'TypeAccess', 'Invocation', 'VariableRead', 'Return', 'ConstructorCall']",Partial Match,0.7777777777777778,0.6666666666666666,0.7272727272727273,0.6956521739130435,8,4,3
3,"public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( id , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_1 . METHOD_1 ( VAR_7 ) ; return VAR_1 ; }","public TYPE_1 build ( ) { return new TYPE_1 ( id , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",7,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead', 'Return']",Partial Match,0.42857142857142855,0.75,0.42857142857142855,0.5454545454545454,3,1,4
4,public void METHOD_1 ( ) { this . METHOD_2 ( ) ; int tmp = METHOD_3 ( 1 ) ; if ( tmp != INT_1 ) this . VAR_1 = tmp ; else this . VAR_1 = 0 ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) ; if ( ( METHOD_3 ( 1 ) ) != INT_1 ) this . VAR_1 = METHOD_3 ( 1 ) ; else this . VAR_1 = 0 ; },"['Move Invocation', 'Insert Invocation', 'Insert Literal', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",8,"['Delete LocalVariable', 'Insert Invocation', 'Insert BinaryOperator', 'Update FieldWrite']","['Invocation', 'Invocation', 'Literal', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'Invocation', 'BinaryOperator', 'FieldWrite']",Partial Match,0.2857142857142857,0.5,0.2857142857142857,0.36363636363636365,2,2,5
5,"private void METHOD_1 ( ) { METHOD_2 ( ) ; android.content.Intent VAR_1 = new android.content.Intent ( METHOD_3 ( ) , VAR_2 class ) . METHOD_4 ( VAR_3 , VAR_4 . getId ( ) ) ; METHOD_5 ( VAR_1 , VAR_5 ) ; }","private void METHOD_1 ( ) { METHOD_2 ( ) ; android.content.Intent VAR_1 = new android.content.Intent ( METHOD_3 ( ) , VAR_2 class ) ; METHOD_5 ( VAR_1 , VAR_5 ) ; }","['Move ConstructorCall', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",11,['Delete Invocation'],"['ConstructorCall', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']",['Invocation'],GPT Missed Nodes,0.3333333333333333,1.0,0.2,0.33333333333333337,1,0,4
6,private void METHOD_1 ( ) { VAR_1 = ( java.lang.Math.random ( ) ) >= FLOAT_1 ; if ( VAR_1 ) VAR_2 = new TYPE_1 ( ) ; else VAR_2 = new TYPE_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( java.lang.Math.random ( ) ) >= FLOAT_1 ; if ( VAR_1 ) { TYPE_1 b = new TYPE_1 ( ) ; VAR_2 = TYPE_1 ; } else VAR_2 = new TYPE_2 ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert FieldRead']",12,"['Insert Block', 'Insert LocalVariable', 'Insert TypeReference', 'Insert Assignment', 'Insert VariableRead']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'FieldRead']","['Block', 'LocalVariable', 'TypeReference', 'Assignment', 'VariableRead']",Partial Match,0.2857142857142857,0.4,0.5,0.4444444444444445,2,3,2
7,"public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( false ) ; java.lang.String VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; VAR_4 . assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( false ) ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( false ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_4 . assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( false ) ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",16,"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.6,1.0,0.6,0.7499999999999999,3,0,2
8,public int METHOD_1 ( TYPE_1 key ) { java.lang.Integer VAR_1 = VAR_2 . get ( key ) ; if ( VAR_1 == null ) return METHOD_2 ( key ) ; else return VAR_1 ; },public int METHOD_1 ( TYPE_1 key ) { return METHOD_2 ( key ) ; },"['Move Return', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",17,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Literal', 'Delete VariableRead', 'Delete Return']","['Return', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Block', 'VariableRead', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'If', 'Literal', 'VariableRead', 'Return']",Partial Match,0.5454545454545454,0.8571428571428571,0.42857142857142855,0.5714285714285714,6,1,8
9,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; intent . METHOD_3 ( STRING_1 , VAR_3 ) ; METHOD_4 ( intent ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",18,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete Literal', 'Delete TypeReference', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'Invocation', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'Invocation', 'Literal', 'TypeReference', 'Invocation', 'Literal', 'VariableRead', 'Invocation']",Partial Match,0.625,0.7,0.6363636363636364,0.6666666666666666,7,3,4
10,"public TYPE_1 index ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_1 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_1 ( STRING_4 , true ) ; return VAR_1 ; }",public java.lang.String index ( ) { return STRING_1 ; },"['Update TypeReference', 'Move FieldRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead']",21,"['Update TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Return']","['TypeReference', 'FieldRead', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'Literal', 'Invocation', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation', 'Literal', 'Invocation', 'Literal', 'Literal', 'Return']",Partial Match,0.6666666666666666,0.7,0.5,0.5833333333333334,7,3,7
11,"public int METHOD_1 ( ) { int VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getString ( VAR_3 . getString ( VAR_4 ) , ( ( VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_6 ) ) + STRING_1 ) ) ) ; return VAR_1 ; }","public int METHOD_1 ( ) { return VAR_2 . getInt ( VAR_3 . getString ( VAR_4 ) , VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_6 ) ) ; }","['Update Invocation', 'Move Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead']",22,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead', 'Insert Invocation']","['Invocation', 'Invocation', 'Invocation', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'FieldRead', 'BinaryOperator', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Literal', 'Assignment', 'VariableRead', 'Invocation']",Partial Match,0.5555555555555556,0.625,0.5,0.5555555555555556,5,3,5
12,public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getContext ( ) ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_1 ( ) { METHOD_3 ( ) ; } } ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( context ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_1 ( ) { METHOD_3 ( ) ; } } ) ; },"['Insert FieldRead', 'Move TypeReference', 'Delete Invocation']",23,"['Update Invocation', 'Insert VariableRead']","['FieldRead', 'TypeReference', 'Invocation']","['Invocation', 'VariableRead']",Partial Match,0.25,0.0,0.0,0.0,0,2,3
13,public static TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 == null ) { return VAR_2 . get ( VAR_3 ) ; } else { return VAR_1 ; } },public static TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_2 . get ( name ) ; },"['Insert Return', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",24,"['Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Delete Literal', 'Delete VariableRead', 'Delete Return', 'Delete Return']","['Return', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'TypeAccess', 'Invocation', 'Return', 'Block', 'VariableRead', 'Return', 'Block', 'If']","['LocalVariable', 'Invocation', 'If', 'Literal', 'VariableRead', 'Return', 'Return']",GPT Missed Nodes,0.6,1.0,0.4375,0.6086956521739131,7,0,9
14,"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { int VAR_2 = position + 1 ; java.lang.String VAR_3 = ( VAR_4 ) + VAR_2 ; VAR_5 . setText ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { java.lang.String VAR_3 = ( VAR_4 ) + position ; VAR_5 . setText ( VAR_3 ) ; }","['Update LocalVariable', 'Move TypeReference', 'Move FieldRead', 'Delete TypeReference', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete LocalVariable']",25,"['Delete LocalVariable', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Update VariableRead']","['LocalVariable', 'TypeReference', 'FieldRead', 'TypeReference', 'Literal', 'VariableRead', 'BinaryOperator', 'LocalVariable']","['LocalVariable', 'BinaryOperator', 'VariableRead', 'Literal', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.8,0.5,0.6153846153846154,4,1,4
15,"public TYPE_1 METHOD_1 ( java.lang.Object id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( VAR_3 class , id ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( java.lang.Object id ) { return VAR_2 . METHOD_1 ( VAR_3 class , id ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",26,"['Delete LocalVariable', 'Delete Invocation', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'Return']",Partial Match,0.3333333333333333,0.6666666666666666,0.2857142857142857,0.4,2,1,5
16,public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . build ( ) ; return VAR_2 ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . build ( ) ; return VAR_2 ; } return VAR_1 ; },"['Update Invocation', 'Move Invocation', 'Delete Invocation']",29,['Delete Invocation'],"['Invocation', 'Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.3333333333333333,0.5,1,0,2
17,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = context . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; if ( VAR_2 != null ) { context . METHOD_4 ( VAR_2 ) ; } else { TYPE_1 . METHOD_5 ( STRING_1 , STRING_2 ) ; } }",public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( ) ; },"['Update LocalVariable', 'Insert ConstructorCall', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",30,"['Update LocalVariable', 'Insert ConstructorCall', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Literal']","['LocalVariable', 'ConstructorCall', 'FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'VariableRead', 'Invocation', 'Block', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'ConstructorCall', 'FieldRead', 'Invocation', 'Invocation', 'VariableRead', 'If', 'FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'Literal', 'Literal']",GPT Missed Nodes,0.8,0.9230769230769231,0.631578947368421,0.7499999999999999,12,1,7
18,public final long METHOD_1 ( ) { long VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == 0 ) { return 0 ; } return INT_1 / ( VAR_2 . METHOD_2 ( ) ) ; },public final long METHOD_1 ( ) { return INT_1 / ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",31,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete BinaryOperator', 'Delete Literal', 'Delete VariableRead', 'Delete If', 'Delete Return']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'Assignment', 'BinaryOperator', 'Literal', 'VariableRead', 'If', 'Return']",Partial Match,0.5833333333333334,0.7777777777777778,0.6363636363636364,0.7000000000000001,7,2,4
19,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_7 ) ) ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_6 = ( ( TYPE_4 ) ( getView ( ) . METHOD_3 ( VAR_7 ) ) ) ; return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","['Move Invocation', 'Insert Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",32,"['Delete LocalVariable', 'Insert Invocation', 'Delete Assignment', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Move Invocation']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'Invocation', 'Assignment', 'TypeReference', 'FieldRead', 'Invocation', 'Invocation']",Partial Match,0.5,0.5714285714285714,0.6666666666666666,0.6153846153846153,4,3,2
20,public void METHOD_1 ( boolean VAR_1 ) { int VAR_2 = ( VAR_3 . METHOD_2 ( ) . VAR_4 ) / ( VAR_5 ) ; if ( VAR_1 ) VAR_6 . METHOD_3 ( VAR_7 ) ; else VAR_6 . METHOD_3 ( VAR_8 ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) VAR_6 . METHOD_3 ( VAR_7 ) ; else VAR_6 . METHOD_3 ( VAR_8 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",33,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete Return', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'FieldRead', 'FieldRead', 'BinaryOperator', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'FieldRead', 'Invocation', 'FieldRead', 'VariableRead', 'Return', 'Invocation']",Partial Match,0.5,0.8571428571428571,0.6666666666666666,0.75,6,1,3
21,"private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; java.lang.String VAR_4 = VAR_5 . getString ( VAR_6 , VAR_7 ) ; TYPE_2 . METHOD_3 ( VAR_8 , ( STRING_1 + VAR_4 ) ) ; return VAR_4 ; }","private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; return VAR_5 . getString ( VAR_6 , VAR_7 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead']",34,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Return']",Partial Match,0.5555555555555556,0.75,0.6,0.6666666666666665,6,2,4
22,"public TYPE_1 METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( ) ; java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) throws java.io.IOException , java.lang.ClassNotFoundException { return VAR_2 . METHOD_1 ( ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",37,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.375,0.5454545454545454,3,0,5
23,"public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 class ) . METHOD_3 ( STRING_1 , VAR_1 ) . build ( ) ; return new TYPE_4 ( STRING_2 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 class ) . path ( VAR_3 class ) . METHOD_3 ( STRING_1 , VAR_1 ) . build ( ) ; return new TYPE_4 ( STRING_2 , VAR_2 ) ; }","['Insert Invocation', 'Move Invocation', 'Insert TypeAccess']",40,"['Insert TypeAccess', 'Insert Invocation']","['Invocation', 'Invocation', 'TypeAccess']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.6666666666666666,0.8,2,0,1
24,public void METHOD_1 ( int index ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; int count = 0 ; },public void METHOD_1 ( int index ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable']",41,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal']","['TypeReference', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'Literal', 'LocalVariable']","['TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'LocalVariable', 'VariableRead', 'Literal']",Partial Match,0.6,0.625,0.7142857142857143,0.6666666666666666,5,3,2
25,"public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( id ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , STRING_1 ) ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( java.lang.Integer id ) { return VAR_2 . METHOD_1 ( id ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",42,"['Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'If', 'FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'Literal']",Partial Match,0.5,0.7,0.4375,0.5384615384615384,7,3,9
26,"public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 , int height ) { java.lang.String VAR_3 = STRING_1 + VAR_1 ; VAR_4 . METHOD_2 ( VAR_3 , INT_1 ) ; java.lang.String x = STRING_2 ; return ( STRING_3 + VAR_1 ) + STRING_4 ; }","public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 , int height ) { VAR_4 . METHOD_2 ( VAR_1 , INT_1 ) ; java.lang.String x = STRING_2 ; return ( STRING_3 + VAR_1 ) + STRING_4 ; }","['Move VariableRead', 'Delete TypeReference', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead']",46,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead']","['VariableRead', 'TypeReference', 'FieldRead', 'BinaryOperator', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Literal', 'BinaryOperator', 'VariableRead']",Partial Match,0.6666666666666666,0.8,0.6666666666666666,0.7272727272727272,4,1,2
27,public TYPE_1 METHOD_1 ( int id ) { TYPE_1 VAR_1 = METHOD_2 ( id ) ; if ( VAR_1 != null ) { TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( int id ) { return METHOD_2 ( id ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",47,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete If', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'FieldRead', 'Invocation', 'TypeAccess', 'If', 'Return']",Partial Match,0.36363636363636365,0.7142857142857143,0.38461538461538464,0.5,5,2,8
28,"private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) , VAR_1 . METHOD_4 ( ) ) ; return VAR_2 ; }","private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) , VAR_1 . METHOD_4 ( ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",49,"['Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
29,"public void METHOD_1 ( java.io.InputStream VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException , TYPE_1 , TYPE_2 { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_1 ( VAR_3 ) ; }","public void METHOD_1 ( java.io.InputStream VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException , TYPE_1 , TYPE_2 { TYPE_4 VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead']",52,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Update Invocation']","['VariableRead', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation']",Partial Match,0.6,0.75,0.6,0.6666666666666665,3,1,2
30,"public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = VAR_1 + STRING_1 ; return VAR_3 . METHOD_1 ( VAR_2 ) ; }","public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead']",54,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator']","['VariableRead', 'TypeReference', 'FieldRead', 'BinaryOperator', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator']",Partial Match,0.5,0.75,0.5,0.6,3,1,3
31,public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String name = VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( name == null ) { return STRING_1 ; } return name ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",56,"['Delete LocalVariable', 'Delete FieldRead', 'Delete If', 'Delete Literal', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'FieldRead', 'If', 'Literal', 'Return']",GPT Missed Nodes,0.5,1.0,0.45454545454545453,0.625,5,0,6
32,protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; TYPE_1 p = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( INT_1 ) ; int i = 0 ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable']",57,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeReference', 'Literal', 'LocalVariable']","['TypeReference', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'Invocation', 'Literal', 'LocalVariable', 'Literal']",Exact Match,1.0,0.8888888888888888,0.8888888888888888,0.8888888888888888,8,1,1
33,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , getActivity ( ) . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_2 , new TYPE_2 ( ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_4 ( getActivity ( ) , new TYPE_2 ( ) ) ; }","['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Move ConstructorCall', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",58,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead']","['Invocation', 'Invocation', 'TypeAccess', 'ConstructorCall', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation', 'FieldRead']",Partial Match,0.5714285714285714,0.7142857142857143,0.45454545454545453,0.5555555555555556,5,2,6
34,"public void METHOD_1 ( android.view.View view ) { android.content.Context c = METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( c , STRING_1 , VAR_1 ) . show ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_4 ( intent ) ; }","['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",60,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'Literal', 'VariableRead', 'Invocation']",GPT Hallucinated Nodes,0.8333333333333334,0.75,0.6666666666666666,0.7058823529411765,6,2,3
35,public double METHOD_1 ( ) { java.lang.Double TYPE_1 = ( METHOD_2 ( ) ) / ( METHOD_3 ( ) ) ; if ( ( TYPE_1 . METHOD_4 ( ) ) || ( TYPE_1 == 0 ) ) return VAR_1 ; return TYPE_1 ; },public double METHOD_1 ( ) { return ( METHOD_2 ( ) ) / ( METHOD_3 ( ) ) ; },"['Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",61,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete Return']","['BinaryOperator', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead', 'Literal', 'BinaryOperator', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'FieldRead', 'BinaryOperator', 'FieldRead', 'Literal', 'Return']",GPT Missed Nodes,0.6,0.8571428571428571,0.42857142857142855,0.5714285714285714,6,1,8
36,private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( METHOD_2 ( VAR_1 ) ) ; return VAR_2 ; },private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Return']",63,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['TypeReference', 'VariableRead', 'Invocation', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Return']","['LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7142857142857143,0.8333333333333333,5,0,2
37,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_3 . get ( INT_1 ) ) ) ; int VAR_4 = VAR_5 . field ( VAR_6 ) ; assertEquals ( INT_2 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_3 . get ( INT_1 ) ) ) ; assertEquals ( INT_2 , VAR_5 . field ( VAR_6 ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",66,"['Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
38,public void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; METHOD_4 ( VAR_3 . handle ( ) ) ; METHOD_5 ( ) ; },"public void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , out ) ; VAR_3 . handle ( ) ; METHOD_5 ( ) ; }","['Move Invocation', 'Update ConstructorCall', 'Insert FieldRead', 'Delete Invocation']",67,"['Insert VariableRead', 'Insert Parameter', 'Delete Invocation', 'Update ConstructorCall']","['Invocation', 'ConstructorCall', 'FieldRead', 'Invocation']","['VariableRead', 'Parameter', 'Invocation', 'ConstructorCall']",Partial Match,0.4,0.5,0.5,0.5,2,2,2
39,"public int METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; int x = VAR_2 . delete ( VAR_3 , STRING_1 , null ) ; VAR_1 . METHOD_3 ( ) ; return x ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , null , null ) ; VAR_1 . METHOD_3 ( ) ; }","['Update TypeReference', 'Move Invocation', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Return']",68,"['Update Wra', 'Delete TypeReference', 'Delete LocalVariable', 'Delete Literal', 'Delete VariableRead', 'Delete Return']","['TypeReference', 'Invocation', 'Literal', 'TypeAccess', 'TypeReference', 'LocalVariable', 'VariableRead', 'Return']","['Wra', 'TypeReference', 'LocalVariable', 'Literal', 'VariableRead', 'Return']",Partial Match,0.625,0.6666666666666666,0.5,0.5714285714285715,4,2,4
40,"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 event = TYPE_2 . METHOD_2 ( ) ; event . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_4 ( event , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_4 ( null , VAR_1 ) ; }","['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",69,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'Literal', 'Literal', 'Invocation', 'Literal']",GPT Missed Nodes,0.6666666666666666,0.7142857142857143,0.5,0.588235294117647,5,2,5
41,public void METHOD_1 ( ) { boolean p = METHOD_2 ( ) ; if ( p ) METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",70,"['Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
42,public void METHOD_1 ( ) { double VAR_1 = 0 ; if ( VAR_1 < ( INT_1 * ( VAR_2 ) ) ) { VAR_3 = true ; } else { VAR_3 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( INT_1 * ( VAR_2 ) ) ) { VAR_3 = true ; } else { VAR_3 = false ; } },"['Insert FieldRead', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete VariableRead']",71,"['Delete LocalVariable', 'Delete Literal']","['FieldRead', 'TypeReference', 'Literal', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Literal']",GPT Missed Nodes,0.4,1.0,0.4,0.5714285714285715,2,0,3
43,"private void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Date date = new java.util.Date ( ) ; TYPE_2 item = new TYPE_2 ( ( - 1 ) , STRING_1 , false , date ) ; METHOD_2 ( item ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 item = new TYPE_2 ( ( - 1 ) , STRING_1 , false , new java.util.Date ( ) ) ; METHOD_2 ( item ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",72,"['Delete LocalVariable', 'Insert ConstructorCall']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'ConstructorCall']",GPT Missed Nodes,0.5,0.5,0.25,0.3333333333333333,1,1,3
44,public void METHOD_1 ( ) { java.lang.Long VAR_1 = 0L ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Literal', 'Delete LocalVariable']",73,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Literal']","['TypeReference', 'Literal', 'LocalVariable']","['LocalVariable', 'TypeReference', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
45,"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 , int VAR_3 ) { TYPE_3 path = new TYPE_3 ( VAR_4 , VAR_1 , VAR_2 , true ) . METHOD_2 ( ) ; METHOD_3 ( path , VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 , int VAR_3 ) { METHOD_3 ( new TYPE_3 ( VAR_4 , VAR_1 , VAR_2 , true ) , VAR_3 ) ; }","['Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",74,"['Delete LocalVariable', 'Delete Invocation']","['Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.2857142857142857,0.4444444444444445,2,0,5
46,"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.lang.Exception { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_2 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.lang.Exception { TYPE_3 . METHOD_3 ( ) ; return true ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",78,"['Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'FieldRead', 'Invocation']",Partial Match,0.6,0.75,0.6,0.6666666666666665,3,1,2
47,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_3 ( VAR_1 , METHOD_2 ( ) , VAR_4 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",80,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'VariableRead', 'VariableRead', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeReference', 'Literal', 'Assignment', 'Invocation', 'VariableRead', 'Invocation']",Partial Match,0.5714285714285714,0.5714285714285714,0.4444444444444444,0.5,4,3,5
48,public static java.io.File METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { java.lang.String path = ( TYPE_1 . METHOD_2 ( ) ) + fileName ; java.io.File VAR_1 = new java.io.File ( path ) ; VAR_1 . METHOD_1 ( ) ; return VAR_1 ; },public static java.io.File METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { java.io.File VAR_1 = new java.io.File ( ( ( TYPE_1 . METHOD_2 ( ) ) + fileName ) ) ; VAR_1 . METHOD_1 ( ) ; return VAR_1 ; },"['Update LocalVariable', 'Move TypeReference', 'Insert ConstructorCall', 'Move BinaryOperator', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable']",82,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Assignment', 'Delete BinaryOperator', 'Delete VariableRead']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'BinaryOperator', 'TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable']","['LocalVariable', 'TypeReference', 'Assignment', 'BinaryOperator', 'VariableRead']",Partial Match,0.6666666666666666,0.6,0.375,0.4615384615384615,3,2,5
49,"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 . main ) ; METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 . main ) ; android.content.Intent intent = getIntent ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_3 class ) ) ; METHOD_4 ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Insert Invocation']",84,"['Insert LocalVariable', 'Insert TypeReference', 'Insert TypeReference', 'Insert VariableRead', 'Insert Invocation']","['LocalVariable', 'TypeReference', 'Invocation']","['LocalVariable', 'TypeReference', 'TypeReference', 'VariableRead', 'Invocation']",GPT Hallucinated Nodes,0.75,0.6,1.0,0.7499999999999999,3,2,0
50,"protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 VAR_3 = VAR_4 . get ( 0 ) . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_3 , VAR_2 ) ; }","protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_4 ( VAR_4 . get ( 0 ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) , VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",91,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']",Exact Match,1.0,0.75,0.6,0.6666666666666665,3,1,2
51,public void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; METHOD_2 ( ) ; METHOD_3 ( intent ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( getIntent ( ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",92,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
52,"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_3 . getText ( ) ) ; VAR_3 . setText ( STRING_1 ) ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",93,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'Literal']",Partial Match,0.42857142857142855,0.6,0.46153846153846156,0.5217391304347826,6,4,7
53,public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = TYPE_3 . METHOD_1 ( STRING_1 ) ; TYPE_4 . METHOD_2 ( ) . start ( ) ; TYPE_5 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . execute ( STRING_2 ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = TYPE_3 . METHOD_1 ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",94,"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']","['TypeAccess', 'Invocation', 'Invocation', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'Invocation', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.7,0.8235294117647058,7,0,3
54,"public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_2 . show ( METHOD_3 ( ) , STRING_1 ) ; }",public void METHOD_1 ( android.view.View view ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",97,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation', 'Invocation', 'Literal']",Partial Match,0.5,0.7142857142857143,0.625,0.6666666666666666,5,2,3
55,"public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = METHOD_2 ( null , null ) ; java.io.File VAR_2 = new java.io.File ( new java.io.File ( VAR_3 , VAR_1 ) , STRING_1 ) ; VAR_4 . assertTrue ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = METHOD_2 ( null ) ; java.io.File VAR_2 = new java.io.File ( new java.io.File ( VAR_3 , VAR_1 ) , STRING_1 ) ; VAR_4 . assertTrue ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; }",['Delete Literal'],98,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
56,protected java.lang.Object METHOD_1 ( TYPE_1 < ? > message ) { java.lang.Object VAR_1 = message . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_2 ) { return null ; } else { return VAR_1 ; } },protected java.lang.Object METHOD_1 ( TYPE_1 < ? > message ) { return message . METHOD_2 ( ) ; },"['Insert Return', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",100,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete If', 'Delete Return', 'Delete Literal', 'Delete Return']","['Return', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'BinaryOperator', 'Literal', 'Return', 'Block', 'VariableRead', 'Return', 'Block', 'If']","['LocalVariable', 'VariableRead', 'Invocation', 'If', 'Return', 'Literal', 'Return']",GPT Missed Nodes,0.6,0.8571428571428571,0.42857142857142855,0.5714285714285714,6,1,8
57,public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 VAR_1 = TYPE_3 . METHOD_1 ( ) ; TYPE_4 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( ) ; java.lang.Thread . METHOD_4 ( ) . METHOD_5 ( ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_3 . METHOD_1 ( ) ; java.lang.Thread . METHOD_4 ( ) . METHOD_5 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",104,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'Literal', 'Invocation']",Partial Match,0.6666666666666666,0.8571428571428571,0.75,0.7999999999999999,6,1,2
58,public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_3 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable']",107,"['Delete TypeReference', 'Delete LocalVariable']","['Invocation', 'TypeReference', 'LocalVariable']","['TypeReference', 'LocalVariable']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
59,public java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; return VAR_1 . METHOD_2 ( ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = new TYPE_2 ( ) ; return VAR_1 . METHOD_2 ( ) ; },['Delete ConstructorCall'],108,"['Delete ConstructorCall', 'Delete TypeReference']",['ConstructorCall'],"['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,1.0,0.6666666666666666,1,1,0
60,public static java.lang.String METHOD_1 ( int x ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; java.lang.String VAR_3 = STRING_3 ; java.lang.String VAR_4 = VAR_1 + VAR_2 ; return VAR_3 ; },public static java.lang.String METHOD_1 ( int x ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; java.lang.String VAR_3 = VAR_1 + VAR_2 ; if ( x > 1 ) { return VAR_1 ; } else { return VAR_2 ; } },"['Update LocalVariable', 'Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert Return', 'Insert VariableRead', 'Insert VariableRead', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Return']",110,"['Update Assignment', 'Delete LocalVariable', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Insert If', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert Literal', 'Insert Return', 'Insert VariableRead', 'Insert Return', 'Insert VariableRead', 'Delete Return', 'Delete VariableRead']","['LocalVariable', 'If', 'BinaryOperator', 'Block', 'Block', 'VariableRead', 'Literal', 'Return', 'Return', 'VariableRead', 'VariableRead', 'TypeReference', 'FieldRead', 'LocalVariable', 'VariableRead', 'Return']","['Assignment', 'LocalVariable', 'BinaryOperator', 'VariableRead', 'Literal', 'If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return', 'VariableRead', 'Return', 'VariableRead', 'Return', 'VariableRead']",Partial Match,0.6,0.7333333333333333,0.6875,0.7096774193548386,11,4,5
61,public static java.lang.String METHOD_1 ( final java.util.Date date ) { TYPE_1 VAR_1 = VAR_2 . get ( ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; return VAR_4 . format ( date ) ; },public static java.lang.String METHOD_1 ( final java.util.Date date ) { return VAR_2 . get ( ) . format ( date ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess']",111,"['Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeAccess']","['TypeReference', 'VariableRead', 'Assignment', 'Invocation', 'FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.42857142857142855,0.42857142857142855,0.42857142857142855,0.42857142857142855,3,4,4
62,public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( 1 ) ; METHOD_3 ( VAR_2 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( VAR_3 . METHOD_2 ( 1 ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",112,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete Literal', 'Delete If', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'FieldRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeReference', 'Invocation', 'Literal', 'If', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.6,0.8571428571428571,0.5,0.631578947368421,6,1,6
63,"private static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 ) { java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_1 , STRING_1 ) . METHOD_2 ( STRING_2 ) ; return VAR_2 . METHOD_3 ( ) ? VAR_2 . METHOD_4 ( ) : STRING_3 ; }",private static java.lang.String METHOD_1 ( java.io.InputStream VAR_1 ) { java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_1 ) ; return VAR_2 . METHOD_3 ( ) ? VAR_2 . METHOD_4 ( ) : STRING_3 ; },"['Update ConstructorCall', 'Move ConstructorCall', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",113,"['Delete Literal', 'Delete Literal', 'Delete Invocation']","['ConstructorCall', 'ConstructorCall', 'FieldRead', 'TypeAccess', 'Invocation']","['Literal', 'Literal', 'Invocation']",Partial Match,0.2,0.3333333333333333,0.2,0.25,1,2,4
64,"public double METHOD_1 ( double x , double y , double VAR_1 ) { return y - ( VAR_1 * x ) ; }","public double METHOD_1 ( double x , double y , double VAR_1 ) { double c = y - ( VAR_1 * x ) ; return c ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead']",114,"['Insert LocalVariable', 'Insert VariableRead', 'Insert Return']","['LocalVariable', 'TypeReference', 'BinaryOperator', 'VariableRead']","['LocalVariable', 'VariableRead', 'Return']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
65,"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { }","['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",117,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.8,1.0,0.888888888888889,4,1,0
66,public void METHOD_1 ( TYPE_1 event ) { if ( ( ! ( VAR_1 ) ) && ( ! ( VAR_2 ) ) ) { TYPE_2 VAR_3 = new TYPE_2 ( event . METHOD_2 ( ) ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 event ) { if ( ( ! ( VAR_1 ) ) && ( ! ( VAR_2 ) ) ) VAR_4 . METHOD_3 ( new TYPE_2 ( ) ) ; },"['Insert ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead']",119,"['Delete Block', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead']","['ConstructorCall', 'TypeReference', 'VariableRead', 'Invocation', 'ConstructorCall', 'LocalVariable', 'VariableRead']","['Block', 'LocalVariable', 'VariableRead', 'Invocation', 'FieldRead']",Partial Match,0.42857142857142855,0.6,0.42857142857142855,0.5,3,2,4
67,"public int METHOD_1 ( int VAR_1 , int VAR_2 ) { int VAR_3 = java.lang.Integer . METHOD_2 ( VAR_4 [ VAR_1 ] [ VAR_2 ] . substring ( INT_1 , INT_2 ) ) ; return VAR_3 ; }","public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = VAR_4 [ VAR_1 ] [ VAR_2 ] . substring ( INT_1 , INT_2 ) ; return VAR_3 ; }","['Update TypeReference', 'Update TypeReference', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",121,"['Update TypeReference', 'Update TypeReference', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.8,0.888888888888889,4,0,1
68,public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { boolean state = VAR_6 . METHOD_3 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( VAR_5 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation']",123,"['Insert LocalVariable', 'Move Invocation']","['LocalVariable', 'TypeReference', 'Invocation']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
69,"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_2 , STRING_1 , false ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . start ( ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_3 . start ( ) ; },"['Insert LocalVariable', 'Move TypeReference', 'Insert ConstructorCall', 'Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",125,"['Update TypeReference', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Assignment', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'FieldRead', 'FieldRead', 'FieldRead', 'Literal', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['TypeReference', 'ConstructorCall', 'Literal', 'Literal', 'Literal', 'Literal', 'Assignment', 'TypeReference', 'ConstructorCall', 'Assignment', 'Invocation', 'VariableRead']",Partial Match,0.625,0.5,0.375,0.42857142857142855,6,6,10
70,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; TYPE_2 c = new TYPE_2 ( VAR_1 ) ; c . METHOD_3 ( INT_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",126,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation', 'Literal']",Partial Match,0.7142857142857143,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
71,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( 0 , VAR_2 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; int start = VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_3 ( 0 , start ) ; }","['Update LocalVariable', 'Update TypeReference', 'Update Invocation', 'Insert VariableRead', 'Delete VariableRead', 'Delete Invocation']",128,"['Insert LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Update VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'TypeReference', 'Invocation', 'VariableRead']",Exact Match,1.0,0.16666666666666666,0.16666666666666666,0.16666666666666666,1,5,5
72,public int getInt ( java.lang.String name ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( this . get ( name ) ) ) ; return ( ( int ) ( VAR_2 . intValue ( ) ) ) ; },public int getInt ( java.lang.String name ) { return ( ( int ) ( this . get ( name ) ) ) ; },"['Move Invocation', 'Move TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation']",129,"['Delete TypeReference', 'Delete Assignment', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation']","['TypeReference', 'Assignment', 'TypeReference', 'ThisAccess', 'Invocation', 'VariableRead', 'Invocation']",Partial Match,0.2857142857142857,0.42857142857142855,0.42857142857142855,0.42857142857142855,3,4,4
73,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",130,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.5,0.6666666666666666,3,0,3
74,private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( false ) ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",131,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'ConstructorCall', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'ConstructorCall', 'Literal', 'Invocation', 'Invocation']",GPT Missed Nodes,0.7142857142857143,1.0,0.7,0.8235294117647058,7,0,3
75,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.String VAR_3 = VAR_4 . getText ( ) . toString ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) . setValue ( VAR_3 ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",134,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'VariableRead', 'LocalVariable', 'TypeReference', 'TypeAccess', 'FieldRead', 'Invocation', 'Invocation', 'Invocation', 'Invocation', 'Literal']",GPT Hallucinated Nodes,0.875,0.9230769230769231,0.8571428571428571,0.888888888888889,12,1,2
76,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , boolean VAR_3 ) { TYPE_1 result = super . METHOD_1 ( VAR_1 , VAR_2 , INT_1 , VAR_3 ) ; METHOD_2 ( ) ; return result ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , boolean VAR_3 ) { return super . METHOD_1 ( VAR_1 , VAR_2 , 1 , VAR_3 ) ; }","['Move Invocation', 'Insert Literal', 'Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead']",138,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Return', 'Delete TypeAccess', 'Delete Literal', 'Insert Literal']","['Invocation', 'Literal', 'TypeReference', 'LocalVariable', 'Invocation', 'TypeAccess', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead', 'Return', 'TypeAccess', 'Literal', 'Literal']",Partial Match,0.7142857142857143,0.7142857142857143,0.7142857142857143,0.7142857142857143,5,2,2
77,public long METHOD_1 ( ) { java.util.List < TYPE_1 > p = VAR_1 . values ( ) . iterator ( ) . METHOD_2 ( ) ; return VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) . VAR_3 ; },public long METHOD_1 ( ) { return VAR_1 . values ( ) . iterator ( ) . METHOD_2 ( ) . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) . VAR_3 ; },"['Move Invocation', 'Update TypeAccess', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess']",142,"['Delete LocalVariable', 'Insert Invocation', 'Insert FieldRead']","['Invocation', 'TypeAccess', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess']","['LocalVariable', 'Invocation', 'FieldRead']",Partial Match,0.4,0.3333333333333333,0.16666666666666666,0.2222222222222222,1,2,5
78,"private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String value ) throws java.lang.Exception { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . assertThat ( VAR_2 , TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( value ) ) ) ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String value ) throws java.lang.Exception { VAR_3 . assertThat ( VAR_1 . METHOD_2 ( ) , TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( value ) ) ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",145,['Delete LocalVariable'],"['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']",['LocalVariable'],GPT Missed Nodes,0.25,1.0,0.25,0.4,1,0,3
79,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = ( java.lang.String.format ( STRING_1 , ( ( VAR_4 . getValue ( ) ) * INT_1 ) ) ) + STRING_2 ; VAR_5 . setText ( VAR_3 ) ; }",public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = ( VAR_4 . getValue ( ) ) + STRING_2 ; VAR_5 . setText ( VAR_3 ) ; },"['Update BinaryOperator', 'Move BinaryOperator', 'Move FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator']",149,"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'FieldRead', 'FieldRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'BinaryOperator']","['TypeAccess', 'Invocation', 'Literal', 'BinaryOperator']",Partial Match,0.6,0.75,0.375,0.5,3,1,5
80,public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + ( VAR_2 ) ; if ( ( VAR_3 ) != null ) VAR_1 += ( STRING_2 + ( VAR_3 ) ) + STRING_3 ; return VAR_1 ; },public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 ; if ( ( VAR_3 ) != null ) VAR_1 += ( STRING_2 + ( VAR_3 ) ) + STRING_3 ; return VAR_1 ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",151,"['Delete Literal', 'Delete BinaryOperator']","['FieldRead', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
81,"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) . VAR_2 ; if ( VAR_2 == ( VAR_3 ) ) { METHOD_4 ( ) . METHOD_5 ( VAR_4 , VAR_1 ) ; return true ; } else return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( VAR_4 , VAR_1 ) ; return true ; }","['Move Invocation', 'Move Return', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",152,"['Delete LocalVariable', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Return']","['Invocation', 'Return', 'TypeReference', 'Invocation', 'Invocation', 'FieldRead', 'LocalVariable', 'VariableRead', 'FieldRead', 'BinaryOperator', 'Block', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'Invocation', 'Invocation', 'FieldRead', 'If', 'BinaryOperator', 'VariableRead', 'Literal', 'Invocation', 'Return']",GPT Missed Nodes,0.8,0.9,0.6,0.7200000000000001,9,1,6
82,"public boolean METHOD_1 ( final java.lang.String VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( ) ; TYPE_1 VAR_3 = METHOD_3 ( ) . METHOD_4 ( java.lang.String.format ( VAR_4 , VAR_2 ) , VAR_1 ) ; return VAR_3 . METHOD_5 ( ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( java.lang.String.format ( VAR_4 , VAR_2 ) , VAR_1 ) ; }","['Update TypeReference', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",154,"['Update TypeReference', 'Delete LocalVariable', 'Delete Return', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'Return']","['TypeReference', 'LocalVariable', 'Return', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.8,0.5714285714285714,0.6666666666666666,4,1,3
83,private void METHOD_1 ( TYPE_1 event ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 . step ( ) ; } },private void METHOD_1 ( TYPE_1 event ) { VAR_2 . step ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Block', 'Delete If']",155,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete If']","['Invocation', 'TypeReference', 'Invocation', 'LocalVariable', 'VariableRead', 'Block', 'If']","['LocalVariable', 'Invocation', 'VariableRead', 'If']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
84,protected void METHOD_1 ( java.lang.String result ) { boolean VAR_1 = VAR_2 . equals ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },protected void METHOD_1 ( java.lang.String result ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",156,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'FieldRead', 'Literal', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.2857142857142857,0.5,0.375,0.42857142857142855,3,3,5
85,"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String text = TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . getText ( ) ) ; if ( text != null ) VAR_2 . setText ( text ) ; temp = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . getText ( ) ) ) ; temp = null ; }","['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",157,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete TypeAccess']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'Literal', 'TypeAccess']",GPT Missed Nodes,0.6666666666666666,0.8333333333333334,0.4166666666666667,0.5555555555555556,5,1,7
86,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( INT_1 ) ) ; assertTrue ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; assertTrue ( VAR_1 . METHOD_2 ( ) ) ; },"['Update ConstructorCall', 'Move ConstructorCall', 'Delete ConstructorCall']",158,"['Delete ConstructorCall', 'Delete TypeReference']","['ConstructorCall', 'ConstructorCall', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",GPT Hallucinated Nodes,0.5,0.5,0.3333333333333333,0.4,1,1,2
87,"public int METHOD_1 ( ) { int VAR_1 = ( ( VAR_2 . METHOD_2 ( ) ) * INT_1 ) / ( VAR_2 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; return VAR_1 ; }",public int METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead']",160,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'Invocation', 'FieldRead', 'BinaryOperator', 'TypeAccess', 'Invocation', 'BinaryOperator', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation', 'VariableRead']","['LocalVariable', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation', 'BinaryOperator', 'FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'Literal', 'BinaryOperator', 'Return', 'Literal']",Partial Match,0.6666666666666666,0.625,0.5882352941176471,0.6060606060606061,10,6,7
88,"protected int METHOD_1 ( final android.content.Intent response ) { return response . METHOD_2 ( VAR_1 , VAR_2 ) ; }","protected int METHOD_1 ( final android.content.Intent response ) { int result = response . METHOD_2 ( VAR_1 , VAR_2 ) ; return result ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead']",164,"['Insert LocalVariable', 'Insert VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
89,public long METHOD_1 ( ) { java.util.Date VAR_1 = new java.util.Date ( ) ; return VAR_2 . getTime ( ) ; },public long METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']",166,"['Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Insert Literal']","['Literal', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'Invocation', 'FieldRead', 'Literal']",Partial Match,0.7142857142857143,0.7142857142857143,0.8333333333333334,0.7692307692307692,5,2,1
90,public TYPE_1 METHOD_1 ( ) { try { java.lang.String VAR_1 = METHOD_2 ( ) ; return new TYPE_1 ( VAR_1 ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } },public TYPE_1 METHOD_1 ( ) { try { return new TYPE_1 ( METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_2 ) { return null ; } },"['Update ConstructorCall', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",167,"['Delete LocalVariable', 'Move Invocation']","['ConstructorCall', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.4,1.0,0.4,0.5714285714285715,2,0,3
91,"public TYPE_1 METHOD_1 ( TYPE_2 key , TYPE_1 value ) { TYPE_1 VAR_1 = get ( key ) ; VAR_2 . put ( key , TYPE_3 . METHOD_2 ( value ) ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( TYPE_2 key , TYPE_1 value ) { VAR_2 . put ( key , TYPE_3 . METHOD_2 ( value ) ) ; return value ; }","['Update VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",168,"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Update VariableRead']","['VariableRead', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['TypeReference', 'Invocation', 'LocalVariable', 'VariableRead']",Exact Match,1.0,1.0,0.8,0.888888888888889,4,0,1
92,public static void main ( java.lang.String [ ] args ) { java.lang.String fileName = STRING_1 ; TYPE_1 VAR_1 = new TYPE_1 ( fileName ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; },"['Insert LocalVariable', 'Move TypeReference', 'Insert ConstructorCall', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable']",169,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Literal', 'Delete ConstructorCall']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'FieldRead', 'LocalVariable', 'VariableRead', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'Literal', 'ConstructorCall']",Partial Match,0.5,0.75,0.3333333333333333,0.46153846153846156,3,1,6
93,"protected boolean METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . info ( STRING_1 , VAR_1 ) ; return VAR_1 ; }",protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",170,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'VariableRead', 'Invocation', 'Literal', 'VariableRead']",Partial Match,0.5,0.8,0.5,0.6153846153846154,4,1,4
94,"public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; assertEquals ( STRING_2 , VAR_1 ) ; assertEquals ( INT_1 , VAR_3 . length ( ) ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; assertEquals ( STRING_2 , VAR_1 ) ; assertEquals ( INT_1 , VAR_3 . length ( ) ) ; }","['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",171,"['Delete TypeAccess', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation']",Exact Match,1.0,1.0,0.4,0.5714285714285715,2,0,3
95,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_4 . remove ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_4 . remove ( 0 ) ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",173,"['Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeReference', 'FieldRead', 'Invocation', 'VariableRead', 'Literal']",Partial Match,0.7142857142857143,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
96,"public void add ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; int position = TYPE_2 . METHOD_1 ( 0 , ( ( VAR_2 . size ( ) ) - 1 ) ) ; METHOD_2 ( position ) ; }","public void add ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; METHOD_2 ( TYPE_2 . METHOD_1 ( 0 , ( ( VAR_2 . size ( ) ) - 1 ) ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",176,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeReference', 'Literal', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
97,"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 data ) throws TYPE_4 { boolean VAR_2 = VAR_3 . getBoolean ( STRING_1 ) ; java.lang.String VAR_4 = VAR_3 . getString ( STRING_2 ) ; return new TYPE_5 ( METHOD_2 ( data ) , VAR_2 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 data ) throws TYPE_4 { return new TYPE_5 ( METHOD_2 ( data ) ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",179,"['Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'Invocation', 'TypeAccess', 'Literal', 'LocalVariable', 'Invocation', 'TypeAccess', 'Literal', 'VariableRead', 'VariableRead']",Partial Match,0.6666666666666666,0.8,0.6666666666666666,0.7272727272727272,8,2,4
98,"public void METHOD_1 ( TYPE_1 src ) { boolean remove = this . VAR_1 . remove ( src ) ; TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; }",public void METHOD_1 ( TYPE_1 src ) { this . VAR_1 . remove ( src ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",181,"['Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Invocation']","['LocalVariable', 'ThisAccess', 'FieldRead', 'Invocation', 'TypeAccess', 'VariableRead', 'Literal', 'FieldRead', 'Invocation']",Partial Match,0.4444444444444444,0.5555555555555556,0.5,0.5263157894736842,5,4,5
99,"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String message = ( STRING_1 + VAR_1 ) + STRING_2 ; TYPE_1 response = new TYPE_1 ( message , message ) ; return response ; }",public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String message = ( STRING_1 + VAR_1 ) + STRING_2 ; return message ; },"['Update TypeReference', 'Move VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead']",182,"['Update TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead']","['TypeReference', 'VariableRead', 'TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'VariableRead']",Exact Match,1.0,1.0,0.5714285714285714,0.7272727272727273,4,0,3
100,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.io.File VAR_2 = new TYPE_1 ( VAR_1 ) . METHOD_2 ( ) ; VAR_3 . assertEquals ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.io.File VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 . assertEquals ( STRING_2 , VAR_2 . METHOD_3 ( ) ) ; }","['Insert TypeAccess', 'Move VariableRead', 'Delete ConstructorCall']",186,"['Delete ConstructorCall', 'Delete VariableRead', 'Insert TypeAccess', 'Insert VariableRead']","['TypeAccess', 'VariableRead', 'ConstructorCall']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'VariableRead']",Exact Match,1.0,0.5,0.6666666666666666,0.5714285714285715,2,2,1
101,"private static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) ; TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_4 ) , VAR_1 ) ; VAR_5 . info ( STRING_1 , VAR_4 ) ; }","private static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_4 ) , VAR_1 ) ; VAR_5 . info ( STRING_1 , VAR_4 ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",188,"['Delete Invocation', 'Delete TypeReference']","['Invocation', 'TypeAccess', 'Invocation']","['Invocation', 'TypeReference']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
102,"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 , VAR_3 class ) ; METHOD_2 ( VAR_1 ) ; }",public void METHOD_1 ( android.view.View view ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",190,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'LocalVariable', 'ConstructorCall', 'VariableRead', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.7142857142857143,0.7142857142857143,0.7142857142857143,5,2,2
103,"public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . query ( STRING_1 , VAR_4 , VAR_1 ) ; return VAR_2 ; }","public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { return VAR_3 . query ( STRING_1 , VAR_4 , VAR_1 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",191,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.8,0.888888888888889,4,0,1
104,"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { java.lang.String date = METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; METHOD_4 ( date ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { java.lang.String date = TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_4 ( date ) ; }","['Move Invocation', 'Delete Invocation']",192,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
105,public java.lang.String METHOD_1 ( ) { byte [ ] VAR_1 = new byte [ INT_1 ] ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_3 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; return VAR_3 ; },public java.lang.String METHOD_1 ( ) { byte [ ] VAR_1 = new byte [ INT_1 ] ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_3 = new java.lang.String ( VAR_1 ) ; return VAR_3 ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",195,"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['TypeAccess', 'Invocation', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.8,0.888888888888889,4,0,1
106,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; android.widget.Button VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 . setText ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",196,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'LocalVariable', 'FieldRead', 'Invocation']",Partial Match,0.5,0.7142857142857143,0.625,0.6666666666666666,5,2,3
107,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) . METHOD_6 ( VAR_5 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",197,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'TypeReference', 'Assignment', 'Invocation', 'Invocation']",Partial Match,0.5,0.75,0.6,0.6666666666666665,6,2,4
108,"private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; intent . METHOD_3 ( VAR_2 ) ; METHOD_4 ( intent , VAR_5 ) ; }","private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_4 ( intent , VAR_5 ) ; }","['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",199,"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'FieldRead', 'FieldRead', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation', 'Invocation']",Partial Match,0.7142857142857143,0.7,0.7,0.7,7,3,3
109,"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 . METHOD_2 ( VAR_2 ) ) != ( - 1 ) ) { VAR_4 . remove ( VAR_1 ) ; VAR_4 . add ( VAR_3 . METHOD_2 ( VAR_2 ) , VAR_1 ) ; } }","void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_4 . remove ( VAR_1 ) ; int index = VAR_3 . METHOD_2 ( VAR_2 ) ; if ( index != ( - 1 ) ) VAR_4 . add ( index , VAR_1 ) ; }","['Move Invocation', 'Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Insert VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",201,"['Delete If', 'Insert LocalVariable', 'Insert VariableRead', 'Insert Assignment', 'Insert Literal', 'Insert BinaryOperator']","['Invocation', 'LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation']","['If', 'LocalVariable', 'VariableRead', 'Assignment', 'Literal', 'BinaryOperator']",Partial Match,0.2222222222222222,0.3333333333333333,0.2222222222222222,0.26666666666666666,2,4,7
110,public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_1 ( ) ; if ( VAR_3 . equals ( STRING_1 ) ) { return STRING_2 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",202,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'FieldRead', 'Invocation', 'If', 'Return']",GPT Missed Nodes,0.5555555555555556,1.0,0.45454545454545453,0.625,5,0,6
111,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",203,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'Assignment', 'Invocation', 'Literal']",Partial Match,0.42857142857142855,0.7142857142857143,0.625,0.6666666666666666,5,2,3
112,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { java.lang.String VAR_4 = STRING_1 ; java.lang.String VAR_5 = STRING_2 ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { java.lang.String VAR_4 = STRING_2 ; VAR_1 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_1 ) ; }","['Update LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",204,"['Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete Invocation']","['LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'Invocation']",Partial Match,0.3333333333333333,0.4,0.2857142857142857,0.3333333333333333,2,3,5
113,"public TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( new TYPE_2 ( STRING_2 , new TYPE_2 ( STRING_3 , INT_1 ) ) ) ; return VAR_1 ; }",public TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; return VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall']",205,['Delete ConstructorCall'],"['FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.2,0.33333333333333337,1,0,4
114,public static void main ( java.lang.String [ ] args ) { TYPE_1 c = new TYPE_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable']",207,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall']","['TypeReference', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
115,public TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 n = VAR_1 . METHOD_1 ( id ) ; return n ; },public TYPE_1 METHOD_1 ( java.lang.String id ) { return VAR_1 . METHOD_1 ( id ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",208,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead', 'Return']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
116,public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; },public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable']",210,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'TypeReference', 'Literal']",Partial Match,0.6,0.6,0.75,0.6666666666666665,3,2,1
117,"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( VAR_2 ) ; METHOD_3 ( VAR_1 , response ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_3 ( VAR_1 , response ) ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",212,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'FieldRead', 'TypeAccess', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.8571428571428571,0.6666666666666666,0.75,6,1,3
118,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_2 = METHOD_2 ( ) ; VAR_3 . assertEquals ( FLOAT_1 , VAR_1 . METHOD_3 ( VAR_4 , TYPE_4 . METHOD_4 ( VAR_2 ) ) ) ; }",public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",213,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete FieldRead', 'Delete Literal']","['TypeReference', 'ConstructorCall', 'ConstructorCall', 'LocalVariable', 'TypeReference', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'TypeReference', 'Invocation', 'FieldRead', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeReference', 'Invocation', 'VariableRead', 'FieldRead', 'Literal']",GPT Hallucinated Nodes,0.75,0.7058823529411765,0.75,0.7272727272727272,12,5,4
119,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = STRING_1 + ( VAR_3 . toString ( ) ) ; return new TYPE_1 ( VAR_1 , null , VAR_2 , TYPE_3 . METHOD_2 ( ) . toString ( ) ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , null , null , null ) ; }","['Insert Literal', 'Insert Literal', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",215,"['Delete LocalVariable', 'Delete BinaryOperator', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Insert Literal', 'Insert Literal', 'Insert Literal']","['Literal', 'Literal', 'TypeReference', 'FieldRead', 'TypeAccess', 'Invocation', 'BinaryOperator', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation']","['LocalVariable', 'BinaryOperator', 'Literal', 'FieldRead', 'Invocation', 'ConstructorCall', 'Literal', 'Literal', 'Literal']",Partial Match,0.5555555555555556,0.6666666666666666,0.5,0.5714285714285715,6,3,6
120,"public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) ; int VAR_3 = VAR_4 . compareTo ( VAR_1 ) ; return VAR_3 <= 0 ; }","public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) ; return ( VAR_4 . compareTo ( VAR_1 ) ) >= 0 ; }","['Update BinaryOperator', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",216,"['Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Insert BinaryOperator']","['BinaryOperator', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead', 'BinaryOperator', 'BinaryOperator']",GPT Missed Nodes,0.6,0.5,0.4,0.4444444444444445,2,2,3
121,TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) throws TYPE_2 { TYPE_1 VAR_2 = this . VAR_3 . METHOD_2 ( VAR_1 ) . get ( ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_2 ) ) ; return VAR_2 ; },TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) throws TYPE_2 { return this . VAR_3 . METHOD_2 ( VAR_1 ) . get ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']",217,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'VariableRead']","['LocalVariable', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'Invocation', 'VariableRead', 'Invocation', 'Return']",Partial Match,0.42857142857142855,0.4444444444444444,0.4444444444444444,0.4444444444444444,4,5,5
122,"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; int rows = VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; java.lang.System.out.println ( ( STRING_2 + rows ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",218,"['Delete TypeReference', 'Delete Wra', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation']","['TypeReference', 'Wra', 'Literal', 'BinaryOperator', 'VariableRead', 'LocalVariable', 'TypeAccess', 'FieldRead', 'Invocation']",GPT Hallucinated Nodes,0.7777777777777778,0.7777777777777778,0.7777777777777778,0.7777777777777778,7,2,2
123,"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String message ) { java.lang.System.out.println ( ( ( ( STRING_1 + message ) + STRING_2 ) + VAR_4 ) ) ; int VAR_5 = VAR_2 . METHOD_2 ( STRING_3 ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String message ) { java.lang.System.out.println ( ( ( ( STRING_1 + message ) + STRING_2 ) + VAR_4 ) ) ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable']",220,"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete LocalVariable']","['TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'LocalVariable']","['TypeReference', 'VariableRead', 'Invocation', 'Literal', 'LocalVariable']",Partial Match,0.6666666666666666,0.8,0.8,0.8000000000000002,4,1,1
124,public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 file = VAR_1 . METHOD_2 ( ) ; return ( file . METHOD_3 ( ) ) && ( VAR_2 . toString ( ) . METHOD_4 ( STRING_1 ) ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { return VAR_1 . METHOD_2 ( ) . toString ( ) . METHOD_4 ( STRING_1 ) ; },"['Insert Invocation', 'Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator']",221,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead']","['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'BinaryOperator']","['LocalVariable', 'VariableRead', 'Invocation', 'BinaryOperator', 'FieldRead']",Partial Match,0.5714285714285714,0.8,0.3333333333333333,0.47058823529411764,4,1,8
125,public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; java.io.File file = new java.io.File ( VAR_2 ) ; VAR_3 . delete ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']",222,"['Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete Invocation']","['TypeAccess', 'Invocation', 'TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation']","['Invocation', 'ConstructorCall', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,4,0,4
126,"public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { return METHOD_3 ( VAR_3 ) ; } return null ; }","public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { return METHOD_3 ( VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ) ; }","['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",223,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'If', 'Literal']","['LocalVariable', 'Assignment', 'If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",Partial Match,0.6,0.8571428571428571,0.46153846153846156,0.6,6,1,7
127,public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_3 . METHOD_4 ( ) ; } },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",224,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']","['TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.7142857142857143,0.625,0.6666666666666666,5,2,3
128,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; assertEquals ( FLOAT_1 , VAR_4 . METHOD_3 ( VAR_2 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; assertEquals ( FLOAT_1 , VAR_4 . METHOD_3 ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",225,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Insert Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'TypeReference', 'Invocation', 'Invocation']",GPT Missed Nodes,0.75,0.4,0.5,0.4444444444444445,2,3,2
129,public TYPE_1 METHOD_1 ( ) { long VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != 0 ) { return VAR_3 . METHOD_3 ( VAR_1 ) ; } return null ; },public TYPE_1 METHOD_1 ( ) { return VAR_3 . METHOD_3 ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ; },"['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",227,"['Delete LocalVariable', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete If', 'Delete Return', 'Move TypeAccess', 'Move Invocation', 'Move VariableRead']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'If', 'Literal']","['LocalVariable', 'FieldRead', 'BinaryOperator', 'Literal', 'If', 'Return', 'TypeAccess', 'Invocation', 'VariableRead']",Partial Match,0.7272727272727273,0.7777777777777778,0.5,0.6086956521739131,7,2,7
130,public synchronized java.util.Set < TYPE_1 > get ( TYPE_2 key ) { java.util.Set < TYPE_1 > VAR_1 = VAR_2 . get ( key ) ; if ( VAR_1 == null ) return VAR_3 ; return VAR_1 ; },public synchronized java.util.Set < TYPE_1 > get ( TYPE_2 key ) { return VAR_2 . get ( key ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",228,"['Delete LocalVariable', 'Delete VariableRead', 'Delete If', 'Delete Literal', 'Delete Return']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'VariableRead', 'If', 'Literal', 'Return']",GPT Missed Nodes,0.5,1.0,0.4166666666666667,0.5882352941176471,5,0,7
131,private boolean METHOD_1 ( TYPE_1 node ) { java.lang.String state = node . METHOD_2 ( STRING_1 ) . toString ( ) ; java.lang.String target = VAR_1 . toString ( ) ; return VAR_2 . equals ( target ) ; },private boolean METHOD_1 ( TYPE_1 node ) { java.lang.String state = node . METHOD_2 ( STRING_1 ) ; java.lang.String target = VAR_1 . toString ( ) ; return VAR_2 . equals ( target ) ; },"['Move Invocation', 'Delete Invocation']",230,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
132,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_3 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",233,"['Delete FieldRead', 'Delete Invocation']","['VariableRead', 'TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.25,0.5,0.3333333333333333,0.4,1,1,2
133,public boolean contains ( TYPE_1 item ) { TYPE_2 VAR_1 = METHOD_1 ( ) ; if ( VAR_1 == null ) return false ; return VAR_2 . contains ( item ) ; },public boolean contains ( TYPE_1 item ) { return METHOD_1 ( ) . contains ( item ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete TypeAccess']",234,"['Delete LocalVariable', 'Delete VariableRead', 'Delete If', 'Delete Literal', 'Delete Return', 'Delete FieldRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If', 'TypeAccess']","['LocalVariable', 'VariableRead', 'If', 'Literal', 'Return', 'FieldRead']",Partial Match,0.45454545454545453,0.8333333333333334,0.45454545454545453,0.5882352941176471,5,1,6
134,public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_1 ) ) ; return ( ( java.util.List < TYPE_1 > ) ( VAR_2 . list ( ) ) ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation']",235,"['Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']","['Literal', 'TypeReference', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'TypeReference', 'TypeReference', 'TypeAccess', 'Invocation']","['LocalVariable', 'Invocation', 'TypeAccess', 'Invocation', 'Literal', 'TypeAccess', 'TypeReference', 'TypeReference', 'TypeReference', 'VariableRead', 'Invocation']",Exact Match,1.0,0.9090909090909091,0.7692307692307693,0.8333333333333333,10,1,3
135,"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = ( VAR_1 + STRING_1 ) + VAR_2 ; java.lang.System.out.println ( result ) ; return TYPE_1 . METHOD_2 ( result ) ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ( VAR_1 + STRING_1 ) + VAR_2 ; }","['Update TypeReference', 'Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",236,"['Update TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Return', 'Insert Return']","['TypeReference', 'BinaryOperator', 'TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'Invocation', 'Return', 'Return']",Partial Match,0.625,0.7142857142857143,0.45454545454545453,0.5555555555555556,5,2,6
136,"public static java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . replaceAll ( STRING_2 , STRING_3 ) ; return VAR_3 ; }","public static java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . toLowerCase ( ) . replaceAll ( STRING_2 , STRING_3 ) ; return VAR_3 ; }","['Insert Invocation', 'Move Invocation']",237,['Insert Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
137,"protected static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = TYPE_4 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_4 . add ( VAR_3 ) ; return VAR_3 ; }","protected static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { return TYPE_4 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",239,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.6,1.0,0.42857142857142855,0.6,3,0,4
138,public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = build . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 == null ) { return VAR_2 ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return build . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",241,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Assignment', 'If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return']",Partial Match,0.5454545454545454,0.8571428571428571,0.5454545454545454,0.6666666666666665,6,1,5
139,"public void METHOD_1 ( ) { final float VAR_1 = ( ( ( float ) ( VAR_2 . getInt ( VAR_3 , INT_1 ) ) ) / INT_2 ) * ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_6 . start ( ) ; }","public void METHOD_1 ( ) { final float VAR_1 = ( ( float ) ( VAR_2 . getInt ( VAR_3 , INT_1 ) ) ) / INT_2 ; VAR_5 . METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_6 . start ( ) ; }","['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",242,"['Delete BinaryOperator', 'Delete VariableRead']","['BinaryOperator', 'FieldRead', 'BinaryOperator']","['BinaryOperator', 'VariableRead']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
140,public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . assertTrue ( ( ( VAR_1 . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( ) . size ( ) ) == INT_1 ) ) ; },public void METHOD_1 ( ) { METHOD_3 ( METHOD_2 ( STRING_1 ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",243,"['Delete TypeReference', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation', 'Literal', 'Invocation', 'Invocation', 'Invocation', 'FieldRead', 'BinaryOperator', 'Invocation']","['TypeReference', 'Assignment', 'VariableRead', 'Invocation', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'BinaryOperator']",Partial Match,0.6666666666666666,0.6666666666666666,0.625,0.6451612903225806,10,5,6
141,protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",244,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Invocation', 'Invocation', 'Literal', 'Return']",Partial Match,0.375,0.5,0.375,0.42857142857142855,3,3,5
142,public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; float VAR_2 = VAR_3 ; VAR_4 = VAR_2 ; METHOD_2 ( ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; VAR_4 = 0.0F ; METHOD_2 ( ) . METHOD_4 ( VAR_1 ) ; },"['Insert Literal', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead']",245,"['Delete LocalVariable', 'Insert Literal']","['Literal', 'TypeReference', 'FieldRead', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Literal']",GPT Missed Nodes,0.4,1.0,0.4,0.5714285714285715,2,0,3
143,public TYPE_1 METHOD_1 ( final java.lang.String status ) { TYPE_1 message = VAR_1 . METHOD_1 ( status ) ; return message ; },public TYPE_1 METHOD_1 ( final java.lang.String status ) { TYPE_1 message = VAR_1 ; },"['Insert FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']",247,"['Delete Invocation', 'Delete VariableRead', 'Delete Return']","['FieldRead', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead', 'Return']","['Invocation', 'VariableRead', 'Return']",GPT Missed Nodes,0.6,1.0,0.5,0.6666666666666666,3,0,3
144,public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; return true ; default : return super . METHOD_1 ( item ) ; } },public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; return true ; default : return super . METHOD_1 ( item ) ; } },"['Insert LocalVariable', 'Insert TypeReference', 'Insert Invocation', 'Insert VariableRead']",248,"['Insert LocalVariable', 'Insert TypeReference', 'Insert Assignment', 'Insert VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeReference', 'Assignment', 'VariableRead']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
145,public java.lang.String METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = VAR_2 . get ( VAR_3 . get ( id ) . METHOD_2 ( ) ) ; if ( VAR_1 != null ) return VAR_1 . METHOD_3 ( ) ; return null ; },public java.lang.String METHOD_1 ( java.lang.String id ) { return VAR_2 . get ( VAR_3 . get ( id ) . METHOD_2 ( ) ) . METHOD_3 ( ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",250,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'If', 'Literal']","['LocalVariable', 'Assignment', 'If', 'FieldRead', 'BinaryOperator', 'Literal', 'Return']",Partial Match,0.45454545454545453,0.7142857142857143,0.38461538461538464,0.5,5,2,8
146,public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > names = new java.util.ArrayList ( VAR_2 . METHOD_2 ( VAR_1 ) ) ; VAR_3 . add ( VAR_4 ) ; return names ; },public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > names = VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . add ( VAR_4 ) ; return names ; },"['Move Invocation', 'Delete ConstructorCall']",251,['Delete ConstructorCall'],"['Invocation', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
147,public void delete ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_4 . remove ( VAR_3 . METHOD_3 ( VAR_1 ) ) ; VAR_5 . commit ( ) ; },public void delete ( TYPE_1 VAR_1 ) { VAR_4 . remove ( VAR_3 . METHOD_3 ( VAR_1 ) ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",253,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.6,1.0,0.75,0.8571428571428571,6,0,2
148,"public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 b = VAR_1 . METHOD_1 ( ) ; VAR_2 . set ( b ) ; return TYPE_2 . METHOD_2 ( VAR_3 , b ) ; } catch ( TYPE_3 VAR_4 ) { return false ; } }","public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { try { return TYPE_2 . METHOD_2 ( a , b ) ; } catch ( TYPE_3 VAR_4 ) { return false ; } }","['Insert FieldRead', 'Insert FieldRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead']",254,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Insert VariableRead', 'Insert VariableRead']","['FieldRead', 'FieldRead', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'TypeAccess', 'VariableRead']","['LocalVariable', 'FieldRead', 'Invocation', 'VariableRead', 'Invocation', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,0.5714285714285714,0.36363636363636365,0.4444444444444444,4,3,7
149,"private void METHOD_1 ( java.lang.String VAR_1 ) { java.io.File VAR_2 = VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , VAR_1 ) ; VAR_5 . METHOD_1 ( VAR_2 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_5 . METHOD_1 ( VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , VAR_1 ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",256,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
150,"public static boolean METHOD_1 ( android.content.Context VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; return ( VAR_5 . getString ( VAR_6 , null ) ) != null ; }",public static boolean METHOD_1 ( android.content.Context VAR_1 ) { return true ; },"['Insert Literal', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator']",259,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Return', 'Insert Literal']","['Literal', 'TypeReference', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Literal', 'Invocation', 'Literal', 'BinaryOperator']","['LocalVariable', 'Invocation', 'VariableRead', 'Literal', 'VariableRead', 'TypeAccess', 'Literal', 'Return', 'Literal']",Partial Match,0.625,0.7777777777777778,0.5384615384615384,0.6363636363636364,7,2,6
151,"public boolean replace ( TYPE_1 key , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String k = VAR_3 . toString ( ) ; return VAR_4 . replace ( new TYPE_3 ( k , VAR_1 ) , new TYPE_3 ( k , VAR_2 ) ) ; }","public boolean replace ( TYPE_1 key , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return VAR_4 . replace ( new TYPE_3 ( key , VAR_1 ) , new TYPE_3 ( key , VAR_2 ) ) ; }","['Update VariableRead', 'Update VariableRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable']",261,"['Delete LocalVariable', 'Update Invocation', 'Update Invocation']","['VariableRead', 'VariableRead', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable']","['LocalVariable', 'Invocation', 'Invocation']",GPT Missed Nodes,0.4,0.3333333333333333,0.16666666666666666,0.2222222222222222,1,2,5
152,"public java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = new java.util.HashSet ( ) ; VAR_2 . add ( new TYPE_1 ( STRING_1 , STRING_2 ) ) ; return VAR_1 ; }",public java.util.Set < TYPE_1 > METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead']",262,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Return', 'Insert Literal']","['Literal', 'TypeReference', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'ConstructorCall', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Invocation', 'ConstructorCall', 'Literal', 'Literal', 'Return', 'Literal']",Partial Match,0.4444444444444444,0.625,0.45454545454545453,0.5263157894736842,5,3,6
153,"public TYPE_1 METHOD_1 ( ) { TYPE_1 result = new TYPE_1 ( this . VAR_1 ) ; if ( ( VAR_2 ) != null ) { result . METHOD_2 ( VAR_2 , type , VAR_3 ) ; } return result ; }",public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this . VAR_1 ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",263,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete If', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'FieldRead', 'Literal', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'If', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'Return']",Partial Match,0.4166666666666667,0.5555555555555556,0.35714285714285715,0.43478260869565216,5,4,9
154,public double METHOD_1 ( ) { double VAR_1 = METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) . VAR_3 ) + ( VAR_4 ) ) ) ; return VAR_1 ; },public double METHOD_1 ( ) { double VAR_1 = ( VAR_2 . METHOD_3 ( ) . VAR_3 ) + ( VAR_4 ) ; return VAR_1 ; },"['Move BinaryOperator', 'Delete Invocation']",264,['Delete Invocation'],"['BinaryOperator', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,1,0,1
155,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 . equals ( VAR_4 ) ) || ( VAR_3 . equals ( VAR_5 ) ) ) { return false ; } return super . METHOD_1 ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",268,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Literal', 'Delete Return']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'Invocation', 'FieldRead', 'FieldRead', 'Invocation', 'FieldRead', 'FieldRead', 'Invocation', 'If', 'Literal', 'Return']",Partial Match,0.45454545454545453,0.6363636363636364,0.4666666666666667,0.5384615384615385,7,4,8
156,public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = METHOD_2 ( ) ; java.lang.String VAR_2 = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = METHOD_2 ( ) ; java.lang.Object VAR_2 = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; },['Update TypeReference'],270,['Update TypeReference'],['TypeReference'],['TypeReference'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
157,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 build = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( build ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",271,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.6666666666666666,0.8,4,0,2
158,public void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",272,"['Delete LocalVariable', 'Delete If', 'Move Invocation']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'If', 'Invocation']",GPT Missed Nodes,0.375,1.0,0.2727272727272727,0.42857142857142855,3,0,8
159,public int METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . toUpperCase ( ) ; return ( VAR_3 . METHOD_1 ( ) ) * ( VAR_1 . METHOD_1 ( ) ) ; },public int METHOD_1 ( ) { return ( VAR_3 . METHOD_1 ( ) ) * ( name . METHOD_1 ( ) ) ; },"['Insert FieldRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",274,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Update VariableRead']","['FieldRead', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'TypeAccess', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.8333333333333334,0.8333333333333334,0.8333333333333334,0.8333333333333334,5,1,1
160,public boolean METHOD_1 ( ) { boolean VAR_1 = ( ( VAR_2 ) == null ) || ( VAR_3 . isEmpty ( ) ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_2 ( false ) ; } return VAR_1 ; },public boolean METHOD_1 ( ) { boolean VAR_1 = VAR_3 . isEmpty ( ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_2 ( false ) ; } return VAR_1 ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator']",276,"['Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal']","['Invocation', 'FieldRead', 'Literal', 'BinaryOperator', 'BinaryOperator']","['BinaryOperator', 'FieldRead', 'Literal']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
161,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( ) ; if ( VAR_4 != null ) { float VAR_5 = VAR_4 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_5 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { float VAR_5 = METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_5 ) ; }","['Update LocalVariable', 'Move Invocation', 'Move TypeReference', 'Insert Invocation', 'Move Invocation', 'Move VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete Block', 'Delete If']",277,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']","['LocalVariable', 'Invocation', 'TypeReference', 'Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'LocalVariable', 'Block', 'If']","['LocalVariable', 'Assignment', 'If', 'FieldRead', 'Literal', 'BinaryOperator']",Partial Match,0.4,0.6666666666666666,0.26666666666666666,0.3809523809523809,4,2,11
162,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",282,"['Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'Invocation', 'VariableRead', 'LocalVariable', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.8333333333333334,0.625,0.7142857142857143,5,1,3
163,public boolean METHOD_1 ( TYPE_1 query ) { TYPE_2 VAR_1 = METHOD_2 ( query ) ; boolean result = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; return result ; },public boolean METHOD_1 ( TYPE_1 query ) { return METHOD_2 ( query ) . METHOD_3 ( ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",283,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'FieldWrite', 'VariableRead']",Partial Match,0.6,0.75,0.2727272727272727,0.39999999999999997,3,1,8
164,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; TYPE_4 . METHOD_3 ( STRING_1 , STRING_1 ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",287,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Move Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'Literal', 'Return', 'Invocation']",Partial Match,0.42857142857142855,0.6666666666666666,0.5,0.5714285714285715,4,2,4
165,protected void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_2 . METHOD_4 ( ) . remove ( VAR_3 ) . commit ( ) ; } },protected void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_4 ( ) . remove ( VAR_2 . METHOD_3 ( VAR_1 ) ) . commit ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",290,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete If', 'Insert Invocation', 'Insert VariableRead']","['Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Block', 'If']","['TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'If', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.625,0.5,0.4,0.4444444444444445,4,4,6
166,"protected int METHOD_1 ( java.lang.String key , TYPE_1 value ) { int size = ( value . METHOD_2 ( ) ) * ( value . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , ( STRING_1 + size ) ) ; return size ; }","protected int METHOD_1 ( java.lang.String key , TYPE_1 value ) { return ( value . METHOD_2 ( ) ) * ( value . METHOD_3 ( ) ) ; }","['Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead']",292,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return']","['BinaryOperator', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'BinaryOperator', 'Literal', 'Return']",Partial Match,0.5555555555555556,0.7142857142857143,0.5,0.588235294117647,5,2,5
167,"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( getContext ( ) , STRING_1 , VAR_2 ) ; VAR_3 . show ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",293,"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead', 'Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead']","['TypeReference', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'Literal', 'VariableRead', 'LocalVariable', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead']",GPT Hallucinated Nodes,0.5714285714285714,0.5833333333333334,0.5833333333333334,0.5833333333333334,7,5,5
168,"public void METHOD_1 ( int status , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( msg ) ; TYPE_3 . METHOD_3 ( VAR_2 , status , VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( int status , java.lang.String VAR_1 ) { TYPE_3 . METHOD_3 ( status , VAR_1 , VAR_3 ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",295,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'TypeAccess', 'FieldRead', 'Invocation', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,4,0,2
169,"private void METHOD_1 ( TYPE_1 content ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . add ( VAR_3 , VAR_4 ) ; VAR_5 . add ( VAR_3 ) ; }",private void METHOD_1 ( TYPE_1 content ) { VAR_5 . add ( VAR_3 ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",297,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['LocalVariable', 'ConstructorCall', 'FieldWrite', 'VariableRead', 'VariableRead', 'Invocation']",Partial Match,0.42857142857142855,0.5,0.42857142857142855,0.4615384615384615,3,3,4
170,protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.view.View view = METHOD_2 ( VAR_1 ) ; if ( view != null ) { view . METHOD_3 ( VAR_2 ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) ; },"['Insert Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",298,"['Delete TypeReference', 'Delete LocalVariable', 'Delete If', 'Move Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'LocalVariable', 'If', 'Invocation']",GPT Missed Nodes,0.4444444444444444,1.0,0.3333333333333333,0.5,4,0,8
171,public TYPE_1 METHOD_1 ( TYPE_1 target ) { double VAR_1 = VAR_2 ; VAR_2 *= VAR_3 ; VAR_2 -= ( VAR_4 ) * ( VAR_5 ) ; VAR_4 *= VAR_3 ; VAR_4 += VAR_1 * ( VAR_5 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_1 target ) { VAR_2 *= VAR_3 ; VAR_2 -= ( VAR_4 ) * ( VAR_5 ) ; VAR_4 *= VAR_3 ; VAR_4 += ( VAR_2 ) * ( VAR_5 ) ; return this ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",299,"['Delete LocalVariable', 'Delete Literal', 'Delete VariableRead', 'Update VariableRead']","['FieldRead', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Literal', 'VariableRead', 'VariableRead']",Partial Match,0.4,0.5,0.5,0.5,2,2,2
172,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_1 ( VAR_2 ) ; if ( VAR_3 == null ) return METHOD_1 ( VAR_1 ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return METHOD_1 ( VAR_2 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",301,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete Return', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Assignment', 'If', 'Return', 'VariableRead']",Partial Match,0.4,0.8,0.3333333333333333,0.47058823529411764,4,1,8
173,public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( VAR_1 . METHOD_3 ( ) . contains ( VAR_2 ) ) ) { METHOD_4 ( VAR_2 ) ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( ) . contains ( VAR_2 ) ) { METHOD_4 ( VAR_2 ) ; } },"['Insert Invocation', 'Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator']",303,"['Delete TypeReference', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete LocalVariable']","['Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Invocation', 'BinaryOperator']","['TypeReference', 'Assignment', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'BinaryOperator', 'Invocation', 'LocalVariable']",Partial Match,0.6666666666666666,0.7777777777777778,0.5384615384615384,0.6363636363636364,7,2,6
174,"public java.util.Set < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , new java.util.HashSet ( VAR_1 ) ) ) ; }","public java.util.Set < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { return TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ) ; }","['Move Invocation', 'Move TypeAccess', 'Move Invocation', 'Move TypeAccess', 'Move VariableRead', 'Delete ConstructorCall']",304,"['Move Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall']","['Invocation', 'TypeAccess', 'Invocation', 'TypeAccess', 'VariableRead', 'ConstructorCall']","['Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'ConstructorCall']",Exact Match,1.0,0.6,0.5,0.5454545454545454,3,2,3
175,public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_4 . METHOD_3 ( VAR_2 . METHOD_2 ( VAR_3 class ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",306,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Exact Match,1.0,0.75,0.75,0.75,3,1,1
176,public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.Long VAR_1 = VAR_2 . METHOD_2 ( ) ; java.util.List < TYPE_1 > VAR_3 = VAR_4 . METHOD_1 ( VAR_1 ) ; return VAR_3 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.Long VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_4 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",309,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.6,0.7499999999999999,3,0,2
177,"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; android.content.Intent VAR_2 = new android.content.Intent ( METHOD_4 ( ) , VAR_3 class ) ; METHOD_5 ( VAR_2 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",311,"['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation']","['TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeReference', 'Invocation', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeAccess', 'Invocation', 'VariableRead', 'Literal', 'Invocation', 'TypeReference', 'ConstructorCall', 'Invocation', 'LocalVariable', 'Invocation']",Partial Match,0.75,0.8,0.7272727272727273,0.761904761904762,8,2,3
178,public void add ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . add ( VAR_1 ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; },public void add ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",312,"['Delete LocalVariable', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.3333333333333333,0.5,2,0,4
179,public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( 1 ) . METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( 1 ) ; METHOD_5 ( VAR_1 ) ; },"['Move Invocation', 'Delete Invocation']",313,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
180,"public static void main ( java.lang.String [ ] args ) { java.lang.String VAR_1 = VAR_2 . get ( TYPE_1 . METHOD_1 ( STRING_1 ) , STRING_2 ) . toString ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }","public static void main ( java.lang.String [ ] args ) { java.lang.String VAR_1 = VAR_2 . get ( TYPE_1 . METHOD_1 ( STRING_1 ) , STRING_2 ) . toString ( ) ; new TYPE_2 ( VAR_1 ) ; }","['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",316,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Assignment', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation']","['ConstructorCall', 'VariableRead', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'Assignment', 'ConstructorCall', 'VariableRead', 'Invocation']",GPT Hallucinated Nodes,0.8333333333333334,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
181,"public float METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { long VAR_3 = ( VAR_4 ) - ( ( TYPE_3 . METHOD_2 ( ) ) - ( VAR_5 . get ( VAR_1 ) . get ( VAR_2 ) ) ) ; return VAR_3 / FLOAT_1 ; }","public long METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return ( VAR_4 ) - ( ( TYPE_3 . METHOD_2 ( ) ) - ( VAR_5 . get ( VAR_1 ) . get ( VAR_2 ) ) ) ; }","['Update TypeReference', 'Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",318,"['Update TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator']","['TypeReference', 'BinaryOperator', 'TypeReference', 'LocalVariable', 'VariableRead', 'FieldRead', 'BinaryOperator']","['TypeReference', 'LocalVariable', 'VariableRead', 'BinaryOperator', 'Literal', 'BinaryOperator']",Partial Match,0.6666666666666666,0.6666666666666666,0.5714285714285714,0.6153846153846153,4,2,3
182,"public void METHOD_1 ( ) { int a = TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_3 ( STRING_1 , ( a + STRING_2 ) ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",320,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'FieldRead', 'BinaryOperator', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'VariableRead']",Partial Match,0.625,0.8333333333333334,0.5555555555555556,0.6666666666666667,5,1,4
183,"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_4 ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 . put ( VAR_4 , VAR_2 ) ; } return VAR_2 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; }","['Insert VariableRead', 'Insert VariableRead', 'Delete TypeAccess', 'Delete TypeAccess']",321,"['Update VariableRead', 'Update VariableRead']","['VariableRead', 'VariableRead', 'TypeAccess', 'TypeAccess']","['VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.0,0.0,0.0,0,2,4
184,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_2 VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( METHOD_3 ( VAR_2 ) ) { VAR_3 = VAR_3 . METHOD_4 ( VAR_1 ) ; } else { java.lang.System.out.println ( STRING_1 ) ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_3 ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { VAR_3 = VAR_3 . METHOD_4 ( VAR_1 ) ; } else { java.lang.System.out.println ( STRING_1 ) ; } return this ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",322,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation']",Partial Match,0.6,0.3333333333333333,0.5,0.4,2,4,2
185,"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_3 . init ( this , STRING_2 , true , VAR_2 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_3 . init ( this , STRING_2 , false ) ; }","['Update Literal', 'Delete TypeReference', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",323,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Update Literal']","['Literal', 'TypeReference', 'Invocation', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead', 'Literal', 'Literal']",GPT Missed Nodes,0.8571428571428571,0.8571428571428571,0.6666666666666666,0.75,6,1,3
186,public void METHOD_1 ( ) { long start = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( ( TYPE_1 . METHOD_2 ( ) ) - start ) ) ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Invocation']",325,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'TypeAccess', 'Invocation', 'VariableRead', 'BinaryOperator', 'BinaryOperator', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'BinaryOperator', 'FieldRead', 'TypeAccess', 'Invocation', 'Literal']",Partial Match,0.75,0.9090909090909091,0.7692307692307693,0.8333333333333333,10,1,3
187,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( STRING_1 , STRING_2 , VAR_1 ) ; VAR_3 . METHOD_2 ( STRING_3 , VAR_4 ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( ) ; return new TYPE_1 ( STRING_1 , STRING_2 , VAR_1 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",329,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete Return', 'Insert ConstructorCall', 'Insert Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'Return', 'ConstructorCall', 'Return']",Partial Match,0.375,0.2857142857142857,0.25,0.26666666666666666,2,5,6
188,private void METHOD_1 ( TYPE_1 event ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; } },private void METHOD_1 ( TYPE_1 event ) { VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Block', 'Delete If']",330,"['Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Delete VariableRead']","['Invocation', 'TypeReference', 'Invocation', 'LocalVariable', 'VariableRead', 'Block', 'If']","['LocalVariable', 'Invocation', 'If', 'VariableRead']",GPT Missed Nodes,0.6666666666666666,1.0,0.5714285714285714,0.7272727272727273,4,0,3
189,public boolean METHOD_1 ( ) { double VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == VAR_1 ) { return true ; } else { return false ; } },public boolean METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; return false ; },"['Move Invocation', 'Move Return', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",331,"['Delete LocalVariable', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete If', 'Insert Invocation']","['Invocation', 'Return', 'TypeReference', 'Literal', 'LocalVariable', 'VariableRead', 'BinaryOperator', 'Literal', 'Return', 'Block', 'Block', 'If']","['LocalVariable', 'BinaryOperator', 'FieldRead', 'Invocation', 'VariableRead', 'If', 'Invocation']",Partial Match,0.5,0.5714285714285714,0.3333333333333333,0.4210526315789474,4,3,8
190,"public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ( ( java.lang.String [ ] ) ( args ) ) ) ; TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , STRING_1 ) ; TYPE_2 . METHOD_2 ( ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ( ( java.lang.String [ ] ) ( args ) ) ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']",332,"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation']","['TypeReference', 'VariableRead', 'ConstructorCall', 'TypeReference', 'VariableRead', 'VariableRead', 'Literal', 'LocalVariable', 'TypeAccess', 'Invocation']",Partial Match,0.625,0.5,0.625,0.5555555555555556,5,5,3
191,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = VAR_3 . show ( METHOD_2 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; VAR_3 . show ( METHOD_2 ( ) , STRING_1 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable']",333,"['Delete TypeReference', 'Delete LocalVariable']","['Invocation', 'TypeReference', 'LocalVariable']","['TypeReference', 'LocalVariable']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
192,"public java.lang.String getText ( java.lang.Object element ) { if ( element instanceof TYPE_1 ) { java.lang.String filename = METHOD_1 ( ( ( TYPE_1 ) ( element ) ) ) ; return TYPE_2 . METHOD_2 ( VAR_1 , filename ) ; } return super . getText ( element ) ; }",public java.lang.String getText ( java.lang.Object element ) { if ( element instanceof TYPE_1 ) { } return super . getText ( element ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Return']",335,"['Delete TypeReference', 'Delete Invocation', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete Return']","['TypeReference', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Return']","['TypeReference', 'Invocation', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'Return']",GPT Missed Nodes,0.8333333333333334,1.0,0.7,0.8235294117647058,7,0,3
193,"private static void METHOD_1 ( TYPE_1 VAR_1 ) { try { java.lang.String response = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } }",private static void METHOD_1 ( TYPE_1 VAR_1 ) { try { java.lang.System.out.println ( VAR_1 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } },"['Update Invocation', 'Move Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeReference', 'Delete LocalVariable']",337,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Invocation']","['Invocation', 'Invocation', 'FieldRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeReference', 'LocalVariable']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.5714285714285714,0.5,0.5333333333333333,4,3,4
194,"public void update ( TYPE_1 VAR_1 , java.lang.Object data ) { int VAR_2 = VAR_3 . METHOD_1 ( ) ; if ( VAR_2 != 0 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; } METHOD_3 ( ) ; }","public void update ( TYPE_1 VAR_1 , java.lang.Object data ) { METHOD_3 ( ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",338,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete If']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeAccess', 'Invocation', 'BinaryOperator', 'VariableRead', 'Literal', 'If']",GPT Missed Nodes,0.7777777777777778,1.0,0.5833333333333334,0.7368421052631579,7,0,5
195,public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 value = new TYPE_1 ( VAR_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall']",339,['Insert LocalVariable'],"['LocalVariable', 'TypeReference', 'ConstructorCall']",['LocalVariable'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
196,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; TYPE_2 VAR_3 = getIntent ( ) . getData ( ) ; if ( VAR_3 != null ) { METHOD_4 ( VAR_3 ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",341,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete If', 'Delete Invocation']","['TypeReference', 'Invocation', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'LocalVariable', 'Invocation', 'Invocation', 'BinaryOperator', 'VariableRead', 'Literal', 'If', 'Invocation']",GPT Missed Nodes,0.875,1.0,0.8181818181818182,0.9,9,0,2
197,"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( new TYPE_3 ( 1 , 1 , 1 , 0 ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Delete TypeReference', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",344,"['Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation']","['TypeReference', 'Literal', 'Literal', 'Literal', 'Literal', 'ConstructorCall', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'ConstructorCall', 'Literal', 'Literal', 'Literal', 'Literal', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.9,0.8181818181818182,0.8571428571428572,9,1,2
198,public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",345,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead', 'Insert Literal']","['Literal', 'TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'VariableRead', 'Literal']",Partial Match,0.7142857142857143,0.8333333333333334,0.625,0.7142857142857143,5,1,3
199,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 key = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( key != null ) { METHOD_3 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",346,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete If', 'Delete VariableRead', 'Delete Literal']","['Invocation', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Block', 'If']","['LocalVariable', 'TypeReference', 'Assignment', 'TypeAccess', 'Invocation', 'If', 'VariableRead', 'Literal']",Partial Match,0.7,0.875,0.6363636363636364,0.7368421052631579,7,1,4
200,public void delete ( int id ) { java.lang.String VAR_1 = ( STRING_1 + id ) + STRING_2 ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void delete ( int id ) { java.lang.String VAR_1 = STRING_1 + id ; VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",350,"['Delete Literal', 'Delete BinaryOperator']","['BinaryOperator', 'FieldRead', 'BinaryOperator']","['Literal', 'BinaryOperator']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,1,1,2
201,public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( 1 ) ; return TYPE_2 . METHOD_4 ( VAR_2 ) ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( 1 ) ; return TYPE_2 . METHOD_4 ( VAR_1 ) ; },"['Update Invocation', 'Move Invocation', 'Move Literal', 'Update VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",354,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Update VariableRead']","['Invocation', 'Invocation', 'Literal', 'VariableRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.5,0.75,0.375,0.5,3,1,5
202,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Date VAR_2 = new java.util.Date ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_3 . add ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . add ( VAR_1 ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",358,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation', 'Invocation', 'VariableRead']",Exact Match,1.0,0.8571428571428571,0.6666666666666666,0.75,6,1,3
203,private static java.util.List < TYPE_1 > METHOD_1 ( android.content.Intent intent ) { java.util.List < TYPE_1 > VAR_1 = intent . METHOD_1 ( VAR_2 ) ; if ( VAR_1 == null ) { return TYPE_2 . METHOD_2 ( ) ; } else { return VAR_1 ; } },private static java.util.List < TYPE_1 > METHOD_1 ( android.content.Intent intent ) { return intent . METHOD_1 ( VAR_2 ) ; },"['Insert Return', 'Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",359,"['Delete LocalVariable', 'Delete VariableRead', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return']","['Return', 'Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Return', 'Block', 'VariableRead', 'Return', 'Block', 'If']","['LocalVariable', 'VariableRead', 'If', 'TypeAccess', 'Invocation', 'Return']",GPT Missed Nodes,0.6,1.0,0.375,0.5454545454545454,6,0,10
204,"public void METHOD_1 ( long time ) { java.lang.String VAR_1 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( VAR_3 ) + VAR_1 ) , time ) ; VAR_4 . commit ( ) ; }","public void METHOD_1 ( long time ) { VAR_2 . METHOD_3 ( VAR_3 , time ) ; VAR_4 . commit ( ) ; }","['Insert TypeAccess', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator']",362,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator']","['TypeAccess', 'TypeReference', 'Invocation', 'LocalVariable', 'FieldRead', 'VariableRead', 'BinaryOperator']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead', 'BinaryOperator']",GPT Missed Nodes,0.7142857142857143,1.0,0.7142857142857143,0.8333333333333333,5,0,2
205,"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = this . VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 . size ( ) ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return this . VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",363,"['Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete Return', 'Insert Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'ThisAccess', 'FieldRead', 'Invocation', 'If', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation', 'Return', 'Return']",Partial Match,0.3333333333333333,0.4166666666666667,0.35714285714285715,0.3846153846153846,5,7,9
206,public java.util.Set < java.lang.String > METHOD_1 ( ) { java.util.Set < java.lang.String > VAR_1 = new java.util.HashSet < java.lang.String > ( ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; return VAR_1 ; },public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']",365,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.5714285714285714,0.7777777777777778,0.5833333333333334,0.6666666666666666,7,2,5
207,public void METHOD_1 ( android.view.View view ) { int VAR_1 = INT_1 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ( VAR_1 * INT_2 ) ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( 1 ) ; METHOD_3 ( ( INT_1 * INT_2 ) ) ; },"['Insert Literal', 'Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",366,"['Delete LocalVariable', 'Update VariableRead', 'Insert Literal', 'Update VariableRead']","['Literal', 'FieldRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'VariableRead', 'Literal', 'VariableRead']",GPT Missed Nodes,0.6,0.5,0.3333333333333333,0.4,2,2,4
208,public TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = VAR_2 . METHOD_1 ( ) ; return METHOD_2 ( STRING_1 ) ; },public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( STRING_1 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable']",367,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable']","['TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
209,"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_3 . METHOD_5 ( VAR_5 . METHOD_6 ( ) , VAR_6 ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",370,"['Delete TypeReference', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']","['TypeReference', 'Assignment', 'Invocation', 'VariableRead', 'Invocation', 'FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.42857142857142855,0.625,0.5,0.5555555555555556,5,3,5
210,"protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . add ( VAR_1 ) ; return VAR_1 ; }","protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",373,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.6,1.0,0.42857142857142855,0.6,3,0,4
211,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 result = VAR_2 . METHOD_2 ( new TYPE_3 ( VAR_1 ) ) ; return TYPE_1 . METHOD_3 ( result ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_3 ( VAR_1 ) ) ; return TYPE_1 . METHOD_3 ( VAR_1 ) ; },"['Move Invocation', 'Update VariableRead', 'Delete TypeReference', 'Delete LocalVariable']",375,"['Delete LocalVariable', 'Update VariableRead']","['Invocation', 'VariableRead', 'TypeReference', 'LocalVariable']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
212,public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; java.lang.String data = VAR_1 . METHOD_2 ( STRING_2 ) ; java.lang.System.out.println ( data ) ; java.lang.String VAR_2 = VAR_1 . METHOD_3 ( data ) ; java.lang.System.out.println ( VAR_2 ) ; },"public void METHOD_1 ( ) { java.lang.String data = TYPE_1 . METHOD_2 ( STRING_2 , STRING_1 ) ; TYPE_1 . METHOD_3 ( data , STRING_1 ) ; }","['Insert Invocation', 'Insert TypeAccess', 'Move VariableRead', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",377,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeReference', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Insert TypeAccess', 'Insert Invocation', 'Insert Literal', 'Insert Literal', 'Insert TypeAccess', 'Insert Invocation', 'Insert Literal']","['Invocation', 'TypeAccess', 'VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'FieldRead', 'Invocation', 'TypeReference', 'VariableRead', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'Literal', 'FieldWrite', 'VariableRead', 'Invocation', 'TypeReference', 'FieldWrite', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'Literal', 'Literal', 'TypeAccess', 'Invocation', 'Literal']",Partial Match,0.6666666666666666,0.6111111111111112,0.4782608695652174,0.5365853658536586,11,7,12
213,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_3 ( ) ; } else { return null ; } },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; },"['Insert Return', 'Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",380,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete Return', 'Delete Invocation', 'Delete Return']","['Return', 'Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'Assignment', 'If', 'BinaryOperator', 'VariableRead', 'Literal', 'Return', 'Invocation', 'Return']",Partial Match,0.7,0.8888888888888888,0.5,0.64,8,1,8
214,private boolean METHOD_1 ( ) { android.content.Context context = VAR_1 . getContext ( ) ; boolean VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( context ) ; boolean VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_4 ( context ) ; return VAR_2 && VAR_3 ; },private boolean METHOD_1 ( ) { android.content.Context context = VAR_1 . getContext ( ) ; return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( context ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator']",381,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'BinaryOperator']","['LocalVariable', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'Invocation', 'BinaryOperator', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.8333333333333334,0.8888888888888888,0.6666666666666666,0.761904761904762,8,1,4
215,"public java.lang.String METHOD_1 ( ) { java.lang.String [ ] split = VAR_1 . split ( STRING_1 , INT_1 ) ; if ( ( VAR_2 . length ) < INT_1 ) return null ; return split [ 1 ] ; }","public java.lang.String METHOD_1 ( ) { return VAR_1 . split ( STRING_1 , INT_1 ) [ 1 ] ; }","['Move Invocation', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",382,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete If', 'Delete Literal', 'Delete Return']","['Invocation', 'LocalVariable', 'FieldRead', 'FieldRead', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'Literal', 'FieldRead', 'BinaryOperator', 'If', 'Literal', 'Return']",Partial Match,0.7,0.6666666666666666,0.6,0.631578947368421,6,3,4
216,public void METHOD_1 ( int id ) { java.lang.Integer index = METHOD_2 ( id ) ; if ( index != null ) { TYPE_1 temp = VAR_1 . get ( index ) ; VAR_1 . remove ( temp ) ; } },public void METHOD_1 ( int id ) { java.lang.Integer index = METHOD_2 ( id ) ; if ( index != null ) { VAR_1 . remove ( index ) ; } },"['Update Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",384,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.5714285714285714,0.7272727272727273,4,0,3
217,public synchronized boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( true ) ; return true ; },public synchronized boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; },"['Update Literal', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation']",385,"['Delete LocalVariable', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Return', 'Insert Literal', 'Update Return']","['Literal', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'Invocation']","['LocalVariable', 'Invocation', 'Literal', 'FieldRead', 'Return', 'Literal', 'Return']",Partial Match,0.42857142857142855,0.42857142857142855,0.375,0.39999999999999997,3,4,5
218,"public void update ( ) { VAR_1 = VAR_2 ; VAR_3 = new java.util.HashSet < > ( ) ; TYPE_1 VAR_4 = new TYPE_2 ( VAR_5 , VAR_6 , VAR_7 ) ; METHOD_1 ( VAR_4 ) ; }",public void update ( ) { VAR_1 = VAR_2 ; VAR_3 = new java.util.HashSet < > ( ) ; METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead']",386,"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete LocalVariable', 'Update Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead']","['TypeReference', 'TypeReference', 'VariableRead', 'VariableRead', 'VariableRead', 'LocalVariable', 'Invocation']",Partial Match,0.5,0.42857142857142855,0.42857142857142855,0.42857142857142855,3,4,4
219,"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",387,"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'TypeReference', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'VariableRead', 'Invocation']","['TypeAccess', 'FieldRead', 'FieldRead', 'Invocation', 'TypeReference', 'LocalVariable', 'FieldRead', 'Invocation', 'TypeAccess', 'FieldRead', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.6428571428571429,0.6,0.6206896551724138,9,5,6
220,"public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 , VAR_1 ) ) ; java.lang.String VAR_3 = VAR_4 . get ( ) ; METHOD_2 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return VAR_3 ; }","public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 , VAR_1 ) ) ; return VAR_4 . get ( ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']",392,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'Return']",GPT Hallucinated Nodes,0.8333333333333334,0.875,0.7777777777777778,0.823529411764706,7,1,2
221,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Date VAR_2 = VAR_3 . METHOD_2 ( VAR_4 . getTime ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_5 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 = VAR_1 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",394,"['Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'Invocation']",Partial Match,0.5,0.7142857142857143,0.5555555555555556,0.6250000000000001,5,2,4
222,public static TYPE_1 METHOD_1 ( byte [ ] b ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( b ) ; return new TYPE_1 ( VAR_1 ) ; },public static TYPE_1 METHOD_1 ( byte [ ] b ) { return new TYPE_1 ( new TYPE_2 ( b ) ) ; },"['Insert ConstructorCall', 'Move VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",395,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Return', 'Insert ConstructorCall']","['ConstructorCall', 'VariableRead', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead', 'Return', 'ConstructorCall']",Partial Match,0.6666666666666666,0.8333333333333334,0.625,0.7142857142857143,5,1,3
223,public java.lang.String getTime ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; java.util.Date VAR_2 = new java.util.Date ( java.lang.Integer.parseInt ( time ) ) ; return VAR_3 . format ( VAR_2 ) ; },public java.lang.String getTime ( ) { return time ; },"['Move FieldRead', 'Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",397,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Insert Return', 'Insert VariableRead']","['FieldRead', 'TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation', 'Return', 'Return', 'VariableRead']",Partial Match,0.75,0.7142857142857143,0.7692307692307693,0.7407407407407408,10,4,3
224,public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 < java.lang.String > VAR_2 = VAR_3 . keys ( ) ; VAR_4 . METHOD_6 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable']",398,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable']","['TypeReference', 'TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Partial Match,0.6,0.8,0.8,0.8000000000000002,4,1,1
225,public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable']",399,"['Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead']",Partial Match,0.6,0.6,0.75,0.6666666666666665,3,2,1
226,public void METHOD_1 ( TYPE_1 VAR_1 ) { android.view.View VAR_2 = getView ( ) ; if ( VAR_2 != null ) { ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) . METHOD_3 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) . METHOD_3 ( VAR_1 ) ; },"['Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",400,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete If', 'Delete FieldRead']","['Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Block', 'If']","['LocalVariable', 'TypeReference', 'Invocation', 'If', 'FieldRead']",Partial Match,0.4444444444444444,0.6,0.3,0.4,3,2,7
227,"public boolean METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 p = ( ( TYPE_1 ) ( VAR_1 ) ) ; return VAR_2 . contains ( p . METHOD_2 ( ) . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; }",public boolean METHOD_1 ( java.lang.Object VAR_1 ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Return']",401,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Return']","['TypeReference', 'TypeReference', 'VariableRead', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'Return']","['LocalVariable', 'TypeReference', 'TypeReference', 'VariableRead', 'Assignment', 'Invocation', 'FieldRead', 'Invocation', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'Return']",Partial Match,0.625,0.6428571428571429,0.75,0.6923076923076924,9,5,3
228,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; view . METHOD_3 ( VAR_5 ) . METHOD_4 ( VAR_6 ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",402,"['Delete LocalVariable', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'Invocation', 'FieldRead', 'FieldRead']",Partial Match,0.3333333333333333,0.6,0.3333333333333333,0.42857142857142855,3,2,6
229,"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { TYPE_1 p = new TYPE_1 ( ) ; this . VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 , p ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 , new TYPE_1 ( ) ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",403,"['Delete LocalVariable', 'Delete ConstructorCall']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'ConstructorCall']",GPT Missed Nodes,0.5,0.5,0.25,0.3333333333333333,1,1,3
230,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_2 ) ; android.content.Intent intent = new android.content.Intent ( VAR_5 , VAR_6 class ) ; METHOD_4 ( intent ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_5 , VAR_6 class ) ; METHOD_4 ( intent ) ; METHOD_5 ( ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",404,"['Delete LocalVariable', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.4,1.0,0.2857142857142857,0.4444444444444445,2,0,5
231,"public TYPE_1 METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , false ) ; if ( VAR_2 != null ) { TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; } return VAR_2 ; }","public TYPE_1 METHOD_1 ( long VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 , false ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",405,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'FieldRead', 'Invocation', 'If', 'Return']",Partial Match,0.2727272727272727,0.6666666666666666,0.3076923076923077,0.42105263157894735,4,2,9
232,"public void METHOD_1 ( ) { int VAR_1 = INT_1 - 1 ; TYPE_1 buffer = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . assertEquals ( buffer . METHOD_3 ( ) , INT_1 ) ; }",public void METHOD_1 ( ) { int VAR_1 = INT_1 - 1 ; TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",407,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeReference', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'FieldRead', 'Invocation', 'TypeReference', 'VariableRead']",Partial Match,0.6666666666666666,0.7142857142857143,0.625,0.6666666666666666,5,2,3
233,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( STRING_2 , STRING_3 , VAR_1 ) ; java.lang.System.out.println ( VAR_5 . response ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String content = VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( STRING_2 , STRING_3 , content ) ; java.lang.System.out.println ( VAR_5 . response ( ) ) ; }","['Update LocalVariable', 'Update VariableRead']",408,"['Update LocalVariable', 'Update VariableRead']","['LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,2,0,0
234,public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = ( VAR_3 . METHOD_2 ( ) ) + ( VAR_4 . offset ) ; java.lang.System.out.println ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( STRING_1 + ( VAR_3 . METHOD_2 ( ) ) ) + STRING_2 ) ) ; },"['Move BinaryOperator', 'Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator']",409,"['Delete LocalVariable', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Insert Invocation']","['BinaryOperator', 'FieldRead', 'TypeReference', 'LocalVariable', 'FieldRead', 'VariableRead', 'BinaryOperator']","['LocalVariable', 'BinaryOperator', 'FieldRead', 'VariableRead', 'TypeAccess', 'Literal', 'Invocation', 'Invocation']",Partial Match,0.5,0.5,0.5714285714285714,0.5333333333333333,4,4,3
235,"public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( view ) ) ; if ( VAR_4 . equals ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_3 ( VAR_5 ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view , TYPE_1 VAR_2 ) { }","['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",410,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeReference', 'TypeReference', 'VariableRead', 'If', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.625,0.7272727272727273,0.6153846153846154,0.6666666666666667,8,3,5
236,"public void METHOD_1 ( android.view.View view ) { java.util.ArrayList < java.lang.String > VAR_1 = VAR_2 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_4 ( intent ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",411,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'Invocation', 'VariableRead']",Exact Match,1.0,0.875,0.7777777777777778,0.823529411764706,7,1,2
237,"public void delete ( java.lang.Long id ) { TYPE_1 VAR_1 = get ( id ) ; if ( TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } VAR_3 . delete ( VAR_1 ) ; }",public void delete ( java.lang.Long id ) { VAR_3 . delete ( id ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead', 'Delete Invocation']",414,"['Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete If', 'Delete Invocation', 'Delete FieldRead']","['Invocation', 'Invocation', 'TypeAccess', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'Block', 'If', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'TypeAccess', 'Invocation', 'If', 'Invocation', 'FieldRead']",Partial Match,0.5,0.8571428571428571,0.375,0.5217391304347825,6,1,10
238,public TYPE_1 query ( java.lang.String query ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_1 ( query ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_2 ( ) ; return VAR_1 . METHOD_2 ( ) ; },public TYPE_1 query ( java.lang.String query ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_1 ( query ) ; return VAR_1 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",415,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['TypeReference', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
239,public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_1 ( ) ; },public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",417,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
240,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return super . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']",420,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'VariableRead']",Partial Match,0.6666666666666666,0.8333333333333334,0.625,0.7142857142857143,5,1,3
241,"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( VAR_4 ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",421,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead', 'Return']",Partial Match,0.6,0.75,0.5,0.6,3,1,3
242,"public TYPE_1 METHOD_1 ( int x , int y , int VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( new TYPE_3 ( x , y , VAR_1 ) ) ; return VAR_2 == null ? null : new TYPE_1 ( VAR_2 ) ; }","public TYPE_1 METHOD_1 ( int x , int y , int VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( x , y , VAR_1 ) ; return VAR_2 == null ? null : new TYPE_1 ( VAR_2 ) ; }","['Move VariableRead', 'Move VariableRead', 'Move VariableRead', 'Delete ConstructorCall']",422,['Delete ConstructorCall'],"['VariableRead', 'VariableRead', 'VariableRead', 'ConstructorCall']",['ConstructorCall'],GPT Missed Nodes,0.5,1.0,0.25,0.4,1,0,3
243,public void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . remove ( VAR_1 ) ; VAR_4 . remove ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_3 . remove ( VAR_2 . METHOD_2 ( ) ) ; },"['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",423,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'VariableRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.5,0.8,0.4,0.5333333333333333,4,1,6
244,public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; } },public void METHOD_1 ( final TYPE_1 event ) { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( event . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",424,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'Block', 'If']",Partial Match,0.75,0.7777777777777778,0.5833333333333334,0.6666666666666666,7,2,5
245,public int METHOD_1 ( int index ) { java.lang.String VAR_1 = METHOD_2 ( index ) ; if ( VAR_1 == null ) return 0 ; return java.lang.Integer.parseInt ( VAR_1 ) ; },public int METHOD_1 ( int index ) { return java.lang.Integer.parseInt ( METHOD_2 ( index ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",426,"['Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Delete Literal', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'If', 'Literal', 'VariableRead']",GPT Missed Nodes,0.5555555555555556,0.8,0.36363636363636365,0.5000000000000001,4,1,7
246,"public void METHOD_1 ( final java.lang.String VAR_1 , final TYPE_1 VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_4 . put ( VAR_3 , VAR_2 ) ; VAR_5 . put ( VAR_6 . getId ( ) , VAR_2 ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 , final TYPE_1 VAR_2 ) { VAR_4 . put ( VAR_1 , VAR_2 ) ; VAR_5 . put ( VAR_6 . getId ( ) , VAR_2 ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",427,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['VariableRead', 'TypeReference', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,0.8,0.888888888888889,4,0,1
247,"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_1 class ) ; METHOD_2 ( intent ) ; getActivity ( ) . METHOD_3 ( ) ; super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { getActivity ( ) . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",429,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'Invocation', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.8333333333333334,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
248,public void METHOD_1 ( java.lang.Object [ ] result ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( result ) ; if ( METHOD_3 ( ) ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } } },public void METHOD_1 ( java.lang.Object [ ] result ) { if ( ( METHOD_3 ( ) ) && ( ( VAR_1 ) != null ) ) { VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( result ) ) ; } },"['Insert BinaryOperator', 'Move Invocation', 'Move BinaryOperator', 'Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",430,"['Insert BinaryOperator', 'Move Invocation', 'Move FieldRead', 'Move Invocation', 'Delete LocalVariable', 'Delete If']","['BinaryOperator', 'Invocation', 'BinaryOperator', 'Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'Block', 'If']","['BinaryOperator', 'Invocation', 'FieldRead', 'Invocation', 'LocalVariable', 'If']",Partial Match,0.4444444444444444,0.8333333333333334,0.4166666666666667,0.5555555555555556,5,1,7
249,"public void METHOD_1 ( TYPE_1 context , double VAR_1 ) { double VAR_2 = ( VAR_3 ) + ( VAR_1 * ( ( VAR_4 ) - ( VAR_3 ) ) ) ; VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 context , double VAR_1 ) { double VAR_2 = VAR_1 * ( ( VAR_3 ) + ( ( VAR_4 ) - ( VAR_3 ) ) ) ; VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; }","['Update BinaryOperator', 'Move VariableRead', 'Update BinaryOperator', 'Move FieldRead']",431,"['Move VariableRead', 'Move BinaryOperator']","['BinaryOperator', 'VariableRead', 'BinaryOperator', 'FieldRead']","['VariableRead', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,0.5,0.25,0.3333333333333333,1,1,3
250,public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; return VAR_2 ; },public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_2 ; },"['Update Invocation', 'Move Invocation', 'Move VariableRead', 'Delete Invocation']",432,['Delete Invocation'],"['Invocation', 'Invocation', 'VariableRead', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.25,0.4,1,0,3
251,"public long METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new java.util.Date ( ) . getTime ( ) ) ; }","public long METHOD_1 ( ) { long value = METHOD_2 ( VAR_1 , new java.util.Date ( ) . getTime ( ) ) ; return value ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead']",434,"['Insert LocalVariable', 'Insert VariableRead', 'Update Return']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']","['LocalVariable', 'VariableRead', 'Return']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
252,"public TYPE_1 METHOD_1 ( int id ) throws TYPE_2 { TYPE_3 VAR_1 = METHOD_2 ( VAR_2 . METHOD_3 ( id ) ) ; return METHOD_4 ( VAR_1 , null ) ; }","public TYPE_1 METHOD_1 ( int id ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_3 ( id ) ; return METHOD_4 ( VAR_1 , null ) ; }","['Move Invocation', 'Delete Invocation']",436,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
253,public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",437,"['Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeReference', 'FieldRead', 'Invocation', 'If', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.7,0.75,0.6428571428571429,0.6923076923076924,9,3,5
254,private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( this . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; VAR_1 . METHOD_4 ( this ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { ( ( TYPE_1 ) ( this . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) . METHOD_4 ( this ) ; METHOD_5 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",438,"['Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
255,public boolean METHOD_1 ( TYPE_1 item ) { int id = ( ( item . METHOD_2 ( ) ) < ( VAR_1 ) ) == ( id == ( VAR_2 ) ) ; { return true ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; return super . METHOD_1 ( item ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return']",439,"['Delete BinaryOperator', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete Block']","['Invocation', 'FieldRead', 'BinaryOperator', 'VariableRead', 'FieldRead', 'BinaryOperator', 'BinaryOperator', 'Literal', 'Return']","['BinaryOperator', 'BinaryOperator', 'VariableRead', 'VariableRead', 'Literal', 'Block']",Partial Match,0.42857142857142855,0.6666666666666666,0.4444444444444444,0.5333333333333333,4,2,5
256,"protected void METHOD_1 ( TYPE_1 VAR_1 ) { int a = INT_1 ; int VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , a ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",441,"['Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable']","['LocalVariable', 'Literal', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead']",Partial Match,0.5714285714285714,0.7142857142857143,0.5555555555555556,0.6250000000000001,5,2,4
257,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { android.content.Intent intent = getIntent ( ) ; METHOD_2 ( 0 , 0 ) ; intent . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_2 ( 0 , 0 ) ; METHOD_5 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",442,"['Delete LocalVariable', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'Invocation', 'LocalVariable', 'Literal', 'Literal', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'Invocation', 'Literal', 'Literal', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'Literal', 'Literal', 'Invocation', 'FieldRead', 'Invocation', 'Invocation', 'Literal', 'Literal', 'Invocation', 'Invocation']",Partial Match,0.42857142857142855,0.9166666666666666,0.7333333333333333,0.8148148148148148,11,1,4
258,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 response = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; response . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; return response ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 response = new TYPE_1 ( ) ; response . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_1 ( VAR_1 ) ) ; return response ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",443,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeReference']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'TypeReference']",Exact Match,1.0,0.5,0.75,0.6,3,3,1
259,public static void main ( java.lang.String [ ] args ) { TYPE_1 TYPE_2 = new TYPE_1 ( INT_1 ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable']",445,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'TypeReference', 'Literal']",Partial Match,0.6,0.6,0.75,0.6666666666666665,3,2,1
260,public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( ) ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable']",446,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall']","['TypeReference', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
261,"private boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_2 ) { VAR_4 . info ( STRING_1 , VAR_1 ) ; } return VAR_2 ; }",private boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",448,"['Delete LocalVariable', 'Delete If', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'If', 'Invocation', 'TypeAccess', 'VariableRead', 'Return']",Partial Match,0.625,0.8333333333333334,0.45454545454545453,0.5882352941176471,5,1,6
262,"public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; return TYPE_1 . METHOD_4 ( VAR_3 ) . build ( ) ; }","public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_4 ( ) . build ( ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",449,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.8,1.0,0.75,0.8571428571428571,6,0,2
263,"public TYPE_1 METHOD_1 ( android.view.View target ) { int VAR_1 = TYPE_2 . METHOD_2 ( context , VAR_2 ) ; return METHOD_3 ( target , new TYPE_3 ( ) , VAR_1 , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( android.view.View target ) { return METHOD_1 ( target , new TYPE_3 ( ) , VAR_3 ) ; }","['Update Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",451,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Update Invocation']","['Invocation', 'TypeReference', 'TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.8333333333333334,0.625,0.7142857142857143,5,1,3
264,"public static void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = INT_2 ; long VAR_3 = INT_3 ; long VAR_4 = INT_4 ; TYPE_1 . METHOD_2 ( VAR_5 , VAR_1 , VAR_6 , VAR_3 ) ; }",public static void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",452,"['Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead', 'VariableRead']",Partial Match,0.5714285714285714,0.5333333333333333,0.4444444444444444,0.4848484848484848,8,7,10
265,"public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( STRING_1 , false ) ; assertTrue ( VAR_1 ) ; assertEquals ( STRING_1 , message . METHOD_2 ( ) ) ; assertEquals ( STRING_1 , message . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( STRING_1 ) ; assertEquals ( STRING_1 , message . METHOD_3 ( ) ) ; assertEquals ( STRING_1 , message . METHOD_2 ( ) ) ; assertTrue ( VAR_1 ) ; }","['Move Invocation', 'Move Invocation', 'Delete Literal']",454,"['Delete Literal', 'Delete Literal', 'Delete TypeReference', 'Delete ConstructorCall', 'Insert ConstructorCall', 'Move Invocation', 'Move Invocation']","['Invocation', 'Invocation', 'Literal']","['Literal', 'Literal', 'TypeReference', 'ConstructorCall', 'ConstructorCall', 'Invocation', 'Invocation']",GPT Hallucinated Nodes,0.5,0.42857142857142855,1.0,0.6,3,4,0
266,"private void METHOD_1 ( int VAR_1 , int VAR_2 ) { java.util.Date date = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_1 ( date ) ; TYPE_1 . METHOD_1 ( INT_1 , date ) ; }","private void METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_1 ( METHOD_2 ( VAR_1 , VAR_2 ) ) ; }","['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",455,"['Delete LocalVariable', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'TypeAccess', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.45454545454545453,0.625,5,0,6
267,"public boolean METHOD_1 ( ) { return ( ( boolean ) ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_1 , false ) ) ) ) ; }","public boolean METHOD_1 ( ) { java.lang.Boolean value = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_1 , false ) ) ) ; return ( ( boolean ) ( value ) ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Move TypeReference']",456,"['Insert LocalVariable', 'Insert VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'TypeReference']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,2,0,3
268,"void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , android.content.Context context , java.util.regex.Matcher VAR_3 ) { METHOD_2 ( VAR_1 , FLOAT_1 ) ; java.lang.String text = VAR_3 . METHOD_3 ( 1 ) ; if ( text != null ) { VAR_4 . append ( text ) ; } }","void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , android.content.Context context , java.util.regex.Matcher VAR_3 ) { METHOD_2 ( VAR_1 , FLOAT_1 ) ; VAR_4 . append ( VAR_3 . METHOD_3 ( 1 ) ) ; }","['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",458,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Move Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'LocalVariable', 'Invocation', 'If', 'Invocation']",GPT Missed Nodes,0.4444444444444444,1.0,0.4166666666666667,0.5882352941176471,5,0,7
269,public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this . METHOD_4 ( VAR_3 ) ) ; VAR_2 . METHOD_5 ( this . METHOD_6 ( VAR_4 ) ) ; return VAR_5 . build ( ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 ; VAR_2 . METHOD_3 ( this . METHOD_4 ( VAR_3 ) ) ; VAR_2 . METHOD_5 ( this . METHOD_6 ( VAR_4 ) ) ; return VAR_5 . build ( ) ; },"['Delete TypeAccess', 'Delete Invocation']",459,"['Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']","['TypeAccess', 'Invocation']","['Assignment', 'TypeAccess', 'Invocation']",GPT Hallucinated Nodes,0.6666666666666666,0.6666666666666666,1.0,0.8,2,1,0
270,public void METHOD_1 ( ) { int a = 1 ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Literal', 'Delete LocalVariable']",460,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Literal']","['TypeReference', 'Literal', 'LocalVariable']","['LocalVariable', 'TypeReference', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
271,"public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 ) ; assertEquals ( TYPE_2 . METHOD_2 ( VAR_2 ) , VAR_1 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",461,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'Literal', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']",Partial Match,0.7142857142857143,0.9166666666666666,0.8461538461538461,0.8799999999999999,11,1,2
272,"public void METHOD_1 ( ) { java.lang.String value = null ; TYPE_1 f = new TYPE_1 ( STRING_1 , value ) ; f . METHOD_2 ( new java.util.ArrayList < java.lang.String > ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . getValue ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 f = new TYPE_1 ( STRING_1 , null ) ; f . METHOD_2 ( new java.util.ArrayList < java.lang.String > ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . getValue ( ) ) ; }","['Move Literal', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",462,"['Delete LocalVariable', 'Delete VariableRead', 'Delete Literal']","['Literal', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead', 'Literal']",GPT Missed Nodes,0.75,0.6666666666666666,0.5,0.5714285714285715,2,1,2
273,protected void execute ( ) { double VAR_1 = VAR_2 . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ; if ( ( java.lang.Math.abs ( VAR_1 ) ) > FLOAT_1 ) { VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } },protected void execute ( ) { VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ) ; },"['Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",464,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete Invocation', 'Delete If']","['Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'FieldRead', 'BinaryOperator', 'Block', 'If']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'BinaryOperator', 'Literal', 'Invocation', 'If']",Partial Match,0.6,0.75,0.5,0.6,6,2,6
274,"private float METHOD_1 ( ) { float height = METHOD_2 ( ) ; float VAR_1 = ( ( VAR_2 ) - ( METHOD_3 ( ) ) ) + ( VAR_3 ) ; return VAR_4 . min ( height , VAR_1 ) ; }",private float METHOD_1 ( ) { return ( ( ( VAR_2 ) - ( METHOD_3 ( ) ) ) + ( VAR_3 ) ) % ( METHOD_2 ( ) ) ; },"['Insert BinaryOperator', 'Move BinaryOperator', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",465,"['Delete LocalVariable', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Insert BinaryOperator']","['BinaryOperator', 'BinaryOperator', 'Invocation', 'TypeReference', 'LocalVariable', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'LocalVariable', 'Invocation', 'VariableRead', 'Invocation', 'BinaryOperator']",GPT Missed Nodes,0.6666666666666666,0.8333333333333334,0.45454545454545453,0.5882352941176471,5,1,6
275,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",466,"['Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'Invocation', 'Invocation', 'FieldWrite', 'VariableRead', 'Invocation']",Partial Match,0.5714285714285714,0.5,0.5714285714285714,0.5333333333333333,4,4,3
276,"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 , VAR_1 ) ; VAR_3 . METHOD_1 ( ) ; }",public static void main ( java.lang.String [ ] args ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; },"['Insert LocalVariable', 'Move TypeReference', 'Insert ConstructorCall', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead']",468,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeReference', 'Delete VariableRead']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'VariableRead', 'TypeReference', 'VariableRead']",Exact Match,1.0,0.8333333333333334,0.5,0.625,5,1,5
277,"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; } TYPE_3 VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; } }","['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",470,"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.8571428571428571,0.923076923076923,6,0,1
278,public void start ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_4 . setState ( VAR_5 ) ; } },public void start ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_3 . METHOD_1 ( VAR_1 ) . setState ( VAR_5 ) ; },"['Insert Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",471,"['Delete LocalVariable', 'Delete If', 'Move Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'If', 'Invocation']",GPT Missed Nodes,0.3333333333333333,1.0,0.25,0.4,3,0,9
279,public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . assertTrue ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( STRING_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",474,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation']","['TypeReference', 'TypeReference', 'LocalVariable', 'FieldRead', 'Invocation']",Partial Match,0.5,0.8,0.5,0.6153846153846154,4,1,4
280,"public void METHOD_1 ( int id , java.lang.String name , TYPE_1 state ) { TYPE_2 VAR_1 = METHOD_2 ( id ) . get ( ) ; VAR_1 . METHOD_3 ( name ) ; VAR_2 . setState ( state ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( int id , java.lang.String name , TYPE_1 state ) { TYPE_2 VAR_1 = METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( name ) ; VAR_2 . setState ( state ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; }","['Move Invocation', 'Delete Invocation']",476,['Delete Invocation'],"['Invocation', 'Invocation']",['Invocation'],Exact Match,1.0,1.0,0.5,0.6666666666666666,1,0,1
281,public static void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; java.lang.Thread t = new java.lang.Thread ( new TYPE_2 ( ) ) ; VAR_1 . start ( ) ; },public static void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']",479,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'TypeReference', 'Invocation']",GPT Missed Nodes,0.8,0.8,0.6666666666666666,0.7272727272727272,4,1,2
282,public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; return VAR_3 . METHOD_6 ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . METHOD_6 ( VAR_1 ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",480,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeAccess', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.5,0.7142857142857143,0.38461538461538464,0.5,5,2,8
283,"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( ( ( VAR_2 ) | ( VAR_3 ) ) ) ; METHOD_3 ( intent ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_3 ( new android.content.Intent ( this , VAR_1 class ) ) ; }","['Insert Invocation', 'Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",481,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete ThisAccess', 'Delete TypeReference', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'FieldRead', 'FieldRead', 'BinaryOperator', 'Invocation', 'VariableRead', 'Invocation', 'Invocation']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'TypeReference', 'ThisAccess', 'TypeReference', 'Invocation', 'BinaryOperator', 'VariableRead', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']",Partial Match,0.75,0.6153846153846154,0.6666666666666666,0.64,8,5,4
284,public static void main ( java.lang.String [ ] args ) { TYPE_1 TYPE_2 = new TYPE_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable']",482,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall']","['TypeReference', 'ConstructorCall', 'LocalVariable']","['TypeReference', 'LocalVariable', 'ConstructorCall']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
285,public void METHOD_1 ( android.view.View VAR_1 ) { float VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_3 ( 0.0 ) ; METHOD_4 ( ) ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",485,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeReference', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,0.8571428571428571,1.0,0.923076923076923,6,1,0
286,public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String key ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( key ) ; if ( VAR_2 . METHOD_3 ( VAR_1 ) ) { return VAR_3 . get ( VAR_1 ) ; } return null ; },public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String key ) { if ( VAR_2 . METHOD_3 ( key ) ) return VAR_3 . get ( key ) ; return null ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Update VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",487,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Move VariableRead', 'Move VariableRead']","['Invocation', 'Invocation', 'TypeAccess', 'VariableRead', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.8,0.6666666666666666,0.4444444444444444,0.5333333333333333,4,2,5
287,"public boolean METHOD_1 ( ) { int temp = VAR_1 ; METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) . METHOD_5 ( ) ) ) + 1 ) ) ; return ( VAR_1 ) != temp ; }","public void METHOD_1 ( ) { METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) . METHOD_5 ( ) ) ) + 1 ) ) ; }","['Update TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Return']",489,"['Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Update TypeReference']","['TypeReference', 'TypeReference', 'FieldRead', 'LocalVariable', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Return']","['LocalVariable', 'VariableRead', 'BinaryOperator', 'VariableRead', 'Return', 'TypeReference']",GPT Missed Nodes,0.8333333333333334,0.8333333333333334,0.625,0.7142857142857143,5,1,3
288,"private void METHOD_1 ( ) { java.util.List < TYPE_1 > list = TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( this . getActivity ( ) , VAR_2 , list ) ; METHOD_3 ( VAR_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_2 ( this . getActivity ( ) , VAR_2 , TYPE_1 . METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",491,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Insert TypeAccess', 'Insert Invocation']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']",Partial Match,0.6,0.42857142857142855,0.6,0.5,3,4,2
289,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 a = TYPE_1 . METHOD_2 ( ) ; a . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; assertTrue ( ( ( a . METHOD_4 ( ) . size ( ) ) == 1 ) ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",492,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'Invocation', 'VariableRead', 'Invocation', 'Invocation', 'Literal', 'BinaryOperator', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'ConstructorCall', 'Literal', 'Literal', 'Invocation', 'Invocation', 'Invocation', 'TypeAccess', 'Invocation', 'Literal']",GPT Missed Nodes,0.5555555555555556,0.75,0.6,0.6666666666666665,9,3,6
290,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( data , VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( ) , VAR_5 ) ; VAR_1 . METHOD_3 ( ) ; VAR_6 . add ( VAR_1 ) ; }","public void METHOD_1 ( ) { VAR_6 . add ( new TYPE_1 ( data , VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( ) , VAR_5 ) ) ; }","['Insert Invocation', 'Move TypeAccess', 'Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",494,"['Delete LocalVariable', 'Delete Invocation', 'Insert ConstructorCall']","['Invocation', 'TypeAccess', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.5,0.6666666666666666,0.2222222222222222,0.3333333333333333,2,1,7
291,public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",496,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Update Invocation']","['TypeReference', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'Invocation']",GPT Missed Nodes,0.75,0.75,0.75,0.75,3,1,1
292,"public void start ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_4 ( ) . put ( STRING_1 , VAR_1 ) ; }","public void start ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) . METHOD_1 ( TYPE_2 . METHOD_2 ( ) ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_4 ( ) . put ( STRING_1 , VAR_1 ) ; }","['Move Invocation', 'Move Invocation', 'Move ConstructorCall', 'Delete VariableRead', 'Delete VariableRead']",497,"['Move Invocation', 'Move Invocation']","['Invocation', 'Invocation', 'ConstructorCall', 'VariableRead', 'VariableRead']","['Invocation', 'Invocation']",GPT Missed Nodes,0.3333333333333333,1.0,0.4,0.5714285714285715,2,0,3
293,public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; TYPE_2 element = VAR_1 . get ( ) . METHOD_3 ( STRING_1 ) ; if ( element != null ) { element . METHOD_4 ( STRING_2 ) ; } TYPE_3 . METHOD_5 ( true ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; TYPE_3 . METHOD_5 ( true ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",503,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete If', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'Literal', 'If', 'FieldRead', 'Invocation', 'Literal']",Partial Match,0.4,0.625,0.35714285714285715,0.45454545454545453,5,3,9
294,public int METHOD_1 ( ) { int result = super . METHOD_1 ( ) ; result = ( INT_1 * result ) + ( index ) ; return result ; },public int METHOD_1 ( ) { int result = index ; result = INT_1 * ( super . METHOD_1 ( ) ) ; return result ; },"['Move FieldRead', 'Update BinaryOperator', 'Move FieldRead', 'Move Invocation', 'Delete VariableRead', 'Delete BinaryOperator']",504,"['Update Assignment', 'Move VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator']","['FieldRead', 'BinaryOperator', 'FieldRead', 'Invocation', 'VariableRead', 'BinaryOperator']","['Assignment', 'VariableRead', 'Invocation', 'BinaryOperator', 'VariableRead', 'BinaryOperator']",Partial Match,0.6,0.3333333333333333,0.3333333333333333,0.3333333333333333,2,4,4
295,"protected final TYPE_1 METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( name ) ; java.lang.String VAR_2 = TYPE_3 . METHOD_3 ( name ) ; return METHOD_4 ( VAR_2 , ( VAR_1 + ( VAR_3 ) ) ) ; }","protected final TYPE_1 METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( name ) ; return METHOD_4 ( TYPE_3 . METHOD_3 ( name ) , ( VAR_1 + ( VAR_3 ) ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",507,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
296,"public static android.content.Intent METHOD_1 ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( context , VAR_1 class ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( context ) ) ; VAR_2 . METHOD_2 ( ) ; return intent ; }","public static android.content.Intent METHOD_1 ( android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( context , VAR_1 class ) ; return intent ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",509,"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeReference', 'Delete Assignment', 'Delete Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'TypeReference', 'Assignment', 'Invocation']",Partial Match,0.6,0.6666666666666666,0.6666666666666666,0.6666666666666666,4,2,2
297,protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead']",510,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead']",Partial Match,0.7142857142857143,0.7142857142857143,0.5555555555555556,0.6250000000000001,5,2,4
298,"public static TYPE_1 METHOD_1 ( int VAR_1 , byte VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 , TYPE_2 . METHOD_3 ( VAR_3 ) . put ( VAR_2 ) . array ( ) , VAR_4 , true ) ; }","public static TYPE_1 METHOD_1 ( int VAR_1 , byte VAR_2 ) { return new TYPE_1 ( VAR_1 , TYPE_2 . METHOD_3 ( VAR_3 ) . put ( VAR_2 ) . array ( ) ) ; }","['Insert ConstructorCall', 'Move VariableRead', 'Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",514,"['Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['ConstructorCall', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'Literal', 'Invocation']","['ConstructorCall', 'TypeAccess', 'Invocation', 'Literal', 'VariableRead']",Exact Match,1.0,0.8,0.5714285714285714,0.6666666666666666,4,1,3
299,public static TYPE_1 METHOD_1 ( java.lang.Long id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( id ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( java.lang.Long id ) { return VAR_2 . METHOD_2 ( id ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",515,"['Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
300,"public void METHOD_1 ( ) { TYPE_1 result = TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( METHOD_4 ( ) , TYPE_3 . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) ) ) ) ; VAR_1 . assertNotNull ( result ) ; }","public void METHOD_1 ( ) { TYPE_1 result = TYPE_2 . METHOD_2 ( STRING_1 , METHOD_3 ( METHOD_4 ( ) , METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) ) ) ) ; VAR_1 . assertNotNull ( result ) ; }","['Update TypeAccess', 'Update TypeAccess']",517,"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']","['TypeAccess', 'TypeAccess']","['TypeAccess', 'TypeAccess', 'Invocation']",GPT Hallucinated Nodes,0.5,0.0,0.0,0.0,0,3,2
301,"private java.lang.Class METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { java.lang.Class VAR_5 = new TYPE_3 ( VAR_1 , this , VAR_2 , VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_5 , VAR_1 ) ; return VAR_5 ; }","private java.lang.Class METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { return new TYPE_3 ( VAR_1 , this , VAR_2 , VAR_3 , VAR_4 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",518,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.6,1.0,0.42857142857142855,0.6,3,0,4
302,public int METHOD_1 ( java.lang.Object VAR_1 ) { int index = VAR_2 . METHOD_2 ( VAR_1 ) ; return index ; },public int METHOD_1 ( java.lang.Object VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",519,"['Delete LocalVariable', 'Delete Assignment', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Assignment', 'VariableRead']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
303,public java.lang.String METHOD_1 ( int id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( id ) ; VAR_3 . delete ( VAR_1 ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( int id ) { VAR_3 . delete ( id ) ; return STRING_1 ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",521,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,0.625,0.7692307692307693,5,0,3
304,"public void METHOD_1 ( TYPE_1 VAR_1 , float VAR_2 ) { java.lang.String VAR_3 = java.lang.String . METHOD_2 ( VAR_4 . getId ( ) ) ; VAR_5 . METHOD_3 ( VAR_3 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , float VAR_2 ) { VAR_5 . METHOD_3 ( java.lang.String . METHOD_2 ( VAR_4 . getId ( ) ) , VAR_2 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",524,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead']",GPT Hallucinated Nodes,0.8,0.6,0.75,0.6666666666666665,3,2,1
305,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_4 = this . VAR_5 . METHOD_3 ( new TYPE_4 ( VAR_3 ) ) ; VAR_2 . METHOD_4 ( STRING_2 , VAR_4 ) ; return STRING_3 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_4 = this . VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( STRING_2 , VAR_4 ) ; return STRING_3 ; }","['Move VariableRead', 'Delete ConstructorCall']",528,"['Delete ConstructorCall', 'Delete TypeReference']","['VariableRead', 'ConstructorCall']","['ConstructorCall', 'TypeReference']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
306,public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_3 = METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( ) ; } METHOD_5 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_5 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",529,"['Delete LocalVariable', 'Delete If', 'Delete VariableRead', 'Delete Invocation']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'If', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,4,0,6
307,"public void METHOD_1 ( android.view.View view ) { if ( ( METHOD_2 ( ) ) != 0 ) return ; METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_4 ( VAR_3 ) ) ) ; VAR_2 . METHOD_5 ( 0 , VAR_4 ) ; }",public void METHOD_1 ( android.view.View view ) { if ( ( METHOD_2 ( ) ) != 0 ) return ; METHOD_3 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",530,"['Delete TypeReference', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'TypeAccess', 'Invocation']","['TypeReference', 'Invocation', 'TypeReference', 'Invocation', 'LocalVariable', 'Invocation', 'Literal', 'VariableRead']",GPT Missed Nodes,0.8333333333333334,0.875,0.7777777777777778,0.823529411764706,7,1,2
308,private java.io.File METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { java.io.InputStream VAR_2 = getClass ( ) . METHOD_2 ( VAR_1 ) ; java.io.File VAR_3 = METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; return VAR_3 ; },private java.io.File METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { java.io.InputStream VAR_2 = getClass ( ) . METHOD_2 ( VAR_1 ) ; return METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",532,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'Return']",Partial Match,0.5,0.6,0.42857142857142855,0.5,3,2,4
309,private void METHOD_1 ( android.content.Intent intent ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; java.lang.String id = intent . METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( id ) ; },private void METHOD_1 ( android.content.Intent intent ) { java.lang.String id = intent . METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( id ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",533,"['Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'Invocation', 'VariableRead', 'Assignment', 'Invocation']",Partial Match,0.5,0.8,0.5714285714285714,0.6666666666666666,4,1,3
310,public static double METHOD_1 ( ) { double VAR_1 = ( ( double ) ( VAR_2 ) ) / ( ( double ) ( VAR_3 . length ) ) ; return VAR_1 * INT_1 ; },public static double METHOD_1 ( ) { return ( ( double ) ( ( VAR_2 ) / ( VAR_3 . length ) ) ) * INT_1 ; },"['Move BinaryOperator', 'Move TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead']",534,"['Delete LocalVariable', 'Move VariableRead', 'Move FieldRead', 'Move BinaryOperator', 'Move BinaryOperator', 'Move TypeReference', 'Move TypeReference']","['BinaryOperator', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead']","['LocalVariable', 'VariableRead', 'FieldRead', 'BinaryOperator', 'BinaryOperator', 'TypeReference', 'TypeReference']",GPT Hallucinated Nodes,0.8,0.42857142857142855,0.5,0.4615384615384615,3,4,3
311,public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_2 ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",536,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.75,0.42857142857142855,0.5454545454545454,3,1,4
312,public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } else { return null ; } },public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; },"['Move Return', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",537,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete If', 'Delete Return']","['Return', 'TypeReference', 'Invocation', 'LocalVariable', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'Block', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'Invocation', 'FieldRead', 'BinaryOperator', 'Literal', 'If', 'Return']",Partial Match,0.6,0.8571428571428571,0.46153846153846156,0.6,6,1,7
313,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 , VAR_4 , VAR_3 , VAR_4 ) . remove ( this ) . METHOD_6 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 , VAR_4 , VAR_3 , VAR_4 ) . remove ( this ) . METHOD_6 ( ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",538,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Assignment', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Assignment', 'VariableRead']",Partial Match,0.6,0.75,0.75,0.75,3,1,1
314,TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; },TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 result = VAR_2 . get ( VAR_1 ) ; return result ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead']",542,"['Insert LocalVariable', 'Update Return', 'Insert VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']","['LocalVariable', 'Return', 'VariableRead']",Partial Match,0.4,0.6666666666666666,0.5,0.5714285714285715,2,1,2
315,public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = context . METHOD_2 ( ) ; if ( VAR_1 != null ) { return ( ( java.lang.String ) ( VAR_2 . get ( STRING_1 ) ) ) ; } return context . METHOD_3 ( ) . getName ( ) ; },public java.lang.String METHOD_1 ( ) { return context . METHOD_3 ( ) . getName ( ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If']",544,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Return', 'Delete TypeReference', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']","['TypeReference', 'FieldRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'If', 'Return', 'TypeReference', 'Invocation', 'Literal', 'Invocation']",GPT Missed Nodes,0.6363636363636364,0.8888888888888888,0.5714285714285714,0.6956521739130435,8,1,6
316,"public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) , STRING_1 ) ; return new TYPE_1 ( VAR_1 ) ; }",public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return new TYPE_1 ( METHOD_2 ( ) ) ; },"['Update ConstructorCall', 'Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete VariableRead', 'Delete ConstructorCall']",545,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Literal']","['ConstructorCall', 'ConstructorCall', 'TypeReference', 'LocalVariable', 'FieldRead', 'VariableRead', 'ConstructorCall']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'Invocation', 'Literal']",Partial Match,0.42857142857142855,0.6,0.42857142857142855,0.5,3,2,4
317,"public void METHOD_1 ( ) { java.util.List < java.lang.Double > VAR_1 = METHOD_2 ( 1 , INT_1 , INT_2 ) . get ( 0 ) ; double result = VAR_2 . METHOD_3 ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + result ) ) ; return ; }",public void METHOD_1 ( ) { return ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation']",546,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return']","['TypeReference', 'TypeReference', 'Literal', 'TypeAccess', 'TypeAccess', 'Invocation', 'Literal', 'Invocation', 'LocalVariable', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation']","['LocalVariable', 'Invocation', 'VariableRead', 'Invocation', 'Literal', 'BinaryOperator', 'VariableRead', 'Return']",Partial Match,0.5555555555555556,0.875,0.35,0.4999999999999999,7,1,13
318,public java.lang.Object METHOD_1 ( java.lang.String key ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( key ) ; },public java.lang.Object METHOD_1 ( java.lang.String key ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",547,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Update Return', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'Return', 'Literal']",Partial Match,0.5714285714285714,0.8333333333333334,0.625,0.7142857142857143,5,1,3
319,"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 ) ; METHOD_2 ( intent , VAR_3 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",549,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeReference', 'ConstructorCall', 'VariableRead', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.7142857142857143,0.7142857142857143,0.7142857142857143,0.7142857142857143,5,2,2
320,public java.lang.String METHOD_1 ( java.util.Date date ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_4 . format ( date ) ; },public java.lang.String METHOD_1 ( java.util.Date date ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; return VAR_4 . format ( date ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",551,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.8,0.8333333333333334,0.625,0.7142857142857143,5,1,3
321,public int METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_1 . METHOD_3 ( VAR_3 ) ) == false ) { return 1 ; } return INT_1 ; },public int METHOD_1 ( ) { return INT_1 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",556,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete If', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'Literal', 'BinaryOperator', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'VariableRead', 'If', 'BinaryOperator', 'FieldRead', 'Invocation', 'VariableRead', 'Literal', 'Return']",Partial Match,0.6363636363636364,0.7272727272727273,0.6153846153846154,0.6666666666666667,8,3,5
322,"public TYPE_1 get ( java.lang.String VAR_1 ) throws java.lang.Exception { java.util.Collection < TYPE_2 > VAR_2 = VAR_3 . get ( VAR_1 ) ; TYPE_3 VAR_4 = METHOD_1 ( VAR_1 ) ; return new TYPE_1 ( VAR_4 , VAR_2 ) ; }",public java.util.Collection < TYPE_2 > get ( java.lang.String VAR_1 ) throws java.lang.Exception { return VAR_3 . get ( VAR_1 ) ; },"['Update TypeReference', 'Move TypeReference', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall']",557,"['Update TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete Return', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'TypeReference', 'Invocation', 'TypeReference', 'LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead', 'ConstructorCall']","['TypeReference', 'LocalVariable', 'TypeReference', 'TypeReference', 'TypeReference', 'FieldRead', 'Invocation', 'LocalVariable', 'TypeReference', 'Invocation', 'Return', 'ConstructorCall', 'TypeReference', 'VariableRead', 'VariableRead']",GPT Hallucinated Nodes,0.7142857142857143,0.6,0.75,0.6666666666666665,9,6,3
323,"public TYPE_1 METHOD_1 ( int VAR_1 ) { int VAR_2 = VAR_3 . min ( ( VAR_1 - 1 ) , VAR_4 . length ) ; return VAR_1 > 0 ? VAR_5 [ VAR_2 ] : VAR_5 [ 0 ] ; }",public TYPE_1 METHOD_1 ( int VAR_1 ) { return VAR_1 > 0 ? VAR_5 [ ( VAR_1 - 1 ) ] : VAR_5 [ VAR_1 ] ; },"['Move BinaryOperator', 'Insert VariableRead', 'Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal']",558,"['Delete LocalVariable', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete VariableRead', 'Delete Return', 'Insert Return', 'Insert BinaryOperator', 'Insert Literal', 'Insert VariableRead']","['BinaryOperator', 'VariableRead', 'TypeReference', 'TypeAccess', 'FieldRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal']","['LocalVariable', 'Invocation', 'FieldRead', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'VariableRead', 'Return', 'Return', 'BinaryOperator', 'Literal', 'VariableRead']",Partial Match,0.6666666666666666,0.46153846153846156,0.6666666666666666,0.5454545454545455,6,7,3
324,public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; int VAR_3 = VAR_4 ; VAR_5 . METHOD_4 ( new TYPE_3 ( VAR_3 ) ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",559,"['Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']","['TypeReference', 'FieldRead', 'LocalVariable', 'TypeAccess', 'VariableRead', 'ConstructorCall', 'Invocation']","['LocalVariable', 'VariableRead', 'FieldRead', 'ConstructorCall', 'Invocation']",GPT Missed Nodes,0.7142857142857143,1.0,0.7142857142857143,0.8333333333333333,5,0,2
325,public TYPE_1 METHOD_1 ( long id ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < > ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( long id ) { return VAR_2 . METHOD_2 ( id ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead']",560,"['Delete LocalVariable', 'Delete Invocation', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'ConstructorCall', 'Invocation', 'VariableRead']","['LocalVariable', 'Invocation', 'ConstructorCall', 'TypeReference', 'Return']",Partial Match,0.6666666666666666,0.8,0.5714285714285714,0.6666666666666666,4,1,3
326,public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) ) ) ; if ( ( METHOD_2 ( ) ) && ( VAR_1 != null ) ) { VAR_1 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",561,"['Delete TypeReference', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete Invocation', 'Delete If', 'Delete Block']","['TypeReference', 'TypeReference', 'Invocation', 'LocalVariable', 'Invocation', 'VariableRead', 'Literal', 'BinaryOperator', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'Invocation', 'TypeReference', 'Invocation', 'LocalVariable', 'Invocation', 'If', 'Block']",GPT Missed Nodes,0.625,1.0,0.6153846153846154,0.761904761904762,8,0,5
327,public int METHOD_1 ( java.lang.String key ) { java.lang.Object value = get ( key ) ; java.lang.Integer VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( VAR_1 == null ) { return 0 ; } return VAR_2 . intValue ( ) ; },public int METHOD_1 ( java.lang.String key ) { java.lang.Object value = get ( key ) ; if ( value == null ) { return 0 ; } return TYPE_1 . METHOD_2 ( value ) . intValue ( ) ; },"['Update VariableRead', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess']",562,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Insert FieldRead', 'Insert Invocation']","['VariableRead', 'Invocation', 'TypeReference', 'LocalVariable', 'TypeAccess']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.3333333333333333,0.4,0.3636363636363636,2,4,3
328,public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( STRING_2 ) ; java.lang.System.out.println ( VAR_4 . getName ( ) ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return true ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",564,"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'TypeAccess', 'Invocation', 'Invocation']","['TypeReference', 'TypeReference', 'TypeReference', 'LocalVariable', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation']",Partial Match,0.6666666666666666,0.5555555555555556,0.5,0.5263157894736842,5,4,5
329,public static void METHOD_1 ( java.lang.String VAR_1 ) { int size = VAR_2 . length ( ) ; if ( ( ( VAR_3 . index ) + 1 ) == size ) { VAR_4 . METHOD_2 ( ) ; } },public static void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",565,"['Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'FieldRead', 'Literal', 'BinaryOperator', 'VariableRead', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeReference', 'FieldRead', 'Invocation', 'If', 'BinaryOperator', 'FieldRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,0.9090909090909091,0.7692307692307693,0.8333333333333333,10,1,3
330,"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; android.content.Intent i = new android.content.Intent ( VAR_3 , VAR_4 class ) ; METHOD_3 ( i ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",568,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete VariableRead', 'Delete TypeReference', 'Delete Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'VariableRead', 'VariableRead', 'TypeReference', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
331,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",569,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['TypeReference', 'LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']",Exact Match,1.0,0.8,1.0,0.888888888888889,4,1,0
332,"TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( ( ( METHOD_2 ( ) ) * ( VAR_1 % INT_1 ) ) , ( ( METHOD_2 ( ) ) * ( VAR_1 / INT_1 ) ) ) ; }","TYPE_1 METHOD_1 ( int VAR_1 ) { int x = VAR_1 % INT_1 ; int y = VAR_1 / INT_1 ; return new TYPE_1 ( ( ( METHOD_2 ( ) ) * x ) , ( ( METHOD_2 ( ) ) * y ) ) ; }","['Insert LocalVariable', 'Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Insert VariableRead']",570,"['Insert LocalVariable', 'Insert LocalVariable', 'Update VariableRead', 'Update VariableRead']","['LocalVariable', 'LocalVariable', 'TypeReference', 'BinaryOperator', 'TypeReference', 'BinaryOperator', 'VariableRead', 'VariableRead']","['LocalVariable', 'LocalVariable', 'VariableRead', 'VariableRead']",GPT Missed Nodes,0.5,0.5,0.25,0.3333333333333333,2,2,6
333,"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( INT_1 , INT_1 ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_2 ( INT_1 , INT_1 ) ; }","['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",571,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation']",Exact Match,1.0,1.0,1.0,1.0,5,0,0
334,public static java.lang.String METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 writer = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( writer ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_3 . toString ( ) ; },public static java.lang.String METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 writer = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( writer ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; java.lang.String str = VAR_3 . toString ( ) ; return str ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead']",573,"['Insert TypeReference', 'Insert LocalVariable', 'Insert Assignment', 'Insert Invocation', 'Insert Return']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead']","['TypeReference', 'LocalVariable', 'Assignment', 'Invocation', 'Return']",Partial Match,0.5,0.4,0.5,0.4444444444444445,2,3,2
335,"public static boolean remove ( TYPE_1 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = TYPE_2 . METHOD_1 ( VAR_3 . getContext ( ) , false ) ; return VAR_2 == null ? false : VAR_4 . remove ( VAR_1 ) ; }",public static boolean remove ( TYPE_1 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = TYPE_2 . METHOD_1 ( false ) ; return VAR_2 == null ? false : VAR_4 . remove ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation']",574,"['Delete FieldRead', 'Delete Invocation']","['TypeAccess', 'Invocation']","['FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
336,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , INT_1 , VAR_2 . METHOD_4 ( ) . getName ( ) ) ; }","public void METHOD_1 ( ) { METHOD_3 ( INT_1 , VAR_2 . METHOD_4 ( ) . getName ( ) ) ; }","['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",575,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,4,0,0
337,"public void METHOD_1 ( TYPE_1 node ) { VAR_1 . remove ( node ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( node ) ; VAR_3 . METHOD_3 ( this , VAR_2 ) ; VAR_2 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 node ) { VAR_1 . remove ( node ) ; VAR_3 . METHOD_3 ( this , VAR_3 . METHOD_2 ( node ) ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",577,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.5,0.6666666666666666,3,0,3
338,public boolean METHOD_1 ( ) { return VAR_1 ; },public boolean METHOD_1 ( ) { int i = 0 ; return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Insert Literal']",578,"['Insert LocalVariable', 'Insert Literal']","['LocalVariable', 'TypeReference', 'Literal']","['LocalVariable', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
339,public java.util.Calendar METHOD_1 ( ) { java.util.Calendar c = java.util.Calendar.getInstance ( ) ; c . METHOD_2 ( true ) ; return c ; },public java.util.Calendar METHOD_1 ( ) { return java.util.Calendar.getInstance ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead']",580,"['Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Insert Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'FieldWrite', 'VariableRead', 'Invocation', 'Return', 'Return']",Partial Match,0.5,0.4444444444444444,0.5714285714285714,0.5,4,5,3
340,public static TYPE_1 METHOD_1 ( TYPE_2 type ) { TYPE_1 node = new TYPE_1 ( VAR_1 ) ; if ( type != null ) { node . METHOD_2 ( type ) ; } return node ; },"public static TYPE_1 METHOD_1 ( TYPE_1 type ) { return new TYPE_1 ( VAR_1 , type ) ; }","['Move TypeReference', 'Move ConstructorCall', 'Move VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",581,"['Update TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete If', 'Delete Invocation', 'Delete Return', 'Insert ConstructorCall', 'Insert Return']","['TypeReference', 'ConstructorCall', 'VariableRead', 'TypeReference', 'LocalVariable', 'Literal', 'BinaryOperator', 'VariableRead', 'VariableRead', 'Invocation', 'Block', 'If', 'VariableRead']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'If', 'Invocation', 'Return', 'ConstructorCall', 'Return']",Partial Match,0.5,0.375,0.23076923076923078,0.2857142857142857,3,5,10
341,"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",583,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation']","['LocalVariable', 'ConstructorCall', 'VariableRead', 'VariableRead', 'VariableRead', 'Invocation', 'TypeAccess', 'Invocation', 'Literal', 'Invocation', 'Invocation']",Partial Match,0.625,0.7272727272727273,0.6153846153846154,0.6666666666666667,8,3,5
342,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . delete ( VAR_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) . delete ( METHOD_2 ( VAR_1 ) ) ; },"['Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",584,"['Delete LocalVariable', 'Delete Assignment', 'Delete If', 'Move Invocation']","['Invocation', 'Invocation', 'VariableRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Block', 'If']","['LocalVariable', 'Assignment', 'If', 'Invocation']",Partial Match,0.3333333333333333,0.75,0.3,0.4285714285714285,3,1,7
343,public TYPE_1 METHOD_1 ( java.lang.String token ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( token ) . METHOD_5 ( ) ; java.lang.String VAR_3 = VAR_1 . METHOD_6 ( ) ; return VAR_4 . METHOD_7 ( VAR_3 ) ; },public TYPE_1 METHOD_1 ( java.lang.String token ) { java.lang.String VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( token ) . METHOD_5 ( ) . METHOD_6 ( ) ; return VAR_4 . METHOD_7 ( VAR_3 ) ; },"['Update LocalVariable', 'Move TypeReference', 'Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",586,"['Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Move Invocation']","['LocalVariable', 'TypeReference', 'Invocation', 'Invocation', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['LocalVariable', 'TypeReference', 'Invocation', 'Invocation']",GPT Missed Nodes,0.75,1.0,0.5,0.6666666666666666,4,0,4
344,public void METHOD_1 ( android.view.View view ) { java.lang.String a = STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ; if ( ( VAR_1 ) != null ) VAR_2 . setText ( a ) ; },public void METHOD_1 ( android.view.View view ) { VAR_2 . setText ( VAR_1 . METHOD_2 ( ) ) ; },"['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",587,"['Delete LocalVariable', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete If']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'FieldRead', 'BinaryOperator', 'LocalVariable', 'FieldRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'If']",GPT Missed Nodes,0.6,1.0,0.42857142857142855,0.6,6,0,8
345,"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { VAR_1 . METHOD_3 ( STRING_1 , VAR_2 ) ; return STRING_2 ; } return STRING_3 ; }",public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return STRING_3 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",589,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'TypeAccess', 'VariableRead', 'Invocation', 'FieldRead', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'If', 'Invocation', 'Literal', 'Return', 'Literal']",GPT Missed Nodes,0.5454545454545454,0.875,0.4666666666666667,0.608695652173913,7,1,8
346,public int METHOD_1 ( ) { int result = VAR_1 ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { if ( VAR_3 ) result -= VAR_2 . METHOD_3 ( ) ; } return result ; },public int METHOD_1 ( ) { int result = getValue ( ) ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { if ( VAR_3 ) result -= VAR_2 . METHOD_3 ( ) ; } return result ; },"['Insert Invocation', 'Delete FieldRead']",591,"['Delete VariableRead', 'Insert Invocation']","['Invocation', 'FieldRead']","['VariableRead', 'Invocation']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
347,public java.lang.String getValue ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( ) ; if ( VAR_2 != null ) return VAR_2 ; else return STRING_1 ; },public java.lang.String getValue ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_1 ( ) ; },"['Insert Return', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",592,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete If', 'Delete VariableRead', 'Delete Literal', 'Delete Return']","['Return', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Return', 'Block', 'FieldRead', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'If', 'VariableRead', 'Literal', 'Return']",GPT Missed Nodes,0.7,0.8571428571428571,0.42857142857142855,0.5714285714285714,6,1,8
348,public static int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . isEmpty ( VAR_1 ) ) { return 0 ; } TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; return VAR_3 . METHOD_3 ( STRING_1 ) ; },public static int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . isEmpty ( VAR_1 ) ) { return 0 ; } return TYPE_3 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; },"['Update Invocation', 'Update TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",594,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Update Invocation', 'Insert TypeReference', 'Insert Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeReference', 'Invocation']",GPT Missed Nodes,0.8,0.6666666666666666,0.6666666666666666,0.6666666666666666,4,2,2
349,"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) . getName ( ) ; METHOD_3 ( VAR_2 ) ; TYPE_2 . METHOD_4 ( STRING_1 , STRING_2 , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) . getName ( ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",596,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'Literal', 'Literal', 'Invocation']",GPT Hallucinated Nodes,0.8333333333333334,0.75,0.5454545454545454,0.631578947368421,6,2,5
350,"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( STRING_1 ) ; METHOD_3 ( VAR_4 , VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",599,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'TypeReference', 'Literal', 'Invocation', 'VariableRead', 'VariableRead']",Partial Match,0.625,0.625,0.7142857142857143,0.6666666666666666,5,3,2
351,"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 context ) throws java.io.IOException { java.lang.String value = VAR_1 . METHOD_2 ( VAR_2 . String class ) ; TYPE_1 VAR_3 = TYPE_4 . METHOD_3 ( value ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 context ) throws java.io.IOException { java.lang.String value = VAR_1 . METHOD_2 ( VAR_2 . String class ) ; return TYPE_4 . METHOD_3 ( value ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",602,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Assignment', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'Assignment', 'VariableRead', 'Return']",Partial Match,0.5,0.6,0.75,0.6666666666666665,3,2,1
352,"public boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , set ) ; boolean result = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; return result ; }","public boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , set ) ; return VAR_2 . METHOD_3 ( ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",603,"['Delete LocalVariable', 'Delete Assignment', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Assignment', 'VariableRead', 'Return']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,2,2,4
353,protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( new TYPE_3 ( ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Invocation']",605,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete Invocation']","['TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'ConstructorCall', 'Invocation']","['TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.8333333333333334,1.0,0.875,0.9333333333333333,7,0,1
354,public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_4 ( VAR_2 ) ; },"['Insert TypeAccess', 'Insert TypeAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",606,"['Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead']","['TypeAccess', 'TypeAccess', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeReference', 'Invocation', 'FieldRead']",Partial Match,0.6666666666666666,0.875,0.5833333333333334,0.7000000000000001,7,1,5
355,"public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 VAR_3 = null ; if ( ( VAR_4 ) != null ) { TYPE_3 . METHOD_2 ( VAR_4 , VAR_3 ) ; VAR_4 = null ; } }",public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_4 ) != null ) { TYPE_3 . METHOD_2 ( VAR_4 ) ; VAR_4 = null ; } },"['Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete VariableRead']",608,"['Delete LocalVariable', 'Delete Literal', 'Delete TypeReference', 'Delete VariableRead', 'Update Invocation']","['TypeReference', 'Literal', 'LocalVariable', 'VariableRead']","['LocalVariable', 'Literal', 'TypeReference', 'VariableRead', 'Invocation']",GPT Hallucinated Nodes,0.8,0.8,1.0,0.888888888888889,4,1,0
356,"void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_1 class ) ; METHOD_3 ( intent ) ; }",void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",611,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference']","['TypeReference', 'Invocation', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'Invocation', 'Invocation', 'TypeReference', 'TypeReference', 'TypeReference']",GPT Missed Nodes,0.6666666666666666,0.7142857142857143,0.7142857142857143,0.7142857142857143,5,2,2
357,"public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( INT_1 , INT_1 , INT_1 ) ; VAR_1 . assertEquals ( VAR_2 , TYPE_2 . METHOD_2 ( t ) ) ; }",public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",612,"['Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['TypeReference', 'FieldRead', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'Literal', 'Literal', 'Literal', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead']",Partial Match,0.75,0.6363636363636364,0.5833333333333334,0.6086956521739131,7,4,5
358,public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = ( VAR_1 . METHOD_2 ( ) ) + 1 ; for ( int i = VAR_3 ; i < VAR_2 ; i ++ ) { METHOD_3 ( VAR_1 . METHOD_4 ( i ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = ( VAR_1 . METHOD_2 ( ) ) + 1 ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { METHOD_3 ( VAR_1 . METHOD_4 ( i ) ) ; } },"['Insert Literal', 'Delete FieldRead']",614,"['Delete VariableRead', 'Insert Literal']","['Literal', 'FieldRead']","['VariableRead', 'Literal']",Partial Match,0.3333333333333333,0.5,0.5,0.5,1,1,1
359,public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( VAR_1 class ) ; TYPE_3 VAR_2 = new TYPE_3 ( STRING_1 ) ; TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( ) ) . METHOD_6 ( VAR_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( VAR_1 class ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",615,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'Literal', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']",Partial Match,0.5,0.8571428571428571,0.6,0.7058823529411764,6,1,4
360,public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( false ) ; VAR_3 . METHOD_4 ( ) ; if ( VAR_4 . equals ( STRING_1 ) ) { new TYPE_2 ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Block', 'Delete If']",617,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete If']","['TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'Literal', 'Invocation', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'ConstructorCall', 'Block', 'If']","['LocalVariable', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'Literal', 'FieldRead', 'Invocation', 'Block', 'ConstructorCall', 'FieldRead', 'If']",GPT Missed Nodes,0.7,0.75,0.5625,0.6428571428571429,9,3,7
361,"TYPE_1 build ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; return VAR_1 ; }",TYPE_1 build ( ) throws java.io.IOException { return new TYPE_1 ( this ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']",619,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'VariableRead', 'Return']",Partial Match,0.5,0.5,0.375,0.42857142857142855,3,3,5
362,"public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_1 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ) ; }",public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",621,"['Delete LocalVariable', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['LocalVariable', 'TypeReference', 'ConstructorCall', 'TypeAccess', 'TypeAccess', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'FieldRead', 'FieldRead', 'FieldRead', 'FieldRead', 'FieldRead']",GPT Missed Nodes,0.8571428571428571,0.5714285714285714,0.5333333333333333,0.5517241379310344,8,6,7
363,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; return new TYPE_3 ( VAR_3 , VAR_4 , 0 , 0 ) ; }",public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall']",622,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Insert Literal']","['Literal', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation', 'Invocation', 'VariableRead', 'Invocation', 'FieldRead', 'FieldRead', 'Literal', 'Literal', 'ConstructorCall']","['LocalVariable', 'ConstructorCall', 'FieldRead', 'Invocation', 'Invocation', 'Invocation', 'Invocation', 'FieldRead', 'FieldRead', 'Literal', 'Literal', 'ConstructorCall', 'Literal']",GPT Missed Nodes,0.625,0.8461538461538461,0.7857142857142857,0.8148148148148148,11,2,3
364,public static int add ( java.lang.String text ) { if ( text == STRING_1 ) { return 0 ; } int result = java.lang.Integer.parseInt ( text ) ; return result ; },public static int add ( java.lang.String text ) { return 0 ; },"['Move Return', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Return']",623,"['Delete If', 'Delete Literal', 'Delete Parameter', 'Delete Return', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead']","['Return', 'VariableRead', 'FieldRead', 'BinaryOperator', 'Block', 'If', 'TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'VariableRead', 'Return']","['If', 'Literal', 'Parameter', 'Return', 'LocalVariable', 'TypeReference', 'TypeAccess', 'Invocation', 'VariableRead']",Partial Match,0.5833333333333334,0.7777777777777778,0.5384615384615384,0.6363636363636364,7,2,6
365,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( INT_1 ) ; VAR_1 . METHOD_1 ( INT_2 ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",624,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation', 'Invocation']","['LocalVariable', 'ConstructorCall', 'Invocation', 'Invocation', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.5714285714285714,1.0,0.5714285714285714,0.7272727272727273,8,0,6
366,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( INT_1 ) ; TYPE_2 list = new TYPE_2 ( ) ; list . METHOD_2 ( VAR_1 ) ; list . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",625,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Invocation', 'TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'VariableRead', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'LocalVariable', 'ConstructorCall', 'Assignment', 'Invocation', 'Invocation']",Partial Match,0.42857142857142855,0.7777777777777778,0.5,0.6086956521739131,7,2,7
367,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",627,"['Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'LocalVariable', 'VariableRead']",GPT Missed Nodes,0.75,1.0,0.75,0.8571428571428571,3,0,1
368,"public void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . x , VAR_3 . y ) . equals ( VAR_4 ) ; if ( VAR_5 ) VAR_1 = ! VAR_1 ; if ( VAR_1 ) { super . METHOD_1 ( ) ; } }","public void METHOD_1 ( ) { boolean VAR_1 = ( VAR_2 . METHOD_2 ( VAR_3 . x , VAR_3 . y ) ) == ( VAR_4 ) ; if ( VAR_5 ) VAR_1 = ! VAR_1 ; if ( VAR_1 ) { super . METHOD_1 ( ) ; } }","['Insert BinaryOperator', 'Move Invocation', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",629,"['Insert BinaryOperator', 'Delete Invocation']","['BinaryOperator', 'Invocation', 'FieldRead', 'TypeAccess', 'Invocation']","['BinaryOperator', 'Invocation']",GPT Missed Nodes,0.5,1.0,0.4,0.5714285714285715,2,0,3
369,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess']",630,"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Update Invocation']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess']","['TypeReference', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'Invocation']",GPT Missed Nodes,0.8,0.6666666666666666,0.5714285714285714,0.6153846153846153,4,2,3
370,public static java.lang.String METHOD_1 ( java.lang.Integer VAR_1 ) { java.lang.String VAR_2 = VAR_3 . get ( VAR_1 ) ; return VAR_2 ; },public static java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_3 . get ( VAR_1 ) ; },"['Update TypeReference', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",631,"['Update TypeReference', 'Update Parameter', 'Delete LocalVariable', 'Delete VariableRead']","['TypeReference', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead']","['TypeReference', 'Parameter', 'LocalVariable', 'VariableRead']",Partial Match,0.6,0.75,0.6,0.6666666666666665,3,1,2
371,protected void METHOD_1 ( ) { double VAR_1 = 0 ; if ( VAR_1 < FLOAT_1 ) { fail ( STRING_1 ) ; } else if ( VAR_1 < FLOAT_2 ) { throw new TYPE_1 ( STRING_2 ) ; } },protected void METHOD_1 ( ) { double VAR_1 = java.lang.Math.random ( ) ; if ( VAR_1 < FLOAT_1 ) { fail ( STRING_1 ) ; } else if ( VAR_1 < FLOAT_2 ) { throw new TYPE_1 ( STRING_2 ) ; } },"['Insert Invocation', 'Insert TypeAccess', 'Delete Literal']",633,"['Insert TypeAccess', 'Insert Invocation', 'Delete Literal']","['Invocation', 'TypeAccess', 'Literal']","['TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
372,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; try { } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },public static void main ( java.lang.String [ ] args ) { try { } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",634,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.8,0.888888888888889,4,0,1
373,public final java.util.List < TYPE_1 > TYPE_2 ( ) { java.util.List < TYPE_1 > TYPE_3 = new java.util.ArrayList < > ( ) ; this . TYPE_2 . METHOD_1 ( TYPE_3 : : METHOD_2 ) ; return TYPE_3 ; },public final java.util.List < TYPE_1 > TYPE_2 ( ) { java.util.List < TYPE_1 > TYPE_2 = new java.util.ArrayList < > ( ) ; this . TYPE_2 . METHOD_1 ( TYPE_2 : : METHOD_2 ) ; return TYPE_2 ; },"['Update LocalVariable', 'Update VariableRead', 'Update VariableRead']",636,"['Update LocalVariable', 'Update VariableRead', 'Update VariableRead']","['LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'VariableRead', 'VariableRead']",Exact Match,1.0,1.0,1.0,1.0,3,0,0
374,public TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_3 = VAR_1 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_3 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; return VAR_3 ; },"['Move Invocation', 'Insert FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete VariableRead']",637,"['Delete LocalVariable', 'Update VariableRead']","['Invocation', 'FieldRead', 'TypeReference', 'LocalVariable', 'VariableRead', 'VariableRead']","['LocalVariable', 'VariableRead']",GPT Missed Nodes,0.4,0.5,0.16666666666666666,0.25,1,1,5
375,"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , 0 ) ; VAR_4 . commit ( ) ; METHOD_4 ( new android.content.Intent ( METHOD_5 ( ) , VAR_5 class ) ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",638,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'Literal', 'Invocation', 'TypeAccess', 'Invocation', 'Invocation', 'FieldRead', 'ConstructorCall', 'Invocation']","['LocalVariable', 'FieldRead', 'Invocation', 'Literal', 'Literal', 'Invocation', 'FieldRead', 'Invocation', 'ConstructorCall', 'Invocation']",GPT Missed Nodes,0.625,0.8,0.5714285714285714,0.6666666666666666,8,2,6
376,public static void main ( java.lang.String [ ] args ) { int i ; java.lang.String VAR_1 = STRING_1 ; java.lang.System.out.println ( TYPE_1 . METHOD_1 ( VAR_1 ) ) ; java.lang.System.out.println ( TYPE_1 . METHOD_1 ( STRING_2 ) ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",639,"['Delete LocalVariable', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeAccess', 'FieldRead', 'TypeAccess', 'VariableRead', 'Invocation', 'Invocation', 'TypeAccess', 'FieldRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation']","['LocalVariable', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'Invocation', 'TypeAccess', 'FieldRead', 'FieldRead', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.9,0.5294117647058824,0.6666666666666667,9,1,8
377,"protected TYPE_1 METHOD_1 ( java.net.URL VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; return VAR_2 ; }","protected TYPE_1 METHOD_1 ( java.net.URL VAR_1 ) throws java.io.IOException { return new TYPE_2 ( VAR_3 , VAR_1 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",640,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Invocation', 'Delete VariableRead', 'Delete Return']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'Invocation', 'VariableRead', 'Return']",Partial Match,0.6666666666666666,0.6,0.5,0.5454545454545454,3,2,3
378,public java.util.Set < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < java.util.Set < TYPE_1 > > result = VAR_2 . get ( VAR_1 ) ; if ( result == null ) { return VAR_3 . value ( ) ; } return null ; },public java.util.Set < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . get ( VAR_1 ) . value ( ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",641,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete If', 'Delete Return']","['Invocation', 'Invocation', 'TypeReference', 'TypeReference', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'TypeAccess', 'Invocation', 'Return', 'Block', 'If', 'Literal']","['LocalVariable', 'Invocation', 'VariableRead', 'Literal', 'If', 'Return']",GPT Missed Nodes,0.6,1.0,0.4,0.5714285714285715,6,0,9
379,protected static TYPE_1 METHOD_1 ( int type ) { java.io.File VAR_1 = TYPE_2 . METHOD_2 ( type ) ; if ( VAR_1 != null ) return TYPE_1 . METHOD_3 ( VAR_1 ) ; else return null ; },protected static TYPE_1 METHOD_1 ( int type ) { return TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_2 ( type ) ) ; },"['Insert Return', 'Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",643,"['Delete LocalVariable', 'Delete FieldRead', 'Delete If', 'Delete Return', 'Delete TypeAccess', 'Delete Literal']","['Return', 'Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Return', 'Block', 'Literal', 'Return', 'Block', 'If']","['LocalVariable', 'FieldRead', 'If', 'Return', 'TypeAccess', 'Literal']",Partial Match,0.45454545454545453,0.6666666666666666,0.23529411764705882,0.3478260869565218,4,2,13
380,public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . main ( null ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",645,"['Delete TypeReference', 'Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Literal', 'Invocation']","['TypeReference', 'LocalVariable', 'ConstructorCall', 'TypeReference', 'TypeAccess', 'Invocation', 'Literal']",Exact Match,1.0,0.8571428571428571,1.0,0.923076923076923,6,1,0
381,public static void main ( java.lang.String [ ] args ) { TYPE_1 context = new TYPE_2 ( STRING_1 ) ; TYPE_3 VAR_1 = ( ( TYPE_3 ) ( context . METHOD_1 ( STRING_2 ) ) ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 context = new TYPE_2 ( STRING_1 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",647,"['Delete TypeReference', 'Delete TypeReference', 'Delete Literal', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeReference', 'VariableRead', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'FieldRead', 'VariableRead', 'Invocation', 'Invocation']","['TypeReference', 'TypeReference', 'Literal', 'ConstructorCall', 'LocalVariable', 'TypeReference', 'TypeReference', 'TypeReference', 'Invocation', 'Literal', 'Invocation', 'LocalVariable', 'TypeReference', 'FieldRead', 'FieldRead', 'Invocation']",Partial Match,0.5,0.4375,0.6363636363636364,0.5185185185185185,7,9,4
382,public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = new TYPE_4 ( VAR_1 ) ; VAR_3 . METHOD_2 ( new TYPE_5 ( VAR_4 ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; return VAR_1 ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",648,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation']","['TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'VariableRead', 'FieldRead', 'ConstructorCall', 'Invocation']","['LocalVariable', 'ConstructorCall', 'TypeReference', 'VariableRead', 'ConstructorCall', 'TypeReference', 'VariableRead', 'Invocation']",GPT Missed Nodes,0.8333333333333334,0.875,0.875,0.875,7,1,1
383,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this . VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , null , null , STRING_1 , STRING_2 , STRING_3 , false ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this . VAR_2 , true ) ; boolean result = VAR_1 . METHOD_2 ( null , null , null , STRING_1 , STRING_2 , STRING_3 , false , true ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert Literal']",649,"['Insert LocalVariable', 'Insert Literal']","['LocalVariable', 'TypeReference', 'Invocation', 'Literal']","['LocalVariable', 'Literal']",GPT Missed Nodes,0.5,1.0,0.5,0.6666666666666666,2,0,2
384,public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete VariableRead']",650,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'Invocation', 'VariableRead']","['LocalVariable', 'ConstructorCall', 'FieldRead', 'Invocation', 'Literal', 'VariableRead']",Partial Match,0.7142857142857143,0.6666666666666666,0.5714285714285714,0.6153846153846153,4,2,3
385,public static boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = VAR_3 . equals ( TYPE_1 . METHOD_2 ( ) ) ; if ( VAR_2 ) { TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } return VAR_2 ; },public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return true ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",653,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Insert Literal']","['Literal', 'TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'LocalVariable', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation', 'Invocation', 'Block', 'If', 'VariableRead']","['LocalVariable', 'FieldRead', 'Invocation', 'TypeAccess', 'Invocation', 'If', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'Return', 'Literal']",Partial Match,0.5,0.8333333333333334,0.6666666666666666,0.7407407407407408,10,2,5
386,public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.System.out.println ( ( STRING_1 + VAR_2 ) ) ; return VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead']",655,"['Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'FieldRead', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation', 'VariableRead']","['TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'BinaryOperator', 'Literal', 'VariableRead', 'Return']",Partial Match,0.6666666666666666,0.7,0.6363636363636364,0.6666666666666666,7,3,4
387,"public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date time , java.lang.Long VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_2 , VAR_4 ) ; return null ; }","public java.util.List < TYPE_1 > METHOD_1 ( java.util.Date time , java.lang.Long VAR_1 ) { return null ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",658,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'TypeAccess', 'Invocation']","['LocalVariable', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.6,1.0,0.3333333333333333,0.5,3,0,6
388,"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = getContext ( ) ; if ( VAR_2 == null ) return ; TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_3 . METHOD_2 ( getContext ( ) , VAR_3 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete VariableRead']",659,"['Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete If']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'Return', 'Block', 'If', 'VariableRead']","['LocalVariable', 'Invocation', 'VariableRead', 'Literal', 'If']",GPT Missed Nodes,0.5555555555555556,0.8,0.4,0.5333333333333333,4,1,6
389,"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . setText ( VAR_5 ) ; VAR_6 . setText ( VAR_7 ) ; VAR_8 . setText ( VAR_9 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { }","['Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",661,"['Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'TypeAccess', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation']","['LocalVariable', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation', 'FieldRead', 'Invocation']",Partial Match,0.3333333333333333,0.5555555555555556,0.35714285714285715,0.43478260869565216,5,4,9
390,"public void METHOD_1 ( TYPE_1 p ) { TYPE_2 VAR_1 = new TYPE_3 ( p ) ; VAR_2 . show ( METHOD_2 ( ) , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 p ) { },"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",664,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete Literal']","['TypeReference', 'VariableRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation']","['LocalVariable', 'ConstructorCall', 'VariableRead', 'Invocation', 'Invocation', 'Invocation', 'TypeReference', 'TypeReference', 'Parameter', 'Literal']",Partial Match,0.625,0.6,0.75,0.6666666666666665,6,4,2
391,"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.String VAR_4 = TYPE_3 . METHOD_2 ( VAR_5 ) ; TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { java.lang.System.out.println ( STRING_1 ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",665,"['Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'TypeAccess', 'VariableRead', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeReference', 'LocalVariable', 'TypeAccess', 'Invocation', 'TypeAccess', 'Invocation', 'VariableRead', 'VariableRead', 'VariableRead']",Exact Match,1.0,0.7777777777777778,0.7,0.7368421052631577,7,2,3
392,"public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; TYPE_2 content = METHOD_3 ( VAR_3 ) ; if ( content != null ) METHOD_4 ( content ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",668,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead', 'Delete If']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead', 'If']",GPT Missed Nodes,0.5555555555555556,1.0,0.45454545454545453,0.625,5,0,6
393,public int METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_3 ) ; java.lang.Object size = VAR_1 . METHOD_3 ( VAR_2 ) ; if ( size != null ) { return ( ( java.lang.Integer ) ( size ) ) ; } return VAR_4 ; },public int METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object size = VAR_1 . METHOD_3 ( VAR_3 ) ; if ( size != null ) { return ( ( java.lang.Integer ) ( size ) ) ; } return VAR_4 ; },"['Update LocalVariable', 'Move TypeReference', 'Update Invocation', 'Move VariableRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable']",672,"['Delete TypeReference', 'Delete LocalVariable', 'Delete Invocation', 'Delete VariableRead']","['LocalVariable', 'TypeReference', 'Invocation', 'VariableRead', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable']","['TypeReference', 'LocalVariable', 'Invocation', 'VariableRead']",Exact Match,1.0,1.0,0.5,0.6666666666666666,4,0,4
394,"private long METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( ) ; long count = TYPE_2 . METHOD_3 ( VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; return count ; }","private long METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( ) ; return TYPE_2 . METHOD_3 ( VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead']",673,"['Delete LocalVariable', 'Delete Assignment', 'Delete VariableRead', 'Delete Return']","['Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation', 'VariableRead']","['LocalVariable', 'Assignment', 'VariableRead', 'Return']",Partial Match,0.3333333333333333,0.5,0.3333333333333333,0.4,2,2,4
395,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 . getValue ( ) ) ; if ( VAR_2 != null ) { VAR_5 . delete ( VAR_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 . delete ( VAR_3 . METHOD_2 ( VAR_4 . getValue ( ) ) ) ; },"['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",675,"['Delete LocalVariable', 'Delete If', 'Move Invocation']","['Invocation', 'TypeAccess', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'If', 'Invocation']",GPT Missed Nodes,0.3333333333333333,1.0,0.25,0.4,3,0,9
396,public void handle ( TYPE_1 event ) { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { METHOD_3 ( VAR_1 ) ; } },public void handle ( TYPE_1 event ) { METHOD_3 ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",676,"['Delete LocalVariable', 'Delete VariableRead', 'Delete If']","['Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'VariableRead', 'Invocation', 'Block', 'If']","['LocalVariable', 'VariableRead', 'If']",GPT Missed Nodes,0.375,1.0,0.2727272727272727,0.42857142857142855,3,0,8
397,public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . getValue ( VAR_4 class ) ; if ( VAR_2 . METHOD_2 ( ) ) { VAR_5 . setText ( STRING_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",678,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete If', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal']","['TypeReference', 'TypeAccess', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Invocation', 'TypeAccess', 'TypeAccess', 'Invocation', 'Block', 'If']","['LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'If', 'Invocation', 'FieldRead', 'Invocation', 'Literal']",Partial Match,0.5555555555555556,0.7777777777777778,0.5833333333333334,0.6666666666666666,7,2,5
398,"public int METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , java.lang.String VAR_4 ) { METHOD_2 ( name , VAR_1 , VAR_2 , VAR_3 , 0 , VAR_4 , STRING_1 ) ; return 0 ; }","public int METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , java.lang.String VAR_4 ) { int i = METHOD_2 ( name , VAR_1 , VAR_2 , VAR_3 , 0 , VAR_4 , STRING_1 ) ; return 0 ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation']",679,['Insert LocalVariable'],"['LocalVariable', 'TypeReference', 'Invocation']",['LocalVariable'],GPT Missed Nodes,0.3333333333333333,1.0,0.3333333333333333,0.5,1,0,2
399,"private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String url = ( VAR_2 ) + VAR_1 ; return VAR_3 . METHOD_2 ( url , VAR_4 . String class ) ; }","private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String url = new java.lang.StringBuilder ( VAR_2 ) . append ( VAR_1 ) . toString ( ) ; return VAR_3 . METHOD_2 ( url , VAR_4 . String class ) ; }","['Insert Invocation', 'Insert Invocation', 'Insert ConstructorCall', 'Move VariableRead', 'Move FieldRead', 'Delete BinaryOperator']",680,"['Insert ConstructorCall', 'Insert TypeReference', 'Insert Invocation', 'Insert Invocation', 'Delete BinaryOperator']","['Invocation', 'Invocation', 'ConstructorCall', 'VariableRead', 'FieldRead', 'BinaryOperator']","['ConstructorCall', 'TypeReference', 'Invocation', 'Invocation', 'BinaryOperator']",Partial Match,0.5,0.8,0.6666666666666666,0.7272727272727272,4,1,2
400,private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . getName ( ) . toLowerCase ( ) ) ; return VAR_4 . METHOD_3 ( VAR_2 ) ? VAR_5 . get ( VAR_2 ) : VAR_6 ; },private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . getName ( ) ) ; return VAR_4 . METHOD_3 ( VAR_2 ) ? VAR_5 . get ( VAR_2 ) : VAR_6 ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete Invocation']",683,['Delete Invocation'],"['Invocation', 'Invocation', 'TypeAccess', 'Invocation']",['Invocation'],GPT Missed Nodes,0.5,1.0,0.25,0.4,1,0,3
401,public TYPE_1 METHOD_1 ( int i ) { TYPE_2 < TYPE_1 > node = METHOD_2 ( i ) ; VAR_1 . remove ( ) ; return node . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( int i ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",684,"['Delete LocalVariable', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Insert Literal', 'Update Return']","['Literal', 'TypeReference', 'TypeReference', 'VariableRead', 'Invocation', 'LocalVariable', 'TypeAccess', 'Invocation', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation', 'Invocation', 'FieldRead', 'Literal', 'Return']",Partial Match,0.375,0.6666666666666666,0.4,0.5,4,2,6
402,"public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String string = getString ( STRING_1 ) ; if ( string == null ) return STRING_2 ; put ( STRING_1 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { put ( STRING_1 , VAR_1 ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",685,"['Delete LocalVariable', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Literal', 'Delete If', 'Delete Return', 'Delete Literal']","['TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead', 'Literal', 'BinaryOperator', 'FieldRead', 'Return', 'Block', 'If']","['LocalVariable', 'Invocation', 'BinaryOperator', 'Literal', 'If', 'Return', 'Literal']",GPT Missed Nodes,0.5454545454545454,0.8571428571428571,0.5454545454545454,0.6666666666666665,6,1,5
403,"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { int VAR_2 = position ; java.lang.String VAR_3 = VAR_4 . METHOD_2 ( position ) . toString ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { int VAR_2 = position ; java.lang.String VAR_3 = ( ( java.lang.String ) ( VAR_4 . METHOD_2 ( position ) ) ) ; }","['Move Invocation', 'Insert TypeReference', 'Delete Invocation']",686,"['Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference', 'Insert TypeReference']","['Invocation', 'TypeReference', 'Invocation']","['TypeReference', 'TypeReference', 'TypeReference', 'TypeReference', 'TypeReference']",GPT Missed Nodes,0.5,0.2,0.3333333333333333,0.25,1,4,2
404,public static void main ( java.lang.String [ ] args ) throws java.io.IOException { int VAR_1 = INT_1 ; int VAR_2 = 0 ; int VAR_3 = INT_2 ; int VAR_4 = INT_1 ; java.lang.System.out.println ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.io.IOException { },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",687,"['Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete LocalVariable', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']","['TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'Literal', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeReference', 'FieldRead', 'LocalVariable', 'TypeAccess', 'FieldRead', 'Invocation']","['LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'LocalVariable', 'Literal', 'TypeAccess', 'TypeAccess', 'Invocation']",GPT Missed Nodes,0.6666666666666666,0.6363636363636364,0.4666666666666667,0.5384615384615385,7,4,8
405,public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.io.IOException { new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",689,"['Delete LocalVariable', 'Delete Invocation']","['ConstructorCall', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'Invocation']",GPT Missed Nodes,0.4,1.0,0.4,0.5714285714285715,2,0,3
406,"public java.util.Set < java.lang.String > METHOD_1 ( ) { java.util.Set < java.lang.String > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; TYPE_1 . METHOD_3 ( STRING_2 , ( STRING_3 + VAR_1 ) ) ; return VAR_1 ; }","public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete VariableRead']",690,"['Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator']","['Invocation', 'TypeReference', 'TypeReference', 'LocalVariable', 'TypeAccess', 'TypeAccess', 'FieldRead', 'VariableRead', 'BinaryOperator', 'Invocation', 'VariableRead']","['LocalVariable', 'TypeAccess', 'Invocation', 'Literal', 'Literal', 'VariableRead', 'BinaryOperator']",Partial Match,0.625,0.7142857142857143,0.45454545454545453,0.5555555555555556,5,2,6
407,"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( FLOAT_1 , FLOAT_2 ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 . assertEquals ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( FLOAT_1 , FLOAT_2 ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 . assertEquals ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ; }","['Insert ConstructorCall', 'Insert FieldRead', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",691,"['Delete TypeAccess', 'Delete Invocation', 'Insert ConstructorCall']","['ConstructorCall', 'FieldRead', 'FieldRead', 'TypeAccess', 'TypeAccess', 'TypeAccess', 'Invocation']","['TypeAccess', 'Invocation', 'ConstructorCall']",GPT Missed Nodes,0.75,1.0,0.42857142857142855,0.6,3,0,4
408,"public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( VAR_2 ) ) ; TYPE_3 VAR_3 = ( VAR_1 . METHOD_2 ( ) ) ? VAR_4 : VAR_5 ; return new TYPE_4 ( VAR_6 . toString ( ) , VAR_3 ) ; }","public TYPE_1 METHOD_1 ( ) { TYPE_3 VAR_3 = ( VAR_2 . METHOD_2 ( ) ) ? VAR_4 : VAR_5 ; return new TYPE_4 ( VAR_6 . toString ( ) , VAR_3 ) ; }","['Insert TypeAccess', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead']",692,"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete LocalVariable']","['TypeAccess', 'TypeReference', 'TypeReference', 'FieldRead', 'LocalVariable', 'VariableRead']","['TypeReference', 'TypeReference', 'VariableRead', 'Assignment', 'LocalVariable']",Partial Match,0.5,0.8,0.6666666666666666,0.7272727272727272,4,1,2
409,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; return VAR_3 ; }","private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; return VAR_3 ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable']",693,['Delete LocalVariable'],"['TypeReference', 'VariableRead', 'VariableRead', 'ConstructorCall', 'LocalVariable']",['LocalVariable'],GPT Missed Nodes,0.25,1.0,0.2,0.33333333333333337,1,0,4
410,public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 date = METHOD_2 ( VAR_1 ) ; return METHOD_1 ( date ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return new TYPE_1 ( METHOD_2 ( VAR_1 ) . getTime ( ) ) ; },"['Insert ConstructorCall', 'Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",695,"['Delete LocalVariable', 'Delete VariableRead', 'Insert ConstructorCall', 'Insert Invocation']","['ConstructorCall', 'Invocation', 'Invocation', 'TypeReference', 'LocalVariable', 'VariableRead', 'Invocation']","['LocalVariable', 'VariableRead', 'ConstructorCall', 'Invocation']",GPT Missed Nodes,0.8,1.0,0.5714285714285714,0.7272727272727273,4,0,3
411,"protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; return new TYPE_4 ( VAR_5 ) ; }",protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_4 ( VAR_5 ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",697,"['Delete LocalVariable', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete Invocation']","['TypeReference', 'FieldRead', 'FieldRead', 'ConstructorCall', 'LocalVariable', 'TypeAccess', 'VariableRead', 'Invocation']","['LocalVariable', 'ConstructorCall', 'Assignment', 'FieldRead', 'Invocation']",Partial Match,0.5,0.8,0.5,0.6153846153846154,4,1,4
412,public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String file ) throws java.io.IOException { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( new java.io.File ( file ) ) ; java.util.List < java.lang.String > VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; return VAR_2 ; },public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String file ) throws java.io.IOException { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( new java.io.File ( file ) ) ; return VAR_1 ; },"['Move VariableRead', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead']",698,"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete VariableRead', 'Delete LocalVariable', 'Update VariableRead']","['VariableRead', 'TypeReference', 'TypeReference', 'TypeAccess', 'Invocation', 'LocalVariable', 'VariableRead']","['TypeReference', 'TypeReference', 'Invocation', 'VariableRead', 'LocalVariable', 'VariableRead']",GPT Missed Nodes,0.8,0.8333333333333334,0.7142857142857143,0.7692307692307692,5,1,2
413,"private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 query = METHOD_2 ( VAR_2 ) ; return METHOD_1 ( VAR_1 , query , null ) ; }","private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 query = METHOD_2 ( VAR_2 ) ; return METHOD_1 ( VAR_1 , query ) ; }",['Delete Literal'],700,['Delete Literal'],['Literal'],['Literal'],Exact Match,1.0,1.0,1.0,1.0,1,0,0
414,"public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , this ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , this ) ; int a = 1 ; }","['Insert LocalVariable', 'Insert TypeReference', 'Insert Literal']",701,"['Insert LocalVariable', 'Insert Literal']","['LocalVariable', 'TypeReference', 'Literal']","['LocalVariable', 'Literal']",GPT Missed Nodes,0.6666666666666666,1.0,0.6666666666666666,0.8,2,0,1
