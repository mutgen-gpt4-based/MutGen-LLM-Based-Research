fixed,buggy,baseline_ast_gumtree,line_id_tp_dataset
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = METHOD_4 ( ) ; VAR_4 = METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1
public double METHOD_1 ( ) { VAR_1 = ( ( VAR_2 ) * ( VAR_3 ) ) + ( VAR_2 ) ; return VAR_1 ; },public double METHOD_1 ( ) { return 0 ; },"['Insert Literal', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead']",2
public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = STRING_1 ; VAR_7 = STRING_1 ; VAR_8 = 0 ; VAR_9 = STRING_1 ; VAR_10 = 0 ; VAR_11 = VAR_12 ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = STRING_1 ; VAR_7 = STRING_1 ; VAR_8 = 0 ; VAR_9 = 0 ; VAR_10 = 0 ; VAR_11 = VAR_12 ; },"['Insert Literal', 'Delete FieldRead']",5
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( VAR_3 , STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_4 = getActivity ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",6
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_2 = new TYPE_1 ( ) . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },"['Insert Assignment', 'Move FieldWrite', 'Insert Invocation', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7
public void METHOD_1 ( ) { VAR_1 = VAR_2 . getValue ( ) ; VAR_3 = false ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . setText ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . getValue ( ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . setText ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",9
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 . size ( ) ) > 0 ) { VAR_4 . METHOD_2 ( VAR_3 . get ( 0 ) ) ; } METHOD_3 ( VAR_5 ) ; VAR_6 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 . size ( ) ) > 0 ) { VAR_4 . METHOD_2 ( VAR_3 . get ( 0 ) ) ; } METHOD_3 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",10
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = false ; }",public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",11
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) . METHOD_4 ( VAR_2 , STRING_1 ) ; }","public void METHOD_1 ( ) { METHOD_3 ( ) . METHOD_4 ( VAR_2 , STRING_1 ) ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",13
"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( ) . get ( STRING_1 ) ) ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( VAR_2 + STRING_3 ) ) ; VAR_3 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( ) . get ( STRING_1 ) ) ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( VAR_2 + STRING_3 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",14
private static void METHOD_1 ( ) { VAR_1 . date = new java.util.Date ( ) ; VAR_2 = VAR_3 . format ( VAR_1 . date ) ; java.lang.System.out.println ( VAR_2 ) ; },private static void METHOD_1 ( ) { VAR_2 = VAR_3 . format ( VAR_1 . date ) ; java.lang.System.out.println ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",15
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ( VAR_2 . getId ( ) ) != 1 ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; } else { VAR_1 = null ; } } return VAR_3 ; },public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; } return VAR_3 ; },"['Move If', 'Move BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",16
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",17
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = false ; METHOD_3 ( VAR_6 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . setText ( STRING_1 ) ; METHOD_3 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",18
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = 0 ; METHOD_2 ( false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",19
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ) - > VAR_1 = false , INT_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = false ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",20
"public void open ( java.lang.String url , java.io.File VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { this . url = url ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; METHOD_1 ( ) ; }","public void open ( java.lang.String url , java.io.File VAR_1 , java.lang.String VAR_2 ) { this . url = url ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; METHOD_1 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",21
"public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 , java.io.IOException { TYPE_4 VAR_1 = METHOD_2 ( ) ; response = VAR_2 . open ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 , java.io.IOException { TYPE_4 VAR_1 = METHOD_2 ( ) ; java.lang.String response = VAR_2 . open ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; return VAR_3 ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",22
"public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , VAR_1 ) . start ( ) ; VAR_2 . startTime = TYPE_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , VAR_1 ) . start ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",23
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_3 = VAR_4 ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; VAR_2 = VAR_2 . METHOD_4 ( ) ; VAR_3 = VAR_4 ; METHOD_5 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete Invocation']",24
"public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_1 ( 0 , 0 ) ; VAR_1 . METHOD_2 ( INT_1 , 0 ) ; }","public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( 0 , 0 ) ; VAR_1 . METHOD_2 ( INT_1 , 0 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",25
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_3 . METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",26
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",27
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_3 ; METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; } else { METHOD_4 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( true ) ; } else { METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",28
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",29
public void METHOD_1 ( ) { VAR_1 . update ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . update ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",30
"public void METHOD_1 ( ) { result = 0 ; VAR_1 = VAR_2 . getContext ( ) . METHOD_2 ( ) ; file = new java.io.File ( VAR_1 , VAR_3 ) ; }",public void METHOD_1 ( ) { result = 0 ; file = new java.io.File ( VAR_3 ) ; },"['Update ConstructorCall', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead']",31
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",32
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",33
"public void METHOD_1 ( int [ ] [ ] VAR_1 , java.util.List < TYPE_1 > VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; }","public void METHOD_1 ( int [ ] [ ] VAR_1 , java.util.List < TYPE_1 > VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; METHOD_2 ( ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Insert ThisAccess']",34
public long METHOD_1 ( ) { long temp = VAR_1 ; VAR_2 . info ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_3 ) ) ) ; VAR_1 = VAR_3 ; return temp ; },public long METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",35
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = true ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . start ( ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . start ( ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",36
"public boolean METHOD_1 ( java.lang.String query ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + query ) ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( query ) ; VAR_3 = query ; VAR_4 . setEnabled ( false ) ; return true ; }","public boolean METHOD_1 ( java.lang.String query ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + query ) ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( query ) ; VAR_4 . setEnabled ( false ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",37
void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess']",38
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",39
"protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = false ; METHOD_2 ( false ) ; METHOD_3 ( VAR_2 , result . METHOD_4 ( ) ) ; METHOD_5 ( new java.util.HashSet < java.lang.String > ( ) ) ; }","protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( false ) ; METHOD_3 ( VAR_2 , result . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ConstructorCall', 'Delete Invocation']",40
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",41
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; text = STRING_1 ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( new TYPE_2 ( this , VAR_3 , STRING_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_4 ( new TYPE_2 ( this , VAR_3 , STRING_2 ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",42
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_4 . setEnabled ( METHOD_2 ( VAR_2 ) ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { VAR_4 . setEnabled ( METHOD_2 ( VAR_2 ) ) ; METHOD_3 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",43
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",44
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",45
"public void METHOD_1 ( int index , TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( METHOD_2 ( ) , index , VAR_1 ) ; VAR_3 = null ; VAR_4 = null ; }","public void METHOD_1 ( int index , TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( METHOD_2 ( ) , index , VAR_1 ) ; VAR_3 = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",47
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == true ) { VAR_2 = true ; } else { VAR_2 = false ; } return VAR_2 ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == true ) { VAR_2 = true ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",48
public boolean execute ( java.lang.String VAR_1 ) throws TYPE_1 { METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_3 = VAR_2 . METHOD_2 ( ) ; } return super . execute ( VAR_1 ) ; },public boolean execute ( java.lang.String VAR_1 ) throws TYPE_1 { METHOD_1 ( ) ; return super . execute ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",49
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; if ( VAR_2 ) { TYPE_1 . METHOD_2 ( ) ; VAR_2 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",50
public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; if ( VAR_1 ) ( index ) ++ ; if ( ( index ) > INT_1 ) index = 0 ; },public void METHOD_1 ( ) { ( index ) ++ ; if ( ( index ) > INT_1 ) index = 0 ; },"['Move UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete Block', 'Delete If']",51
"public void execute ( TYPE_1 VAR_1 ) { if ( this . VAR_2 ) { this . VAR_3 . METHOD_1 ( INT_1 , INT_1 , VAR_1 ) ; this . VAR_2 = false ; } }","public void execute ( TYPE_1 VAR_1 ) { this . VAR_3 . METHOD_1 ( INT_1 , INT_1 , VAR_1 ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",52
"public void METHOD_1 ( java.lang.String error ) { METHOD_2 ( ( STRING_1 + error ) , true ) ; VAR_1 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.String error ) { METHOD_2 ( ( STRING_1 + error ) , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",53
public TYPE_1 METHOD_1 ( TYPE_1 t ) { METHOD_2 ( t ) ; return t ; },public TYPE_1 METHOD_1 ( TYPE_1 t ) { this . t = t ; return t ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation']",54
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { offset = ( offset ) - ( VAR_2 ) ; return new TYPE_2 ( offset ) ; } else return new TYPE_3 ( new TYPE_4 ( ) ) ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return null ; },"['Insert Return', 'Insert Literal', 'Delete VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return', 'Delete Block', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Return', 'Delete Block', 'Delete If']",55
private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = ( VAR_3 ) + 1 ; if ( ( VAR_1 ) == CHAR_1 ) { VAR_4 = ( VAR_4 ) + 1 ; VAR_3 = 0 ; } },private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = ( VAR_3 ) + 1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",57
public void METHOD_1 ( ) { VAR_1 = null ; params = null ; VAR_2 = 1 ; VAR_3 = INT_1 ; VAR_4 = 0 ; url = null ; VAR_5 = STRING_1 ; VAR_6 = INT_1 ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { params = null ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",58
public void METHOD_1 ( ) { VAR_1 = this ; new TYPE_1 ( ) ; },public void METHOD_1 ( ) { new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",59
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; VAR_3 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",60
void METHOD_1 ( ) { VAR_1 = true ; state . METHOD_1 ( ) ; },void METHOD_1 ( ) { state . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",62
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = VAR_1 ; },public java.lang.Boolean METHOD_1 ( java.lang.Boolean VAR_1 ) { return ( VAR_2 ) == VAR_1 ; },"['Update TypeReference', 'Insert Return', 'Insert BinaryOperator', 'Insert FieldRead', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",63
public void METHOD_1 ( android.content.Context VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; VAR_3 = null ; } },public void METHOD_1 ( android.content.Context VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",64
public void METHOD_1 ( int y ) { position = position . METHOD_2 ( y ) ; },public void METHOD_1 ( int y ) { position . METHOD_2 ( y ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",65
public synchronized void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; VAR_2 = 0 ; },"['Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",66
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",67
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; return VAR_3 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; return VAR_3 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",69
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; VAR_5 = null ; VAR_6 . METHOD_3 ( null ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",71
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = VAR_1 ; if ( ( ( VAR_3 ) != null ) && ( TYPE_1 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 = true ; } },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },"['Move BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",72
public TYPE_1 METHOD_1 ( ) { TYPE_1 tmp = VAR_1 ; VAR_1 = null ; return tmp ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",73
private void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_2 = position ; VAR_1 . METHOD_2 ( position ) ; } },private void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( position ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",74
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",75
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { getActivity ( ) . METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; VAR_1 = true ; } }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { getActivity ( ) . METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",76
public void METHOD_1 ( TYPE_1 item ) { VAR_1 [ VAR_2 ] = item ; if ( ( VAR_2 ) == ( VAR_3 . length ) ) { METHOD_2 ( ) ; } METHOD_3 ( VAR_2 ) ; ( VAR_2 ) ++ ; ( size ) ++ ; },public void METHOD_1 ( TYPE_1 item ) { VAR_1 [ ( ( VAR_2 ) ++ ) ] = item ; if ( ( VAR_2 ) == ( VAR_3 . length ) ) { METHOD_2 ( ) ; } METHOD_3 ( VAR_2 ) ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete FieldWrite', 'Delete UnaryOperator']",77
void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( VAR_2 ) == null ) ) ; VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; },void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( VAR_2 ) == null ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",78
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",79
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_3 . METHOD_1 ( VAR_4 , VAR_5 ) ) ; VAR_4 = null ; VAR_5 = null ; }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_3 . METHOD_1 ( VAR_4 , VAR_5 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",80
public void METHOD_1 ( java.util.List < TYPE_1 > obj ) { if ( null == obj ) return ; this . VAR_1 = new java.util.ArrayList ( ) ; this . VAR_1 . METHOD_2 ( obj ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > obj ) { this . VAR_1 = obj ; },"['Move VariableRead', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete ConstructorCall', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",81
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",82
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = null ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",83
public int METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_3 . getInt ( ( ( STRING_1 + ( op . METHOD_3 ( ) . toString ( ) ) ) + STRING_2 ) ) ; },public int METHOD_1 ( ) { return VAR_3 . getInt ( ( ( STRING_1 + ( op . METHOD_3 ( ) . toString ( ) ) ) + STRING_2 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",86
"public void METHOD_1 ( int VAR_1 ) { if ( ( METHOD_2 ( ) ) > VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 . size ( ) ) . METHOD_4 ( ) ; } }","public void METHOD_1 ( int VAR_1 ) { if ( ( METHOD_2 ( ) ) > VAR_1 ) { VAR_2 = VAR_2 . METHOD_3 ( 0 , VAR_1 ) ; } }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",87
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",88
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; if ( ( VAR_2 ) < ( VAR_3 ) ) { VAR_2 = ( VAR_2 ) + 1 ; } else { VAR_2 = 0 ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { VAR_2 = ( VAR_2 ) + 1 ; } else { VAR_2 = 0 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",89
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 , FLOAT_1 ) ) ; VAR_2 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 , FLOAT_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",90
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",91
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = sum ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },protected void METHOD_1 ( ) { VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",93
"public void METHOD_1 ( float length , float height ) { this . length = length ; this . height = height ; }","public void METHOD_1 ( float length , float height ) { this . length = length ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",94
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",95
public void METHOD_1 ( float f ) { VAR_1 . METHOD_2 ( f ) ; VAR_2 = f ; },public void METHOD_1 ( float f ) { VAR_1 . METHOD_2 ( f ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",96
public void METHOD_1 ( float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( METHOD_2 ( ) ) { VAR_2 += VAR_1 ; } },public void METHOD_1 ( float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( METHOD_2 ( ) ) { VAR_2 += VAR_1 ; } else { VAR_2 = 0.0F ; } },"['Insert Block', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",97
"public void getData ( ) { VAR_1 = VAR_2 . show ( getContext ( ) , STRING_1 , STRING_2 ) ; new TYPE_1 ( getContext ( ) , VAR_3 , VAR_4 , VAR_5 , this ) . execute ( ) ; }","public void getData ( ) { new TYPE_1 ( getContext ( ) , VAR_3 , VAR_4 , VAR_5 , this ) . execute ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",98
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",99
public TYPE_1 < TYPE_2 > METHOD_1 ( boolean value ) { this . VAR_1 = value ; if ( this . VAR_1 ) { this . VAR_2 = null ; this . VAR_3 = true ; } return this ; },public TYPE_1 < TYPE_2 > METHOD_1 ( boolean value ) { this . VAR_1 = value ; if ( this . VAR_1 ) { this . VAR_2 = null ; } return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",100
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",101
public void METHOD_1 ( ) { this . VAR_1 = java.lang.String . METHOD_2 ( ( ( int ) ( TYPE_1 . METHOD_3 ( ( ( ( java.lang.Math.random ( ) ) * INT_1 ) + 1 ) ) ) ) ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",102
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; android.content.Intent VAR_1 = new android.content.Intent ( context , VAR_2 class ) ; context . METHOD_3 ( VAR_1 ) ; VAR_3 = VAR_1 ; VAR_4 = context ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; android.content.Intent VAR_1 = new android.content.Intent ( context , VAR_2 class ) ; context . METHOD_3 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",103
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = ( VAR_1 . METHOD_2 ( ) ) + 1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",104
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; this . VAR_1 . METHOD_4 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",105
public TYPE_1 METHOD_1 ( ) { if ( null == ( status ) ) { status = VAR_1 ; } return status ; },public TYPE_1 METHOD_1 ( ) { return status ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",106
"public void METHOD_1 ( final TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; if ( ( VAR_2 ) < ( VAR_3 ) ) { VAR_4 = true ; VAR_5 . METHOD_2 ( VAR_6 , VAR_7 ) ; } else METHOD_3 ( ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; if ( ( VAR_2 ) < ( VAR_3 ) ) { VAR_5 . METHOD_2 ( VAR_6 , VAR_7 ) ; } else METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",107
"public static void show ( android.content.Context context , TYPE_1 listener ) { VAR_1 = true ; VAR_2 = listener ; context . METHOD_1 ( new android.content.Intent ( context , VAR_3 class ) ) ; }","public static void show ( android.content.Context context , TYPE_1 listener ) { context . METHOD_1 ( new android.content.Intent ( context , VAR_3 class ) ) ; VAR_2 = listener ; }","['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",108
"public void METHOD_1 ( ) { VAR_1 = false ; java.lang.String VAR_2 = STRING_1 ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) . replace ( VAR_5 , VAR_3 , VAR_2 ) . commit ( ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_2 = STRING_1 ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) . replace ( VAR_5 , VAR_3 , VAR_2 ) . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",109
public void start ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 = METHOD_1 ( ) ; VAR_3 . METHOD_2 ( TYPE_1 : : start ) ; },public void start ( ) { VAR_1 . info ( STRING_1 ) ; VAR_3 . METHOD_2 ( TYPE_1 : : start ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",110
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",111
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",112
"public void METHOD_1 ( ) { VAR_1 = this ; VAR_2 = new TYPE_1 ( VAR_1 , STRING_1 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_5 = VAR_1 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { this . VAR_1 = this ; this . VAR_3 = new TYPE_2 ( VAR_1 ) ; this . VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_5 = VAR_1 . METHOD_3 ( ) ; },"['Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",113
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( false ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( false ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",114
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( false ) ; VAR_2 = null ; if ( METHOD_3 ( VAR_1 ) ) { VAR_3 = true ; } else { VAR_3 = false ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( METHOD_3 ( VAR_1 ) ) { VAR_3 = true ; } else { VAR_3 = false ; } },"['Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",115
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = TYPE_1 . METHOD_2 ( this . VAR_2 ) ; return this . VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",117
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation']",118
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",119
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",120
"public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; operation = STRING_1 ; VAR_4 = true ; VAR_5 = false ; VAR_6 = true ; }","public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; operation = STRING_1 ; VAR_4 = true ; VAR_5 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",121
"public void METHOD_1 ( java.lang.Object VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_2 , ( ( VAR_3 . length ) + 1 ) ) ; VAR_2 [ ( ( VAR_3 . length ) - 1 ) ] = VAR_1 ; }",public void METHOD_1 ( java.lang.Object VAR_1 ) { VAR_2 [ VAR_3 . length ] = VAR_1 ; },"['Move FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete BinaryOperator']",122
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return TYPE_2 . METHOD_2 ( ) ; } return TYPE_2 . METHOD_3 ( new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ) ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return VAR_1 ; },"['Move FieldRead', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation']",123
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 0 , 0 ) ; VAR_2 = new TYPE_2 ( STRING_1 , VAR_1 , INT_1 , INT_1 , new TYPE_1 ( 1 , INT_2 ) , VAR_3 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 0 , 0 ) ; VAR_2 = new TYPE_2 ( STRING_1 , VAR_1 , INT_1 , INT_1 , 1 , INT_2 , VAR_3 ) ; }","['Move Literal', 'Move FieldRead', 'Delete ConstructorCall']",124
public void METHOD_1 ( ) { this . startTime = 0 ; this . VAR_1 = 0 ; VAR_2 = true ; VAR_3 = false ; },public void METHOD_1 ( ) { this . startTime = 0 ; this . endTime = 0 ; VAR_2 = true ; },"['Update FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",125
public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . getInt ( VAR_4 ) ; this . VAR_5 = this . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . getInt ( VAR_4 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",126
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",127
public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { context = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; return null ; },public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 ) ; return null ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",128
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; METHOD_4 ( ) ; } },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",129
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . status = VAR_3 ; this . VAR_4 = false ; },public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . status = VAR_3 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",130
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; if ( VAR_3 ) METHOD_2 ( ) ; else VAR_3 = true ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",131
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",133
private void init ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; this . VAR_3 = true ; METHOD_1 ( ) ; this . VAR_1 = VAR_1 ; if ( VAR_1 != null ) { this . message = VAR_4 . message ; } },private void init ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; this . VAR_3 = true ; METHOD_1 ( ) ; this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",134
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . getId ( ) , VAR_1 . METHOD_2 ( ) ) ; VAR_4 = VAR_3 . getId ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_3 . getId ( ) , VAR_1 . METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",136
private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_1 = false ; } else { VAR_2 . setText ( STRING_2 ) ; VAR_1 = true ; } VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",137
public static void init ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) . METHOD_1 ( VAR_2 ) . METHOD_2 ( INT_1 ) ; },public static void init ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",138
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) { this . METHOD_2 ( ) ; } if ( VAR_4 ) { VAR_5 . METHOD_3 ( VAR_6 ) ; } METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) { this . METHOD_2 ( ) ; } if ( VAR_4 = true ) { VAR_5 . METHOD_3 ( VAR_6 ) ; } METHOD_4 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead']",139
public static void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = null ; VAR_3 = new TYPE_1 ( STRING_1 ) . METHOD_2 ( ) ; VAR_4 = STRING_2 ; VAR_5 = STRING_2 ; },public static void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = null ; VAR_4 = STRING_2 ; VAR_5 = STRING_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",140
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_3 ( VAR_6 ) ; },private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",141
public int METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { if ( ( VAR_3 ) != null ) { VAR_1 = VAR_3 . METHOD_1 ( ) ; } } return VAR_1 ; },public int METHOD_1 ( ) { return VAR_3 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If', 'Delete FieldRead']",142
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; if ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) { VAR_4 = true ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",143
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_1 . METHOD_2 ( position ) . toString ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_1 . METHOD_2 ( position ) . toString ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",144
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( 1 ) ) ; },public void METHOD_1 ( ) { assertNotNull ( VAR_1 . METHOD_4 ( 1 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",145
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = STRING_1 ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",146
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setText ( ( ( ( ( VAR_2 . getText ( ) ) + ( TYPE_1 . METHOD_2 ( STRING_1 ) ) ) + STRING_2 ) + STRING_3 ) ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setText ( ( ( ( ( VAR_2 . getText ( ) ) + ( TYPE_1 . METHOD_2 ( STRING_1 ) ) ) + STRING_2 ) + STRING_3 ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",147
public void METHOD_1 ( byte y ) { this . value = y ; METHOD_2 ( ) ; },public void METHOD_1 ( byte y ) { value = y ; },"['Delete ThisAccess', 'Delete Invocation']",148
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . set ( null ) ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . set ( null ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",149
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 ; VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_5 ) , VAR_3 . METHOD_5 ( VAR_6 ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",150
public void METHOD_1 ( int position ) { VAR_1 = position ; },public void METHOD_1 ( int position ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",151
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 = false ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",152
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",153
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 listener ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = 0 ; VAR_8 . METHOD_2 ( VAR_9 , VAR_2 , listener ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 listener ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_8 . METHOD_2 ( VAR_9 , VAR_2 , listener ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",154
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",155
public void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . setEnabled ( true ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",156
public void update ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { super . update ( VAR_1 ) ; TYPE_2 p = ( ( TYPE_2 ) ( VAR_1 ) ) ; this . text = VAR_2 . getText ( ) ; } },public void update ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { super . update ( VAR_1 ) ; TYPE_2 p = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_2 . setText ( text ) ; } },"['Update Invocation', 'Move Invocation', 'Insert FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",157
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( ) ; VAR_7 . METHOD_5 ( VAR_8 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; VAR_6 . METHOD_4 ( ) ; VAR_7 . METHOD_5 ( VAR_8 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",158
public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.Collection < ? extends TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = new java.util.HashSet < > ( VAR_1 ) ; } else { this . VAR_1 = null ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Update TypeReference', 'Insert VariableRead', 'Insert Literal', 'Move Assignment', 'Insert Assignment', 'Insert ConstructorCall', 'Insert FieldWrite', 'Insert Literal', 'Move VariableRead', 'Insert ThisAccess']",159
"public void METHOD_1 ( ) { try ( TYPE_1 < java.lang.String , java.lang.String > VAR_1 = new TYPE_1 ( VAR_2 ) ) { while ( true ) { if ( VAR_3 ) { VAR_4 = METHOD_2 ( VAR_1 ) ; } } } }","public void METHOD_1 ( ) { try ( TYPE_1 < java.lang.String , java.lang.String > VAR_1 = new TYPE_1 ( VAR_2 ) ) { while ( true ) { if ( VAR_3 ) { long VAR_4 = METHOD_2 ( VAR_1 ) ; } } } }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",160
public TYPE_1 METHOD_1 ( int position ) { if ( position == 0 ) { return new TYPE_2 ( ) ; } else if ( position == 1 ) { VAR_1 = new TYPE_3 ( ) ; return VAR_1 ; } else { return null ; } },public TYPE_1 METHOD_1 ( int position ) { if ( position == 0 ) { return new TYPE_2 ( ) ; } else if ( position == 1 ) { return new TYPE_3 ( ) ; } else { return null ; } },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",161
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",162
public final void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) . set ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Wra', 'Delete Invocation', 'Delete Invocation']",164
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_1 ( this , VAR_3 , VAR_4 ) ; VAR_1 = true ; } }","public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( this , VAR_3 , VAR_4 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",166
public synchronized void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = true ; },public synchronized void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",167
"public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 , INT_1 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = new TYPE_2 ( VAR_3 ) ; VAR_4 . assertEquals ( VAR_1 . METHOD_4 ( VAR_2 ) , INT_1 ) ; }","public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 , INT_1 ) ; VAR_1 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",168
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",169
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",170
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Insert ThisAccess']",171
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",172
public void METHOD_1 ( TYPE_1 data ) { VAR_1 = data ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 data ) { VAR_1 = data ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",173
"public boolean METHOD_1 ( final TYPE_1 VAR_1 , final float VAR_2 , final float VAR_3 ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . VAR_4 . METHOD_4 ( ) ; TYPE_3 . METHOD_3 ( ) . VAR_5 = true ; return true ; }","public boolean METHOD_1 ( final TYPE_1 VAR_1 , final float VAR_2 , final float VAR_3 ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . VAR_4 . METHOD_4 ( ) ; return true ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",174
private void METHOD_1 ( ) { VAR_1 = true ; view . METHOD_2 ( ) ; VAR_2 = new TYPE_1 [ INT_1 ] ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_2 = new TYPE_1 [ INT_1 ] ; METHOD_3 ( ) ; view . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",175
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",176
public void METHOD_1 ( java.lang.String message ) { VAR_1 = message ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( message ) ; },public void METHOD_1 ( java.lang.String message ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( message ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",177
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = - 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",178
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ) ; VAR_3 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",179
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",180
public void METHOD_1 ( ) { listener = null ; VAR_1 = false ; this . METHOD_2 ( ) ; },public void METHOD_1 ( ) { listener = null ; this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",181
public void METHOD_1 ( TYPE_1 state ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( state ) ) ; super . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 state ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( state ) ) ; super . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",182
public TYPE_1 < double [ ] > METHOD_1 ( ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) this . VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 ) ; return TYPE_1 . METHOD_4 ( VAR_2 ) ; },public TYPE_1 < double [ ] > METHOD_1 ( ) { return TYPE_1 . METHOD_4 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",183
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 = false ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",184
"public TYPE_1 METHOD_1 ( int VAR_1 , java.util.List < TYPE_1 > list ) { if ( ( VAR_2 ) != null ) { this . VAR_3 = VAR_2 . METHOD_1 ( VAR_1 , list ) ; } else VAR_3 = null ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( int VAR_1 , java.util.List < TYPE_1 > list ) { this . VAR_3 = VAR_2 . METHOD_1 ( VAR_1 , list ) ; if ( ( VAR_3 ) != null ) return VAR_3 ; else { return null ; } }","['Move Assignment', 'Update FieldRead', 'Move Return', 'Insert Return', 'Move Literal', 'Delete FieldWrite', 'Delete Assignment']",187
private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( true ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",188
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",189
"private void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_1 ( this ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; }","private void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; new java.lang.Thread ( new TYPE_1 ( this ) ) . start ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",191
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( STRING_1 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( STRING_1 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",192
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_5 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",193
public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",194
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",195
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . start ( ) ; VAR_2 = true ; } else VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . start ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",198
protected void init ( ) { super . init ( ) ; VAR_1 = false ; METHOD_1 ( VAR_2 ) ; },protected void init ( ) { super . init ( ) ; METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",199
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_1 . METHOD_2 ( ) . toString ( ) ; METHOD_3 ( ) ; } VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_3 = VAR_1 . METHOD_2 ( ) . toString ( ) ; METHOD_3 ( ) ; }","['Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",200
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = METHOD_2 ( VAR_3 class ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_4 = METHOD_2 ( VAR_5 class ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = METHOD_2 ( VAR_3 class ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",201
private int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 ) ; return VAR_1 . METHOD_2 ( ) ; },private int METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",203
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { if ( ( first ) == true ) { first = false ; return VAR_3 ; } else { this . VAR_4 . add ( VAR_1 . METHOD_2 ( ) ) ; return VAR_5 ; } }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return VAR_5 ; }","['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",207
private void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_2 = false ; VAR_3 = 0 ; VAR_4 = VAR_5 ; METHOD_2 ( ) ; METHOD_3 ( VAR_6 ) ; VAR_7 . METHOD_4 ( ) ; VAR_8 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_4 ) != ( VAR_5 ) ) { VAR_4 = VAR_5 ; METHOD_2 ( ) ; METHOD_3 ( VAR_6 ) ; } VAR_7 . METHOD_4 ( ) ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert FieldRead', 'Move Assignment', 'Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",208
public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 = false ; },public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",209
protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object [ ] VAR_2 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; if ( ( VAR_1 . METHOD_5 ( ) ) != null ) { VAR_3 = VAR_1 . METHOD_5 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object [ ] VAR_2 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",211
public java.lang.String getTime ( ) { java.lang.String VAR_1 = time ; if ( VAR_1 == null ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_1 = VAR_3 . format ( new java.util.Date ( ) ) ; time = VAR_1 ; } return VAR_1 ; },public java.lang.String getTime ( ) { java.lang.String VAR_1 = time ; if ( VAR_1 == null ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_1 = VAR_3 . format ( new java.util.Date ( ) ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",212
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { VAR_5 = new java.lang.StringBuilder ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",213
public void METHOD_1 ( ) { VAR_1 += 1 ; VAR_2 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 += 1 ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",214
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",215
public void METHOD_1 ( TYPE_1 startTime ) { this . VAR_1 . set ( startTime ) ; },public void METHOD_1 ( TYPE_1 startTime ) { this . startTime = startTime ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",216
"public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; }","public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",218
public void update ( ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void update ( ) { java.util.ArrayList < java.lang.String > VAR_1 = VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert TypeReference', 'Delete FieldWrite', 'Delete Assignment']",220
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 . METHOD_2 ( this ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( this ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",221
long METHOD_1 ( ) { VAR_1 += ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_2 = - 1 ; return VAR_1 ; },long METHOD_1 ( ) { VAR_1 += ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",222
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 = TYPE_2 . METHOD_2 ( this . VAR_2 , METHOD_3 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation']",223
protected void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; } else { VAR_1 = null ; } },protected void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; } },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",224
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = false ; VAR_3 = false ; VAR_4 = 1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = false ; VAR_4 = 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",225
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",226
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( ) ; VAR_3 . title = VAR_4 . title ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( ) ; VAR_3 . title = VAR_4 . title ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",227
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",228
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",230
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_3 = new TYPE_1 ( VAR_4 , true ) ; } VAR_5 = VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_3 = new TYPE_1 ( VAR_4 , true ) ; } VAR_5 = VAR_2 . METHOD_2 ( VAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",231
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 , 0 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",232
"public TYPE_1 METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { view . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { return VAR_1 ; }","['Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",233
public final synchronized void METHOD_1 ( TYPE_1 out ) { if ( VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } replace = VAR_2 ; VAR_3 = true ; METHOD_2 ( out ) ; METHOD_3 ( ) ; VAR_1 = true ; },final synchronized void METHOD_1 ( TYPE_1 out ) { if ( VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_3 = true ; METHOD_2 ( out ) ; METHOD_3 ( ) ; VAR_1 = true ; },"['Delete Wra', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",235
public void handle ( TYPE_1 event ) { if ( VAR_1 ) java.lang.System.exit ( 0 ) ; else VAR_2 . result = STRING_1 ; },public void handle ( TYPE_1 event ) { if ( VAR_1 ) java.lang.System.exit ( 0 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block']",236
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_2 ( ) ; VAR_6 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; METHOD_2 ( ) ; VAR_6 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",237
public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) ; } else { VAR_1 . METHOD_4 ( ) ; } VAR_3 = false ; },public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) ; } else { VAR_1 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",238
public void METHOD_1 ( ) throws java.io.IOException { try ( final TYPE_1 VAR_1 = VAR_2 ) { if ( ! ( VAR_3 ) ) { VAR_3 = true ; VAR_1 . METHOD_2 ( ) ; } } },public void METHOD_1 ( ) throws java.io.IOException { try ( final TYPE_1 VAR_1 = VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",239
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",242
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ) ; },"['Update Invocation', 'Move Invocation', 'Delete Invocation']",243
public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",245
"public void init ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_4 = new TYPE_2 ( new TYPE_3 ( this . VAR_3 . METHOD_1 ( ) , VAR_5 ) ) ; }","public void init ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",247
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_1 = false ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",248
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 class , VAR_2 , VAR_7 ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 class , VAR_2 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",249
public TYPE_1 METHOD_1 ( TYPE_2 n ) { this . VAR_1 = this . VAR_2 . getClass ( VAR_3 . toString ( ) ) ; VAR_4 . METHOD_2 ( this ) ; VAR_5 . METHOD_2 ( this ) ; VAR_6 . METHOD_2 ( this ) ; return null ; },public TYPE_1 METHOD_1 ( TYPE_2 n ) { VAR_4 . METHOD_2 ( this ) ; VAR_5 . METHOD_2 ( this ) ; VAR_6 . METHOD_2 ( this ) ; return null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",250
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_5 ) ) ) ; VAR_6 . setText ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",251
private void METHOD_1 ( ) { try { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_2 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_4 ( ) ; VAR_1 = null ; } catch ( java.io.IOException VAR_2 ) { } },private void METHOD_1 ( ) { try { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_2 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_2 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",252
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",253
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getName ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",254
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getContext ( ) ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; return true ; },public boolean METHOD_1 ( ) { return false ; },"['Update Literal', 'Delete TypeReference', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",255
"protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { VAR_1 = TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) ) ; VAR_2 = ! ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; }","protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { VAR_1 = TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Assignment']",256
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",257
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = null ; VAR_3 = true ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = null ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",258
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",260
public void METHOD_1 ( ) { VAR_1 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",261
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",262
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) { METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = false ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; VAR_2 = false ; } },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block']",263
protected void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . start ( ) ; VAR_3 = false ; },protected void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",264
public void METHOD_1 ( TYPE_1 source ) { VAR_1 = source . METHOD_2 ( VAR_2 class . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 source ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",265
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String status ) { this . VAR_2 = VAR_2 ; this . status = status ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.lang.String VAR_2 , java.lang.String status ) { this . VAR_2 = VAR_2 ; this . status = status ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",266
public TYPE_1 METHOD_1 ( ) { synchronized ( nodes ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_1 = 0 ; } return METHOD_2 ( ( ( VAR_1 ) ++ ) ) ; } },public TYPE_1 METHOD_1 ( ) { synchronized ( nodes ) { return METHOD_2 ( ( ( VAR_1 ) ++ ) ) ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",267
"public void METHOD_1 ( java.lang.String pattern , java.lang.String text ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( pattern , text ) ; }","public java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String pattern , java.lang.String text ) { return VAR_2 . METHOD_3 ( pattern , text ) ; }","['Update TypeReference', 'Insert Return', 'Insert TypeReference', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",268
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",269
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_1 = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",270
public void METHOD_1 ( boolean b ) { VAR_1 = b ; VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( boolean b ) { VAR_1 = b ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",271
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; if ( VAR_4 . METHOD_2 ( ) ) { VAR_5 . METHOD_3 ( null ) ; } VAR_3 = VAR_1 ; VAR_6 . METHOD_3 ( null ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_4 . METHOD_2 ( ) ) { VAR_5 . METHOD_3 ( null ) ; } VAR_3 = VAR_1 ; VAR_6 . METHOD_3 ( null ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",272
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 super . METHOD_2 ( ) ; METHOD_3 ( 0 , 0 ) ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 super . METHOD_2 ( ) ; METHOD_3 ( 0 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",273
void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = true ; VAR_4 = false ; } else { VAR_1 = true ; VAR_2 = false ; VAR_3 = true ; VAR_4 = false ; } },void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 = true ; } else { VAR_1 = true ; VAR_2 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",274
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",275
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = 0 ; VAR_4 = false ; VAR_5 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",276
public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( VAR_2 class ) . METHOD_1 ( args ) . METHOD_2 ( VAR_3 class ) ; VAR_1 . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( VAR_2 class ) . METHOD_1 ( args ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",277
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; this . VAR_2 = true ; this . getData ( VAR_1 ) ; this . VAR_3 = true ; VAR_4 . METHOD_3 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; this . getData ( VAR_1 ) ; this . VAR_3 = true ; VAR_4 . METHOD_3 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",278
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; boolean VAR_1 = this . METHOD_2 ( METHOD_3 ( ) ) ; while ( ! VAR_1 ) { VAR_1 = this . METHOD_2 ( METHOD_3 ( ) ) ; } },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; boolean VAR_1 = this . METHOD_2 ( ) ; while ( ! VAR_1 ) { VAR_1 = this . METHOD_2 ( ) ; } },"['Delete Invocation', 'Delete Invocation']",280
private void METHOD_1 ( java.lang.Object value ) { if ( value != null ) { type = VAR_1 . getClass ( ) ; this . value = value ; } },private void METHOD_1 ( java.lang.Object value ) { this . value = value ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",281
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; j = 0 ; num = 0 ; VAR_1 = 1 ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; j = 0 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",282
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Move VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",283
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this . METHOD_3 ( STRING_1 , 0 ) ; VAR_4 = new TYPE_2 ( this , VAR_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_2 ( this , VAR_1 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",284
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",285
protected void METHOD_1 ( ) { this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_2 = 0 ; this . VAR_3 = null ; },protected void METHOD_1 ( ) { this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",286
private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { METHOD_2 ( ) ; VAR_2 = VAR_1 ; METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",287
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = false ; },public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",288
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; super . METHOD_1 ( ) ; VAR_5 = false ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_4 = null ; VAR_2 = null ; super . METHOD_1 ( ) ; VAR_5 = false ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",289
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . setText ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . setText ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",290
private void METHOD_1 ( int VAR_1 ) { VAR_2 -= ( VAR_2 ) * ( VAR_3 ) ; VAR_2 += VAR_1 * ( VAR_3 ) ; if ( ( VAR_2 ) > ( VAR_4 ) ) { VAR_2 = VAR_4 ; } },private void METHOD_1 ( double VAR_1 ) { VAR_2 -= ( VAR_2 ) * ( VAR_3 ) ; VAR_2 += VAR_1 * ( VAR_3 ) ; },"['Update TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",291
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . METHOD_3 ( new TYPE_1 ( ) ) ; VAR_1 = this ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . METHOD_3 ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",292
void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 = VAR_2 ; VAR_4 = 0 ; VAR_5 = new TYPE_2 ( VAR_6 ) ; VAR_7 . start ( ) ; },void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 = VAR_2 ; VAR_4 = 0 ; VAR_5 = new TYPE_2 ( VAR_6 ) ; VAR_7 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",294
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",295
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 * ( this . VAR_2 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator']",296
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this , TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_1 . METHOD_5 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_4 ( new TYPE_1 ( this , TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_5 ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",297
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",298
public void METHOD_1 ( ) { super . METHOD_2 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) { super . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",299
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; ( count ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.System.out.println ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator']",300
public void METHOD_1 ( int VAR_1 ) { VAR_2 [ VAR_1 ] = true ; ( VAR_3 ) ++ ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 [ VAR_1 ] = true ; },"['Delete FieldWrite', 'Delete UnaryOperator']",301
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",302
public java.lang.Boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = false ; } return VAR_1 ; },public java.lang.Boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { this . VAR_1 = false ; } return VAR_1 ; },['Insert ThisAccess'],303
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",304
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( data ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , VAR_4 ) ; } VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { METHOD_2 ( data ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , VAR_4 ) ; }","['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",305
"public TYPE_1 METHOD_1 ( TYPE_2 p , long VAR_1 ) { VAR_2 . add ( p ) ; if ( ( VAR_3 ) == null ) { return this . METHOD_2 ( VAR_1 ) ; } return null ; }","public TYPE_1 METHOD_1 ( TYPE_2 p , long VAR_1 ) { if ( ( VAR_3 ) == null ) { VAR_3 = p ; return null ; } else { VAR_2 . add ( p ) ; return this . METHOD_2 ( VAR_1 ) ; } }","['Insert Block', 'Insert Assignment', 'Move Return', 'Move Invocation', 'Move Return', 'Insert FieldWrite', 'Insert VariableRead']",306
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = java.lang.String . METHOD_3 ( VAR_4 . getInt ( VAR_1 . METHOD_4 ( VAR_5 ) ) ) ; return VAR_3 ; },private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; return java.lang.String . METHOD_3 ( VAR_4 . getInt ( VAR_1 . METHOD_4 ( VAR_5 ) ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",307
public void METHOD_1 ( long time ) { this . time = time ; long tmp = ( TYPE_1 . METHOD_2 ( ) ) / INT_1 ; this . VAR_1 = tmp + ( this . time ) ; },public void METHOD_1 ( long time ) { long tmp = ( TYPE_1 . METHOD_2 ( ) ) / INT_1 ; this . VAR_1 = tmp + time ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",308
public TYPE_1 METHOD_1 ( ) { if ( ( this . index ) < ( this . VAR_1 . size ( ) ) ) { return this . VAR_1 . get ( ( ( index ) ++ ) ) ; } ( index ) ++ ; return null ; },public TYPE_1 METHOD_1 ( ) { if ( ( this . index ) < ( ( this . VAR_1 . size ( ) ) - 1 ) ) { ( index ) ++ ; return this . VAR_1 . get ( index ) ; } return null ; },"['Insert BinaryOperator', 'Move UnaryOperator', 'Move Invocation', 'Insert Literal', 'Insert FieldRead', 'Delete FieldWrite', 'Delete UnaryOperator']",309
"public void METHOD_1 ( double x , double y ) { VAR_1 = VAR_2 ; }","public abstract void METHOD_1 ( double x , double y ) ;","['Insert Wra', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",310
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = null ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",311
public void METHOD_1 ( ) { startTime = TYPE_1 . METHOD_2 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { startTime = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",312
public void METHOD_1 ( TYPE_1 key ) { if ( ( VAR_1 . toLowerCase ( key . METHOD_2 ( ) ) ) == CHAR_1 ) { this . VAR_2 = 0 ; METHOD_3 ( VAR_2 ) ; } },public void METHOD_1 ( TYPE_1 key ) { if ( ( VAR_1 . toLowerCase ( key . METHOD_2 ( ) ) ) == CHAR_1 ) { METHOD_3 ( VAR_2 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",313
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 result ) { METHOD_2 ( STRING_1 ) ; TYPE_4 . METHOD_3 ( VAR_3 , STRING_2 ) ; METHOD_4 ( ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 result ) { METHOD_2 ( STRING_1 ) ; TYPE_4 . METHOD_3 ( VAR_3 , STRING_2 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",314
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_2 ( STRING_2 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ; VAR_4 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; },"['Move FieldWrite', 'Insert Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",316
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",317
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = false ; VAR_4 . i ( STRING_2 , STRING_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",318
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",319
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != VAR_1 ) { VAR_3 . METHOD_2 ( ) ; } VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",320
"void METHOD_1 ( ) throws java.io.IOException { byte [ ] VAR_1 = METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 ) ; VAR_1 = METHOD_2 ( STRING_1 , STRING_3 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; }","void METHOD_1 ( ) throws java.io.IOException { byte [ ] VAR_1 = METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_1 ) ; VAR_1 = METHOD_2 ( STRING_1 , STRING_3 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",321
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 . getName ( ) , false ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 . getName ( ) , false ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",322
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) . METHOD_3 ( VAR_3 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",323
"public void METHOD_1 ( java.util.List < TYPE_1 > data , boolean VAR_1 ) { METHOD_2 ( data ) ; if ( VAR_1 ) { METHOD_3 ( VAR_2 . size ( ) ) ; VAR_3 = true ; } }",public void METHOD_1 ( java.util.List < TYPE_1 > data ) { METHOD_2 ( data ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",325
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",326
"private void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 < > ( ) ; for ( java.lang.String VAR_2 : this . VAR_3 . METHOD_2 ( ) ) { this . VAR_4 . put ( VAR_2 , 0.0 ) ; } }","private void METHOD_1 ( ) { for ( java.lang.String VAR_2 : this . VAR_3 . METHOD_2 ( ) ) { this . VAR_4 . put ( VAR_2 , 0.0 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",328
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 = 0 ; for ( int i = 0 ; i < ( VAR_5 . length ) ; i ++ ) { VAR_6 [ i ] . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; for ( int i = 0 ; i < ( VAR_5 . length ) ; i ++ ) { VAR_6 [ i ] . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",329
public void METHOD_1 ( ) { while ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . size ( ) ) > 1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . remove ( 0 ) ; } VAR_2 = 1 ; },public void METHOD_1 ( ) { while ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . size ( ) ) > 1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . remove ( 0 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",331
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( ) ; } return VAR_2 ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( ) ; } VAR_2 = true ; return VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",332
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; return this ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",333
"private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_1 ) ; METHOD_4 ( VAR_3 ) ; }","private void METHOD_1 ( ) { VAR_3 . METHOD_3 ( VAR_4 , VAR_2 . METHOD_2 ( ) ) ; METHOD_4 ( VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",334
public void update ( ) { this . VAR_1 = true ; },public void update ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",335
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new TYPE_3 ( getActivity ( ) ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",336
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getClass ( ) . getName ( ) , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_1 = new TYPE_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_2 = true ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getClass ( ) . getName ( ) , STRING_1 ) ; super . METHOD_1 ( ) ; METHOD_4 ( ) ; VAR_2 = true ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",337
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( ) ; VAR_6 = null ; VAR_7 . info ( STRING_1 ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_7 . info ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",338
"public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_2 . put ( STRING_1 , VAR_1 ) ; return this ; }",public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",339
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",341
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",342
public final void METHOD_1 ( ) { VAR_1 = false ; },public final void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",343
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 < > ( ) ; VAR_2 = new java.util.LinkedList < > ( ) ; VAR_3 = false ; VAR_4 = 0 ; VAR_5 = 0 ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 < > ( ) ; VAR_2 = new java.util.LinkedList < > ( ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",344
public void METHOD_1 ( ) { if ( VAR_1 ) return ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = true ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",345
private void METHOD_1 ( TYPE_1 VAR_1 ) { ++ ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",346
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_5 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_6 = this . VAR_7 ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_5 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_6 = this . VAR_7 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",347
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( ) ) + ( VAR_2 ) ) ) ; VAR_3 . start ( ) ; VAR_4 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( ) ) + ( VAR_2 ) ) ) ; VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",348
public void METHOD_1 ( int id ) { this . VAR_1 = id ; },public void METHOD_1 ( int id ) { this . id = id ; },['Update FieldWrite'],349
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_2 VAR_3 = VAR_4 ; VAR_5 = new TYPE_3 ( ) ; VAR_6 = VAR_7 ; VAR_4 = VAR_3 ; ( VAR_8 ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; TYPE_2 VAR_3 = VAR_4 ; VAR_5 = new TYPE_3 ( ) ; VAR_6 = VAR_7 ; VAR_4 = VAR_3 ; }","['Delete FieldWrite', 'Delete UnaryOperator']",350
"public static void METHOD_1 ( int x , int y , int VAR_1 ) { VAR_2 = ( ( x ^ y ) & ( x ^ VAR_1 ) ) & INT_1 ; }","public static void METHOD_1 ( int x , int y , int VAR_1 ) { VAR_2 = x ; }","['Move VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",351
"public void METHOD_1 ( ) { state = VAR_1 ; VAR_2 = true ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( VAR_4 , VAR_5 class ) ) ; setState ( new TYPE_1 ( ) ) ; }","public void METHOD_1 ( ) { VAR_2 = true ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( ) ; METHOD_3 ( new android.content.Intent ( VAR_4 , VAR_5 class ) ) ; setState ( new TYPE_1 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",352
private void METHOD_1 ( ) { VAR_1 = 1.0F ; VAR_2 . METHOD_2 ( VAR_3 ) ; if ( METHOD_3 ( ) ) { VAR_4 = TYPE_1 . METHOD_4 ( ) ; VAR_1 = 0.0F ; VAR_2 . METHOD_5 ( VAR_3 ) ; } },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( METHOD_3 ( ) ) { VAR_4 = TYPE_1 . METHOD_4 ( ) ; VAR_1 = 0.0F ; VAR_2 . METHOD_5 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",353
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",354
public void update ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . update ( VAR_1 ) ; VAR_4 . update ( VAR_1 ) ; },public void update ( TYPE_1 VAR_1 ) { VAR_3 . update ( VAR_1 ) ; VAR_4 . update ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",355
private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; if ( METHOD_3 ( ) ) { METHOD_4 ( VAR_3 ) ; } },private void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; if ( METHOD_3 ( ) ) { METHOD_4 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",356
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . i ( VAR_3 , STRING_1 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",357
public void remove ( ) { VAR_1 . remove ( ) ; VAR_2 = false ; },public void remove ( ) { VAR_1 . remove ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",358
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },"['Update Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",359
protected void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = false ; } for ( TYPE_1 VAR_3 : VAR_4 ) VAR_3 . METHOD_3 ( VAR_5 . size ( ) ) ; },protected void METHOD_1 ( ) { for ( TYPE_1 VAR_3 : VAR_4 ) VAR_3 . METHOD_3 ( VAR_5 . size ( ) ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",360
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = false ; TYPE_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",363
public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { value = TYPE_1 . METHOD_2 ( ) ; return value ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldRead']",364
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_2 = null ; VAR_3 = null ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_2 = null ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",365
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",366
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != ( - 1 ) ) VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_2 = VAR_1 ; METHOD_3 ( ) ; VAR_4 = VAR_3 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_3 ( ) ; VAR_4 = VAR_3 . METHOD_4 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",368
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",370
private void METHOD_1 ( ) throws java.io.IOException { try { VAR_1 = VAR_2 . METHOD_2 ( ) ; ( VAR_3 ) ++ ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) throws java.io.IOException { try { VAR_1 = VAR_2 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",372
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( this ) ; this . VAR_1 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( this ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",373
"public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) == true ) VAR_2 = true ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",374
public void METHOD_1 ( android.view.View view ) { VAR_1 = 0 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = 0 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",376
"public void METHOD_1 ( android.view.View view ) { int VAR_1 = METHOD_2 ( VAR_2 ) ; int VAR_3 = ( VAR_1 == INT_1 ) ? ( VAR_4 ) - 1 : VAR_4 ; METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_5 = true ; }","public void METHOD_1 ( android.view.View view ) { int VAR_1 = METHOD_2 ( VAR_2 ) ; int VAR_3 = ( VAR_1 == INT_1 ) ? ( VAR_4 ) - 1 : VAR_4 ; METHOD_3 ( VAR_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",378
void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",379
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",380
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",381
public void update ( ) { VAR_1 = METHOD_1 ( ) ; VAR_2 = new java.util.Date ( ) ; VAR_3 += VAR_4 ; super . update ( ) ; },public void update ( ) { VAR_2 = new java.util.Date ( ) ; VAR_3 += VAR_4 ; super . update ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",383
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",384
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( this ) ; VAR_3 = VAR_2 ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( this ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",385
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; this . VAR_4 = VAR_2 ; ( this . length ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; this . VAR_4 = VAR_2 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",386
protected void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",388
private void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( ) { VAR_3 . METHOD_3 ( ) ; METHOD_5 ( ) ; } } ) ; },private void METHOD_1 ( ) { this . VAR_1 = false ; VAR_4 . METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( ) { VAR_3 . METHOD_3 ( ) ; METHOD_5 ( ) ; } } ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",391
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; TYPE_2 item = VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_3 ) ( TYPE_4 . METHOD_5 ( item ) ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",392
public void METHOD_1 ( TYPE_1 c ) { this . VAR_1 = c ; },public void METHOD_1 ( TYPE_1 c ) { this . VAR_1 = VAR_1 ; },"['Insert FieldRead', 'Delete VariableRead']",393
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_4 ) ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",394
public void METHOD_1 ( ) { end = true ; if ( end ) { VAR_1 = false ; VAR_2 = VAR_3 ; METHOD_2 ( VAR_4 ) ; } },public void METHOD_1 ( ) { end = true ; if ( end ) { VAR_2 = VAR_3 ; METHOD_2 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",395
public void METHOD_1 ( ) { TYPE_1 t = ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) ) ) ; VAR_2 . setText ( STRING_1 ) ; status = 1 ; },public void METHOD_1 ( ) { TYPE_1 t = ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) ) ) ; VAR_2 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",396
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = - 1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",397
public TYPE_1 METHOD_1 ( TYPE_2 < ? > VAR_1 ) { VAR_2 = VAR_1 ; this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 < ? > VAR_1 ) { this . VAR_3 . METHOD_2 ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",398
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 = true ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",399
public TYPE_1 METHOD_1 ( ) { VAR_1 [ ( ( VAR_2 . position ) + 1 ) ] = isEmpty ( ) ; VAR_2 . position += 1 ; VAR_3 = METHOD_2 ( VAR_2 . position ) ; return VAR_4 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_4 ) { VAR_1 [ ( ( VAR_2 . position ) + 1 ) ] = isEmpty ( ) ; VAR_2 . position += 1 ; VAR_3 = METHOD_2 ( VAR_2 . position ) ; return VAR_4 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete FieldRead']",400
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = INT_1 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 1 ; VAR_1 . METHOD_2 ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 1 ; VAR_1 . METHOD_2 ( true ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",401
void delete ( ) { size = - 1 ; VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = true ; },void delete ( ) { size = - 1 ; VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",403
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( INT_1 ) ; VAR_1 = false ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( INT_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",404
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) { VAR_3 = null ; METHOD_2 ( ) ; } else { VAR_3 = VAR_1 ; METHOD_3 ( VAR_1 ) ; } return true ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) { METHOD_2 ( ) ; } else { METHOD_3 ( VAR_1 ) ; } return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",405
"public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_1 ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; VAR_1 = false ; } }","public void METHOD_1 ( ) { METHOD_1 ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",406
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; TYPE_1 t = METHOD_2 ( ) ; METHOD_3 ( t ) ; },public void METHOD_1 ( ) { TYPE_1 t = METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",407
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . set ( null ) ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; } },public void METHOD_1 ( ) { VAR_2 . set ( null ) ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",408
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_3 ( false ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",409
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 . getId ( ) , VAR_4 . getId ( ) ) ; VAR_1 = null ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 . getId ( ) , VAR_4 . getId ( ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",410
"public void METHOD_1 ( int VAR_1 , int value ) { METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; TYPE_1 . METHOD_3 ( buffer , value ) ; }","public void METHOD_1 ( int VAR_1 , int value ) { METHOD_2 ( VAR_1 ) ; VAR_2 = 0 ; TYPE_1 . METHOD_3 ( buffer , value ) ; }","['Insert Literal', 'Delete VariableRead']",411
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } VAR_3 = new TYPE_3 ( VAR_1 ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",412
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( INT_1 ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",413
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; this . VAR_3 . METHOD_2 ( ) ; this . count = 0 ; },public void METHOD_1 ( ) { this . VAR_3 . METHOD_2 ( ) ; this . count = 0 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",414
"void execute ( int VAR_1 , int count , int VAR_2 , int VAR_3 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 . put ( count ) ; }","void execute ( int VAR_1 , int count , int VAR_2 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_4 . put ( count ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",416
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { this . VAR_3 . METHOD_2 ( VAR_2 ) ; this . VAR_4 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { this . VAR_3 . METHOD_2 ( VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",417
public java.lang.String METHOD_1 ( ) { if ( ( ( this . VAR_1 ) == null ) || ( this . VAR_2 . equals ( STRING_1 ) ) ) { this . VAR_1 = STRING_2 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",418
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_4 ) ) ; VAR_5 = STRING_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",419
public void execute ( TYPE_1 context ) throws TYPE_2 { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; VAR_3 . info ( STRING_1 ) ; },public void execute ( TYPE_1 context ) throws TYPE_2 { VAR_1 . METHOD_1 ( ) ; VAR_3 . info ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",420
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 < > ( ) ; VAR_2 = null ; VAR_3 = null ; url = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = null ; VAR_3 = null ; url = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",421
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) java.lang.System.exit ( 0 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",422
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; context = this ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",423
public void replace ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_1 ( VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void replace ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",424
"private int METHOD_1 ( int min , int VAR_1 ) { VAR_2 = new java.util.Random ( ) ; return ( VAR_2 . METHOD_2 ( ( ( VAR_1 - min ) + 1 ) ) ) + min ; }","private int METHOD_1 ( int min , int VAR_1 ) { return ( VAR_2 . METHOD_2 ( ( ( VAR_1 - min ) + 1 ) ) ) + min ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",425
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( 1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( 1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",426
"TYPE_1 < java.lang.Object , TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = METHOD_2 ( METHOD_3 ( ) . VAR_2 ) ; return METHOD_4 ( VAR_1 ) ; }","TYPE_1 < java.lang.Object , TYPE_2 > METHOD_1 ( ) { return METHOD_4 ( VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",427
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = ( ( VAR_2 ) + ( VAR_3 . length ( ) ) ) / FLOAT_1 ; VAR_4 . add ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_4 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",428
public float METHOD_1 ( ) { float temp = VAR_1 ; VAR_1 = 0.0F ; return temp ; },public float METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",429
public void METHOD_1 ( boolean VAR_1 ) { if ( ! VAR_1 ) { VAR_2 = INT_1 ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",430
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",432
public TYPE_1 METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",433
public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; VAR_1 = context ; },public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; this . VAR_1 = context ; },['Insert ThisAccess'],434
protected void METHOD_1 ( android.content.Intent intent ) { VAR_1 = new java.util.ArrayList ( ) ; VAR_2 = new TYPE_1 ( this ) . METHOD_2 ( this ) . METHOD_3 ( VAR_3 ) . build ( ) ; VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( android.content.Intent intent ) { VAR_2 = new TYPE_1 ( this ) . METHOD_2 ( this ) . METHOD_3 ( VAR_3 ) . build ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",435
"public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( 0 ) ; VAR_2 . setValue ( 0 ) ; VAR_1 = false ; } METHOD_3 ( VAR_3 , index , VAR_4 ) ; METHOD_4 ( index ) ; ( VAR_5 ) -- ; }","public void METHOD_1 ( ) { METHOD_3 ( VAR_3 , index , VAR_4 ) ; METHOD_4 ( index ) ; if ( VAR_1 ) { METHOD_2 ( 0 ) ; VAR_2 . setValue ( 0 ) ; VAR_1 = false ; } }","['Move If', 'Delete FieldWrite', 'Delete UnaryOperator']",436
"public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_3 = false ; METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",437
public void METHOD_1 ( android.view.View VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",438
"public void METHOD_1 ( int id ) { this . VAR_1 = null ; TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . execute ( VAR_4 , java.lang.Integer.toString ( id ) ) ; }","public void METHOD_1 ( int id ) { TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . execute ( VAR_4 , java.lang.Integer.toString ( id ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",439
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = true ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",441
"public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_3 ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; TYPE_1 . METHOD_5 ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_2 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_3 ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; TYPE_1 . METHOD_5 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",443
public void start ( ) { this . startTime = TYPE_1 . METHOD_1 ( ) . getTime ( ) ; this . VAR_1 = TYPE_2 . METHOD_2 ( this . VAR_2 ) ; },public void start ( ) { this . startTime = TYPE_1 . METHOD_1 ( ) . getTime ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",444
public java.lang.String execute ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; return STRING_2 + ( filename ) ; },public java.lang.String execute ( ) { return STRING_2 + ( filename ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",445
public void METHOD_1 ( TYPE_1 name ) { VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 name ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",447
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( false ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']",448
public void init ( android.content.Context VAR_1 ) { VAR_2 . init ( VAR_1 . METHOD_1 ( ) ) ; VAR_3 = TYPE_1 . METHOD_2 ( ( ( ( VAR_4 ) + STRING_1 ) + ( VAR_5 ) ) ) ; },public void init ( android.content.Context VAR_1 ) { VAR_2 . init ( VAR_1 . METHOD_1 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",449
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; VAR_3 = - 1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",450
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = true ; METHOD_3 ( ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",451
public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = error ; error = null ; return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return error ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",452
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_1 ) > 1.0F ) { VAR_3 = VAR_1 ; } else { VAR_3 = 1.0F ; } METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = 1.0F ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",453
public void METHOD_1 ( boolean VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = ( VAR_1 ) ? VAR_4 : VAR_5 ; VAR_2 = true ; } },public void METHOD_1 ( boolean VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = ( VAR_1 ) ? VAR_4 : VAR_5 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",454
public boolean METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( VAR_2 ) ) { VAR_2 = false ; TYPE_1 . METHOD_2 ( STRING_1 ) ; } return ( VAR_1 ) != null ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; } return ( VAR_1 ) != null ; },"['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",455
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . length ( ) ) == 0 ) { VAR_3 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",456
"public void METHOD_1 ( float VAR_1 , float VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = 0 ; VAR_4 = 0 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",457
"public java.awt.Font METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = INT_1 ; } return ( VAR_2 ) == null ? new TYPE_1 ( ) . METHOD_2 ( ) : VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; }","public java.awt.Font METHOD_1 ( ) { return ( VAR_2 ) == null ? new TYPE_1 ( ) . METHOD_2 ( ) : VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",458
public final synchronized TYPE_1 METHOD_1 ( ) { final int index ; index = this . VAR_1 ; this . VAR_1 = ( index + 1 ) % ( this . VAR_2 ) ; return this . VAR_3 . get ( index ) ; },public final synchronized TYPE_1 METHOD_1 ( ) { final int index ; this . VAR_1 = index = ( ( this . VAR_1 ) + 1 ) % ( this . VAR_2 ) ; return this . VAR_3 . get ( index ) ; },"['Move Assignment', 'Move BinaryOperator', 'Move FieldRead', 'Delete VariableRead']",460
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; },public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; return true ; },"['Update TypeReference', 'Insert Return', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",461
public void METHOD_1 ( java.lang.String path ) { VAR_1 . setValue ( path ) ; VAR_2 = path ; },public void METHOD_1 ( java.lang.String path ) { VAR_1 . setValue ( path ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",462
"public void METHOD_1 ( ) { synchronized ( this ) { VAR_1 = new TYPE_1 < TYPE_2 , java.lang.String > ( ) ; METHOD_2 ( ) . start ( ) ; } }",public void METHOD_1 ( ) { synchronized ( this ) { METHOD_2 ( ) . start ( ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",463
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",464
"public void METHOD_1 ( java.lang.Double key , TYPE_1 VAR_1 ) { VAR_2 . diff = ( VAR_2 . diff ) + FLOAT_1 ; this . VAR_3 . put ( ( key + ( VAR_2 . diff ) ) , VAR_1 ) ; }","public void METHOD_1 ( java.lang.Double key , TYPE_1 VAR_1 ) { this . VAR_3 . put ( key , VAR_1 ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete BinaryOperator']",465
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; view . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",466
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = new TYPE_3 < TYPE_4 > ( TYPE_4 . METHOD_4 ( METHOD_5 ( ) , STRING_1 ) ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",467
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",468
public static void main ( java.lang.String [ ] args ) { VAR_1 = java.util.Arrays.asList ( args ) . contains ( STRING_1 ) ; VAR_2 = java.util.Arrays.asList ( args ) . contains ( STRING_2 ) ; new TYPE_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { VAR_1 = java.util.Arrays.asList ( args ) . contains ( STRING_1 ) ; new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",469
TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",470
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",471
public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { },"['Update TypeReference', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",472
public java.lang.String METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . delete ( p ) ; VAR_4 = null ; return STRING_1 ; },public void METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . delete ( p ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",473
public static TYPE_1 METHOD_1 ( ) { TYPE_1 result = VAR_1 ; VAR_1 = null ; return result ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",474
public void end ( java.lang.String msg ) { METHOD_1 ( ) ; METHOD_2 ( msg ) ; VAR_1 = null ; },public void end ( java.lang.String msg ) { METHOD_1 ( ) ; METHOD_2 ( msg ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",475
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) , TYPE_2 . METHOD_2 ( STRING_2 ) ) ; VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 , VAR_3 class ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) , TYPE_2 . METHOD_2 ( STRING_2 ) ) ; VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 , VAR_3 class ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",476
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { VAR_2 = view ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",477
"public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . replace ( VAR_4 , VAR_2 ) . commit ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . replace ( VAR_4 , VAR_2 ) . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",478
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; METHOD_3 ( VAR_2 ) ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",479
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = true ; count = INT_1 ; VAR_2 = INT_2 ; init ( VAR_3 ) ; METHOD_2 ( false ) ; execute ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { count = INT_1 ; VAR_2 = INT_2 ; init ( VAR_3 ) ; METHOD_2 ( false ) ; execute ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",480
public void METHOD_1 ( android.view.View view ) { ( VAR_1 ) ++ ; VAR_2 . setText ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_1 ) ) ) ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 = false ; },public void METHOD_1 ( android.view.View view ) { ( VAR_1 ) ++ ; VAR_2 . setText ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_1 ) ) ) ) ; VAR_3 . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",481
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",482
"public TYPE_1 execute ( java.lang.String VAR_1 ) { VAR_2 = true ; if ( VAR_2 ) VAR_3 . METHOD_1 ( this , VAR_1 ) ; METHOD_2 ( false ) ; return VAR_4 ; }",public TYPE_1 execute ( java.lang.String VAR_1 ) { return null ; },"['Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead']",483
public void METHOD_1 ( byte VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = false ; },public void METHOD_1 ( byte VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",485
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",486
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ INT_1 ] ; VAR_3 = INT_1 ; VAR_4 = 0 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ INT_1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",487
"public void METHOD_1 ( android.content.Intent data ) { VAR_1 = VAR_2 . METHOD_1 ( data , VAR_3 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( android.content.Intent data ) { VAR_2 . METHOD_1 ( data , VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",488
public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) VAR_1 = null ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",489
public boolean METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( event ) ; } else { VAR_2 = true ; } return false ; },public boolean METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( event ) ; } return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",490
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",491
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( this , VAR_2 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( this ) . METHOD_4 ( VAR_5 ) . build ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",492
"public void METHOD_1 ( TYPE_1 VAR_1 , int position , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_1 ; this . position = position ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { this . VAR_3 = VAR_1 ; this . position = position ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",493
public boolean METHOD_1 ( int VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 . METHOD_2 ( ) ; return VAR_7 . METHOD_1 ( VAR_1 ) ; },public boolean METHOD_1 ( int VAR_1 ) { return VAR_7 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",494
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = result ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.Void result ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",495
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_5 = INT_1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",496
public final void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = STRING_1 . equals ( VAR_1 ) ; if ( VAR_2 ) { VAR_3 = false ; } else { METHOD_2 ( ) ; } METHOD_3 ( ) ; },public final void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = STRING_1 . equals ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",497
"public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { this . VAR_2 = VAR_2 ; this . height = height ; METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 , format , VAR_2 , height ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { super . METHOD_1 ( VAR_1 , format , VAR_2 , height ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",500
"private void init ( TYPE_1 state , java.lang.Object key , TYPE_2 VAR_1 ) { this . state = state ; this . VAR_2 = METHOD_1 ( state ) ; if ( VAR_1 != null ) this . VAR_3 . add ( VAR_1 ) ; }","private void init ( TYPE_1 state , java.lang.Object key , TYPE_2 VAR_1 ) { this . state = state ; if ( VAR_1 != null ) this . VAR_3 . add ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",502
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . get ( STRING_1 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( VAR_2 . get ( STRING_2 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . get ( STRING_1 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",503
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",504
"void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; VAR_3 = null ; if ( null != ( VAR_4 ) ) { VAR_5 . remove ( VAR_4 ) ; } }","void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",505
"public void METHOD_1 ( java.lang.String url , java.lang.String item ) { VAR_1 = item ; VAR_2 = new TYPE_1 ( url , item ) . execute ( ) ; }","public void METHOD_1 ( java.lang.String url , java.lang.String item ) { VAR_2 = new TYPE_1 ( url , item ) . execute ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",506
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",507
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",508
public void METHOD_1 ( TYPE_1 msg ) { VAR_1 = STRING_1 + ( VAR_2 . obj ) ; VAR_3 . setText ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 msg ) { java.lang.String VAR_1 = STRING_1 + ( VAR_2 . obj ) ; VAR_3 . setText ( VAR_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",509
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",510
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = null ; VAR_5 = false ; } else super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = null ; } else super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",511
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",513
public void METHOD_1 ( java.util.LinkedList < TYPE_1 > VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 = null ; ++ ( VAR_5 ) ; },public void METHOD_1 ( java.util.LinkedList < TYPE_1 > VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete UnaryOperator']",514
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; new java.lang.Thread ( VAR_3 ) . start ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",516
"protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 class , STRING_1 , STRING_2 ) ; VAR_3 = new java.io.File ( VAR_1 . METHOD_2 ( ) , STRING_3 ) ; VAR_4 = new java.io.File ( VAR_1 . METHOD_2 ( ) , STRING_4 ) ; }","protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 class , STRING_1 , STRING_2 ) ; VAR_3 = new java.io.File ( VAR_1 . METHOD_2 ( ) , STRING_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",517
"public synchronized void METHOD_1 ( final long VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_3 ) , VAR_1 ) ; VAR_3 = VAR_1 ; }","public synchronized void METHOD_1 ( final long VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_3 ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",518
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = true ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_4 . getText ( ) . length ( ) ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",520
public void METHOD_1 ( TYPE_1 target ) { VAR_1 = this . VAR_2 ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; VAR_7 = this . VAR_8 ; VAR_9 = this . VAR_10 ; VAR_11 = this . VAR_12 ; VAR_13 = this ; },public void METHOD_1 ( TYPE_1 target ) { VAR_1 = this . VAR_2 ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; VAR_7 = this . VAR_8 ; VAR_11 = this . VAR_12 ; VAR_13 = this ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",521
"protected TYPE_1 METHOD_1 ( java.lang.String method , java.lang.String path ) throws TYPE_2 { if ( ! ( VAR_1 ) ) { super . METHOD_1 ( VAR_2 , STRING_1 ) ; VAR_1 = true ; } return super . METHOD_1 ( method , path ) ; }","protected TYPE_1 METHOD_1 ( java.lang.String method , java.lang.String path ) throws TYPE_2 { super . METHOD_1 ( VAR_2 , STRING_1 ) ; return super . METHOD_1 ( method , path ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",522
public final void METHOD_1 ( final java.lang.String data ) { if ( data == null ) { this . data = STRING_1 ; } else { this . data = data ; } },public final void METHOD_1 ( final java.lang.String data ) { this . data = data ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",524
public TYPE_1 setText ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 setText ( java.lang.String VAR_1 ) { this . setText ( VAR_1 ) ; return this ; },"['Insert Invocation', 'Move ThisAccess', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",525
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , METHOD_5 ( ) , this ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , METHOD_5 ( ) , this ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",527
public void METHOD_1 ( int b ) throws java.io.IOException { if ( ( VAR_1 ) == ( VAR_2 ) ) { out.write ( VAR_3 ) ; VAR_1 = 0 ; } out.write ( b ) ; ( VAR_1 ) ++ ; },public void METHOD_1 ( int b ) throws java.io.IOException { if ( ( VAR_1 ) == ( VAR_2 ) ) { out.write ( VAR_3 ) ; } out.write ( b ) ; ( VAR_1 ) ++ ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",528
public TYPE_1 METHOD_1 ( ) { if ( null == ( VAR_1 ) ) { VAR_1 = new TYPE_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",529
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 = - 1 ; VAR_5 = 0 ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 = - 1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",530
public static void start ( ) { VAR_1 . id = 0 ; VAR_2 = true ; VAR_3 [ 0 ] = VAR_4 ; VAR_5 = VAR_4 ; },public static void start ( ) { VAR_5 = VAR_4 ; VAR_1 . id = 0 ; VAR_3 [ 0 ] = VAR_4 ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",531
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_2 ( null ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",532
"public void METHOD_1 ( ) { TYPE_1 n = VAR_1 . build ( ) ; if ( VAR_2 ) VAR_3 = VAR_4 ; METHOD_2 ( VAR_5 , n ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_5 , VAR_1 . build ( ) ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",533
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_2 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",534
public void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",535
"public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; VAR_1 = new TYPE_1 ( context , VAR_2 ) ; VAR_3 = getActivity ( ) ; }","public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; VAR_1 = new TYPE_1 ( context , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",536
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( 1 ) ; VAR_2 = METHOD_2 ( 0 ) ; VAR_3 = VAR_4 ; if ( ! ( METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( VAR_5 ) ; VAR_2 . METHOD_4 ( VAR_6 ) ; } },private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( 0 ) ; VAR_2 = METHOD_2 ( 1 ) ; },"['Move Assignment', 'Move FieldWrite', 'Move FieldWrite', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",538
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = null ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",539
"protected void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = true ; this . VAR_4 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_5 ) ) ) ; this . VAR_6 . setText ( STRING_2 ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; this . VAR_4 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_5 ) ) ) ; this . VAR_6 . setText ( STRING_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",540
public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } VAR_2 = 0 ; VAR_1 = true ; VAR_3 = 0 ; },public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } VAR_1 = true ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",541
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",542
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_2 ( ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; init ( ) ; }","['Insert Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",544
"public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { if ( VAR_2 ) VAR_3 = STRING_1 ; VAR_4 = true ; VAR_5 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_4 = true ; VAR_5 . METHOD_2 ( ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",547
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",548
public void METHOD_1 ( java.io.FileOutputStream VAR_1 ) { this . VAR_2 = new TYPE_1 ( VAR_1 ) ; },public void METHOD_1 ( java.io.FileOutputStream VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Move VariableRead', 'Delete ConstructorCall']",549
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) . getConfig ( ) ; VAR_2 . init ( ) ; TYPE_2 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { VAR_2 . init ( ) ; TYPE_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",550
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.Throwable VAR_3 , TYPE_2 VAR_4 ) { METHOD_2 ( STRING_1 ) ; state = VAR_5 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.Throwable VAR_3 , TYPE_2 VAR_4 ) { METHOD_2 ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",551
public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( position ) ; } VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; VAR_4 = position ; },public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( position ) ; } VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",552
void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; VAR_3 = false ; METHOD_2 ( ) ; VAR_2 = null ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; VAR_3 = false ; METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",553
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ( ( ( counter ) > ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) ) ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = ( ( counter ) > ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move BinaryOperator', 'Delete Invocation']",555
private synchronized void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } VAR_2 = null ; } },private synchronized void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } VAR_2 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",556
"public void METHOD_1 ( TYPE_1 < java.lang.String , java.util.ArrayList < TYPE_2 > > VAR_1 ) { this . VAR_1 = new TYPE_1 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 < java.lang.String , java.util.ArrayList < TYPE_2 > > VAR_1 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",557
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . delete ( VAR_3 ) ; METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_4 . delete ( VAR_3 ) ; METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",558
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; VAR_3 = METHOD_2 ( ) . getString ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",559
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; METHOD_3 ( VAR_3 ) ; getActivity ( ) . METHOD_4 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; METHOD_3 ( VAR_3 ) ; getActivity ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",560
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . getValue ( ) . METHOD_2 ( VAR_3 ) ) ) ; if ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_4 ) ) { VAR_1 . METHOD_4 ( VAR_5 ) ; } },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",561
"private void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = null ; }","private void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",562
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; VAR_3 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; VAR_3 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",563
"public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = true ; VAR_3 . append ( java.lang.String.format ( STRING_1 , VAR_4 . getTime ( ) , getType ( ) . toString ( ) ) ) ; }",public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",564
protected void METHOD_1 ( ) { VAR_1 = true ; for ( TYPE_1 VAR_2 : VAR_3 . values ( ) ) VAR_4 . remove ( ) ; VAR_5 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { for ( TYPE_1 VAR_2 : VAR_3 . values ( ) ) VAR_4 . remove ( ) ; VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",565
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; this . VAR_1 . METHOD_1 ( ) ; this . VAR_1 = null ; },public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; this . VAR_1 . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",566
"public void METHOD_1 ( ) { for ( java.util.Iterator VAR_1 = VAR_2 . get ( VAR_3 ) . METHOD_2 ( ) . iterator ( ) , String ; i . METHOD_3 ( ) ; VAR_4 = i . METHOD_4 ( ) ) METHOD_5 ( VAR_4 ) ; }","public void METHOD_1 ( ) { for ( VAR_1 = VAR_2 . get ( VAR_3 ) . METHOD_2 ( ) . iterator ( ) , String = VAR_4 ; i . METHOD_3 ( ) ; VAR_4 = i . METHOD_4 ( ) ) METHOD_5 ( VAR_4 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete LocalVariable']",568
public java.lang.String getName ( ) { return this . name ; },public java.lang.String getName ( ) { if ( ( name ) == null ) name = toString ( ) . toLowerCase ( ) ; return name ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert Invocation', 'Insert Invocation', 'Delete ThisAccess']",569
public TYPE_1 METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 = new TYPE_1 ( VAR_3 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",570
"public void METHOD_1 ( java.awt.Color VAR_1 ) { remove ( VAR_2 ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; add ( VAR_2 , VAR_3 , 0 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.awt.Color VAR_1 ) { add ( new TYPE_1 ( VAR_1 ) , VAR_3 , 0 ) ; METHOD_2 ( ) ; }","['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",571
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = STRING_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",572
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 ) ; TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 ) ; TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",573
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",574
"public void METHOD_1 ( ) { VAR_1 = VAR_2 % INT_1 ; VAR_3 = VAR_4 ; VAR_5 = null ; METHOD_2 ( VAR_6 , VAR_7 ) ; VAR_8 = false ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 % INT_1 ; VAR_3 = VAR_4 ; METHOD_2 ( VAR_6 , VAR_7 ) ; VAR_8 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",575
"public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { VAR_2 [ i ] = new TYPE_1 ( VAR_3 , this , VAR_4 . METHOD_2 ( ) ) ; } this . VAR_5 = 0 ; }","public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) VAR_2 [ i ] = new TYPE_1 ( VAR_3 , this , VAR_4 . METHOD_2 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",576
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ 1 ] ; VAR_3 = 1 ; VAR_4 = INT_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ 1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",577
"protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = false ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 , VAR_5 ) ; } }","protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 , VAR_5 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",578
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",579
"public void METHOD_1 ( TYPE_1 VAR_1 ) { long id = VAR_1 . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( ( ( VAR_4 ) + STRING_1 ) + id ) , null ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { long id = VAR_1 . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( VAR_4 = ""id"" ) , null ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator']",580
public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",582
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( false ) ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = INT_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( false ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",584
public void METHOD_1 ( java.io.File file ) throws java.lang.Exception { METHOD_1 ( TYPE_1 . METHOD_2 ( file ) ) ; VAR_1 = file . METHOD_3 ( ) ; },public void METHOD_1 ( java.io.File file ) throws java.lang.Exception { METHOD_1 ( TYPE_1 . METHOD_2 ( file ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",586
public static synchronized TYPE_1 METHOD_1 ( java.lang.String path ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( path ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = path ; return VAR_2 ; },public static synchronized TYPE_1 METHOD_1 ( java.lang.String path ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( path ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",587
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; if ( VAR_2 ) VAR_4 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ) ; else VAR_4 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_6 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) VAR_4 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ) ; else VAR_4 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_6 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",588
public synchronized void add ( float value ) { this . value += value ; this . VAR_1 = true ; this . VAR_2 = false ; },public synchronized void add ( float value ) { this . value += value ; this . VAR_1 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",589
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = null ; VAR_3 . remove ( VAR_1 ) ; this . METHOD_2 ( STRING_1 , null , VAR_4 ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_3 . remove ( VAR_1 ) ; this . METHOD_2 ( STRING_1 , null , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",590
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 - ( VAR_2 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",591
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 1 ; VAR_3 = VAR_4 . getId ( ) ; VAR_5 = 0 ; VAR_6 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 1 ; VAR_3 = VAR_4 . getId ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",592
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Update VariableRead', 'Insert ThisAccess']",593
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( source , VAR_1 ) ; source = null ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( source , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",594
public void update ( ) { super . update ( ) ; if ( VAR_1 . equals ( VAR_2 ) ) { VAR_3 = false ; } java.lang.System.out.println ( ( STRING_1 + ( VAR_4 ) ) ) ; },public void update ( ) { super . update ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",595
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; this . VAR_5 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_3 ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ) ; this . VAR_5 = VAR_1 ; }","['Move Invocation', 'Move TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",596
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = 0 ; VAR_6 = false ; VAR_7 = 0 ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = 0 ; VAR_7 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",598
public void METHOD_1 ( byte [ ] response ) { this . response = response ; VAR_1 = INT_1 ; },public void METHOD_1 ( byte [ ] response ) { this . response = response ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",599
public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( VAR_1 ) ) ) ; VAR_2 = true ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( VAR_1 ) ) ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",600
public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . index = VAR_1 . index ; this . node = VAR_1 . node ; this . VAR_2 = VAR_3 ; return this ; },public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } return VAR_2 ; },"['Insert FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess']",601
public void update ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } VAR_3 . update ( VAR_4 ) ; },public void update ( ) throws TYPE_1 { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",602
"protected void METHOD_1 ( ) { if ( null == ( VAR_1 ) ) { VAR_1 = TYPE_1 . METHOD_2 ( this , VAR_2 class ) ; } VAR_1 . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_3 ( this ) ; } super . METHOD_1 ( ) ; },"['Update BinaryOperator', 'Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",603
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",605
public void METHOD_1 ( java.lang.String response ) { VAR_1 = response ; },public void METHOD_1 ( java.lang.String response ) { this . response = response ; },"['Update FieldWrite', 'Insert ThisAccess']",606
"public void update ( TYPE_1 VAR_1 ) { VAR_2 . info ( ( STRING_1 + VAR_1 ) ) ; TYPE_2 . METHOD_1 ( VAR_1 , STRING_2 ) ; index = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; }","public void update ( TYPE_1 VAR_1 ) { VAR_2 . info ( ( STRING_1 + VAR_1 ) ) ; TYPE_2 . METHOD_1 ( VAR_1 , STRING_2 ) ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",607
protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_1 ) ; listener = null ; } } },protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) listener . METHOD_2 ( VAR_1 ) ; },"['Move If', 'Move BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",608
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",609
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 = true ; VAR_5 = VAR_6 ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 = true ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",610
public void METHOD_1 ( java.lang.Void result ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.Void result ) { VAR_1 . METHOD_2 ( false ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",611
public void handle ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_1 ( VAR_4 ) ; },public void handle ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Update Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",612
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 context = new TYPE_2 ( STRING_1 ) ; VAR_1 = context ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 context = new TYPE_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",613
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],614
public void set ( TYPE_1 VAR_1 ) { super . set ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . setText ( VAR_1 . METHOD_1 ( ) ) ; },public void set ( TYPE_1 VAR_1 ) { super . set ( VAR_1 ) ; VAR_3 . setText ( VAR_1 . METHOD_1 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",615
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( 1 ) ; VAR_2 = new TYPE_2 < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( 1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",616
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( 0 , VAR_1 , null ) ; if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; VAR_2 = false ; } METHOD_4 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( 0 , VAR_1 , null ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",617
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 = 1 ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",619
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this , VAR_2 ) ; VAR_3 . start ( ) ; TYPE_2 . METHOD_3 ( this , getString ( VAR_4 ) , VAR_5 ) . show ( ) ; }","public void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( this , getString ( VAR_4 ) , VAR_5 ) . show ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",620
public void METHOD_1 ( ) { VAR_1 = - 1 ; VAR_2 = VAR_3 . size ( ) ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",621
public TYPE_1 update ( int VAR_1 ) { if ( VAR_1 > ( value ) ) { value = VAR_1 ; } return this ; },public TYPE_1 update ( int VAR_1 ) { if ( VAR_1 > ( value ) ) return new TYPE_1 ( VAR_1 ) ; return this ; },"['Insert Return', 'Insert ConstructorCall', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",622
protected abstract TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) ;,protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert Assignment', 'Insert Return', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete Wra']",623
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_7 ) ) ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",625
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( new TYPE_1 ( ) ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . add ( new TYPE_1 ( ) ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",626
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) this . VAR_1 = 0 ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > 0 ) this . VAR_1 = VAR_1 ; else this . VAR_1 = 0 ; },"['Update BinaryOperator', 'Move Assignment', 'Move Assignment']",627
"public void METHOD_1 ( final TYPE_1 event ) { remove ( 0 ) ; add ( VAR_1 , 0 ) ; VAR_2 = false ; VAR_3 . setEnabled ( true ) ; METHOD_2 ( ) ; METHOD_3 ( false ) ; }","public void METHOD_1 ( final TYPE_1 event ) { remove ( 0 ) ; add ( VAR_1 , 0 ) ; VAR_3 . setEnabled ( true ) ; METHOD_2 ( ) ; METHOD_3 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",628
private java.lang.Object METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < > ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( 1 ) ; VAR_3 = false ; return this ; },private java.lang.Object METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < > ( ) ; return this ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",629
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_4 = METHOD_2 ( VAR_2 ) ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_2 ( VAR_3 ) ; VAR_4 = METHOD_2 ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; },"['Update TypeAccess', 'Update TypeAccess', 'Update TypeAccess']",630
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_5 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; VAR_6 = true ; VAR_7 = false ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_5 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",631
"public void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; if ( intent . METHOD_2 ( ) . equals ( VAR_1 ) ) { intent . METHOD_3 ( VAR_2 , VAR_3 ) ; } VAR_4 = true ; }","public void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; if ( intent . METHOD_2 ( ) . equals ( VAR_1 ) ) { intent . METHOD_3 ( VAR_2 , VAR_3 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",632
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",633
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",634
"public synchronized void METHOD_1 ( double VAR_1 ) { this . VAR_2 += VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( this . VAR_2 , this . METHOD_3 ( ) , VAR_3 ) ; }","public synchronized void METHOD_1 ( double VAR_1 ) { this . VAR_2 += VAR_1 ; TYPE_1 . METHOD_2 ( VAR_2 , this . METHOD_3 ( ) , VAR_3 ) ; }","['Move Invocation', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",635
"public void METHOD_1 ( ) { ( ( TYPE_1 ) ( data ) ) . METHOD_2 ( VAR_1 , 1 ) ; this . METHOD_3 ( ) . x = VAR_2 . x ; this . METHOD_3 ( ) . y = VAR_2 . y ; }","public void METHOD_1 ( ) { ( ( TYPE_1 ) ( data ) ) . METHOD_2 ( VAR_1 , 1 ) ; }","['Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",636
public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = TYPE_2 . METHOD_2 ( buf ) ; VAR_2 = TYPE_2 . METHOD_2 ( buf ) ; },public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = TYPE_2 . METHOD_2 ( buf ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",637
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",638
"public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",639
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( ( x ) + 1 ) % ( VAR_1 ) ) , y , VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { x = ( ( x ) + 1 ) % ( VAR_1 ) ; },"['Update TypeReference', 'Insert Assignment', 'Insert FieldWrite', 'Move BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return']",641
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 . METHOD_2 ( this , VAR_3 , VAR_4 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( this , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",642
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",643
public void start ( ) { VAR_1 = METHOD_1 ( FLOAT_1 ) ; },public void start ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",644
"public void METHOD_1 ( java.lang.String value ) { METHOD_2 ( VAR_1 , value ) ; VAR_2 = value ; METHOD_3 ( value ) ; }","public void METHOD_1 ( java.lang.String value ) { METHOD_2 ( VAR_1 , value ) ; METHOD_3 ( value ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",645
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_3 ) ) ) ; METHOD_4 ( VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",646
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 VAR_3 = new TYPE_3 ( ) . build ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 VAR_3 = new TYPE_3 ( ) . build ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",647
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",648
public void METHOD_1 ( int time ) { this . METHOD_2 ( ) . VAR_1 = ( this . METHOD_2 ( ) . VAR_1 ) - time ; },public void METHOD_1 ( int time ) { this . VAR_1 = ( this . METHOD_2 ( ) . VAR_1 ) - time ; },"['Move ThisAccess', 'Delete Invocation']",649
protected void METHOD_1 ( java.lang.Exception result ) { if ( result != null ) { VAR_1 = STRING_1 ; } else { VAR_2 = true ; VAR_1 = STRING_2 ; } },protected void METHOD_1 ( java.lang.Exception result ) { if ( result != null ) { } else { VAR_2 = true ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",650
TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } return VAR_1 ; },TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",651
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; names = new java.util.ArrayList < > ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",652
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = false ; VAR_4 = METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",655
public void init ( int VAR_1 ) { startTime = VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_1 * INT_1 ; VAR_4 = VAR_1 ; },public void init ( int VAR_1 ) { startTime = VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_1 * INT_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",656
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_3 ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",657
"public void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 , java.util.ArrayList < TYPE_2 > list , java.util.List < TYPE_2 > VAR_2 ) { this . VAR_1 = VAR_1 ; this . list = list ; this . path = VAR_2 ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { this . VAR_1 = VAR_1 ; this . path = VAR_2 ; VAR_3 = true ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",659
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 . METHOD_1 ( ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",660
void init ( ) { VAR_1 = new java.util.Date ( ) . getTime ( ) ; VAR_2 = true ; VAR_3 = 0 ; VAR_4 = null ; VAR_5 = false ; },void init ( ) { VAR_1 = new java.util.Date ( ) . getTime ( ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",661
void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; } VAR_3 = null ; VAR_1 = false ; },void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",662
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; } else { VAR_2 . setText ( VAR_4 ) ; } VAR_5 = true ; METHOD_2 ( VAR_5 ) ; },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; } else { VAR_2 . setText ( VAR_4 ) ; } METHOD_2 ( true ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",663
"public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( new TYPE_2 ( VAR_3 , VAR_4 ) , VAR_1 . METHOD_3 ( ) ) ; VAR_1 = VAR_1 . METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( new TYPE_2 ( VAR_3 , VAR_4 ) , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",664
public void add ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . add ( VAR_1 ) ; if ( ( VAR_3 . size ( ) ) == INT_1 ) { VAR_2 = true ; } } },public void add ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",666
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 . show ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . show ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",667
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; VAR_1 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",668
public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( view ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_2 ) ) VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_3 = VAR_2 ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( view ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_2 ) ) VAR_1 . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",669
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",670
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( VAR_5 ) ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",671
public double METHOD_1 ( ) { VAR_1 = ( VAR_2 ) + ( ( FLOAT_1 * ( VAR_3 ) ) / ( TYPE_1 . METHOD_2 ( t ) ) ) ; return VAR_1 ; },public double METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",672
public static void start ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . main ( new java.lang.String [ ] { java.lang.Integer . METHOD_1 ( VAR_1 ) . toString ( ) } ) ; },public static void start ( int VAR_1 ) { VAR_3 . main ( new java.lang.String [ ] { java.lang.Integer . METHOD_1 ( VAR_1 ) . toString ( ) } ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",673
public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = null ; if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; return this ; },public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",674
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = new TYPE_2 ( this ) ; TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; VAR_2 . METHOD_3 ( true ) ; return VAR_2 ; }",public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( this ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead']",675
public void METHOD_1 ( java.lang.String name ) { VAR_1 = name ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String name ) { METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",676
"public void METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String name , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String [ ] VAR_5 ) { VAR_6 = name ; VAR_7 = VAR_5 ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String name , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String [ ] VAR_5 ) { VAR_7 = VAR_5 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",677
public static void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",678
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0L ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",679
public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; VAR_2 = false ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } VAR_3 = null ; VAR_4 = false ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",680
"public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_2 ( true ) ; VAR_2 = METHOD_3 ( VAR_1 , null ) ; super . add ( VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_2 ( ) ; super . add ( VAR_2 ) ; this . METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Insert ThisAccess', 'Insert TypeAccess', 'Delete Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete Literal']",681
"public void update ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void update ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",682
private static void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 = VAR_3 ; VAR_5 = null ; VAR_6 = null ; },private static void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 = VAR_3 ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",683
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = this . VAR_3 ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_7 ; VAR_8 = this . VAR_9 ; VAR_10 = false ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = this . VAR_3 ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_7 ; VAR_8 = this . VAR_9 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",685
protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 . getClass ( ) ; this . VAR_4 = VAR_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . getClass ( ) ; this . VAR_4 = VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",687
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 + 1 ; VAR_6 = VAR_3 ; VAR_7 . title = VAR_8 . getText ( ) . toString ( ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 + 1 ; VAR_6 = VAR_3 ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",690
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",692
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; node = new TYPE_2 ( 1 , INT_1 , null , 0 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete FieldRead', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",693
"public void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { this . VAR_1 = false ; TYPE_1 . METHOD_3 ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",695
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . index ) == INT_1 ) VAR_2 . index -= INT_1 ; VAR_3 . setText ( VAR_4 . METHOD_2 ( ( ( VAR_2 . index ) ++ ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . index ) == INT_1 ) VAR_2 . index -= INT_1 ; VAR_3 . setText ( VAR_4 . METHOD_2 ( VAR_2 . index ) ) ; },"['Insert FieldRead', 'Delete FieldWrite', 'Delete UnaryOperator']",697
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 = true ) { VAR_3 = true ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 = true ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",699
public void METHOD_1 ( int n ) { for ( int i = 0 ; i < n ; i ++ ) { java.lang.System.out.println ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; ( a ) ++ ; } },public void METHOD_1 ( int n ) { for ( int i = 0 ; i < n ; i ++ ) { java.lang.System.out.println ( ( ( METHOD_2 ( ) ) + STRING_1 ) ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",700
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 . obj ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; } } } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 . obj ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( ) ; } } } return VAR_1 ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",701
"void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 = 0 ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_5 . show ( VAR_6 ) ; }","void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_5 . show ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",702
"public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 = TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) ) ; VAR_5 = TYPE_1 . METHOD_6 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_5 = TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",703
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > result = new java.util.ArrayList ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; return result ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > result = VAR_1 ; VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = 0 ; return result ; },"['Insert Assignment', 'Move FieldRead', 'Insert FieldWrite', 'Insert ConstructorCall', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",704
public void METHOD_1 ( ) { getData ( ( ( VAR_1 ) + 1 ) ) ; },public void METHOD_1 ( ) { VAR_1 = ( VAR_1 ) + 1 ; getData ( ( ( VAR_1 ) + 1 ) ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal']",705
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_1 = null ; VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",706
public void start ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; },public void start ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",707
public TYPE_1 METHOD_1 ( ) { if ( ( info ) == null ) info = new TYPE_1 ( ) ; return info ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",708
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = true ; } },private void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",709
"public void METHOD_1 ( float value ) { if ( value < INT_1 ) { METHOD_2 ( VAR_1 , true ) ; } else { METHOD_2 ( VAR_1 , false ) ; } VAR_2 = value ; VAR_3 . setText ( ( value + STRING_1 ) ) ; }","public void METHOD_1 ( float value ) { if ( value < INT_1 ) { METHOD_2 ( VAR_1 , true ) ; } else { METHOD_2 ( VAR_1 , false ) ; } VAR_3 . setText ( ( value + STRING_1 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",710
protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",711
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = false ; VAR_8 = false ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",712
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",713
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",715
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . start ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",717
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( ) ; this . VAR_2 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( VAR_4 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( VAR_4 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",718
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = 1 ; return url [ 0 ] ; } return STRING_1 ; },public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) return url [ 0 ] ; return STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",720
public static void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( context ) ; VAR_1 = context ; },public static void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( context ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",721
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; VAR_4 = null ; VAR_5 . set ( true ) ; },public void METHOD_1 ( ) { VAR_3 = false ; VAR_4 = null ; VAR_5 . set ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",722
"public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 ) ; }",public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",723
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; VAR_4 . setText ( STRING_2 ) ; status = VAR_5 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; VAR_4 . setText ( STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",724
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . METHOD_2 ( ) ) != ( METHOD_2 ( ) ) ) ) return ; this . VAR_1 = VAR_1 ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . METHOD_2 ( ) ) != ( METHOD_2 ( ) ) ) ) return ; this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",725
public boolean METHOD_1 ( java.lang.String id ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; return VAR_2 . remove ( this . METHOD_2 ( id ) ) ; },public boolean METHOD_1 ( java.lang.String id ) { return VAR_2 . remove ( this . METHOD_2 ( id ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",726
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; if ( VAR_1 != null ) { VAR_2 = VAR_3 . getBoolean ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete Literal', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",727
"private void METHOD_1 ( ) { for ( java.lang.String type : VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( type , VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; } result = true ; }","private void METHOD_1 ( ) { for ( java.lang.String type : VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( type , VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",728
"public TYPE_1 METHOD_1 ( long time ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; } return new TYPE_1 ( time , VAR_1 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( long time ) { return new TYPE_1 ( time , VAR_1 , VAR_4 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",729
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; p = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",730
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_6 ( ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",731
public void METHOD_1 ( TYPE_1 node ) throws TYPE_2 { if ( node instanceof TYPE_3 ) { VAR_1 = ( ( TYPE_3 ) ( node ) ) . getType ( ) ; } super . METHOD_1 ( node ) ; },public void METHOD_1 ( TYPE_1 node ) throws TYPE_2 { super . METHOD_1 ( node ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",734
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 < 1 ) { VAR_2 = true ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 < 1 ) { METHOD_4 ( true ) ; } },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment']",735
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = VAR_3 . show ( this , STRING_1 , STRING_2 ) ; VAR_4 = null ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = VAR_3 . show ( this , STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",736
"public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) VAR_2 = new TYPE_2 ( VAR_1 ) ; else VAR_2 = null ; }","public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; }","['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",737
private void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } if ( ! ( VAR_3 ) ) { VAR_3 = true ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },private void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_3 ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },"['Move FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",738
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { for ( TYPE_3 < ? > VAR_2 : this . VAR_3 ) VAR_2 . METHOD_1 ( VAR_1 ) ; this . VAR_4 = VAR_1 ; this . VAR_5 . METHOD_2 ( ) ; this . VAR_6 = 0 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { for ( TYPE_3 < ? > VAR_2 : this . VAR_3 ) VAR_2 . METHOD_1 ( VAR_1 ) ; this . VAR_4 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",739
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( getTime ( ) ) ; VAR_2 = true ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( getTime ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",740
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",741
public void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { this . VAR_2 = new java.io.BufferedReader ( new TYPE_1 ( VAR_1 ) ) ; },public void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",742
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; METHOD_3 ( ) ; VAR_3 . init ( ) ; },public void METHOD_1 ( ) { VAR_3 . init ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",743
public final void METHOD_1 ( ) { VAR_1 = null ; key = null ; VAR_2 = 0 ; },public final void METHOD_1 ( ) { key = null ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",745
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } VAR_2 = false ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",747
public void METHOD_1 ( TYPE_1 event ) { this . VAR_1 = null ; this . VAR_2 = null ; },public void METHOD_1 ( TYPE_1 event ) { this . VAR_1 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",748
"public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { METHOD_2 ( function . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( VAR_4 . getName ( ) , this . state , VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { VAR_5 = this . state ; setState ( function . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( VAR_4 . getName ( ) , this . state , VAR_5 ) ; }","['Insert Assignment', 'Update Invocation', 'Insert FieldWrite', 'Insert FieldRead', 'Insert ThisAccess']",749
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; VAR_4 . setValue ( VAR_5 . getValue ( VAR_2 ) ) ; VAR_3 = true ; VAR_6 . METHOD_3 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_4 . setValue ( VAR_5 . getValue ( VAR_2 ) ) ; VAR_6 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",750
public void start ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; VAR_4 = false ; },public void start ( TYPE_1 VAR_1 ) { VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; VAR_4 = false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",751
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = new TYPE_4 ( getActivity ( ) ) ; VAR_4 . METHOD_2 ( this ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 VAR_4 = new TYPE_4 ( getActivity ( ) ) ; VAR_4 . METHOD_2 ( this ) ; return VAR_4 ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead']",752
public long METHOD_1 ( ) { if ( ( ( this . state ) == ( VAR_1 ) ) && ( ( ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ) > INT_1 ) ) { this . state = VAR_3 ; } return VAR_2 ; },public long METHOD_1 ( ) { return VAR_2 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",753
private void METHOD_1 ( ) { remove ( VAR_1 ) ; remove ( VAR_2 ) ; add ( VAR_3 ) ; VAR_4 = - 1 ; VAR_5 = VAR_6 [ 0 ] ; VAR_7 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { remove ( VAR_1 ) ; remove ( VAR_2 ) ; add ( VAR_3 ) ; VAR_5 = VAR_6 [ 0 ] ; VAR_7 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",754
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = false ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",755
"public java.lang.Object execute ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 , java.lang.Object [ ] VAR_4 , int VAR_5 ) { VAR_6 . setState ( VAR_7 ) ; VAR_8 = true ; return VAR_3 ; }","public java.lang.Object execute ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 , java.lang.Object [ ] VAR_4 , int VAR_5 ) { VAR_6 . setState ( VAR_7 ) ; return VAR_3 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",756
public void METHOD_1 ( TYPE_1 < TYPE_2 > value ) { if ( value . METHOD_2 ( ) ) { this . VAR_1 = value ; this . VAR_2 . get ( ) . METHOD_3 ( VAR_3 . get ( ) ) ; } },public void METHOD_1 ( TYPE_1 < TYPE_2 > value ) { if ( value . METHOD_2 ( ) ) { this . VAR_2 . get ( ) . METHOD_3 ( VAR_3 . get ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",757
public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 = 0 ; },public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",758
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = TYPE_1 . METHOD_2 ( STRING_2 ) ; VAR_2 = TYPE_1 . METHOD_2 ( STRING_3 ) ; VAR_3 = TYPE_1 . METHOD_2 ( STRING_4 ) ; VAR_4 = TYPE_1 . METHOD_2 ( STRING_5 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = TYPE_1 . METHOD_2 ( STRING_2 ) ; VAR_2 = TYPE_1 . METHOD_2 ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",759
"public void METHOD_1 ( int start , int end ) { VAR_1 = start ; VAR_2 = end ; VAR_3 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( int start , int end ) { VAR_1 = start ; VAR_2 = end ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",760
public void METHOD_1 ( ) { update = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( update ) ; },public void METHOD_1 ( ) { TYPE_1 update = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( update ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",761
public static void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess', 'Delete Wra']",762
"public void METHOD_1 ( byte [ ] VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( VAR_1 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_4 = false ; }","public void METHOD_1 ( byte [ ] VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( VAR_1 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",763
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; } VAR_2 = 0 ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",764
public void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 [ 0 ] [ 0 ] ) ; VAR_3 = false ; VAR_2 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 [ 0 ] [ 0 ] ) ; VAR_2 . METHOD_4 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",765
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",766
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( VAR_4 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( VAR_4 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",767
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( ) ; VAR_2 = new TYPE_3 ( ) ; VAR_3 = new TYPE_4 ( ) ; this . METHOD_3 ( new TYPE_5 ( this ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( ) ; VAR_2 = new TYPE_3 ( ) ; this . METHOD_3 ( new TYPE_5 ( this ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",768
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 = new TYPE_1 ( VAR_5 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",769
"public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { VAR_2 . METHOD_2 ( data ) ; VAR_3 = false ; if ( ! ( VAR_4 ) ) { METHOD_3 ( false ) ; } }","public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { VAR_2 . METHOD_2 ( data ) ; METHOD_3 ( false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",770
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Move Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",771
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; if ( this . VAR_4 . equals ( STRING_1 ) ) this . VAR_5 = VAR_3 ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = VAR_3 ; if ( this . VAR_4 . equals ( STRING_1 ) ) this . VAR_5 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",772
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; METHOD_3 ( ) ; } VAR_2 = 0 ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } METHOD_4 ( ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",773
public void METHOD_1 ( java.lang.String parameters ) { parameters = TYPE_1 . METHOD_2 ( parameters ) ; METHOD_3 ( ( parameters != null ? new TYPE_2 ( parameters ) : null ) ) ; this . parameters = null ; },public void METHOD_1 ( java.lang.String parameters ) { parameters = TYPE_1 . METHOD_2 ( parameters ) ; METHOD_3 ( ( parameters != null ? new TYPE_2 ( parameters ) : null ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",774
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = null ; title = null ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",775
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; ( VAR_3 ) ++ ; if ( ( VAR_3 ) >= ( VAR_4 ) ) { ( VAR_2 ) ++ ; VAR_3 = 0 ; } return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; if ( ( VAR_2 ) < ( VAR_4 ) ) ( VAR_2 ) ++ ; else VAR_2 = 0 ; ( VAR_3 ) ++ ; return VAR_1 ; }","['Move UnaryOperator', 'Update BinaryOperator', 'Insert Block', 'Update FieldRead', 'Move Assignment', 'Update FieldWrite']",776
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },private void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",777
public void show ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 = FLOAT_1 ; },public void show ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",778
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; } VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",779
private void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) + STRING_1 ; VAR_3 = STRING_2 ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",780
public void METHOD_1 ( ) { this . x = VAR_1 ; this . y = VAR_2 ; this . VAR_3 = 0 ; },public void METHOD_1 ( ) { this . x = VAR_1 ; this . y = VAR_2 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",781
"public void METHOD_1 ( int rows , int VAR_1 ) { VAR_2 = new TYPE_1 ( rows , VAR_1 ) ; }","public void METHOD_1 ( int rows , int VAR_1 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",782
public void METHOD_1 ( java.lang.Float temp ) { if ( temp != null ) { this . VAR_1 = temp ; } else { this . VAR_1 = VAR_2 ; } METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.Float temp ) { this . VAR_1 = temp ; METHOD_2 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",783
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; type = null ; VAR_2 = VAR_3 ; VAR_4 = 0 ; VAR_5 = 0 ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; type = null ; VAR_2 = null ; VAR_4 = 0 ; VAR_5 = 0 ; return this ; },"['Insert Literal', 'Delete FieldRead']",784
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . p = VAR_3 . METHOD_2 ( ) ; VAR_2 . view = VAR_1 ; VAR_4 . METHOD_3 ( ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . view = VAR_1 ; VAR_4 . METHOD_3 ( ) ; return true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",785
"public void remove ( java.lang.String VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; METHOD_1 ( ( VAR_1 + STRING_1 ) , true , STRING_2 ) ; METHOD_2 ( ) ; } }",public void remove ( java.lang.String VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) == 0 ) temp = true ; METHOD_2 ( ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Invocation', 'Insert Literal', 'Insert Assignment', 'Insert TypeAccess', 'Insert FieldWrite', 'Move Literal', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation']",786
public void METHOD_1 ( java.lang.String label ) { this . VAR_1 . add ( label ) ; this . VAR_2 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( java.lang.String label ) { this . VAR_1 . add ( label ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",787
public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; VAR_1 = this . METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",788
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 ( ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",789
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",790
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( INT_1 ) ; VAR_3 = true ; },private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( INT_1 ) ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",791
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",792
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ( ( VAR_3 ) == null ) && ( VAR_4 ) ) VAR_3 = getClass ( ) . METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",793
"public void METHOD_1 ( java.lang.Throwable VAR_1 , java.lang.Object VAR_2 ) { ( this . count ) ++ ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 , java.lang.Object VAR_2 ) { ( this . count ) ++ ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",794
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } else { VAR_1 . METHOD_2 ( ) ; } METHOD_1 ( VAR_2 ) ; VAR_3 . show ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",795
public void METHOD_1 ( ) { VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( new TYPE_1 ( VAR_3 ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",796
public void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_1 = VAR_4 ; VAR_5 = false ; } if ( ( VAR_6 ) == true ) { VAR_7 -= INT_1 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_1 = VAR_4 ; } if ( ( VAR_6 ) == true ) { VAR_7 -= INT_1 ; } },"['Update BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",797
"public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { if ( ( VAR_3 ) == false ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_4 ) ; VAR_3 = true ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_4 ) ; }","['Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",798
"public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = - 1 ; VAR_3 = null ; METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 , VAR_6 , VAR_7 ) ; }","public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = - 1 ; METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 , VAR_6 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",799
public void METHOD_1 ( ) throws java.io.IOException { file . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) throws java.io.IOException { file . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",800
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; VAR_3 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",801
"public void METHOD_1 ( TYPE_1 method , java.lang.Throwable VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_2 . METHOD_3 ( new TYPE_3 ( VAR_3 , VAR_4 . METHOD_4 ( ) ) ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 = false ; }","public void METHOD_1 ( TYPE_1 method , java.lang.Throwable VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_2 . METHOD_3 ( new TYPE_3 ( VAR_3 , VAR_4 . METHOD_4 ( ) ) ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",802
"public TYPE_1 METHOD_1 ( int i ) { buf = TYPE_2 . METHOD_2 ( buf , VAR_1 ) ; buf . METHOD_1 ( i ) ; return this ; }","public TYPE_1 METHOD_1 ( int i ) { TYPE_2 . METHOD_2 ( buf , VAR_1 ) ; buf . METHOD_1 ( i ) ; return this ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",803
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( true ) ; VAR_3 = true ; VAR_4 = true ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( true ) ; VAR_3 = true ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",804
"public void put ( java.lang.Integer index , java.lang.Long value ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new java.util.HashMap < > ( ) ; } this . VAR_2 . put ( index , value ) ; }","public void put ( java.lang.Integer index , java.lang.Long value ) { this . VAR_2 . put ( index , value ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",805
public static void METHOD_1 ( ) { VAR_1 = 0.0 ; },public static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",806
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = STRING_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",807
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; VAR_2 = new java.lang.Thread ( this : : METHOD_3 ) ; VAR_3 . start ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 = new java.lang.Thread ( this : : METHOD_3 ) ; VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",808
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( STRING_1 + ( VAR_1 ) ) ) ; },public synchronized void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 . METHOD_3 ( ( STRING_1 + ( VAR_1 ) ) ) ; },"['Insert UnaryOperator', 'Insert Wra', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",809
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 ) ; VAR_2 = this . VAR_3 ; VAR_4 = this . VAR_5 ; VAR_6 = this . METHOD_2 ( ) ; VAR_7 = this . METHOD_3 ( VAR_6 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 ) ; VAR_4 = this . VAR_5 ; VAR_6 = this . METHOD_2 ( ) ; VAR_7 = this . METHOD_3 ( VAR_6 ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",810
"public boolean first ( ) { if ( VAR_1 ) { key . METHOD_1 ( VAR_2 ) ; VAR_1 = false ; } return ( VAR_3 . position ( key , value , VAR_4 ) ) == 0 ; }","public boolean first ( ) { return ( VAR_3 . position ( key , value , VAR_4 ) ) == 0 ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",811
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { source = VAR_1 ; VAR_2 . start ( ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",812
public void start ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_2 = true ; },public void start ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",813
public void METHOD_1 ( TYPE_1 event ) throws java.lang.Exception { VAR_1 = this ; METHOD_2 ( ) . info ( ( STRING_1 + ( VAR_2 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 event ) throws java.lang.Exception { METHOD_2 ( ) . info ( ( STRING_1 + ( VAR_2 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",814
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",815
public void step ( ) { this . path = VAR_1 . step ( ) ; VAR_2 = VAR_3 ; if ( ( path ) == null ) { this . VAR_4 = false ; } },public void step ( ) { this . path = VAR_1 . step ( ) ; if ( ( path ) == null ) ; this . VAR_4 = false ; },"['Move Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block']",817
"private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; TYPE_1 . METHOD_2 ( ) ; VAR_3 = true ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; TYPE_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",818
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_3 ( VAR_3 ) ; VAR_2 = true ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_3 ( VAR_3 ) ; }","['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",819
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",820
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; METHOD_2 ( false ) ; },private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",821
public TYPE_1 METHOD_1 ( ) { TYPE_2 out = new TYPE_2 ( VAR_1 ) ; VAR_2 = this . VAR_3 ; ( this . VAR_4 ) -- ; return out ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 out = new TYPE_2 ( VAR_1 ) ; return out ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",822
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . get ( 0 ) . METHOD_2 ( ( - INT_1 ) ) ; },public void METHOD_1 ( ) { VAR_2 . get ( 0 ) . METHOD_2 ( ( - INT_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",823
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",824
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) VAR_2 . setText ( VAR_3 ) ; else VAR_2 . setText ( VAR_4 ) ; VAR_5 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) VAR_2 . setText ( VAR_3 ) ; else VAR_2 . setText ( VAR_4 ) ; METHOD_2 ( true ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment']",826
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { METHOD_3 ( ) . METHOD_1 ( ) ; VAR_3 = null ; } else { METHOD_4 ( ) ; } }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",827
public void start ( ) { super . start ( ) ; VAR_1 = TYPE_1 . METHOD_1 ( ) ; },public void start ( ) { super . start ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",828
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_2 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",829
public void METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { this . VAR_1 = METHOD_2 ( fileName ) ; },public void METHOD_1 ( java.lang.String fileName ) throws java.io.IOException { METHOD_2 ( fileName ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",830
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = new TYPE_2 ( getActivity ( ) . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",831
"public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 . setText ( ( STRING_1 + VAR_1 ) ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_4 . setText ( ( STRING_1 + VAR_1 ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",832
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",834
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; VAR_3 = true ; METHOD_2 ( i ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( i ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",835
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . add ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_6 = VAR_3 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . add ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",836
public static TYPE_1 METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_4 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . VAR_5 ; VAR_6 = INT_1 * ( VAR_4 ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",837
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( getIntent ( ) ) ; VAR_1 = false ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( getIntent ( ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",838
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",839
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = INT_1 - VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",840
"public void METHOD_1 ( ) { VAR_1 . remove ( VAR_2 class , this ) ; if ( ( VAR_3 ) != ( - 1 ) ) { VAR_4 = VAR_3 ; VAR_3 = - 1 ; } }","public void METHOD_1 ( ) { VAR_1 . remove ( VAR_2 class , this ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",841
public final int METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } return VAR_2 . METHOD_1 ( ) ; },public final int METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",842
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_2 , true ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",844
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",845
"public void METHOD_1 ( android.view.View VAR_1 ) throws TYPE_1 , TYPE_2 { VAR_2 = new java.lang.Object [ ] { new java.lang.Double ( VAR_3 ) } ; obj . METHOD_2 ( VAR_4 , VAR_5 . getId ( ) , VAR_2 ) ; VAR_6 = 0 ; VAR_7 = false ; }","public void METHOD_1 ( android.view.View VAR_1 ) throws TYPE_1 , TYPE_2 { VAR_2 = new java.lang.Object [ ] { new java.lang.Double ( VAR_3 ) } ; obj . METHOD_2 ( VAR_4 , VAR_5 . getId ( ) , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",846
public void update ( ) { VAR_1 = true ; VAR_2 = null ; VAR_3 = null ; METHOD_1 ( ) ; },public void update ( ) { VAR_1 = true ; METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",847
"public void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_2 = null ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",849
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",850
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",851
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . METHOD_3 ( VAR_1 , false ) ; VAR_3 = VAR_1 ; } VAR_4 = false ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . METHOD_3 ( VAR_1 , false ) ; VAR_3 = VAR_1 ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",852
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 [ VAR_2 ] [ VAR_1 ] . METHOD_2 ( ) . add ( VAR_4 ) ; VAR_3 [ VAR_2 ] [ VAR_1 ] . METHOD_2 ( ) . remove ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_3 [ 0 ] [ 0 ] . METHOD_2 ( ) . add ( VAR_4 ) ; VAR_3 [ 0 ] [ 0 ] . METHOD_2 ( ) . remove ( VAR_5 ) ; },"['Move Invocation', 'Update Invocation', 'Update Invocation', 'Move TypeAccess', 'Move TypeAccess', 'Move Literal', 'Move Literal', 'Insert Literal', 'Insert Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",853
"public void METHOD_1 ( java.lang.String url ) { if ( url != null ) { METHOD_1 ( url , 0 ) ; } }","public void METHOD_1 ( java.lang.String url ) { if ( url != null ) { this . url = url ; METHOD_1 ( url , 0 ) ; } }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",854
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 . add ( STRING_1 ) ; METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 . add ( STRING_1 ) ; METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",855
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_2 = VAR_3 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",856
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_1 . METHOD_3 ( STRING_2 ) ) { VAR_3 = VAR_1 . METHOD_4 ( STRING_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",857
"public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } return VAR_2 . METHOD_3 ( STRING_1 , VAR_3 class ) . METHOD_4 ( ) ; }","public java.util.List < TYPE_1 > METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( STRING_1 , VAR_3 class ) . METHOD_4 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",858
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 ) { VAR_4 = ( ( TYPE_2 < TYPE_3 > ) ( VAR_3 ) ) ; VAR_5 . METHOD_2 ( ) . select ( VAR_4 ) ; METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 ) { METHOD_3 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",859
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; ( VAR_2 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",860
"public void METHOD_1 ( int x , int y ) { this . VAR_1 = x ; this . VAR_2 = y ; this . VAR_3 = x ; this . VAR_4 = y ; }","public void METHOD_1 ( int x , int y ) { this . VAR_1 = x ; this . VAR_2 = y ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",861
private boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { return false ; } VAR_2 = VAR_1 ; this . VAR_3 = null ; return true ; },private boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { return false ; } VAR_2 = VAR_1 ; return true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",862
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; VAR_2 = true ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_3 ( STRING_1 , VAR_5 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_3 ( STRING_1 , VAR_5 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",863
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",864
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",865
"public void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) { METHOD_2 ( ) ; } else { METHOD_3 ( VAR_1 , VAR_4 ) ; VAR_5 = VAR_1 ; } }",public void METHOD_1 ( long VAR_1 ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",866
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_3 ) ( this . METHOD_3 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",867
final void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_1 ( ) ; VAR_4 = true ; VAR_2 = null ; } } },final void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_1 ( ) ; VAR_4 = true ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",868
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = new TYPE_1 ( 0 ) ; VAR_8 = null ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",869
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 ; if ( ! VAR_3 ) { VAR_4 = VAR_2 ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_3 ( STRING_1 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { if ( ! VAR_3 ) { VAR_4 = VAR_2 ; VAR_2 . METHOD_3 ( STRING_1 ) ; } }","['Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess']",870
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 = - 1 ; if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",871
public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = 0 ; return VAR_1 ; },public int METHOD_1 ( ) { return VAR_1 ; },"['Update TypeReference', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",872
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",873
public void METHOD_1 ( ) { this . offset = 1 ; this . METHOD_2 ( ) ; },public abstract void METHOD_1 ( ) ;,"['Insert Wra', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",874
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",875
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",876
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",877
"public void METHOD_1 ( float x , float y ) { this . VAR_1 . METHOD_1 ( x , y , 1 ) ; VAR_2 = false ; this . METHOD_2 ( ) ; }","public void METHOD_1 ( float x , float y ) { }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",878
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",879
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Insert LocalVariable', 'Insert Assignment', 'Insert TypeReference', 'Move ConstructorCall', 'Move FieldWrite', 'Insert Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",880
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; this . VAR_4 = 0 ; this . VAR_5 = null ; this . VAR_6 = null ; this . VAR_7 = null ; },public void METHOD_1 ( ) { this . VAR_2 = null ; this . VAR_3 = null ; this . VAR_4 = 0 ; this . VAR_5 = null ; this . VAR_6 = null ; this . VAR_7 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",881
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = - 1 ; VAR_3 = null ; VAR_4 = null ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = - 1 ; VAR_3 = null ; VAR_4 = null ; VAR_5 = 0 ; VAR_6 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",882
public static synchronized TYPE_1 METHOD_1 ( ) { VAR_1 . assertTrue ( ( ( VAR_2 ) != null ) ) ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_1 ( ) ; } return VAR_3 ; },public static synchronized TYPE_1 METHOD_1 ( ) { VAR_1 . assertTrue ( ( ( VAR_2 ) != null ) ) ; if ( ( VAR_3 ) == null ) { return new TYPE_1 ( ) ; } else { return VAR_3 ; } },"['Insert Block', 'Insert Return', 'Move Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",883
"public void METHOD_1 ( java.lang.String url , int VAR_1 ) { VAR_2 = METHOD_2 ( url , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String url , int VAR_1 ) { METHOD_2 ( url , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",884
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_3 = 1 ; } else { VAR_3 = 0 ; } VAR_4 . METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_3 ( true ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",885
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = null ; VAR_9 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_8 = null ; VAR_9 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",886
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",887
"private void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( getActivity ( ) , STRING_1 , VAR_2 ) . show ( ) ; }",private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",888
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_3 ( 0 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",889
public void METHOD_1 ( TYPE_1 error ) { VAR_1 = VAR_2 ; java.lang.System.out.println ( STRING_1 ) ; error . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 error ) { java.lang.System.out.println ( STRING_1 ) ; error . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",890
public static void METHOD_1 ( java.lang.String fileName ) throws java.lang.Exception { TYPE_1 data = TYPE_2 . METHOD_2 ( fileName ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_3 ( data ) ; VAR_2 = VAR_1 ; },public static void METHOD_1 ( java.lang.String fileName ) throws java.lang.Exception { TYPE_1 data = TYPE_2 . METHOD_2 ( fileName ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_3 ( data ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",891
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = - 1 ; VAR_3 = false ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",892
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = null ; TYPE_2 . METHOD_2 ( VAR_1 ) ; item . METHOD_3 ( VAR_1 ) ; METHOD_4 ( item , VAR_3 ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; item . METHOD_3 ( VAR_1 ) ; METHOD_4 ( item , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",894
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",895
public void METHOD_1 ( TYPE_1 label ) { METHOD_1 ( label . METHOD_2 ( ) ) ; this . VAR_1 = TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 label ) { METHOD_1 ( label . METHOD_2 ( ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",896
"public void setState ( long state ) { TYPE_1 VAR_1 = new TYPE_1 ( this , this . state , state ) ; this . state = state ; VAR_2 = TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 ) ; }","public void setState ( long state ) { TYPE_1 VAR_1 = new TYPE_1 ( this , this . state , state ) ; this . state = state ; TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",897
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",898
protected final void METHOD_1 ( TYPE_1 item ) { synchronized ( VAR_1 ) { VAR_2 = false ; VAR_3 . add ( item ) ; } },protected final void METHOD_1 ( TYPE_1 item ) { synchronized ( VAR_1 ) { VAR_3 . add ( item ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",899
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",900
public TYPE_1 METHOD_1 ( ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",901
public static void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; TYPE_1 . METHOD_2 ( new TYPE_2 ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + STRING_3 ) ) ) ; } },public static void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + STRING_3 ) ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",902
"public void METHOD_1 ( int VAR_1 ) { java.lang.String VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( TYPE_1 . METHOD_3 ( VAR_2 ) ) { VAR_4 = true ; } else { VAR_4 = false ; } METHOD_4 ( VAR_1 , VAR_5 ) ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_4 ( VAR_1 , VAR_5 ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",903
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",904
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = true ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",906
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . setValue ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",907
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",908
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( VAR_1 , this ) ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_3 ) { VAR_2 . put ( VAR_3 , this ) ; this . VAR_3 = VAR_3 ; METHOD_2 ( ) ; }","['Update Parameter', 'Update VariableRead', 'Update VariableRead', 'Insert ThisAccess']",909
"public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; VAR_1 . METHOD_1 ( STRING_1 , STRING_2 ) ; VAR_3 = new java.util.HashMap < > ( ) ; }","public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; VAR_1 . METHOD_1 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",910
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . setText ( VAR_5 ) ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",911
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { while ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 temp = this . VAR_1 ; while ( temp != null ) { temp . METHOD_2 ( ) ; } return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Insert FieldRead', 'Insert Invocation', 'Insert ThisAccess', 'Insert VariableRead', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",912
public void METHOD_1 ( final TYPE_1 listener ) { VAR_1 = listener ; TYPE_2 < TYPE_3 > VAR_2 = VAR_3 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( this ) ; },public void METHOD_1 ( final TYPE_1 listener ) { TYPE_2 < TYPE_3 > VAR_2 = VAR_3 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",914
private void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 . METHOD_2 ( ) ) ) VAR_2 . METHOD_3 ( ) ; else VAR_3 = true ; METHOD_4 ( ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 . METHOD_2 ( ) ) METHOD_5 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Move Invocation', 'Move Invocation', 'Insert Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",916
private void init ( android.content.Context context ) { VAR_1 = VAR_2 . get ( context ) . METHOD_1 ( ) ; VAR_3 = ( METHOD_2 ( ) . METHOD_3 ( ) . VAR_4 ) * INT_1 ; VAR_5 = false ; },private void init ( android.content.Context context ) { VAR_1 = VAR_2 . get ( context ) . METHOD_1 ( ) ; VAR_3 = ( METHOD_2 ( ) . METHOD_3 ( ) . VAR_4 ) * INT_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",917
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; out = new TYPE_3 ( ) ; TYPE_4 . METHOD_2 ( VAR_2 ) ; TYPE_4 . METHOD_3 ( new TYPE_5 ( out ) ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; out = new TYPE_3 ( ) ; TYPE_4 . METHOD_2 ( VAR_2 ) ; TYPE_4 . METHOD_3 ( new TYPE_5 ( out ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",919
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_3 = STRING_2 ; VAR_4 = TYPE_1 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",920
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",921
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { ++ ( VAR_2 ) ; VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; } return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { ++ ( VAR_2 ) ; return new TYPE_2 ( new TYPE_3 ( ) ) ; },"['Move UnaryOperator', 'Update Wra', 'Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",922
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( VAR_3 ) { VAR_3 = false ; VAR_4 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",923
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",924
protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; },protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",926
"private void init ( ) { int VAR_1 = getIntent ( ) . METHOD_1 ( VAR_2 , 0 ) ; VAR_3 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 , VAR_4 , VAR_4 ) ; VAR_5 = new TYPE_2 ( this ) ; }","private void init ( ) { int VAR_1 = getIntent ( ) . METHOD_1 ( VAR_2 , 0 ) ; VAR_3 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 , VAR_4 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",927
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 = value ; if ( ( VAR_2 ) == ( VAR_3 ) ) { setValue ( value ) ; } },public void METHOD_1 ( java.lang.String value ) { VAR_1 = value ; if ( ( VAR_2 ) == ( VAR_3 ) ) { setValue ( value ) ; } },['Delete ThisAccess'],928
public void METHOD_1 ( int index ) { VAR_1 = VAR_2 = 0 ; VAR_3 = - 1 ; VAR_4 . remove ( index ) ; },public void METHOD_1 ( int index ) { VAR_4 . remove ( index ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",930
"public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = null ; } else { VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 . length ) ; } }",public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete Literal', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",931
public final void start ( final TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_2 = VAR_1 ; main = new TYPE_2 ( ) ; VAR_3 . start ( VAR_2 ) ; },public final void start ( final TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_2 = VAR_1 ; new TYPE_2 ( ) . start ( VAR_2 ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",933
public java.lang.Object METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } VAR_3 = VAR_1 ; return VAR_1 ; },public java.lang.Object METHOD_1 ( ) { VAR_3 = VAR_1 ; return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",934
"private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.util.ArrayList < TYPE_2 > VAR_3 ) { VAR_4 = VAR_1 ; METHOD_1 ( null , VAR_1 , VAR_2 , VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.util.ArrayList < TYPE_2 > VAR_3 ) { METHOD_1 ( null , VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",935
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",936
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( ) ; assertNotNull ( VAR_1 ) ; assertNotNull ( VAR_1 . METHOD_3 ( ) ) ; VAR_1 = METHOD_4 ( ) ; assertNotNull ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",937
public void METHOD_1 ( boolean set ) { VAR_1 = set ; VAR_2 = ! ( VAR_1 ) ; },public void METHOD_1 ( boolean set ) { VAR_1 = set ; if ( VAR_1 ) { VAR_2 = false ; } else { VAR_2 = true ; } },"['Insert If', 'Move FieldRead', 'Insert Block', 'Insert Block', 'Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete UnaryOperator', 'Delete Assignment']",938
private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; if ( ( ( VAR_2 ) <= ( VAR_3 ) ) && ( ( VAR_2 ) >= ( VAR_4 ) ) ) { VAR_5 += VAR_6 ; ( VAR_7 ) ++ ; } },private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; if ( ( ( VAR_2 ) <= ( VAR_3 ) ) && ( ( VAR_2 ) >= ( VAR_4 ) ) ) VAR_5 += VAR_6 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",939
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 . status = false ; VAR_5 = null ; VAR_6 = null ; TYPE_3 . METHOD_3 ( ) ; METHOD_4 ( true ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; TYPE_3 . METHOD_3 ( ) ; METHOD_4 ( true ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",940
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",941
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . get ( position ) ; TYPE_1 VAR_4 = VAR_5 . getActivity ( ) ; ( ( TYPE_2 ) ( VAR_4 ) ) . METHOD_2 ( new TYPE_3 ( VAR_6 , VAR_2 ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_4 = VAR_5 . getActivity ( ) ; ( ( TYPE_2 ) ( VAR_4 ) ) . METHOD_2 ( new TYPE_3 ( VAR_6 , VAR_2 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",942
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",943
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { rows . METHOD_2 ( ) ; rows . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { rows = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",944
public void METHOD_1 ( java.lang.String date ) { if ( VAR_1 ) { VAR_2 . setText ( date ) ; VAR_1 = false ; } if ( VAR_3 ) { VAR_4 . setText ( date ) ; VAR_3 = false ; } },public void METHOD_1 ( java.lang.String date ) { VAR_4 . setText ( date ) ; VAR_2 . setText ( date ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",945
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.LinearLayout ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",947
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; VAR_3 = true ; VAR_4 . start ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_3 = true ; VAR_4 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",948
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { label . METHOD_3 ( ) ; VAR_3 [ INT_1 ] = VAR_4 ; VAR_5 = STRING_1 ; VAR_6 = STRING_1 ; VAR_7 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { label . METHOD_3 ( ) ; VAR_3 [ INT_1 ] = VAR_4 ; VAR_5 = STRING_1 ; VAR_6 = STRING_1 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",949
void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = null ; VAR_4 . METHOD_3 ( null ) ; },void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 = null ; VAR_1 = null ; VAR_4 . METHOD_3 ( null ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",950
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = STRING_1 ; VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",951
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; android.content.Intent intent = getIntent ( ) ; type = intent . METHOD_2 ( VAR_2 ) ; VAR_3 = intent . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_5 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; android.content.Intent intent = getIntent ( ) ; type = intent . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",952
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = METHOD_3 ( ) ; VAR_2 = METHOD_4 ( ) ; METHOD_5 ( ( ( VAR_3 . METHOD_6 ( ) ) - 1 ) ) ; } },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { METHOD_5 ( ( ( VAR_3 . METHOD_6 ( ) ) - 1 ) ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",953
public static void METHOD_1 ( ) throws TYPE_1 { if ( ( TYPE_2 ) != null ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 = null ; VAR_1 = null ; } },public static void METHOD_1 ( ) throws TYPE_1 { if ( ( TYPE_2 ) != null ) { TYPE_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",954
private static void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = 0 ; VAR_3 = VAR_4 ; TYPE_1 . METHOD_2 ( VAR_3 ) ; },private static void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_3 = VAR_4 ; TYPE_1 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",955
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 = false ; VAR_4 = ! ( VAR_4 ) ; setText ( VAR_5 ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_4 = ! ( VAR_4 ) ; setText ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",956
private void METHOD_1 ( int VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = - 1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Update Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",957
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",958
"public synchronized TYPE_1 < TYPE_2 > . TYPE_3 METHOD_1 ( TYPE_2 content ) { VAR_1 = new TYPE_3 ( content , VAR_1 , null ) ; if ( ( VAR_2 ) != null ) { VAR_3 = VAR_1 ; } return VAR_1 ; }","public synchronized TYPE_1 < TYPE_2 > . TYPE_3 METHOD_1 ( TYPE_2 content ) { VAR_1 = new TYPE_3 ( content , VAR_1 , null ) ; return VAR_1 ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",959
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",960
"public java.lang.String METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 . getId ( ) ) ) { event . METHOD_4 ( VAR_4 ) ; VAR_5 = false ; } return null ; }","public java.lang.String METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 . getId ( ) ) ) { event . METHOD_4 ( VAR_4 ) ; } return null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",961
public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",962
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = INT_1 * VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",963
"private boolean METHOD_1 ( ) { if ( ( VAR_1 ) >= 1 ) { return false ; } VAR_1 = ( VAR_1 ) + 1 ; return TYPE_1 . METHOD_2 ( getActivity ( ) ) . getBoolean ( STRING_1 , true ) ; }","private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( getActivity ( ) ) . getBoolean ( STRING_1 , true ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",964
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; TYPE_2 VAR_3 = VAR_4 . get ( VAR_5 ) ; VAR_3 . METHOD_2 ( ) . VAR_6 = STRING_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",965
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; VAR_2 = new TYPE_1 < > ( ) ; VAR_3 = new TYPE_1 < > ( ) ; VAR_4 = new TYPE_1 < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; VAR_2 = new TYPE_1 < > ( ) ; VAR_3 = new TYPE_1 < > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",966
public java.lang.String METHOD_1 ( ) { return ( size ) <= 0 ? null : VAR_1 [ ( ( size ) - 1 ) ] ; },public java.lang.String METHOD_1 ( ) { return ( size ) <= 0 ? null : VAR_1 [ ( -- ( size ) ) ] ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",967
"public void METHOD_1 ( int VAR_1 , int VAR_2 , double VAR_3 ) { VAR_4 = true ; VAR_5 . get ( VAR_1 ) . METHOD_2 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , double VAR_3 ) { VAR_5 . get ( VAR_1 ) . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",968
protected void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( message ) ; VAR_4 = false ; },protected void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( message ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",969
protected void METHOD_1 ( ) { VAR_1 = 0L ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = ( VAR_7 ) + ( java.lang.Math.round ( METHOD_2 ( ) ) ) ; VAR_8 = VAR_9 ; VAR_10 = 0L ; VAR_11 = 0L ; },protected void METHOD_1 ( ) { VAR_1 = 0L ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = ( VAR_7 ) + ( java.lang.Math.round ( METHOD_2 ( ) ) ) ; VAR_10 = 0L ; VAR_8 = 0L ; VAR_11 = 0L ; },"['Move Assignment', 'Insert Literal', 'Delete FieldRead']",970
"private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( null , null , null ) ; METHOD_3 ( 0 , 0 ) ; }","private void METHOD_1 ( ) { METHOD_2 ( null , null , null ) ; METHOD_3 ( 0 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",971
public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . METHOD_1 ( ) ; ( VAR_1 ) -- ; } else VAR_3 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) VAR_2 . METHOD_1 ( ) ; else VAR_3 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",972
void METHOD_1 ( long VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_2 = VAR_1 ; } VAR_3 = VAR_2 ; },void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },"['Move Assignment', 'Insert VariableRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldRead']",973
"public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String token , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = token ; VAR_5 = VAR_2 ; return true ; }","public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String token ) { VAR_3 = VAR_1 ; VAR_4 = token ; return true ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",974
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",976
public void METHOD_1 ( final TYPE_1 event ) { int VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 = VAR_2 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( final TYPE_1 event ) { int VAR_1 = event . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",977
"public void init ( ) { VAR_1 = new TYPE_1 ( this . getContext ( ) , this ) ; }",public void init ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",978
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getString ( VAR_5 ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",979
"void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 . METHOD_2 ( STRING_1 , this . VAR_3 ) ; this . VAR_3 = 0 ; this . VAR_4 = null ; this . VAR_5 = null ; }","void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 . METHOD_2 ( STRING_1 , this . VAR_3 ) ; this . VAR_3 = 0 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",981
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; VAR_1 = false ; VAR_2 = null ; VAR_3 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; VAR_1 = false ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",982
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) ; VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_2 . METHOD_4 ( java.lang.Math.round ( VAR_4 . METHOD_5 ( ) ) ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",983
public void METHOD_1 ( int VAR_1 ) { VAR_2 -= VAR_1 ; if ( ( VAR_2 ) <= 0 ) VAR_3 = false ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 -= VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",984
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; this . VAR_2 = 0 ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",985
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 , VAR_3 ) ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_4 ( VAR_1 , VAR_3 ) ; METHOD_5 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",986
public void METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",987
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getContext ( ) ) ; METHOD_4 ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getContext ( ) ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",988
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = new TYPE_2 < TYPE_1 > ( VAR_1 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move VariableRead', 'Insert ThisAccess', 'Delete ConstructorCall']",989
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",990
public static void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) { VAR_3 = false ; } else { VAR_3 = VAR_1 ; } },public static void METHOD_1 ( boolean VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_1 ; } },"['Insert UnaryOperator', 'Move FieldRead', 'Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",991
private void METHOD_1 ( ) { count = 0 ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 . METHOD_2 ( VAR_8 ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 . METHOD_2 ( VAR_8 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",992
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( getContext ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; } },private void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",993
public void METHOD_1 ( java.lang.String content ) { this . content = content ; },public void METHOD_1 ( java.lang.String content ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",994
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; if ( VAR_2 != 0 ) { VAR_4 = true ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",995
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_1 ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",996
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",997
public void handle ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",998
"public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) ; result = VAR_1 ; final android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_1 ) ; METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) ; final android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_1 ) ; METHOD_4 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",999
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1000
public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_1 += VAR_3 ; } if ( ( VAR_1 ) > ( VAR_2 ) ) { VAR_1 = VAR_2 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_1 += VAR_3 ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1001
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1002
"protected void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; this . VAR_1 = VAR_1 ; }",protected void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1003
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( VAR_4 , VAR_5 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1004
public void METHOD_1 ( ) { METHOD_2 ( 0 ) ; METHOD_3 ( ) ; VAR_1 = VAR_2 ; METHOD_4 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( 0 ) ; METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1005
protected void METHOD_1 ( ) { super . METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_4 ( ) ; VAR_2 = VAR_3 . METHOD_5 ( VAR_3 . METHOD_6 ( VAR_2 ) ) ; METHOD_7 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",1006
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1007
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , null ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Move Invocation', 'Insert VariableRead', 'Update Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1008
public void METHOD_1 ( ) { },public void METHOD_1 ( ) { this . key = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",1009
public void METHOD_1 ( java.lang.String title ) { this . title = title ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( title ) ; } },public void METHOD_1 ( java.lang.String title ) { VAR_1 . METHOD_2 ( title ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1010
synchronized void METHOD_1 ( ) { ( VAR_1 ) -- ; ( VAR_2 ) ++ ; },synchronized void METHOD_1 ( ) { ( VAR_1 ) -- ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1011
"private void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = true ; if ( VAR_3 ) VAR_5 = VAR_6 ; VAR_6 = new TYPE_1 ( VAR_5 , VAR_1 , VAR_2 ) ; VAR_7 = VAR_6 ; METHOD_2 ( ) ; }","private void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = true ; if ( VAR_3 ) VAR_5 = VAR_6 ; VAR_6 = new TYPE_1 ( VAR_6 , VAR_1 , VAR_2 ) ; METHOD_2 ( ) ; }","['Move FieldRead', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment']",1012
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; VAR_3 = new java.util.HashMap < > ( ) ; VAR_4 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 = VAR_1 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1013
public java.lang.Object METHOD_1 ( ) { java.lang.Object VAR_1 = VAR_2 . METHOD_1 ( ) ; if ( ( ! ( VAR_3 ) ) && ( VAR_1 != null ) ) { METHOD_2 ( VAR_1 ) ; } VAR_3 = false ; return VAR_1 ; },public java.lang.Object METHOD_1 ( ) { return METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",1014
public int METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) return VAR_3 . METHOD_1 ( VAR_1 ) ; else throw new TYPE_2 ( ) ; },public int METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { if ( ( VAR_3 ) != null ) return VAR_3 . METHOD_1 ( VAR_1 ) ; else throw new TYPE_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1015
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { VAR_2 = METHOD_2 ( VAR_2 , new TYPE_3 ( VAR_1 , type ) ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { METHOD_2 ( VAR_2 , new TYPE_3 ( VAR_1 , type ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1016
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( null , true ) ; VAR_3 . show ( ) ; VAR_4 = VAR_5 . METHOD_2 ( VAR_6 . getText ( ) ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( null , true ) ; VAR_3 . show ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",1017
"public void METHOD_1 ( ) { this . VAR_1 = false ; TYPE_1 . METHOD_2 ( VAR_2 , this ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_2 , this ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1019
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_4 = VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_5 = VAR_1 . METHOD_2 ( STRING_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_5 = VAR_1 . METHOD_2 ( STRING_4 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1020
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( this , VAR_1 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_4 . METHOD_1 ( VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_3 = new TYPE_1 ( this , VAR_2 . METHOD_2 ( ) ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_4 . METHOD_1 ( VAR_3 ) ; }","['Move FieldWrite', 'Move ConstructorCall', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment']",1022
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1023
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; this . VAR_2 = ( ( TYPE_1 ) ( new TYPE_2 ( STRING_1 , STRING_2 , ( - 1 ) , STRING_3 , INT_1 , STRING_3 ) ) ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1024
public void METHOD_1 ( java.lang.String expr ) { this . VAR_1 = expr ; if ( expr != null ) { METHOD_2 ( ) ; VAR_2 . setText ( expr ) ; } },public void METHOD_1 ( java.lang.String expr ) { VAR_2 . setText ( expr ) ; METHOD_2 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1025
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; this . VAR_1 . METHOD_3 ( this ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; this . VAR_1 . METHOD_3 ( this ) ; } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1026
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == STRING_1 ) { VAR_1 = new java.lang.String ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { if ( VAR_1 = STRING_1 ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Move Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ConstructorCall']",1028
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . index = position ; METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( getContext ( ) , ( STRING_1 + position ) , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( getContext ( ) , ( STRING_1 + position ) , VAR_3 ) . show ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1029
public void METHOD_1 ( android.content.Context context ) { this . context = context ; VAR_1 = TYPE_1 . METHOD_2 ( context ) ; },public void METHOD_1 ( android.content.Context context ) { this . context = context ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1030
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( new TYPE_3 ( TYPE_4 . METHOD_3 ( ) ) . toString ( ) , VAR_2 ) ) ; VAR_3 = true ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( new TYPE_3 ( TYPE_4 . METHOD_3 ( ) ) . toString ( ) , VAR_2 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1031
private final < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 ) ; return VAR_1 ; },private final < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1032
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 ) ; VAR_6 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_7 ) ) ) ; return VAR_6 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_6 = ( ( TYPE_4 ) ( VAR_1 . METHOD_2 ( VAR_5 , VAR_2 ) ) ) ; return VAR_6 ; }","['Move FieldWrite', 'Move TypeReference', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1033
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_4 . getText ( ) ; } boolean VAR_5 = METHOD_2 ( item , VAR_6 , VAR_7 ) ; VAR_8 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { boolean VAR_5 = METHOD_2 ( item , VAR_6 , VAR_7 ) ; VAR_8 . METHOD_3 ( VAR_5 ) ; }","['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1034
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; return null ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_2 = null ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1035
private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . get ( 0 ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",1036
public void METHOD_1 ( ) { VAR_1 = ! ( METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = true ; } else { VAR_1 = false ; } VAR_2 . METHOD_3 ( ) ; },"['Insert If', 'Move UnaryOperator', 'Insert Block', 'Insert Block', 'Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete Assignment']",1038
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_3 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",1039
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = 0 ; this . METHOD_2 ( ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { this . METHOD_2 ( ) . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1040
public boolean METHOD_1 ( ) { boolean VAR_1 = ( ( counter ) > ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ; if ( VAR_1 ) { VAR_4 = true ; this . METHOD_2 ( ) ; } return VAR_1 ; },public boolean METHOD_1 ( ) { return ( counter ) > ( VAR_2 ) ; },"['Move BinaryOperator', 'Delete TypeReference', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",1041
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( int offset , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { this . offset = offset ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Parameter', 'Insert Assignment', 'Insert TypeReference', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",1042
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; VAR_3 . METHOD_3 ( VAR_4 ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1045
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; VAR_1 = false ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1046
public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 t = VAR_2 [ VAR_1 ] ; VAR_2 [ VAR_1 ] = null ; ( VAR_3 ) -- ; return t ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 t = VAR_2 [ VAR_1 ] ; VAR_2 [ VAR_1 ] = null ; return t ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1047
"public void start ( ) { VAR_1 = true ; VAR_2 = false ; METHOD_1 ( VAR_3 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","public void start ( ) { VAR_1 = true ; METHOD_1 ( VAR_3 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1048
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = INT_1 ; METHOD_2 ( 0 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = INT_1 ; METHOD_2 ( 0 ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",1049
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_3 = null ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1050
"public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = STRING_1 ; VAR_2 = VAR_3 ; VAR_4 = false ; METHOD_2 ( VAR_3 , false ) ; VAR_5 = true ; VAR_6 . METHOD_3 ( 0 ) ; return false ; }","public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = STRING_1 ; VAR_2 = VAR_3 ; METHOD_2 ( VAR_3 , false ) ; VAR_5 = true ; VAR_6 . METHOD_3 ( 0 ) ; return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1051
public void METHOD_1 ( int x ) { VAR_1 . add ( x ) ; VAR_2 = x ; },public void METHOD_1 ( int x ) { VAR_1 . add ( x ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1052
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_4 ( ) . toString ( ) ; METHOD_5 ( VAR_2 ) ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; return true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1054
public static void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) TYPE_1 . METHOD_3 ( VAR_2 ) ; },public static void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1055
public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1057
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 . getValue ( ) ; VAR_5 = java.lang.Double . METHOD_2 ( VAR_6 . getText ( ) ) ; VAR_7 = java.lang.Double . METHOD_2 ( VAR_8 . getText ( ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1058
public static final void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getString ( VAR_6 ) ; VAR_7 = VAR_3 . getString ( VAR_8 ) ; VAR_9 = VAR_3 . getString ( VAR_10 ) ; },public static final void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getString ( VAR_6 ) ; VAR_7 = VAR_3 . getString ( VAR_8 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1059
"public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( java.util.Arrays.asList ( VAR_2 , VAR_2 , VAR_2 , VAR_2 ) ) ; METHOD_3 ( false ) ; VAR_3 = 0 ; }","public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( java.util.Arrays.asList ( VAR_2 , VAR_2 , VAR_2 , VAR_2 ) ) ; }","['Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1060
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . getId ( ) ) == ( VAR_3 ) ) { VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_5 = new TYPE_2 ( this ) ; VAR_5 . METHOD_2 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . getId ( ) ) == ( VAR_3 ) ) { TYPE_2 VAR_5 = new TYPE_2 ( this ) ; VAR_5 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1061
"public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.String name ) throws java.io.IOException { this . VAR_1 = VAR_1 ; METHOD_2 ( name ) ; VAR_2 = new java.lang.Object ( ) ; }","public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.String name ) throws java.io.IOException { this . VAR_1 = VAR_1 ; METHOD_2 ( name ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1062
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; this . VAR_3 = this . VAR_4 ; },public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",1063
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1064
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; this . METHOD_3 ( true ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = VAR_6 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; this . METHOD_3 ( true ) ; VAR_3 = 0 ; VAR_4 = 0 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1065
"public void METHOD_1 ( ) { if ( ( b ) == null ) { b = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; } VAR_2 = false ; }","public void METHOD_1 ( ) { if ( ( b ) == null ) { b = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1067
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; java.lang.System.exit ( 0 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.System.exit ( 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1068
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new java.util.ArrayList < TYPE_2 > ( ) , STRING_1 , VAR_2 , STRING_1 , STRING_1 , STRING_1 , VAR_2 , STRING_1 , STRING_1 , 0 ) ; }",public void METHOD_1 ( ) { VAR_1 = null ; },"['Insert Literal', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall']",1071
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1072
public void METHOD_1 ( ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; VAR_3 = VAR_4 . getText ( ) . toString ( ) ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; VAR_3 = VAR_4 . getText ( ) . toString ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1074
public void start ( ) { if ( VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; } else { TYPE_2 . METHOD_1 ( this ) ; } },public void start ( ) { VAR_1 = true ; if ( VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; } else { TYPE_2 . METHOD_1 ( this ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1075
"void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; context . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }",void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1077
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = STRING_1 ; synchronized ( STRING_2 ) { for ( TYPE_1 key : VAR_3 . values ( ) ) key . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { synchronized ( STRING_2 ) { for ( TYPE_1 key : VAR_3 . values ( ) ) key . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1078
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },['Delete ThisAccess'],1079
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1080
private void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_6 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1082
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { return new TYPE_1 ( VAR_1 ) ; } return VAR_2 ; },"['Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",1083
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1084
private void METHOD_1 ( ) { VAR_1 = 0 ; if ( VAR_2 ) ( VAR_3 ) ++ ; else ( VAR_3 ) -- ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = 0 ; if ( VAR_2 ) ( VAR_3 ) ++ ; else ( VAR_3 ) -- ; VAR_2 = true ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1086
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1087
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = new TYPE_2 ( ) ; VAR_3 = VAR_4 ; },['Delete FieldRead'],1088
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ) ) { VAR_1 . METHOD_3 ( true ) ; } VAR_3 = false ; },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ) ) { VAR_1 . METHOD_3 ( true ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1089
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; METHOD_2 ( VAR_4 , null ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_4 , null ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1091
"public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < TYPE_1 > > VAR_1 ) { VAR_2 = VAR_1 ; }","public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < TYPE_1 > > VAR_1 ) { this . VAR_2 = VAR_1 ; }",['Insert ThisAccess'],1092
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 class ) ; VAR_5 = TYPE_1 . METHOD_2 ( VAR_6 class ) ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 class ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1093
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_1 , VAR_2 , METHOD_2 ( ) ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_1 , VAR_2 , METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1094
public void remove ( int index ) { VAR_1 . remove ( index ) ; VAR_2 . remove ( index ) ; length = ( length ) - 1 ; },public void remove ( int index ) { VAR_1 . remove ( index ) ; VAR_2 . remove ( index ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",1095
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( event ) - > { VAR_1 . METHOD_3 ( ) ; VAR_2 . setText ( VAR_3 . toString ( ) ) ; VAR_4 = true ; } ) ; },private void METHOD_1 ( ) { this . METHOD_2 ( ( event ) - > { } ) ; },"['Insert Invocation', 'Insert ThisAccess', 'Move FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1096
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_1 = false ; VAR_3 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_3 ( VAR_2 ) ; VAR_1 = false ; } },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1097
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1098
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1099
public void update ( ) { this . VAR_1 += ( VAR_2 ) * ( VAR_3 ) ; this . VAR_4 += ( VAR_5 ) * ( VAR_3 ) ; },public void update ( ) { VAR_1 += ( VAR_2 ) * ( VAR_3 ) ; VAR_4 += ( VAR_5 ) * ( VAR_3 ) ; },"['Delete ThisAccess', 'Delete ThisAccess']",1100
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 == null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } else { VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1101
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 += INT_1 ; ( VAR_3 ) ++ ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 += INT_1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1102
"protected void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { return ; } java.lang.System.out.println ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_1 ( this , VAR_1 , VAR_3 ) ; }",protected void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { return ; } java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1103
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . start ( ) ; VAR_2 = false ; } else { VAR_4 . METHOD_2 ( ) ; VAR_2 = true ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1104
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1105
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( VAR_3 class ) , TYPE_3 ) ; VAR_4 = false ; set = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( VAR_3 class ) , TYPE_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1106
public boolean METHOD_1 ( ) { return ( this . VAR_1 ) == 0 ; },public boolean METHOD_1 ( ) { this . VAR_1 = 0 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Move ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return']",1107
"public void METHOD_1 ( ) { VAR_1 . set ( 0 , 0 ) ; if ( ( VAR_2 ) == 0 ) { state = VAR_3 ; } else { ( VAR_2 ) -- ; } VAR_4 = 0 ; }","public void METHOD_1 ( ) { VAR_1 . set ( 0 , 0 ) ; if ( ( VAR_2 ) == 0 ) { } else { ( VAR_2 ) -- ; } VAR_4 = 0 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1108
"public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = this . state ; setState ( function . METHOD_2 ( VAR_4 ) ) ; METHOD_3 ( VAR_5 . getName ( ) , this . state , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { setState ( function . METHOD_2 ( VAR_4 ) ) ; METHOD_3 ( VAR_5 . getName ( ) , this . state , VAR_3 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",1109
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 = 0 ; VAR_3 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1111
private synchronized void METHOD_1 ( ) { if ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ! ( VAR_2 ) ) ) { this . VAR_2 = true ; java.lang.System.out.println ( STRING_1 ) ; METHOD_3 ( ) ; VAR_2 = false ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_3 ( ) ; } },"['Move UnaryOperator', 'Delete Wra', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1112
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1113
"public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = false ; start ( VAR_2 , null ) ; } }","public void METHOD_1 ( ) { start ( VAR_2 , null ) ; }","['Move Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1114
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_5 ) ) ) . getText ( ) . toString ( ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_5 ) ) ) . getText ( ) . toString ( ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1115
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { VAR_2 . add ( VAR_1 ) ; result = true ; } VAR_3 = false ; VAR_4 = - 1 ; return result ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { VAR_2 . add ( VAR_1 ) ; result = true ; } return result ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1116
public boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { this . VAR_2 = METHOD_2 ( ) ; } return ! ( VAR_2 . METHOD_3 ( ) ) ; },public boolean METHOD_1 ( ) { return ! ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1117
"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = getName ( ) ; name = null ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( ""name"" , VAR_2 , getName ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",1118
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",1119
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 . equals ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1120
public void METHOD_1 ( ) { VAR_1 = null ; context . METHOD_1 ( ) ; },public void METHOD_1 ( ) { context . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1121
public synchronized void METHOD_1 ( ) { VAR_1 -= 1 ; VAR_2 += 1 ; VAR_3 = false ; },public synchronized void METHOD_1 ( ) { VAR_1 -= 1 ; VAR_2 += 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1123
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = null ; ( size ) -- ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; ( size ) -- ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1124
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",1125
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( getActivity ( ) ) ; if ( VAR_1 == null ) { METHOD_3 ( true ) ; } else { METHOD_3 ( false ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 == null ) { METHOD_3 ( true ) ; } else { METHOD_3 ( false ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1126
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return VAR_1 ; },"['Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",1127
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } this . METHOD_4 ( VAR_3 ) ; VAR_1 = null ; },public void METHOD_1 ( ) { this . METHOD_4 ( VAR_3 ) ; if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } },"['Move If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1128
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( 0 ) ; VAR_4 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( false , false ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_3 . METHOD_3 ( 0 ) ; VAR_4 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( false , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1129
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( VAR_4 ) ; METHOD_2 ( VAR_5 ) ; VAR_6 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . remove ( VAR_4 ) ; METHOD_2 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1130
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 . equals ( state ) ) ) { VAR_3 = state ; state = VAR_4 ; } } try { METHOD_2 ( STRING_1 ) ; } catch ( java.io.IOException VAR_5 ) { } },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 . equals ( state ) ) ) { state = VAR_4 ; } } try { METHOD_2 ( STRING_1 ) ; } catch ( java.io.IOException VAR_5 ) { } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1131
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; METHOD_3 ( true ) ; VAR_2 = true ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 ( ) ) . METHOD_6 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; METHOD_3 ( true ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 ( ) ) . METHOD_6 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1133
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_7 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1134
"public void METHOD_1 ( ) { context = getContext ( ) ; if ( ( context ) != null ) { VAR_1 = VAR_2 . show ( getContext ( ) , STRING_1 , STRING_2 ) ; METHOD_2 ( ) ; } }","public void METHOD_1 ( ) { VAR_1 = VAR_2 . show ( getContext ( ) , STRING_1 , STRING_2 ) ; METHOD_2 ( ) ; }","['Move Assignment', 'Move Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1135
public void METHOD_1 ( java.net.URL VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = null ; return ; } this . VAR_1 = VAR_2 . toString ( ) ; },public void METHOD_1 ( java.net.URL VAR_1 ) { this . VAR_1 = VAR_2 . toString ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",1136
"public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; set ( TYPE_1 . METHOD_2 ( ) , STRING_1 , VAR_1 ) ; }","public void METHOD_1 ( final java.lang.String VAR_1 ) { set ( TYPE_1 . METHOD_2 ( ) , STRING_1 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1137
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 = METHOD_3 ( ) ; VAR_4 . METHOD_4 ( true ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_4 = METHOD_3 ( ) ; VAR_4 . METHOD_4 ( true ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1138
"public void METHOD_1 ( ) { if ( ( VAR_1 ) > INT_1 ) { intent . METHOD_2 ( VAR_2 , true ) ; VAR_3 . METHOD_3 ( intent ) ; VAR_1 = 0 ; } else { VAR_1 += 1 ; METHOD_4 ( VAR_4 ) ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) > INT_1 ) { intent . METHOD_2 ( VAR_2 , true ) ; VAR_3 . METHOD_3 ( intent ) ; } else { VAR_1 += 1 ; METHOD_4 ( VAR_4 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1139
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1140
public double METHOD_1 ( ) { VAR_1 = ( VAR_2 ) - ( ( FLOAT_1 * ( VAR_3 ) ) / ( TYPE_1 . METHOD_2 ( t ) ) ) ; return VAR_1 ; },public double METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",1141
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 . setText ( java.lang.String . METHOD_2 ( VAR_4 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_5 . setText ( java.lang.String . METHOD_2 ( VAR_2 ) ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1143
public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_5 = true ; },public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1144
"public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; VAR_2 = false ; VAR_3 = 0 ; state = null ; TYPE_1 . METHOD_2 ( VAR_4 , null ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) throws java.io.IOException { VAR_2 = false ; VAR_3 = 0 ; state = null ; TYPE_1 . METHOD_2 ( VAR_4 , null ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1145
public void METHOD_1 ( TYPE_1 VAR_1 ) { int index = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( index != ( VAR_2 ) ) { VAR_2 = index ; this . METHOD_4 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_4 ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1146
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1147
"private synchronized void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 class . getName ( ) ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 = METHOD_4 ( VAR_1 , VAR_4 , VAR_5 ) ; }","private void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 class . getName ( ) ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_4 , VAR_5 ) ; }","['Move Invocation', 'Delete Wra', 'Delete FieldWrite', 'Delete Assignment']",1148
"public java.lang.String METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; info = new TYPE_2 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; return VAR_3 ; }",public java.lang.String METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_3 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",1149
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( ! ( VAR_2 . getText ( ) . toString ( ) . isEmpty ( ) ) ) && ( ( VAR_3 ) == true ) ) { VAR_3 = false ; METHOD_2 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 . getText ( ) . toString ( ) . isEmpty ( ) ) ) METHOD_2 ( ) ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1150
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = 0 ; },public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1151
public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) > INT_1 ) VAR_1 = 0 ; return new TYPE_2 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; return new TYPE_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1152
public final void setText ( final java.lang.String VAR_1 ) { this . text = VAR_1 ; VAR_2 = VAR_3 . METHOD_1 ( this . text ) ; },public final void setText ( final java.lang.String VAR_1 ) { this . text = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",1153
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_1 ( ) ) == ( VAR_2 ) ) { VAR_3 = null ; VAR_4 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_1 ( ) ) == ( VAR_2 ) ) { VAR_4 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1154
"public java.lang.String METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , num ) ; info = new TYPE_2 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; return VAR_3 ; }","public java.lang.String METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , num ) ; return VAR_3 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",1155
"public TYPE_1 METHOD_1 ( ) { int VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { return VAR_2 . METHOD_2 ( INT_1 , VAR_3 ) ; } else { return VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; } }","public TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( INT_1 , VAR_3 ) ; }","['Move Return', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",1156
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = key ; METHOD_2 ( ( ( VAR_3 . getId ( ) ) % ( VAR_4 ) ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ( ( VAR_3 . getId ( ) ) % ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1157
"public boolean METHOD_1 ( int id , android.content.Context context ) { this . VAR_1 = null ; TYPE_1 VAR_2 = new TYPE_1 ( context , this ) ; return VAR_2 . METHOD_1 ( id ) ; }","public boolean METHOD_1 ( int id , android.content.Context context ) { TYPE_1 VAR_2 = new TYPE_1 ( context , this ) ; return VAR_2 . METHOD_1 ( id ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1158
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1159
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1160
"public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 . METHOD_2 ( false ) ; VAR_5 = null ; }","public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 . METHOD_2 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1161
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; this . VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_2 . show ( ) ; this . VAR_1 . METHOD_3 ( false ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",1162
public void METHOD_1 ( ) { VAR_1 . error ( STRING_1 ) ; VAR_2 = false ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1163
public void METHOD_1 ( TYPE_1 type ) { this . VAR_1 = type . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 type ) { this . type = type ; this . VAR_1 = type . METHOD_2 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",1164
"private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; VAR_2 = - INT_1 ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; VAR_2 = - 1 ; }","['Insert Literal', 'Delete FieldRead']",1165
"public void show ( ) { VAR_1 = VAR_2 . getString ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 . get ( ( ( VAR_1 ) + STRING_3 ) , VAR_5 class ) ) ; VAR_6 = 0 ; }","public void show ( ) { VAR_1 = VAR_2 . getString ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 . get ( ( ( VAR_1 ) + STRING_3 ) , VAR_5 class ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1166
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) . getBoolean ( VAR_2 ) ; VAR_3 = TYPE_1 . METHOD_3 ( this ) ; VAR_4 = VAR_5 . init ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 = TYPE_1 . METHOD_3 ( this ) ; VAR_4 = VAR_5 . init ( this ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1167
"public void METHOD_1 ( int VAR_1 , int height ) { this . VAR_2 = VAR_1 ; this . VAR_3 = height ; VAR_4 = TYPE_1 . METHOD_2 ( ( VAR_1 * height ) ) ; METHOD_3 ( VAR_1 , height ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { this . VAR_2 = VAR_1 ; this . VAR_3 = height ; METHOD_3 ( VAR_1 , height ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",1168
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { if ( VAR_1 == ( VAR_3 ) ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_2 ( ( STRING_1 + VAR_2 ) ) ; } VAR_4 = true ; VAR_5 . METHOD_3 ( ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { if ( VAR_1 == ( VAR_3 ) ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_2 ( ( STRING_1 + VAR_2 ) ) ; } VAR_5 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1169
"private void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 = VAR_2 ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_3 = new TYPE_2 ( INT_1 , INT_2 ) ; }",private void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 = VAR_2 ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1170
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = true ; },public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1171
"public void METHOD_1 ( ) { VAR_1 = 1 ; TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 ) ; METHOD_3 ( METHOD_4 ( ) ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1172
"public int METHOD_1 ( int VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = 0 ; return 0 ; } VAR_3 = VAR_1 ; if ( ( VAR_3 ) < 0 ) { VAR_3 = 0 ; } return VAR_3 ; }",public int METHOD_1 ( int VAR_1 ) { VAR_3 = VAR_1 ; if ( ( VAR_3 ) < 0 ) { VAR_3 = 0 ; } return VAR_3 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1173
final void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_5 . METHOD_1 ( VAR_1 ) ; } },final void METHOD_1 ( boolean VAR_1 ) { for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_5 . METHOD_1 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1174
public void handle ( TYPE_1 event ) { VAR_1 = false ; VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; },public void handle ( TYPE_1 event ) { VAR_2 . METHOD_1 ( VAR_3 ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1175
public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1176
void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < ( VAR_2 ) ) { this . VAR_1 = VAR_2 ; } else this . VAR_1 = VAR_1 ; if ( ( this . VAR_3 ) == ( this . VAR_1 ) ) VAR_4 = true ; },void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) { this . VAR_1 = 0 ; } else this . VAR_1 = VAR_1 ; },"['Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1177
"public void replace ( int p , TYPE_1 VAR_1 ) { operation = VAR_2 ; VAR_3 = p ; VAR_4 = p ; TYPE_1 VAR_5 = VAR_6 . get ( p ) ; VAR_6 . remove ( VAR_5 ) ; VAR_6 . add ( p , VAR_1 ) ; }","public void replace ( int p , TYPE_1 VAR_1 ) { TYPE_1 VAR_5 = VAR_6 . get ( p ) ; VAR_6 . remove ( VAR_5 ) ; VAR_6 . add ( p , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1178
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = false ; VAR_6 = - 1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = false ; VAR_6 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1180
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; new TYPE_1 ( ) . execute ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( ) . execute ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1181
"public void METHOD_1 ( float VAR_1 ) { VAR_2 += VAR_1 ; if ( VAR_3 ) { return ; } VAR_3 = true ; VAR_4 . step ( METHOD_2 ( ) , VAR_2 ) ; METHOD_3 ( ) ; VAR_2 = 0.0F ; VAR_3 = false ; }","public void METHOD_1 ( float VAR_1 ) { VAR_2 += VAR_1 ; if ( VAR_3 ) { return ; } VAR_4 . step ( METHOD_2 ( ) , VAR_2 ) ; METHOD_3 ( ) ; VAR_2 = 0.0F ; VAR_3 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1182
public double METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; return VAR_1 ; },public double METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",1184
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = FLOAT_1 ; VAR_4 = INT_1 ; VAR_5 = FLOAT_2 ; VAR_6 = FLOAT_2 ; VAR_7 = FLOAT_1 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_5 = FLOAT_2 ; VAR_6 = FLOAT_2 ; VAR_7 = FLOAT_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1185
public void METHOD_1 ( ) { VAR_1 -= 1 ; if ( ( VAR_1 ) < 0 ) { VAR_2 = VAR_3 ; } else { TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_4 ; } },public void METHOD_1 ( ) { VAR_1 -= 1 ; if ( ( VAR_1 ) < 0 ) { VAR_2 = VAR_3 ; } else TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1186
"protected TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = context . METHOD_1 ( METHOD_2 ( ) , VAR_2 ) ; } return VAR_1 ; }","protected TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { context . METHOD_1 ( METHOD_2 ( ) , VAR_2 ) ; } return VAR_1 ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1187
"public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( result ) ; VAR_2 . METHOD_3 ( true ) ; VAR_2 = new TYPE_2 ( VAR_1 . METHOD_4 ( ) , listener ) ; VAR_3 . execute ( ) ; }","public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( result ) ; new TYPE_2 ( VAR_1 . METHOD_4 ( ) , listener ) . execute ( ) ; }","['Insert Invocation', 'Move ConstructorCall', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1188
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { this . VAR_2 = VAR_2 ; VAR_2 . METHOD_2 ( this ) ; if ( ! VAR_3 ) { VAR_2 . METHOD_3 ( STRING_1 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { if ( ! VAR_3 ) { VAR_2 . METHOD_3 ( STRING_1 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation']",1189
public void METHOD_1 ( ) { VAR_1 = false ; this . VAR_2 = VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 = VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1190
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; },protected void METHOD_1 ( TYPE_1 result ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1191
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = VAR_2 ; VAR_2 = this ; VAR_3 . METHOD_2 ( ) ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_3 . METHOD_2 ( ) ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",1192
public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . contains ( VAR_1 ) ; assertTrue ( VAR_2 ) ; VAR_3 . remove ( VAR_1 ) ; counter . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . contains ( VAR_1 ) ; assertTrue ( VAR_2 ) ; VAR_3 . remove ( VAR_1 ) ; -- ( counter ) ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete FieldRead', 'Delete Invocation']",1193
"public float METHOD_1 ( float VAR_1 , float VAR_2 ) { VAR_3 . x = VAR_1 ; VAR_3 . y = VAR_2 ; return VAR_4 . METHOD_2 ( VAR_5 ) . x ; }","public float METHOD_1 ( int VAR_1 , int VAR_2 ) { return VAR_1 ; }","['Update TypeReference', 'Update TypeReference', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead']",1194
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 + ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_6 ) ; output = VAR_2 ; VAR_3 = METHOD_2 ( STRING_7 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 + ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_6 ) ; output = VAR_2 ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1195
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_1 ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1197
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1199
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_3 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_3 ) ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1200
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1201
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 ; VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1202
public java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( STRING_1 ) ; VAR_1 = VAR_2 ; return VAR_2 ; },public java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( STRING_1 ) ; this . VAR_1 = VAR_2 ; return VAR_2 ; },['Insert ThisAccess'],1203
public void METHOD_1 ( ) { if ( ( VAR_1 ) == 1 ) { VAR_2 = false ; } if ( ( ( VAR_1 ) == ( - 1 ) ) || ( ( VAR_1 ) == 0 ) ) { VAR_2 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == 1 ) { VAR_2 = false ; } },"['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1205
public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { return this ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1206
"public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 . assertEquals ( VAR_3 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) { VAR_2 . assertEquals ( VAR_3 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) , STRING_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",1207
private void error ( java.lang.String text ) { VAR_1 . setText ( text ) ; java.lang.System.out.println ( text ) ; error = true ; },private void error ( java.lang.String text ) { VAR_1 . setText ( text ) ; java.lang.System.out.println ( text ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1208
"public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; this . VAR_2 = 0 ; this . VAR_3 = VAR_4 ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_5 , STRING_1 ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; this . VAR_3 = VAR_4 ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_5 , STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1209
public void METHOD_1 ( TYPE_1 position ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . x = VAR_3 . x ; VAR_2 . y = VAR_3 . y ; this . position = VAR_1 ; },public void METHOD_1 ( TYPE_1 position ) { this . position = position ; },"['Update VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1210
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( this ) ; TYPE_1 event = VAR_3 . METHOD_3 ( VAR_4 class ) ; this . VAR_5 = VAR_6 ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( this ) ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1211
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 = VAR_1 ; VAR_4 = false ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1212
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { if ( null == ( VAR_2 ) ) VAR_2 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_3 . put ( VAR_1 , value ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { VAR_3 . put ( VAR_1 , value ) ; }","['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1213
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { this . VAR_4 = view ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 , boolean VAR_3 ) { this . VAR_4 = view ; this . VAR_1 = VAR_1 ; this . VAR_3 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1214
static void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = false ; },static void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; java.lang.System.exit ( 0 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1215
private void METHOD_1 ( ) { TYPE_1 VAR_1 = getIntent ( ) . METHOD_2 ( ) ; VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getString ( VAR_6 ) ; VAR_7 = VAR_3 . getString ( VAR_8 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = getIntent ( ) . METHOD_2 ( ) ; VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getString ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1216
"public void METHOD_1 ( final java.lang.Throwable VAR_1 ) { VAR_2 = true ; VAR_3 . error ( ( ( STRING_1 + ( VAR_4 . path ( ) ) ) + STRING_2 ) , VAR_1 ) ; end ( ) ; }","public void METHOD_1 ( final java.lang.Throwable VAR_1 ) { VAR_3 . error ( ( ( STRING_1 + ( VAR_4 . path ( ) ) ) + STRING_2 ) , VAR_1 ) ; end ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1219
public void METHOD_1 ( ) { this . VAR_1 = true ; },public synchronized void METHOD_1 ( ) { VAR_1 = true ; },"['Insert Wra', 'Delete ThisAccess']",1221
public static TYPE_1 METHOD_1 ( ) { return ( VAR_1 ) == null ? VAR_1 = new TYPE_2 ( ) : VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return ( VAR_1 ) == null ? new TYPE_2 ( ) : VAR_1 ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",1222
public void METHOD_1 ( ) { float x = ( ( float ) ( java.lang.Math.random ( ) ) ) ; if ( x < FLOAT_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; } else { ( VAR_2 ) ++ ; } },public void METHOD_1 ( ) { if ( ( java.lang.Math.random ( ) ) < FLOAT_1 ) VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeReference', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block']",1223
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 , VAR_4 ) . show ( ) ; VAR_5 = true ; VAR_6 . METHOD_3 ( 0 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 , VAR_4 ) . show ( ) ; VAR_6 . METHOD_3 ( 0 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1224
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = this ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",1225
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( this , 0 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( this , 0 , VAR_3 , VAR_4 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1226
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; title = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_4 . setText ( TYPE_3 . METHOD_4 ( ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1227
public void METHOD_1 ( byte [ ] data ) throws TYPE_1 { VAR_1 = data ; },public void METHOD_1 ( byte [ ] data ) throws TYPE_1 { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1228
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1229
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( true ) ; } VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( true ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1230
protected void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( listener ) ; listener . METHOD_4 ( ) ; listener = null ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Update Wra', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1231
public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1232
public TYPE_1 [ ] METHOD_1 ( ) { VAR_1 = false ; TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . id = this . id ; return VAR_2 ; },public TYPE_1 [ ] METHOD_1 ( ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . id = this . id ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1233
private boolean METHOD_1 ( int time ) { if ( ( ( VAR_1 [ time ] ) == INT_1 ) && ( ( VAR_2 [ time ] ) == INT_1 ) ) { VAR_3 = true ; } return VAR_3 ; },private boolean METHOD_1 ( int time ) { return ( ( VAR_1 [ time ] ) == INT_1 ) && ( ( VAR_2 [ time ] ) == INT_1 ) ; },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",1234
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = ( ( TYPE_4 ) ( getActivity ( ) ) ) ; return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",1235
public void METHOD_1 ( ) { VAR_1 = VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1236
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 0 ; VAR_4 = true ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1237
"protected void METHOD_1 ( ) { VAR_1 = true ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_2 , this ) ; } }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_2 , this ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",1238
public void end ( ) { TYPE_1 . METHOD_1 ( ) . info ( STRING_1 ) ; VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void end ( ) { TYPE_1 . METHOD_1 ( ) . info ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1239
void METHOD_1 ( java.util.List < TYPE_1 > nodes ) { VAR_1 . METHOD_2 ( ) ; if ( nodes != null ) { VAR_1 . METHOD_3 ( nodes ) ; } },void METHOD_1 ( java.util.List < TYPE_1 > nodes ) { VAR_1 . METHOD_2 ( ) ; if ( nodes != null ) { VAR_1 = nodes ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1240
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; VAR_3 = 0 ; VAR_4 = INT_2 ; VAR_5 = INT_3 ; VAR_6 = INT_4 ; VAR_7 . METHOD_2 ( ( STRING_1 + ( VAR_3 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; VAR_3 = 0 ; VAR_4 = INT_2 ; VAR_7 . METHOD_2 ( ( STRING_1 + ( VAR_3 ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1241
"public void METHOD_1 ( boolean VAR_1 , int VAR_2 , int VAR_3 , boolean VAR_4 , int VAR_5 ) { this . VAR_5 = VAR_5 ; TYPE_1 . METHOD_2 ( VAR_6 , VAR_7 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( boolean VAR_1 , int VAR_2 , int VAR_3 , boolean VAR_4 , int VAR_5 ) { TYPE_1 . METHOD_2 ( VAR_6 , VAR_7 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1242
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1243
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1244
public void METHOD_1 ( TYPE_1 position ) { this . VAR_1 . set ( position ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( position ) ; },public void METHOD_1 ( TYPE_1 position ) { this . position = position ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( position ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1245
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1246
public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 = 1 ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",1247
public void METHOD_1 ( double VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( ( ( ( STRING_1 + ( getName ( ) ) ) + STRING_2 ) + ( VAR_2 ) ) ) ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",1250
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = VAR_6 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; },"['Insert Literal', 'Delete FieldRead']",1251
"public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 = null ; TYPE_1 . METHOD_3 ( this , VAR_4 , VAR_5 ) . show ( ) ; }","public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; TYPE_1 . METHOD_3 ( this , VAR_4 , VAR_5 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1252
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; } METHOD_3 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1253
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_3 = false ; VAR_4 = false ; VAR_5 = VAR_6 ; METHOD_2 ( true , true , VAR_7 . METHOD_3 ( ) , VAR_7 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_3 = false ; VAR_5 = VAR_6 ; METHOD_2 ( true , true , VAR_7 . METHOD_3 ( ) , VAR_7 . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1254
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = null ; VAR_4 = true ; VAR_5 = true ; VAR_6 = null ; VAR_7 = 0 ; },protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = null ; VAR_5 = true ; VAR_6 = null ; VAR_7 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1255
public void end ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_2 ( ) ; } },public void end ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1256
"public void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; VAR_2 = VAR_3 . min ( VAR_2 , VAR_4 ) ; }",public void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1257
"public void METHOD_1 ( int VAR_1 , TYPE_1 < TYPE_2 < TYPE_3 > , ? > VAR_2 ) { VAR_3 = true ; METHOD_2 ( ) ; VAR_3 = false ; select ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 < TYPE_2 < TYPE_3 > , ? > VAR_2 ) { METHOD_2 ( ) ; select ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1258
"private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.Boolean VAR_2 ) { VAR_3 = METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 ) ; return VAR_4 ; }","private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.Boolean VAR_2 ) { METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1259
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; file . METHOD_1 ( ) ; file = null ; },public void METHOD_1 ( ) throws java.lang.Exception { file . METHOD_1 ( ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1260
public void METHOD_1 ( double VAR_1 ) { this . x = VAR_1 ; length = TYPE_1 . METHOD_2 ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; },public void METHOD_1 ( double VAR_1 ) { this . x = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",1261
public void METHOD_1 ( TYPE_1 listener ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; } VAR_2 . add ( listener ) ; },public void METHOD_1 ( TYPE_1 listener ) { VAR_2 . add ( listener ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1263
"private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , null , new TYPE_2 ( VAR_4 ) ) ; VAR_5 . start ( ) ; VAR_6 = true ; METHOD_2 ( ) ; } }","private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , null , new TYPE_2 ( VAR_4 ) ) ; VAR_5 . start ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",1264
private void METHOD_1 ( ) { if ( ( getIntent ( ) . METHOD_2 ( ) ) != null ) { this . VAR_1 = getIntent ( ) . METHOD_2 ( ) . getBoolean ( STRING_1 ) ; } else { this . VAR_1 = false ; } },private void METHOD_1 ( ) { this . VAR_1 = getIntent ( ) . METHOD_2 ( ) . getBoolean ( STRING_1 ) ; },"['Move Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1265
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = - 1 ; VAR_4 = 0 ; VAR_5 = VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) ; height = VAR_6 . METHOD_2 ( ) . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_5 = VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) ; height = VAR_6 . METHOD_2 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1267
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) . toString ( ) ; if ( ( VAR_2 ) != null ) { new TYPE_1 ( ) . execute ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) . toString ( ) ; if ( ( VAR_2 ) != null ) { new TYPE_1 ( ) . execute ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1268
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result ) { VAR_2 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1269
public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; METHOD_2 ( ) ; if ( VAR_1 != null ) { } },public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; if ( VAR_1 != null ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1270
public static TYPE_1 METHOD_1 ( java.lang.Class < ? > c ) { if ( ! ( VAR_1 ) ) { TYPE_2 . METHOD_2 ( ) ; VAR_1 = VAR_2 ; } return new TYPE_1 ( c ) ; },public static TYPE_1 METHOD_1 ( java.lang.Class < ? > c ) { if ( ! ( VAR_1 ) ) { TYPE_2 . METHOD_2 ( ) ; } return new TYPE_1 ( c ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1271
public void METHOD_1 ( TYPE_1 response ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( response ) ; VAR_2 . METHOD_3 ( false ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 response ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( response ) ; VAR_2 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1272
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 . show ( this , STRING_1 , STRING_2 , true ) ; }",protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",1273
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = java.lang.Integer.toString ( java.util.Calendar.getInstance ( ) . get ( VAR_3 ) ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1274
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1275
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = 0 ; if ( VAR_3 ) { METHOD_2 ( ) ; VAR_3 = false ; } VAR_4 = 0 ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = 0 ; VAR_3 = false ; },"['Move Assignment', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1276
public TYPE_1 METHOD_1 ( ) { while ( METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_1 ) ) { return VAR_2 [ ( ( this . VAR_1 ) ++ ) ] ; } ++ ( VAR_1 ) ; } throw new TYPE_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { while ( METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_1 ) ) { return VAR_2 [ ( ( this . VAR_1 ) ++ ) ] ; } } throw new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1277
"public static void METHOD_1 ( double VAR_1 , double VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 . set ( VAR_3 ) ; VAR_6 . set ( VAR_4 ) ; }","public static void METHOD_1 ( double VAR_1 , double VAR_2 ) { VAR_5 . set ( VAR_1 ) ; VAR_6 . set ( VAR_2 ) ; }","['Move VariableRead', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",1278
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1279
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",1280
"public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_3 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_3 ) ; VAR_4 = true ; METHOD_4 ( VAR_1 , VAR_5 ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; VAR_3 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_3 ) ; METHOD_4 ( VAR_1 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1281
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = true ; if ( ( ! ( VAR_2 . isEmpty ( ) ) ) || ( ! ( VAR_3 . isEmpty ( ) ) ) ) java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { if ( ( ! ( VAR_2 . isEmpty ( ) ) ) || ( ! ( VAR_3 . isEmpty ( ) ) ) ) java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1282
private void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 < ( VAR_2 ) ) { METHOD_3 ( VAR_1 ) ; } },private void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 < ( VAR_2 ) ) { VAR_2 = VAR_1 ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete Invocation']",1283
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( METHOD_2 ( ) ) VAR_1 = true ; update ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; update ( ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1284
public void init ( ) { this . VAR_1 = false ; },public void init ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1285
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead']",1286
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getString ( VAR_6 ) ; } VAR_7 = METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_7 = METHOD_2 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1287
void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; } VAR_3 = false ; },void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1288
public void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = VAR_3 ; this . VAR_4 = null ; this . VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = VAR_3 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1289
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = INT_1 ; METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( INT_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1290
public void init ( ) { VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; VAR_4 = true ; VAR_5 = true ; VAR_6 = true ; VAR_7 = null ; VAR_8 = null ; },public void init ( ) { VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; VAR_4 = true ; VAR_5 = true ; VAR_6 = true ; VAR_7 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1291
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < java.lang.String > VAR_2 , java.util.Map < java.lang.String , java.util.List < java.lang.String > > VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.List < java.lang.String > VAR_2 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1292
public TYPE_1 getValue ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( ) ; return VAR_2 ; },public TYPE_1 getValue ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; return VAR_2 ; },"['Update BinaryOperator', 'Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1293
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = new TYPE_3 ( this ) ; VAR_5 . METHOD_4 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",1294
static void METHOD_1 ( boolean VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_1 ; } else { VAR_3 = true ; } },static void METHOD_1 ( boolean VAR_1 ) { VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1295
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 < java.lang.Object > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_3 . getValue ( ) ) ; VAR_4 = true ; METHOD_5 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 < java.lang.Object > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_3 . getValue ( ) ) ; METHOD_5 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1296
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( VAR_4 . getContext ( ) , VAR_5 class ) ; METHOD_3 ( intent , 0 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_4 . getContext ( ) , VAR_5 class ) ; METHOD_3 ( intent , 0 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1297
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1298
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1299
public void METHOD_1 ( int position ) { VAR_1 = position ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( position ) ; } VAR_3 = VAR_2 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int position ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( position ) ; } VAR_3 = VAR_2 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1300
public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { this . VAR_2 = null ; } else { this . VAR_2 = new java.util.Date ( VAR_3 . getTime ( ) ) ; } },public void METHOD_1 ( java.util.Date VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete Literal', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1301
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1302
void METHOD_1 ( ) { assert ( VAR_1 ) > 0 : STRING_1 ; ( VAR_1 ) -- ; },void METHOD_1 ( ) { assert VAR_1 ; VAR_1 = false ; },"['Insert Assignment', 'Move FieldRead', 'Move FieldWrite', 'Insert Literal', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator']",1303
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },['Delete ThisAccess'],1304
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],1305
void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_4 [ i ] = true ; } },void METHOD_1 ( ) { VAR_1 = null ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_4 [ i ] = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1306
"public java.lang.String METHOD_1 ( ) { VAR_1 . i ( STRING_1 , VAR_2 ) ; if ( ( VAR_3 . equals ( STRING_2 ) ) || ( VAR_3 . equals ( null ) ) ) { VAR_2 = VAR_4 ; } return VAR_2 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 . i ( STRING_1 , VAR_2 ) ; if ( ( VAR_2 ) == STRING_2 ) { return VAR_4 ; } return VAR_2 ; }","['Update BinaryOperator', 'Insert FieldRead', 'Insert FieldRead', 'Insert Return', 'Move FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",1307
private void init ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_1 ( ) ; TYPE_1 VAR_3 = VAR_4 . get ( getContext ( ) ) ; VAR_5 = VAR_3 . METHOD_2 ( ) ; },private void init ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1308
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_1 ( ) ; VAR_2 = false ; return new TYPE_3 ( STRING_1 , STRING_2 ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_1 ( ) ; return new TYPE_3 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1309
public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( new android.content.Intent ( VAR_3 ) ) ; },public void METHOD_1 ( android.view.View view ) { if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( new android.content.Intent ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1310
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1311
"public void METHOD_1 ( ) { VAR_1 . remove ( delete ) ; METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . remove ( delete ) ; VAR_3 = - 1 ; VAR_2 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert UnaryOperator', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1313
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = STRING_2 ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_4 = VAR_2 ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( INT_1 ) ; METHOD_5 ( VAR_2 ) ; } },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_4 ( INT_1 ) ; METHOD_5 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",1314
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 , this ) ; VAR_1 . METHOD_2 ( VAR_2 , ( STRING_2 + ( id ) ) , this ) ; VAR_3 = true ; VAR_4 = false ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 , this ) ; VAR_1 . METHOD_2 ( VAR_2 , ( STRING_2 + ( id ) ) , this ) ; VAR_3 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1315
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; this . METHOD_3 ( new TYPE_2 ( this ) ) ; VAR_2 = this ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; this . METHOD_3 ( new TYPE_2 ( this ) ) ; VAR_2 = this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1317
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getInt ( VAR_5 , 0 ) ; } METHOD_3 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1318
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . i = VAR_2 ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . n = this . VAR_5 . n ; VAR_6 = this . VAR_7 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . i = VAR_2 ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . n = this . VAR_5 . n ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",1319
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ; VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1320
public java.lang.Void METHOD_1 ( java.lang.String text ) { VAR_1 = true ; VAR_2 . append ( text ) ; return null ; },public java.lang.Void METHOD_1 ( java.lang.String text ) { VAR_2 . append ( text ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1321
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; if ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) ) VAR_4 = true ; else VAR_4 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) ) VAR_4 = true ; else VAR_4 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1322
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1323
public int METHOD_1 ( ) { ( count ) ++ ; return count ; },public int METHOD_1 ( ) { return count = ( count ) ++ ; },"['Insert Assignment', 'Insert FieldWrite', 'Move UnaryOperator', 'Delete FieldRead']",1324
"public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object view ) { TYPE_2 . METHOD_2 ( STRING_1 , position ) ; if ( ( VAR_2 ) == view ) VAR_2 = null ; VAR_1 . METHOD_3 ( ( ( android.view.View ) ( view ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object view ) { TYPE_2 . METHOD_2 ( STRING_1 , position ) ; VAR_1 . METHOD_3 ( ( ( android.view.View ) ( view ) ) ) ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1326
"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { java.lang.String VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_4 . METHOD_3 ( ) ) ) ; VAR_2 = VAR_1 ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_4 . METHOD_3 ( ) ) ) ; }","['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation']",1327
"public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) . put ( VAR_2 , VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1328
"private void METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 instanceof TYPE_2 ) { ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_2 = VAR_2 ; } else { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; } }","private void METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 instanceof TYPE_2 ) { ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_2 = VAR_2 ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",1329
"private void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( new android.content.Intent ( this , VAR_3 class ) , VAR_4 ) ; }","private void METHOD_1 ( ) { METHOD_2 ( new android.content.Intent ( this , VAR_3 class ) , VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1330
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_5 = VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_1 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_5 = VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1331
public void METHOD_1 ( ) { assert VAR_1 . METHOD_2 ( ) ; ( VAR_2 ) ++ ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { assert VAR_1 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",1332
protected void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_3 ) != null ) VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1333
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; offset = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . METHOD_1 ( ) ; VAR_5 = - 1 ; VAR_6 = false ; },public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; offset = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . METHOD_1 ( ) ; VAR_6 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1334
public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( getView ( ) ) ; VAR_1 = true ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( view ) ; },"['Update Wra', 'Insert FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1335
public void METHOD_1 ( int y ) { if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) this . y = TYPE_1 . METHOD_3 ( y ) ; else this . y = y ; },public void METHOD_1 ( int y ) { this . y = y ; },"['Move Assignment', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",1336
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_3 . METHOD_2 ( getContext ( ) , VAR_5 ) ; METHOD_3 ( ) ; }","['Insert Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess']",1338
public void METHOD_1 ( java.lang.String num ) { VAR_1 = num ; },public void METHOD_1 ( java.lang.String num ) { this . VAR_1 = num ; },['Insert ThisAccess'],1339
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1340
public java.io.InputStream METHOD_1 ( java.lang.String name ) throws java.io.IOException { METHOD_2 ( name ) ; if ( ( VAR_1 ) == null ) { return null ; } else { VAR_1 = null ; return VAR_2 ; } },public java.io.InputStream METHOD_1 ( java.lang.String name ) throws java.io.IOException { METHOD_2 ( name ) ; if ( ( VAR_1 ) == null ) { return null ; } else { return VAR_2 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1341
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) . equals ( STRING_1 ) ) ) { VAR_3 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_4 , STRING_2 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1342
"public void METHOD_1 ( final android.view.View view , final TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = METHOD_3 ( ) ; }","public void METHOD_1 ( final android.view.View view , final TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1343
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; android.content.Intent i = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; METHOD_3 ( i ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; METHOD_3 ( i ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1344
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = new TYPE_2 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1345
"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 = false ; VAR_2 = VAR_3 . iterator ( ) ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1346
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_1 = INT_1 ; VAR_2 = 0 ; VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_3 ) ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_3 ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1347
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 = false ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1348
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = false ; VAR_7 = false ; init ( VAR_4 ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; init ( VAR_4 ) ; VAR_6 = false ; return VAR_4 ; }","['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1349
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_2 = false ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1350
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1352
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; else VAR_2 = new TYPE_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",1355
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",1356
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 -= VAR_2 ; VAR_4 = VAR_5 . METHOD_2 ( VAR_6 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 -= VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Insert Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1357
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1358
private void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ! ( VAR_2 ) ) ) { VAR_3 = true ; VAR_4 = VAR_5 ; } VAR_2 = VAR_1 ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ! ( VAR_2 ) ) ) { VAR_3 = true ; } VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1359
public void METHOD_1 ( ) { ( this . VAR_1 ) -- ; if ( ( this . VAR_1 ) <= 0 ) { this . VAR_1 = 0 ; this . VAR_2 = false ; this . VAR_3 = false ; } },public void METHOD_1 ( ) { ( this . VAR_1 ) -- ; if ( ( this . VAR_1 ) <= 0 ) { this . VAR_1 = 0 ; this . VAR_2 = false ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1360
"public void METHOD_1 ( android.view.View VAR_1 ) { boolean VAR_2 = ( VAR_3 . METHOD_2 ( ) ) == ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 = null ; METHOD_4 ( VAR_7 , VAR_8 , VAR_9 ) ; VAR_10 . METHOD_5 ( VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { boolean VAR_2 = ( VAR_3 . METHOD_2 ( ) ) == ( VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( VAR_7 , VAR_8 , VAR_9 ) ; VAR_10 . METHOD_5 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1361
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = this ; VAR_4 . METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",1363
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new TYPE_2 ( ) ; add ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1364
"public void add ( TYPE_1 VAR_1 ) { this . VAR_2 . put ( VAR_3 , VAR_1 ) ; this . VAR_4 . add ( VAR_5 ) ; this . VAR_6 = ( this . VAR_6 ) + ( VAR_1 . METHOD_1 ( ) ) ; }","public void add ( TYPE_1 VAR_1 ) { this . VAR_2 . put ( VAR_3 , VAR_1 ) ; this . VAR_4 . add ( VAR_5 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",1365
public void METHOD_1 ( ) { int VAR_1 = java.util.Calendar.getInstance ( ) . get ( VAR_2 ) ; int VAR_3 = java.util.Calendar.getInstance ( ) . get ( VAR_4 ) ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { int VAR_1 = java.util.Calendar.getInstance ( ) . get ( VAR_2 ) ; int VAR_3 = java.util.Calendar.getInstance ( ) . get ( VAR_4 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1366
private static synchronized void METHOD_1 ( ) { VAR_1 = true ; java.lang.System.out.println ( STRING_1 ) ; for ( TYPE_1 listener : VAR_2 ) { listener . METHOD_2 ( ) ; } },private static synchronized void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; for ( TYPE_1 listener : VAR_2 ) { listener . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1367
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . start ( ) ; METHOD_2 ( ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . start ( ) ; METHOD_2 ( ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1368
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1369
public void METHOD_1 ( long VAR_1 ) { this . VAR_2 = new TYPE_1 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",1370
public TYPE_1 execute ( ) { VAR_1 = false ; VAR_2 = METHOD_1 ( ) . METHOD_2 ( this ) ; return this ; },public TYPE_1 execute ( ) { VAR_2 = METHOD_1 ( ) . METHOD_2 ( this ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1371
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 ; } else { VAR_2 = STRING_1 ; } return VAR_1 ; },private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Update TypeReference', 'Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead', 'Delete Return']",1372
"private synchronized void METHOD_1 ( TYPE_1 function ) { if ( ( VAR_1 ) != function ) { VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_3 . METHOD_3 ( ) , function ) ) ; VAR_1 = function ; } }","private void METHOD_1 ( TYPE_1 function ) { VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_3 . METHOD_3 ( ) , function ) ) ; }","['Move Invocation', 'Delete Wra', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1374
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1375
"public void METHOD_1 ( TYPE_1 c , java.lang.Throwable VAR_1 ) { java.lang.System.err.println ( ( ( ( c . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; VAR_2 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 c , java.lang.Throwable VAR_1 ) { java.lang.System.err.println ( ( ( ( c . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1376
void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . value = null ; this . VAR_3 = false ; this . VAR_4 = 0L ; this . VAR_5 = 0 ; this . VAR_6 = 0.0 ; },void METHOD_1 ( ) { this . VAR_2 = false ; this . value = null ; this . VAR_3 = false ; this . VAR_4 = 0L ; this . VAR_5 = 0 ; this . VAR_6 = 0.0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1377
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < 0 ) { METHOD_2 ( VAR_1 , ( - 1 ) ) ; } else { METHOD_2 ( VAR_1 , ( ( VAR_2 ) + 1 ) ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < 0 ) { METHOD_2 ( VAR_1 , ( - 1 ) ) ; } else { METHOD_2 ( VAR_1 , ( ( VAR_2 ) + 1 ) ) ; ( VAR_2 ) ++ ; } }","['Insert UnaryOperator', 'Insert FieldWrite']",1378
public TYPE_1 METHOD_1 ( java.lang.Object data ) { if ( data instanceof TYPE_2 ) { this . data = data ; return this ; } this . data = data ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Object data ) { this . data = data ; return this ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete Return', 'Delete Block', 'Delete If']",1380
"public void METHOD_1 ( TYPE_1 args ) { super . METHOD_1 ( args ) ; title = VAR_1 . getString ( VAR_2 , STRING_1 ) ; text = VAR_1 . getString ( VAR_3 , STRING_1 ) ; VAR_4 = VAR_1 . getString ( VAR_5 , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 args ) { super . METHOD_1 ( args ) ; title = VAR_1 . getString ( VAR_2 , STRING_1 ) ; VAR_4 = VAR_1 . getString ( VAR_5 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1382
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; TYPE_1 . METHOD_2 ( false ) ; TYPE_2 . METHOD_2 ( true ) ; VAR_3 . add ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_2 = true ; TYPE_1 . METHOD_2 ( false ) ; TYPE_2 . METHOD_2 ( true ) ; VAR_3 . add ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1383
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",1384
public final void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_3 = null ; VAR_4 = VAR_5 ; VAR_5 = null ; },public final void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1385
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_4 = new TYPE_3 ( ) . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1386
public void METHOD_1 ( TYPE_1 result ) { view . METHOD_2 ( result ) ; view . METHOD_3 ( VAR_1 . values ( ) ) ; view . METHOD_4 ( VAR_2 ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 result ) { view . METHOD_2 ( result ) ; view . METHOD_3 ( VAR_1 . values ( ) ) ; view . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1387
private void init ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new java.io.BufferedReader ( new TYPE_1 ( VAR_4 ) ) ; java.lang.System.out.println ( STRING_1 ) ; },private void init ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_3 = new java.io.BufferedReader ( new TYPE_1 ( VAR_4 ) ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1388
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( - 1 ) ) VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1389
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 = - 1 ; if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1390
public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 . METHOD_2 ( ) ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1391
"public void METHOD_1 ( java.lang.String VAR_1 , double VAR_2 ) { VAR_3 = new TYPE_1 ( ) ; VAR_4 = false ; VAR_5 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_6 . METHOD_2 ( VAR_1 ) ; VAR_6 . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , double VAR_2 ) { VAR_3 = new TYPE_1 ( ) ; VAR_6 . METHOD_2 ( VAR_1 ) ; VAR_6 . METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1392
public void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { this . position = VAR_1 . get ( 0 ) ; VAR_1 . remove ( 0 ) ; } },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1393
"protected void init ( TYPE_1 < java.lang.Long > VAR_1 , TYPE_2 < java.lang.Long > VAR_2 ) throws java.io.IOException { VAR_3 = VAR_1 ; VAR_4 = VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( this . VAR_4 , VAR_5 ) ; }","protected void init ( TYPE_1 < java.lang.Long > VAR_1 , TYPE_2 < java.lang.Long > VAR_2 ) throws java.io.IOException { VAR_4 = VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( this . VAR_4 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1394
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 , 0 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 = false ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 , 0 ) ; super . METHOD_1 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1395
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = true ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1396
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_2 = false ; this . VAR_3 = null ; this . VAR_3 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_3 = VAR_1 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1397
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = this ; VAR_4 = new TYPE_3 ( this ) ; VAR_5 = new java.io.File ( VAR_5 , STRING_1 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = this ; VAR_4 = new TYPE_3 ( this ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1398
"protected void METHOD_1 ( java.lang.Void VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_2 , VAR_3 ) . show ( ) ; } VAR_4 = null ; }","protected void METHOD_1 ( java.lang.Void VAR_1 ) { TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_2 , VAR_3 ) . show ( ) ; }","['Move Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1399
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { getActivity ( ) . METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; getActivity ( ) . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1401
private void put ( int id ) { if ( id < ( VAR_1 ) ) { VAR_1 = id ; } VAR_2 . add ( id ) ; if ( ( VAR_2 . size ( ) ) > ( VAR_3 ) ) { METHOD_1 ( ) ; } },private void put ( int id ) { VAR_2 . add ( id ) ; if ( ( VAR_2 . size ( ) ) > ( VAR_3 ) ) { METHOD_1 ( ) ; } },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1402
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1403
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_2 ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",1404
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; return STRING_1 ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; return null ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1405
public void update ( ) throws java.lang.Exception { VAR_1 = false ; VAR_2 = false ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void update ( ) throws java.lang.Exception { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1406
private TYPE_1 METHOD_1 ( ) { TYPE_1 result = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return result ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 result = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; return result ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1407
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 . height = VAR_5 ; VAR_6 = false ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 . height = VAR_5 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1408
"private void METHOD_1 ( TYPE_1 init ) throws TYPE_2 { VAR_1 = init . METHOD_2 ( ) ; new TYPE_3 ( VAR_2 , init . METHOD_2 ( ) , VAR_3 , this , VAR_4 ) . METHOD_3 ( ) ; init . METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 init ) throws TYPE_2 { new TYPE_3 ( VAR_2 , init . METHOD_2 ( ) , VAR_3 , this , VAR_4 ) . METHOD_3 ( ) ; init . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1409
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1413
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( INT_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1414
"public void METHOD_1 ( java.io.File file ) { METHOD_1 ( file , VAR_1 , true ) ; VAR_2 = file ; }","public void METHOD_1 ( java.io.File file ) { METHOD_1 ( file , VAR_1 ) ; }","['Delete Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1415
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1417
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; this . VAR_3 = true ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( this ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1419
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . setText ( ""0"" ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } VAR_3 = true ; time = VAR_4 ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . setText ( ""0"" ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1420
"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 . getValue ( ) , VAR_5 ) ; this . VAR_6 = false ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 . getValue ( ) , VAR_5 ) ; this . VAR_6 = false ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1421
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . remove ( false ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { VAR_2 . remove ( false ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1422
public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = null ; METHOD_2 ( VAR_3 ) ; } else { VAR_2 = VAR_4 . trim ( ) ; } },public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { METHOD_2 ( VAR_3 ) ; } else { VAR_2 = VAR_4 . trim ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1424
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 = ( ( TYPE_4 ) ( getActivity ( ) ) ) ; init ( ) ; return VAR_6 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_6 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 = ( ( TYPE_4 ) ( getActivity ( ) ) ) ; init ( ) ; return VAR_6 ; }",['Update FieldWrite'],1425
"public void METHOD_1 ( double VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) ( VAR_3 ) ++ ; VAR_4 += VAR_1 ; METHOD_2 ( 1 ) ; }",public void METHOD_1 ( double VAR_1 ) { VAR_4 += VAR_1 ; METHOD_2 ( 1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",1426
public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1427
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . show ( VAR_5 ) ; VAR_6 = VAR_7 ; VAR_4 . commit ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . show ( VAR_5 ) ; VAR_4 . commit ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1428
public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 = ( ( ( VAR_4 ) + STRING_1 ) + ( VAR_5 ) ) + STRING_2 ; },public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1429
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 = METHOD_4 ( ) ; VAR_5 = METHOD_5 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 = METHOD_4 ( ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1430
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1431
public java.lang.String [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . split ( STRING_1 ) ; } return VAR_1 ; },public java.lang.String [ ] METHOD_1 ( ) { return VAR_2 . split ( STRING_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",1432
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1433
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( 0 ) ; VAR_4 = 0 ; METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( 0 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1435
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( VAR_3 , context ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_2 . METHOD_4 ( ) ; return false ; }",public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1436
public void METHOD_1 ( ) { if ( VAR_1 . contains ( VAR_2 ) ) { VAR_1 . remove ( VAR_2 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . contains ( VAR_2 ) ) { VAR_1 . remove ( VAR_2 ) ; if ( VAR_1 . isEmpty ( ) ) VAR_2 = null ; METHOD_2 ( ) ; METHOD_3 ( ) ; } },"['Insert If', 'Insert Invocation', 'Insert Block', 'Insert TypeAccess', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1437
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( x , y ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( x , y ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1438
"public void METHOD_1 ( int src , int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( get ( VAR_3 ) ) ) ; VAR_4 = src ; VAR_5 = VAR_1 ; VAR_6 = true ; }","public void METHOD_1 ( int src , int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( get ( VAR_3 ) ) ) ; VAR_4 = src ; VAR_5 = VAR_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1439
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1440
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . status = VAR_3 ; this . VAR_4 = false ; this . VAR_5 = VAR_3 ; },public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . status = VAR_3 ; this . VAR_4 = false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1441
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1442
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = true ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1443
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_2 . isEmpty ( ) ) ) { this . VAR_1 = new TYPE_1 ( STRING_1 ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",1444
"public void METHOD_1 ( java.lang.String path ) { if ( path != null ) { this . path = path . METHOD_2 ( STRING_1 , STRING_2 ) ; } else { this . path = null ; } }","public void METHOD_1 ( java.lang.String path ) { this . path = path . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1445
public TYPE_1 METHOD_1 ( ) { float temp = ( ( this . getValue ( ) ) - INT_1 ) / ( ( float ) ( FLOAT_1 ) ) ; this . value = temp ; return this ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess']",1446
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 , 1 ) ; VAR_4 = - 1 ; METHOD_2 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . add ( VAR_3 , 1 ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1447
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( VAR_3 ) ; for ( TYPE_3 VAR_4 : VAR_5 ) { VAR_4 . METHOD_3 ( VAR_6 ) ; } VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_3 ) ; for ( TYPE_3 VAR_4 : VAR_5 ) { VAR_4 . METHOD_3 ( VAR_6 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1448
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1449
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; TYPE_1 . METHOD_1 ( this , METHOD_2 ( ) ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_1 ( this , METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1450
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_2 ) ) ) { VAR_3 . METHOD_2 ( this ) ; VAR_2 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_3 . METHOD_2 ( this ) ; } },"['Move BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1451
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; this . METHOD_2 ( new TYPE_3 ( this ) ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; this . METHOD_2 ( new TYPE_3 ( this ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1452
"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( this . VAR_1 ) ; }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",1454
public java.lang.Boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( TYPE_3 . METHOD_2 ( VAR_1 ) ) { return true ; } else { VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = false ; return false ; } },public java.lang.Boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( TYPE_3 . METHOD_2 ( VAR_1 ) ) { return true ; } else { VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; return false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1456
public java.util.List < TYPE_1 > METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ( VAR_2 ) - > VAR_3 . getId ( ) ) ) . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1457
public void METHOD_1 ( double VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },['Delete ThisAccess'],1458
protected void METHOD_1 ( ) { if ( this . VAR_1 ) { METHOD_2 ( this . VAR_2 ) ; this . VAR_1 = false ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( this . VAR_2 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1459
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1461
private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; TYPE_4 . METHOD_6 ( ) ; VAR_1 = true ; },private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; TYPE_4 . METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1462
private static synchronized void METHOD_1 ( ) { VAR_1 = false ; for ( TYPE_1 listener : VAR_2 ) { listener . METHOD_2 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; },private static synchronized void METHOD_1 ( ) { for ( TYPE_1 listener : VAR_2 ) { listener . METHOD_2 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1463
private void METHOD_1 ( ) { while ( ( VAR_1 [ VAR_2 ] ) == ( VAR_3 ) ) { this . METHOD_2 ( ) ; this . METHOD_3 ( VAR_1 ) ; } },private void METHOD_1 ( ) { while ( ( VAR_1 [ VAR_2 ] ) == ( VAR_3 ) ) { VAR_1 = this . METHOD_2 ( ) ; VAR_1 = this . METHOD_3 ( VAR_1 ) ; } },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldWrite', 'Move Invocation']",1464
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( this , VAR_1 , VAR_2 ) ; if ( ( VAR_4 ) < 0 ) { VAR_4 = METHOD_3 ( VAR_2 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( this , VAR_1 , VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1465
"public void METHOD_1 ( int x , int y ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( ( ( name ) + STRING_1 ) ) ; return ; } VAR_2 = x ; VAR_3 = y ; ( VAR_4 ) ++ ; VAR_1 = true ; }","public void METHOD_1 ( int x , int y ) { VAR_2 = x ; VAR_3 = y ; ( VAR_4 ) ++ ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1466
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent i = new android.content.Intent ( this , VAR_1 class ) ; this . VAR_2 = METHOD_2 ( i , this . VAR_3 , 0 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent i = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( i , this . VAR_3 , 0 ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",1467
public void METHOD_1 ( ) { VAR_1 . remove ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . remove ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1468
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_3 . METHOD_2 ( ) . contains ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1469
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } VAR_3 . METHOD_1 ( new TYPE_2 ( getActivity ( ) , VAR_4 , VAR_2 ) ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = new java.util.ArrayList ( VAR_1 ) ; } VAR_3 . METHOD_1 ( new TYPE_2 ( getActivity ( ) , VAR_4 , VAR_2 ) ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1470
"public void init ( java.lang.String VAR_1 , java.lang.String path , java.util.List < TYPE_1 > VAR_2 , TYPE_2 VAR_3 ) { this . VAR_1 = VAR_1 ; this . path = path ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","public void init ( java.lang.String VAR_1 , java.util.List < TYPE_1 > VAR_2 , TYPE_2 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1473
private static void METHOD_1 ( ) { VAR_1 . startTime = null ; VAR_1 . endTime = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_1 . index = null ; VAR_5 = 0 ; },private static void METHOD_1 ( ) { VAR_1 . startTime = null ; VAR_1 . endTime = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_1 . index = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1474
"public void METHOD_1 ( TYPE_1 VAR_1 , int index ) { this . VAR_1 = VAR_1 ; this . VAR_2 = index ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1475
static void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . status = STRING_1 ; },static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1476
"public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( VAR_1 , VAR_3 . METHOD_2 ( ) ) ) ; VAR_1 = 0 ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( VAR_1 , VAR_3 . METHOD_2 ( ) ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1477
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setValue ( VAR_1 ) ; double height = METHOD_2 ( VAR_1 ) ; METHOD_3 ( height ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; double height = METHOD_2 ( VAR_1 ) ; METHOD_3 ( height ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",1478
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1479
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) ) ; } METHOD_7 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_2 = false ; } METHOD_7 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1480
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_3 = VAR_2 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1481
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 [ VAR_2 ] ) ; this . VAR_4 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 [ VAR_2 ] ) ; ++ ( VAR_4 ) ; }","['Insert UnaryOperator', 'Insert FieldWrite', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1483
"public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; VAR_2 = new TYPE_1 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1484
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; VAR_3 = this ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",1485
public java.lang.StringBuilder METHOD_1 ( ) { message = new java.lang.StringBuilder ( ) ; VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( VAR_2 ) ; VAR_1 . append ( STRING_2 ) ; VAR_1 . append ( VAR_3 ) ; return message ; },public java.lang.StringBuilder METHOD_1 ( ) { VAR_1 . append ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) ) ; return message ; },"['Insert Invocation', 'Move TypeAccess', 'Insert BinaryOperator', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert FieldRead', 'Insert FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1486
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 , new TYPE_2 ( STRING_1 ) ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; VAR_4 = this . METHOD_5 ( VAR_5 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 , new TYPE_2 ( STRING_1 ) ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1487
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; if ( ( this . VAR_2 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( this . VAR_2 ) ) . METHOD_1 ( ) ; } VAR_3 = false ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; if ( ( this . VAR_2 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( this . VAR_2 ) ) . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1488
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 = TYPE_1 . METHOD_2 ( ) . VAR_3 ; VAR_4 = TYPE_1 . METHOD_2 ( ) . VAR_5 ; VAR_6 = TYPE_2 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 = TYPE_1 . METHOD_2 ( ) . VAR_3 ; VAR_4 = TYPE_1 . METHOD_2 ( ) . VAR_5 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1489
protected void fail ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },protected void fail ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1490
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( 0 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",1491
public void METHOD_1 ( ) { VAR_1 = null ; size = 0 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1492
private void METHOD_1 ( ) { try { java.io.File VAR_1 = new java.io.File ( METHOD_2 ( ) ) ; file = VAR_1 ; file . METHOD_3 ( ) ; ( VAR_2 ) ++ ; } catch ( java.io.IOException VAR_3 ) { } },private void METHOD_1 ( ) { try { java.io.File VAR_1 = new java.io.File ( METHOD_2 ( ) ) ; this . file = VAR_1 ; this . file . METHOD_3 ( ) ; ( this . VAR_2 ) ++ ; } catch ( java.io.IOException VAR_3 ) { } },"['Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess']",1493
public void METHOD_1 ( long VAR_1 ) { if ( VAR_1 <= 0L ) { VAR_1 = 0L ; VAR_2 = true ; } else if ( VAR_1 < INT_1 ) { VAR_1 = INT_1 ; VAR_2 = false ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { if ( VAR_1 < 0L ) { VAR_1 = 0L ; } else if ( VAR_1 < INT_1 ) { VAR_1 = INT_1 ; } this . VAR_1 = VAR_1 ; },"['Update BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1494
public void update ( ) { super . update ( ) ; this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = false ; this . VAR_4 = false ; },public void update ( ) { super . update ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1495
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new java.util.ArrayList < TYPE_3 > ( ) ; VAR_4 = new TYPE_4 ( getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new java.util.ArrayList < TYPE_3 > ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",1496
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( getContext ( ) ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_5 . get ( VAR_3 ) ; return VAR_4 ; },public TYPE_1 METHOD_1 ( ) { return VAR_4 ; },"['Delete TypeReference', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1497
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1498
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Update FieldWrite', 'Insert ThisAccess']",1499
"public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = FLOAT_1 ; this . VAR_2 = FLOAT_2 ; this . VAR_3 = 1 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = FLOAT_1 ; VAR_2 = FLOAT_2 ; VAR_3 = 1 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",1500
public boolean METHOD_1 ( ) { context = getContext ( ) ; VAR_1 = new TYPE_1 ( context ) ; return true ; },public boolean METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getContext ( ) ) ; return true ; },"['Move FieldWrite', 'Insert ConstructorCall', 'Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1501
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false , VAR_2 ) ; VAR_3 = 0 ; VAR_4 = null ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = 0 ; VAR_4 = null ; },"['Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",1502
"protected void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( null , INT_1 ) ; VAR_3 = false ; }",protected void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1503
protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; java.lang.CharSequence VAR_2 = METHOD_3 ( ) ; if ( VAR_3 . isEmpty ( VAR_2 ) ) { VAR_4 . setText ( VAR_5 ) ; } else { VAR_4 . setText ( VAR_2 ) ; } },protected void METHOD_1 ( ) { java.lang.CharSequence VAR_2 = METHOD_3 ( ) ; if ( VAR_3 . isEmpty ( VAR_2 ) ) { VAR_4 . setText ( VAR_5 ) ; } else { VAR_4 . setText ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1504
public TYPE_1 METHOD_1 ( ) { VAR_1 . setState ( VAR_2 ) ; TYPE_2 temp = VAR_3 ; VAR_3 = VAR_2 ; VAR_2 = temp ; return VAR_4 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 . setState ( VAR_2 ) ; return VAR_4 ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1506
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == true ) { VAR_1 = false ; return true ; } return VAR_1 ; },public boolean METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",1507
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_4 = TYPE_3 . METHOD_2 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1508
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; new TYPE_1 ( this ) ; VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1509
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 = TYPE_2 . METHOD_2 ( context , VAR_2 ) ; TYPE_1 . METHOD_3 ( true ) ; VAR_3 . start ( ) ; } }",public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1510
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1511
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1512
"private void init ( ) throws TYPE_1 , TYPE_2 { final TYPE_3 VAR_1 = TYPE_4 . METHOD_1 ( VAR_2 class ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; VAR_5 = TYPE_4 . METHOD_1 ( VAR_6 class ) ; }","private void init ( ) throws TYPE_1 , TYPE_2 { final TYPE_3 VAR_1 = TYPE_4 . METHOD_1 ( VAR_2 class ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_5 = TYPE_4 . METHOD_1 ( VAR_6 class ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1513
public void METHOD_1 ( ) { VAR_1 = VAR_2 = null ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1514
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; VAR_5 = new TYPE_4 ( VAR_6 , false ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",1516
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; } METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1517
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1518
public void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_2 ; },public void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1519
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1520
"protected boolean METHOD_1 ( char [ ] data , int offset , int length ) { value = new java.lang.String ( data , offset , length ) ; if ( VAR_1 ) { value = VAR_2 . trim ( ) ; } return true ; }","protected boolean METHOD_1 ( char [ ] data , int offset , int length ) { value = new java.lang.String ( data , offset , length ) ; return true ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1521
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 1 ) || ( VAR_1 > INT_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 1 ) || ( VAR_1 > INT_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1522
public TYPE_1 METHOD_1 ( ) { value = TYPE_1 . METHOD_2 ( ) ; return value ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1523
private void METHOD_1 ( TYPE_1 VAR_1 ) { try { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { } },private void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1524
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_2 ) ; VAR_3 = true ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1525
private void METHOD_1 ( ) { VAR_1 . init ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; VAR_5 = new java.util.ArrayList < > ( ) ; },private void METHOD_1 ( ) { VAR_1 . init ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1526
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_3 = new TYPE_3 ( this ) ; VAR_4 = new TYPE_4 ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_3 = new TYPE_3 ( this ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1528
public void start ( ) { this . VAR_1 = new TYPE_1 ( this ) ; new java.lang.Thread ( new TYPE_2 ( ) { public void METHOD_1 ( ) { VAR_2 this . METHOD_1 ( ) ; } } ) . start ( ) ; },public void start ( ) { new java.lang.Thread ( new TYPE_2 ( ) { public void METHOD_1 ( ) { VAR_2 this . METHOD_1 ( ) ; } } ) . start ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1529
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { return false ; } VAR_2 = true ; METHOD_3 ( new TYPE_2 ( ) ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { return false ; } METHOD_3 ( new TYPE_2 ( ) ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1530
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( ) ; } } VAR_3 = new TYPE_2 ( this ) ; },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( ) ; } } },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1531
"public void METHOD_1 ( java.lang.String message ) { VAR_1 . put ( VAR_2 , message ) ; endTime = new java.util.Date ( ) ; }","public void METHOD_1 ( java.lang.String message ) { VAR_1 . put ( VAR_2 , message ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1532
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",1533
"public void METHOD_1 ( java.lang.String name ) { METHOD_2 ( VAR_1 , name ) ; }",public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",1534
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 = - 1 ; } else this . VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) VAR_1 = false ; else this . VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1535
"public void METHOD_1 ( ) { VAR_1 = - 1 ; try { VAR_2 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_3 ) { throw new TYPE_2 ( STRING_1 , VAR_3 ) ; } }","public void METHOD_1 ( ) { try { VAR_2 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_3 ) { throw new TYPE_2 ( STRING_1 , VAR_3 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1536
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",1537
"public static void METHOD_1 ( double VAR_1 ) throws TYPE_1 { VAR_2 = VAR_1 ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","public static void METHOD_1 ( double VAR_1 ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1538
private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = true ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1539
public java.util.List < java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; },public java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; } return this . VAR_1 ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",1540
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; view . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; view . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1541
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1542
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_2 . METHOD_4 ( ) ; VAR_5 = VAR_4 . METHOD_5 ( ) ; VAR_6 = METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_2 . METHOD_4 ( ) ; VAR_5 = VAR_4 . METHOD_5 ( ) ; VAR_6 = METHOD_6 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation', 'Delete TypeAccess']",1543
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1544
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ; VAR_3 . start ( ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) { VAR_3 . start ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1545
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( VAR_3 ) ; android.content.Intent intent = getIntent ( ) ; VAR_4 = intent . METHOD_3 ( STRING_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; METHOD_2 ( VAR_3 ) ; }","['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1546
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = false ; VAR_3 . add ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1548
"public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_3 = VAR_4 . getString ( STRING_2 , STRING_3 ) ; return VAR_3 ; }",public java.lang.String METHOD_1 ( ) { return VAR_3 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1549
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 src = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_2 = VAR_3 . getValue ( ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 src = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_4 . METHOD_3 ( VAR_3 . getValue ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1551
protected void METHOD_1 ( java.lang.CharSequence status ) { METHOD_2 ( false ) ; VAR_1 . setText ( status ) ; VAR_2 = null ; if ( VAR_3 ) { VAR_4 = true ; } else { VAR_4 = false ; } },protected void METHOD_1 ( java.lang.CharSequence status ) { METHOD_2 ( false ) ; VAR_1 . setText ( status ) ; VAR_2 = null ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1552
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 + 1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",1553
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",1554
public void METHOD_1 ( ) { this . VAR_1 = false ; this . start = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; },public void METHOD_1 ( ) { this . VAR_1 = false ; this . start = 0 ; this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1555
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_3 = 1 ; VAR_4 . open ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_4 . open ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1556
"public void METHOD_1 ( android.content.Context context ) { this . context = context ; METHOD_2 ( context , METHOD_3 ( ) ) ; }","public void METHOD_1 ( android.content.Context context ) { METHOD_2 ( context , METHOD_3 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1557
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1558
private void METHOD_1 ( final char VAR_1 ) { if ( VAR_1 == CHAR_1 ) { VAR_2 = VAR_3 ; return ; } if ( VAR_1 == CHAR_2 ) { VAR_2 = VAR_4 ; return ; } VAR_2 = VAR_5 ; },private void METHOD_1 ( final char VAR_1 ) { if ( VAR_1 == CHAR_1 ) { VAR_2 = VAR_3 ; return ; } VAR_2 = VAR_5 ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",1559
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_2 , VAR_5 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_2 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1560
"public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; }",public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1561
protected final TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 = METHOD_3 ( ) ; } return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Insert ConstructorCall', 'Delete Wra', 'Delete Invocation']",1562
"public void METHOD_1 ( TYPE_1 source ) { VAR_1 . put ( source . METHOD_2 ( ) , source ) ; if ( ( source . METHOD_3 ( ) ) instanceof TYPE_2 ) { VAR_2 = false ; } }","public void METHOD_1 ( TYPE_1 source ) { VAR_1 . put ( source . METHOD_2 ( ) , source ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1563
public void METHOD_1 ( java.awt.Color c ) { VAR_1 = c ; VAR_2 = true ; },public void METHOD_1 ( java.awt.Color c ) { VAR_1 = c ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1564
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ( ( ( VAR_2 ) + ( VAR_3 ) ) + VAR_1 ) ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( ) ; VAR_6 = new TYPE_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ( ( ( VAR_2 ) + ( VAR_3 ) ) + VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1565
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_3 = VAR_4 . getInt ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1566
static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; },static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1567
"public void METHOD_1 ( java.util.List < TYPE_1 > list ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( list ) ; VAR_2 . METHOD_5 ( ) ; }",public void METHOD_1 ( java.util.List < TYPE_1 > list ) { VAR_1 = list ; VAR_2 . METHOD_5 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1568
public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = INT_1 ; } return VAR_1 ; },public java.lang.Integer METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1569
public void METHOD_1 ( ) { rows = new TYPE_1 [ VAR_1 ] ; for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { rows [ i ] = new TYPE_1 ( VAR_2 ) ; } VAR_3 = 0 ; },public void METHOD_1 ( ) { rows = new TYPE_1 [ VAR_1 ] ; for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { rows [ i ] = new TYPE_1 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1570
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { return false ; }","['Update Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1571
public TYPE_1 METHOD_1 ( int position ) { if ( position == 0 ) { VAR_1 = new TYPE_2 ( ) ; return VAR_1 ; } else { VAR_2 = new TYPE_3 ( ) ; return VAR_2 ; } },public TYPE_1 METHOD_1 ( int position ) { if ( position == 0 ) { return new TYPE_2 ( ) ; } else { return new TYPE_3 ( ) ; } },"['Move ConstructorCall', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1572
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( this ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( new TYPE_2 ( this ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1574
public int METHOD_1 ( ) throws java.io.IOException { VAR_1 = 0 ; ( VAR_2 ) ++ ; return VAR_3 . METHOD_1 ( ) ; },public int METHOD_1 ( ) throws java.io.IOException { return VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete UnaryOperator']",1575
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { VAR_3 = true ; switch ( VAR_1 ) { case VAR_4 : VAR_5 . METHOD_2 ( VAR_6 , null ) ; VAR_7 . METHOD_3 ( ) ; } }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { switch ( VAR_1 ) { case VAR_4 : VAR_5 . METHOD_2 ( VAR_6 , null ) ; VAR_7 . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1576
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = true ; view . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; view . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1577
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1578
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1579
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1580
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1581
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1582
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1583
public final void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 = null ; },public final void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1584
public void open ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = new TYPE_2 ( ) ; },public void open ( TYPE_1 VAR_1 ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1585
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) , 0 , INT_1 ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) , 0 , INT_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1587
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; VAR_4 . append ( CHAR_1 ) ; VAR_5 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; VAR_4 . append ( CHAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1588
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) . build ( ) ; VAR_4 = VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) . build ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1589
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) { VAR_3 = STRING_1 ; METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; } else { METHOD_4 ( VAR_1 ) ; } return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) { METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; } else { METHOD_4 ( VAR_1 ) ; } return false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1590
void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_1 ) { VAR_3 . METHOD_2 ( 0 ) ; VAR_4 . METHOD_2 ( 1 ) ; } else { VAR_3 . METHOD_2 ( 1 ) ; VAR_4 . METHOD_2 ( 0 ) ; } },void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_3 . METHOD_2 ( 0 ) ; VAR_4 . METHOD_2 ( 1 ) ; } else { VAR_3 . METHOD_2 ( 1 ) ; VAR_4 . METHOD_2 ( 0 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1591
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1592
"public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( new TYPE_3 ( STRING_1 , STRING_2 ) ) ; this . VAR_2 = new TYPE_4 ( STRING_3 , VAR_1 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = new TYPE_2 ( ) . METHOD_2 ( new TYPE_3 ( STRING_1 , STRING_2 ) ) ; this . VAR_2 = new TYPE_4 ( STRING_3 , this . VAR_1 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert ThisAccess', 'Insert FieldRead', 'Insert ThisAccess', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",1593
public void METHOD_1 ( TYPE_1 c ) { VAR_1 . add ( c ) ; },public void METHOD_1 ( TYPE_1 c ) { if ( ( first ) != null ) { first = c ; } VAR_1 . add ( c ) ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead']",1594
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1595
"public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( k ) ; if ( VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) { this . VAR_1 = VAR_1 ; return true ; } return false ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( k ) ; return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",1596
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1597
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; VAR_1 . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1598
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( this . VAR_1 . length ) ; i ++ ) { this . METHOD_2 ( i ) ; } this . VAR_2 = this . VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( this . VAR_1 . length ) ; i ++ ) { this . METHOD_2 ( i ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",1599
void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; this . VAR_1 = VAR_1 ; },void METHOD_1 ( ) { this . VAR_2 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1600
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( false ) ; VAR_2 = true ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1601
"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . fileName ) == null ) { this . fileName = ( this . VAR_2 . get ( STRING_1 ) ) + STRING_2 ; } }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",1602
"public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this , this ) ; METHOD_5 ( ) . info ( STRING_1 ) ; VAR_1 = this ; }","public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this , this ) ; METHOD_5 ( ) . info ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",1603
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_2 ( ( position == ( VAR_3 ) ? VAR_4 : VAR_5 ) ) ; VAR_6 = position ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_2 ( ( position == ( VAR_3 ) ? VAR_4 : VAR_5 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1604
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 . getId ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1605
public void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = FLOAT_1 * ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 += VAR_2 ; VAR_4 = VAR_5 = 0 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = FLOAT_1 * ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 += VAR_2 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment']",1606
"public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getId ( ) ; TYPE_2 . METHOD_2 ( VAR_4 . getContext ( ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_1 ) , VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( VAR_5 ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_4 . getContext ( ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_1 ) , VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1607
"public void init ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { this . VAR_4 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_5 = VAR_3 ; if ( VAR_1 <= VAR_2 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } }","public void init ( int VAR_1 , int VAR_2 ) { this . VAR_4 = VAR_1 ; this . VAR_2 = VAR_2 ; if ( VAR_1 <= VAR_2 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1608
public final TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_1 ) { VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; } return this ; },public final TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1609
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = true ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1610
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = new java.util.ArrayList ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; } },protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",1611
"public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = null ; METHOD_3 ( VAR_2 ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = null ; METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1612
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = - 1 ; VAR_4 = - 1 ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = - 1 ; VAR_4 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1613
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( null ) ; VAR_2 = null ; VAR_3 . METHOD_4 ( ) ; VAR_3 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( null ) ; VAR_2 = null ; VAR_3 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1614
public void setState ( int state ) { this . VAR_1 = state ; },public void setState ( int state ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1615
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = getActivity ( ) ; super . METHOD_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",1616
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_4 = TYPE_3 . METHOD_2 ( ) ; VAR_5 = TYPE_3 . METHOD_2 ( ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1617
public void METHOD_1 ( ) { if ( VAR_1 ) METHOD_2 ( ) ; else VAR_2 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",1618
public TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1619
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) == null ) VAR_3 = new TYPE_3 < > ( ) ; VAR_4 . init ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_4 . init ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1620
protected double METHOD_1 ( ) { double VAR_1 = ( this . VAR_2 ) * FLOAT_1 ; this . VAR_2 = 0 ; return VAR_1 ; },protected double METHOD_1 ( ) { return ( this . VAR_2 ) * FLOAT_1 ; },"['Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",1621
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . end ( ) ; },public void METHOD_1 ( ) { VAR_2 . end ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1622
"protected void METHOD_1 ( android.content.Intent intent ) { METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( VAR_3 , VAR_4 . toString ( ) ) ; }",protected void METHOD_1 ( android.content.Intent intent ) { METHOD_3 ( ) ; },"['Update Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1623
"public void METHOD_1 ( android.content.Context context , int type , java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = context ; VAR_4 = type ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; }","public void METHOD_1 ( android.content.Context context , int type ) { VAR_3 = context ; VAR_4 = type ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1624
public TYPE_1 METHOD_1 ( ) { TYPE_1 temp = new TYPE_1 ( ) ; VAR_1 = this . VAR_2 ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; VAR_7 = this . VAR_8 ; return temp ; },public TYPE_1 METHOD_1 ( ) { return this ; },"['Move ThisAccess', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",1625
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( this ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( this ) ; this . VAR_1 = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",1626
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1627
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1629
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { VAR_3 = ( VAR_1 + STRING_1 ) + VAR_2 ; VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 . setText ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 ) { VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_5 . setText ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",1631
"public void add ( int position , TYPE_1 item ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( position , item ) ; if ( VAR_3 ) TYPE_2 . METHOD_1 ( ) ; }","public void add ( int position , TYPE_1 item ) { if ( ( VAR_1 ) == null ) return ; VAR_2 . add ( position , item ) ; if ( VAR_3 ) TYPE_2 . METHOD_1 ( ) ; }","['Insert Return', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1632
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1633
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",1634
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1635
protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; VAR_3 = true ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1636
public static void init ( ) { VAR_1 . context = new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = ( ( TYPE_2 ) ( VAR_2 . METHOD_3 ( STRING_2 ) ) ) ; },public static void init ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1638
public void METHOD_1 ( TYPE_1 VAR_1 ) { state = VAR_2 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1639
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.String VAR_2 = VAR_3 . getString ( VAR_4 , null ) ; if ( VAR_2 != null ) { VAR_5 = java.lang.Float . METHOD_3 ( VAR_2 ) ; } }",private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1640
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1641
"public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 = new TYPE_1 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; } return this . VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1642
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( this , view ) ; VAR_3 = TYPE_3 . METHOD_3 ( ) ; super . METHOD_1 ( view , VAR_1 ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( this , view ) ; super . METHOD_1 ( view , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1643
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( 0.0F , 0.0F , 0.0F , 1.0F ) ; VAR_3 = new TYPE_4 ( ) ; VAR_4 = new TYPE_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( 0.0F , 0.0F , 0.0F , 1.0F ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1644
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) . getColor ( VAR_3 ) ) ; VAR_4 = 0 ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) . getColor ( VAR_3 ) ) ; VAR_4 = 1 ; METHOD_4 ( ) ; },['Update Literal'],1645
void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; },TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; },"['Update TypeReference', 'Insert Return', 'Insert ConstructorCall', 'Move VariableRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1646
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { super . METHOD_1 ( context ) ; METHOD_2 ( context ) ; VAR_1 = context . METHOD_3 ( METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { super . METHOD_1 ( context ) ; METHOD_2 ( context ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1647
public void METHOD_1 ( ) { index . METHOD_2 ( ) ; },public synchronized void METHOD_1 ( ) { ( index ) -- ; },"['Insert UnaryOperator', 'Insert Wra', 'Insert FieldWrite', 'Delete FieldRead', 'Delete Invocation']",1648
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Insert FieldRead', 'Delete VariableRead']",1649
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_2 ; VAR_4 = VAR_2 ; VAR_5 = VAR_2 ; },protected void METHOD_1 ( ) { VAR_4 = VAR_2 ; VAR_5 = VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1650
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1651
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , this ) ; VAR_5 . start ( ) ; VAR_6 = new TYPE_2 ( this ) ; VAR_7 . start ( ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , this ) ; VAR_5 . start ( ) ; }","['Update Wra', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1652
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( context ) == null ) { context = VAR_1 ; } VAR_1 . METHOD_2 ( FLOAT_1 , FLOAT_2 , FLOAT_1 , 0.0F ) ; VAR_2 . start ( ) ; METHOD_3 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( FLOAT_1 , FLOAT_2 , FLOAT_1 , 0.0F ) ; VAR_2 . start ( ) ; METHOD_3 ( VAR_3 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1653
public static void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess', 'Delete Wra']",1654
"public void METHOD_1 ( TYPE_1 view ) { VAR_1 = true ; TYPE_2 intent = new TYPE_2 ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( TYPE_1 view ) { TYPE_2 intent = new TYPE_2 ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1655
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; } if ( VAR_1 instanceof TYPE_2 ) { VAR_3 = false ; } VAR_4 . remove ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_4 . remove ( VAR_1 ) ; },"['Update TypeReference', 'Insert Return', 'Move Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1656
public static java.util.List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = VAR_3 . query ( ) ; VAR_1 = false ; } return VAR_2 ; },public static java.util.List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 ) VAR_2 = VAR_3 . query ( ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1657
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; VAR_8 = VAR_4 ; VAR_9 . METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_9 . METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1658
public boolean METHOD_1 ( java.lang.String query ) { if ( VAR_1 . isEmpty ( ) ) { VAR_2 = null ; METHOD_2 ( ) ; } else { VAR_2 = query ; METHOD_3 ( query ) ; } return false ; },public boolean METHOD_1 ( java.lang.String query ) { if ( VAR_1 . isEmpty ( ) ) { METHOD_2 ( ) ; } else { METHOD_3 ( query ) ; } return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1659
public java.lang.Long METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = 0.0F ; } java.lang.Long VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.Long VAR_3 = VAR_2 * INT_1 ; return VAR_3 ; },public java.lang.Long METHOD_1 ( ) { java.lang.Long VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.Long VAR_3 = VAR_2 * INT_1 ; return VAR_3 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1660
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } }",public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( 0 ) ; VAR_3 = null ; },"['Insert Invocation', 'Insert Assignment', 'Move TypeAccess', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1661
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; },public void METHOD_1 ( ) { this . VAR_1 = ( VAR_1 ) ++ ; },"['Insert Assignment', 'Insert FieldWrite', 'Move UnaryOperator', 'Insert ThisAccess']",1662
public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( false ) ; } VAR_1 = ( ( TYPE_1 ) ( view ) ) ; VAR_2 = position ; },public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( false ) ; } VAR_1 = ( ( TYPE_1 ) ( view ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1663
public void METHOD_1 ( ) { this . VAR_1 = INT_1 ; this . VAR_2 = true ; },public void METHOD_1 ( ) { this . VAR_2 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1664
public void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1665
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = 0 ; VAR_3 = false ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1666
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( this . VAR_2 ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",1668
public void execute ( TYPE_1 VAR_1 ) { VAR_2 = true ; if ( ( VAR_3 ) != 0 ) { VAR_4 . METHOD_1 ( 0 ) ; } METHOD_2 ( ) ; },public void execute ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( ( VAR_3 ) != 0 ) { VAR_4 . METHOD_1 ( 0 ) ; } METHOD_2 ( ) ; },['Update Literal'],1669
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . VAR_3 = null ; this . VAR_4 = true ; super . METHOD_1 ( VAR_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . VAR_3 = null ; super . METHOD_1 ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1670
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . values . METHOD_2 ( ) ; this . values . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . values = VAR_1 ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1671
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 . METHOD_3 ( VAR_3 . METHOD_4 ( getActivity ( ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",1672
"public static void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( context , VAR_1 ) ; VAR_2 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_3 ( context ) ) ) ; }","public static void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( context , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1673
"protected void METHOD_1 ( TYPE_1 VAR_1 , int index , TYPE_2 type ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = VAR_2 . METHOD_2 ( ) ; } VAR_4 = false ; VAR_5 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , int index , TYPE_2 type ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1674
public void METHOD_1 ( long VAR_1 ) { if ( VAR_1 != ( VAR_2 ) ) { VAR_3 = true ; VAR_2 = VAR_1 ; } },public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1675
public void METHOD_1 ( long time ) { VAR_1 = time ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( long time ) { VAR_1 = time ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1676
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = 0 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",1677
"public void METHOD_1 ( java.lang.String key , java.lang.String value ) { VAR_1 . add ( new TYPE_1 ( key , value ) ) ; VAR_2 = null ; }","public void METHOD_1 ( java.lang.String key , java.lang.String value ) { VAR_1 . add ( new TYPE_1 ( key , value ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1678
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , ( STRING_1 + STRING_2 ) ) ; VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_5 = null ; VAR_6 . delete ( VAR_7 , VAR_5 , null ) ; }","public void METHOD_1 ( ) { VAR_5 = null ; VAR_6 . delete ( VAR_7 , VAR_5 , null ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1679
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = false ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = false ; VAR_5 = false ; VAR_6 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1680
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( 0 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_7 = false ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( 0 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1681
void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( STRING_1 ) ; return ; } METHOD_3 ( STRING_2 ) ; VAR_2 = null ; VAR_3 = true ; VAR_4 = null ; VAR_5 = null ; VAR_1 . METHOD_1 ( ) ; },void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( STRING_1 ) ; return ; } METHOD_3 ( STRING_2 ) ; VAR_3 = true ; VAR_4 = null ; VAR_5 = null ; VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1682
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = this ; VAR_4 . add ( VAR_2 ) ; VAR_5 = false ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = this ; VAR_4 . add ( VAR_2 ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1683
public void start ( ) { super . start ( ) ; sum = VAR_1 ; },public void start ( ) { super . start ( ) ; sum = 0.0 ; },"['Insert Literal', 'Delete FieldRead']",1684
"public boolean METHOD_1 ( ) { VAR_1 = true ; int VAR_2 = ( VAR_3 [ 0 ] . length ) - 1 ; return VAR_4 . METHOD_2 ( ( VAR_2 * VAR_2 ) , ( ( VAR_2 * VAR_2 ) + 1 ) ) ; }","public boolean METHOD_1 ( ) { int VAR_2 = ( VAR_3 [ 0 ] . length ) - 1 ; return VAR_4 . METHOD_2 ( ( VAR_2 * VAR_2 ) , ( ( VAR_2 * VAR_2 ) + 1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1685
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1686
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = this . METHOD_2 ( this . VAR_3 ) ; if ( VAR_4 [ VAR_2 ] ) { this . METHOD_3 ( 1 ) ; return VAR_5 ; } this . result = false ; return VAR_6 ; },public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = this . METHOD_2 ( this . VAR_3 ) ; if ( VAR_4 [ VAR_2 ] ) { this . METHOD_3 ( 1 ) ; return VAR_5 ; } return VAR_6 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1687
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1688
private void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; this . VAR_1 = intent . METHOD_2 ( STRING_1 ) ; this . VAR_2 = intent . METHOD_2 ( STRING_2 ) ; this . VAR_3 = intent . METHOD_2 ( STRING_3 ) ; },private void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; this . VAR_1 = intent . METHOD_2 ( STRING_1 ) ; this . VAR_2 = intent . METHOD_2 ( STRING_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1689
public void METHOD_1 ( ) { while ( ( VAR_1 . size ( ) ) > 0 ) { VAR_2 . add ( VAR_1 . remove ( 0 ) ) ; } VAR_3 = 0 ; },public void METHOD_1 ( ) { while ( ( VAR_1 . size ( ) ) > 0 ) { VAR_2 . add ( VAR_1 . remove ( 0 ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1690
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 = VAR_3 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1691
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = STRING_1 ; VAR_2 = new java.io.File ( VAR_1 ) ; VAR_3 = new TYPE_1 ( VAR_2 , VAR_4 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_2 = new java.io.File ( STRING_1 ) ; VAR_3 = new TYPE_1 ( VAR_2 , VAR_4 ) ; }","['Insert Assignment', 'Move FieldWrite', 'Insert ConstructorCall', 'Move FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1693
public final void METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_2 = true ; } this . VAR_3 = VAR_1 ; },public final void METHOD_1 ( int VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1694
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_3 ) throw new TYPE_1 ( STRING_1 ) ; VAR_4 = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_5 = 0 ; VAR_3 = true ; }",public void METHOD_1 ( ) { if ( VAR_3 ) throw new TYPE_1 ( STRING_1 ) ; VAR_5 = 0 ; VAR_3 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",1696
public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = STRING_2 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; return STRING_4 ; },public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = STRING_2 ; VAR_4 = STRING_3 ; return STRING_4 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1697
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = 0 ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1698
"protected void METHOD_1 ( long offset ) { METHOD_2 ( ) ; ( VAR_1 ) ++ ; METHOD_3 ( offset ) ; VAR_2 . put ( ( offset + INT_1 ) , ( ( byte ) ( 1 ) ) ) ; }","protected void METHOD_1 ( long offset ) { METHOD_3 ( offset ) ; VAR_2 . put ( ( offset + INT_1 ) , ( ( byte ) ( 1 ) ) ) ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator']",1699
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = new java.util.ArrayList < > ( ) ; } },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1700
"public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . format ( new java.util.Date ( ) ) ; TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 = VAR_5 ; VAR_6 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . format ( new java.util.Date ( ) ) ; TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_6 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1701
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1702
"public void METHOD_1 ( int VAR_1 , boolean VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1703
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this , STRING_1 , STRING_2 ) ; VAR_2 = TYPE_2 . METHOD_5 ( ) ; VAR_3 = TYPE_2 . METHOD_6 ( ) ; METHOD_7 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this , STRING_1 , STRING_2 ) ; METHOD_7 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1704
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) return VAR_1 ; else return VAR_1 = new TYPE_1 ( ) ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",1705
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1706
public void METHOD_1 ( ) { VAR_1 = - 1 ; VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1707
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 / INT_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1708
public void METHOD_1 ( ) { index = - 1 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1709
"private void METHOD_1 ( java.util.List < TYPE_1 > data ) { VAR_1 = new TYPE_2 ( METHOD_2 ( ) , TYPE_3 . METHOD_3 ( this ) , data ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; }","private void METHOD_1 ( java.util.List < TYPE_1 > data ) { VAR_2 . METHOD_4 ( new TYPE_2 ( METHOD_2 ( ) , TYPE_3 . METHOD_3 ( this ) , data ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1710
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; ( VAR_1 ) -- ; VAR_2 = false ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; ( VAR_1 ) -- ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1711
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1712
public void METHOD_1 ( ) { try { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1713
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 class . METHOD_3 ( ) ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 class . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",1714
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = java.util.Arrays.asList ( VAR_1 . METHOD_1 ( STRING_1 ) . split ( STRING_2 ) ) ; VAR_3 = VAR_1 . METHOD_1 ( STRING_3 ) ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_3 = VAR_1 . METHOD_1 ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1715
"public void METHOD_1 ( TYPE_1 line ) { VAR_1 = VAR_2 ; METHOD_2 ( VAR_3 , VAR_4 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 line ) { METHOD_2 ( VAR_3 , VAR_4 , VAR_2 ) ; }","['Update TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1716
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1718
public int METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_2 = - 1 ; java.lang.System.out.println ( STRING_1 ) ; return 0 ; },public int METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 ) ; java.lang.System.out.println ( STRING_1 ) ; return 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1719
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_1 . setEnabled ( true ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_1 . setEnabled ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1720
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; VAR_1 = METHOD_3 ( ) ; VAR_2 = getActivity ( ) ; VAR_3 = ( ( android.widget.Button ) ( VAR_2 . METHOD_4 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; VAR_2 = getActivity ( ) ; VAR_3 = ( ( android.widget.Button ) ( VAR_2 . METHOD_4 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1721
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1722
private void METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = VAR_3 ; METHOD_3 ( ) ; } else { } },private void METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ) METHOD_3 ( ) ; else { } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1724
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . show = false ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . show = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1725
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; result = getIntent ( ) . METHOD_3 ( STRING_1 ) ; TYPE_2 . METHOD_4 ( STRING_2 , result ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",1727
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = VAR_7 ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1728
public void METHOD_1 ( int num ) { VAR_1 = num ; },public void METHOD_1 ( int num ) { this . VAR_1 = num ; },['Insert ThisAccess'],1729
private void METHOD_1 ( TYPE_1 < TYPE_2 > node ) { ( VAR_1 ) -- ; if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 = false ; VAR_4 = false ; } },private void METHOD_1 ( TYPE_1 < TYPE_2 > node ) { ( VAR_1 ) -- ; if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1730
"protected synchronized void METHOD_1 ( ) { this . METHOD_2 ( ) ; VAR_1 = true ; TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; }","protected synchronized void METHOD_1 ( ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1731
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_2 = STRING_2 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1732
public void add ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( VAR_2 . METHOD_1 ( VAR_1 ) ) ) { VAR_3 = VAR_1 ; VAR_2 = VAR_1 ; } },public void add ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( VAR_2 . METHOD_1 ( VAR_1 ) ) ) { VAR_2 = VAR_1 ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1733
protected void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },"['Update Wra', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1734
private boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = false ; if ( VAR_3 . equals ( VAR_4 ) ) { } else { VAR_2 = true ; VAR_5 = false ; } return VAR_2 ; },private boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = false ; if ( VAR_3 . equals ( VAR_4 ) ) { } else { VAR_2 = true ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1735
public TYPE_1 METHOD_1 ( ) { value = TYPE_1 . METHOD_2 ( ) ; return getValue ( ) ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",1736
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; final TYPE_1 args = METHOD_2 ( ) ; VAR_2 = ( ( TYPE_2 ) ( args . METHOD_3 ( STRING_1 ) ) ) ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; final TYPE_1 args = METHOD_2 ( ) ; VAR_2 = ( ( TYPE_2 ) ( args . METHOD_3 ( STRING_1 ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1737
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . nodes = nodes ; VAR_3 = VAR_4 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . nodes = nodes ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1738
"public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { if ( VAR_3 ) { VAR_4 . put ( VAR_1 , VAR_2 ) ; VAR_5 = VAR_2 ; METHOD_2 ( VAR_1 , true ) ; } else { VAR_5 = VAR_2 ; METHOD_2 ( true ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_4 . put ( VAR_1 , VAR_2 ) ; VAR_5 = VAR_2 ; METHOD_2 ( VAR_1 , true ) ; }","['Move Invocation', 'Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",1739
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1740
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_5 . execute ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_5 . execute ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",1741
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , this , VAR_6 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( true ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , this , VAR_6 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( true ) ; }","['Delete FieldRead', 'Delete FieldRead']",1742
"protected TYPE_1 METHOD_1 ( ) { if ( ( ( this . VAR_1 ) == null ) && ( ( this . id ) >= 0 ) ) this . VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class , id ) ; return this . VAR_1 ; }",protected TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1743
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = new TYPE_2 ( ) ; VAR_5 . execute ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1744
public void METHOD_1 ( float x ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_1 = x ; } },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Parameter', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1745
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . id , VAR_1 ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ( STRING_1 + VAR_1 ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . id , VAR_1 ) ; METHOD_4 ( ( STRING_1 + VAR_1 ) ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",1746
public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1747
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = METHOD_2 ( ) . getInt ( STRING_1 ) ; VAR_5 = new TYPE_4 ( VAR_6 . getContext ( ) ) ; return VAR_1 . METHOD_3 ( VAR_7 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_3 ( VAR_7 , VAR_2 , false ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",1748
public static void METHOD_1 ( java.lang.String fileName ) { java.lang.System.out.println ( ( STRING_1 + fileName ) ) ; VAR_1 = fileName ; TYPE_1 . METHOD_2 ( ( ( VAR_2 ) + fileName ) ) ; },public static void METHOD_1 ( java.lang.String fileName ) { java.lang.System.out.println ( ( STRING_1 + fileName ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_2 ) + fileName ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1749
public void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 - ( VAR_2 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1750
"public void init ( ) { TYPE_1 . METHOD_1 ( VAR_1 . get ( ) ) . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_5 = new TYPE_3 ( VAR_6 , VAR_3 ) ; }","public void init ( ) { METHOD_1 ( VAR_1 . get ( ) ) . METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( VAR_6 , new TYPE_2 ( ) ) ; }","['Move Assignment', 'Move FieldWrite', 'Update TypeAccess', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete Assignment']",1751
public final int METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } return VAR_2 ; },public final int METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1752
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 super . METHOD_2 ( ) ; this . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_4 super . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",1753
"private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( STRING_1 , TYPE_2 . METHOD_2 ( ) ) ; VAR_1 = TYPE_3 . METHOD_3 ( STRING_2 ) ; TYPE_1 . METHOD_1 ( STRING_3 , TYPE_2 . METHOD_4 ( VAR_1 ) ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( STRING_1 , TYPE_2 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_1 ( STRING_3 , TYPE_2 . METHOD_4 ( VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1754
public void METHOD_1 ( ) { ( count ) ++ ; if ( ( count ) >= ( VAR_1 . size ( ) ) ) { count = ( VAR_1 . size ( ) ) - 1 ; } },public void METHOD_1 ( ) { ( count ) ++ ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",1756
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_2 . METHOD_3 ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1757
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ! ( VAR_2 ) ) { TYPE_3 . METHOD_2 ( ) ; VAR_2 = true ; } return TYPE_3 . METHOD_3 ( VAR_1 ) ; },public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1758
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_2 . isEmpty ( VAR_1 ) ) { VAR_1 = STRING_2 ; } TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_2 ( STRING_1 ) , VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess']",1760
void METHOD_1 ( long VAR_1 ) { synchronized ( this ) { if ( VAR_2 ) { return ; } VAR_2 = true ; } METHOD_2 ( ) ; VAR_3 = VAR_1 ; METHOD_3 ( ) ; },void METHOD_1 ( ) { synchronized ( this ) { VAR_2 = true ; METHOD_2 ( ) ; } },"['Move Invocation', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",1761
public final void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } VAR_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) - 1 ) ) ; },public final void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) - 1 ) ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1762
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = INT_1 ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_4 = TYPE_3 . METHOD_3 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_4 = TYPE_3 . METHOD_3 ( STRING_1 ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",1763
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1764
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; return VAR_2 ; },protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",1765
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_4 = 0 ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_4 = 0 ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1766
public void start ( ) { VAR_1 = new TYPE_1 ( this ) ; },public void start ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1767
"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { VAR_2 = 0 ; }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1768
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_2 ( null ) ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_2 ( null ) ; VAR_3 = false ; VAR_4 = false ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1769
"public TYPE_1 METHOD_1 ( java.lang.String id ) { this . VAR_1 . put ( ""id"" , id ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String id ) { this . id = id ; this . VAR_1 . put ( ""id"" , id ) ; return this ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",1771
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 1 ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1772
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , this ) ; } VAR_4 . METHOD_3 ( this ) ; }",public void METHOD_1 ( ) { VAR_4 . METHOD_3 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1773
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 . METHOD_2 ( STRING_1 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = VAR_1 + STRING_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",1774
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( false ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_4 ( TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ; },"['Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1775
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = INT_1 ; VAR_3 = 1 ; VAR_4 = false ; VAR_5 = false ; VAR_6 = 0 ; VAR_7 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = INT_1 ; VAR_3 = 1 ; VAR_4 = false ; VAR_5 = false ; VAR_6 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1778
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = java.lang.Double . METHOD_2 ( VAR_3 . getText ( ) ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = STRING_2 ; VAR_5 = 0 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = java.lang.Double . METHOD_2 ( VAR_3 . getText ( ) ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = STRING_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1779
public void METHOD_1 ( TYPE_1 VAR_1 ) { source . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { source . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1780
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1781
public void METHOD_1 ( ) { context = VAR_1 ; VAR_2 = new TYPE_1 ( context ) ; VAR_3 = new TYPE_2 ( context ) ; VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_5 = new TYPE_4 ( VAR_1 ) ; VAR_6 = true ; },public void METHOD_1 ( ) { context = VAR_1 ; VAR_2 = new TYPE_1 ( context ) ; VAR_3 = new TYPE_2 ( context ) ; VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_5 = new TYPE_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1782
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . execute ( ) ; VAR_4 = new java.util.ArrayList < TYPE_3 > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . execute ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1783
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_5 . setEnabled ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . METHOD_2 ( ) ) ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_5 . setEnabled ( true ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1784
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_2 ( VAR_5 ) ) ) ; },public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1785
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },['Insert ThisAccess'],1786
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int count , int VAR_2 ) { VAR_3 = VAR_4 . toString ( ) ; }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int count , int VAR_2 ) { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1787
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 = new TYPE_2 ( INT_1 , INT_2 ) ; TYPE_3 = new TYPE_4 ( TYPE_1 ) ; TYPE_3 . METHOD_2 ( ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1788
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { VAR_3 . i ( STRING_1 ) ; METHOD_2 ( VAR_2 , height ) ; TYPE_2 . METHOD_3 ( VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { VAR_3 . i ( STRING_1 ) ; VAR_4 = VAR_2 ; VAR_5 = height ; TYPE_2 . METHOD_3 ( VAR_4 , VAR_5 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Delete Invocation']",1789
"public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; try { VAR_2 = true ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } setState ( VAR_4 ) ; }","public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; try { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } setState ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1790
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . get ( this ) . METHOD_2 ( this ) ; VAR_3 = new TYPE_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . get ( this ) . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1791
"private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1792
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; VAR_2 = new java.util.ArrayList < TYPE_3 > ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_5 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; VAR_2 = new java.util.ArrayList < TYPE_3 > ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1793
"public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { view . METHOD_2 ( ) ; this . VAR_2 = true ; }","public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { view . METHOD_2 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1794
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( key ) ) && ( VAR_2 ) ) { VAR_2 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1795
"public void METHOD_1 ( ) { this . VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_3 . info ( STRING_1 , VAR_4 . getName ( ) ) ; }",public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1796
private void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_3 = false ; VAR_4 . setText ( STRING_2 ) ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( true ) ; },private void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_3 = false ; VAR_4 . setText ( STRING_2 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1797
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , this . VAR_3 ) , VAR_4 ) ; VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , this . VAR_3 ) , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1798
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( ) ; if ( VAR_1 ) { VAR_2 . METHOD_4 ( false , METHOD_5 ( ) ) ; } }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",1799
"public void METHOD_1 ( android.view.View view , int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } VAR_1 = view ; VAR_3 = position ; view . METHOD_2 ( VAR_4 ) ; }",public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } VAR_1 = view ; view . METHOD_2 ( VAR_4 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1800
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; VAR_8 = null ; VAR_9 = null ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_8 = null ; VAR_9 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1801
"public void add ( TYPE_1 item ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList ( ) ; VAR_2 . add ( 0 , item ) ; }","public void add ( TYPE_1 item ) { VAR_2 . add ( 0 , item ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1802
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setEnabled ( true ) ; VAR_5 . setEnabled ( false ) ; VAR_6 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setEnabled ( true ) ; VAR_5 . setEnabled ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1804
"private void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new TYPE_2 ( 1 , VAR_1 ) ; VAR_3 = new TYPE_2 ( 0 , VAR_1 ) ; VAR_4 = new TYPE_2 ( INT_1 , VAR_1 ) ; }","private void init ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( 1 , VAR_1 ) ; VAR_3 = new TYPE_2 ( 0 , VAR_1 ) ; this . VAR_1 = VAR_1 ; }","['Move Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",1805
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = VAR_1 - ( VAR_4 ) ; VAR_5 = VAR_2 - ( VAR_6 ) ; VAR_7 = 0 ; VAR_8 = 0 ; }",public void METHOD_1 ( ) { VAR_3 = ( VAR_1 ) - ( VAR_4 ) ; VAR_5 = ( VAR_2 ) - ( VAR_6 ) ; VAR_7 = 0 ; VAR_8 = 0 ; },"['Insert FieldRead', 'Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete VariableRead']",1806
"private void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { TYPE_1 . METHOD_3 ( VAR_1 , VAR_3 , this ) ; } VAR_2 = true ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_1 , VAR_3 , this ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1807
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = null ; VAR_5 = 1 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1808
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1809
public void METHOD_1 ( ) { VAR_1 = ( ( double ) ( ( VAR_2 ) / ( ( VAR_3 ) * ( VAR_4 ) ) ) ) ; },public void METHOD_1 ( ) { VAR_1 = ( ( double ) ( 0 ) ) ; },"['Insert Literal', 'Move TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",1810
public void METHOD_1 ( ) throws java.lang.Exception { this . METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1811
"public void METHOD_1 ( ) { VAR_1 = false ; int VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ( VAR_2 + INT_1 ) , ( VAR_2 + INT_1 ) ) ; }","public void METHOD_1 ( ) { int VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ( VAR_2 + INT_1 ) , ( VAR_2 + INT_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1812
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( VAR_1 != null ) output . METHOD_2 ( VAR_1 ) ; else output . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { output . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",1813
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( data ) ; data . METHOD_4 ( VAR_3 < TYPE_2 > METHOD_5 ( ) ) ; VAR_4 = new java.util.ArrayList < TYPE_2 > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( data ) ; data . METHOD_4 ( VAR_3 < TYPE_2 > METHOD_5 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1815
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( true ) ; VAR_1 = null ; type = STRING_1 ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1816
public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 < TYPE_1 < TYPE_2 > > VAR_1 ) { this . VAR_2 = VAR_1 ; return VAR_1 . METHOD_1 ( this ) ; },public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 < TYPE_1 < TYPE_2 > > VAR_1 ) { return VAR_1 . METHOD_1 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1818
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_3 . get ( ) ; VAR_3 . set ( this ) ; return null ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_3 . get ( ) ; VAR_3 . set ( this ) ; return null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1819
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . setText ( getString ( VAR_6 ) ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . setText ( getString ( VAR_6 ) ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1820
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < java.util.HashMap < java.lang.String , java.lang.String > > ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1821
public void METHOD_1 ( android.content.Context context ) { VAR_1 = ( ( TYPE_1 ) ( context ) ) ; super . METHOD_1 ( context ) ; },public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",1822
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( ) ) ) . METHOD_4 ( ) ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( ) ) ) . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1823
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1824
protected void METHOD_1 ( ) { state = VAR_1 ; VAR_2 = 0 ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { state = VAR_1 ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1825
public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_1 ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1826
"private void init ( android.content.Context context , int VAR_1 ) { VAR_2 = context ; VAR_3 = VAR_1 ; VAR_4 = new TYPE_1 ( context , VAR_1 ) ; VAR_5 = new TYPE_2 ( context , VAR_4 ) ; VAR_5 . METHOD_1 ( false ) ; }","private void init ( android.content.Context context , int VAR_1 ) { VAR_2 = context ; VAR_4 = new TYPE_1 ( context , VAR_1 ) ; VAR_5 = new TYPE_2 ( context , VAR_4 ) ; VAR_5 . METHOD_1 ( false ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1827
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_3 = ( ( TYPE_3 ) ( TYPE_4 . METHOD_2 ( STRING_1 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1828
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_2 . size ( ) ) > ( VAR_3 . size ( ) ) ) { VAR_4 = VAR_1 ; METHOD_2 ( VAR_5 ) ; } VAR_4 = VAR_1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_4 = VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",1829
"public void METHOD_1 ( TYPE_1 className ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 = null ; VAR_4 . status = null ; }",public void METHOD_1 ( TYPE_1 className ) { VAR_3 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1830
"public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1831
"public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( ( VAR_4 ) == null ) { VAR_4 = new TYPE_1 ( ) ; } VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1832
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1833
public void METHOD_1 ( float VAR_1 ) { if ( VAR_1 > 0 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ( - ( VAR_2 ) ) ) ; } },public void METHOD_1 ( float VAR_1 ) { if ( VAR_1 > 0 ) VAR_3 . METHOD_2 ( ( - VAR_1 ) ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1834
public void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; VAR_2 = ( VAR_1 . METHOD_2 ( VAR_3 ) ) + 1 ; VAR_4 . add ( VAR_2 ) ; VAR_5 = new java.util.ArrayList < > ( ) ; VAR_6 = 0 ; },public void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 . add ( VAR_2 ) ; },"['Move Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1835
"public void METHOD_1 ( android.view.View view ) { VAR_1 = null ; TYPE_1 . METHOD_2 ( this , view ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( this , view ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1836
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } VAR_2 = VAR_1 ; -- ( size ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } VAR_2 = VAR_1 ; return VAR_3 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1837
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1838
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = new TYPE_2 ( ) ; VAR_2 . put ( STRING_3 , VAR_3 ) ; VAR_4 = true ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_2 ( ) ; VAR_2 . put ( STRING_3 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1839
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",1840
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1841
"private void METHOD_1 ( TYPE_1 event ) { VAR_1 = STRING_1 ; VAR_2 = null ; VAR_3 = null ; result = null ; VAR_4 = CHAR_1 ; VAR_5 . setText ( VAR_1 ) ; VAR_6 . setText ( ""0"" ) ; }",private void METHOD_1 ( TYPE_1 event ) { VAR_1 = STRING_1 ; VAR_2 = 0.0 ; VAR_3 = 0.0 ; VAR_4 = CHAR_1 ; VAR_5 . setText ( VAR_1 ) ; VAR_6 . setText ( VAR_1 ) ; },"['Update Literal', 'Update Literal', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal']",1842
public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { VAR_3 = VAR_4 = null ; VAR_5 = VAR_6 = null ; } },public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) VAR_3 = VAR_4 = null ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment']",1844
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 to , int VAR_3 ) { this . METHOD_2 ( to ) ; this . x = VAR_1 ; this . y = VAR_2 ; this . METHOD_3 ( ) ; return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 to , int VAR_3 ) { this . METHOD_2 ( to ) ; this . METHOD_3 ( ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1845
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 = INT_1 ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1846
private void METHOD_1 ( ) { this . METHOD_2 ( null ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 . execute ( ) ; },private void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1847
public void METHOD_1 ( java.lang.Boolean status ) { if ( ( status != null ) && status ) METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; else VAR_2 = false ; },public void METHOD_1 ( java.lang.Boolean status ) { if ( ( status != null ) && status ) METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",1849
public void METHOD_1 ( ) { if ( ( getActivity ( ) ) != null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . execute ( ) ; } },public void METHOD_1 ( ) { if ( ( getActivity ( ) ) != null ) { new TYPE_1 ( ) . execute ( ) ; } },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1850
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1851
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = false ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1852
public final void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; },public final void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; },"['Insert LocalVariable', 'Insert Assignment', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Move FieldWrite', 'Insert Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1853
public int [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 . METHOD_2 ( ) ; },public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1854
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( this ) ; VAR_2 . open ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",1855
public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( getText ( ) ) ) ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( getText ( ) ) ) ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1856
protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = false ; VAR_5 = false ; VAR_6 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = false ; VAR_6 = null ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1857
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1859
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 = true ; return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1860
"public TYPE_1 < TYPE_2 , java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = new java.util.LinkedList < > ( ) ; METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_3 = METHOD_3 ( VAR_2 ) ; return METHOD_4 ( VAR_3 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_3 = METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; },"['Update TypeReference', 'Move Invocation', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Return']",1861
private void METHOD_1 ( TYPE_1 event ) { VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",1862
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; } return super . METHOD_1 ( ) ; },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; return super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1863
public void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",1864
void METHOD_1 ( ) { if ( ( listener ) != null ) { listener . METHOD_1 ( this ) ; return ; } VAR_1 . METHOD_2 ( this ) ; VAR_2 = null ; },void METHOD_1 ( ) { if ( ( listener ) != null ) listener . METHOD_1 ( this ) ; },"['Delete Return', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1865
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; java.lang.System.out.println ( STRING_1 ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1866
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) , VAR_4 ) . show ( ) ; VAR_5 = VAR_1 ; METHOD_4 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) , VAR_4 ) . show ( ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1867
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { VAR_2 = TYPE_1 . METHOD_2 ( ) ; writer.write ( ( ( STRING_1 + ( VAR_3 . substring ( INT_1 ) ) ) + STRING_2 ) ) ; writer . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { writer.write ( ( ( STRING_1 + ( VAR_3 . substring ( INT_1 ) ) ) + STRING_2 ) ) ; writer . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1869
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; } else { this . VAR_1 = null ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",1870
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; synchronized ( this ) { b . METHOD_2 ( ) ; b = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; synchronized ( this ) { b . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1871
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . METHOD_2 ( ) ; VAR_7 . METHOD_2 ( ) ; VAR_8 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . METHOD_2 ( ) ; VAR_7 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1873
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1874
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( 1 ) ; VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( true ) ; },"['Insert LocalVariable', 'Insert Assignment', 'Insert TypeReference', 'Move ConstructorCall', 'Move FieldWrite', 'Insert ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1876
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { java.lang.String result = VAR_2 . getValue ( ) ; VAR_1 = VAR_1 . METHOD_2 ( ) ; return result ; } else { return null ; } },public java.lang.String METHOD_1 ( ) { return null ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",1877
public void METHOD_1 ( long VAR_1 ) { VAR_2 += VAR_1 - ( VAR_3 ) ; VAR_3 = VAR_1 ; ( VAR_4 ) ++ ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 += VAR_1 - ( VAR_3 ) ; VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1878
"public void METHOD_1 ( android.view.View view ) { VAR_1 = new TYPE_1 ( ) ; ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( this ) ; VAR_2 . show ( METHOD_3 ( ) , VAR_3 ) ; }",public void METHOD_1 ( android.view.View view ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeReference', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1879
public void METHOD_1 ( int VAR_1 ) { VAR_2 = java.lang.Integer.toString ( VAR_1 ) ; VAR_3 . setText ( ( STRING_1 + ( VAR_2 ) ) ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . setText ( ( STRING_1 + ( java.lang.Integer.toString ( VAR_1 ) ) ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1880
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) ; VAR_3 = FLOAT_1 ; VAR_4 . METHOD_3 ( VAR_5 . getContext ( ) , TYPE_2 , VAR_3 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 . getContext ( ) , TYPE_2 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess']",1881
public TYPE_1 METHOD_1 ( ) { synchronized ( VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( ( VAR_2 == null ) && ( VAR_3 ) ) { VAR_3 = false ; METHOD_3 ( ) ; } return VAR_2 ; } },public TYPE_1 METHOD_1 ( ) { synchronized ( VAR_1 ) { return METHOD_2 ( ) ; } },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete VariableRead']",1882
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 ) { this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1883
public boolean METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( ( TYPE_1 . METHOD_2 ( ) ) + STRING_1 ) + ( TYPE_2 . METHOD_3 ( ) ) ) + STRING_2 ; METHOD_4 ( ) ; return true ; },public boolean METHOD_1 ( android.view.View VAR_1 ) { METHOD_4 ( ) ; return true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",1884
"public double METHOD_1 ( double VAR_1 ) throws java.io.IOException { VAR_2 = VAR_3 . min ( VAR_1 , VAR_4 ) ; return VAR_2 ; }","public double METHOD_1 ( double VAR_1 ) throws java.io.IOException { return VAR_3 . min ( VAR_1 , VAR_4 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1885
"public void METHOD_1 ( java.util.Date VAR_1 , java.util.Date VAR_2 ) { VAR_3 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( new TYPE_2 < java.util.Date > ( VAR_1 , VAR_2 ) ) ; }","public void METHOD_1 ( java.util.Date VAR_1 , java.util.Date VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( new TYPE_2 < java.util.Date > ( VAR_1 , VAR_2 ) ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",1886
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = true ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1887
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = 1 ; VAR_3 = true ; VAR_4 = INT_1 ; VAR_5 . height = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = 1 ; VAR_3 = true ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1888
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = false ; return VAR_3 . METHOD_1 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1889
"private void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . trim ( ) . isEmpty ( ) ) { VAR_3 = STRING_1 ; } else { VAR_3 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; } }","private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; }","['Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",1890
public TYPE_1 build ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; return VAR_1 ; },public TYPE_1 build ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1891
public void METHOD_1 ( int i ) { VAR_1 . METHOD_1 ( i ) ; },public void METHOD_1 ( int i ) { position = i ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",1892
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = new TYPE_3 ( this ) ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_3 = new TYPE_3 ( this ) ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",1895
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 , VAR_1 , VAR_4 , this ) ; VAR_5 . execute ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_1 , VAR_4 , this ) ; VAR_5 . execute ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",1896
"public void METHOD_1 ( android.view.View view ) { VAR_1 = new TYPE_1 ( INT_1 , INT_1 , INT_1 ) ; VAR_1 = new TYPE_1 ( INT_2 , INT_2 , INT_2 ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = new TYPE_1 ( INT_1 , INT_1 , INT_1 ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1897
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , false ) ; VAR_5 = new TYPE_3 ( view , this ) ; return VAR_5 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , false ) ; return new TYPE_3 ( view , this ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1898
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1899
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",1900
public TYPE_1 METHOD_1 ( int id ) { VAR_1 = id ; TYPE_1 p = VAR_2 . METHOD_2 ( id ) ; return p ; },public TYPE_1 METHOD_1 ( int id ) { TYPE_1 p = VAR_2 . METHOD_2 ( id ) ; return p ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1901
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; java.lang.Thread . METHOD_2 ( INT_1 ) ; VAR_3 . METHOD_3 ( ""\n"" ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",1902
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_2 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert VariableRead', 'Delete FieldRead']",1903
private int get ( ) { if ( ( VAR_1 . size ( ) ) == 1 ) { METHOD_1 ( ) ; } int VAR_2 = buffer . METHOD_2 ( ) ; VAR_3 = VAR_1 . first ( ) ; return VAR_2 ; },private int get ( ) { if ( ( VAR_1 . size ( ) ) == 1 ) { METHOD_1 ( ) ; } return buffer . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead']",1904
public void METHOD_1 ( TYPE_1 position ) { this . VAR_1 . set ( position ) ; },public void METHOD_1 ( TYPE_1 position ) { this . position = position ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1905
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1906
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_3 ; VAR_5 . setText ( TYPE_1 . METHOD_4 ( VAR_3 ) ) ; VAR_6 . setText ( TYPE_1 . METHOD_4 ( VAR_3 ) ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; VAR_5 . setText ( TYPE_1 . METHOD_4 ( VAR_3 ) ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1908
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 type ) { VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_1 , type ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 type ) { VAR_3 . METHOD_1 ( VAR_1 , type ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1909
"public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1910
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( ) ) { VAR_3 = position ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1912
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1913
public static void METHOD_1 ( double VAR_1 ) { final double VAR_2 = FLOAT_1 ; double VAR_3 = VAR_1 * VAR_2 ; java.lang.System.out.println ( ( STRING_1 + VAR_3 ) ) ; },public static int METHOD_1 ( int VAR_1 ) { final double VAR_2 = FLOAT_1 ; VAR_3 = VAR_1 + VAR_2 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) ; },"['Update TypeReference', 'Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Update BinaryOperator', 'Move BinaryOperator', 'Insert FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",1914
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1915
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = new TYPE_2 ( getActivity ( ) . METHOD_3 ( ) ) ; VAR_3 = new java.util.ArrayList < > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = new TYPE_2 ( getActivity ( ) . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1916
public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 . add ( new TYPE_2 ( ) ) ; VAR_2 . add ( new TYPE_3 ( ) ) ; VAR_2 . add ( new TYPE_4 ( ) ) ; },public static void METHOD_1 ( ) { VAR_2 . add ( new TYPE_2 ( ) ) ; VAR_2 . add ( new TYPE_3 ( ) ) ; VAR_2 . add ( new TYPE_4 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1917
public void METHOD_1 ( TYPE_1 id ) { VAR_1 = 0 ; VAR_2 . remove ( id ) ; },public void METHOD_1 ( TYPE_1 id ) { VAR_2 . remove ( id ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1918
private java.lang.Object METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( TYPE_2 . METHOD_3 ( VAR_3 ) ) { VAR_3 = VAR_4 . toString ( ) ; } return this ; },private java.lang.Object METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; return this ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1919
public void METHOD_1 ( java.util.Date VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.Date VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1920
public void METHOD_1 ( TYPE_1 result ) { VAR_1 = false ; },public void METHOD_1 ( TYPE_1 result ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1921
"public int METHOD_1 ( TYPE_1 VAR_1 , java.lang.CharSequence text , int start , int end , TYPE_2 VAR_2 ) { VAR_3 = ( super . METHOD_1 ( VAR_1 , text , start , end , VAR_2 ) ) + ( VAR_4 ) ; return VAR_3 ; }","public int METHOD_1 ( TYPE_1 VAR_1 , java.lang.CharSequence text , int start , int end , TYPE_2 VAR_2 ) { return ( super . METHOD_1 ( VAR_1 , text , start , end , VAR_2 ) ) + ( VAR_4 ) ; }","['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",1922
public void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_2 = VAR_1 ; java.lang.System.out.println ( STRING_2 ) ; },public int METHOD_1 ( ) { },"['Update TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",1923
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; delete [ 0 ] = false ; VAR_3 = null ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; delete [ 0 ] = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1924
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1925
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_2 ( null ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_4 . METHOD_2 ( null ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1926
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = 0 ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1927
public TYPE_1 METHOD_1 ( java.lang.String ... VAR_1 ) { this . VAR_1 . METHOD_2 ( java.util.Arrays.asList ( VAR_1 ) ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String ... VAR_1 ) { this . VAR_1 = new java.util.HashSet < java.lang.String > ( java.util.Arrays.asList ( VAR_1 ) ) ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Move ThisAccess', 'Move Invocation', 'Delete FieldRead', 'Delete Invocation']",1928
public void METHOD_1 ( android.content.Context context ) { VAR_1 . METHOD_1 ( ) ; context . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; },public void METHOD_1 ( android.content.Context context ) { VAR_1 . METHOD_1 ( ) ; context . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1929
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1930
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . i ( VAR_3 , ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; METHOD_3 ( true ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . i ( VAR_3 , ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; METHOD_3 ( true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1932
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",1933
public void METHOD_1 ( ) { this . VAR_1 = 0 ; TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( 1 ) ; this . VAR_3 = new TYPE_2 ( ) ; this . VAR_3 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",1934
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; this . VAR_3 = VAR_4 ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; this . VAR_3 = VAR_4 ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1935
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 == ( this . VAR_2 ) ) ) { ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; this . VAR_2 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; } },"['Move BinaryOperator', 'Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1936
public void METHOD_1 ( java.lang.String title ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( title ) ; } },public void METHOD_1 ( java.lang.String title ) { this . title = title ; TYPE_1 VAR_1 = ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( title ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",1937
public void METHOD_1 ( ) { VAR_1 = new java.util.HashSet < java.lang.String > ( ) ; VAR_2 . add ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_5 = VAR_3 ; },public void METHOD_1 ( ) { VAR_1 = new java.util.HashSet < java.lang.String > ( ) ; VAR_2 . add ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1938
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = STRING_1 ; VAR_4 = false ; },private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1939
"private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 , double VAR_4 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_5 = 0 ; }","private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 , double VAR_4 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1941
public int METHOD_1 ( ) { int VAR_1 = this . VAR_2 ; TYPE_1 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; this . VAR_2 = 0 ; return this . VAR_3 . METHOD_3 ( VAR_1 ) ; },public int METHOD_1 ( ) { int VAR_1 = this . VAR_2 ; TYPE_1 . METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; return this . VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1942
public void METHOD_1 ( TYPE_1 endTime ) { this . VAR_1 . set ( endTime ) ; },public void METHOD_1 ( TYPE_1 endTime ) { this . endTime = endTime ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1944
public TYPE_1 METHOD_1 ( android.content.Intent intent ) { VAR_1 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_2 ) ) ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( android.content.Intent intent ) { return VAR_3 ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1945
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( null == ( this . VAR_1 ) ) this . VAR_1 = new java.util.ArrayList < > ( ) ; this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },"['Delete Literal', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",1946
"protected void METHOD_1 ( ) throws TYPE_1 { id = METHOD_2 ( ""id"" ) ; VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) ) ) ; }","protected void METHOD_1 ( ) throws TYPE_1 { id = METHOD_2 ( ""id"" ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1947
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; if ( VAR_4 != null ) { VAR_2 = VAR_5 . getInt ( VAR_6 , 0 ) ; } }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1949
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1950
"private void METHOD_1 ( java.lang.String title ) { if ( ( VAR_1 ) && ( ! ( VAR_2 . equals ( VAR_3 ) ) ) ) { VAR_3 = title ; VAR_4 . METHOD_2 ( VAR_5 , title ) ; METHOD_3 ( VAR_6 , status ) ; } }","private void METHOD_1 ( java.lang.String title ) { if ( VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 , title ) ; METHOD_3 ( VAR_6 , status ) ; } }","['Move FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1951
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = true ; TYPE_1 VAR_3 = VAR_4 . METHOD_4 ( VAR_5 , VAR_6 ) ; VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_7 , null ) . METHOD_7 ( ) ; }",public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",1952
private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; count = 0 ; VAR_5 = false ; VAR_6 = VAR_2 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; count = 0 ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1953
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = null ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1954
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",1955
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",1956
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) == ( VAR_5 ) ) { METHOD_3 ( STRING_1 ) ; } VAR_6 . i ( VAR_7 , STRING_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1957
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_2 < TYPE_4 > VAR_2 = this . VAR_3 . METHOD_1 ( VAR_1 ) ; this . VAR_4 = VAR_5 . key ( ) ; this . METHOD_2 ( VAR_2 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_2 < TYPE_4 > VAR_2 = this . VAR_3 . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",1958
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; query = STRING_1 ; METHOD_5 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_5 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1959
public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; return ( ( TYPE_1 ) ( VAR_2 . remove ( ) ) ) ; },public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( VAR_2 . remove ( ) ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1960
public void METHOD_1 ( java.lang.String VAR_1 ) { ( counter ) ++ ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete UnaryOperator']",1961
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; java.util.ArrayList < TYPE_3 > list = VAR_2 . METHOD_2 ( ) ; java.lang.Object [ ] [ ] data = VAR_2 . METHOD_3 ( list ) ; METHOD_4 ( data ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_3 > list = VAR_2 . METHOD_2 ( ) ; java.lang.Object [ ] [ ] data = VAR_2 . METHOD_3 ( list ) ; METHOD_4 ( data ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",1962
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( 0 ) ; VAR_3 . METHOD_4 ( false ) ; VAR_3 . METHOD_5 ( 0 ) ; VAR_3 . METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( 0 ) ; VAR_3 . METHOD_4 ( false ) ; VAR_3 . METHOD_5 ( 0 ) ; VAR_3 . METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1963
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( ( VAR_3 ? VAR_4 : VAR_5 ) ) ; VAR_6 = true ; METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( ( VAR_3 ? VAR_4 : VAR_5 ) ) ; METHOD_2 ( true ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1964
"public void METHOD_1 ( TYPE_1 event , TYPE_2 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_3 , VAR_4 , this ) ) ; }","public void METHOD_1 ( TYPE_1 event , TYPE_2 VAR_1 ) { VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_3 , VAR_4 , this ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1965
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( VAR_1 ) != null ; if ( VAR_3 ) { VAR_4 = VAR_5 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( VAR_1 ) != null ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",1967
public TYPE_1 format ( TYPE_2 format ) { if ( format != null ) { this . format = VAR_1 . value ; } else { this . format = null ; } return this ; },public TYPE_1 format ( TYPE_2 format ) { if ( format != null ) { this . format = VAR_1 . value ; } return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",1968
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; if ( ( VAR_3 ) > ( VAR_4 ) ) VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",1970
"private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) ; intent . METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( intent , VAR_4 ) ; }","private void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( VAR_1 ) ; METHOD_4 ( intent , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1971
"private void init ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( this , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; }","private void init ( ) { VAR_3 = new TYPE_2 ( this , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",1972
void METHOD_1 ( final int [ ] VAR_1 ) { this . VAR_2 = VAR_1 ; },void METHOD_1 ( final int [ ] VAR_1 ) { VAR_2 = VAR_1 ; },['Delete ThisAccess'],1973
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > ( VAR_2 ) ) || ( VAR_1 < ( VAR_3 ) ) ) { VAR_4 = false ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > ( VAR_2 ) ) || ( VAR_1 < ( VAR_3 ) ) ) this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",1974
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; listener . METHOD_2 ( ) . start ( ) ; },public void METHOD_1 ( TYPE_1 event ) { listener . METHOD_2 ( ) . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1975
"void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 = false ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; }","void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1976
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { VAR_3 = true ; METHOD_2 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1977
public void METHOD_1 ( ) { assert VAR_1 . METHOD_2 ( ) ; ( VAR_2 ) -- ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { assert VAR_1 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",1978
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( STRING_1 , STRING_2 ) ; VAR_4 . execute ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; new TYPE_2 ( STRING_1 , STRING_2 ) . execute ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",1979
public TYPE_1 setEnabled ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; return this ; },public TYPE_1 setEnabled ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1980
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",1981
public void METHOD_1 ( long id ) { VAR_1 = new TYPE_1 ( context ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( long id ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",1982
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_3 = VAR_1 ; if ( VAR_4 . METHOD_2 ( ) ) { VAR_5 . METHOD_3 ( null ) ; } VAR_6 . METHOD_3 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_4 . METHOD_2 ( ) ) { VAR_5 . METHOD_3 ( null ) ; } VAR_3 = VAR_1 ; VAR_6 . METHOD_3 ( VAR_1 ) ; },"['Move Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1983
public void update ( ) { if ( VAR_1 ) return ; VAR_2 . METHOD_1 ( ) ; if ( ( VAR_2 . METHOD_2 ( ) . size ( ) ) <= 1 ) { METHOD_3 ( ) ; VAR_1 = true ; } },public void update ( ) { VAR_2 . METHOD_1 ( ) ; if ( ( VAR_2 . METHOD_2 ( ) . size ( ) ) <= 1 ) { METHOD_3 ( ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1984
public void end ( ) { METHOD_1 ( ) ; VAR_1 = null ; },public void end ( ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1985
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 . setText ( ( ( ( getString ( VAR_4 ) ) + STRING_1 ) + ( VAR_5 ) ) ) ; ( VAR_5 ) ++ ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 . setText ( ( ( ( getString ( VAR_4 ) ) + STRING_1 ) + ( VAR_5 ) ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",1986
public void METHOD_1 ( ) { VAR_1 = - 1 ; for ( int i = 0 ; i < ( VAR_2 . METHOD_2 ( ) ) ; i ++ ) { VAR_3 [ i ] . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_2 . METHOD_2 ( ) ) ; i ++ ) { VAR_3 [ i ] . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",1987
public void METHOD_1 ( int VAR_1 ) { this . id = id ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Update FieldWrite', 'Insert VariableRead', 'Delete FieldRead']",1988
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = 0 ; if ( VAR_2 ) { this . VAR_3 = this . VAR_4 . METHOD_2 ( ) ; } else { this . VAR_2 = true ; } return this . METHOD_3 ( this . VAR_3 ) ; },public TYPE_1 METHOD_1 ( ) { if ( VAR_2 ) { this . VAR_3 = this . VAR_4 . METHOD_2 ( ) ; } else { this . VAR_2 = true ; } return this . METHOD_3 ( this . VAR_3 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1989
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 = VAR_2 ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",1990
public byte [ ] METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( 1 ) ; } catch ( TYPE_2 VAR_2 ) { TYPE_3 . METHOD_3 ( VAR_2 ) ; } return VAR_3 ; },public byte [ ] METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { TYPE_3 . METHOD_3 ( VAR_2 ) ; } return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",1991
public void update ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_4 = VAR_5 ; VAR_6 = true ; VAR_3 = null ; } } },public void update ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == true ) { if ( ( VAR_3 ) != null ) { VAR_4 = VAR_5 ; VAR_6 = true ; } } },"['Insert BinaryOperator', 'Move FieldRead', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1992
"void METHOD_1 ( ) { super . METHOD_2 ( VAR_1 , METHOD_3 ( ) , METHOD_4 ( ) ) ; this . VAR_2 = VAR_3 ; }","void METHOD_1 ( ) { super . METHOD_2 ( VAR_1 , METHOD_3 ( ) , METHOD_4 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",1994
public void METHOD_1 ( java.lang.Throwable t ) { ( VAR_1 ) -- ; },public void METHOD_1 ( java.lang.Throwable t ) { },"['Delete FieldWrite', 'Delete UnaryOperator']",1995
protected java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; return null ; },protected java.lang.Object METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; return null ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",1996
"public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 . METHOD_1 ( java.util.Arrays.asList ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ) ; }",public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",1997
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = VAR_3 . get ( this ) ; TYPE_1 . METHOD_2 ( this , STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; TYPE_1 . METHOD_2 ( this , STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",1998
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new java.util.ArrayList < > ( VAR_1 ) ) ; VAR_2 = true ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new java.util.ArrayList < > ( VAR_1 ) ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",1999
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ( METHOD_2 ( VAR_1 , VAR_2 ) ) && ( ! ( VAR_3 ) ) ) { METHOD_3 ( VAR_2 , VAR_4 ) ; VAR_3 = true ; } else VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( METHOD_2 ( VAR_1 , VAR_2 ) ) METHOD_3 ( VAR_2 , VAR_4 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",2001
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 ( ( VAR_1 = VAR_2 . METHOD_1 ( ) ) ) ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 ( VAR_2 . METHOD_1 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2002
"public void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; if ( ( this . VAR_2 ) != null ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 = null ; } VAR_3 . METHOD_3 ( VAR_4 ) ; }",public void METHOD_1 ( ) { if ( ( this . VAR_2 ) != null ) { this . VAR_2 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2003
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2004
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_3 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { status = 0 ; METHOD_2 ( VAR_3 ) ; },"['Insert Assignment', 'Update Invocation', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2005
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 . getName ( ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 . getName ( ) ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2006
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; this . VAR_1 . METHOD_2 ( false ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2007
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2008
"public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( ( STRING_1 + ( java.lang.String.format ( STRING_2 , ( ( VAR_1 / INT_1 ) % INT_2 ) , ( ( VAR_1 / INT_3 ) % INT_2 ) ) ) ) ) ; }","public void METHOD_1 ( long VAR_1 ) { VAR_3 . setText ( ( STRING_1 + ( java.lang.String.format ( STRING_2 , ( ( VAR_1 / INT_1 ) % INT_2 ) , ( ( VAR_1 / INT_3 ) % INT_2 ) ) ) ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2009
public void METHOD_1 ( boolean VAR_1 ) { data . METHOD_2 ( ( VAR_1 ? VAR_2 : VAR_3 ) ) ; VAR_4 = true ; },public void METHOD_1 ( boolean VAR_1 ) { data . METHOD_2 ( ( VAR_1 ? VAR_2 : VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2010
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = STRING_1 ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2011
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2012
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return new TYPE_1 ( VAR_1 ) ; },protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2015
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_1 ( ) ; METHOD_4 ( ) . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { METHOD_3 ( ) . METHOD_1 ( ) ; METHOD_4 ( ) . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2016
public void init ( ) { VAR_1 = new java.util.ArrayList ( ) ; VAR_2 = new java.util.ArrayList ( ) ; },public void init ( ) { VAR_1 = new java.util.ArrayList ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2018
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( VAR_3 ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2019
public void METHOD_1 ( int height ) { this . height = height ; this . VAR_1 = ( VAR_2 ) + ( height / INT_1 ) ; },public void METHOD_1 ( int height ) { this . height = height ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",2020
public static int METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 + ( VAR_2 ) ) >= ( VAR_3 . length ) ) { VAR_4 = true ; } return ( VAR_1 + ( VAR_2 ) ) % ( VAR_3 . length ) ; },public static int METHOD_1 ( int VAR_1 ) { return ( VAR_1 + ( VAR_2 ) ) % ( VAR_3 . length ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2021
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == STRING_1 ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { if ( VAR_1 = STRING_1 ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",2022
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( key ) ) && ( ! ( VAR_2 ) ) ) { VAR_2 = true ; VAR_3 . execute ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( key ) ) { VAR_3 . execute ( ) ; } },"['Move BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2023
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) METHOD_2 ( ) ; else VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) METHOD_2 ( ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",2024
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . main = VAR_2 . main ; this . VAR_1 = VAR_1 ; this . info = VAR_2 . info ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . info = VAR_2 . info ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2025
"public void METHOD_1 ( java.util.List < TYPE_1 > list , TYPE_2 VAR_1 ) { VAR_2 = list ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > list , TYPE_2 VAR_1 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2027
public java.lang.Exception METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( error ) != null ) { VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } } return error ; } },public java.lang.Exception METHOD_1 ( ) { synchronized ( VAR_1 ) { return error ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",2028
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_4 ( ) ; }","private void METHOD_1 ( ) { new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , VAR_2 , VAR_3 ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2029
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2030
"private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; }","private void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2031
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_2 ( this ) ; TYPE_3 . METHOD_2 ( VAR_4 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2032
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_2 ) > ( VAR_3 ) ) VAR_2 = VAR_3 ; if ( ( VAR_2 ) < 0 ) VAR_2 = 0 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2033
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2034
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2035
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( new TYPE_3 ( this ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_3 ( this ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2036
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",2037
"public void METHOD_1 ( TYPE_1 VAR_1 ) { format = VAR_1 ; text = STRING_1 ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( new TYPE_2 ( this , VAR_2 , STRING_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { format = VAR_1 ; METHOD_4 ( new TYPE_2 ( this , VAR_2 , STRING_2 ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",2038
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_2 ( 1 , 1 , 0 , 0 , 0 , 0 , true , VAR_1 ) ; }","public void METHOD_1 ( ) { VAR_3 = new TYPE_2 ( 1 , 1 , 0 , 0 , 0 , 0 , true ) ; }","['Update ConstructorCall', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead']",2039
public void init ( android.content.Context context ) { this . VAR_1 = context ; METHOD_1 ( ) ; VAR_2 = new TYPE_1 ( ) . METHOD_2 ( VAR_3 ) . METHOD_3 ( this . context . METHOD_4 ( ) ) . build ( ) ; },public void init ( android.content.Context context ) { this . VAR_1 = context ; METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2040
public boolean METHOD_1 ( ) { if ( ( VAR_1 = VAR_2 ) != null ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) > 0 ; } return false ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) > 0 ; } return false ; },"['Insert FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2041
"private TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 , STRING_3 , STRING_4 ) . start ( ) ; return VAR_2 ; }","private TYPE_1 METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 , STRING_3 , STRING_4 ) . start ( ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2042
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; this . VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2043
public void METHOD_1 ( int VAR_1 ) { if ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) this . VAR_1 = TYPE_1 . METHOD_3 ( VAR_1 ) ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2044
"private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 . i ( STRING_1 , STRING_2 ) ; VAR_4 = false ; VAR_5 = true ; this . VAR_1 = VAR_1 ; }","private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . i ( STRING_1 , STRING_2 ) ; }","['Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2045
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 . METHOD_4 ( this ) ; VAR_4 = TYPE_3 . METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2046
"protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { super . METHOD_1 ( context ) ; VAR_1 = new java.util.HashMap < java.lang.String , TYPE_3 > ( ) ; VAR_2 = new TYPE_4 ( ) ; }","protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { super . METHOD_1 ( context ) ; VAR_1 = new java.util.HashMap < TYPE_4 , TYPE_3 > ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2047
protected java.lang.Boolean METHOD_1 ( java.lang.Void ... VAR_1 ) { VAR_2 = true ; return TYPE_1 . METHOD_2 ( ) ; },protected java.lang.Boolean METHOD_1 ( java.lang.Void ... VAR_1 ) { return TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2048
"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 . type = VAR_7 ; return VAR_3 ; }",public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_6 . type = VAR_7 ; return VAR_3 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2049
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2050
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2051
"private void METHOD_1 ( int index ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) . get ( index ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; }","private void METHOD_1 ( int index ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) . get ( index ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2052
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } VAR_3 = 1 ; METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2053
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; METHOD_3 ( ) ; VAR_4 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2054
void METHOD_1 ( java.lang.Object parameters ) { if ( parameters == null ) this . VAR_1 = this . VAR_2 = new java.lang.Object ( ) ; else this . VAR_1 = this . VAR_2 = parameters ; },void METHOD_1 ( java.lang.Object parameters ) { this . VAR_1 = this . VAR_2 = parameters ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2055
"public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_2 ( VAR_6 ) ; VAR_7 = VAR_8 ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_2 ( VAR_6 ) ; return VAR_3 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2056
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2057
"public void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( null ) ; }",public void METHOD_1 ( boolean VAR_1 ) { VAR_4 = VAR_1 ; ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( null ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2058
"public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = VAR_3 ; METHOD_2 ( null , VAR_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 1 ; METHOD_2 ( null , VAR_2 ) ; }","['Insert Literal', 'Delete FieldRead']",2059
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 = getActivity ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 = getActivity ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2060
public void METHOD_1 ( ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_2 = VAR_1 ; VAR_3 = STRING_1 + ( VAR_2 ) ; } java.lang.System.out.println ( count ) ; ( count ) ++ ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_2 = VAR_1 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator']",2061
"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_2 ) ; VAR_4 . values = VAR_2 . METHOD_3 ( ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_2 ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2062
"public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( 0 ) ; VAR_3 . METHOD_2 ( VAR_1 , 0 , 1 , VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_2 , 0 , 1 , VAR_4 ) ; }","public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 , 0 , 1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",2063
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_4 . getActivity ( ) ; VAR_5 = VAR_3 . METHOD_2 ( null ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_4 . getActivity ( ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",2064
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2065
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( true ) ; VAR_2 = new java.util.LinkedList < > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Update TypeAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2066
public static void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = VAR_1 ; },public static void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2067
private void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) + 1 ) % INT_1 ; METHOD_2 ( VAR_1 ) ; METHOD_2 ( FLOAT_1 ) ; VAR_2 = ( STRING_1 + ( VAR_1 ) ) + STRING_2 ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) + 1 ) % INT_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Invocation']",2068
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_3 ) { VAR_4 = new TYPE_1 ( ) ; } }",public void METHOD_1 ( ) { TYPE_1 VAR_2 ; },"['Insert LocalVariable', 'Move TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2069
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; if ( ( VAR_4 ) != null ) { VAR_5 . show ( ) ; } METHOD_3 ( VAR_6 , VAR_3 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_6 , VAR_3 . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2071
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 = true ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2072
"public void METHOD_1 ( java.lang.String filename ) { METHOD_2 ( ) . put ( VAR_1 . filename , filename ) ; }",public void METHOD_1 ( java.lang.String filename ) { this . filename = filename ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",2073
public void start ( ) { METHOD_1 ( ) ; VAR_1 . start ( ) ; state = VAR_2 ; METHOD_2 ( ) ; },public void start ( ) { VAR_1 . start ( ) ; METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Update Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",2074
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; this . VAR_2 = true ; },public void METHOD_1 ( ) { this . VAR_2 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2075
public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2076
"protected void METHOD_1 ( final java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . get ( STRING_1 ) ) ) ; TYPE_1 . METHOD_2 ( STRING_2 , VAR_2 ) ; VAR_4 = false ; VAR_5 . METHOD_3 ( ) ; }","protected void METHOD_1 ( final java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_3 . get ( STRING_1 ) ) ) ; TYPE_1 . METHOD_2 ( STRING_2 , VAR_2 ) ; VAR_5 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2077
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2078
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 ) ) ; VAR_2 = VAR_1 ; return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 ) ) ; return false ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2079
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_2 ) < 0 ) { VAR_2 = 0 ; } },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2080
"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }",void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2081
public void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2082
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2084
public static void main ( java.lang.String [ ] args ) { VAR_1 = STRING_1 ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { VAR_1 = STRING_1 ; new TYPE_1 ( ) . METHOD_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2085
public void METHOD_1 ( ) { VAR_1 = new java.util.HashSet < > ( ) ; for ( TYPE_1 node : VAR_2 ) { VAR_3 = false ; } VAR_4 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.HashSet < > ( ) ; for ( TYPE_1 node : VAR_2 ) { VAR_3 = false ; } METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2086
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2087
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = new TYPE_1 ( this ) ; VAR_4 . start ( ) ; VAR_5 . start ( ) ; },public void METHOD_1 ( ) { VAR_3 = new TYPE_1 ( this ) ; VAR_4 . start ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2088
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { if ( VAR_5 ) { writer . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 = true ; } }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { if ( VAR_5 ) writer . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2089
public synchronized void METHOD_1 ( ) throws java.io.IOException { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; super . METHOD_1 ( ) ; } },public synchronized void METHOD_1 ( ) throws java.io.IOException { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; super . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2090
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! VAR_1 ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 = VAR_7 ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! VAR_1 ) { this . VAR_2 = 0 ; this . VAR_4 = 0 ; this . VAR_6 = 0 ; } },"['Insert Literal', 'Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",2091
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",2092
public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; VAR_1 = true ; TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2093
"public void METHOD_1 ( android.view.View view ) { VAR_1 = position ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , position ) ; VAR_4 . METHOD_4 ( METHOD_5 ( ) , view , position ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_4 . METHOD_4 ( METHOD_5 ( ) , view , position ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",2095
public void METHOD_1 ( int position ) { VAR_1 = position ; VAR_2 = VAR_3 . get ( position ) ; view . METHOD_1 ( VAR_2 ) ; },public void METHOD_1 ( int position ) { VAR_2 = VAR_3 . get ( position ) ; view . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2096
public void METHOD_1 ( TYPE_1 response ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = METHOD_2 ( ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; view . METHOD_4 ( VAR_7 ) ; },public void METHOD_1 ( TYPE_1 response ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = METHOD_2 ( ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; view . METHOD_4 ( VAR_7 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2097
void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_2 ) ; },void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2098
public static void main ( java.lang.String [ ] args ) throws TYPE_1 { VAR_1 = new java.util.Scanner ( VAR_2 ) ; TYPE_2 . METHOD_1 ( ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2099
public boolean METHOD_1 ( TYPE_1 message ) { if ( VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; } else { TYPE_2 . METHOD_2 ( STRING_2 ) ; VAR_2 = INT_1 ; METHOD_4 ( ) ; } return false ; },public boolean METHOD_1 ( TYPE_1 message ) { if ( VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; } else { TYPE_2 . METHOD_2 ( STRING_2 ) ; METHOD_4 ( ) ; } return false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2100
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) <= ( VAR_2 ) ) { VAR_2 = 0 ; } return VAR_1 . get ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2101
"public void init ( float VAR_1 , float VAR_2 ) { VAR_3 = new TYPE_1 ( ( - ( VAR_1 / FLOAT_1 ) ) , ( VAR_2 / FLOAT_1 ) ) ; }","public void init ( float VAR_1 , float VAR_2 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete UnaryOperator', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ConstructorCall', 'Delete Assignment']",2102
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; if ( VAR_2 ) { VAR_2 = false ; VAR_1 . METHOD_2 ( ) ; } else { VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2103
public boolean METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = VAR_4 ; VAR_2 = null ; return true ; },public boolean METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = false ; VAR_3 = VAR_4 ; VAR_2 = null ; return true ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",2105
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( ! ( VAR_3 ) ) { VAR_4 = 0 ; VAR_5 = 0 ; } VAR_3 = ! ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_3 ) ) { VAR_4 = 0 ; VAR_5 = 0 ; } VAR_3 = ! ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2106
"protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , TYPE_2 { fileName = STRING_1 ; return METHOD_1 ( ) ; }","protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , TYPE_2 { return METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2107
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = true ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2108
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; METHOD_2 ( ) ; return ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 ; METHOD_2 ( ) ; return ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2109
"protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) == 0.0F ) { VAR_3 = METHOD_2 ( ) ; } super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2110
public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ INT_1 ] ) ; VAR_1 = METHOD_3 ( VAR_1 ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ INT_1 ] ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2112
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; METHOD_2 ( true ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2114
protected void METHOD_1 ( ) { this . VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2116
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = INT_1 ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( ) ; VAR_6 = VAR_7 ; VAR_5 . METHOD_2 ( VAR_6 ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = INT_1 ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2117
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( ) ) ; },public void METHOD_1 ( ) { assertNotNull ( VAR_1 . METHOD_4 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2118
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = - 1 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2119
"public TYPE_1 METHOD_1 ( ) { if ( ( node ) == null ) { node = VAR_1 . METHOD_1 ( id , VAR_2 ) ; } return node ; }",public TYPE_1 METHOD_1 ( ) { return node ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2120
"private void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ! VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this , VAR_3 ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this , VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","['Move Assignment', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",2121
"private void METHOD_1 ( java.lang.String data ) { if ( data != null ) { VAR_1 . setText ( data ) ; } TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; }",private void METHOD_1 ( java.lang.String data ) { this . data = data ; if ( data != null ) { VAR_1 . setText ( data ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2122
public java.util.List < TYPE_1 > METHOD_1 ( long VAR_1 ) { VAR_2 = new TYPE_2 ( context ) ; java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_3 ; },public java.util.List < TYPE_1 > METHOD_1 ( long VAR_1 ) { java.util.List < TYPE_1 > VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_3 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2123
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { VAR_3 = STRING_1 ; VAR_4 = false ; VAR_5 . i ( STRING_2 , VAR_2 . METHOD_2 ( ) ) ; VAR_5 . i ( STRING_2 , STRING_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Throwable VAR_2 ) { VAR_3 = STRING_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2124
"public static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > index , TYPE_4 VAR_1 , TYPE_4 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . info = new TYPE_5 ( index , VAR_1 , VAR_2 ) ; VAR_5 = VAR_6 ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > index , TYPE_4 VAR_1 , TYPE_4 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . info = new TYPE_5 ( index , VAR_1 , VAR_2 ) ; return VAR_3 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2125
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_7 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2126
"public TYPE_1 < java.lang.Integer > METHOD_1 ( java.lang.String string , java.lang.Class < java.lang.Integer > VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; return VAR_2 . METHOD_1 ( string , VAR_1 ) ; }","public TYPE_1 < java.lang.Integer > METHOD_1 ( java.lang.String string , java.lang.Class < java.lang.Integer > VAR_1 ) { return VAR_2 . METHOD_1 ( string , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2127
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; VAR_4 . setText ( VAR_1 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; VAR_4 . setText ( VAR_1 . METHOD_4 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2128
"public void METHOD_1 ( java.io.File file ) { java.io.File VAR_1 = new java.io.File ( file , STRING_1 ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = METHOD_3 ( VAR_1 ) ; } }","public void METHOD_1 ( java.io.File file ) { java.io.File VAR_1 = new java.io.File ( file , STRING_1 ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2129
public static void METHOD_1 ( ) { VAR_1 . start = STRING_1 ; VAR_1 . end = STRING_1 ; },public static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2130
private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },private void METHOD_1 ( ) { VAR_3 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2131
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = VAR_5 ; VAR_6 = VAR_5 ; VAR_7 = false ; VAR_8 = false ; VAR_9 = VAR_10 ; VAR_11 = 0 ; VAR_12 = 0 ; },private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = VAR_5 ; VAR_6 = VAR_5 ; VAR_7 = false ; VAR_8 = false ; VAR_9 = VAR_10 ; VAR_11 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2133
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = new TYPE_2 ( STRING_2 , VAR_1 , VAR_3 ) ; METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( ) { TYPE_2 < java.lang.String > VAR_2 = new TYPE_2 ( STRING_2 , new TYPE_1 ( STRING_1 ) , VAR_3 ) ; METHOD_2 ( VAR_2 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2134
public void handle ( long VAR_1 ) { if ( ( x ) == 0 ) { java.lang.System.out.println ( STRING_1 ) ; x = 1 ; } METHOD_1 ( ) ; },public void handle ( long VAR_1 ) { METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2135
public void METHOD_1 ( TYPE_1 p ) { p . METHOD_2 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 p ) { p . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2136
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( false ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2137
public void METHOD_1 ( int id ) { assert id > 0 : STRING_1 ; this . VAR_1 = id ; },public void METHOD_1 ( int id ) { assert id > 0 ; this . VAR_1 = id ; this . id = id ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete FieldRead']",2138
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = ( ( startTime ) + STRING_1 ) + ( endTime ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",2139
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 . getClass ( ) ) ) ) ; VAR_3 = ( ( TYPE_3 ) ( VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 . getClass ( ) ) ) ) ; super . METHOD_1 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",2140
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; this . VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; VAR_5 . start ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; this . VAR_3 = TYPE_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2141
public void METHOD_1 ( TYPE_1 result ) { if ( ! ( result . METHOD_2 ( ) . METHOD_3 ( ) ) ) { METHOD_4 ( STRING_1 ) ; return ; } METHOD_4 ( STRING_2 ) ; VAR_1 = result . METHOD_5 ( ) . METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 result ) { if ( ! ( result . METHOD_2 ( ) . METHOD_3 ( ) ) ) { METHOD_4 ( STRING_1 ) ; return ; } METHOD_4 ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2142
"public void METHOD_1 ( java.lang.Object response ) { VAR_1 = METHOD_2 ( STRING_1 , 0 ) ; VAR_2 = false ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_2 ) . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( false ) ; }",public void METHOD_1 ( java.lang.Object response ) { VAR_3 . METHOD_6 ( false ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2143
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_1 . METHOD_2 ( ) . toString ( ) ; VAR_3 = VAR_4 . METHOD_3 ( VAR_5 , VAR_2 ) ; METHOD_4 ( VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_1 . METHOD_2 ( ) . toString ( ) ; METHOD_4 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2144
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2146
"public void METHOD_1 ( int x , int y ) { VAR_1 = ( ( int ) ( x * ( METHOD_2 ( ) ) ) ) ; VAR_2 = ( ( int ) ( y * ( METHOD_2 ( ) ) ) ) ; VAR_3 = true ; }",public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2147
public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = METHOD_2 ( ) ; } return VAR_2 ; },public double METHOD_1 ( ) { return METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",2148
public static synchronized void METHOD_1 ( final android.content.Context context ) { if ( VAR_1 ) return ; VAR_1 = true ; TYPE_1 . METHOD_2 ( context ) ; TYPE_1 . METHOD_3 ( context ) ; },public static synchronized void METHOD_1 ( final android.content.Context context ) { TYPE_1 . METHOD_2 ( context ) ; TYPE_1 . METHOD_3 ( context ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2150
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) ; } else { this . VAR_1 = new TYPE_2 ( VAR_1 ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = new TYPE_2 ( VAR_1 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2151
"public void init ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { this . VAR_2 = 0 ; this . end = VAR_4 . size ( VAR_3 ) ; this . length = end ; }","public void init ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { this . VAR_2 = 0 ; this . end = VAR_4 . size ( VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2152
public void METHOD_1 ( final TYPE_1 event ) { int VAR_1 = event . METHOD_2 ( ) ; VAR_2 . set ( VAR_1 ) ; VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( final TYPE_1 event ) { int VAR_1 = event . METHOD_2 ( ) ; VAR_2 . set ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2153
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != ( VAR_3 ) ) { VAR_4 . METHOD_2 ( 1 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_2 = VAR_3 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_2 ( 1 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2154
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . init ( ) ; VAR_3 . init ( ) ; },public void METHOD_1 ( ) { VAR_2 . init ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2155
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Update FieldWrite', 'Move VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2156
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2157
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . start ( ) ; VAR_7 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2158
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2159
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } },private void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2160
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2161
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2162
"public void METHOD_1 ( double VAR_1 , double VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = true ; VAR_4 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_5 , STRING_1 ) ; }","public void METHOD_1 ( double VAR_1 , double VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_5 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2163
public java.lang.Boolean METHOD_1 ( java.lang.Float VAR_1 ) { boolean VAR_2 = ( VAR_3 == 0 ) || ( VAR_1 >= VAR_3 ) ; if ( VAR_2 ) { VAR_4 = java.lang.Math.round ( VAR_1 ) ; } return VAR_2 ; },public java.lang.Boolean METHOD_1 ( java.lang.Float VAR_1 ) { return ( VAR_3 == 0 ) || ( VAR_1 >= VAR_3 ) ; },"['Move BinaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",2164
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2165
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; } return VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",2166
public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) return ; VAR_1 = INT_1 ; x = VAR_2 [ INT_2 ] ; y = VAR_3 [ INT_2 ] ; VAR_4 = VAR_5 [ INT_2 ] ; },public void METHOD_1 ( ) { x = VAR_2 [ INT_2 ] ; y = VAR_3 [ INT_2 ] ; VAR_4 = VAR_5 [ INT_2 ] ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2167
"public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_3 . toString ( ) ) ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_3 . toString ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2168
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; number = 0 ; VAR_2 = STRING_1 ; start = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2169
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; return METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2171
public static void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess', 'Delete Wra']",2172
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) return ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2173
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = 0 ; VAR_2 = 0 ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2174
"public void METHOD_1 ( ) { ( VAR_1 ) -- ; VAR_1 = TYPE_1 . METHOD_2 ( 0 , VAR_1 ) ; VAR_2 -= VAR_3 ; VAR_2 = TYPE_1 . METHOD_2 ( 0 , VAR_2 ) ; }",public void METHOD_1 ( ) { ( VAR_1 ) -- ; VAR_2 -= VAR_3 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2175
private void METHOD_1 ( ) { x = VAR_1 ; y = VAR_1 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = - 1 ; VAR_5 = - 1 ; VAR_6 = - 1 ; VAR_7 = - 1 ; VAR_8 = false ; },private void METHOD_1 ( ) { x = VAR_1 ; y = VAR_1 ; VAR_4 = - 1 ; VAR_5 = - 1 ; VAR_6 = - 1 ; VAR_7 = - 1 ; VAR_8 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2176
private void METHOD_1 ( float VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; },private void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2177
public void METHOD_1 ( int index ) { VAR_1 = index ; VAR_2 = 0 ; VAR_3 = null ; },public void METHOD_1 ( int index ) { VAR_1 = index ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2178
"public void METHOD_1 ( TYPE_1 attribute , boolean VAR_1 ) { super . METHOD_1 ( attribute , VAR_1 ) ; VAR_2 = STRING_1 ; if ( ( METHOD_2 ( ) ) != null ) VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 attribute , boolean VAR_1 ) { super . METHOD_1 ( attribute , VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2179
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; android.content.Intent intent = getIntent ( ) ; VAR_3 = intent . METHOD_3 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2180
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . delete ( ) ; VAR_1 = null ; } if ( ( VAR_3 ) != null ) { VAR_4 . delete ( ) ; VAR_3 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . delete ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2181
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = STRING_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2182
"public void METHOD_1 ( TYPE_1 VAR_1 ) { setState ( VAR_2 , 0 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { state = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2183
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . show ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_2 . show ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess']",2184
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { VAR_1 = new TYPE_2 ( ) ; return VAR_1 . METHOD_2 ( ) ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2185
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; if ( ( VAR_2 ) == ( VAR_3 ) ) { VAR_2 = VAR_4 ; } else { VAR_4 = VAR_2 ; VAR_2 = VAR_3 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2186
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2187
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean b ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( VAR_3 , b ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean b ) { TYPE_2 . METHOD_2 ( VAR_3 , b ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2188
public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_1 = new TYPE_3 ( ) ; VAR_2 = new TYPE_4 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_1 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2190
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",2191
"private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; final TYPE_1 VAR_4 = new TYPE_1 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . replace ( VAR_5 , VAR_4 ) . commit ( ) ; }","private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; final TYPE_1 VAR_4 = new TYPE_1 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . replace ( VAR_5 , VAR_4 ) . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2193
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; VAR_2 = false ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2194
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( ! ( VAR_1 ) ) && ( ( VAR_2 ) != null ) ) && ( VAR_3 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_4 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( ! ( VAR_1 ) ) && ( ( VAR_2 ) != null ) ) && ( VAR_3 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; } },['Update FieldWrite'],2196
"public void METHOD_1 ( java.lang.Boolean VAR_1 ) { METHOD_2 ( ) . put ( VAR_2 , VAR_1 ) ; }",public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2197
public void METHOD_1 ( TYPE_1 error ) { VAR_1 = true ; if ( TYPE_2 . METHOD_2 ( error ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },public void METHOD_1 ( TYPE_1 error ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",2198
public void METHOD_1 ( java.lang.String filename ) { if ( VAR_1 ) { VAR_2 . METHOD_1 ( METHOD_2 ( filename ) ) ; VAR_1 = false ; } },public void METHOD_1 ( java.lang.String filename ) { VAR_2 . METHOD_1 ( METHOD_2 ( filename ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2199
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = - 1 ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( this ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Invocation', 'Move TypeAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2200
"public void remove ( int VAR_1 ) { VAR_2 [ VAR_1 ] = new TYPE_1 ( 0 , 0 ) ; if ( ( VAR_3 ) > 0 ) ( VAR_3 ) -- ; METHOD_1 ( ) ; }",public void remove ( int VAR_1 ) { VAR_2 [ VAR_1 ] = null ; ( VAR_3 ) -- ; METHOD_1 ( ) ; },"['Move UnaryOperator', 'Insert Literal', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",2203
"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; assert VAR_2 ; VAR_3 . delete ( VAR_4 ) ; VAR_5 = java.lang.String.format ( VAR_6 , VAR_4 , name ) ; VAR_2 = false ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; assert VAR_2 ; VAR_3 . delete ( VAR_4 ) ; VAR_5 = java.lang.String.format ( VAR_6 , VAR_4 , name ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2204
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { if ( VAR_3 ) TYPE_2 . METHOD_2 ( VAR_4 , STRING_1 ) ; VAR_5 = true ; if ( ( VAR_6 ) != null ) { METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { if ( ( VAR_6 ) != null ) { METHOD_3 ( ) ; } }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2205
public void METHOD_1 ( ) { try { status = false ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; this . METHOD_4 ( ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { try { status = false ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",2207
private void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2208
"public void METHOD_1 ( java.lang.String id , long VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( id ) ; VAR_3 . state = VAR_4 ; VAR_5 = VAR_1 ; }",public void METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_2 = METHOD_2 ( id ) ; VAR_3 . state = VAR_4 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2210
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; try { VAR_2 . METHOD_2 ( VAR_3 . build ( ) , null , null ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_1 . METHOD_2 ( VAR_3 . build ( ) , null , null ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2211
void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( VAR_2 class ) ; VAR_1 = true ; } },void METHOD_1 ( ) { METHOD_2 ( VAR_2 class ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2212
private void METHOD_1 ( ) { METHOD_2 ( ) ; ( VAR_1 ) ++ ; VAR_2 = VAR_3 . get ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; },private void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = VAR_3 . get ( this . VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",2213
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_5 = TYPE_4 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2214
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; if ( ! ( VAR_2 ) ) { VAR_2 = true ; } else { VAR_2 = false ; } },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2217
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; this . VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",2218
public void METHOD_1 ( int b ) { index = b * ( INT_1 / ( VAR_1 ) ) ; },public void METHOD_1 ( int b ) { index = b ; },"['Move VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",2220
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { ( VAR_2 ) ++ ; } else if ( ( VAR_2 ) > 0 ) { ( VAR_2 ) -- ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",2221
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) ) ) . METHOD_2 ( this ) ; },private void METHOD_1 ( ) { ( ( TYPE_1 ) ( getActivity ( ) ) ) . METHOD_2 ( this ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If']",2222
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 < > ( ) ; java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_3 . values ( ) ) ; return METHOD_2 ( VAR_2 ) ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_3 . values ( ) ) ; return METHOD_2 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2223
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new java.util.ArrayList ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return true ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2224
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_2 ; this . VAR_4 = VAR_2 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2225
private void METHOD_1 ( ) { METHOD_2 ( true ) ; VAR_1 = true ; },private void METHOD_1 ( ) { METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2226
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; VAR_4 = false ; VAR_5 . setEnabled ( false ) ; VAR_6 . setEnabled ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_4 = false ; VAR_5 . setEnabled ( false ) ; VAR_6 . setEnabled ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2227
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2228
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = ( this . VAR_3 . isEmpty ( ) ) && ( this . VAR_4 . isEmpty ( ) ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",2229
public java.lang.String METHOD_1 ( ) { VAR_1 = null ; VAR_2 = new TYPE_1 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; return STRING_1 ; },"['Move ConstructorCall', 'Delete Literal', 'Delete FieldWrite', 'Delete Assignment']",2230
private void METHOD_1 ( final android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_5 ; },private void METHOD_1 ( final android.view.View VAR_1 ) { VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2231
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( false ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2233
protected void METHOD_1 ( java.lang.Object result ) { if ( result == null ) { VAR_1 = null ; } else { data = ( ( TYPE_1 ) ( result ) ) ; } },protected void METHOD_1 ( java.lang.Object result ) { data = ( ( TYPE_1 ) ( result ) ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2234
public void METHOD_1 ( java.lang.String error ) { VAR_1 = false ; this . error = error ; },public void METHOD_1 ( java.lang.String error ) { this . error = error ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2235
"private void METHOD_1 ( ) { METHOD_2 ( new android.content.Intent ( this , VAR_1 class ) ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; METHOD_4 ( ) ; }","private void METHOD_1 ( ) { METHOD_2 ( new android.content.Intent ( this , VAR_1 class ) ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2236
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) != null ) && ( VAR_4 ) ) { VAR_5 . start ( ) ; } VAR_6 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) != null ) && ( VAR_4 ) ) { VAR_5 . start ( ) ; } VAR_6 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2237
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = ( 1 / ( VAR_5 ) ) + ( FLOAT_1 * VAR_2 ) ; VAR_6 . setText ( ( ( java.lang.String.format ( STRING_1 , VAR_4 ) ) + STRING_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = FLOAT_1 * VAR_2 ; VAR_6 . setText ( ( ( java.lang.String.format ( STRING_1 , VAR_4 ) ) + STRING_2 ) ) ; }","['Move BinaryOperator', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",2238
protected void end ( ) { i = 0 ; },protected void end ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2239
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) . METHOD_3 ( 0 ) ; METHOD_2 ( STRING_2 ) . METHOD_3 ( 0 ) ; index = - 1 ; VAR_1 = - 1 ; VAR_2 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) . METHOD_3 ( 0 ) ; METHOD_2 ( STRING_2 ) . METHOD_3 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2240
private int METHOD_1 ( ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_3 = true ; java.lang.System.out.println ( STRING_1 ) ; } else { ( VAR_4 ) ++ ; } return INT_1 ; },private int METHOD_1 ( ) { java.lang.System.err.println ( STRING_1 ) ; return INT_1 ; },"['Move Invocation', 'Update FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",2242
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , INT_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",2243
"public java.lang.String format ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . format ( VAR_1 . METHOD_1 ( ) ) ; this . VAR_2 = VAR_4 . length ( ) ; return format ( VAR_1 , VAR_1 . METHOD_2 ( ) ) ; }","public java.lang.String format ( TYPE_1 VAR_1 ) { return format ( VAR_1 , VAR_1 . METHOD_2 ( ) ) ; }","['Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2244
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . METHOD_2 ( VAR_2 , VAR_1 , new TYPE_3 ( VAR_1 ) ) ; this . VAR_3 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . METHOD_2 ( VAR_2 , VAR_1 , new TYPE_3 ( VAR_1 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2245
public static boolean METHOD_1 ( ) { VAR_1 = null ; return TYPE_1 . METHOD_2 ( ) ; },public static boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2246
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_3 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; } } else { VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_3 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; } },"['Move If', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2247
public void METHOD_1 ( ) { this . text = this . VAR_1 . getText ( ) ; this . VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; this . VAR_3 . setText ( ( ( getName ( ) ) + STRING_1 ) ) ; },public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; this . VAR_3 . setText ( ( ( getName ( ) ) + STRING_1 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",2248
"public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 . METHOD_2 ( true , false ) ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_4 ( ) ; } } }","public void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( true , false ) ) { METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_4 ( ) ; } } }","['Insert Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2249
"public void METHOD_1 ( int i , java.lang.String VAR_1 ) { VAR_2 = false ; TYPE_1 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; }","public void METHOD_1 ( int i , java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2250
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; ( ( TYPE_1 ) ( getActivity ( ) ) ) . VAR_1 = false ; ( ( TYPE_1 ) ( getActivity ( ) ) ) . VAR_2 = this ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; ( ( TYPE_1 ) ( getActivity ( ) ) ) . VAR_1 = false ; },"['Delete TypeReference', 'Delete Invocation', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2251
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = STRING_1 ; },public void METHOD_1 ( ) throws TYPE_1 { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2253
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; },public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2254
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2255
"public void METHOD_1 ( TYPE_1 params ) { VAR_1 = true ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 params ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2256
public void METHOD_1 ( java.lang.String name ) { try { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( name ) ) ; VAR_2 = true ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } },public void METHOD_1 ( java.lang.String name ) { try { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( name ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2257
"public double METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_6 = VAR_1 . METHOD_3 ( ) ; return VAR_6 ; }","public double METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; return VAR_1 . METHOD_3 ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2258
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2259
"public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { out . METHOD_2 ( java.lang.String.format ( VAR_2 , x . METHOD_3 ( ) ) ) ; out . METHOD_4 ( ) ; VAR_3 = true ; VAR_4 = false ; VAR_5 = false ; return true ; }","public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { out . METHOD_2 ( java.lang.String.format ( VAR_2 , x . METHOD_3 ( ) ) ) ; out . METHOD_4 ( ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2260
public void METHOD_1 ( java.io.File file ) throws java.io.IOException { java.lang.String filename = VAR_1 . getName ( ) ; this . VAR_2 = METHOD_2 ( filename ) ; },public void METHOD_1 ( java.io.File file ) throws java.io.IOException { java.lang.String filename = VAR_1 . getName ( ) ; METHOD_2 ( filename ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2261
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Insert Assignment', 'Move Invocation', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete Block', 'Delete If']",2262
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . message = null ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2263
public void METHOD_1 ( ) { start = true ; VAR_1 = false ; VAR_2 = false ; VAR_3 = 0 ; VAR_4 = true ; VAR_5 = 0 ; VAR_6 = new java.lang.Thread ( this ) ; VAR_7 . start ( ) ; },public void METHOD_1 ( ) { start = true ; VAR_5 = 0 ; VAR_6 = new java.lang.Thread ( this ) ; VAR_7 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2264
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_4 . setText ( VAR_3 . METHOD_3 ( ) ) ; VAR_5 . setText ( VAR_6 ) ; VAR_7 = false ; VAR_8 = false ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_4 . setText ( VAR_3 . METHOD_3 ( ) ) ; VAR_5 . setText ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2265
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( VAR_2 , new TYPE_2 ( STRING_1 , ( - 1 ) ) ) ; VAR_1 = true ; } java.lang.System.out.println ( STRING_2 ) ; status = STRING_3 ; }",public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_2 ) ; status = STRING_3 ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete ConstructorCall', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2266
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { if ( intent . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; VAR_4 = true ; } }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { if ( intent . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2267
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = METHOD_2 ( ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2268
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 = VAR_5 . METHOD_3 ( ) ; VAR_4 = STRING_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = VAR_5 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2269
"public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_2 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_2 , VAR_3 ) . show ( ) ; METHOD_2 ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2270
public void METHOD_1 ( android.view.View view ) { VAR_1 = INT_1 ; },public void METHOD_1 ( android.view.View view ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2271
public boolean METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; return true ; } return false ; },public boolean METHOD_1 ( ) { return true ; },"['Move Return', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",2272
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = null ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = null ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2273
public void init ( ) { count = 0 ; VAR_1 = 0 ; VAR_2 = false ; },public void init ( ) { count = 0 ; VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2274
public int METHOD_1 ( ) { if ( ! ( VAR_1 ) ) this . VAR_2 = VAR_3 . METHOD_1 ( ) ; return VAR_2 ; },public int METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2276
private void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { this . VAR_2 = null ; this . VAR_3 = true ; this . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { this . VAR_2 = null ; this . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2277
"public void init ( ) throws java.lang.Throwable { super . init ( ) ; VAR_1 = VAR_2 ; VAR_3 = TYPE_1 . METHOD_1 ( ) ; VAR_4 = new java.util.HashMap < TYPE_2 , TYPE_3 > ( ) ; }",public void init ( ) throws java.lang.Throwable { super . init ( ) ; VAR_1 = VAR_2 ; VAR_3 = TYPE_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2278
public void METHOD_1 ( java.lang.String append ) { if ( VAR_1 . equals ( STRING_1 ) ) VAR_2 = append ; else VAR_2 = ( ( VAR_2 ) + CHAR_1 ) + append ; },public void METHOD_1 ( java.lang.String append ) { VAR_2 = ( ( VAR_2 ) + CHAR_1 ) + append ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2279
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; this . VAR_3 = null ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2280
private void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = TYPE_1 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { ( this . VAR_1 ) ++ ; this . VAR_2 = TYPE_1 . METHOD_3 ( ) ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2281
"public < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) throws java.io.IOException { VAR_2 = METHOD_2 ( ) ; TYPE_2 VAR_3 = METHOD_3 ( ) ; return VAR_4 . execute ( VAR_3 , VAR_1 ) ; }","public < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) throws java.io.IOException { TYPE_2 VAR_3 = METHOD_3 ( ) ; return VAR_4 . execute ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2282
static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = false ; },static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = 0 ; VAR_6 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2283
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) && ( ( METHOD_2 ( ) ) != null ) ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( METHOD_2 ( ) ) != null ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } },"['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2284
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . getString ( STRING_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = STRING_2 ; } METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . getString ( STRING_1 ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2285
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = false ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2286
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = true ; METHOD_2 ( ( - 1 ) ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( ( - 1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2287
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_4 = false ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2288
public static TYPE_1 METHOD_1 ( TYPE_2 key ) { if ( ( VAR_1 ) == null ) { VAR_2 = null ; VAR_3 . init ( ) ; } return VAR_4 . get ( key ) ; },public static TYPE_1 METHOD_1 ( TYPE_2 key ) { return VAR_4 . get ( key ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2289
public void METHOD_1 ( float VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",2290
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = false ; VAR_4 = false ; METHOD_2 ( ) ; } else { VAR_3 = true ; VAR_4 = true ; METHOD_2 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = false ; METHOD_2 ( ) ; } else { VAR_3 = true ; METHOD_2 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2291
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2292
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; VAR_2 = 1 ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2293
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) != null ) { return VAR_2 ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; } },private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) != null ) { return VAR_2 ; } else { return new TYPE_1 ( VAR_1 ) ; } },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2295
"public void METHOD_1 ( long VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 = new TYPE_1 ( ) ; this . VAR_2 . METHOD_3 ( VAR_3 , 0 , VAR_1 ) ; this . VAR_4 = VAR_1 ; }","public void METHOD_1 ( long VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_3 ( VAR_3 , 0 , VAR_1 ) ; this . VAR_4 = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2296
protected void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . toString ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2297
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = new java.util.Scanner ( VAR_3 ) ; VAR_4 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2298
public void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( true ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2299
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 ) + 1 ) ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_3 , INT_1 ) ; ( VAR_3 ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 ) + 1 ) ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_3 , INT_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",2300
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 state ) { result = new java.util.LinkedList < > ( ) ; function = VAR_1 ; VAR_3 = VAR_2 ; VAR_4 . METHOD_2 ( function ) ; VAR_5 = state ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { result = new java.util.LinkedList < > ( ) ; function = VAR_1 ; VAR_3 = VAR_2 ; VAR_4 . METHOD_2 ( function ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2301
public void METHOD_1 ( ) { VAR_1 = - 1 ; VAR_2 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2302
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_4 . init ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 ) != null ) { VAR_4 . init ( VAR_3 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2303
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 1.0F ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = 0 ; VAR_6 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2305
public void remove ( java.lang.Double VAR_1 ) { sum -= VAR_1 ; VAR_2 -= VAR_1 * VAR_1 ; if ( VAR_3 . equals ( VAR_4 ) ) VAR_4 = VAR_5 ; if ( VAR_3 . equals ( min ) ) min = VAR_5 ; ( n ) -- ; },public void remove ( java.lang.Double VAR_1 ) { sum -= VAR_1 ; VAR_2 -= VAR_1 * VAR_1 ; if ( VAR_3 . equals ( VAR_4 ) ) VAR_4 = null ; if ( VAR_3 . equals ( min ) ) min = null ; ( n ) -- ; },"['Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead']",2306
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 . METHOD_3 ( VAR_2 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Move Invocation', 'Delete VariableRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2307
"private void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_1 += VAR_3 ; VAR_4 . METHOD_2 ( 0 , VAR_3 ) ; } else { VAR_5 = true ; } }","private void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_1 += VAR_3 ; VAR_4 . METHOD_2 ( 0 , VAR_3 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",2308
"public void METHOD_1 ( int error ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + error ) ) ; if ( error == ( VAR_2 ) ) { VAR_3 . METHOD_3 ( STRING_2 ) ; } VAR_4 = false ; }","public void METHOD_1 ( int error ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + error ) ) ; }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2309
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; label = VAR_4 . label ; name = VAR_4 . name ; VAR_5 = VAR_6 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; label = VAR_4 . label ; name = VAR_4 . name ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2310
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2311
public boolean start ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_1 ( this . getClass ( ) . METHOD_2 ( ) ) ; VAR_2 . start ( ) ; VAR_3 = true ; return true ; },public boolean start ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_1 ( this . getClass ( ) . METHOD_2 ( ) ) ; VAR_2 . start ( ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2312
public void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2313
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2314
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2315
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 ; VAR_4 = true ; return null ; },TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_4 = true ; return null ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2316
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; java.util.List < java.lang.Boolean > VAR_4 = METHOD_2 ( VAR_3 , VAR_2 ) ; java.util.ArrayList < TYPE_2 > VAR_5 = METHOD_3 ( VAR_4 , VAR_2 ) ; METHOD_4 ( VAR_5 ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { java.util.List < java.lang.Boolean > VAR_4 = METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.ArrayList < TYPE_2 > VAR_5 = METHOD_3 ( VAR_4 , VAR_2 ) ; METHOD_4 ( VAR_5 ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2317
public void METHOD_1 ( TYPE_1 msg ) { super . METHOD_1 ( msg ) ; info = ( ( TYPE_2 ) ( VAR_1 . obj ) ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 msg ) { super . METHOD_1 ( msg ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Assignment']",2318
public void METHOD_1 ( ) { VAR_1 = true ; { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) - 1 ) ) ; } VAR_1 = false ; METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) - 1 ) ) ; METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2319
"public TYPE_1 METHOD_1 ( TYPE_2 message , TYPE_3 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; return null ; }","public TYPE_1 METHOD_1 ( TYPE_2 message , TYPE_3 VAR_1 ) { VAR_2 = VAR_3 ; return null ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2320
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_6 = true ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2321
"public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . get ( ) . VAR_3 = null ; return ; } TYPE_1 . METHOD_2 ( VAR_4 , VAR_5 , false , false , true ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_4 , VAR_5 , false , false ) ; }","['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",2322
public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; return this ; },public TYPE_1 METHOD_1 ( ) { return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2323
"public TYPE_1 METHOD_1 ( java.lang.String path ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_3 ; VAR_4 = INT_1 ; VAR_5 = true ; return TYPE_3 . METHOD_2 ( path , VAR_1 ) ; }",public TYPE_1 METHOD_1 ( java.lang.String path ) { return TYPE_3 . METHOD_2 ( path ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",2324
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_4 = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2325
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; VAR_5 = false ; VAR_6 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; VAR_5 = false ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2326
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_1 = new TYPE_1 ( this ) ; this . VAR_2 = true ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_1 = new TYPE_1 ( this ) ; return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2327
"public boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( ) . get ( VAR_1 ) . VAR_2 = VAR_2 ; return VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","public boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { return VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2328
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2329
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 . METHOD_2 ( STRING_1 ) ) this . target = new TYPE_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . target = new TYPE_2 ( VAR_1 ) ; },"['Move Assignment', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2331
protected boolean METHOD_1 ( ) { boolean VAR_1 = super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 = false ; VAR_3 = true ; METHOD_2 ( VAR_4 ) ; } return VAR_1 ; },protected boolean METHOD_1 ( ) { VAR_2 = false ; METHOD_2 ( VAR_4 ) ; return super . METHOD_1 ( ) ; },"['Move Assignment', 'Move Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",2332
"public int value ( int i , int j , int k ) { b = INT_1 ; return ( i + j ) + k ; }","public int value ( int i , int j , int k ) { return ( i + j ) + k ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2333
"public int METHOD_1 ( ) { VAR_1 = VAR_2 . getInt ( VAR_3 . getString ( VAR_4 ) , ( - 1 ) ) ; return VAR_1 ; }","public int METHOD_1 ( ) { VAR_2 . getInt ( VAR_3 . getString ( VAR_4 ) , ( - 1 ) ) ; return VAR_1 ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2335
"public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { METHOD_2 ( x , null , STRING_1 , false ) ; VAR_2 = true ; VAR_3 = false ; return false ; }","public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { METHOD_2 ( x , null , STRING_1 , false ) ; return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2336
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; for ( TYPE_1 VAR_2 : VAR_3 ) VAR_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) VAR_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2337
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2338
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 . METHOD_2 ( index ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( index ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2339
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; t . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { t . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2340
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_5 , VAR_2 , VAR_6 ) ; VAR_7 = true ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_5 , VAR_2 , VAR_6 ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2341
"public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { VAR_3 = false ; TYPE_2 msg = VAR_4 . METHOD_2 ( VAR_5 ) ; msg . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { TYPE_2 msg = VAR_4 . METHOD_2 ( VAR_5 ) ; msg . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2342
"public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.List < TYPE_1 > > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.List < TYPE_1 > > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2343
"public void METHOD_1 ( int number , int index ) { if ( METHOD_2 ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . METHOD_3 ( index ) ; VAR_1 [ index ] = number ; ( VAR_2 ) ++ ; }","public void METHOD_1 ( int number , int index ) { if ( METHOD_2 ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . METHOD_3 ( index ) ; VAR_1 [ index ] = number ; }","['Delete FieldWrite', 'Delete UnaryOperator']",2344
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = new TYPE_2 ( null , false ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { new TYPE_2 ( null , false , null ) ; } }","['Update ConstructorCall', 'Move ConstructorCall', 'Insert Literal', 'Delete FieldWrite', 'Delete Assignment']",2345
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = false ; },public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2347
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . setEnabled ( true ) ; VAR_4 . setEnabled ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . setEnabled ( true ) ; VAR_4 . setEnabled ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2348
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_1 ) ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2349
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( STRING_1 ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2350
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2351
protected TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; },protected TYPE_1 METHOD_1 ( ) { return this ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2352
"public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . replace ( STRING_1 , STRING_2 ) . replace ( STRING_3 , STRING_2 ) . replace ( STRING_4 , STRING_2 ) . replace ( STRING_5 , STRING_2 ) ; return VAR_1 ; }","public java.lang.String METHOD_1 ( ) { return VAR_2 . replace ( STRING_1 , STRING_2 ) . replace ( STRING_3 , STRING_2 ) . replace ( STRING_4 , STRING_2 ) . replace ( STRING_5 , STRING_2 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2353
public void METHOD_1 ( ) { TYPE_1 tmp = VAR_1 ; while ( ( tmp . METHOD_2 ( ) ) != null ) { tmp = tmp . METHOD_2 ( ) ; VAR_1 = null ; VAR_1 = tmp ; } size = 0 ; },public void METHOD_1 ( ) { TYPE_1 tmp = VAR_1 ; while ( ( tmp . METHOD_2 ( ) ) != null ) { tmp = tmp . METHOD_2 ( ) ; VAR_1 = null ; VAR_1 = tmp ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2354
public TYPE_1 METHOD_1 ( long id ) { VAR_1 = new TYPE_2 ( context ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_1 ( id ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( long id ) { TYPE_1 VAR_2 = VAR_1 . METHOD_1 ( id ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2355
public void METHOD_1 ( ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_3 ) ; VAR_4 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",2357
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2358
public long METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; VAR_2 = position ; return VAR_1 . METHOD_3 ( VAR_3 ) ; },public long METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( position ) ; return VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2359
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2360
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 = TYPE_1 . METHOD_2 ( this . VAR_2 , this . VAR_3 ) ; TYPE_1 . METHOD_3 ( this . VAR_2 , this . VAR_3 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( this . VAR_2 , this . VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",2361
public void METHOD_1 ( java.io.InputStream VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = - 1 ; },public void METHOD_1 ( java.io.InputStream VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2363
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getBoolean ( VAR_5 , false ) ; if ( VAR_3 ) { METHOD_3 ( ) ; } } }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",2364
private void METHOD_1 ( android.widget.Button VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = 0 ; },private void METHOD_1 ( android.widget.Button VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2365
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2366
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 . setEnabled ( false ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . setEnabled ( false ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2367
"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 . replaceAll ( VAR_1 , VAR_2 ) ; this . VAR_5 = new TYPE_2 ( VAR_6 , VAR_3 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 . replaceAll ( VAR_1 , VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2368
private void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = false ; },private void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2369
public void METHOD_1 ( TYPE_1 error ) { state = VAR_1 ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( error ) ; },public void METHOD_1 ( TYPE_1 error ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( error ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2370
void METHOD_1 ( ) { VAR_1 . setState ( VAR_2 ) ; VAR_3 = false ; METHOD_2 ( VAR_4 ) ; },void METHOD_1 ( ) { VAR_1 . setState ( VAR_2 ) ; METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2371
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ! ( VAR_2 ) ) { VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; } else { VAR_3 = VAR_6 ; VAR_4 = VAR_6 ; VAR_5 = VAR_6 ; } },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ! ( VAR_2 ) ) { VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block']",2372
public boolean METHOD_1 ( float VAR_1 ) { this . remove ( ) ; this . METHOD_2 ( true ) ; this . VAR_2 = VAR_3 ; return true ; },public boolean METHOD_1 ( float VAR_1 ) { return true ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2373
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; VAR_5 = STRING_1 ; VAR_4 . METHOD_1 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws java.lang.Exception { TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; VAR_4 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2374
"public synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 = true ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; }","['Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2375
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2376
public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 ) ; return true ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; return true ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2378
"public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( view , position ) ; VAR_2 = null ; }","public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( view , position ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2379
public void METHOD_1 ( android.view.View VAR_1 ) { i = 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2380
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2381
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; try { METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_3 ( ) ; throw VAR_2 ; } } },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { try { METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_3 ( ) ; throw VAR_2 ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2382
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ; VAR_2 . get ( STRING_1 ) . add ( VAR_1 ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ; VAR_2 . get ( STRING_1 ) . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2383
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new android.content.Intent ( VAR_1 , VAR_2 class ) ) ; if ( ( VAR_3 ) == false ) { METHOD_3 ( VAR_1 ) ; VAR_3 = true ; } }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new android.content.Intent ( VAR_1 , VAR_2 class ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2384
public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2385
"public void METHOD_1 ( int x , int y ) { java.lang.System.out.println ( ( ( ( STRING_1 + x ) + STRING_2 ) + y ) ) ; this . VAR_1 = x ; this . VAR_2 = y ; this . VAR_3 = true ; }","public void METHOD_1 ( int x , int y ) { this . VAR_1 = x ; this . VAR_2 = y ; }","['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2386
"public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = true ; first = true ; TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = true ; TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2387
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ( - 1 ) ) ; } else { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } } },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ( - 1 ) ) ; } else { VAR_2 . METHOD_3 ( ) ; } },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2389
public boolean METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getContext ( ) ) ; return true ; },public boolean METHOD_1 ( ) { return false ; },"['Update Literal', 'Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2390
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { this . VAR_2 = VAR_1 ; } else { this . VAR_2 = new java.util.ArrayList < > ( ) ; } },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2391
"protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; super . METHOD_1 ( ) ; }","protected void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2392
public void METHOD_1 ( ) { VAR_1 = ! ( VAR_2 . getText ( ) . toString ( ) . equals ( VAR_3 ) ) ; if ( ( VAR_4 ) != ( VAR_1 ) ) { VAR_4 = VAR_1 ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_4 = ! ( VAR_2 . getText ( ) . toString ( ) . equals ( VAR_3 ) ) ; METHOD_2 ( ) ; },"['Move Invocation', 'Move FieldWrite', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2393
static TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; return VAR_1 ; },static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2394
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; if ( null == ( VAR_2 ) ) VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2395
"public TYPE_1 METHOD_1 ( int VAR_1 , int index ) { ( VAR_2 ) ++ ; return VAR_3 . METHOD_2 ( VAR_1 , index ) ; }","public TYPE_1 METHOD_1 ( int VAR_1 , int index ) { return VAR_3 . METHOD_2 ( VAR_1 , index ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",2396
public void METHOD_1 ( ) { this . value = TYPE_1 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Update TypeReference', 'Insert Return', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2397
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2398
"private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( android.widget.LinearLayout ) ( VAR_1 . METHOD_3 ( VAR_4 , null ) ) ) ; METHOD_4 ( VAR_3 ) ; }",private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2400
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( 0 ) ; VAR_3 . METHOD_5 ( VAR_4 , VAR_5 ) ; VAR_5 = 0 ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( 0 ) ; VAR_3 . METHOD_5 ( VAR_4 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2401
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getInt ( VAR_5 , 0 ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2402
"private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; VAR_4 = true ; VAR_1 = null ; VAR_3 = - 1 ; }","private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; VAR_1 = null ; VAR_3 = - 1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2403
public void METHOD_1 ( TYPE_1 VAR_1 ) { start = null ; VAR_2 = null ; VAR_3 . setText ( STRING_1 ) ; METHOD_2 ( ) ; VAR_4 = null ; VAR_5 = null ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { start = VAR_2 = null ; VAR_3 . setText ( STRING_1 ) ; METHOD_2 ( ) ; },"['Insert Assignment', 'Move FieldWrite', 'Move Assignment', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2404
"public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( tmp . METHOD_2 ( ) ) ; VAR_2 = TYPE_2 . METHOD_3 ( this , STRING_1 , tmp ) ; VAR_2 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) throws java.io.IOException { VAR_2 = TYPE_2 . METHOD_3 ( this , STRING_1 , tmp ) ; VAR_2 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2405
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . iterator ( ) ; VAR_3 = 0 ; status = VAR_4 ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . iterator ( ) ; VAR_3 = 0 ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2406
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 = ( ( java.util.Date ) ( VAR_4 . METHOD_3 ( ) . getValue ( ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2407
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2408
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; this . VAR_2 = new TYPE_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_1 ( VAR_1 ) ) ; },"['Insert ConstructorCall', 'Insert VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete ThisAccess', 'Delete TypeAccess']",2409
"final void METHOD_1 ( long VAR_1 ) { VAR_2 = METHOD_1 ( VAR_3 , VAR_1 ) ; }","final void METHOD_1 ( long VAR_1 ) { METHOD_1 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Update TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",2410
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2411
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . show ( ) ; VAR_4 = true ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . show ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2413
public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { assert VAR_1 != null ; this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { assert VAR_1 != null ; this . VAR_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2414
"private void METHOD_1 ( final long VAR_1 ) { VAR_2 = new TYPE_1 ( getConfig ( ) . METHOD_2 ( ) , VAR_1 ) ; METHOD_3 ( VAR_2 , true ) ; }","private void METHOD_1 ( final long VAR_1 ) { METHOD_3 ( new TYPE_1 ( getConfig ( ) . METHOD_2 ( ) , VAR_1 ) , true ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2415
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = true ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2417
"public void METHOD_1 ( java.util.Calendar date ) { if ( date != null ) { VAR_1 . METHOD_1 ( date ) ; VAR_2 . METHOD_2 ( VAR_3 . get ( VAR_4 ) , VAR_3 . get ( VAR_5 ) ) ; VAR_6 = false ; } }","public void METHOD_1 ( java.util.Calendar date ) { if ( date != null ) { VAR_1 . METHOD_1 ( date ) ; VAR_2 . METHOD_2 ( VAR_3 . get ( VAR_4 ) , VAR_3 . get ( VAR_5 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2418
public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = true ; } },public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2419
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2421
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2422
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_2 ( ) ; VAR_2 = null ; METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2423
public void METHOD_1 ( java.io.File VAR_1 ) { },public void METHOD_1 ( java.io.File VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",2424
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2425
public void show ( ) { METHOD_1 ( true ) ; if ( this . VAR_1 ) { METHOD_2 ( ) ; } else { this . VAR_2 = true ; } },public void show ( ) { METHOD_1 ( true ) ; METHOD_2 ( ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2426
"public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) this . VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , true ) ; return VAR_1 ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , true ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",2427
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { },public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",2428
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { this . VAR_2 = VAR_2 ; if ( VAR_2 ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_1 ( VAR_1 ) ; } this . VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_1 ( VAR_1 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2429
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = 1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2430
"public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_3 = VAR_1 ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2431
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . i ( VAR_3 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . i ( VAR_3 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2432
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . i ( STRING_1 , STRING_2 ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2433
"private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_1 ; VAR_3 = null ; VAR_4 = null ; VAR_5 = new TYPE_1 ( ) ; VAR_6 . start ( ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","private void METHOD_1 ( ) { VAR_1 = false ; VAR_3 = null ; VAR_4 = null ; VAR_5 = new TYPE_1 ( ) ; VAR_6 . start ( ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2434
"public void METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; VAR_2 . delete ( ) ; this . VAR_3 = VAR_1 ; this . VAR_4 = new TYPE_1 ( VAR_3 , STRING_1 ) . METHOD_3 ( ) ; }","public void METHOD_1 ( java.io.File VAR_3 ) throws java.io.IOException { METHOD_2 ( ) ; VAR_2 . delete ( ) ; this . VAR_4 = new TYPE_1 ( VAR_3 , STRING_1 ) . METHOD_3 ( ) ; }","['Update Parameter', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead']",2435
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2436
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = TYPE_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = true ; METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = TYPE_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2437
"public void METHOD_1 ( int x , int y ) { position = position . METHOD_1 ( x , y ) ; }","public void METHOD_1 ( int x , int y ) { position . METHOD_1 ( x , y ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2438
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_5 , VAR_2 ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2439
public void METHOD_1 ( ) { VAR_1 = STRING_1 + ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 + ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_10 ) ; },"['Move BinaryOperator', 'Move FieldRead', 'Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",2440
public void METHOD_1 ( TYPE_1 < java.lang.Long > VAR_1 ) throws java.lang.Exception { VAR_2 = true ; while ( ( VAR_3 . METHOD_2 ( ) ) && ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; } },public void METHOD_1 ( TYPE_1 < java.lang.Long > VAR_1 ) throws java.lang.Exception { while ( VAR_3 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete BinaryOperator']",2441
public TYPE_1 METHOD_1 ( ) { if ( isEmpty ( ) ) { throw new TYPE_2 ( ) ; } TYPE_3 < TYPE_1 > . VAR_1 VAR_2 = VAR_3 ; VAR_3 = null ; VAR_4 = VAR_2 ; ( VAR_5 ) -- ; return VAR_6 . item ; },public TYPE_1 METHOD_1 ( ) { if ( isEmpty ( ) ) { throw new TYPE_2 ( ) ; } ( VAR_5 ) -- ; return null ; },"['Move Literal', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead']",2442
"public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; VAR_2 = VAR_3 . METHOD_1 ( ) . VAR_4 ; VAR_5 . height = VAR_6 . min ( VAR_7 , VAR_5 . height ) ; return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; VAR_2 = VAR_3 . METHOD_1 ( ) . VAR_4 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",2444
private void METHOD_1 ( ) { this . state = VAR_1 ; this . VAR_2 = STRING_1 ; this . VAR_3 = null ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { this . state = VAR_1 ; this . VAR_2 = STRING_1 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2445
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_3 = true ; VAR_4 = false ; } else { VAR_3 = false ; VAR_4 = true ; } return VAR_4 ; },public boolean METHOD_1 ( ) { return VAR_4 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2447
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2448
public long METHOD_1 ( ) throws java.io.IOException { return VAR_1 = VAR_2 . METHOD_1 ( ) ; },public long METHOD_1 ( ) throws java.io.IOException { return VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2449
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = VAR_6 [ 0 ] ; VAR_7 . METHOD_5 ( ) ; VAR_8 = INT_1 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = VAR_6 [ 0 ] ; VAR_7 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2450
"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , boolean VAR_2 , TYPE_2 VAR_3 ) { this . VAR_3 = VAR_3 ; VAR_4 = new TYPE_3 ( context , VAR_1 , VAR_2 ) ; VAR_5 . execute ( VAR_6 ) ; }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 , boolean VAR_2 , TYPE_2 VAR_3 ) { this . VAR_3 = VAR_3 ; new TYPE_3 ( context , VAR_1 , VAR_2 ) . execute ( VAR_6 ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2451
public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( int index ) { VAR_1 . remove ( index ) ; VAR_2 = true ; return this ; },public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( int index ) { VAR_1 . remove ( index ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2452
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return ; } VAR_1 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 . i ( VAR_2 , STRING_2 ) ; }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return ; } VAR_1 . METHOD_3 ( ) ; VAR_4 . i ( VAR_2 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2453
public void METHOD_1 ( java.util.List < TYPE_1 > data ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( data ) ; } METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > data ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( data ) ; } else { VAR_1 = data ; } METHOD_4 ( ) ; },"['Insert Block', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead']",2454
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { context = VAR_3 . getContext ( ) ; android.view.View view = android.view.View . METHOD_2 ( context , VAR_4 , null ) ; return new TYPE_3 ( view ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = android.view.View . METHOD_2 ( context , VAR_4 , null ) ; return new TYPE_3 ( view ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2455
public void METHOD_1 ( byte [ ] data ) { VAR_1 = data ; if ( data == null ) { this . data = null ; return ; } METHOD_1 ( new TYPE_1 ( data ) ) ; },public void METHOD_1 ( byte [ ] data ) { VAR_1 = data ; METHOD_1 ( new TYPE_1 ( data ) ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",2456
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 . main ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_5 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 . main ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2457
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2459
"public static TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { TYPE_1 a = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 . type = VAR_6 ; VAR_7 = VAR_2 ; VAR_8 = VAR_9 ; VAR_10 = VAR_3 ; return a ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_2 , int VAR_3 ) { TYPE_1 a = new TYPE_1 ( ) ; VAR_5 . type = VAR_6 ; VAR_7 = VAR_2 ; VAR_8 = VAR_9 ; VAR_10 = VAR_3 ; return a ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2460
public void METHOD_1 ( ) { TYPE_1 t = ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) ) ) ; VAR_2 . setText ( STRING_1 ) ; status = INT_1 ; },public void METHOD_1 ( ) { TYPE_1 t = ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) ) ) ; VAR_2 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2461
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) VAR_3 . METHOD_2 ( ) ; else VAR_4 . start ( ) ; VAR_2 = ! ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . start ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",2462
"public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_2 . METHOD_2 ( this . VAR_1 , VAR_3 . getValue ( ) ) ; this . VAR_1 = null ; } }","public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( this . VAR_1 , VAR_3 . getValue ( ) ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2463
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2464
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2465
"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 = VAR_3 ; if ( VAR_6 ) { METHOD_2 ( VAR_1 ) ; } else { VAR_7 = VAR_1 ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_4 = VAR_2 ; if ( VAR_6 ) { METHOD_2 ( VAR_1 ) ; } else { VAR_7 = VAR_1 ; } }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2466
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2469
public int METHOD_1 ( ) { value = VAR_1 [ VAR_2 . index ] ; ( VAR_2 . index ) ++ ; VAR_2 . index = ( VAR_2 . index ) % ( VAR_3 . length ) ; return value ; },public int METHOD_1 ( ) { value = VAR_1 [ VAR_2 . index ] ; VAR_2 . index = ( VAR_2 . index ) ++ ; VAR_2 . index = ( VAR_2 . index ) % ( VAR_3 . length ) ; return value ; },"['Insert Assignment', 'Insert FieldWrite', 'Move UnaryOperator']",2470
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_3 ( intent ) ; VAR_3 = true ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2471
public void METHOD_1 ( ) { if ( ( this . data ) != null ) { this . data . METHOD_2 ( ) ; this . data = null ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2472
"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final boolean VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_4 = false ; } else { VAR_4 = true ; } return VAR_5 ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final boolean VAR_3 ) { VAR_4 = false ; return VAR_5 ; }","['Move Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2473
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_2 ( false ) ; },public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2474
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( null == VAR_1 ) return ; this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null == VAR_1 ) return ; this . VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2475
public static void main ( java.lang.String [ ] args ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; new TYPE_1 ( ) ; },public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2476
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2477
public void METHOD_1 ( android.view.View view ) { VAR_1 = new java.util.Random ( ) . METHOD_2 ( this . VAR_2 . length ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",2478
"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; ( VAR_4 ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",2479
public void METHOD_1 ( TYPE_1 event ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) < INT_1 ) return ; VAR_1 = 0 ; TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2480
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this ) ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this ) ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2481
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; if ( ( METHOD_2 ( VAR_4 , VAR_2 ) ) && ( VAR_1 == ( VAR_5 ) ) ) { VAR_6 . METHOD_3 ( VAR_4 , VAR_2 ) ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( METHOD_2 ( VAR_4 , VAR_2 ) ) && ( VAR_1 == ( VAR_5 ) ) ) { VAR_6 . METHOD_3 ( VAR_4 , VAR_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2482
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; METHOD_2 ( VAR_4 ) ; }",['Update Literal'],2483
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = true ; METHOD_2 ( true ) ; } },"['Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess']",2484
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { assert VAR_1 != null ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { assert VAR_1 != null ; this . VAR_1 = VAR_1 ; },['Update FieldWrite'],2486
public int METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; return ( VAR_1 . METHOD_3 ( ) ) + ( ( VAR_2 ) * INT_1 ) ; },public int METHOD_1 ( ) { return ( VAR_1 . METHOD_3 ( ) ) + ( ( VAR_2 ) * INT_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2487
"public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = METHOD_2 ( VAR_4 . x , VAR_4 . y , VAR_5 . x , VAR_5 . y ) ; }",public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",2488
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_1 ) ; return this ; },public final TYPE_1 METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; return this ; },"['Insert TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead']",2489
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( position ) ; VAR_2 = position ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( position ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2490
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; VAR_5 = STRING_4 ; VAR_6 = STRING_5 ; VAR_7 = STRING_6 ; VAR_8 = STRING_7 ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; VAR_5 = STRING_4 ; VAR_6 = STRING_5 ; VAR_7 = STRING_6 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2491
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( 0 ) ; },public void METHOD_1 ( ) { METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2493
void METHOD_1 ( ) { this . VAR_1 = true ; },void METHOD_1 ( ) { VAR_1 = true ; },['Delete ThisAccess'],2495
public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } } METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2496
public void open ( java.lang.String VAR_1 ) throws java.io.IOException { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( ) ; if ( METHOD_2 ( ) ) { VAR_3 = VAR_2 . METHOD_3 ( ) ; } else { VAR_3 = VAR_2 . METHOD_4 ( ) ; } },public void open ( java.lang.String VAR_1 ) throws java.io.IOException { this . VAR_1 = VAR_1 ; if ( ! ( METHOD_2 ( ) ) ) { VAR_2 . METHOD_1 ( ) ; } },"['Insert UnaryOperator', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",2497
"public void METHOD_1 ( java.lang.String query ) { METHOD_2 ( ( ( VAR_1 ) ++ ) ) ; METHOD_3 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( this , query ) ; } }","public void METHOD_1 ( java.lang.String query ) { METHOD_3 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( this , query ) ; } }","['Delete FieldWrite', 'Delete UnaryOperator', 'Delete Invocation']",2498
public java.lang.String METHOD_1 ( TYPE_1 p ) { this . VAR_1 = p ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { return STRING_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2499
public void METHOD_1 ( int position ) { if ( position != ( VAR_1 ) ) { VAR_2 = position ; METHOD_2 ( ( position == ( VAR_3 ) ) ) ; METHOD_3 ( position ) ; METHOD_4 ( ) ; } VAR_1 = position ; },public void METHOD_1 ( int position ) { VAR_2 = position ; METHOD_2 ( ( position == ( VAR_3 ) ) ) ; METHOD_3 ( position ) ; },"['Move Assignment', 'Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2500
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2502
public void METHOD_1 ( ) { if ( ( VAR_1 ) != ( - 1 ) ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; VAR_1 = - 1 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( - 1 ) ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } },"['Update BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2503
public synchronized void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_2 ( ) ; },public synchronized void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Move Invocation', 'Insert Assignment', 'Insert ThisAccess', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",2504
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2505
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2506
public void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; VAR_1 = STRING_1 ; },public void METHOD_1 ( ) { java.lang.System.out.println ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2507
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) == null ) { return ; } VAR_2 . METHOD_2 ( null ) ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( null ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2508
"public synchronized void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 . METHOD_2 ( true , false ) ) { for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } } }",public synchronized void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } } },"['Insert FieldRead', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2509
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2510
public void set ( float out ) { if ( out != ( VAR_1 ) ) { VAR_1 = out ; VAR_2 . event ( ) ; } },public void set ( float out ) { if ( out != ( VAR_1 ) ) { VAR_2 . event ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2511
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_4 ) != null ) VAR_4 . METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2512
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = STRING_1 ; VAR_4 . setText ( STRING_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2514
public java.util.ArrayList < java.lang.Object > METHOD_1 ( ) { java.util.ArrayList < java.lang.Object > output = ( ( java.util.ArrayList < java.lang.Object > ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; return output ; },public java.util.ArrayList < java.lang.Object > METHOD_1 ( ) { java.util.ArrayList < java.lang.Object > output = VAR_1 ; VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; return output ; },"['Insert Assignment', 'Insert FieldRead', 'Insert FieldWrite', 'Insert ConstructorCall', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2515
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( true ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2516
public void METHOD_1 ( long n ) { VAR_1 . METHOD_2 ( 0 ) ; if ( ! ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; } },public void METHOD_1 ( long n ) { VAR_1 . METHOD_2 ( 0 ) ; if ( ! ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2517
private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( METHOD_3 ( ) ) { METHOD_4 ( ) ; } VAR_1 . METHOD_5 ( false ) ; VAR_2 . METHOD_6 ( null ) ; VAR_3 = false ; },private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( METHOD_3 ( ) ) { METHOD_4 ( ) ; } VAR_1 . METHOD_5 ( false ) ; VAR_2 . METHOD_6 ( null ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2518
public void METHOD_1 ( float VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; VAR_4 = true ; },protected abstract void METHOD_1 ( float VAR_1 ) ;,"['Update Wra', 'Insert Wra', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2519
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; VAR_2 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2520
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 = null ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2521
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2522
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( VAR_3 ) { VAR_3 = false ; TYPE_2 . METHOD_2 ( this , ( STRING_1 + ( METHOD_3 ( ) ) ) , VAR_4 ) . show ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( VAR_3 ) TYPE_2 . METHOD_2 ( this , ( STRING_1 + ( METHOD_3 ( ) ) ) , VAR_4 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2523
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . getBoolean ( VAR_4 , false ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",2524
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; } },public void METHOD_1 ( ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2526
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2527
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2528
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = position ; VAR_3 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( position ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_3 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( position ) ) ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2530
"protected void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( this , VAR_3 , VAR_5 ) ; }",protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2531
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2532
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = - 1 ; super . METHOD_1 ( event ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; super . METHOD_1 ( event ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2533
public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = new java.lang.String ( this . url ) ; this . url = this . VAR_2 ; return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return this . url ; },"['Move FieldRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",2534
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_2 ) ) ; VAR_4 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( this ) ; VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_2 ) ) ; VAR_4 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2535
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2536
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 . height = VAR_5 ; VAR_6 = true ; VAR_7 = true ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 . height = VAR_5 ; VAR_6 = true ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2537
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . i ( VAR_4 , STRING_1 ) ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = true ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2538
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( STRING_1 , STRING_2 , this ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( STRING_1 , STRING_2 , this ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2539
"private void METHOD_1 ( ) { VAR_1 = true ; android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_2 ( ( ( VAR_4 ) | ( VAR_5 ) ) ) ; METHOD_3 ( VAR_2 ) ; }","private void METHOD_1 ( ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_2 . METHOD_2 ( ( ( VAR_4 ) | ( VAR_5 ) ) ) ; METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2540
"private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.ClassNotFoundException , TYPE_1 , TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 { VAR_2 . status = VAR_3 ; new java.lang.Thread ( new TYPE_6 ( VAR_4 , METHOD_2 ( VAR_4 , VAR_1 ) ) ) . start ( ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.ClassNotFoundException , TYPE_1 , TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 { new java.lang.Thread ( new TYPE_6 ( VAR_4 , METHOD_2 ( VAR_4 , VAR_1 ) ) ) . start ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2541
public void METHOD_1 ( int position ) { VAR_1 . remove ( position ) ; METHOD_2 ( position ) ; VAR_2 = null ; },public void METHOD_1 ( int position ) { VAR_1 . remove ( position ) ; METHOD_2 ( position ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2542
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; context = getContext ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2543
private void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . start ( ) ; VAR_3 . setText ( METHOD_2 ( ) . getString ( VAR_4 ) ) ; VAR_5 = VAR_6 ; },private void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . start ( ) ; VAR_3 . setText ( METHOD_2 ( ) . getString ( VAR_4 ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2544
public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 = null ; },public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2545
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) VAR_2 . remove ( VAR_1 ) ; VAR_3 = METHOD_2 ( ) ; VAR_4 = METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) VAR_2 . remove ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2546
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; TYPE_1 . METHOD_2 ( false ) ; TYPE_2 . METHOD_2 ( true ) ; VAR_3 . add ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_2 = false ; TYPE_1 . METHOD_2 ( false ) ; TYPE_2 . METHOD_2 ( true ) ; VAR_3 . add ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2547
"private void show ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = false ; TYPE_1 . METHOD_1 ( ( ! ( VAR_3 ) ) ) ; }","private void show ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; TYPE_1 . METHOD_1 ( true ) ; }","['Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete UnaryOperator']",2548
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = false ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2549
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 . METHOD_3 ( ) ) > 1 ) { VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; VAR_3 = false ; } }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 . METHOD_3 ( ) ) > 1 ) { VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2550
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; main = new TYPE_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2551
public void METHOD_1 ( ) { this . name = ( ( TYPE_1 ) ( target ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",2553
"public TYPE_1 METHOD_1 ( ) { this . VAR_1 = METHOD_2 ( METHOD_2 ( METHOD_3 ( x ) , METHOD_4 ( y ) ) ) ; return this . VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( METHOD_2 ( METHOD_3 ( x ) , METHOD_4 ( y ) ) ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",2555
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; VAR_3 = true ; },public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2556
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; VAR_5 = null ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2557
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; new TYPE_3 ( VAR_4 , VAR_3 ) . execute ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",2558
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 = 0 ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2559
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 = false ; },"['Delete VariableRead', 'Delete Invocation']",2560
public TYPE_1 [ ] METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 ; },public TYPE_1 [ ] METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2561
private void METHOD_1 ( ) { VAR_1 = null ; if ( VAR_2 . METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( VAR_2 ) ; },private void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2562
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2564
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_3 . get ( position ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2565
"private void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = true ; VAR_4 = false ; TYPE_2 VAR_5 = VAR_6 . METHOD_2 ( ) ; VAR_7 . replace ( VAR_1 , VAR_2 ) . METHOD_3 ( null ) . commit ( ) ; }","private void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = true ; TYPE_2 VAR_5 = VAR_6 . METHOD_2 ( ) ; VAR_7 . replace ( VAR_1 , VAR_2 ) . METHOD_3 ( null ) . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2566
"public boolean METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException { VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; return VAR_3 . METHOD_2 ( ) ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException { return true ; }","['Insert Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2567
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = 0 ; METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_2 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_2 ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2568
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) VAR_3 = VAR_4 . getString ( VAR_5 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2569
public void METHOD_1 ( int position ) { VAR_1 = false ; super . METHOD_1 ( position ) ; if ( position == 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { VAR_2 . METHOD_2 ( VAR_4 ) ; } },public void METHOD_1 ( int position ) { super . METHOD_1 ( position ) ; if ( position == 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { VAR_2 . METHOD_2 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2570
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",2572
public void METHOD_1 ( ) { VAR_1 = ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { VAR_1 = true ; } else { VAR_1 = false ; } },"['Insert If', 'Move UnaryOperator', 'Insert Block', 'Insert Block', 'Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete Assignment']",2573
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2574
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2575
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { METHOD_2 ( ) ; } VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { METHOD_2 ( ) ; } VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2576
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2577
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = null ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2578
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_3 = null ; METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2579
long METHOD_1 ( ) { METHOD_2 ( ) ; assert ! ( METHOD_3 ( ) ) : STRING_1 ; if ( TYPE_1 . METHOD_4 ( ) ) VAR_1 = 0 ; return VAR_1 ; },long METHOD_1 ( ) { METHOD_2 ( ) ; assert ! ( METHOD_3 ( ) ) : STRING_1 ; return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2580
public void show ( java.lang.String TYPE_1 ) { super . METHOD_1 ( STRING_1 ) ; super . METHOD_2 ( STRING_2 ) ; if ( ( TYPE_1 . METHOD_3 ( STRING_3 ) ) == 0 ) { this . VAR_1 = true ; } super . show ( ) ; },public void show ( ) { super . METHOD_1 ( STRING_1 ) ; super . METHOD_2 ( STRING_2 ) ; super . show ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2581
protected void METHOD_1 ( ) { VAR_1 = true ; super . METHOD_1 ( ) ; VAR_2 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2582
public void METHOD_1 ( ) { VAR_1 = false ; try { this . VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_3 ) { } this . line = null ; },public void METHOD_1 ( ) { VAR_1 = false ; try { this . VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_3 ) { } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2583
"public void METHOD_1 ( ) { VAR_1 . to ( this , ( ( float ) ( FLOAT_1 ) ) , STRING_1 , VAR_2 ) ; VAR_1 . to ( this , ( ( float ) ( FLOAT_1 ) ) , STRING_2 , VAR_3 ) ; }",public void METHOD_1 ( ) { x = VAR_2 ; y = VAR_3 ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2584
public void METHOD_1 ( long VAR_1 ) { this . VAR_2 = ( ( int ) ( VAR_1 - ( this . VAR_3 ) ) ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",2585
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_5 , VAR_3 ) ) ; METHOD_4 ( VAR_6 , VAR_7 , VAR_5 . METHOD_5 ( ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_5 , VAR_3 ) ) ; METHOD_4 ( VAR_6 , VAR_7 , VAR_5 . METHOD_5 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2586
protected void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2588
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; VAR_3 = TYPE_3 . METHOD_5 ( getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2590
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = null ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2591
public static void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; },public static void METHOD_1 ( ) { VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2592
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( 1 , STRING_1 , STRING_2 ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; assertNotNull ( VAR_1 . METHOD_4 ( 1 , STRING_1 , STRING_2 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2593
public void METHOD_1 ( TYPE_1 VAR_1 ) { int key = VAR_1 . METHOD_2 ( ) ; if ( key == ( VAR_2 ) ) { VAR_3 = new TYPE_2 [ INT_1 ] [ INT_2 ] ; VAR_4 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { int key = VAR_1 . METHOD_2 ( ) ; if ( key == ( VAR_2 ) ) { VAR_3 = new TYPE_2 [ INT_1 ] [ INT_2 ] ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2594
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2595
public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0.0F ; this . VAR_4 = - 1 ; this . VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0.0F ; this . VAR_5 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2597
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = VAR_3 ; METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",2598
public void METHOD_1 ( TYPE_1 event ) { ++ ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldWrite', 'Delete UnaryOperator']",2599
"void METHOD_1 ( TYPE_1 a , boolean VAR_1 , TYPE_2 VAR_2 ) { this . TYPE_3 = a ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; VAR_4 . add ( VAR_2 ) ; }","void METHOD_1 ( TYPE_1 a , boolean VAR_1 , java.lang.String VAR_2 ) { this . TYPE_3 = a ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2600
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; VAR_2 = false ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2601
"public static void METHOD_1 ( ) { if ( VAR_1 . init ) return ; TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . init = true ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2602
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) <= INT_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; } } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) <= INT_1 ) { METHOD_3 ( ) ; } },"['Move If', 'Move BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2603
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_4 ) VAR_5 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_4 ) VAR_5 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2604
public synchronized void METHOD_1 ( ) throws java.io.IOException { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; VAR_3 = null ; },public synchronized void METHOD_1 ( ) throws java.io.IOException { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2605
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( new TYPE_2 ( this ) ) ; },public void METHOD_1 ( ) { METHOD_4 ( new TYPE_2 ( this ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2606
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = true ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2607
public void METHOD_1 ( TYPE_1 p ) { switch ( this . type ) { case VAR_1 : { METHOD_2 ( ( ( this . VAR_2 = p ) == null ) ) ; break ; } } },public void METHOD_1 ( TYPE_1 p ) { switch ( this . type ) { case VAR_1 : { METHOD_2 ( ( p == null ) ) ; break ; } } },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2608
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = VAR_2 ; return this ; },"['Insert FieldRead', 'Delete VariableRead']",2609
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; VAR_3 = false ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2610
private void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ( ! ( VAR_1 ) ) ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( false ) ; },"['Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete UnaryOperator']",2611
"public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = FLOAT_1 ; this . VAR_2 = FLOAT_2 ; this . VAR_3 = FLOAT_3 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = FLOAT_1 ; VAR_2 = FLOAT_2 ; VAR_3 = FLOAT_3 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2612
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_3 ( VAR_2 ) ; } },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_3 ( VAR_2 ) ; },"['Move Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",2613
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( STRING_1 ) ; VAR_2 . setText ( ( STRING_2 + VAR_1 ) ) ; VAR_3 = VAR_4 ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { java.lang.String VAR_1 = intent . METHOD_2 ( STRING_1 ) ; VAR_2 . setText ( ( STRING_2 + VAR_1 ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2614
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 . setText ( STRING_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2615
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; i = getIntent ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2616
public void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2617
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_3 . METHOD_2 ( STRING_1 , VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_3 . METHOD_2 ( STRING_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2619
public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . VAR_1 = null ; this . VAR_2 . METHOD_1 ( ) ; this . VAR_2 = null ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2620
public synchronized void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } VAR_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete Wra', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2621
"public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = true ; } }","public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2622
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 = false ; VAR_7 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2623
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( 0 , 1 ) ; VAR_1 . METHOD_3 ( true ) ; }",public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeReference', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete LocalVariable']",2624
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2625
"public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . x = ( TYPE_1 . METHOD_2 ( ) ) / INT_2 ; VAR_2 . y = TYPE_1 . METHOD_3 ( ) ; VAR_3 . set ( 0 , 0 ) ; VAR_4 = false ; }","public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . x = ( TYPE_1 . METHOD_2 ( ) ) / INT_2 ; VAR_2 . y = TYPE_1 . METHOD_3 ( ) ; VAR_3 . set ( 0 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2626
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2627
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2629
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2631
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2632
"private void init ( int VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = new java.util.ArrayList < > ( TYPE_1 . METHOD_1 ( VAR_2 , null ) ) ; this . size = 0 ; }","private void init ( int VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = new java.util.ArrayList < > ( TYPE_1 . METHOD_1 ( VAR_2 , null ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2633
public void METHOD_1 ( ) { if ( ( VAR_1 [ 0 ] . METHOD_2 ( ) ) == ( VAR_1 [ 1 ] . METHOD_2 ( ) ) ) { ( VAR_2 ) ++ ; } else { VAR_2 = 0 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 [ 0 ] . METHOD_2 ( ) ) == ( VAR_1 [ 1 ] . METHOD_2 ( ) ) ) { VAR_2 = ( VAR_2 ) ++ ; } else { VAR_2 = 0 ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move UnaryOperator']",2634
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2635
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . assertTrue ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_3 . add ( VAR_1 ) ; if ( VAR_1 == ( VAR_4 ) ) { VAR_4 = null ; } METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Invocation']",2636
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( VAR_1 ) { METHOD_3 ( ) ; VAR_1 = false ; } if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2637
protected void METHOD_1 ( android.view.View view ) { VAR_1 = view . METHOD_2 ( VAR_2 ) ; VAR_3 = view . METHOD_2 ( VAR_4 ) ; },protected void METHOD_1 ( android.view.View view ) { VAR_1 = view . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2638
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getContext ( ) ; METHOD_2 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2639
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_2 ) ; this . VAR_6 = null ; this . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_2 ) ; this . METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2641
public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2643
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2644
public void add ( TYPE_1 element ) { VAR_1 . add ( element ) ; VAR_2 = VAR_1 . get ( 0 ) ; },public void add ( TYPE_1 element ) { VAR_1 . add ( element ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",2645
public void METHOD_1 ( TYPE_1 c ) { TYPE_2 . METHOD_2 ( ( STRING_1 + c ) ) ; VAR_1 . add ( new java.lang.StringBuilder ( ) ) ; update ( c ) ; },public void METHOD_1 ( TYPE_1 c ) { TYPE_2 . METHOD_2 ( ( STRING_1 + c ) ) ; state = new java.util.ArrayList < java.lang.StringBuilder > ( ) ; update ( c ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation']",2646
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_2 = VAR_3 . toUpperCase ( ) ; java.lang.System.out.println ( VAR_2 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",2647
"protected void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_4 ( ) ; } else { VAR_1 = false ; } super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2649
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2650
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_3 = this . VAR_2 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",2652
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( this . VAR_1 ) != null ) { TYPE_2 . METHOD_2 ( getContext ( ) ) . METHOD_3 ( target ) ; } this . VAR_1 = VAR_1 ; VAR_2 = null ; METHOD_4 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2654
"public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = VAR_3 ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( STRING_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = VAR_3 ; if ( VAR_1 != null ) VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; else VAR_3 = null ; METHOD_3 ( STRING_1 , VAR_2 , VAR_3 ) ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Move Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",2655
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( this ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Move Literal', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2656
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_3 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2657
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 . METHOD_2 ( ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2658
void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ( ( ( ( TYPE_1 ) ( METHOD_3 ( 1 ) ) ) . end ( ) ) / INT_1 ) ) ; },void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ( ( ( ( TYPE_1 ) ( METHOD_3 ( 1 ) ) ) . end ( ) ) / INT_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2659
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",2660
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; count = 0 ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2661
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_2 . METHOD_6 ( new TYPE_1 ( ) , VAR_3 ) ; } }","public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_2 . METHOD_6 ( new TYPE_1 ( ) , VAR_3 ) ; }","['Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2662
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ( - 1 ) , VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ( - 1 ) , VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2663
public long METHOD_1 ( ) throws TYPE_1 { if ( ( status ) != ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_2 = ( TYPE_2 . METHOD_2 ( ) ) - ( startTime ) ; status = VAR_3 ; return VAR_2 ; },public long METHOD_1 ( ) throws TYPE_1 { if ( ( status ) != ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_2 = ( TYPE_2 . METHOD_2 ( ) ) - ( startTime ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2665
public void METHOD_1 ( ) { java.lang.String VAR_1 = text . METHOD_2 ( ) ; if ( VAR_2 . isEmpty ( ) ) { VAR_3 = VAR_4 . getText ( ) ; } else { VAR_3 = VAR_1 ; } },public void METHOD_1 ( ) { VAR_3 = VAR_4 . getText ( ) ; },"['Move Assignment', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2666
"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > data , java.util.ArrayList < TYPE_2 > VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 ) { VAR_3 = data ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; METHOD_2 ( ) ; }",public void METHOD_1 ( java.util.ArrayList < TYPE_1 > data ) { VAR_3 = data ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2667
"public void METHOD_1 ( ) { VAR_1 = 0 ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( null , new TYPE_2 ( STRING_1 ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( null , new TYPE_2 ( STRING_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2668
"public java.lang.String delete ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; synchronized ( VAR_3 ) { } VAR_2 = new TYPE_1 ( ) ; return VAR_4 ; }","public java.lang.String delete ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; synchronized ( VAR_3 ) { } return VAR_4 ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2669
"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . METHOD_1 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ) ; VAR_5 = false ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . METHOD_1 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2670
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( this , VAR_2 ) ; VAR_3 . context = METHOD_5 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( this , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2671
public static java.lang.String METHOD_1 ( ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; VAR_2 = VAR_1 ; java.util.Date VAR_3 = VAR_4 . getTime ( ) ; java.lang.String date = new TYPE_1 ( STRING_1 ) . format ( VAR_3 ) ; return date ; },public static java.lang.String METHOD_1 ( ) { java.util.Calendar VAR_1 = java.util.Calendar.getInstance ( ) ; java.util.Date VAR_3 = VAR_4 . getTime ( ) ; java.lang.String date = new TYPE_1 ( STRING_1 ) . format ( VAR_3 ) ; return date ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2672
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 . size ( ) ) > ( VAR_4 ) ) { VAR_5 = VAR_2 . METHOD_3 ( ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 . size ( ) ) > ( VAR_4 ) ) { VAR_2 . METHOD_3 ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2673
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { VAR_3 = ( ( TYPE_2 ) ( view ) ) . getText ( ) . toString ( ) ; VAR_4 = position ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { VAR_3 = ( ( TYPE_2 ) ( view ) ) . getText ( ) . toString ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2674
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; if ( first ) { VAR_3 = new TYPE_2 ( ) ; VAR_4 . execute ( ) ; first = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2675
protected void METHOD_1 ( ) { VAR_1 = this ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } METHOD_3 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2677
public synchronized void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; },public synchronized void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 ) ; VAR_2 = false ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2678
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2679
public void METHOD_1 ( float size ) { VAR_1 = size ; VAR_2 . getData ( ) . METHOD_2 ( size ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( float size ) { VAR_2 . getData ( ) . METHOD_2 ( size ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2680
protected void METHOD_1 ( java.lang.CharSequence status ) { VAR_1 . setText ( ( STRING_1 + status ) ) ; VAR_2 = null ; if ( VAR_3 ) { VAR_4 = false ; } else { VAR_4 = true ; } },protected void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = null ; },"['Insert TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2681
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = null ; VAR_1 . METHOD_2 ( null ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",2682
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2683
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) >= INT_1 ) { VAR_2 = INT_2 ; VAR_3 = VAR_4 ; VAR_4 = INT_3 ; } else { VAR_2 = 1 ; VAR_3 = VAR_4 ; VAR_4 = INT_3 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) >= INT_1 ) { VAR_2 = INT_2 ; VAR_4 = INT_3 ; } else { VAR_2 = 1 ; VAR_4 = INT_3 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2684
private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( ) ; if ( METHOD_3 ( ) ) { VAR_2 = false ; } else { METHOD_4 ( ) ; } } },private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( ) ; METHOD_4 ( ) ; } },"['Move Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2685
public void remove ( ) { if ( VAR_1 ) { remove ( VAR_2 ) ; VAR_1 = false ; } },public void remove ( ) { },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2686
"private void METHOD_1 ( android.content.Context context ) { android.view.View view = TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( VAR_1 , this ) ; VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_3 = new TYPE_2 ( STRING_1 ) ; }","private void METHOD_1 ( android.content.Context context ) { android.view.View view = TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( VAR_1 , this ) ; VAR_2 = java.util.Calendar.getInstance ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2687
public void METHOD_1 ( java.lang.Long id ) { this . op = STRING_1 ; this . id = id ; },public void METHOD_1 ( ) { this . op = STRING_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2688
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2689
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( getActivity ( ) ) ; VAR_2 . show ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2690
"public void METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; this . VAR_6 . put ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( long VAR_1 , long VAR_2 ) { this . VAR_6 . put ( VAR_1 , VAR_2 ) ; }","['Move VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete VariableRead']",2692
public void METHOD_1 ( ) { ( VAR_1 ) -- ; VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) - 1 ) ) ; },public boolean METHOD_1 ( ) { return false ; },"['Update TypeReference', 'Insert Return', 'Insert Literal', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation']",2694
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_2 ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",2695
public void setState ( java.lang.String state ) { if ( VAR_1 . equals ( STRING_1 ) ) { this . VAR_2 = STRING_2 ; } this . state = state ; },public void setState ( java.lang.String state ) { this . state = state ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2696
"public TYPE_1 getConfig ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_2 ) ; VAR_2 = false ; return VAR_1 ; }","public TYPE_1 getConfig ( ) { return new TYPE_1 ( INT_1 , INT_2 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",2697
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; start = INT_1 ; METHOD_3 ( start ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( INT_1 ) ; },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead']",2698
void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; },void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2699
public void METHOD_1 ( ) { this . value = true ; },public void METHOD_1 ( ) { this . setValue ( true ) ; },"['Insert Invocation', 'Move ThisAccess', 'Move Literal', 'Delete FieldWrite', 'Delete Assignment']",2700
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; VAR_5 = new TYPE_1 ( view ) ; return VAR_5 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = TYPE_3 . METHOD_2 ( VAR_3 . getContext ( ) ) . METHOD_3 ( VAR_4 , VAR_1 , false ) ; return new TYPE_1 ( view ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2701
"public void init ( java.util.List VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; VAR_4 = TYPE_3 . METHOD_1 ( STRING_1 ) ; VAR_5 . info ( STRING_2 ) ; }","public void init ( java.util.Vector VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; VAR_5 . info ( STRING_2 ) ; }","['Update TypeReference', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2702
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = 0 ; VAR_6 = 0 ; this . VAR_1 = ( ( double ) ( VAR_1 ) ) ; VAR_7 = new TYPE_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = 0 ; VAR_6 = 0 ; this . VAR_1 = ( ( double ) ( VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2703
public void METHOD_1 ( TYPE_1 n ) { VAR_1 = n ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 n ) { VAR_1 = n ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2704
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { this . VAR_2 = true ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2705
"public void METHOD_1 ( TYPE_1 < ? , ? > VAR_1 ) { build = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? , ? > VAR_1 ) { build = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2707
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess']",2710
public void METHOD_1 ( final int VAR_1 ) { this . VAR_2 = this . VAR_3 = VAR_1 ; },public void METHOD_1 ( final int VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2711
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2712
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 != null ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",2713
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 = - 1 ; if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( METHOD_2 ( ) ) == false ) return ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",2714
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_2 . METHOD_4 ( VAR_5 , VAR_6 ) ; VAR_7 = 0 ; super . METHOD_1 ( ) ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = METHOD_3 ( VAR_3 ) ; VAR_7 = 1 ; super . METHOD_1 ( ) ; }","['Update Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2715
public int compareTo ( java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) return ( ( ( TYPE_1 ) ( VAR_1 ) ) . VAR_2 ) - ( VAR_2 ) ; return 0 ; },public int compareTo ( java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) return ( ( TYPE_1 ) ( VAR_1 ) ) . VAR_2 = VAR_2 ; return 0 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",2716
"public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( this . VAR_1 ) ; this . VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_4 = new TYPE_2 ( this , this . VAR_5 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( this . VAR_1 ) ; VAR_4 = new TYPE_2 ( this , this . VAR_5 . METHOD_4 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2717
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 += VAR_2 ; VAR_4 = VAR_5 . METHOD_2 ( VAR_6 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 += VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Insert Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2718
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_3 ) ; } TYPE_1 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_3 ) ; } TYPE_1 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2719
"public double METHOD_1 ( boolean VAR_1 , double VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; if ( VAR_1 ) { VAR_3 = ! ( VAR_3 ) ; if ( VAR_3 ) VAR_2 = - VAR_2 ; } return VAR_2 ; }","public double METHOD_1 ( boolean VAR_1 , double VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; if ( VAR_1 ) { VAR_2 = - VAR_2 ; } return VAR_2 ; }","['Move If', 'Move VariableRead', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",2720
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) ) throw new TYPE_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; VAR_2 = VAR_1 ; VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) ) throw new TYPE_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2721
private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( getActivity ( ) ) != null ) { VAR_2 = VAR_1 ; getActivity ( ) . METHOD_2 ( VAR_1 ) ; } },private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( getActivity ( ) ) != null ) { getActivity ( ) . METHOD_2 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2722
"public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getBoolean ( STRING_1 , VAR_4 , true , STRING_2 ) ; VAR_5 = VAR_3 . getBoolean ( STRING_3 , VAR_4 , true , STRING_4 ) ; VAR_6 = TYPE_2 . METHOD_2 ( STRING_5 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getBoolean ( STRING_1 , VAR_4 , true , STRING_2 ) ; VAR_5 = VAR_3 . getBoolean ( STRING_3 , VAR_4 , true , STRING_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2723
"public java.lang.Object METHOD_1 ( ) { if ( VAR_1 . isEmpty ( VAR_2 ) ) { this . VAR_2 = STRING_1 ; } if ( ( VAR_3 ) == null ) { this . VAR_3 = METHOD_2 ( this . VAR_4 , STRING_2 ) ; } return this ; }",public java.lang.Object METHOD_1 ( ) { if ( VAR_1 . isEmpty ( VAR_2 ) ) { this . VAR_2 = STRING_1 ; } return this ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",2724
public static void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; },public static void METHOD_1 ( ) { VAR_3 . METHOD_1 ( ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2725
"public void METHOD_1 ( float x , float y , TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != 1 ) return ; METHOD_2 ( ) ; VAR_3 = true ; VAR_4 = x ; VAR_5 = y ; }","public void METHOD_1 ( float x , float y , TYPE_1 VAR_1 ) { VAR_4 = x ; VAR_5 = y ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2726
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } VAR_1 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",2729
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = false ; VAR_4 = true ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = false ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2730
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; status = VAR_4 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2731
"public TYPE_1 METHOD_1 ( short VAR_1 ) { buf = TYPE_2 . METHOD_2 ( buf , VAR_2 ) ; buf . METHOD_1 ( VAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( short VAR_1 ) { TYPE_2 . METHOD_2 ( buf , VAR_2 ) ; buf . METHOD_1 ( VAR_1 ) ; return this ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2732
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( view . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_4 ) ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2733
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_1 ) ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2736
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { int VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { int VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2737
public void METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = METHOD_2 ( ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 = METHOD_4 ( ) ; VAR_5 = METHOD_5 ( ) ; VAR_6 = METHOD_6 ( ) ; },public void METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2739
public void METHOD_1 ( ) { VAR_1 = false ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",2740
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { if ( ! ( VAR_1 ) ) { VAR_2 = false ; if ( VAR_3 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , VAR_4 ) . show ( ) ; } METHOD_3 ( ) ; } }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { if ( ! ( VAR_1 ) ) { if ( VAR_3 ) { TYPE_1 . METHOD_2 ( context , STRING_1 , VAR_4 ) . show ( ) ; } METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2741
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2742
public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 = true ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Move Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2743
"public void update ( TYPE_1 VAR_1 , java.lang.Object arg ) { this . VAR_2 = false ; this . VAR_3 = false ; this . VAR_4 = false ; this . VAR_5 = false ; }","public void update ( TYPE_1 VAR_1 , java.lang.Object arg ) { this . VAR_2 = false ; this . VAR_3 = false ; this . VAR_4 = false ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2744
void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; },void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2745
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) return VAR_2 = STRING_1 ; return VAR_2 = VAR_1 ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return STRING_1 ; },"['Move FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2746
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { if ( STRING_1 . equals ( VAR_3 ) ) { VAR_5 = new java.lang.StringBuilder ( ) ; } this . VAR_6 . METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { this . VAR_6 . METHOD_2 ( VAR_3 ) ; }","['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2747
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_5 ) . show ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_5 ) . show ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2748
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { position = position . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { position . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2749
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 TYPE_2 ) { int x = ( TYPE_2 . METHOD_2 ( ) ) * INT_1 ; ( VAR_2 ) -- ; TYPE_2 . METHOD_3 ( x ) ; METHOD_4 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 TYPE_2 ) { int x = ( TYPE_2 . METHOD_2 ( ) ) * INT_1 ; TYPE_2 . METHOD_3 ( x ) ; METHOD_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",2751
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_5 = VAR_6 . METHOD_3 ( ) ; METHOD_4 ( VAR_3 , VAR_7 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_4 ( VAR_3 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2752
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new java.util.ArrayList < > ( java.util.Arrays.asList ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2753
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 = VAR_5 ; METHOD_2 ( ) ; this . VAR_1 = VAR_6 ; this . VAR_7 = false ; },public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; VAR_3 = false ; METHOD_2 ( ) ; this . VAR_1 = VAR_6 ; this . VAR_7 = false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2754
public void METHOD_1 ( ) { this . show ( ) ; VAR_1 = new TYPE_1 ( this ) ; this . VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { this . show ( ) ; this . VAR_2 . METHOD_2 ( new TYPE_1 ( this ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2755
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ! ( VAR_3 ) ) { VAR_4 = true ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_5 = true ; METHOD_2 ( ) ; } VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_5 = true ; METHOD_2 ( ) ; }","['Move Invocation', 'Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2757
public TYPE_1 METHOD_1 ( int i ) { VAR_1 = i ; return this ; },public TYPE_1 METHOD_1 ( int i ) { this . VAR_1 = i ; return this ; },['Insert ThisAccess'],2758
public void METHOD_1 ( ) { for ( TYPE_1 listener : VAR_1 ) { listener . METHOD_1 ( null ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { for ( TYPE_1 listener : VAR_1 ) { listener . METHOD_1 ( null ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2759
public void METHOD_1 ( boolean result ) { VAR_1 = null ; if ( result ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; } else METHOD_4 ( ) ; },public void METHOD_1 ( boolean result ) { if ( result ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; } else METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2760
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_4 ) ; VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",2761
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2762
"public static void main ( java.lang.String [ ] args ) { VAR_1 = true ; TYPE_1 . METHOD_1 ( VAR_2 class , ( ( java.lang.String [ ] ) ( null ) ) ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( VAR_2 class , ( ( java.lang.String [ ] ) ( null ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2763
public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_1 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( args ) ; VAR_1 . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_1 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( args ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",2764
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( false ) ; VAR_2 . show ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2765
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = VAR_3 ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2767
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( STRING_1 ) ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2768
"void METHOD_1 ( float VAR_1 , java.util.Set < TYPE_1 > VAR_2 ) { this . VAR_3 = VAR_1 ; float VAR_4 = VAR_1 * ( VAR_5 ) ; METHOD_2 ( VAR_4 , VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","void METHOD_1 ( float VAR_1 , java.util.Set < TYPE_1 > VAR_2 ) { float VAR_4 = VAR_1 * ( VAR_5 ) ; METHOD_2 ( VAR_4 , VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2769
"public void METHOD_1 ( TYPE_1 item ) { VAR_1 . put ( item . METHOD_2 ( ) , item ) ; }",public void METHOD_1 ( TYPE_1 item ) { this . item = item ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2770
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) VAR_3 = new TYPE_1 ( ) . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( ) . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If']",2771
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2772
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; VAR_2 = false ; select ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; select ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2773
private void init ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = null ; },private void init ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2774
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 > 1 ) VAR_2 = 1 ; else if ( VAR_1 < 0 ) VAR_2 = 0 ; else VAR_2 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",2775
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2776
"public void init ( ) { errors = new java.util.ArrayList < > ( ) ; METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void init ( ) { METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2777
public boolean METHOD_1 ( java.util.ArrayList < TYPE_1 > TYPE_2 ) { this . VAR_1 . METHOD_2 ( ) ; return METHOD_3 ( TYPE_2 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > TYPE_2 ) { this . VAR_1 = TYPE_2 ; },"['Update TypeReference', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Return']",2778
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 <= INT_1 ) && ( VAR_1 >= 1 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_2 = true ; this . VAR_3 = true ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 <= INT_1 ) && ( VAR_1 >= 1 ) ) { this . VAR_1 = VAR_1 ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",2779
protected void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = false ; },public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Wra', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2780
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . token = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( VAR_1 . token , VAR_6 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_5 . METHOD_3 ( VAR_1 . token , VAR_6 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2781
public void step ( ) { if ( VAR_1 ) java.lang.System.out.println ( STRING_1 ) ; VAR_2 = true ; METHOD_1 ( ) . METHOD_2 ( ) ; },public void step ( ) { if ( VAR_1 ) java.lang.System.out.println ( STRING_1 ) ; METHOD_1 ( ) . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2783
protected void METHOD_1 ( java.lang.Exception VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; } else { VAR_4 . METHOD_3 ( VAR_1 ) ; } },protected void METHOD_1 ( java.lang.Exception VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; } else { VAR_4 . METHOD_3 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2784
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) . first ) ; VAR_2 = false ; METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) . first ) ; METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2785
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = ! ( VAR_4 ) ; if ( VAR_4 ) { VAR_1 . METHOD_3 ( true ) ; } METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_4 = true ; METHOD_4 ( ) ; }","['Move Invocation', 'Insert Literal', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete Block', 'Delete If']",2786
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = this ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2787
"public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_3 = VAR_1 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2788
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",2789
private synchronized void METHOD_1 ( ) { step = false ; VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( VAR_3 ) ) ; },private synchronized void METHOD_1 ( ) { step = false ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2790
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2792
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 ) == null ) VAR_4 = 0 ; VAR_3 = VAR_2 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_2 ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2793
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 , STRING_1 ) ; VAR_2 = new TYPE_1 ( 1 , STRING_1 , 0 , true ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete FieldRead', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",2794
"public void METHOD_1 ( java.lang.String VAR_1 ) { put ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",2795
public void METHOD_1 ( int [ ] [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int [ ] [ ] VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2796
"public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) == true ) { VAR_2 = STRING_1 ; } TYPE_2 . METHOD_1 ( VAR_3 , VAR_2 , VAR_4 , false , false , VAR_5 , VAR_6 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 = true ) { VAR_2 = STRING_1 ; } TYPE_2 . METHOD_1 ( VAR_3 , VAR_2 , VAR_4 , false , false , VAR_5 , VAR_6 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator']",2797
void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( ) . METHOD_4 ( true ) ; METHOD_5 ( STRING_1 ) ; },void METHOD_1 ( ) { VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( ) . METHOD_4 ( true ) ; METHOD_5 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2798
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2799
public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_1 ( ) ; this . VAR_2 = VAR_1 ; VAR_3 = new TYPE_1 ( ) ; METHOD_2 ( ) ; VAR_4 . show ( ) ; VAR_5 = new TYPE_2 ( ) ; },public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_1 ( ) ; this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; VAR_4 . show ( ) ; VAR_5 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2800
public java.lang.String METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; synchronized ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } VAR_4 = new TYPE_1 ( ) ; return VAR_5 ; },public java.lang.String METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; synchronized ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } return VAR_5 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2801
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( ! ( VAR_3 ) ) ) { return false ; } VAR_3 = true ; VAR_4 . METHOD_2 ( VAR_5 ) ; return super . METHOD_1 ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 ) ; return super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2802
"public void METHOD_1 ( int count ) { if ( count == 0 ) { VAR_1 . setText ( STRING_1 ) ; } else { VAR_1 . setText ( java.lang.String.format ( TYPE_1 . METHOD_2 ( ) , STRING_2 , count ) ) ; } VAR_2 = count ; }","public void METHOD_1 ( int count ) { if ( count == 0 ) { VAR_1 . setText ( STRING_1 ) ; } else { VAR_1 . setText ( java.lang.String.format ( TYPE_1 . METHOD_2 ( ) , STRING_2 , count ) ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2803
"private void put ( java.lang.String VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; METHOD_1 ( STRING_1 , VAR_3 ) ; return ; }","private void put ( java.lang.String VAR_4 , java.lang.String VAR_5 , boolean VAR_3 ) { METHOD_1 ( STRING_1 , VAR_4 , VAR_5 , VAR_3 ) ; return ; }","['Update Parameter', 'Update Parameter', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2804
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = true ; } else { VAR_3 = false ; } }","['Insert If', 'Move VariableRead', 'Insert Block', 'Insert Block', 'Move Assignment', 'Insert Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",2805
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; if ( VAR_2 . isEmpty ( ) ) { TYPE_2 . METHOD_4 ( METHOD_3 ( ) ) ; VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; } },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; if ( VAR_2 . isEmpty ( ) ) { TYPE_2 . METHOD_4 ( METHOD_3 ( ) ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2806
void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; },void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2807
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . getName ( ) ; this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , this . VAR_1 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_3 . getName ( ) , this . VAR_1 . METHOD_3 ( ) ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2808
public final void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; },public final void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2810
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . toString ( ) ) ; VAR_3 = VAR_2 . getValue ( VAR_4 class ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . toString ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",2811
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new java.io.File ( STRING_1 ) ) ; VAR_2 = this ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this , this ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_2 = this ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this , this ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",2812
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( VAR_1 ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_4 ( VAR_3 ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( VAR_1 ) ; if ( VAR_2 ) { METHOD_4 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2813
public static void METHOD_1 ( java.lang.String name ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( name ) ; } else { VAR_2 . name = name ; } },public static void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( name ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2814
private void METHOD_1 ( int index ) { url = VAR_1 . get ( index ) ; VAR_2 = false ; METHOD_2 ( ) ; },private void METHOD_1 ( int index ) { url = VAR_1 . get ( index ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2815
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2816
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_2 = VAR_3 ; VAR_4 . METHOD_1 ( VAR_5 ) ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_2 = VAR_3 ; VAR_4 . METHOD_1 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2817
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2818
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; ( VAR_3 ) ++ ; VAR_4 = true ; VAR_5 = VAR_6 . METHOD_2 ( ) ; VAR_7 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_1 ( ) ; ( VAR_3 ) ++ ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2820
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { this . VAR_1 = java.lang.String.format ( STRING_1 , VAR_1 ) ; } else { this . VAR_1 = VAR_1 ; } }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2821
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( x , ( ( ( ( y ) - 1 ) + ( VAR_1 ) ) % ( VAR_1 ) ) , VAR_2 , VAR_1 ) ; }",public void METHOD_1 ( ) { y = ( ( ( y ) - 1 ) + ( VAR_1 ) ) % ( VAR_1 ) ; },"['Update TypeReference', 'Insert Assignment', 'Insert FieldWrite', 'Move BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return']",2822
protected void METHOD_1 ( TYPE_1 target ) { VAR_1 . METHOD_2 ( target ) ; VAR_2 = true ; },protected void METHOD_1 ( TYPE_1 target ) { VAR_1 . METHOD_2 ( target ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2823
public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } VAR_2 = context ; return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2825
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; if ( ( VAR_2 ) != null ) { VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",2826
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == 0 ) { VAR_3 . setText ( ( ( VAR_3 . getText ( ) ) + STRING_1 ) ) ; VAR_2 = 1 ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . setText ( ( ( VAR_3 . getText ( ) ) + STRING_1 ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2827
public java.lang.String METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; return STRING_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2828
"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2829
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getBoolean ( VAR_3 ) ; METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( true ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2830
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true , true ) ; VAR_2 = true ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2832
public void METHOD_1 ( TYPE_1 message ) { this . message = METHOD_2 ( message ) ; },public void METHOD_1 ( TYPE_1 message ) { this . message = message ; },"['Move VariableRead', 'Delete Invocation']",2833
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; update ( ) ; VAR_3 = new TYPE_2 ( this ) . METHOD_5 ( VAR_4 ) . build ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; update ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2834
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 1 ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( 1 ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2835
"public static boolean METHOD_1 ( java.lang.String title , java.lang.String VAR_1 ) { VAR_2 = new TYPE_1 ( title , VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . result = false ; VAR_2 . METHOD_3 ( true ) ; return VAR_4 . result ; }","public static boolean METHOD_1 ( java.lang.String title , java.lang.String VAR_1 ) { VAR_2 = new TYPE_1 ( title , VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( true ) ; return VAR_4 . result ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2836
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . get ( VAR_4 ) ; VAR_5 = VAR_3 . get ( VAR_6 ) ; TYPE_2 . METHOD_2 ( STRING_1 , ( ( ( VAR_2 ) + STRING_2 ) + ( VAR_5 ) ) ) ; }",private void METHOD_1 ( TYPE_1 result ) { },"['Update Parameter', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2838
public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2839
"public void METHOD_1 ( TYPE_1 VAR_1 ) { size = 0 ; METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2840
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( f ) ; VAR_1 . METHOD_3 ( 0 ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_3 = VAR_2 ; VAR_1 . METHOD_3 ( 1 ) ; } },public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( f ) ; VAR_1 . METHOD_3 ( 0 ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_1 . METHOD_3 ( 1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2841
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; },private void METHOD_1 ( ) { VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2842
protected boolean METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; return VAR_1 ; },protected abstract boolean METHOD_1 ( ) ;,"['Insert Wra', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",2843
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 . METHOD_2 ( ) . select ( VAR_1 ) ; VAR_5 . METHOD_2 ( ) . select ( VAR_2 ) ; VAR_3 = false ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 . METHOD_2 ( ) . select ( VAR_1 ) ; VAR_5 . METHOD_2 ( ) . select ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2844
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 . value = value ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; VAR_13 = VAR_14 ; VAR_15 = VAR_16 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_6 = VAR_7 ; VAR_8 . value = value ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; VAR_13 = VAR_14 ; VAR_15 = VAR_16 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2845
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_3 ( ) ; VAR_3 = 0 ; VAR_4 = null ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_3 ( ) ; VAR_3 = 0 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2846
"private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = false ; VAR_3 . add ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . add ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2847
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ! ( VAR_1 ) ) { VAR_1 = true ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2848
public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = null ; VAR_5 = null ; },public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2851
public void METHOD_1 ( ) { VAR_1 [ 0 ] = STRING_1 ; VAR_1 [ 1 ] = STRING_1 ; VAR_1 [ INT_1 ] = STRING_1 ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 [ 0 ] = STRING_1 ; VAR_1 [ 1 ] = STRING_1 ; VAR_1 [ INT_1 ] = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2852
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2853
public int [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . keys ( ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; } return VAR_1 ; },public int [ ] METHOD_1 ( ) { return VAR_2 . keys ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldRead']",2854
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( item . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( item . METHOD_4 ( ) , VAR_3 . getData ( ) , VAR_4 ) ; VAR_4 = 0 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( item . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( item . METHOD_4 ( ) , VAR_3 . getData ( ) , VAR_4 ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2855
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 [ 0 ] = false ; -- ( VAR_3 ) ; VAR_4 . remove ( VAR_5 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 [ 0 ] = false ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2856
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) VAR_3 = VAR_1 ; else VAR_3 = VAR_1 + ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 = VAR_1 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",2857
public void METHOD_1 ( android.view.View view ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . VAR_2 = true ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2859
public void update ( ) { if ( ( VAR_1 ) != null ) { METHOD_1 ( VAR_1 ) ; } },public void update ( ) { if ( ( VAR_1 ) != null ) { METHOD_1 ( VAR_1 ) ; VAR_1 = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",2860
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_4 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_4 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",2861
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = false ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2864
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2865
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_3 ) { return ; } VAR_4 = VAR_2 ; METHOD_2 ( VAR_5 . METHOD_3 ( VAR_1 , VAR_2 ) , METHOD_4 ( ) ) ; }","public void METHOD_1 ( int VAR_1 , int offset ) { METHOD_2 ( VAR_5 . METHOD_3 ( VAR_1 , offset ) , METHOD_4 ( ) ) ; }","['Update Parameter', 'Update VariableRead', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2866
"void init ( ) { values = java.util.Arrays.asList ( 1 , INT_1 , INT_2 , INT_3 , INT_4 , INT_5 ) ; VAR_1 = VAR_2 . out ; TYPE_1 . METHOD_1 ( new TYPE_2 ( VAR_3 ) ) ; VAR_4 = new TYPE_3 ( ) ; }","void init ( ) { values = java.util.Arrays.asList ( 1 , INT_1 , INT_2 , INT_3 , INT_4 , INT_5 ) ; TYPE_1 . METHOD_1 ( new TYPE_2 ( VAR_3 ) ) ; VAR_4 = new TYPE_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2867
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 ) ; VAR_1 = false ; VAR_2 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 ) ; VAR_1 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2868
public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 item : VAR_1 ) { METHOD_2 ( item ) ; } VAR_2 = TYPE_3 . METHOD_3 ( STRING_1 ) ; VAR_3 = false ; VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 item : VAR_1 ) { METHOD_2 ( item ) ; } VAR_3 = false ; VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2869
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2870
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2872
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( this ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2874
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = false ; return VAR_3 . METHOD_2 ( VAR_1 ) ; },private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Update Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2875
private void init ( android.content.Context context ) { if ( ! ( context instanceof TYPE_1 ) ) throw new TYPE_2 ( STRING_1 ) ; VAR_1 = ( ( TYPE_1 ) ( context ) ) ; VAR_2 = TYPE_3 . METHOD_1 ( context ) ; },private void init ( android.content.Context context ) { if ( ! ( context instanceof TYPE_1 ) ) throw new TYPE_2 ( STRING_1 ) ; VAR_1 = ( ( TYPE_1 ) ( context ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2876
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . setText ( STRING_1 ) ; startTime = ( ( int ) ( TYPE_1 . METHOD_2 ( ) ) ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2877
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . remove ( VAR_1 ) ; this . VAR_1 = null ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . remove ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2878
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; },public void init ( ) { VAR_2 = TYPE_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2879
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_1 ( ) ; },"['Insert Invocation', 'Insert FieldRead', 'Move ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2880
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( 0 , 0 , INT_1 , INT_1 ) ; this . VAR_1 = VAR_1 ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( 0 , 0 , INT_1 , INT_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2881
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . getString ( STRING_1 ) ) ; this . VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( STRING_2 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . getString ( STRING_1 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2882
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = true ; VAR_4 = 0 ; VAR_5 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = true ; VAR_5 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2884
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; return this ; },"['Insert Invocation', 'Move ThisAccess', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",2885
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; VAR_4 = VAR_5 . build ( VAR_1 , VAR_6 , VAR_7 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( ) { VAR_1 = null ; METHOD_4 ( ) ; },"['Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2886
"public void METHOD_1 ( TYPE_1 item ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , true ) ; VAR_4 . commit ( ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( TYPE_1 item ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; state = true ; METHOD_4 ( intent ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",2887
private void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 ) + VAR_1 ) ) ; VAR_3 = ( VAR_3 ) + VAR_1 ; VAR_4 . METHOD_3 ( ) ; },private void METHOD_1 ( int VAR_3 ) { VAR_4 . METHOD_3 ( ) ; },"['Update Parameter', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",2888
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2889
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; TYPE_2 . METHOD_3 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2890
private void METHOD_1 ( ) { METHOD_2 ( false ) ; this . VAR_1 = this . VAR_2 . METHOD_3 ( ) . size ( ) ; this . VAR_2 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( false ) ; this . VAR_2 . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2891
public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 . execute ( ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . VAR_2 . execute ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2892
public void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_1 ( ) ; },public void init ( ) { METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2893
"private void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < ( rows ) ; ++ i ) { TYPE_1 node = VAR_2 . METHOD_2 ( i , VAR_1 ) ; VAR_3 = METHOD_3 ( node , i ) ; } }","private void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < ( rows ) ; ++ i ) { TYPE_1 node = VAR_2 . METHOD_2 ( i , VAR_1 ) ; METHOD_3 ( node , i ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",2894
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = new TYPE_1 ( VAR_5 , TYPE_2 . METHOD_2 ( ) ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2895
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2896
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2897
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . i ( STRING_1 , VAR_1 ) ; if ( ! ( VAR_3 ) ) { VAR_3 = true ; METHOD_2 ( VAR_1 ) ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . i ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2898
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = true ; TYPE_1 . METHOD_4 ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2899
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . size ( ) ; this . VAR_3 = false ; },public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . size ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2900
public boolean METHOD_1 ( TYPE_1 node ) { if ( VAR_1 . contains ( node . METHOD_2 ( ) ) ) { this . VAR_2 = true ; } return super . METHOD_1 ( node ) ; },public boolean METHOD_1 ( TYPE_1 node ) { if ( VAR_1 . contains ( node . METHOD_2 ( ) ) ) { return VAR_2 = true ; } return super . METHOD_1 ( node ) ; },"['Insert Return', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",2901
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; TYPE_2 . METHOD_2 ( VAR_6 , 0 , this . VAR_7 , 0 , INT_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_4 = VAR_5 ; TYPE_2 . METHOD_2 ( VAR_6 , 0 , this . VAR_7 , 0 , INT_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2902
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . getText ( ) . toString ( ) . equals ( STRING_1 ) ) { list . METHOD_2 ( VAR_3 ) ; VAR_4 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . getText ( ) . toString ( ) . equals ( STRING_1 ) ) { list . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2904
public void open ( ) { VAR_1 = 0 ; },public void open ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2905
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_2 = TYPE_2 . METHOD_5 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2906
public void METHOD_1 ( ) { VAR_1 = 0 ; ( VAR_2 ) ++ ; },public void METHOD_1 ( ) { ( VAR_2 ) ++ ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2907
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2908
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2909
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { VAR_2 = false ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2910
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( getActivity ( ) ) ; VAR_3 = VAR_4 . getString ( getString ( VAR_5 ) , STRING_1 ) ; VAR_6 . execute ( VAR_3 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( getActivity ( ) ) ; java.lang.String VAR_3 = VAR_4 . getString ( getString ( VAR_5 ) , STRING_1 ) ; VAR_6 . execute ( VAR_3 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",2912
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . getName ( ) ) ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . getName ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2913
private void METHOD_1 ( ) { this . VAR_1 = false ; },private void METHOD_1 ( ) { VAR_1 = false ; },['Delete ThisAccess'],2914
public void METHOD_1 ( ) { this . VAR_1 = STRING_1 ; VAR_2 = true ; VAR_3 = INT_1 ; },public void METHOD_1 ( ) { this . VAR_1 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2915
public void METHOD_1 ( TYPE_1 view ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; TYPE_2 . METHOD_1 ( this ) ; },public void METHOD_1 ( TYPE_1 view ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2916
public void METHOD_1 ( ) { this . VAR_1 = false ; },public void METHOD_1 ( ) { VAR_1 = false ; },['Delete ThisAccess'],2917
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = METHOD_2 ( ) ; VAR_6 = METHOD_2 ( ) ; VAR_7 . METHOD_3 ( VAR_1 , VAR_3 , INT_1 , INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_7 . METHOD_3 ( VAR_1 , VAR_3 , INT_1 , INT_1 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",2918
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_2 ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_1 , this ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_1 , this ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2919
public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2920
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; METHOD_3 ( false ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; METHOD_3 ( false ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2921
public java.lang.Boolean METHOD_1 ( ) { VAR_1 . status = STRING_1 ; return VAR_2 . METHOD_2 ( ) ; },public java.lang.Boolean METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2922
public static void main ( java.lang.String [ ] args ) { VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; TYPE_1 . METHOD_1 ( false ) ; },public static void main ( java.lang.String [ ] args ) { VAR_1 = true ; TYPE_1 . METHOD_1 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2923
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = false ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . remove ( VAR_2 ) ; VAR_3 = false ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2924
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; this . VAR_3 = 1 ; target . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; target . METHOD_2 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2925
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },['Update FieldWrite'],2926
public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2927
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_4 ; android.content.Intent VAR_5 = new android.content.Intent ( VAR_6 ) ; METHOD_2 ( VAR_5 , VAR_7 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_5 = new android.content.Intent ( VAR_6 ) ; METHOD_2 ( VAR_5 , VAR_7 ) ; }","['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2928
public TYPE_1 METHOD_1 ( ) { VAR_1 [ ( ( VAR_2 . position ) - 1 ) ] = isEmpty ( ) ; VAR_2 . position -= 1 ; VAR_3 = METHOD_2 ( VAR_2 . position ) ; return VAR_4 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_4 ) { VAR_1 [ ( ( VAR_2 . position ) - 1 ) ] = isEmpty ( ) ; VAR_2 . position -= 1 ; VAR_3 = METHOD_2 ( VAR_2 . position ) ; return VAR_4 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete FieldRead']",2929
public void METHOD_1 ( ) { this . target . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . target = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",2930
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; if ( ! ( VAR_5 ) ) { VAR_6 = new TYPE_1 ( this ) ; VAR_5 = true ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; if ( ! ( VAR_5 ) ) { VAR_6 = new TYPE_1 ( this ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2931
"public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_4 . METHOD_3 ( this . VAR_3 , this . VAR_4 ) ; this . VAR_5 = TYPE_5 . METHOD_4 ( ) ; VAR_6 = true ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { TYPE_4 . METHOD_3 ( this . VAR_3 , this . VAR_4 ) ; this . VAR_5 = TYPE_5 . METHOD_4 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2932
"public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = true ; METHOD_2 ( VAR_2 , false ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 item ) { METHOD_2 ( VAR_2 , false ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2933
public void METHOD_1 ( java.lang.String content ) { if ( content == null ) VAR_1 = null ; else VAR_1 = content . METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String content ) { VAR_1 = content . METHOD_2 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2934
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) . size ( ) ) - ( VAR_3 ) ) ) ; ( VAR_4 ) -- ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) . size ( ) ) - ( VAR_3 ) ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",2935
public void METHOD_1 ( int count ) { if ( count == 0 ) { this . count = 1 ; } else { this . count = count ; } },public void METHOD_1 ( int count ) { this . count = count ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",2936
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) . METHOD_3 ( 0 ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) . METHOD_3 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2937
"public void METHOD_1 ( java.util.List < TYPE_1 > result ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( result ) ; } else { VAR_2 = new TYPE_2 ( VAR_3 . METHOD_3 ( ) , VAR_3 , null ) ; } }",public void METHOD_1 ( java.util.List < TYPE_1 > result ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( result ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block']",2938
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , new TYPE_3 ( ) ) ; this . VAR_1 = TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , new TYPE_3 ( ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",2939
public final void METHOD_1 ( TYPE_1 date ) { this . date = date ; this . VAR_1 = null ; },public final void METHOD_1 ( TYPE_1 date ) { this . date = date ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2940
"public java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { java.lang.String VAR_2 = VAR_3 . replaceAll ( STRING_1 , STRING_2 ) ; return STRING_3 + VAR_2 ; } return VAR_1 ; }","public java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_3 . replaceAll ( STRING_1 , STRING_2 ) ; return STRING_3 + ( VAR_1 ) ; } return VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",2941
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",2942
public java.util.Collection < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; return VAR_1 ; },public java.util.Collection < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",2943
public TYPE_1 METHOD_1 ( ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; return this ; },public TYPE_1 METHOD_1 ( ) { return this ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2944
public void METHOD_1 ( ) { key = value = null ; VAR_1 = null ; },public void METHOD_1 ( ) { key = value = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2945
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( this . VAR_2 ) ; VAR_1 = true ; } },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2946
protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 = null ; },protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2947
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",2948
public void setEnabled ( boolean VAR_1 ) { this . VAR_2 = true ; },public void setEnabled ( boolean VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2949
private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; if ( VAR_1 == INT_1 ) { ( VAR_3 ) ++ ; } },private void METHOD_1 ( int VAR_1 ) { VAR_2 += VAR_1 ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",2950
"public TYPE_1 METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { TYPE_2 . METHOD_2 ( format , STRING_1 ) ; this . VAR_1 = VAR_2 . format ( format , args ) ; return ( ( TYPE_1 ) ( this ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String name ) { this . VAR_1 = TYPE_2 . METHOD_2 ( name , STRING_1 ) ; return ( ( TYPE_1 ) ( this ) ) ; }","['Update Parameter', 'Move Invocation', 'Update VariableRead', 'Delete Parameter', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",2951
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2952
protected void METHOD_1 ( TYPE_1 state ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( state ) ) ; super . METHOD_1 ( state ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_2 ( ) ; METHOD_3 ( VAR_6 ) ; },protected void METHOD_1 ( TYPE_1 state ) { super . METHOD_1 ( state ) ; METHOD_3 ( VAR_6 ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",2953
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",2954
public boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; return false ; } else { if ( VAR_2 ) return false ; else { VAR_1 = false ; return true ; } } },public boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; return false ; } else { return ! ( VAR_2 ) ; } },"['Insert Return', 'Insert UnaryOperator', 'Move FieldRead', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",2955
"public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; }","public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Update FieldWrite', 'Insert ThisAccess']",2956
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . init ( new TYPE_1 ( this ) . build ( ) ) ; TYPE_2 . METHOD_2 ( this ) ; VAR_2 = this ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . init ( new TYPE_1 ( this ) . build ( ) ) ; TYPE_2 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2957
public void METHOD_1 ( ) { this . VAR_1 = false ; VAR_2 . start ( ) ; },public void METHOD_1 ( ) { VAR_2 . start ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2959
public void METHOD_1 ( ) { VAR_1 = null ; if ( VAR_2 ) VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( VAR_2 ) VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2960
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_2 ( ) ) ) ; VAR_3 . show ( TYPE_3 , STRING_1 ) ; TYPE_4 . METHOD_3 ( true ) ; VAR_4 = STRING_2 ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_2 ( ) ) ) ; VAR_3 . show ( TYPE_3 , STRING_1 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2961
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . counter = 0 ; this . VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; counter = 0 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2963
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 . id ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) . id ; },"['Move FieldWrite', 'Insert FieldRead', 'Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2964
"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 , getActivity ( ) ) ; }",public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",2965
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",2966
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable VAR_2 ) { VAR_3 = VAR_4 ; TYPE_3 . METHOD_2 ( this , STRING_1 , VAR_5 ) . show ( ) ; VAR_6 . METHOD_3 ( VAR_7 , ( ( VAR_8 ) * INT_1 ) ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable VAR_2 ) { TYPE_3 . METHOD_2 ( this , STRING_1 , VAR_5 ) . show ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",2968
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2969
"public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_3 . toString ( ) ) ; VAR_4 = null ; METHOD_4 ( ) ; }","public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , VAR_3 . toString ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",2970
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",2971
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 1 ; METHOD_2 ( 1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( 1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2972
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . start ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . start ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2973
public void METHOD_1 ( long time ) { VAR_1 = time ; },public void METHOD_1 ( long time ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2974
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 . main , VAR_1 ) ; this . VAR_1 = VAR_1 ; return true ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",2977
public TYPE_1 METHOD_1 ( java.util.Date VAR_1 ) { this . VAR_2 = VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.util.Date VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess']",2978
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_2 . METHOD_3 ( ) . toString ( ) ) ; VAR_4 = STRING_1 ; VAR_5 . METHOD_4 ( VAR_6 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_2 . METHOD_3 ( ) . toString ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2979
public void METHOD_1 ( int position ) { VAR_1 = position ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ( position != 0 ) ) ; if ( position == 0 ) VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( int position ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ( position != 0 ) ) ; if ( position == 0 ) VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2980
"public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_1 ( VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; }","public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",2981
public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( 1 ) ; VAR_2 = new TYPE_1 ( INT_1 ) ; VAR_3 = new TYPE_1 ( INT_2 ) ; java.lang.System.out.println ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeReference', 'Delete Literal', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2982
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = this ; VAR_3 . METHOD_2 ( VAR_2 , VAR_4 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { VAR_2 = this ; VAR_3 . METHOD_2 ( VAR_2 , VAR_4 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2984
"public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",2985
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2987
protected java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 ... arg ) { try { VAR_1 = 0 ; return arg [ 0 ] . METHOD_2 ( ) ; } catch ( TYPE_3 VAR_2 ) { VAR_1 = 1 ; METHOD_3 ( true ) ; } return null ; },protected java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 ... arg ) { try { return arg [ 0 ] . METHOD_2 ( ) ; } catch ( TYPE_3 VAR_2 ) { METHOD_3 ( true ) ; } return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2988
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = null ; } VAR_3 = false ; VAR_4 = 0 ; VAR_5 = true ; },public void METHOD_1 ( ) { VAR_5 = true ; VAR_3 = false ; VAR_4 = 0 ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",2989
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = METHOD_2 ( STRING_1 , VAR_3 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",2990
public void METHOD_1 ( java.util.List < TYPE_1 > nodes ) { this . nodes = nodes ; this . VAR_1 = nodes ; },public void METHOD_1 ( java.util.List < TYPE_1 > nodes ) { this . nodes = nodes ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2991
public void METHOD_1 ( java.lang.String content ) { this . source = content ; this . content = TYPE_1 . METHOD_2 ( content ) ; },public void METHOD_1 ( java.lang.String content ) { this . content = TYPE_1 . METHOD_2 ( content ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",2992
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",2993
"public void add ( final int index , final java.lang.String element ) { VAR_1 . add ( index , element ) ; ( this . index ) ++ ; }","public void add ( final int index , final java.lang.String element ) { VAR_1 . add ( index , element ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",2994
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",2995
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = false ; METHOD_1 ( VAR_1 , getConfig ( ) ) ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_1 ( VAR_1 , getConfig ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2996
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",2997
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; writer = new TYPE_2 ( params , VAR_1 . METHOD_3 ( ) ) ; writer . METHOD_1 ( VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { writer = new TYPE_2 ( params , VAR_1 . METHOD_3 ( ) ) ; writer . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",2998
public void METHOD_1 ( TYPE_1 node ) { if ( node instanceof TYPE_2 ) this . node = ( ( TYPE_2 ) ( node ) ) ; },public void METHOD_1 ( TYPE_1 node ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",2999
public void METHOD_1 ( TYPE_1 target ) { this . VAR_1 = target ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 target ) { this . VAR_1 = target ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3001
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } VAR_3 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3002
public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation']",3003
public static void init ( ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; VAR_2 = java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_5 = VAR_2 . METHOD_4 ( ) ; },public static void init ( ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3004
public void end ( ) { if ( ( VAR_1 ) != 0 ) { METHOD_1 ( ) ; VAR_1 = 0 ; } },public void end ( ) { METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3005
public void METHOD_1 ( java.lang.String str ) { VAR_1 = str ; },public void METHOD_1 ( java.lang.String str ) { data = str ; },['Update FieldWrite'],3006
public void update ( ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; } VAR_1 = TYPE_1 . METHOD_3 ( key ) ; },public void update ( ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",3008
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3010
public char METHOD_1 ( ) { if ( ( VAR_1 ) == CHAR_1 ) { ( VAR_2 ) ++ ; VAR_3 = 0 ; } else ( VAR_3 ) ++ ; return VAR_1 ; },public char METHOD_1 ( ) { if ( ( VAR_1 ) == CHAR_1 ) ( VAR_2 ) ++ ; else ( VAR_3 ) ++ ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3011
"protected void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_5 . add ( VAR_3 ) ; VAR_6 . get ( VAR_3 ) . METHOD_3 ( STRING_1 , name ) ; } }","protected void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_5 . add ( VAR_3 ) ; VAR_6 . get ( VAR_3 ) . METHOD_3 ( STRING_1 , name ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3012
public void METHOD_1 ( ) { VAR_1 . start ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 = ( VAR_2 ) - INT_1 ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",3013
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3014
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",3015
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 = TYPE_2 . METHOD_3 ( ) ; VAR_3 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_2 = TYPE_2 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3017
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3019
private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . start ( ) ; } },private void METHOD_1 ( ) { if ( VAR_1 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3022
"public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { if ( VAR_2 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( ) ; return ; } VAR_3 = new TYPE_1 ( VAR_2 , this ) ; VAR_4 . show ( VAR_1 ) ; }",public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3023
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 VAR_4 , java.lang.Object VAR_5 ) { this . VAR_5 = VAR_5 ; METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3024
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = false ; this . VAR_4 = 0 ; this . VAR_5 = 0 ; this . VAR_6 = 0 ; },public void METHOD_1 ( ) { this . VAR_1 = this ; this . VAR_2 = null ; this . VAR_3 = false ; this . VAR_4 = 0 ; this . VAR_5 = 0 ; this . VAR_6 = 0 ; },"['Insert ThisAccess', 'Delete Literal']",3025
public int METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; return TYPE_1 . METHOD_2 ( ) ; },public int METHOD_1 ( ) { VAR_1 = VAR_2 ; return TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3027
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = java.lang.String . METHOD_2 ( ( ( int ) ( ( VAR_1 . METHOD_3 ( ) ) / FLOAT_1 ) ) ) ; if ( VAR_4 ) { TYPE_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_4 ) { TYPE_2 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",3028
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; VAR_3 = INT_1 ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3029
"public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3030
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3031
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 = new TYPE_3 ( this , VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3032
public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",3033
"public void start ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = true ; java.util.List < TYPE_1 > list = METHOD_1 ( ) ; METHOD_2 ( list ) ; VAR_3 = false ; }",public void start ( ) { java.util.List < TYPE_1 > list = METHOD_1 ( ) ; METHOD_2 ( list ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3034
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = STRING_1 ; this . VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3035
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 ( ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3036
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = false ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3038
"public java.lang.String METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( context ) ; } return VAR_2 . getString ( VAR_3 , STRING_1 ) ; }","public java.lang.String METHOD_1 ( ) { return VAR_2 . getString ( VAR_3 , STRING_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3039
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3040
public void METHOD_1 ( java.lang.String url ) { if ( url != null ) this . url = url ; },public void METHOD_1 ( java.lang.String url ) { this . url = url ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",3041
public void setText ( java.lang.String text ) { this . VAR_1 = text . METHOD_1 ( ) ; this . VAR_2 = VAR_3 . length ; },public void setText ( java.lang.String text ) { this . text = text ; },"['Update FieldWrite', 'Move VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3042
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . getString ( VAR_3 , null ) ; TYPE_1 . METHOD_2 ( this , VAR_4 , VAR_5 , VAR_1 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this , VAR_4 , VAR_5 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3043
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 + STRING_1 ; VAR_3 . i ( VAR_4 , ( STRING_2 + ( VAR_2 ) ) ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_3 . i ( VAR_4 , ( STRING_2 + VAR_1 ) ) ; VAR_5 . METHOD_2 ( ( VAR_1 + STRING_1 ) ) ; }","['Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess']",3046
public void start ( ) { if ( ! ( VAR_1 . METHOD_1 ( true ) ) ) VAR_2 . METHOD_2 ( this ) ; },public void start ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( this ) ; },"['Insert Assignment', 'Move Invocation', 'Insert FieldWrite', 'Move Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",3047
"public void METHOD_1 ( java.lang.String text ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getView ( ) . METHOD_3 ( VAR_3 ) ) ) ; VAR_4 . setText ( text ) ; }","public void METHOD_1 ( java.lang.String text ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_4 . setText ( text ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3049
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; android.content.Intent intent = getIntent ( ) ; VAR_3 = ( ( java.util.ArrayList < java.lang.Boolean > ) ( intent . METHOD_3 ( STRING_1 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3050
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3051
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = INT_1 ; time = 0 ; VAR_6 . num = 0 ; VAR_7 . num = 0 ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = INT_1 ; time = 0 ; VAR_6 . num = 0 ; VAR_7 . num = 0 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3052
public void METHOD_1 ( int VAR_1 ) { VAR_2 = null ; VAR_3 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3053
public void init ( ) { METHOD_1 ( null ) ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = VAR_3 . METHOD_2 ( ) ; },"['Insert ThisAccess', 'Delete Literal', 'Delete Invocation']",3054
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",3055
public final void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) . set ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Wra', 'Delete Invocation', 'Delete Invocation']",3056
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_2 . METHOD_2 ( new TYPE_2 ( INT_1 ) ) ; METHOD_3 ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_2 . METHOD_2 ( new TYPE_2 ( INT_1 ) ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3057
private void METHOD_1 ( ) { status = - 1 ; VAR_1 . setState ( VAR_2 ) ; },private void METHOD_1 ( ) { status = - 1 ; VAR_1 . state = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3058
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 = true ; VAR_1 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3059
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3060
"protected TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 = true ; VAR_2 = null ; return new TYPE_1 ( 0 , 0 , true ) ; }","protected TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 = true ; return new TYPE_1 ( 0 , 0 , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3061
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , false ) ; VAR_6 = TYPE_5 . METHOD_3 ( ) ; return VAR_4 . METHOD_4 ( ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , false ) ; return VAR_4 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3062
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; if ( null != ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 ) ; } METHOD_4 ( ) ; }","public void METHOD_1 ( ) { if ( null != ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 ) ; } METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3063
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3064
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; if ( ( t ) != null ) t . METHOD_2 ( ) ; t = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; t . METHOD_2 ( ) ; t = null ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",3065
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; VAR_2 = false ; } },public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3066
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; VAR_1 = TYPE_1 . METHOD_4 ( ) ; VAR_2 = getIntent ( ) . METHOD_5 ( STRING_2 ) ; VAR_3 . setText ( ( ( VAR_4 ) + STRING_3 ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; VAR_2 = getIntent ( ) . METHOD_5 ( STRING_2 ) ; VAR_3 . setText ( ( ( VAR_4 ) + STRING_3 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3067
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3068
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Insert Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3069
protected void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; },protected void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3071
public void METHOD_1 ( int b ) { METHOD_2 ( ) ; VAR_1 = this ; VAR_2 . METHOD_3 ( this ) ; },public void METHOD_1 ( int b ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",3072
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; VAR_3 . METHOD_2 ( true ) ; } return super . METHOD_1 ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( true ) ; return super . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3073
public void METHOD_1 ( java.lang.String data ) { VAR_1 = false ; try { VAR_2 . METHOD_2 ( new TYPE_1 ( data ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( VAR_3 . METHOD_3 ( ) ) ; } },public void METHOD_1 ( java.lang.String data ) { try { VAR_2 . METHOD_2 ( new TYPE_1 ( data ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( VAR_3 . METHOD_3 ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3074
"public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; java.lang.String token = VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 , STRING_2 ) ; VAR_2 . METHOD_4 ( new TYPE_2 ( token ) ) ; return VAR_2 ; }","public static TYPE_1 METHOD_1 ( ) { java.lang.String token = VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 , STRING_2 ) ; VAR_2 . METHOD_4 ( new TYPE_2 ( token ) ) ; return VAR_2 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3076
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3077
void set ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 . append ( VAR_1 ) ; VAR_5 . setText ( VAR_3 ) ; VAR_6 = java.util.Calendar.getInstance ( ) . METHOD_1 ( ) ; },void set ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 . append ( VAR_1 ) ; VAR_5 . setText ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3079
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ! ( VAR_2 ) ) { VAR_3 = true ; int VAR_4 = TYPE_2 . METHOD_2 ( event ) ; VAR_5 = 0 ; return METHOD_3 ( VAR_4 , event ) ; } return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { int VAR_4 = TYPE_2 . METHOD_2 ( event ) ; VAR_5 = 0 ; return METHOD_3 ( VAR_4 , event ) ; }","['Move LocalVariable', 'Move Assignment', 'Move Return', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",3080
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = ( this . VAR_1 ) + VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator']",3081
"private void METHOD_1 ( ) throws java.io.IOException { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , this ) ; METHOD_3 ( VAR_1 ) ; }","private void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , this ) ; METHOD_3 ( VAR_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3082
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { VAR_1 . METHOD_2 ( null ) ; } VAR_3 . METHOD_3 ( ) ; VAR_4 = false ; VAR_5 = false ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { VAR_1 . METHOD_2 ( null ) ; } VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3083
public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( ( VAR_1 ) - 1 ) + ( VAR_2 . length ) ) % ( VAR_2 . length ) ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( ( VAR_1 ) - 1 ) + ( VAR_2 . length ) ) % ( VAR_2 . length ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3084
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . setEnabled ( false ) ; if ( VAR_4 ) { VAR_5 . METHOD_3 ( ) ; } VAR_4 = false ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3085
"public void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 ) ) { VAR_2 = true ; this . VAR_3 . METHOD_2 ( VAR_4 . getName ( ) , VAR_5 . getText ( ) ) ; } }","public void METHOD_1 ( ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; this . VAR_3 . METHOD_2 ( VAR_4 . getName ( ) , VAR_5 . getText ( ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3086
"private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_5 . METHOD_3 ( VAR_6 , VAR_7 ) ; METHOD_4 ( ) ; }","private void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_5 . METHOD_3 ( VAR_6 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",3087
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; VAR_3 = new java.util.HashMap < java.lang.Integer , java.lang.String > ( ) ; VAR_4 = new TYPE_1 ( ) ; }",public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3088
public boolean select ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; return ( this . VAR_3 ) == VAR_1 ; },public boolean select ( TYPE_1 VAR_1 ) { return ( this . VAR_3 ) == VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3089
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { this . VAR_2 [ i ] . METHOD_1 ( ) ; } size = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { this . VAR_2 [ i ] . METHOD_1 ( ) ; } size = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3090
private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( VAR_1 ) ; VAR_4 = METHOD_4 ( VAR_1 ) ; VAR_5 = METHOD_5 ( ) ; },private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3091
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . i ( VAR_4 , ( STRING_1 + VAR_2 ) ) ; TYPE_2 msg = new TYPE_2 ( ) ; VAR_5 = VAR_6 ; VAR_7 . obj = VAR_2 ; VAR_8 . METHOD_2 ( msg ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . i ( VAR_4 , ( STRING_1 + VAR_2 ) ) ; TYPE_2 msg = new TYPE_2 ( ) ; VAR_5 = VAR_6 ; VAR_8 . METHOD_2 ( msg ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3092
"private void METHOD_1 ( float VAR_1 , float VAR_2 , int VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = VAR_3 ; this . VAR_2 = VAR_2 ; VAR_4 = new java.util.ArrayList < > ( ) ; VAR_5 = false ; VAR_6 = false ; }","private void METHOD_1 ( float VAR_1 , float VAR_2 , int VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = VAR_3 ; this . VAR_2 = VAR_2 ; VAR_4 = new java.util.ArrayList < > ( ) ; VAR_6 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3093
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3094
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getContext ( ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_3 = METHOD_2 ( ) . getInt ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_3 = METHOD_2 ( ) . getInt ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3095
"public final void init ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) throws TYPE_3 { VAR_3 = new TYPE_4 ( STRING_1 , VAR_4 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; }","public final void init ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) throws TYPE_3 { }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3096
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , this ) ; VAR_1 = this ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , this ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",3097
"public TYPE_1 METHOD_1 ( int position ) { TYPE_2 step = VAR_1 . get ( position ) ; VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 . getId ( ) ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( int position ) { TYPE_2 step = VAR_1 . get ( position ) ; return TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 . getId ( ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",3098
public java.lang.String METHOD_1 ( ) { return this . VAR_1 = VAR_1 ; },public METHOD_1 ( java.lang.String VAR_1 ) { return this . VAR_1 = VAR_1 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete TypeReference', 'Delete FieldRead']",3099
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; this . VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = getActivity ( ) ; },"['Insert Invocation', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3100
public java.lang.String METHOD_1 ( ) { VAR_1 = true ; return VAR_2 ; },public java.lang.String METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3101
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = METHOD_2 ( VAR_2 ) ; return METHOD_3 ( VAR_1 ) ; },public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { METHOD_2 ( VAR_2 ) ; return METHOD_3 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3102
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 ) ; }","public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( getActivity ( ) , VAR_3 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3103
public void init ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( TYPE_3 . METHOD_1 ( ) ) ) ; METHOD_2 ( ) ; VAR_2 = new TYPE_4 ( ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( TYPE_3 . METHOD_1 ( ) ) ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3104
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > ( VAR_2 ) ) { this . METHOD_2 ( VAR_1 ) ; return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > ( VAR_2 ) ) { VAR_2 = VAR_1 ; return true ; } return false ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",3105
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( this ) . METHOD_4 ( VAR_2 ) ; VAR_1 = true ; } }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( this ) . METHOD_4 ( VAR_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3106
"public void METHOD_1 ( int position , int VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) VAR_2 . METHOD_4 ( position ) ; else { VAR_3 = position ; VAR_4 = VAR_1 ; } }",public void METHOD_1 ( int position ) { if ( ( VAR_2 . METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) VAR_2 . METHOD_4 ( position ) ; else VAR_3 = position ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3107
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; this . init ( this . VAR_3 , this . VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . init ( this . VAR_3 , this . VAR_4 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3108
public boolean METHOD_1 ( ) { VAR_1 = ( VAR_2 . METHOD_2 ( ) ) == 0 ; VAR_3 = ( VAR_4 . METHOD_2 ( ) ) == 0 ; return ( VAR_3 ) || ( VAR_1 ) ; },public boolean METHOD_1 ( ) { return ( VAR_3 ) || ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",3109
public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 = null ; } TYPE_1 . METHOD_3 ( this ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_3 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3111
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_1 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete Invocation']",3112
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( 0 ) ) != CHAR_1 ) this . VAR_1 = STRING_1 + VAR_1 ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = STRING_1 + VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3113
public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_1 ( STRING_1 ) ; this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( false ) ; VAR_2 . show ( ) ; },public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; VAR_1 . METHOD_4 ( false ) ; VAR_2 . show ( ) ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",3114
"public synchronized void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context , java.lang.Throwable VAR_2 ) { if ( VAR_3 ) { throw new TYPE_3 ( ) ; } VAR_4 = VAR_2 ; VAR_3 = true ; if ( ( VAR_5 ) > 0 ) { METHOD_2 ( ) ; } }","public synchronized void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context , java.lang.Throwable VAR_2 ) { if ( VAR_3 ) { throw new TYPE_3 ( ) ; } VAR_4 = VAR_2 ; if ( ( VAR_5 ) > 0 ) { METHOD_2 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3116
private void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 = VAR_3 . METHOD_4 ( ) ; VAR_5 . add ( VAR_1 ) ; },private void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 = VAR_3 . METHOD_4 ( ) ; VAR_5 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3117
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3119
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this . VAR_2 ) ; this . VAR_3 . METHOD_3 ( ) ; this . VAR_4 = false ; this . METHOD_4 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this . VAR_2 ) ; this . VAR_3 . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3121
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeReference', 'Delete LocalVariable']",3123
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 = false ; },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3124
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess']",3125
public void open ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } else if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } },public void open ( ) throws TYPE_1 { if ( ( ( VAR_1 ) == null ) || ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } },"['Insert BinaryOperator', 'Move BinaryOperator', 'Move UnaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block']",3126
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( ) ; int VAR_4 = VAR_2 . METHOD_4 ( ) ; VAR_5 = VAR_3 ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; METHOD_5 ( ) ; },"['Delete Invocation', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3127
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3128
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3129
"private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) . show ( METHOD_3 ( ) , null ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) . show ( METHOD_3 ( ) , null ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3130
"void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 view ) { this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; this . VAR_5 = view ; }","void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3131
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 , VAR_3 , this ) ; ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) . METHOD_4 ( VAR_1 ) ; VAR_5 = VAR_2 ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) . METHOD_4 ( new TYPE_1 ( METHOD_2 ( ) , VAR_2 , VAR_3 , this ) ) ; VAR_5 = VAR_2 ; METHOD_5 ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3132
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_4 = VAR_1 ; VAR_5 = 0 ; VAR_6 = VAR_2 ; METHOD_3 ( ) ; }","public void METHOD_1 ( int id , java.lang.String state ) { VAR_3 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( id , 0 , state ) ; }","['Update Parameter', 'Update Parameter', 'Insert VariableRead', 'Move Literal', 'Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3134
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 class . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_4 ( ) ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3135
private static java.lang.String start ( ) { VAR_1 = STRING_1 + ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) ; return VAR_1 ; },private static java.lang.String start ( ) { VAR_1 = STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_9 ) ; return VAR_1 ; },"['Move BinaryOperator', 'Move FieldRead', 'Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",3136
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( this ) ; super . METHOD_1 ( ) ; VAR_1 = false ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( this ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3137
public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { return STRING_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3138
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3139
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3140
private boolean METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; return new TYPE_2 ( VAR_1 ) . METHOD_2 ( ) ; },private boolean METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead']",3143
public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( android.view.View view ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3145
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_3 = null ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3146
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = new TYPE_1 ( STRING_2 ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3147
public void METHOD_1 ( TYPE_1 message ) { VAR_1 = true ; if ( VAR_2 ) { VAR_3 = message . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_2 = false ; VAR_5 = true ; VAR_6 . METHOD_4 ( ) ; } },public void METHOD_1 ( TYPE_1 message ) { VAR_1 = true ; if ( VAR_2 ) { VAR_4 . METHOD_3 ( message . METHOD_2 ( ) ) ; VAR_2 = false ; VAR_5 = true ; VAR_6 . METHOD_4 ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3148
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = build ( ) ; this . VAR_3 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = build ( ) ; VAR_2 . METHOD_1 ( VAR_3 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3149
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; this . VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3150
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; VAR_3 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3151
public synchronized void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } try { VAR_2 = VAR_3 . METHOD_2 ( 0 ) ; VAR_4 = VAR_3 . METHOD_3 ( 0 ) ; } catch ( java.io.IOException VAR_5 ) { } },public synchronized void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } try { VAR_2 = VAR_3 . METHOD_2 ( 0 ) ; } catch ( java.io.IOException VAR_5 ) { } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3152
public void METHOD_1 ( final TYPE_1 response ) { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = response . METHOD_4 ( ) . get ( 0 ) ; METHOD_5 ( VAR_2 ) ; METHOD_6 ( ) ; },public void METHOD_1 ( final TYPE_1 response ) { METHOD_2 ( false ) ; METHOD_5 ( response . METHOD_4 ( ) . get ( 0 ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3153
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( false ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3154
"public synchronized void fail ( final java.lang.Throwable VAR_1 , final boolean VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = null ; if ( VAR_2 ) { this . state = VAR_4 ; } else { this . state = VAR_5 ; } }","public synchronized void fail ( final java.lang.Throwable VAR_1 , final boolean VAR_2 ) { this . VAR_1 = VAR_1 ; if ( VAR_2 ) { this . state = VAR_4 ; } else { this . state = VAR_5 ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3155
public void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 . getString ( VAR_3 ) ) ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 . setText ( VAR_2 . getString ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3156
public TYPE_1 getValue ( ) { this . value = TYPE_1 . METHOD_1 ( ) ; return value ; },public TYPE_1 getValue ( ) { return value ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3157
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 , VAR_2 ) ; if ( ( query ) == null ) { query = VAR_3 ; VAR_4 . start ( ) ; } else { query = VAR_3 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 , VAR_2 ) ; if ( ( query ) == null ) { VAR_4 . start ( ) ; } query = VAR_3 ; }","['Move Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",3159
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( ) ; VAR_3 = VAR_3 . METHOD_3 ( METHOD_2 ( ) , ( ( METHOD_4 ( ) ) / INT_1 ) , VAR_4 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3160
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; } return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } else { return new TYPE_2 ( ) ; } },"['Update BinaryOperator', 'Insert Block', 'Move Return', 'Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",3161
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3162
"void METHOD_1 ( char VAR_1 ) { ( VAR_2 ) -- ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; ( VAR_4 ) -- ; }","void METHOD_1 ( char VAR_1 ) { ( VAR_2 ) -- ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",3163
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } TYPE_1 element = VAR_2 . value ; VAR_1 = VAR_3 ; if ( ( VAR_1 ) == null ) { end = null ; } return element ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } TYPE_1 element = VAR_2 . value ; VAR_1 = VAR_3 ; return element ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3164
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3165
protected TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { return VAR_1 ; } else { VAR_1 = VAR_2 . METHOD_3 ( ) ; return VAR_1 ; } },protected TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_3 ( ) ; },"['Insert Return', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",3166
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ; this . VAR_2 = VAR_2 ; VAR_2 . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( false ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ; VAR_2 . METHOD_3 ( this ) ; VAR_2 . METHOD_4 ( false ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3167
public void METHOD_1 ( TYPE_1 main ) { this . VAR_1 = main ; },public void METHOD_1 ( TYPE_1 main ) { this . VAR_1 = VAR_1 ; },"['Insert FieldRead', 'Delete VariableRead']",3168
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , INT_1 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) . size ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; VAR_4 = VAR_5 . METHOD_6 ( ) ; }","public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , INT_1 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) . size ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3169
"private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) , VAR_2 ) ; }","private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) , VAR_2 ) ; }","['Move Invocation', 'Update BinaryOperator', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",3170
protected void METHOD_1 ( ) { VAR_1 = - 1 ; VAR_2 = null ; },protected void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3171
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; VAR_1 = true ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_5 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_5 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3173
public void METHOD_1 ( ) { VAR_1 = true ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3174
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_3 . METHOD_3 ( 0 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",3175
"public static void METHOD_1 ( int i , int j ) { VAR_1 [ i ] [ j ] . status = VAR_2 ; }","public static void METHOD_1 ( int i , int j ) { VAR_1 [ i ] [ j ] . status = 1 ; }","['Insert Literal', 'Delete FieldRead']",3176
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 . getInt ( STRING_1 , 0 ) ; TYPE_2 . METHOD_3 ( STRING_2 , ( STRING_3 + ( VAR_4 ) ) ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( STRING_2 , ( STRING_3 + ( VAR_4 ) ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3177
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . getColor ( ) ) ; VAR_2 . METHOD_3 ( VAR_3 . getColor ( ) ) ; VAR_4 = VAR_3 . getColor ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3178
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3179
public void METHOD_1 ( java.lang.CharSequence name ) { this . name . METHOD_2 ( 0 ) ; this . VAR_1 . append ( name ) ; },public void METHOD_1 ( java.lang.StringBuilder name ) { this . name = name ; },"['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3180
public void METHOD_1 ( TYPE_1 params ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( params ) ; VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 params ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3181
"private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; return ; } VAR_1 . METHOD_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = 0 ; VAR_6 = false ; }","private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; return ; } VAR_1 . METHOD_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = 0 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3182
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_2 ; if ( ( VAR_1 ) == ( VAR_3 ) ) { ( VAR_4 ) -- ; } else { ( VAR_5 ) -- ; } } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_2 ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",3183
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; this . VAR_2 = false ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; this . VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3184
public void METHOD_1 ( int VAR_1 ) { if ( ( ( VAR_2 ) && ( VAR_3 ) ) && ( VAR_4 ) ) { VAR_5 . get ( ( VAR_1 - 1 ) ) . METHOD_1 ( ) ; ( VAR_6 ) ++ ; } },public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) VAR_5 . get ( ( VAR_1 - 1 ) ) . METHOD_1 ( ) ; },"['Move FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator']",3185
public void open ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; VAR_3 = false ; } },public void open ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3186
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; return new TYPE_1 ( VAR_1 ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",3188
"public void start ( ) { METHOD_1 ( ) ; t = new java.lang.Thread ( this , name ) ; VAR_1 = true ; VAR_2 . start ( ) ; }","public void start ( ) { METHOD_1 ( ) ; t = new java.lang.Thread ( this , name ) ; VAR_2 . start ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3189
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; VAR_3 = VAR_2 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3190
protected static synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3191
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . open ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3192
"public void METHOD_1 ( float x , float y ) { VAR_1 = VAR_2 . METHOD_2 ( x , y ) ; VAR_3 . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { VAR_3 . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3193
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( STRING_1 ) ; VAR_7 = STRING_2 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3194
public void METHOD_1 ( TYPE_1 status ) { this . status = status ; },public void METHOD_1 ( TYPE_1 status ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3195
public void METHOD_1 ( java.lang.Double VAR_1 ) { if ( VAR_1 > 0 ) { this . VAR_1 = 0.0 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",3196
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new TYPE_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",3197
"public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; if ( STRING_1 . equals ( VAR_2 ) ) { VAR_3 = VAR_4 ; } }","public synchronized void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , 0 ) ; }","['Update Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3198
public void METHOD_1 ( int index ) { final TYPE_1 VAR_1 = METHOD_2 ( index ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( int index ) { final TYPE_1 VAR_1 = METHOD_2 ( index ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3200
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3201
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = true ; isEmpty = false ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3202
public TYPE_1 METHOD_1 ( ) { float temp = ( ( ( getValue ( ) ) * INT_1 ) / INT_2 ) + INT_3 ; this . value = temp ; return this ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess']",3203
synchronized void METHOD_1 ( ) { state = VAR_1 ; VAR_2 . METHOD_2 ( ) ; },synchronized void METHOD_1 ( ) { setState ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3204
private void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; VAR_5 = new java.util.ArrayList < > ( ) ; },private void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_5 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3205
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_2 , STRING_1 , STRING_1 , INT_1 ) ; }","['Move FieldRead', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3206
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { android.view.View VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_3 instanceof TYPE_1 ) { ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_1 ( VAR_1 ) ; } },"['Update TypeReference', 'Update BinaryOperator', 'Insert TypeAccess', 'Insert TypeReference', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal']",3207
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3208
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = METHOD_4 ( ) ; VAR_5 = VAR_4 . METHOD_5 ( VAR_6 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3210
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = - 1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = 0 ; },"['Insert Literal', 'Delete Literal', 'Delete UnaryOperator']",3211
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } else { VAR_1 = true ; } METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3212
public boolean METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; if ( ! ( VAR_2 ) ) return true ; if ( VAR_3 . METHOD_1 ( ) ) { return true ; } METHOD_2 ( ) ; return true ; },public boolean METHOD_1 ( ) { if ( ! ( VAR_2 ) ) return true ; if ( VAR_3 . METHOD_1 ( ) ) { return true ; } METHOD_2 ( ) ; return true ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3213
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = this . VAR_3 . add ( VAR_4 ) ; this . VAR_5 = this . VAR_6 . add ( VAR_7 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_4 ) ; this . VAR_6 . add ( VAR_7 ) ; return this ; },"['Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",3214
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { this . VAR_2 = VAR_2 ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3215
public void METHOD_1 ( int length ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = length ; VAR_3 = true ; },public void METHOD_1 ( int length ) { VAR_2 = length ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3217
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; result = new java.util.ArrayList < > ( ) ; VAR_1 = true ; getData ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; getData ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3218
"public void METHOD_1 ( TYPE_1 event ) throws TYPE_2 { VAR_1 . init ( ) ; VAR_2 . METHOD_2 ( VAR_3 , new TYPE_3 ( ) ) ; TYPE_4 . METHOD_3 ( this , new TYPE_5 ( ) ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 event ) throws TYPE_2 { VAR_1 . init ( ) ; VAR_2 . METHOD_2 ( VAR_3 , new TYPE_3 ( ) ) ; TYPE_4 . METHOD_3 ( this , new TYPE_5 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3219
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_2 . METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_6 = null ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_2 . METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3220
void METHOD_1 ( java.lang.String str ) { VAR_1 . setText ( str ) ; VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( false ) ; VAR_4 = false ; },void METHOD_1 ( java.lang.String str ) { VAR_1 . setText ( str ) ; this . VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( false ) ; VAR_4 = false ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete TypeAccess']",3222
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 = new TYPE_1 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3225
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3226
"public void METHOD_1 ( TYPE_1 item , TYPE_2 state ) { VAR_1 = this . state ; setState ( function . METHOD_2 ( VAR_2 ) ) ; METHOD_3 ( VAR_3 . getName ( ) , this . state ) ; }","public void METHOD_1 ( TYPE_1 item , TYPE_2 state ) { setState ( function . METHOD_2 ( VAR_2 ) ) ; METHOD_3 ( VAR_3 . getName ( ) , this . state ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",3227
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Update TypeReference', 'Insert VariableRead', 'Insert ThisAccess', 'Delete VariableRead', 'Delete Invocation']",3228
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Integer id ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.String message = STRING_2 ; VAR_2 . METHOD_3 ( STRING_3 , message ) ; VAR_4 = false ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Integer id ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.String message = STRING_2 ; VAR_2 . METHOD_3 ( STRING_3 , message ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3229
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_4 = VAR_5 . getBoolean ( VAR_6 , false ) ; return VAR_7 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { return VAR_7 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3230
public void METHOD_1 ( java.lang.String [ ] response ) { if ( java.lang.Boolean . METHOD_2 ( response [ 0 ] ) ) { METHOD_3 ( ) ; VAR_1 = true ; } },public void METHOD_1 ( java.lang.String [ ] response ) { if ( java.lang.Boolean . METHOD_2 ( response [ 0 ] ) ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3231
public void METHOD_1 ( java.lang.String type ) { if ( ( VAR_1 . equals ( VAR_2 ) ) || ( VAR_1 . equals ( VAR_3 ) ) ) { this . type = type ; } else { this . VAR_4 = STRING_1 ; } },public void METHOD_1 ( java.lang.String type ) { this . type = type ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3232
public void update ( float VAR_1 ) { METHOD_1 ( ) ; VAR_2 = - INT_1 ; },public void update ( float VAR_1 ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",3235
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3236
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( 1 ) ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",3237
public TYPE_1 < TYPE_2 > METHOD_1 ( boolean value ) { this . VAR_1 = value ; if ( ! ( this . VAR_1 ) ) { VAR_2 = null ; VAR_3 = false ; } return this ; },public TYPE_1 < TYPE_2 > METHOD_1 ( boolean value ) { this . VAR_1 = value ; if ( ! ( this . VAR_1 ) ) { VAR_2 = null ; } return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3238
"public TYPE_1 METHOD_1 ( ) { TYPE_1 p = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_5 = ( VAR_5 ) + 1 ; METHOD_1 ( p ) ; return p ; }","public TYPE_1 METHOD_1 ( ) { TYPE_1 p = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; METHOD_1 ( p ) ; return p ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",3239
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = false ; VAR_5 = false ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_2 ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3240
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 == 0.0 ) { this . VAR_1 = FLOAT_1 ; } else { this . VAR_1 = VAR_1 ; } METHOD_2 ( ) ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",3241
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println = VAR_1 ; },public static void main ( java.lang.String [ ] args ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3243
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( 1 ) ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( 1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3244
private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = true ; if ( VAR_2 ) METHOD_3 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( VAR_2 ) METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3245
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3246
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 = ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) && ( ( VAR_3 ) == 1 ) ; return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) && ( ( VAR_3 ) == 1 ) ) { VAR_2 = true ; } else { VAR_2 = false ; } return false ; }","['Insert If', 'Move BinaryOperator', 'Insert Block', 'Insert Block', 'Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete Assignment']",3247
private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3248
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3249
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 , null ) ; VAR_4 = new TYPE_3 ( VAR_5 , VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 , null ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3250
"public boolean METHOD_1 ( java.lang.String query ) { VAR_1 = VAR_2 . trim ( ) ; VAR_3 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + query ) ) ; VAR_4 . METHOD_4 ( 0 ) ; METHOD_5 ( ) ; return true ; }","public boolean METHOD_1 ( java.lang.String query ) { VAR_3 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + query ) ) ; VAR_4 . METHOD_4 ( 0 ) ; METHOD_5 ( VAR_2 . trim ( ) ) ; return true ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3251
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_3 = true ; METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3252
protected void METHOD_1 ( TYPE_1 result ) { if ( result == null ) { } else { VAR_1 . METHOD_2 ( result ) ; } VAR_2 = false ; VAR_3 . setText ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 result ) { if ( result == null ) { } else { VAR_1 . METHOD_2 ( result ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3253
"protected void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( context , VAR_2 , VAR_3 ) . show ( ) ; VAR_4 = new TYPE_2 ( context ) ; VAR_4 . METHOD_3 ( true ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","protected void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( context , VAR_2 , VAR_3 ) . show ( ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",3254
public void add ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = false ; } if ( VAR_4 ) { VAR_4 = false ; } },public void add ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; } if ( VAR_4 ) { VAR_4 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3255
private static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; },private static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3256
public void METHOD_1 ( int status ) { if ( ( this . status ) == null ) { this . status = new TYPE_1 ( status ) ; } else { this . VAR_1 . set ( status ) ; } },public void METHOD_1 ( int status ) { this . VAR_1 . set ( status ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",3257
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; VAR_5 = VAR_6 ; VAR_7 = true ; VAR_8 = STRING_1 ; VAR_9 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; VAR_5 = VAR_6 ; VAR_7 = true ; VAR_8 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3258
public final void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; } else { VAR_2 = null ; } },public final void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Move Assignment', 'Insert ThisAccess', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3259
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = null ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3260
public void METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) { VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_3 = true ; } VAR_6 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_6 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3261
"public TYPE_1 METHOD_1 ( int count ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return METHOD_3 ( count , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( int count ) { return METHOD_3 ( count , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3262
"public java.lang.StringBuilder METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 ) { return ( ( VAR_3 ) && ( ! ( VAR_3 = false ) ) ? VAR_1 : VAR_4 . append ( VAR_5 ) ) . append ( java.lang.String . METHOD_2 ( VAR_2 ) ) ; }","public java.lang.StringBuilder METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 ) { return ( ( VAR_4 . length ( ) ) == 0 ? VAR_1 : VAR_4 . append ( VAR_5 ) ) . append ( java.lang.String . METHOD_2 ( VAR_2 ) ) ; }","['Update BinaryOperator', 'Insert Invocation', 'Insert Literal', 'Insert TypeAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete UnaryOperator']",3263
public TYPE_1 METHOD_1 ( byte [ ] key ) { this . key = key ; this . VAR_1 = ( ( short ) ( VAR_2 . length ) ) ; return this ; },public TYPE_1 METHOD_1 ( byte [ ] key ) { this . key = key ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Assignment']",3264
public void METHOD_1 ( int position ) { VAR_1 = position ; VAR_2 = position % ( VAR_3 . size ( ) ) ; METHOD_2 ( ) ; },public void METHOD_1 ( int position ) { VAR_2 = position % ( VAR_3 . size ( ) ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3265
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) instanceof TYPE_1 ) && ( ( VAR_2 ) == null ) ) { VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; } VAR_1 = null ; VAR_3 = null ; },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) instanceof TYPE_1 ) && ( ( VAR_2 ) == null ) ) { VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; } VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3266
public void setText ( int VAR_1 ) { this . number . METHOD_1 ( VAR_1 ) ; setText ( java.lang.Integer.toString ( VAR_1 ) ) ; },public void setText ( int VAR_1 ) { this . number = VAR_1 ; setText ( java.lang.Integer.toString ( VAR_1 ) ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3267
public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { VAR_2 = null ; this . VAR_1 = null ; return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 = null ; return true ; } return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3268
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; VAR_4 = 0 ; VAR_5 = true ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3269
public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ 0 ] ) ; VAR_1 = METHOD_3 ( VAR_1 ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ 0 ] ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3270
public void METHOD_1 ( java.lang.String c ) { TYPE_1 VAR_1 = new TYPE_1 ( c ) ; VAR_2 = VAR_3 ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . add ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String c ) { TYPE_1 VAR_1 = new TYPE_1 ( c ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . add ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3272
protected void METHOD_1 ( ) { VAR_1 = false ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3273
public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { try { new TYPE_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",3274
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3275
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int count , int VAR_2 ) { VAR_3 = METHOD_2 ( ) ; VAR_4 = VAR_5 . length ( ) ; }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int count , int VAR_2 ) { VAR_3 = METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3276
private void METHOD_1 ( int VAR_1 ) { VAR_2 += ( VAR_3 ) * VAR_1 ; VAR_2 = ( VAR_2 ) % INT_1 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; METHOD_2 ( ) ; },private void METHOD_1 ( int VAR_1 ) { VAR_2 += ( VAR_3 ) * VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",3277
public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 = false ; this . VAR_2 = true ; if ( ! ( this . VAR_3 . METHOD_2 ( ) ) ) this . VAR_3 . METHOD_3 ( ) . METHOD_4 ( 0 ) ; },public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 = false ; this . VAR_3 . METHOD_1 ( ) ; },"['Update Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",3278
"public void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { this . VAR_3 = VAR_4 ; this . VAR_5 = VAR_6 ; this . VAR_7 = VAR_8 ; this . VAR_9 = VAR_10 ; this . VAR_11 = VAR_2 ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_4 ; this . VAR_5 = VAR_6 ; this . VAR_7 = VAR_8 ; this . VAR_9 = VAR_10 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3279
"private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ( ( VAR_3 ) + ( count ) ) , VAR_4 class , this , this ) ; METHOD_2 ( VAR_2 ) ; }","private void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ( ( VAR_3 ) + ( count ) ) , VAR_4 class , this , this ) ; METHOD_2 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3280
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3281
public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3282
public int format ( int VAR_1 ) { if ( VAR_1 > 0 ) { VAR_2 . format ( VAR_1 ) ; VAR_3 = new TYPE_1 ( VAR_1 ) ; VAR_4 = new TYPE_2 ( VAR_3 ) ; return 0 ; } return - 1 ; },public int format ( int VAR_1 ) { if ( VAR_1 > 0 ) { VAR_2 . format ( VAR_1 ) ; return 0 ; } return - 1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3283
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( new android.content.Intent ( VAR_2 , VAR_4 class ) ) ; VAR_5 = false ; }","public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( new android.content.Intent ( VAR_2 , VAR_4 class ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3284
public void METHOD_1 ( ) { android.view.View view = getView ( ) ; if ( view != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( view . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( null ) ; } VAR_3 = null ; },public void METHOD_1 ( ) { android.view.View view = getView ( ) ; if ( view != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( view . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( null ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3285
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = true ; VAR_4 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3286
public TYPE_1 METHOD_1 ( TYPE_2 size ) { VAR_1 = VAR_2 ; height = VAR_3 . height ; VAR_4 = null ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 size ) { VAR_1 = VAR_2 ; height = VAR_3 . height ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3287
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_5 = VAR_1 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3288
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int index ) { VAR_3 . x = VAR_4 . x ; VAR_3 . y = VAR_4 . y ; VAR_5 = index ; VAR_6 . METHOD_2 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . x = VAR_4 . x ; VAR_3 . y = VAR_4 . y ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3289
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3290
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; TYPE_2 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( VAR_3 ) ; TYPE_2 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3291
public void METHOD_1 ( ) { error = 0 ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = true ; },public void METHOD_1 ( ) { error = 0 ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3293
public void METHOD_1 ( ) throws java.lang.Exception { android.content.Context context = VAR_1 . getContext ( ) ; VAR_2 = ( ( TYPE_1 ) ( context . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = new TYPE_2 ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3294
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3295
"private void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = intent . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_2 , VAR_4 class ) ; VAR_5 = true ; }","private void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = intent . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_1 . METHOD_3 ( VAR_2 , VAR_4 class ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3296
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; this . VAR_1 = VAR_1 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3297
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = null ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3298
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . getContext ( ) ) ; METHOD_3 ( view ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_3 ( view ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3299
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3300
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3303
"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { VAR_3 = true ; if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; } this . VAR_2 . METHOD_2 ( VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_3 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",3304
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 = true ; VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_5 . add ( VAR_3 ) ; } this . listener = listener ; METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( TYPE_1 listener ) { VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_5 . add ( VAR_3 ) ; } this . listener = listener ; METHOD_2 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3305
public void METHOD_1 ( ) { size = 0 ; VAR_1 = 0 ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { size = 0 ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3306
"public int METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; if ( ( VAR_3 . METHOD_3 ( ) ) > INT_1 ) VAR_2 = 0 ; return VAR_2 ; }","public int METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3307
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",3308
public static void init ( android.content.Context context ) { VAR_1 = TYPE_1 . METHOD_1 ( context ) ; },public static void init ( android.content.Context context ) { TYPE_1 . METHOD_1 ( context ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3309
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 , new java.util.ArrayList < > ( ) ) ; VAR_3 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 , new java.util.ArrayList < > ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3310
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( 0 ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3311
public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 . values ( ) ; VAR_4 = VAR_5 . values ( ) ; VAR_6 = VAR_7 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 . values ( ) ; VAR_6 = VAR_7 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3312
"public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = 1.0F ; } else { VAR_2 = 0 ; } if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( VAR_2 , VAR_2 ) ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = 1.0F ; } else { VAR_2 = 0 ; } if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( VAR_2 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3313
void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = true ; },void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3314
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this , VAR_4 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3315
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , long VAR_3 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; this . VAR_3 = VAR_3 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3316
public synchronized void METHOD_1 ( ) { if ( ( ! ( VAR_1 ) ) && ( VAR_2 ) ) this . VAR_3 = METHOD_2 ( ) ; VAR_2 = false ; },public synchronized void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) this . VAR_3 = METHOD_2 ( ) ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3317
"public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . main = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) , STRING_2 ) ; VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 class ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; }",public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . main = new TYPE_1 ( ) ; },"['Insert Assignment', 'Move FieldWrite', 'Insert ConstructorCall', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3318
public void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; METHOD_2 ( intent ) ; VAR_1 = true ; },public void METHOD_1 ( android.content.Intent intent ) { super . METHOD_1 ( intent ) ; METHOD_2 ( intent ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3319
public void METHOD_1 ( float y ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_1 = y ; } },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update Parameter', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3320
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = position ; android.content.Intent intent = new android.content.Intent ( VAR_3 , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_6 . getId ( ) ) ; VAR_3 . METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_3 , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_6 . getId ( ) ) ; VAR_3 . METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3321
"private void METHOD_1 ( ) { if ( ( ! ( VAR_1 . isEmpty ( answer ) ) ) && ( VAR_1 . isEmpty ( VAR_2 ) ) ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_2 , answer ) ; } }","private void METHOD_1 ( ) { if ( ( ! ( VAR_1 . isEmpty ( answer ) ) ) && ( VAR_1 . isEmpty ( VAR_2 ) ) ) { VAR_3 . METHOD_2 ( VAR_2 , answer ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3322
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3323
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; if ( VAR_1 != null ) { VAR_2 = VAR_3 . getInt ( VAR_4 ) ; VAR_5 = 1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; if ( VAR_1 != null ) { VAR_2 = VAR_3 . getInt ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3324
"void METHOD_1 ( TYPE_1 target ) { for ( TYPE_2 VAR_1 : VAR_2 . values ( ) ) { VAR_3 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } VAR_4 = null ; target . METHOD_1 ( ) ; }","void METHOD_1 ( TYPE_1 target ) { for ( TYPE_2 VAR_1 : VAR_2 . values ( ) ) { VAR_3 . put ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } target . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3325
"public void init ( ) { VAR_1 = java.util.Arrays.asList ( true , true , true , true , true , true , true , true , true , true ) ; VAR_2 = VAR_3 . METHOD_1 ( ) ; }","public void init ( ) { VAR_1 = java.util.Arrays.asList ( true , true , true , true , true , true , true , true , true , true ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3326
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = null ; VAR_4 . METHOD_2 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = null ; VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3328
"public void METHOD_1 ( int position , java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_2 . METHOD_2 ( position , VAR_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( int position , java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( position , VAR_1 ) ; METHOD_3 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3329
public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",3330
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { VAR_3 = false ; if ( count > 0 ) { VAR_4 = true ; } else { VAR_3 = false ; } }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { VAR_3 = false ; VAR_4 = true ; }","['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3331
public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = TYPE_3 . METHOD_4 ( STRING_1 ) ; VAR_5 = true ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = TYPE_3 . METHOD_4 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3332
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_3 ( ) ; },"['Move VariableRead', 'Delete Invocation']",3333
protected void METHOD_1 ( final TYPE_1 source ) { super . METHOD_1 ( source ) ; VAR_1 = source . METHOD_2 ( ) ; },protected void METHOD_1 ( final TYPE_1 source ) { super . METHOD_1 ( source ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3334
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 ) ; VAR_3 = true ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3335
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = new TYPE_3 [ INT_1 ] ; VAR_4 = new TYPE_3 [ INT_1 ] ; VAR_5 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = new TYPE_3 [ INT_1 ] ; VAR_4 = new TYPE_3 [ INT_1 ] ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3336
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; VAR_3 = - 1 ; TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",3337
"public void METHOD_1 ( TYPE_1 p , int VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 . put ( VAR_9 . getName ( ) , VAR_1 ) ; METHOD_2 ( p ) ; }","public void METHOD_1 ( TYPE_1 p , int VAR_1 ) { VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 . put ( VAR_9 . getName ( ) , VAR_1 ) ; METHOD_2 ( p ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3338
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; },"['Insert ConstructorCall', 'Move ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",3339
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( VAR_3 ) ; intent . METHOD_2 ( VAR_4 ) ; VAR_5 = 0 ; METHOD_3 ( ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_4 ( intent ) ; }","['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",3340
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3341
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = new TYPE_2 ( ) ; METHOD_4 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = new TYPE_2 ( ) ; METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3342
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3343
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3344
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( true ) ; if ( ( VAR_1 ) == null ) { return ; } VAR_2 = true ; METHOD_3 ( ) ; },public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( true ) ; if ( ( VAR_1 ) == null ) { return ; } METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3345
public void METHOD_1 ( java.lang.String VAR_1 ) { this . answer = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . answer = answer ; },"['Insert FieldRead', 'Delete VariableRead']",3346
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3347
"public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ; VAR_3 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 name , TYPE_2 VAR_1 ) { VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3348
public void METHOD_1 ( int index ) { VAR_1 = VAR_2 . METHOD_2 ( index ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . setText ( VAR_5 . toString ( ) ) ; VAR_6 = index ; },public void METHOD_1 ( int index ) { VAR_1 = VAR_2 . METHOD_2 ( index ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . setText ( VAR_5 . toString ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3349
private void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3350
public void METHOD_1 ( ) { time = new TYPE_1 ( ) ; VAR_1 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( VAR_3 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { time = new TYPE_1 ( ) ; VAR_1 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; },"['Update ConstructorCall', 'Delete FieldRead', 'Delete Invocation']",3351
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = ( ( TYPE_4 ) ( getView ( ) . METHOD_2 ( VAR_5 ) ) ) ; return VAR_1 . METHOD_3 ( VAR_6 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_3 ( VAR_6 , VAR_2 , false ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3353
"public void METHOD_1 ( double min , double VAR_1 , boolean VAR_2 ) { this . min = min ; this . VAR_1 = VAR_1 ; if ( VAR_2 ) { return ; } METHOD_2 ( VAR_3 , min , VAR_1 ) ; }","public void METHOD_1 ( double min , double VAR_1 ) { this . min = min ; this . VAR_1 = VAR_1 ; this . format = null ; METHOD_2 ( VAR_3 , min , VAR_1 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If']",3354
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; this . METHOD_2 ( intent ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; VAR_5 = 0 ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; this . METHOD_2 ( intent ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3355
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( STRING_1 ) ; VAR_7 = 0 ; VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3356
public void METHOD_1 ( java.lang.String msg ) { VAR_1 = true ; },public void METHOD_1 ( java.lang.String msg ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3357
"protected void METHOD_1 ( TYPE_1 [ ] VAR_1 , int index , TYPE_2 VAR_2 ) { TYPE_1 t = VAR_1 [ index ] ; VAR_3 = 0.0F ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; init . METHOD_1 ( t , VAR_8 , VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 [ ] VAR_1 , int index , TYPE_2 VAR_2 ) { TYPE_1 t = VAR_1 [ index ] ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; init . METHOD_1 ( t , VAR_8 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3358
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( list ) ; TYPE_1 . METHOD_3 ( list ) ; VAR_2 = true ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( list ) ; TYPE_1 . METHOD_3 ( list ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3359
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3360
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3361
public void METHOD_1 ( java.lang.String query ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( query ) ; } else { VAR_1 = false ; } },public void METHOD_1 ( java.lang.String query ) { VAR_2 . METHOD_2 ( query ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3362
private void METHOD_1 ( ) { if ( VAR_1 ) { value = VAR_2 ; VAR_1 = false ; } else { METHOD_2 ( ) ; } VAR_3 = true ; add = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; },private void METHOD_1 ( ) { value = VAR_2 ; VAR_3 = true ; add = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",3363
public void update ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != 0 ) { this . VAR_3 = VAR_2 ; VAR_4 = TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( ) ) ; } },public void update ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != 0 ) { VAR_3 = VAR_2 ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3364
public void METHOD_1 ( ) { state = null ; VAR_1 = true ; VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( ) { state = null ; VAR_1 = true ; VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3365
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( false , true ) ) { VAR_2 . METHOD_3 ( this ) ; } }",public synchronized void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this ) ; VAR_2 = null ; } },"['Insert Wra', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Invocation']",3367
"public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_4 ( this ) ; } return VAR_1 ; }","public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { return new TYPE_4 ( this ) ; }","['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",3368
"public void METHOD_1 ( int error ) { if ( ( error == ( VAR_1 ) ) || ( error == ( VAR_2 ) ) ) { status = VAR_3 ; METHOD_2 ( ) ; } TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + error ) ) ; }","public void METHOD_1 ( int error ) { if ( ( error == ( VAR_1 ) ) || ( error == ( VAR_2 ) ) ) { METHOD_2 ( ) ; } TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + error ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3370
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3371
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3373
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = STRING_1 ; },"['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Insert FieldRead', 'Insert ThisAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",3374
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = INT_2 ; VAR_3 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = INT_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3375
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3376
public void handle ( TYPE_1 event ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 = ( VAR_3 . METHOD_4 ( ) ) - 1 ; VAR_5 = VAR_3 . METHOD_4 ( ) ; },public void handle ( TYPE_1 event ) { VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3377
public static TYPE_1 METHOD_1 ( ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; } return VAR_1 ; t = VAR_3 ; },public static TYPE_1 METHOD_1 ( ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3378
public void set ( TYPE_1 VAR_1 ) { if ( ( position ) == 0 ) { VAR_2 = VAR_3 ; } VAR_4 . data = VAR_1 ; },public void set ( TYPE_1 VAR_1 ) { VAR_4 . data = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3380
"public static void start ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_4 class ) ; VAR_1 . METHOD_1 ( intent ) ; }","public static void start ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_4 class ) ; VAR_1 . METHOD_1 ( intent ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3381
private void open ( ) throws TYPE_1 { VAR_1 = true ; VAR_2 = VAR_3 . METHOD_1 ( ) ; },private void open ( ) throws TYPE_1 { VAR_2 = VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3382
public void METHOD_1 ( ) { size = 0 ; first = null ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { first = null ; VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3383
public void METHOD_1 ( ) { if ( this . METHOD_2 ( ) ) { this . data = TYPE_1 . METHOD_3 ( TYPE_2 ) ; return ; } this . data = TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( this . value ( ) ) ) ; },public void METHOD_1 ( ) { if ( this . METHOD_2 ( ) ) return ; this . data = TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( this . value ( ) ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3384
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = VAR_5 = VAR_6 = 0 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment']",3385
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = TYPE_3 . METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3386
public static void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; else VAR_1 = null ; },public static void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",3387
private double METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 / ( VAR_3 [ VAR_4 ] ) ; return VAR_2 ; },private double METHOD_1 ( double VAR_1 ) { return VAR_1 / ( VAR_3 [ VAR_4 ] ) ; },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",3388
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = false ; assertTrue ( VAR_1 . METHOD_2 ( ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; assertTrue ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3389
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3390
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3391
public void METHOD_1 ( java.lang.String id ) { this . id = id ; },public void METHOD_1 ( java.lang.String id ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3392
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; VAR_8 = null ; VAR_9 = null ; VAR_10 = null ; }","public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; VAR_8 = null ; VAR_9 = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3393
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = ( VAR_3 . size ( ) ) - INT_1 ; METHOD_3 ( new TYPE_1 ( ) { public void METHOD_1 ( ) { METHOD_4 ( VAR_4 ) ; } } , INT_2 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( new TYPE_1 ( ) { public void METHOD_1 ( ) { METHOD_4 ( VAR_4 ) ; } } , INT_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",3395
"public void METHOD_1 ( TYPE_1 msg ) { if ( ( VAR_1 ) == 1 ) { VAR_2 = false ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; } }","public void METHOD_1 ( TYPE_1 msg ) { if ( ( VAR_1 ) == 1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3396
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( item ) ; if ( ( VAR_2 ) == null ) VAR_2 = ( ( TYPE_1 ) ( getActivity ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( item ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3397
public TYPE_1 METHOD_1 ( ) { this . height = 0 ; this . VAR_1 = null ; VAR_2 = VAR_3 ; return this ; },public TYPE_1 METHOD_1 ( ) { this . height = 0 ; this . VAR_1 = null ; this . VAR_2 = null ; return this ; },"['Insert Literal', 'Insert ThisAccess', 'Delete FieldRead']",3399
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = true ; this . METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3400
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . show ( METHOD_3 ( ) , VAR_5 ) ; }","protected void METHOD_1 ( ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . show ( METHOD_3 ( ) , VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3401
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",3402
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_2 = 0 ; VAR_3 = VAR_4 ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_3 = VAR_4 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3403
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 ) ; else { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",3404
public void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { TYPE_1 VAR_2 = VAR_1 . remove ( ) ; VAR_2 . METHOD_2 ( ) ; } else { VAR_3 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { TYPE_1 VAR_2 = VAR_1 . remove ( ) ; VAR_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",3405
public void METHOD_1 ( java.util.LinkedList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.LinkedList < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3406
protected void init ( ) { startTime = TYPE_1 . METHOD_1 ( ) ; },protected void init ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3408
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; java.util.Collection < TYPE_1 > VAR_2 ; VAR_2 = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { VAR_3 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_2 ; VAR_2 = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { VAR_3 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3410
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; VAR_4 = STRING_1 ; VAR_5 . setText ( STRING_1 ) ; android.content.Intent VAR_6 = new android.content.Intent ( this , VAR_7 class ) ; METHOD_3 ( VAR_6 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; android.content.Intent VAR_6 = new android.content.Intent ( this , VAR_7 class ) ; METHOD_3 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3412
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; VAR_4 = - 1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; VAR_4 = true ; }","['Insert Literal', 'Delete Literal', 'Delete UnaryOperator']",3413
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3414
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3415
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this . METHOD_3 ( ) ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; },"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , this . METHOD_3 ( ) ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; }","['Move Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",3416
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3417
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3419
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_3 = 0 ; VAR_4 = VAR_5 ; VAR_6 = 0 ; TYPE_1 . METHOD_2 ( VAR_7 , STRING_1 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_3 = 0 ; VAR_4 = VAR_5 ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3420
public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { if ( ( out ) == null ) { out = VAR_2 . append ( path ) ; } out . METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { out . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3421
public void METHOD_1 ( final java.util.List < TYPE_1 > data ) { VAR_1 = true ; VAR_2 . METHOD_2 ( data ) ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( final java.util.List < TYPE_1 > data ) { VAR_2 . METHOD_2 ( data ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3422
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 < TYPE_2 > METHOD_3 ( ) ) ; VAR_3 = METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 < TYPE_2 > METHOD_3 ( ) ) ; return true ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3423
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . show ( ) ; },public void METHOD_1 ( ) { VAR_2 . show ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3424
"public void METHOD_1 ( android.view.View VAR_1 ) { intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 . title ) ; intent . METHOD_2 ( ""id"" , VAR_3 . id ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 . title ) ; intent . METHOD_2 ( ""id"" , VAR_3 . id ) ; METHOD_3 ( intent ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",3425
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { METHOD_2 ( ) ; VAR_1 = true ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3426
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = new TYPE_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3427
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; if ( VAR_3 ) { VAR_4 . METHOD_3 ( ) ; VAR_5 = true ; } METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; if ( VAR_3 ) { VAR_4 . METHOD_3 ( ) ; } METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3428
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 = VAR_1 ; this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",3429
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = VAR_4 new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , 0 , INT_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_4 new TYPE_3 ( ) , 0 , INT_1 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess']",3430
"public java.lang.String METHOD_1 ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; synchronized ( VAR_3 ) { VAR_4 . METHOD_2 ( VAR_2 ) ; } VAR_2 = new TYPE_1 ( ) ; return VAR_5 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 . info ( STRING_1 , VAR_2 ) ; synchronized ( VAR_3 ) { } return VAR_5 ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3431
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , false ) ; this . VAR_3 . METHOD_2 ( VAR_2 ) ; ++ ( VAR_4 ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , false ) ; this . VAR_3 . METHOD_2 ( VAR_2 ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete UnaryOperator']",3432
public void init ( ) { VAR_1 = 0 ; METHOD_1 ( VAR_1 ) ; },public void init ( ) { METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3433
"public void METHOD_1 ( ) { if ( ( VAR_1 . getValue ( ) ) >= INT_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 . setEnabled ( true ) ; } METHOD_3 ( ) ; update ( VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( ) { METHOD_3 ( ) ; update ( VAR_4 , VAR_5 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",3434
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = true ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_5 . METHOD_3 ( this ) ; VAR_5 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_5 . METHOD_3 ( this ) ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3435
"public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } finally { VAR_5 = null ; } }","public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3436
public synchronized void METHOD_1 ( ) { if ( VAR_1 . equals ( VAR_2 ) ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) ; return ; } status = VAR_4 ; METHOD_2 ( VAR_5 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_5 ) ; },"['Delete Wra', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3437
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_1 ( new TYPE_3 ( ) ) ; METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ConstructorCall', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3439
"protected java.util.List < TYPE_1 > METHOD_1 ( ) { VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) ; return VAR_2 < TYPE_1 > METHOD_3 ( new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( VAR_1 ) , new TYPE_4 ( ) ) ; }","protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_2 < TYPE_1 > METHOD_3 ( new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( VAR_1 ) , new TYPE_4 ( ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",3440
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3441
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 ; METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3443
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( ) ) { start ( ) ; VAR_2 = false ; } else { METHOD_3 ( VAR_1 ) ; start ( ) ; VAR_2 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( ) ) { start ( ) ; VAR_2 = false ; } else { METHOD_3 ( VAR_1 ) ; start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3444
public synchronized void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },public synchronized void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3445
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . show ( this , VAR_1 ) ; VAR_3 = VAR_1 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . show ( this , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3446
public void METHOD_1 ( ) { this . VAR_1 = 0 ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3447
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3448
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 , VAR_4 ) ; VAR_5 = true ; }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3450
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { this . VAR_4 = VAR_2 ; this . VAR_3 = VAR_3 ; METHOD_2 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_2 ( VAR_1 , VAR_5 ) ; }","['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3451
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",3452
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_5 ) ; VAR_6 . add ( VAR_4 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { ( VAR_5 ) ++ ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_5 ) ; VAR_6 . add ( VAR_4 ) ; }","['Insert UnaryOperator', 'Insert FieldWrite']",3453
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 = METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3454
"public void METHOD_1 ( double min , double VAR_1 , boolean VAR_2 ) { this . VAR_3 = min ; this . VAR_4 = VAR_1 ; if ( VAR_2 ) { return ; } METHOD_2 ( VAR_5 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( double min , double VAR_1 , boolean VAR_2 ) { this . VAR_3 = min ; this . VAR_4 = VAR_1 ; this . format = null ; if ( VAR_2 ) { return ; } METHOD_2 ( VAR_5 , VAR_3 , VAR_4 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",3455
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = ( VAR_3 ) + ( VAR_1 / INT_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",3456
void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = null ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; METHOD_3 ( true ) ; },void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = null ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; METHOD_3 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3457
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",3458
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; VAR_4 = false ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3459
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = 0 ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_5 . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3461
"public static TYPE_1 METHOD_1 ( java.lang.CharSequence text , TYPE_2 VAR_1 , int type , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = text ; VAR_5 = VAR_1 ; VAR_6 = type ; VAR_7 = VAR_2 ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( java.lang.CharSequence text , TYPE_2 VAR_1 , int type , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = text ; VAR_5 = VAR_1 ; VAR_6 = type ; return VAR_3 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3462
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( false ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( false ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",3463
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class , new TYPE_2 ( ) ) . METHOD_4 ( ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3464
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; return true ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 . METHOD_2 ( ) ; return true ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3465
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3466
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",3467
public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_1 ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3468
public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { context . METHOD_3 ( VAR_2 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; context . METHOD_3 ( VAR_2 ) ; state = null ; } },"['Move Invocation', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete Wra', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",3469
public void METHOD_1 ( ) { this . VAR_1 = null ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",3470
public void METHOD_1 ( java.lang.String id ) { this . VAR_1 = null ; this . id = id ; },public void METHOD_1 ( java.lang.String id ) { this . id = id ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3471
public void METHOD_1 ( java.lang.String url ) { VAR_1 = url ; },public void METHOD_1 ( java.lang.String url ) { this . url = url ; },"['Update FieldWrite', 'Insert ThisAccess']",3474
public void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3476
void METHOD_1 ( int id ) { VAR_1 = id ; VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },void METHOD_1 ( int id ) { VAR_1 = id ; VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3477
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = true ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3478
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 ; VAR_2 = null ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_2 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",3480
public java.lang.String METHOD_1 ( final boolean VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; return VAR_3 . toString ( ) ; },public java.lang.String METHOD_1 ( final boolean VAR_1 ) { METHOD_2 ( ) ; VAR_2 = VAR_1 ; return VAR_3 . toString ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3482
"public TYPE_1 METHOD_1 ( int count , long VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = count ; this . VAR_4 = VAR_1 ; this . VAR_5 = VAR_2 ; return this ; }","public TYPE_1 METHOD_1 ( int count , long VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = count ; this . VAR_5 = VAR_2 ; return this ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3484
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3485
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( this ) ; },protected void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3486
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( new TYPE_2 ( VAR_6 , VAR_7 ) ) ; VAR_8 . METHOD_2 ( VAR_9 ) ; VAR_10 = - 1 ; VAR_11 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( new TYPE_2 ( VAR_6 , VAR_7 ) ) ; VAR_8 . METHOD_2 ( VAR_9 ) ; VAR_10 = - 1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3487
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3488
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3489
"public void METHOD_1 ( int x , int y ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 [ TYPE_1 . METHOD_2 ( x , y ) ] = null ; METHOD_3 ( TYPE_1 . METHOD_2 ( x , y ) , null ) ; }","public void METHOD_1 ( int x , int y ) { VAR_3 [ TYPE_1 . METHOD_2 ( x , y ) ] = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",3490
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > path ) { this . path = path ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > path ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3492
public void update ( int VAR_1 ) { ( this . x ) ++ ; if ( ( this . x ) > INT_1 ) { this . x = 0 ; } this . VAR_2 . METHOD_1 ( ) ; },public void update ( int VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3493
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; METHOD_2 ( ) ; VAR_3 = list ; TYPE_1 . METHOD_3 ( context , token , VAR_4 ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",3494
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( VAR_3 ) ) { VAR_4 . setText ( STRING_1 ) ; VAR_3 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( VAR_3 ) ) { VAR_4 . setText ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3495
public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( this ) ; } catch ( TYPE_1 VAR_2 ) { } } VAR_3 = false ; VAR_4 . METHOD_3 ( ) ; },public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( this ) ; } catch ( TYPE_1 VAR_2 ) { } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3497
"public void METHOD_1 ( int message , TYPE_1 VAR_1 ) { if ( ( ( ! ( VAR_2 ) ) || ( VAR_1 != VAR_3 ) ) || ( message != ( VAR_4 ) ) ) { return ; } VAR_2 = false ; METHOD_2 ( ) ; }","public void METHOD_1 ( int message , TYPE_1 VAR_1 ) { if ( ( VAR_1 != VAR_3 ) || ( message != ( VAR_4 ) ) ) { return ; } METHOD_2 ( ) ; }","['Move BinaryOperator', 'Move BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3498
public boolean METHOD_1 ( ) { METHOD_2 ( false ) ; VAR_1 = - 1 ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; offset = 1 ; return false ; },public boolean METHOD_1 ( ) { METHOD_2 ( false ) ; return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3499
public void METHOD_1 ( java.lang.String VAR_1 ) { },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3500
"public void METHOD_1 ( final java.lang.CharSequence VAR_1 , TYPE_1 VAR_2 ) { this . VAR_2 = VAR_2 ; VAR_3 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { setText ( VAR_1 ) ; METHOD_4 ( ) ; } } ) ; }",public void METHOD_1 ( final java.lang.CharSequence VAR_1 ) { VAR_3 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { setText ( VAR_1 ) ; } } ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",3501
public final void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = new TYPE_2 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = TYPE_3 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; } },public final void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = new TYPE_2 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; this . VAR_3 = VAR_2 . METHOD_5 ( VAR_1 ) ; } },"['Move Invocation', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",3502
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_3 ; ( VAR_4 ) -- ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_3 ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",3503
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( FLOAT_1 , FLOAT_2 , FLOAT_3 , 1 ) ; VAR_3 = new TYPE_4 ( ) ; VAR_4 = new TYPE_5 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( FLOAT_1 , FLOAT_2 , FLOAT_3 , 1 ) ; VAR_3 = new TYPE_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3504
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , this ) ; VAR_1 = true ; METHOD_3 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_4 ( ) ; METHOD_3 ( VAR_4 ) ; METHOD_3 ( VAR_5 ) ; METHOD_3 ( VAR_6 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , this ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_4 ( ) ; METHOD_3 ( VAR_4 ) ; METHOD_3 ( VAR_5 ) ; METHOD_3 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3505
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_2 = VAR_1 . METHOD_2 ( java.lang.Integer.parseInt ( VAR_2 . METHOD_3 ( ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",3506
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3507
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; } VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; } },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3508
public void METHOD_1 ( ) { VAR_1 = true ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = 1 ; VAR_1 = false ; },public void METHOD_1 ( ) { VAR_1 = true ; java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3509
public static void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = false ; TYPE_1 . METHOD_2 ( VAR_1 ) ; },public static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3510
"public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = new TYPE_1 ( VAR_2 , STRING_1 ) ; this . VAR_1 . METHOD_2 ( VAR_3 ) ; this . VAR_1 . METHOD_3 ( ) ; this . VAR_4 = new TYPE_2 ( METHOD_4 ( ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( ) ; VAR_4 = new TYPE_2 ( METHOD_4 ( ) ) ; }","['Insert Invocation', 'Insert Invocation', 'Insert TypeAccess', 'Move TypeAccess', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess']",3511
public java.lang.Boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = false ; return VAR_1 ; },public java.lang.Boolean METHOD_1 ( ) { return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3512
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ! ( VAR_2 ) ) { VAR_3 = true ; int VAR_4 = TYPE_2 . METHOD_2 ( event ) ; VAR_5 = 1 ; return METHOD_3 ( VAR_4 , event ) ; } return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { int VAR_4 = TYPE_2 . METHOD_2 ( event ) ; VAR_5 = 1 ; return METHOD_3 ( VAR_4 , event ) ; }","['Move LocalVariable', 'Move Assignment', 'Move Return', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",3514
public static void main ( java.lang.String [ ] args ) { VAR_1 . set = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; VAR_5 . start ( ) ; },public static void main ( java.lang.String [ ] args ) { VAR_5 . start ( ) ; VAR_4 = new TYPE_4 ( ) ; },"['Move Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3515
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3516
public TYPE_1 build ( ) { final TYPE_1 query = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; return query ; },public TYPE_1 build ( ) { final TYPE_1 query = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; return query ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3517
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_1 = false ; METHOD_2 ( ) ; METHOD_3 ( false ) ; METHOD_4 ( INT_1 , INT_1 , INT_2 , INT_3 ) ; METHOD_5 ( true ) ; METHOD_6 ( true ) ; }","public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; METHOD_2 ( ) ; METHOD_3 ( false ) ; METHOD_4 ( INT_1 , INT_1 , INT_2 , INT_3 ) ; METHOD_5 ( true ) ; METHOD_6 ( true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3519
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ( VAR_1 ? VAR_2 : VAR_3 ) ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( ( VAR_1 ? VAR_2 : VAR_3 ) ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3520
"public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { parameters . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( parameters ) ; VAR_2 . METHOD_5 ( ) ; VAR_3 = false ; TYPE_1 . METHOD_6 ( VAR_4 , STRING_1 ) ; } }","public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { parameters . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( parameters ) ; TYPE_1 . METHOD_6 ( VAR_4 , STRING_1 ) ; } }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3521
"public void METHOD_1 ( ) { VAR_1 = this . getActivity ( ) . METHOD_2 ( STRING_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3522
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_5 = VAR_6 . min ( VAR_1 . METHOD_2 ( ) , VAR_3 . METHOD_2 ( ) ) ; VAR_7 = ( VAR_5 ) / INT_1 ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",3523
"void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , 0 ) ; }","void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3524
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; METHOD_3 ( ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead']",3525
public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 = new java.util.HashSet < > ( ) ; return true ; } return false ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3526
"void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; if ( ( METHOD_2 ( VAR_2 , null ) ) == ( VAR_3 ) ) { VAR_4 = true ; return ; } if ( VAR_5 ) { VAR_3 = VAR_6 ; } }","void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; if ( ( METHOD_2 ( VAR_2 , null ) ) == ( VAR_3 ) ) { return ; } if ( VAR_5 ) { VAR_3 = VAR_6 ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3527
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = false ; VAR_2 = null ; METHOD_4 ( ) ; METHOD_5 ( true ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = null ; METHOD_4 ( ) ; METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3528
private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_4 ) { } VAR_3 = null ; VAR_1 = null ; VAR_2 = null ; },private void METHOD_1 ( ) { try { VAR_3 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_4 ) { } VAR_3 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3529
boolean METHOD_1 ( ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; return VAR_2 . METHOD_2 ( ) ; },boolean METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3530
public void METHOD_1 ( ) { assert ! ( java.lang.Thread . METHOD_2 ( this ) ) ; synchronized ( this ) { ( VAR_1 ) ++ ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } } },public void METHOD_1 ( ) { assert ! ( java.lang.Thread . METHOD_2 ( this ) ) ; synchronized ( this ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } } },"['Delete FieldWrite', 'Delete UnaryOperator']",3531
"public void METHOD_1 ( java.lang.String text , boolean VAR_1 ) { if ( TYPE_1 . METHOD_2 ( text ) ) return ; VAR_2 = ! VAR_1 ; METHOD_3 ( text ) ; METHOD_4 ( ) ; }",public void METHOD_1 ( java.lang.String text ) { if ( TYPE_1 . METHOD_2 ( text ) ) return ; METHOD_3 ( text ) ; METHOD_4 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete UnaryOperator', 'Delete Assignment']",3532
public void METHOD_1 ( ) { VAR_1 = VAR_2 . x ; VAR_3 = VAR_2 . y ; this . VAR_4 = new TYPE_1 ( ) ; this . VAR_5 . init ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . x ; VAR_3 = VAR_2 . y ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3533
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3534
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3536
public static void METHOD_1 ( boolean VAR_1 ) { VAR_2 = false ; TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_2 . METHOD_3 ( ) ; TYPE_2 = null ; VAR_3 . METHOD_4 ( null ) ; } },public static void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_2 . METHOD_3 ( ) ; TYPE_2 = null ; VAR_3 . METHOD_4 ( null ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3537
public void open ( ) { if ( ( VAR_1 ) == null ) { VAR_2 . get ( ) . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; } if ( ( VAR_1 ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } },public void open ( ) { if ( ( VAR_1 ) == null ) { VAR_2 . get ( ) . METHOD_1 ( ) ; METHOD_2 ( ) ; } if ( ( VAR_1 ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3538
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , this ) ; VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , this ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3539
public void start ( TYPE_1 p ) { VAR_1 = VAR_2 . x ; VAR_3 = VAR_2 . y ; VAR_4 = VAR_2 . x ; VAR_5 = VAR_2 . y ; VAR_6 = VAR_2 . x ; VAR_7 = VAR_2 . y ; },public void start ( TYPE_1 p ) { VAR_1 = VAR_2 . x ; VAR_3 = VAR_2 . y ; VAR_4 = VAR_2 . x ; VAR_5 = VAR_2 . y ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3541
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 , 1 ) ; VAR_2 = new TYPE_2 ( new TYPE_3 ( ) ) ; }",public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( new TYPE_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",3542
"public void METHOD_1 ( ) { VAR_1 . set ( STRING_1 , STRING_2 ) ; while ( METHOD_2 ( ) ) { } VAR_2 = STRING_2 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; }","public void METHOD_1 ( ) { VAR_1 . set ( STRING_1 , STRING_2 ) ; while ( METHOD_2 ( ) ) { } VAR_2 = STRING_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3543
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3544
"public static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { final TYPE_1 message = new TYPE_1 ( VAR_3 ) ; VAR_4 = VAR_2 ; VAR_5 = VAR_1 ; return message ; }",public static TYPE_1 METHOD_1 ( java.lang.String VAR_2 ) { final TYPE_1 message = new TYPE_1 ( VAR_3 ) ; VAR_4 = VAR_2 ; return message ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3545
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = null ; this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3548
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = false ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_5 = false ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3549
public void METHOD_1 ( ) { VAR_1 = INT_1 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3551
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = null ; VAR_3 = VAR_4 ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = null ; VAR_3 = null ; },"['Insert Literal', 'Delete FieldRead']",3552
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 info = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 . METHOD_2 ( info ) ; TYPE_2 . METHOD_3 ( VAR_5 ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 info = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_4 . METHOD_2 ( info ) ; TYPE_2 . METHOD_3 ( VAR_5 ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3553
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = STRING_1 ; ( ( TYPE_3 ) ( METHOD_2 ( VAR_4 ) ) ) . setText ( STRING_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; ( ( TYPE_3 ) ( METHOD_2 ( VAR_4 ) ) ) . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3554
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = new TYPE_2 ( ) ; VAR_2 = java.util.logging.Logger.getLogger ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3555
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; android.content.Intent i = new android.content.Intent ( this , VAR_5 class ) ; i . METHOD_2 ( VAR_6 ) ; this . METHOD_3 ( i ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 = null ; android.content.Intent i = new android.content.Intent ( this , VAR_5 class ) ; i . METHOD_2 ( VAR_6 ) ; this . METHOD_3 ( i ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3556
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3557
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = true ; VAR_6 = false ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , STRING_1 , VAR_7 ) . show ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",3558
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3559
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3560
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",3561
public void update ( float VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; this . VAR_2 = this . METHOD_3 ( ) ; this . VAR_3 = this . VAR_4 . get ( this . VAR_2 ) ; },public void update ( float VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_1 ) ; this . VAR_3 = this . VAR_4 . get ( this . METHOD_3 ( ) ) ; },"['Move FieldWrite', 'Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",3562
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",3563
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3564
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; if ( ( VAR_3 ) == INT_1 ) { VAR_4 = false ; } METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3565
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) || ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_1 = false ; VAR_2 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3566
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = false ; VAR_9 = 0 ; VAR_10 = false ; VAR_11 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = false ; VAR_9 = 0 ; VAR_10 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3567
public void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 . METHOD_2 ( ) ; if ( VAR_1 >= 0 ) { this . VAR_2 . add ( VAR_1 ) ; } },public void METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",3568
public void init ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_1 ( ) ; },public void init ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3569
public void METHOD_1 ( final boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( METHOD_2 ( ) ) && VAR_1 ) { VAR_2 = INT_1 ; } METHOD_3 ( ) ; },public void METHOD_1 ( final boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete Invocation', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Invocation']",3570
"protected static TYPE_1 METHOD_1 ( final TYPE_2 source , final TYPE_3 VAR_1 , final java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 . format = VAR_2 ; VAR_6 = source ; return VAR_3 ; }","protected static TYPE_1 METHOD_1 ( final TYPE_2 source , final TYPE_3 VAR_1 , final java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 . format = VAR_2 ; return VAR_3 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3572
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( this ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3573
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_6 = false ; VAR_7 = false ; METHOD_2 ( false ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_7 = false ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3574
private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 [ 0 ] ) + STRING_1 ) ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 = 0 ; TYPE_3 . METHOD_4 ( ) ; VAR_3 = true ; VAR_4 = true ; },private static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 [ 0 ] ) + STRING_1 ) ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 = 0 ; TYPE_3 . METHOD_4 ( ) ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3575
protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3576
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . response = TYPE_2 . METHOD_3 ( ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3577
"public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; }",public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3578
public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) TYPE_2 . METHOD_3 ( STRING_1 ) ; VAR_1 = VAR_2 ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) TYPE_2 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3579
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) . build ( ) ; VAR_3 = new TYPE_3 ( VAR_4 , VAR_5 ) ; }",public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) . build ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3580
"public void METHOD_1 ( TYPE_1 date ) { METHOD_2 ( VAR_1 , date ) ; VAR_2 = true ; }","public void METHOD_1 ( TYPE_1 date ) { METHOD_2 ( VAR_1 , date ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3581
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = VAR_2 ; return this . VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3582
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3583
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , this ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( getContext ( ) , VAR_5 , false ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( getContext ( ) , VAR_5 , false ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",3584
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = TYPE_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; },protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_3 ( STRING_1 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; },"['Update Invocation', 'Move Invocation', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3586
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3587
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( ) ; } return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Delete Return']",3588
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( ) ; VAR_6 = ( VAR_1 . METHOD_5 ( ) ) == ( VAR_7 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",3589
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_3 = true ; VAR_2 . METHOD_3 ( null ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( null ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3590
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3591
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3592
public void METHOD_1 ( TYPE_1 b ) { TYPE_2 . METHOD_2 ( VAR_1 class ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 b ) { TYPE_2 . METHOD_2 ( VAR_1 class ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3593
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; },"['Update ConstructorCall', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",3594
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3595
"public void METHOD_1 ( TYPE_1 VAR_1 ) { filePath = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , filePath ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , filePath ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3596
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( false ) ; VAR_3 = null ; TYPE_2 . METHOD_5 ( VAR_4 ) ; TYPE_3 . METHOD_6 ( ) ; VAR_2 = null ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_6 ( ) ; VAR_3 . METHOD_4 ( false ) ; VAR_3 = null ; TYPE_2 . METHOD_5 ( VAR_4 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3597
public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = true ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( null ) ; },public void METHOD_1 ( ) throws TYPE_1 { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",3599
"public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; VAR_1 = TYPE_3 . METHOD_3 ( ) ; TYPE_4 . METHOD_4 ( VAR_2 class , args ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_4 . METHOD_4 ( VAR_2 class , args ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3601
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getName ( ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; if ( ( VAR_5 ) && ( VAR_6 ) ) { METHOD_5 ( VAR_7 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_4 ( VAR_1 ) ; if ( ( VAR_5 ) && ( VAR_6 ) ) { METHOD_5 ( VAR_7 ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3602
public void init ( ) { count = 0 ; VAR_1 . init ( ) ; },public void init ( ) { VAR_1 . init ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3603
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = false ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3604
public void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3605
"public void METHOD_1 ( float x , float y ) { VAR_1 . METHOD_2 ( x , y , false ) ; VAR_1 . METHOD_2 ( x , y , false ) ; VAR_1 = null ; VAR_2 = false ; }","public void METHOD_1 ( float x , float y ) { VAR_1 . METHOD_2 ( x , y , false ) ; VAR_1 . METHOD_2 ( x , y , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3606
public void METHOD_1 ( java.lang.String name ) { this . name = name ; this . VAR_1 = false ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3607
public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; } VAR_1 . METHOD_1 ( VAR_3 ) ; },public void METHOD_1 ( ) throws TYPE_1 { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3608
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_2 ( this ) ; this . VAR_2 = new TYPE_2 ( 0.0F , 0.0F , FLOAT_1 ) ; this . isEmpty = true ; this . METHOD_3 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_2 ( this ) ; this . VAR_2 = new TYPE_2 ( ) ; this . isEmpty = true ; this . METHOD_3 ( ) ; },"['Delete Literal', 'Delete Literal', 'Delete FieldRead']",3609
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( 0 , 0 ) ; VAR_3 = 0 ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( 0 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3610
private void METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : case VAR_3 : VAR_4 . append ( VAR_5 ) ; VAR_6 = VAR_7 ; METHOD_2 ( ) ; break ; default : METHOD_3 ( false ) ; break ; } },private void METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : case VAR_3 : VAR_4 . append ( VAR_5 ) ; METHOD_2 ( VAR_7 ) ; break ; default : METHOD_3 ( false ) ; break ; } },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3611
"public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_3 . getContext ( ) , VAR_1 , VAR_4 ) ; VAR_5 = VAR_6 ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_3 . getContext ( ) , VAR_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3612
"public void METHOD_1 ( TYPE_1 data , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { this . data = data ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 data , TYPE_2 VAR_1 ) { this . data = data ; this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3613
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3614
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = TYPE_2 . METHOD_2 ( getActivity ( ) . METHOD_3 ( ) ) ; METHOD_4 ( VAR_4 , VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_4 ( VAR_4 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",3615
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 + ( ( VAR_3 ) / INT_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",3616
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; return this ; },public TYPE_1 METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3617
"public void x ( float value ) { VAR_1 = true ; this . VAR_2 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_3 ) ) ; }","public void x ( float value ) { this . VAR_2 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3619
public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( this ) . METHOD_4 ( ) . toString ( ) ) ) ) ; if ( VAR_1 ) { VAR_1 = false ; METHOD_5 ( ) ; METHOD_6 ( ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( this ) . METHOD_4 ( ) . toString ( ) ) ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3621
"public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , false ) ; VAR_1 = VAR_1 . METHOD_2 ( ( - INT_1 ) ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , false ) ; VAR_1 . METHOD_2 ( ( - INT_1 ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3622
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = VAR_4 = 0 ; VAR_5 = VAR_6 = - 1 ; VAR_7 = false ; VAR_8 = VAR_9 = null ; },public void METHOD_1 ( ) { VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment']",3623
"public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; VAR_2 = false ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3624
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = STRING_3 ; VAR_4 = STRING_4 ; android.content.Intent VAR_5 = TYPE_1 . METHOD_2 ( this , VAR_3 ) ; METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = STRING_3 ; android.content.Intent VAR_5 = TYPE_1 . METHOD_2 ( this , VAR_3 ) ; METHOD_3 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3625
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3626
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3627
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3628
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ( VAR_1 ? VAR_4 : VAR_5 ) ) ; } },private void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ( VAR_1 ? VAR_4 : VAR_5 ) ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3629
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3630
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3632
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 = VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_4 = METHOD_2 ( ) ; VAR_5 = METHOD_3 ( ) ; VAR_6 = METHOD_4 ( ) ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_3 = VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_4 = METHOD_2 ( ) ; VAR_5 = METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3633
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( getString ( VAR_2 ) , STRING_1 ) ; VAR_3 = new java.util.ArrayList < > ( ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( getString ( VAR_2 ) , STRING_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",3634
public TYPE_1 METHOD_1 ( ) { try { VAR_1 = new TYPE_2 ( getClass ( ) . METHOD_2 ( STRING_1 ) ) ; return VAR_1 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; return null ; } },public TYPE_1 METHOD_1 ( ) { try { return TYPE_2 . METHOD_3 ( getClass ( ) . METHOD_2 ( STRING_1 ) ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; return null ; } },"['Update TypeAccess', 'Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3636
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 = false ; TYPE_2 . METHOD_3 ( VAR_4 , ( STRING_1 + ( VAR_5 . toString ( ) ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( false ) ; TYPE_2 . METHOD_3 ( VAR_4 , ( STRING_1 + ( VAR_5 . toString ( ) ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3637
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( VAR_1 . METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; VAR_2 = false ; } } else { VAR_2 = true ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( ) ; } },"['Move If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3638
protected void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = - 1 ; METHOD_2 ( null ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( null ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",3639
public void handle ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = 0 ; METHOD_1 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3640
"public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_1 = new java.io.File ( STRING_1 ) ; TYPE_2 . METHOD_3 ( STRING_2 , VAR_1 . METHOD_4 ( ) ) ; VAR_2 = new TYPE_3 ( ) ; } return VAR_2 ; }",public TYPE_1 METHOD_1 ( ) { VAR_2 = new TYPE_3 ( ) ; return VAR_2 ; },"['Move Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",3641
"public TYPE_1 METHOD_1 ( java.lang.String url , java.lang.String parameters ) throws java.io.IOException { this . VAR_1 = url ; this . method = VAR_2 ; this . parameters = parameters ; return new TYPE_1 ( VAR_3 , url ) ; }","public TYPE_1 METHOD_1 ( java.lang.String url , java.lang.String parameters ) throws java.io.IOException { this . VAR_1 = url ; this . method = VAR_2 ; return new TYPE_1 ( VAR_3 , url ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3642
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = - 1 ; this . VAR_3 = null ; this . VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 = null ; this . VAR_3 = null ; this . VAR_4 . METHOD_2 ( ) ; },"['Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Literal', 'Delete UnaryOperator']",3644
protected void METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_3 . delete ( ) ; VAR_2 = null ; } },protected void METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_3 . delete ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3645
private void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 = VAR_1 ; METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3646
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_3 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3647
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . add ( new TYPE_2 ( VAR_4 , VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( new TYPE_2 ( VAR_4 , VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3648
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3650
public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = false ; java.lang.String VAR_3 = METHOD_2 ( VAR_1 ) . toLowerCase ( ) ; if ( VAR_4 . contains ( VAR_3 ) ) VAR_2 = true ; return VAR_2 ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_3 = METHOD_2 ( VAR_1 ) . toLowerCase ( ) ; if ( VAR_4 . contains ( VAR_3 ) ) VAR_2 = true ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3651
public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = new TYPE_1 ( ) ; this . VAR_3 = new TYPE_2 ( ) ; this . VAR_4 = new TYPE_3 < TYPE_4 > ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = new TYPE_1 ( ) ; this . VAR_3 = new TYPE_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3652
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.lang.Thread ( VAR_3 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3653
public void setValue ( double VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; this . VAR_3 . setText ( VAR_2 ) ; },public void setValue ( double VAR_1 ) { java.lang.String VAR_2 = METHOD_1 ( VAR_1 ) ; this . VAR_3 . setText ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3654
protected void METHOD_1 ( TYPE_1 element ) { this . VAR_1 = null ; element . METHOD_2 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 element ) { element . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3655
"private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) { VAR_6 = true ; VAR_2 = VAR_3 = 0 - ( VAR_7 ) ; VAR_8 = VAR_9 ; VAR_9 = VAR_10 ; } }","private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) { VAR_6 = true ; VAR_2 = VAR_3 = 0 - ( VAR_7 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3656
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( STRING_1 ) ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( STRING_1 ) ; this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3657
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = INT_1 ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3658
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getId ( ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3659
"public void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_3 ( 0 ) ; } VAR_3 . start ( ) ; }","public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_3 ( 0 ) ; } VAR_3 . start ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3660
"public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3661
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.String message = STRING_2 ; VAR_2 . METHOD_3 ( STRING_3 , message ) ; VAR_4 = false ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.String message = STRING_2 ; VAR_2 . METHOD_3 ( STRING_3 , message ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3662
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( message ) ; METHOD_3 ( VAR_5 , METHOD_4 ( ) ) ; VAR_6 = false ; VAR_7 . start ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( message ) ; METHOD_3 ( VAR_5 , METHOD_4 ( ) ) ; VAR_7 . start ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3663
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = false ; VAR_2 = false ; METHOD_3 ( STRING_3 ) ; }",public void METHOD_1 ( ) { VAR_1 = false ; METHOD_3 ( STRING_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3664
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = new TYPE_1 ( ) ; METHOD_2 ( STRING_2 ) ; },private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3665
public int METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_1 = 0 ; ( VAR_2 ) ++ ; } return VAR_2 ; },public int METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) ( VAR_2 ) ++ ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3666
public void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3667
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3668
public static java.util.ArrayList < java.lang.String > METHOD_1 ( int VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; return TYPE_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; },public static java.util.ArrayList < java.lang.String > METHOD_1 ( int VAR_1 ) { return TYPE_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3669
public void update ( ) { if ( ( VAR_1 ) > ( ( VAR_2 ) * INT_1 ) ) VAR_3 = 0 ; },public void update ( ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3670
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( 0 ) ; VAR_1 . METHOD_3 ( 0 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",3671
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( true ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3672
"protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( this , TYPE_2 . METHOD_4 ( this ) . getString ( getString ( VAR_2 ) , STRING_1 ) ) ; VAR_3 = false ; super . METHOD_1 ( ) ; }","protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( this , TYPE_2 . METHOD_4 ( this ) . getString ( getString ( VAR_2 ) , STRING_1 ) ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3673
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > path ) { VAR_1 = false ; VAR_2 = new TYPE_2 ( path ) ; VAR_3 . execute ( VAR_2 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > path ) { VAR_2 = new TYPE_2 ( path ) ; VAR_3 . execute ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3674
"public void METHOD_1 ( android.view.View view ) { VAR_1 = STRING_1 ; VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , VAR_3 ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , VAR_3 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3675
public void handle ( TYPE_1 event ) { VAR_1 = true ; VAR_2 = false ; },public void handle ( TYPE_1 event ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3676
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = INT_1 ; VAR_2 = - 1 ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = INT_1 ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",3678
public void start ( ) { VAR_1 = new java.lang.Thread ( VAR_2 ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) + STRING_2 ) ) ; VAR_4 . start ( ) ; },public void start ( ) { VAR_4 . start ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",3679
public void METHOD_1 ( int VAR_1 ) { if ( ( ( this . VAR_2 ) < VAR_1 ) && ( VAR_3 ) ) { this . VAR_2 = VAR_1 ; METHOD_2 ( ) ; } else { this . VAR_2 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( this . VAR_2 ) < VAR_1 ) { METHOD_2 ( ) ; } this . VAR_2 = VAR_1 ; },"['Move Assignment', 'Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",3680
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3681
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ 0 ] ; VAR_3 = 0 ; VAR_4 = 0 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ 0 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3682
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 . setText ( VAR_6 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3684
"protected void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","protected void METHOD_1 ( int VAR_2 , int VAR_3 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3685
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; if ( ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) ) { VAR_4 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3687
"public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_1 , VAR_4 . METHOD_3 ( ) ) ; return this ; }",public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3688
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_6 ) ) ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3689
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 + ( ( VAR_3 ) * INT_1 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",3690
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_1 = null ; } },public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3691
public boolean add ( TYPE_1 VAR_1 ) { ( this . size ) ++ ; return this . VAR_2 . add ( VAR_1 ) ; },public boolean add ( TYPE_1 VAR_1 ) { return this . VAR_2 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",3692
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Void context , java.lang.Throwable VAR_2 ) { if ( VAR_3 ) { return ; } VAR_3 = true ; VAR_4 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Void context , java.lang.Throwable VAR_2 ) { VAR_4 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3694
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Insert Literal', 'Delete FieldRead']",3695
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3696
"protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == 0 ) return ; int VAR_3 = VAR_2 ; value = null ; VAR_4 = true ; VAR_5 = null ; METHOD_2 ( VAR_1 , ( - VAR_3 ) ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == 0 ) return ; int VAR_3 = VAR_2 ; value = null ; VAR_4 = true ; METHOD_2 ( VAR_1 , ( - VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3697
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( ) ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3698
private void METHOD_1 ( ) { VAR_1 = false ; if ( VAR_2 ) { VAR_3 . start ( ) ; VAR_1 = true ; } else { METHOD_2 ( VAR_4 [ VAR_5 ] ) ; } },private void METHOD_1 ( ) { if ( VAR_2 ) { VAR_3 . start ( ) ; VAR_1 = true ; } else { METHOD_2 ( VAR_4 [ VAR_5 ] ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3699
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3700
protected void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; VAR_5 = - INT_1 ; },protected void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; VAR_3 = false ; VAR_5 = - INT_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3701
public boolean METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = INT_1 * ( VAR_3 ) ; VAR_4 += VAR_2 ; return true ; } else { VAR_2 = VAR_3 ; VAR_4 -= VAR_3 ; return false ; } },public boolean METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_4 += INT_1 * ( VAR_3 ) ; return true ; } else { VAR_4 -= VAR_3 ; return false ; } },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3702
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( ) ; } return VAR_2 . METHOD_2 ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3703
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_4 . remove ( ) ; VAR_3 = null ; VAR_5 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_4 . remove ( ) ; VAR_3 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3704
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = null ; VAR_3 = false ; }",public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3705
"public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_3 ; METHOD_1 ( VAR_1 , VAR_4 ) ; }","public void METHOD_1 ( boolean VAR_1 ) { METHOD_1 ( VAR_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3706
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; if ( ( VAR_4 ) != null ) { VAR_4 = null ; METHOD_4 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",3707
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . start ( ) ; VAR_4 = 0 ; VAR_5 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_5 = true ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3709
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 ) != null ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( null ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3710
public void METHOD_1 ( ) { try ( TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_3 = false ; } },public void METHOD_1 ( ) { try ( TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3711
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; VAR_2 = new TYPE_2 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; }","['Update TypeAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3714
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3715
public void METHOD_1 ( java.lang.String data ) { this . data = data ; VAR_1 = TYPE_1 . METHOD_2 ( data ) ; },public void METHOD_1 ( java.lang.String data ) { this . data = data ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3716
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { ( VAR_2 ) ++ ; } VAR_1 = true ; },public void METHOD_1 ( ) { ( VAR_2 ) ++ ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3718
protected void METHOD_1 ( ) { VAR_1 = this ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",3719
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( this . METHOD_2 ( this . VAR_2 ) ) == ( VAR_3 ) ) { this . METHOD_3 ( 1 ) ; return VAR_4 ; } this . result = false ; return VAR_5 ; },public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( this . METHOD_2 ( this . VAR_2 ) ) == ( VAR_3 ) ) { this . METHOD_3 ( 1 ) ; return VAR_4 ; } return VAR_5 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3720
public void METHOD_1 ( ) { result = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . String class ) ; result . METHOD_4 ( this ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Invocation']",3721
public void METHOD_1 ( TYPE_1 position ) { VAR_1 = false ; VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 position ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3722
public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; } TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_1 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; } TYPE_2 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3723
public synchronized void METHOD_1 ( ) { if ( VAR_1 ) { return ; } METHOD_2 ( false ) ; getActivity ( ) . METHOD_3 ( ) ; VAR_1 = true ; },public synchronized void METHOD_1 ( ) { METHOD_2 ( false ) ; getActivity ( ) . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3724
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 = new TYPE_1 ( STRING_1 , STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; VAR_1 . METHOD_3 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; java.lang.System.out.println ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3725
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( ) . METHOD_3 ( VAR_5 ) ; VAR_6 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( ) . METHOD_3 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3727
private void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; VAR_3 = false ; VAR_4 . setText ( STRING_2 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( true ) ; },private void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3728
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( this ) ) . build ( ) ; VAR_1 . METHOD_4 ( this ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",3729
private void METHOD_1 ( ) { VAR_1 . add ( ( ( ( double ) ( METHOD_2 ( ) ) ) / ( VAR_2 . size ( ) ) ) ) ; time = new java.util.ArrayList < > ( ) ; },private double METHOD_1 ( ) { return ( METHOD_2 ( ) ) / ( VAR_2 . size ( ) ) ; },"['Update TypeReference', 'Insert Return', 'Move BinaryOperator', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3730
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3731
public void METHOD_1 ( int VAR_1 ) { if ( ( size ( ) ) == 0 ) { VAR_2 = 0 ; } VAR_2 = VAR_1 % ( size ( ) ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 % ( size ( ) ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3732
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",3733
public void METHOD_1 ( java.io.File VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( java.io.File VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3734
private boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 = ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 ) ) && ( METHOD_4 ( ) ) ; return ! ( VAR_1 ) ; },private boolean METHOD_1 ( ) throws java.lang.Exception { return ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 ) ) ) && ( ! ( METHOD_4 ( ) ) ) ; },"['Move BinaryOperator', 'Insert UnaryOperator', 'Insert UnaryOperator', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete UnaryOperator']",3735
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3736
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_2 . trim ( ) ; } else { this . VAR_1 = null ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3737
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 . text ) ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",3738
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3739
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; intent . METHOD_3 ( STRING_1 , VAR_3 . METHOD_4 ( STRING_1 ) ) ; METHOD_5 ( intent ) ; VAR_4 = true ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; intent . METHOD_3 ( STRING_1 , VAR_3 . METHOD_4 ( STRING_1 ) ) ; METHOD_5 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3740
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 1 ; METHOD_2 ( VAR_3 ) ; VAR_3 = VAR_4 ; VAR_4 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_3 ) ; VAR_3 = VAR_4 ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3741
protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_3 = VAR_1 ; METHOD_2 ( ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Move Assignment', 'Move FieldWrite', 'Delete FieldWrite', 'Delete Assignment']",3742
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = TYPE_2 . METHOD_4 ( this ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",3743
public void METHOD_1 ( float value ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( value ) ; VAR_2 = ( ( int ) ( value ) ) ; } else throw new java.lang.NullPointerException ( STRING_1 ) ; },public void METHOD_1 ( float value ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( value ) ; else throw new java.lang.NullPointerException ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",3744
public boolean METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; return true ; } return false ; },public boolean METHOD_1 ( int offset ) { if ( ( VAR_2 ) != offset ) { VAR_2 = offset ; METHOD_2 ( ) ; return true ; } return false ; },"['Update Parameter', 'Update VariableRead', 'Update VariableRead']",3745
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = 0 ; VAR_3 = 0 ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3746
public java.lang.String METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { return STRING_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3747
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( listener ) != null ) return ; listener = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3749
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = ( ( float ) ( this . VAR_4 ) ) / ( ( float ) ( VAR_1 ) ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeReference', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",3750
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3751
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . get ( ) . METHOD_2 ( ) ; } if ( ( VAR_3 ) != null ) { VAR_3 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . get ( ) . METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3752
public void METHOD_1 ( ) { for ( int i = INT_1 ; i > 0 ; i -- ) { update ( i ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 ) * INT_2 ) ) ; } VAR_2 = false ; },public void METHOD_1 ( ) { for ( int i = INT_1 ; i > 0 ; i -- ) { update ( i ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 ) * INT_2 ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3753
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = null ; android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; getActivity ( ) . METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; getActivity ( ) . METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3754
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = false ; METHOD_2 ( ) ; } else { VAR_3 = true ; METHOD_2 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { } else { } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",3755
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = STRING_1 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = STRING_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",3756
"public void METHOD_1 ( java.lang.String filePath ) { VAR_1 . append ( METHOD_2 ( ( ( ""\n"" + STRING_1 ) + filePath ) ) ) ; VAR_2 = filePath ; }","public void METHOD_1 ( java.lang.String filePath ) { VAR_1 . append ( METHOD_2 ( ( ( ""\n"" + STRING_1 ) + filePath ) ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3757
"public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; VAR_2 = false ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3758
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3759
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = new TYPE_3 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",3761
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { VAR_5 = STRING_1 ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3762
"public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_2 ( ) ; VAR_5 = new TYPE_3 ( VAR_1 , VAR_3 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_1 ( ) ; VAR_5 = new TYPE_3 ( VAR_1 , VAR_3 . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3763
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == 1 ) { TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( false ) ; VAR_1 = 0 ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) == 1 ) { TYPE_1 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 . METHOD_3 ( false ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3764
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = - 1 ; VAR_3 = 0 ; },private void METHOD_1 ( ) { startTime = - 1 ; VAR_2 = - 1 ; VAR_3 = 0 ; },"['Update FieldWrite', 'Insert UnaryOperator', 'Insert Literal', 'Delete Literal']",3765
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , double VAR_3 , double VAR_4 , double step ) { source = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; VAR_7 = step ; VAR_8 = VAR_4 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , double VAR_3 , double step ) { source = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; VAR_7 = step ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3767
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; output . METHOD_2 ( ) ; output . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; output . METHOD_2 ( ) ; output . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3768
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . startTime ) ; METHOD_3 ( new java.util.Date ( ) ) ; VAR_2 = METHOD_4 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_5 ( this ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_5 ( this ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3769
public boolean METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; VAR_2 = true ; return false ; },public boolean METHOD_1 ( ) { VAR_2 = true ; return false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",3770
"public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , boolean VAR_2 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_3 ) ; }",public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_3 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3771
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . commit ( ) ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . commit ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3772
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = INT_2 ; height = INT_3 ; VAR_3 = INT_4 ; VAR_4 = 1 ; init ( ) ; },public void METHOD_1 ( ) { init ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3773
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3774
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 == 0 ) { this . VAR_1 = 1 ; } },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3775
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 = VAR_3 . toLowerCase ( ) ; METHOD_3 ( VAR_1 ) ; VAR_4 = false ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( VAR_5 . toString ( VAR_6 ) ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 = VAR_3 . toLowerCase ( ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_5 ( VAR_5 . toString ( VAR_6 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3776
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( x ) + 1 ) , y ) ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( x ) ++ ) , y ) ; }","['Insert UnaryOperator', 'Insert FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",3777
"public void METHOD_1 ( ) { assertEquals ( VAR_1 , 1 ) ; VAR_1 = INT_1 ; }",public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3778
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",3779
public void METHOD_1 ( char [ ] VAR_1 ) { this . VAR_2 = VAR_3 . length ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( char [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3780
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 ; VAR_3 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3781
private void METHOD_1 ( ) { if ( ( VAR_1 ) > FLOAT_1 ) { VAR_2 = true ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_1 = 0 ; VAR_5 = 1 ; } else VAR_1 += VAR_6 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) > FLOAT_1 ) { VAR_2 = true ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_1 = 0 ; } else VAR_1 += VAR_6 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3782
"private void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ! ( VAR_2 ) ) ) { VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , status ) ; } }","private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , status ) ; } }","['Move FieldRead', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3783
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( STRING_1 ) ; VAR_6 = new TYPE_3 ( VAR_7 ) ; },public void METHOD_1 ( ) { VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( STRING_1 ) ; VAR_6 = new TYPE_3 ( VAR_7 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3784
public void METHOD_1 ( double value ) { if ( ! ( VAR_1 ) ) { ( VAR_2 ) ++ ; VAR_1 = ( VAR_2 ) >= ( VAR_3 ) ; } VAR_4 . METHOD_1 ( value ) ; },public void METHOD_1 ( double value ) { VAR_4 . METHOD_1 ( value ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",3785
"public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view ) { super . METHOD_1 ( VAR_1 , view ) ; VAR_2 = VAR_3 . getActivity ( ) . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view ) { super . METHOD_1 ( VAR_1 , view ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3786
"private static void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , java.lang.NullPointerException { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( VAR_2 ) - 1 ) ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; VAR_2 = - 1 ; }","private static void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , java.lang.NullPointerException { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( VAR_2 ) - 1 ) ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",3787
"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; if ( ( VAR_3 ) == null ) VAR_3 = VAR_4 ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) ) ; return VAR_1 ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3788
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { result = STRING_1 ; } else if ( VAR_1 . METHOD_3 ( ) ) { result = STRING_2 ; } else { result = STRING_3 ; } return result ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { result = STRING_1 ; } else if ( VAR_1 . METHOD_3 ( ) ) { result = STRING_2 ; } return result ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block']",3790
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . height = VAR_3 ; VAR_4 = VAR_5 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3791
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = true ; METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3792
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( new TYPE_1 ( STRING_1 ) . build ( ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( STRING_1 ) . build ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3793
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3794
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; VAR_2 = null ; return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",3795
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",3797
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_5 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3798
"public void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( ) , 0 , ( INT_1 * INT_2 ) ) ; } VAR_3 = true ; }","public void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( ) , 0 , ( INT_1 * INT_2 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3799
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . get ( 0 ) . METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( ) { VAR_2 . get ( 0 ) . METHOD_2 ( INT_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3800
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3801
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",3804
public void METHOD_1 ( java.lang.String message ) { VAR_1 = message ; },public void METHOD_1 ( java.lang.String message ) { this . message = message ; },"['Update FieldWrite', 'Insert ThisAccess']",3805
public static void METHOD_1 ( TYPE_1 a ) { VAR_1 = a ; if ( a == null ) { TYPE_2 . METHOD_2 ( ) ; } else { VAR_2 = a . METHOD_3 ( ) ; } },public static void METHOD_1 ( TYPE_1 a ) { VAR_1 = a ; if ( a == null ) { TYPE_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",3806
public void METHOD_1 ( ) { state = VAR_1 ; VAR_2 = true ; if ( ( state ) != ( VAR_3 ) ) { TYPE_1 VAR_4 = new TYPE_1 ( VAR_5 ) ; VAR_4 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { state = VAR_1 ; if ( ( state ) != ( VAR_3 ) ) { TYPE_1 VAR_4 = new TYPE_1 ( VAR_5 ) ; VAR_4 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3807
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; startTime = TYPE_2 . METHOD_3 ( ) ; VAR_4 = 0 ; VAR_5 = false ; METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; startTime = TYPE_2 . METHOD_3 ( ) ; VAR_4 = 0 ; METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3808
public void METHOD_1 ( int n ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( n ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int n ) { METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",3809
"public void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = true ; if ( ! ( VAR_5 ) ) { this . VAR_6 = VAR_3 ; VAR_7 = VAR_1 ; VAR_8 = VAR_2 ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_4 = true ; if ( ! ( VAR_5 ) ) { VAR_7 = VAR_1 ; VAR_8 = VAR_2 ; } }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3810
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 = null ; VAR_6 . METHOD_4 ( VAR_7 ) ; VAR_8 . METHOD_4 ( VAR_9 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_5 = null ; VAR_6 . METHOD_4 ( VAR_7 ) ; VAR_8 . METHOD_4 ( VAR_9 ) ; }","['Delete TypeAccess', 'Delete Invocation']",3811
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { VAR_3 = true ; METHOD_3 ( ) ; } else { VAR_3 = VAR_4 . getBoolean ( VAR_5 ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",3812
public void METHOD_1 ( ) { VAR_1 = this ; this . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",3813
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this . METHOD_4 ( ) ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_3 ( this . METHOD_4 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3814
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; context = this ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 . list ) ) ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 . list ) ) ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",3815
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; },"['Insert Literal', 'Delete FieldRead']",3816
protected void METHOD_1 ( ) { this . VAR_1 = true ; for ( TYPE_1 VAR_2 : this . METHOD_2 ( ) ) { VAR_2 . METHOD_1 ( ) ; } },protected void METHOD_1 ( ) { for ( TYPE_1 VAR_2 : this . METHOD_2 ( ) ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3817
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3818
"public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( STRING_1 + ( VAR_1 . name ( ) . toLowerCase ( ) . replace ( CHAR_1 , CHAR_2 ) ) ) ) ; add ( VAR_2 ) ; VAR_3 = null ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( STRING_1 + ( VAR_1 . name ( ) . toLowerCase ( ) . replace ( CHAR_1 , CHAR_2 ) ) ) ) ; add ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",3819
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3821
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",3824
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this ) ; VAR_4 = new TYPE_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3825
public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) < 0 ) || ( ( VAR_2 ) == null ) ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_2 ( ) ; } return VAR_2 ; },"['Move BinaryOperator', 'Move FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3826
"public void METHOD_1 ( android.view.View view ) { VAR_1 = null ; android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_2 , 0 ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_2 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3827
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = ( VAR_3 . size ( ) ) - 1 ; VAR_4 = VAR_2 ; } else { VAR_2 = 0 ; VAR_4 = 0 ; } },private void METHOD_1 ( ) { VAR_2 = ( VAR_3 . size ( ) ) - 1 ; VAR_4 = VAR_2 ; },"['Move Assignment', 'Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3829
public void METHOD_1 ( ) { VAR_1 . result = VAR_2 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3830
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = false ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . setEnabled ( false ) ; VAR_6 . setText ( STRING_2 ) ; },private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_6 . setText ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3831
"public void METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String filePath ) { listener . METHOD_1 ( VAR_1 , filePath ) ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } }","public void METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String filePath ) { listener . METHOD_1 ( VAR_1 , filePath ) ; METHOD_2 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3832
public void METHOD_1 ( ) { data . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { data . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3833
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . count = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3834
public void execute ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; new TYPE_1 ( ) . start ( ) ; new TYPE_2 ( ) . start ( ) ; } },public void execute ( ) { new TYPE_1 ( ) . start ( ) ; new TYPE_2 ( ) . start ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3835
"public void METHOD_1 ( int value , int position ) { this . VAR_1 = value ; VAR_2 . METHOD_2 ( position , 0 ) ; }","public void METHOD_1 ( int position ) { VAR_2 . METHOD_2 ( position , 0 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3836
"public void METHOD_1 ( char VAR_1 , java.lang.String name , int VAR_2 ) { VAR_3 = new TYPE_1 ( ) . METHOD_2 ( true ) ; VAR_4 = new TYPE_1 ( ) . METHOD_2 ( true ) ; }","public void METHOD_1 ( char VAR_1 , java.lang.String name , int VAR_2 ) { }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3837
public < TYPE_1 extends java.lang.Exception > void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; },public < TYPE_1 extends java.lang.Exception > void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3838
public boolean METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; return true ; } else { return false ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Update TypeReference', 'Move Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",3840
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = true ; } else TYPE_2 . METHOD_2 ( STRING_3 , ( STRING_4 + VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Move Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",3842
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_5 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3843
public void METHOD_1 ( java.util.List < java.util.Calendar > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.List < java.util.Calendar > VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3845
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 . start ( ) ; VAR_5 = new TYPE_3 ( ) ; VAR_6 = new TYPE_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 . start ( ) ; VAR_5 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3846
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = ! ( VAR_1 ) ; METHOD_2 ( ) ; },"['Insert UnaryOperator', 'Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",3847
public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_2 . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3848
public static boolean METHOD_1 ( TYPE_1 f ) { VAR_1 = new java.util.LinkedList < TYPE_2 > ( ) ; VAR_1 . METHOD_2 ( f . METHOD_3 ( ) ) ; return TYPE_3 . METHOD_4 ( f ) ; },public static boolean METHOD_1 ( TYPE_1 f ) { VAR_1 . METHOD_2 ( f . METHOD_3 ( ) ) ; return TYPE_3 . METHOD_4 ( f ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3849
protected void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; position = VAR_2 . METHOD_2 ( ) . METHOD_3 ( position ) ; VAR_1 = false ; return ; },protected void METHOD_1 ( ) { position = VAR_2 . METHOD_2 ( ) . METHOD_3 ( position ) ; return ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3850
protected void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } VAR_2 = null ; VAR_3 = 0 ; },protected void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3851
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { this . VAR_1 = ( ( TYPE_4 ) ( VAR_1 ) ) ; this . response = ( ( TYPE_5 ) ( response ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { this . VAR_1 = ( ( TYPE_4 ) ( VAR_1 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",3852
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 ; VAR_1 = null ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3853
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3854
public void METHOD_1 ( double VAR_1 ) { x += ( TYPE_1 . METHOD_2 ( VAR_1 ) ) * ( VAR_2 ) ; y += ( TYPE_1 . METHOD_3 ( VAR_1 ) ) * ( VAR_2 ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( double VAR_1 ) { this . x += ( TYPE_1 . METHOD_2 ( VAR_1 ) ) * ( VAR_2 ) ; this . y += ( TYPE_1 . METHOD_3 ( VAR_1 ) ) * ( VAR_2 ) ; VAR_3 = VAR_4 ; },"['Insert ThisAccess', 'Insert ThisAccess']",3857
"public final void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; VAR_3 = false ; VAR_4 = false ; data = null ; VAR_5 = null ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public final void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; VAR_3 = false ; data = null ; VAR_5 = null ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3858
public java.lang.String METHOD_1 ( ) { if ( ( ( this . VAR_1 ) == null ) || ( this . VAR_2 . isEmpty ( ) ) ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) . toString ( ) ; } return this . VAR_1 ; },public java.lang.String METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3859
"public static void METHOD_1 ( TYPE_1 file ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( file ) ; VAR_1 = file ; TYPE_2 . METHOD_1 ( file , STRING_1 ) ; }","public static void METHOD_1 ( java.io.File file ) throws java.lang.Exception { TYPE_2 . METHOD_1 ( file , STRING_1 ) ; }","['Update TypeReference', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3860
public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( int index ) { VAR_1 . remove ( index ) ; for ( java.util.List < TYPE_2 > VAR_2 : rows ) { VAR_3 . remove ( index ) ; } VAR_4 = true ; return this ; },public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( int index ) { VAR_1 . remove ( index ) ; for ( java.util.List < TYPE_2 > VAR_2 : rows ) { VAR_3 . remove ( index ) ; } return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3861
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = getContext ( ) . METHOD_2 ( ) . getColor ( VAR_1 ) ; return this ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Update TypeReference', 'Move VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete Return']",3862
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3863
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",3864
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( ) ; VAR_2 = 0 ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( ) ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3865
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 . METHOD_2 ( false ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3866
public void open ( ) { VAR_1 = - 1 ; size = VAR_2 . size ( ) ; VAR_2 . open ( ) ; },public void open ( ) { VAR_2 . open ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3867
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( STRING_1 ) ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3868
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 = true ; if ( ! ( VAR_4 ) ) { METHOD_2 ( VAR_1 , false ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; if ( ! ( VAR_4 ) ) { METHOD_2 ( VAR_1 , false ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3869
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 != null ) && ( contains ( VAR_1 ) ) ) VAR_2 = VAR_1 ; else VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3871
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = java.lang.Integer . METHOD_2 ( VAR_4 . get ( VAR_2 ) . VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; }","['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",3872
public static void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },public static void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3873
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getString ( VAR_1 ) ) ; VAR_2 = VAR_3 ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getString ( VAR_1 ) ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3874
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3875
public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( VAR_1 ) + 1 ) % ( VAR_2 . length ) ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( VAR_1 ) + 1 ) % ( VAR_2 . length ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3876
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = null ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3877
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ) { VAR_3 = VAR_4 . get ( VAR_2 . getId ( ) ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; } },public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( VAR_5 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3878
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_6 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3879
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; METHOD_4 ( VAR_4 ) ; },public static void METHOD_1 ( ) throws java.lang.Exception { METHOD_4 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3880
"public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( x , y , VAR_3 . METHOD_2 ( ) , VAR_1 ) ) ; VAR_1 = 0 ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( x , y , VAR_3 . METHOD_2 ( ) , VAR_1 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3881
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = false ; } VAR_3 = new TYPE_1 ( ) ; VAR_1 = new java.lang.Thread ( VAR_3 ) ; VAR_4 . start ( ) ; },public void METHOD_1 ( ) { VAR_3 = new TYPE_1 ( ) ; VAR_1 = new java.lang.Thread ( VAR_3 ) ; VAR_4 . start ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3882
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String text = getText ( ) ; if ( ( text != null ) && ( ! ( STRING_1 . equals ( text ) ) ) ) { VAR_2 = false ; } METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3883
public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { METHOD_2 ( ) ; VAR_1 = true ; } else { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; METHOD_2 ( ) ; VAR_1 = true ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3884
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 ; return VAR_1 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Update TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3885
public void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { VAR_1 = 0 ; } VAR_3 . METHOD_2 ( ( ( VAR_4 ) * ( VAR_1 ) ) ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ( ( VAR_4 ) * ( VAR_1 ) ) ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3887
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_4 ) ; VAR_5 = new TYPE_4 ( VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",3888
private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; VAR_7 . METHOD_2 ( VAR_5 ) ; VAR_8 . METHOD_2 ( VAR_5 ) ; },private void METHOD_1 ( ) { VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; VAR_7 . METHOD_2 ( VAR_5 ) ; VAR_8 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3889
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( context , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 [ VAR_3 ] . METHOD_3 ( VAR_4 ) ; -- ( VAR_5 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( context , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 [ VAR_3 ] . METHOD_3 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",3890
"public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = new TYPE_1 ( 0 , 0 ) ; }",public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",3891
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3892
"java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; java.lang.String VAR_5 = STRING_1 ; if ( METHOD_2 ( ) ) { VAR_5 = TYPE_1 . METHOD_3 ( ) ; } return VAR_5 ; }","java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_5 = STRING_1 ; if ( METHOD_2 ( ) ) { VAR_5 = TYPE_1 . METHOD_3 ( ) ; } return VAR_5 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3895
public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = ( VAR_2 . size ( ) ) - 1 ; } else { VAR_1 = ( VAR_1 ) - 1 ; } },public void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) - 1 ) % ( VAR_2 . size ( ) ) ; },"['Move Assignment', 'Move FieldWrite', 'Update BinaryOperator', 'Move BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete Assignment', 'Delete Block', 'Delete If']",3896
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) != null ) { this . VAR_3 = null ; this . VAR_2 = null ; } VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_4 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3898
public void METHOD_1 ( int VAR_1 ) { VAR_2 . getData ( ) . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_1 ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . getData ( ) . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",3899
private void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 ) ; VAR_4 = TYPE_1 . METHOD_4 ( VAR_1 ) ; },private void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( VAR_1 ) ; VAR_4 = METHOD_4 ( VAR_1 ) ; },"['Update TypeAccess', 'Update TypeAccess', 'Update TypeAccess']",3900
"public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( false ) ; METHOD_3 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; } }","public void METHOD_1 ( ) { if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",3901
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; if ( ( ( this . VAR_2 ) == ( VAR_3 ) ) && ( ! ( this . METHOD_3 ( ) ) ) ) { VAR_4 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; if ( ( ( this . VAR_2 ) == ( VAR_3 ) ) && ( ! ( this . METHOD_3 ( ) ) ) ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3902
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_5 = null ; VAR_6 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3903
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = 1 ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3904
"void METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_1 ) == null ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_5 . height ) ; VAR_1 = VAR_6 . getData ( ) ; } }",void METHOD_1 ( ) { int i ; VAR_1 = null ; if ( ( VAR_1 ) == null ) { } },"['Insert LocalVariable', 'Insert TypeReference', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3906
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable']",3908
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead']",3909
public java.io.InputStream METHOD_1 ( java.lang.String name ) { if ( VAR_1 . contains ( STRING_1 ) ) { if ( VAR_1 . contains ( VAR_2 ) ) { ( VAR_3 ) ++ ; } return null ; } else { return super . METHOD_1 ( name ) ; } },public java.io.InputStream METHOD_1 ( java.lang.String name ) { if ( VAR_1 . contains ( STRING_1 ) ) { return null ; } else { return super . METHOD_1 ( name ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",3910
protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( context ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) . getString ( VAR_2 ) ) ; VAR_3 . show ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",3911
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( label ) ; label = null ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( label ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3912
public void METHOD_1 ( float VAR_1 ) { VAR_2 = ( VAR_2 ) + VAR_1 ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = ( this . VAR_1 ) + VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess', 'Update FieldRead', 'Insert ThisAccess']",3914
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( STRING_2 , VAR_4 class ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",3915
"public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 , METHOD_2 ( VAR_3 ) ) ; VAR_4 . add ( VAR_2 , VAR_5 ) ; VAR_6 . add ( VAR_2 , VAR_7 ) ; }","public void METHOD_1 ( ) { VAR_1 . add ( step , METHOD_2 ( VAR_3 ) ) ; VAR_4 . add ( step , VAR_5 ) ; VAR_6 . add ( step , VAR_7 ) ; step = 0 ; }","['Insert Assignment', 'Insert FieldRead', 'Insert FieldRead', 'Insert FieldRead', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess']",3916
public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { METHOD_1 ( VAR_3 . METHOD_2 ( VAR_1 ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",3917
"public void METHOD_1 ( TYPE_1 error ) { intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; return ; }","public void METHOD_1 ( TYPE_1 error ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",3918
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_2 ( ) ; java.lang.String query = ( STRING_1 + ( VAR_2 ) ) + STRING_2 ; return VAR_1 . METHOD_2 ( query ) ; },public TYPE_1 METHOD_1 ( ) { java.lang.String query = ( STRING_1 + ( VAR_2 ) ) + STRING_2 ; return VAR_1 . METHOD_2 ( query ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3919
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },public void METHOD_1 ( ) throws java.io.IOException { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3920
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = VAR_1 ; VAR_3 = VAR_2 . METHOD_1 ( STRING_1 ) ; if ( ( VAR_3 ) == null ) VAR_3 = STRING_2 ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3921
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_2 . length ( ) ) > 0 ) ) { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_2 . length ( ) ) > 0 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = null ; } },"['Insert Block', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",3922
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3923
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = null ; VAR_4 = false ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = null ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3924
public double METHOD_1 ( ) { VAR_1 = VAR_2 [ VAR_3 ] ; if ( ( VAR_4 ) < INT_1 ) { VAR_1 = 0 ; } return VAR_1 ; },public double METHOD_1 ( ) { VAR_1 = VAR_2 [ VAR_3 ] ; return VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3925
"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 class , STRING_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_1 class , new TYPE_4 ( ) ) ; }",public static void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",3926
protected java.lang.Void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = 0 ; METHOD_2 ( ) ; return null ; },protected java.lang.Void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3927
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 ; java.lang.String VAR_5 = VAR_6 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_7 , VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.String VAR_5 = VAR_6 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_7 , null , VAR_5 ) ; }","['Insert Literal', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3928
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != ( METHOD_2 ( ) ) ) { VAR_1 = METHOD_2 ( ) ; new TYPE_1 ( getActivity ( ) , this ) . execute ( VAR_1 ) ; } }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; new TYPE_1 ( getActivity ( ) , this ) . execute ( METHOD_2 ( ) ) ; }","['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3930
"public void METHOD_1 ( int x , int y , boolean VAR_1 ) { VAR_2 = x ; VAR_3 = y ; this . VAR_4 = VAR_1 ; if ( VAR_1 ) { VAR_5 = VAR_3 ; } }","public void METHOD_1 ( int x , int y , boolean VAR_1 ) { VAR_2 = x ; VAR_3 = y ; this . VAR_4 = VAR_1 ; }","['Delete VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",3931
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( endTime ) . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( endTime ) ; } return VAR_1 ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",3932
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { METHOD_2 ( new java.util.ArrayList < TYPE_1 > ( ) ) ; } return this . VAR_1 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return this . VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert ThisAccess', 'Delete Invocation']",3933
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { METHOD_2 ( ) . VAR_2 = 0 ; METHOD_2 ( ) . VAR_3 = 0 ; METHOD_2 ( ) . VAR_4 = 0 ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3934
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_3 < TYPE_4 , TYPE_5 > > VAR_2 ) throws java.lang.Exception { for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { VAR_4 = VAR_3 ; VAR_5 = VAR_1 ; VAR_2 . METHOD_3 ( VAR_6 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_3 < TYPE_4 , TYPE_1 > > VAR_2 ) throws java.lang.Exception { for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( new TYPE_3 ( VAR_3 , VAR_1 ) ) ; } }","['Insert ConstructorCall', 'Update TypeReference', 'Move VariableRead', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",3935
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; VAR_2 = false ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3936
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3939
public int METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } return VAR_2 ; },public int METHOD_1 ( ) { VAR_1 = false ; METHOD_3 ( ) ; return VAR_2 ; },"['Insert Assignment', 'Move Invocation', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",3940
"public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; }","public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3941
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 . remove ( VAR_1 ) ; VAR_3 . commit ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3942
public static java.lang.String METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return null ; } else { VAR_1 = false ; java.lang.String VAR_2 = VAR_3 ; VAR_3 = STRING_1 ; VAR_4 = false ; return VAR_2 ; } },public static java.lang.String METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return null ; } else { VAR_1 = false ; java.lang.String VAR_2 = VAR_3 ; VAR_3 = STRING_1 ; return VAR_2 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3943
"protected void METHOD_1 ( java.lang.Exception VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; }","protected void METHOD_1 ( java.lang.Exception VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3944
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( event ) ; VAR_1 = ( VAR_2 ) | ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( event ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",3946
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( VAR_5 ) ; VAR_4 . METHOD_3 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",3947
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; message = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",3948
public static final void METHOD_1 ( ) { VAR_1 = false ; ( VAR_2 ) ++ ; },public static final void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete UnaryOperator']",3949
public void remove ( final android.content.Context c ) { TYPE_1 . METHOD_1 ( c ) . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },public void remove ( final android.content.Context c ) { TYPE_1 . METHOD_1 ( c ) . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3950
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3951
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 ) { VAR_4 = VAR_5 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_4 ) ; VAR_3 = false ; } VAR_6 = false ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 ) { VAR_4 = VAR_5 . getText ( ) . toString ( ) ; METHOD_2 ( VAR_4 ) ; } VAR_6 = false ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3952
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = ( ( int ) ( FLOAT_1 * ( METHOD_2 ( ) ) ) ) ; VAR_3 = METHOD_3 ( ) ; METHOD_4 ( FLOAT_2 ) ; },private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = ( ( int ) ( FLOAT_1 * ( METHOD_2 ( ) ) ) ) ; METHOD_4 ( FLOAT_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",3953
"public void METHOD_1 ( ) { VAR_1 = INT_1 + ( INT_2 * ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_1 = INT_3 ; TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + ( VAR_1 ) ) ) ; }",public void METHOD_1 ( ) { VAR_1 = INT_1 + ( INT_2 * ( VAR_2 . METHOD_2 ( ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",3954
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; title = VAR_3 . getString ( STRING_1 ) ; VAR_4 = VAR_3 . getString ( STRING_2 ) ; name = VAR_3 . getString ( ""name"" ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; title = VAR_3 . getString ( STRING_1 ) ; VAR_4 = VAR_3 . getString ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",3955
"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = null ; VAR_2 = null ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 , STRING_1 ) ; TYPE_3 . METHOD_6 ( ) ; }","public static void METHOD_1 ( ) { VAR_2 = null ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 , STRING_1 ) ; TYPE_3 . METHOD_6 ( ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3956
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . state = false ; VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; TYPE_2 . METHOD_4 ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) ; TYPE_2 . METHOD_4 ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3957
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3958
public void METHOD_1 ( java.lang.String url ) { VAR_1 = url ; VAR_2 = METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String url ) { VAR_2 = METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3959
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . height = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = INT_1 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . height = VAR_3 ; VAR_4 = VAR_5 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3960
boolean METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) && ( VAR_1 == ( VAR_3 ) ) ) { VAR_4 = start ; METHOD_2 ( ) ; } return true ; },boolean METHOD_1 ( int VAR_1 ) { return false ; },"['Update Literal', 'Delete FieldRead', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",3962
private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } VAR_2 = ! ( VAR_2 ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete Invocation']",3964
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3965
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3966
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getName ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3967
public void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_1 != null ) && ( ( VAR_3 ) != null ) ) { VAR_4 . handle ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",3969
"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; throw new TYPE_2 ( ) ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; throw new TYPE_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3970
"protected boolean METHOD_1 ( android.content.Context context , java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( context , VAR_2 . getString ( VAR_3 ) , VAR_4 ) . show ( ) ; VAR_5 = true ; return true ; }","protected boolean METHOD_1 ( android.content.Context context , java.lang.Throwable VAR_1 ) { return false ; }","['Update Literal', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3971
public void METHOD_1 ( ) { if ( ( count ) > 0 ) { METHOD_2 ( ) ; VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; VAR_4 = 0 ; } },public void METHOD_1 ( ) { if ( ( count ) > 0 ) { VAR_1 = true ; VAR_2 = true ; VAR_3 = true ; } },"['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3972
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3973
public void METHOD_1 ( ) { this . position = 0 ; this . VAR_1 = false ; },public void METHOD_1 ( ) { this . position = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3974
"public void METHOD_1 ( int n ) { VAR_1 = n ; VAR_2 = new TYPE_1 ( this , VAR_3 [ VAR_1 ] ) ; VAR_4 = new TYPE_1 ( this , VAR_3 [ ( ( VAR_1 ) + 1 ) ] ) ; }",public void METHOD_1 ( int n ) { VAR_1 = n ; VAR_2 = new TYPE_1 ( VAR_3 [ VAR_1 ] ) ; VAR_4 = new TYPE_1 ( VAR_3 [ ( ( VAR_1 ) + 1 ) ] ) ; },"['Delete ThisAccess', 'Delete ThisAccess']",3975
"public java.util.Map < java.lang.Long , TYPE_1 > METHOD_1 ( ) { synchronized ( this ) { java.util.Map < java.lang.Long , TYPE_1 > VAR_1 = new java.util.HashMap ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; return VAR_1 ; } }","public java.util.Map < java.lang.Long , TYPE_1 > METHOD_1 ( ) { synchronized ( this ) { java.util.Map < java.lang.Long , TYPE_1 > VAR_1 = new java.util.HashMap ( VAR_2 ) ; VAR_2 . METHOD_2 ( ) ; return VAR_1 ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3976
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = INT_1 ; VAR_3 . height = INT_2 ; VAR_4 = false ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = INT_1 ; VAR_3 . height = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3977
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( this , VAR_3 , VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( this , VAR_3 , VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3978
"public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( new android.content.Intent ( this , VAR_2 class ) ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( new android.content.Intent ( this , VAR_2 class ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3979
"public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; VAR_3 = false ; } }","public void METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , TYPE_2 VAR_2 ) { VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; }","['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",3980
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_3 ( ) ; VAR_5 = false ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_3 ( ) ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",3981
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( ( - 1 ) , ( - 1 ) ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_4 . METHOD_2 ( ( - 1 ) , ( - 1 ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3982
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , int VAR_5 , TYPE_1 VAR_6 ) { this . VAR_6 = VAR_6 ; this . VAR_7 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , int VAR_5 ) { this . VAR_7 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3983
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 [ VAR_3 ] = VAR_1 ; ( VAR_3 ) ++ ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 [ VAR_3 ] = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",3984
public TYPE_1 METHOD_1 ( TYPE_1 [ ] VAR_1 ) { METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_1 [ ] VAR_1 ) { params = new java.util.ArrayList ( ) ; METHOD_2 ( VAR_1 ) ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",3985
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = new TYPE_1 ( ) ; METHOD_3 ( this . VAR_2 ) ; this . VAR_3 = new TYPE_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = new TYPE_1 ( ) ; METHOD_3 ( this . VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",3986
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",3987
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , STRING_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",3988
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_2 = true ; } VAR_3 . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation']",3989
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) { c . METHOD_3 ( ) ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = true ; } }","public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) { c . METHOD_3 ( ) ; VAR_7 = true ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3990
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) ; },void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_4 ( VAR_2 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",3991
"public static java.lang.String METHOD_1 ( ) { if ( VAR_1 . isEmpty ( VAR_2 ) ) { VAR_2 = TYPE_1 . METHOD_2 ( ) . getString ( VAR_3 , STRING_1 ) ; } return VAR_2 ; }",public static java.lang.String METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",3992
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3993
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; VAR_3 = VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_4 = VAR_5 . getBoolean ( STRING_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; VAR_4 = VAR_5 . getBoolean ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3995
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = false ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3996
"public TYPE_1 METHOD_1 ( ) { TYPE_1 var = new TYPE_1 ( name , VAR_1 ) ; VAR_2 . index = index ; return var ; }","public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( name , VAR_1 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",3997
private void METHOD_1 ( ) { switch ( VAR_1 . METHOD_2 ( ) ) { case 0 : VAR_2 = java.lang.Integer . METHOD_3 ( VAR_3 ) ; output = java.lang.Integer.parseInt ( VAR_2 ) ; break ; case 1 : output = VAR_3 ; break ; } },private void METHOD_1 ( ) { switch ( VAR_1 . METHOD_2 ( ) ) { case 0 : output = java.lang.Integer.parseInt ( java.lang.Integer . METHOD_3 ( VAR_3 ) ) ; break ; case 1 : output = VAR_3 ; break ; } },"['Move FieldWrite', 'Insert Invocation', 'Move TypeAccess', 'Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",3998
"private void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 ) TYPE_1 . METHOD_3 ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; } }","private void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 ) TYPE_1 . METHOD_3 ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",3999
"public void METHOD_1 ( ) { this . VAR_1 = new java.io.File ( METHOD_2 ( ) , STRING_1 ) ; this . VAR_2 = TYPE_1 . METHOD_3 ( this . VAR_1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_1 = new java.io.File ( METHOD_2 ( ) , STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldRead']",4000
public java.util.Iterator < java.lang.Integer > iterator ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( this ) ; } VAR_1 . METHOD_1 ( ) ; return VAR_1 ; },public java.util.Iterator < java.lang.Integer > iterator ( ) { VAR_1 . METHOD_1 ( ) ; return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4001
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 = null ; VAR_7 = null ; VAR_8 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4002
protected void METHOD_1 ( ) { endTime = ( TYPE_1 . METHOD_2 ( ) ) + INT_1 ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4003
"public void METHOD_1 ( java.lang.String name , boolean VAR_1 ) { VAR_2 = VAR_3 . get ( name ) ; VAR_4 = 0 ; VAR_5 = VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_6 = VAR_2 . METHOD_3 ( VAR_4 ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.lang.String name , boolean VAR_1 ) { VAR_2 = VAR_3 . get ( name ) ; VAR_4 = 0 ; VAR_5 = VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_6 = VAR_2 . METHOD_3 ( VAR_4 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4004
public java.lang.String METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead']",4005
"public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 <= 0 ) { throw new TYPE_1 ( STRING_1 ) ; } else { VAR_2 = ( VAR_2 ) + VAR_1 ; VAR_3 . add ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ; } }",public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 <= 0 ) { throw new TYPE_1 ( STRING_1 ) ; } else { VAR_3 . add ( new TYPE_2 ( VAR_1 ) ) ; } },"['Update ConstructorCall', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead']",4006
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( int VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; },public static java.util.ArrayList < TYPE_1 > METHOD_1 ( int VAR_1 ) { return TYPE_3 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4007
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ( ( VAR_4 . size ( ) ) - 1 ) ) ; METHOD_3 ( VAR_2 ) ; } else { METHOD_4 ( ( - 1 ) ) ; } },public void METHOD_1 ( ) { METHOD_4 ( ( - 1 ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",4008
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { this . VAR_3 . set ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_4 = true ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { this . VAR_3 . set ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4009
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4010
"public void METHOD_1 ( boolean VAR_1 , TYPE_1 listener , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( listener ) ; }","public void METHOD_1 ( boolean VAR_1 , TYPE_1 listener ) { VAR_4 = VAR_1 ; ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( listener ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4011
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . setValue ( VAR_3 ) ; VAR_4 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . setValue ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4012
public void METHOD_1 ( java.lang.String content ) { if ( ( content . METHOD_2 ( 0 ) ) != CHAR_1 ) this . content = STRING_1 + content ; else this . content = content ; },public void METHOD_1 ( java.lang.String content ) { this . content = STRING_1 + content ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4013
"public void METHOD_1 ( int VAR_1 ) { x = VAR_1 ; TYPE_1 p = VAR_2 . METHOD_2 ( new TYPE_1 ( x , y ) ) ; VAR_3 = VAR_4 . x ; VAR_5 = VAR_4 . y ; }",public void METHOD_1 ( int VAR_1 ) { x = VAR_1 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4014
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) . size ( ) ) > 0 ) this . VAR_1 = STRING_1 ; else this . VAR_1 = this . VAR_2 ; },protected void METHOD_1 ( ) { this . VAR_1 = STRING_1 ; },"['Move Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4015
public void METHOD_1 ( int VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4017
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4018
"public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 , int VAR_6 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 , int VAR_6 ) { this . VAR_1 = VAR_1 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4019
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; key = METHOD_4 ( VAR_1 ) ; VAR_3 = METHOD_5 ( VAR_1 ) ; VAR_4 = METHOD_6 ( key ) ; },private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; key = METHOD_4 ( VAR_1 ) ; VAR_3 = METHOD_5 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",4020
void METHOD_1 ( double num ) { VAR_1 = num ; VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; },void METHOD_1 ( double num ) { VAR_1 = num ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",4021
public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 VAR_2 = METHOD_3 ( ) ; VAR_1 = new java.lang.Thread ( VAR_2 ) ; VAR_3 . start ( ) ; } },public void METHOD_1 ( ) { TYPE_1 VAR_2 = METHOD_3 ( ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; },"['Move LocalVariable', 'Insert Invocation', 'Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4022
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { TYPE_2 VAR_2 = response . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { TYPE_2 VAR_2 = response . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",4023
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_2 ( ) ; VAR_5 = null ; },void METHOD_1 ( ) { VAR_4 . METHOD_2 ( ) ; VAR_5 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4024
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; java.io.InputStream VAR_3 = METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_6 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4025
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; if ( VAR_3 ) { VAR_4 = VAR_5 ; METHOD_2 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",4026
"protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; METHOD_3 ( VAR_3 , null , null , false , STRING_1 ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",4027
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ! ( VAR_2 ) ) return ; for ( TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 > . VAR_3 VAR_4 : VAR_5 ) VAR_4 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { -- ( VAR_1 ) ; if ( ! ( VAR_2 ) ) return ; for ( TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 > . VAR_3 VAR_4 : VAR_5 ) VAR_4 . METHOD_1 ( ) ; }","['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",4028
private void init ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = getContext ( ) . METHOD_1 ( ) . METHOD_2 ( ) . VAR_3 ; },private void init ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment']",4030
"private java.lang.String METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 = true ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; java.lang.String VAR_5 = VAR_6 . toString ( ) ; return VAR_5 ; }","private java.lang.String METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; java.lang.String VAR_5 = VAR_6 . toString ( ) ; return VAR_5 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4031
"private void METHOD_1 ( ) { type = - 1 ; VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_2 ( getContext ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }","private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_2 ( getContext ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",4032
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_2 = TYPE_2 . METHOD_6 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_2 = TYPE_2 . METHOD_6 ( ) ; VAR_3 = new TYPE_3 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4033
public void METHOD_1 ( ) { VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { if ( ( index ) >= 0 ) { VAR_2 . METHOD_2 ( index ) ; index = VAR_3 ; } VAR_2 = null ; } },public void METHOD_1 ( ) { VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { if ( ( index ) >= 0 ) { VAR_2 . METHOD_2 ( index ) ; index = - 1 ; } VAR_2 = null ; } },"['Insert UnaryOperator', 'Insert Literal', 'Delete FieldRead']",4034
public TYPE_1 METHOD_1 ( ) { this . value = TYPE_1 . METHOD_2 ( ) ; return value ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4035
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = new TYPE_1 ( getActivity ( ) , ( ( TYPE_2 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) ) ; VAR_4 . execute ( java.lang.Integer.toString ( VAR_1 ) ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( getActivity ( ) , ( ( TYPE_2 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) ) ; VAR_4 . execute ( java.lang.Integer.toString ( VAR_1 ) ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",4036
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { y = VAR_1 . METHOD_2 ( STRING_1 , 0 ) ; x = VAR_1 . METHOD_2 ( STRING_2 , 0 ) ; return this ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { x = VAR_1 . METHOD_2 ( STRING_1 , 0 ) ; y = VAR_1 . METHOD_2 ( STRING_2 , 0 ) ; return this ; }","['Move FieldWrite', 'Move FieldWrite']",4037
public void METHOD_1 ( ) { if ( VAR_1 ) return ; TYPE_1 . METHOD_2 ( out ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( out ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4038
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; if ( VAR_2 ) { METHOD_3 ( VAR_3 ) ; VAR_2 = false ; } },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4039
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . setEnabled ( true ) ; VAR_4 = VAR_5 . METHOD_2 ( ) ; VAR_6 = VAR_5 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . setEnabled ( true ) ; VAR_4 = VAR_5 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4040
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 = TYPE_2 . METHOD_4 ( METHOD_3 ( ) ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4041
"public void METHOD_1 ( final java.io.InputStream VAR_1 ) throws java.lang.Exception { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 ) , this ) ; }","public void METHOD_1 ( final java.io.InputStream VAR_1 ) throws java.lang.Exception { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 ) , this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4042
public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 = null ; } },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4044
public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) == 1 ) { METHOD_2 ( ) ; VAR_1 = 0 ; METHOD_3 ( ) ; } if ( VAR_2 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },public void METHOD_1 ( android.view.View view ) { if ( VAR_2 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",4045
public synchronized void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; METHOD_2 ( ) ; },public synchronized void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4046
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = ( VAR_4 . METHOD_2 ( ) ) == ( VAR_5 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4047
protected void execute ( ) { if ( ( VAR_1 ) == true ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; } else { VAR_2 . METHOD_2 ( ) ; VAR_1 = true ; } VAR_3 = true ; },protected void execute ( ) { if ( VAR_1 = true ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; } else if ( VAR_1 = false ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = true ; } VAR_3 = true ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert If', 'Insert Assignment', 'Insert Block', 'Insert FieldWrite', 'Insert Literal', 'Move Invocation', 'Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",4049
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4050
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = new TYPE_1 ( this ) . execute ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( this ) . execute ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4051
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; METHOD_2 ( ) ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4052
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4053
public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String message = STRING_1 ; METHOD_2 ( message ) ; VAR_2 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; VAR_3 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String message = STRING_1 ; METHOD_2 ( message ) ; VAR_2 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4054
"public void execute ( final java.lang.String [ ] VAR_1 , final TYPE_1 VAR_2 , final java.util.Collection < TYPE_1 > VAR_3 , final java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_4 ) throws TYPE_2 { VAR_5 = TYPE_3 . METHOD_1 ( ) ; }","public void execute ( final java.lang.String [ ] VAR_1 , final TYPE_1 VAR_2 , final java.util.Collection < TYPE_1 > VAR_3 , final java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_4 ) throws TYPE_2 { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4055
public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_2 ( STRING_2 ) ; },public static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4056
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = this ; this . VAR_3 . add ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",4057
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; TYPE_1 . METHOD_3 ( this ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4058
"private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ( ( TYPE_2 ) ( VAR_3 ) ) , VAR_1 ) ; METHOD_2 ( VAR_2 ) ; }","private void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ( ( TYPE_2 ) ( VAR_3 ) ) , false ) ; METHOD_2 ( VAR_2 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert TypeAccess', 'Insert Literal', 'Delete VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",4059
"protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String message ) { VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( null , new TYPE_3 ( VAR_1 , VAR_2 , message ) ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String message ) { VAR_3 . METHOD_1 ( null , new TYPE_3 ( VAR_1 , VAR_2 , message ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4061
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; this . VAR_3 = VAR_3 ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4062
private void METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == ( VAR_2 ) ) return ; else { if ( VAR_1 ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } } VAR_2 = VAR_1 ; },private void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4064
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } VAR_3 . i ( STRING_1 , ( STRING_2 + ( VAR_4 ) ) ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_3 . i ( STRING_1 , ( STRING_2 + ( VAR_4 ) ) ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4065
public void METHOD_1 ( android.view.View view ) { if ( ! ( METHOD_2 ( ) ) ) { if ( ! ( VAR_1 . contains ( STRING_1 ) ) ) { VAR_2 . append ( STRING_1 ) ; VAR_3 = ( VAR_3 ) + STRING_1 ; } } },public void METHOD_1 ( android.view.View view ) { VAR_2 . append ( STRING_1 ) ; },"['Move Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",4066
public void METHOD_1 ( ) { VAR_1 = true ; int c = VAR_2 ; while ( c == ( VAR_2 ) ) { } VAR_1 = false ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { int c = VAR_2 ; while ( c == ( VAR_2 ) ) { } METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4067
public void METHOD_1 ( boolean b ) { VAR_1 = b ; },public void METHOD_1 ( boolean b ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4068
protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; VAR_3 = false ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4069
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = VAR_2 . METHOD_4 ( ) ; METHOD_5 ( true ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; METHOD_5 ( true ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4070
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4071
private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; },private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4072
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; } VAR_2 = false ; VAR_4 . METHOD_3 ( true ) ; VAR_5 = false ; VAR_6 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( true ) ; VAR_5 = false ; VAR_6 = null ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4073
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ( - INT_1 ) ) ; METHOD_3 ( ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ( - INT_1 ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4074
public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; VAR_1 = true ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",4075
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( position ) ; int VAR_4 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ++ VAR_4 ) ) ; VAR_5 = null ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( position ) ; int VAR_4 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ++ VAR_4 ) ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4076
"private void METHOD_1 ( ) { METHOD_2 ( this ) ; VAR_1 = new TYPE_1 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; VAR_3 = new TYPE_2 ( 0 , 0 ) ; VAR_4 = new java.util.ArrayList ( ) ; }",private void METHOD_1 ( ) { METHOD_2 ( this ) ; VAR_1 = new TYPE_1 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; VAR_4 = new java.util.ArrayList ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",4077
"public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_2 ) ; VAR_4 = false ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_2 ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4078
public void METHOD_1 ( TYPE_1 VAR_1 ) { },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",4079
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) this . VAR_1 = VAR_2 . replace ( STRING_1 , STRING_2 ) ; else this . VAR_1 = STRING_3 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) this . VAR_1 = VAR_2 . replace ( STRING_1 , STRING_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block']",4080
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; listener . METHOD_2 ( ) ; VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4081
"private void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . show ( this , STRING_1 , STRING_2 , true ) ; new TYPE_1 ( ) . execute ( ) ; }",private void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; new TYPE_1 ( ) . execute ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",4082
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; getData ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getData ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",4084
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_1 ) ; VAR_2 . a = 0 ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 . b , 0 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 . b , VAR_6 . a ) ; }","['Insert FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal']",4085
private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_4 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_5 ( null ) ; VAR_2 = null ; } } },private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_4 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4086
"private boolean METHOD_1 ( ) { try { METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 = true ; return true ; } catch ( TYPE_1 VAR_4 ) { return false ; } }","private boolean METHOD_1 ( ) { try { METHOD_2 ( VAR_1 , VAR_2 ) ; return true ; } catch ( java.lang.Exception VAR_4 ) { return false ; } }","['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4088
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 -= VAR_3 ; VAR_3 = 0L ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 -= VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4089
"public void METHOD_1 ( int key , char c ) { switch ( key ) { case VAR_1 : VAR_2 . x = FLOAT_1 ; VAR_2 . y = FLOAT_2 ; VAR_3 = INT_1 ; break ; default : break ; } }","public void METHOD_1 ( int key , char c ) { switch ( key ) { case VAR_1 : break ; default : break ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4090
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4091
protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new TYPE_2 ( METHOD_2 ( ) ) ; this . VAR_3 = new TYPE_3 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = new TYPE_3 ( new TYPE_2 ( METHOD_2 ( ) ) ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; },"['Move FieldWrite', 'Insert ConstructorCall', 'Move ConstructorCall', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4092
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_2 ( VAR_4 ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4094
public void METHOD_1 ( double x ) { VAR_1 -= x ; if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } },public void METHOD_1 ( double x ) { VAR_1 -= x ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4095
public void METHOD_1 ( ) { VAR_1 = 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4096
public void METHOD_1 ( ) { METHOD_2 ( ) ; this . VAR_1 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4097
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4098
"void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , double VAR_4 , boolean VAR_5 ) { VAR_6 += VAR_1 ; VAR_7 += VAR_2 ; VAR_8 += VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_5 = VAR_5 ; }","void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , double VAR_4 ) { VAR_6 += VAR_1 ; VAR_7 += VAR_2 ; VAR_8 += VAR_3 ; this . VAR_4 = VAR_4 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4099
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4100
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = VAR_3 . METHOD_2 ( ) . iterator ( ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4101
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; METHOD_3 ( VAR_4 ) ; VAR_4 = null ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4102
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",4104
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_2 ) ) ; VAR_3 = ( ( TYPE_3 ) ( VAR_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_2 ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",4105
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . position ( ) . get ( ) , target . METHOD_2 ( ) . get ( ) ) ; VAR_3 = 0 ; }",public void METHOD_1 ( ) { VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",4106
void METHOD_1 ( int y ) { this . VAR_1 . METHOD_1 ( y ) ; },void METHOD_1 ( int y ) { this . y = y ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4107
public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; ( ( TYPE_2 ) ( VAR_3 . get ( STRING_1 ) ) ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( VAR_3 . get ( STRING_1 ) ) ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4108
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . getInt ( STRING_1 ) ; VAR_6 = VAR_5 . getBoolean ( STRING_2 ) ; this . VAR_7 = VAR_5 . getString ( STRING_3 ) ; },public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . getInt ( STRING_1 ) ; VAR_6 = VAR_5 . getBoolean ( STRING_2 ) ; VAR_7 = VAR_5 . getString ( STRING_3 ) ; },['Delete ThisAccess'],4110
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = new TYPE_1 ( ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4111
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4112
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",4113
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_5 = VAR_6 ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4114
public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = 1 ; VAR_2 = INT_1 ; } else { VAR_1 = 0 ; VAR_2 = 0 ; } },public void METHOD_1 ( ) { VAR_2 = INT_1 ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4115
public void METHOD_1 ( ) { VAR_1 = false ; try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_1 = true ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4116
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = null ; },public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4117
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : ( VAR_3 . counter ) ++ ; ( VAR_4 ) ++ ; break ; } return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : ( VAR_3 . counter ) ++ ; break ; } return false ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4118
public static void METHOD_1 ( double VAR_1 ) { VAR_2 . min = VAR_1 ; },public static void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4119
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_3 ) ; VAR_4 = false ; return STRING_3 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_3 ) ; return STRING_3 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4120
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4122
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( TYPE_3 . METHOD_2 ( FLOAT_1 ) , ( VAR_2 ) - > METHOD_3 ( ) ) ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",4123
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( super . METHOD_1 ( VAR_1 ) ) ) ; VAR_3 = null ; VAR_4 = false ; return VAR_2 ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( super . METHOD_1 ( VAR_1 ) ) ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4124
public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( message ) ; },public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_1 = 1 ; VAR_3 . METHOD_2 ( message ) ; },"['Insert Literal', 'Delete FieldRead']",4125
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this , VAR_4 class ) ; VAR_3 . METHOD_3 ( true ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( this , VAR_4 class ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation']",4126
public void METHOD_1 ( TYPE_1 event ) { view . METHOD_2 ( ) ; VAR_1 = true ; },public void METHOD_1 ( TYPE_1 event ) { view . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4128
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . setEnabled ( true ) ; VAR_4 . setEnabled ( true ) ; METHOD_4 ( ) ; VAR_5 = false ; VAR_4 . setText ( STRING_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . setEnabled ( true ) ; VAR_4 . setEnabled ( false ) ; },"['Move Literal', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4129
"public void METHOD_1 ( java.util.Properties VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . info ( STRING_1 ) ; VAR_4 = VAR_2 . METHOD_2 ( ) ; VAR_5 = VAR_2 . METHOD_3 ( ) . get ( VAR_4 ) ; }","public void METHOD_1 ( java.util.Properties VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . info ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4130
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == INT_1 ) this . VAR_2 = 0 ; this . VAR_3 = 1 ; },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) == INT_1 ) this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4131
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = java.lang.Integer.toString ( INT_1 ) ; VAR_4 . setText ( VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4132
private void METHOD_1 ( ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) >= ( VAR_2 . size ( ) ) ) { VAR_1 = - 1 ; VAR_3 = false ; METHOD_2 ( ) ; return ; } },private void METHOD_1 ( ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) >= ( VAR_2 . size ( ) ) ) { VAR_1 = - 1 ; METHOD_2 ( ) ; return ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4133
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4134
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4135
public void METHOD_1 ( TYPE_1 buf ) { this . VAR_1 = buf . METHOD_2 ( ) ; this . VAR_2 = buf . METHOD_2 ( ) ; this . data = TYPE_2 . METHOD_3 ( buf ) ; },public void METHOD_1 ( TYPE_1 buf ) { this . data = TYPE_2 . METHOD_3 ( buf ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4136
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4137
public void METHOD_1 ( TYPE_1 name ) { METHOD_2 ( STRING_1 ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 name ) { METHOD_2 ( STRING_1 ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4138
"private void METHOD_1 ( android.content.Intent data ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , this ) ; VAR_3 = METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; }","private void METHOD_1 ( android.content.Intent data ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , this ) ; METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4139
public void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",4140
protected synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete Wra', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4141
"public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 . setText ( ( ( VAR_1 + STRING_1 ) + ( VAR_2 ? STRING_2 : STRING_3 ) ) ) ; VAR_4 = VAR_3 . getText ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 . setText ( ( ( VAR_1 + STRING_1 ) + ( VAR_2 ? STRING_2 : STRING_3 ) ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4142
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; isEmpty = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4143
"public boolean remove ( TYPE_1 value ) { this . METHOD_1 ( false ) ; VAR_1 = remove ( VAR_1 , value ) ; -- ( count ) ; return this . VAR_2 ; }","public boolean remove ( TYPE_1 value ) { this . METHOD_1 ( false ) ; VAR_1 = remove ( VAR_1 , value ) ; return this . VAR_2 ; }","['Delete FieldWrite', 'Delete UnaryOperator']",4145
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { getActivity ( ) . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; getActivity ( ) . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4146
public void METHOD_1 ( java.lang.CharSequence title ) { VAR_1 = title ; METHOD_2 ( ) . METHOD_3 ( title ) ; },public void METHOD_1 ( java.lang.CharSequence title ) { METHOD_2 ( ) . METHOD_3 ( title ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4147
public double METHOD_1 ( double VAR_1 ) { double x = java.lang.Math.round ( VAR_2 . METHOD_2 ( ) ) ; error = ( VAR_1 / x ) / VAR_1 ; return error ; },public double METHOD_1 ( double VAR_1 ) { double x = java.lang.Math.round ( VAR_2 . METHOD_2 ( ) ) ; double error = ( VAR_1 / x ) / VAR_1 ; return error ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4149
public int METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = VAR_1 . METHOD_1 ( ) ; return VAR_2 ; } else { return VAR_2 ; } } return VAR_3 ; },public int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If', 'Delete FieldRead']",4150
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4151
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; VAR_4 = STRING_1 ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4153
public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4154
public void METHOD_1 ( java.util.Date date ) { VAR_1 = VAR_2 . getTime ( ) ; VAR_3 . setText ( VAR_4 . format ( date ) ) ; },public void METHOD_1 ( java.util.Date date ) { VAR_3 . setText ( VAR_4 . format ( date ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4155
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = new TYPE_1 ( this ) ; VAR_3 = new TYPE_2 ( this ) ; },private void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( this ) ; VAR_3 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4157
public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",4158
"public void METHOD_1 ( TYPE_1 msg ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_1 ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } }",public void METHOD_1 ( TYPE_1 msg ) { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4159
public synchronized void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = - 1 ; },public synchronized void METHOD_1 ( ) { this . VAR_1 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",4160
"private void METHOD_1 ( ) { VAR_1 = STRING_1 ; if ( VAR_2 . isEmpty ( ) ) VAR_1 = ""\n"" ; else for ( java.lang.String VAR_3 : VAR_4 ) VAR_1 += VAR_3 + ""\n"" ; }","private void METHOD_1 ( ) { if ( VAR_2 . isEmpty ( ) ) VAR_1 = ""\n"" ; else for ( java.lang.String VAR_3 : VAR_4 ) VAR_1 += VAR_3 + ""\n"" ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4161
public void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { size = 0 ; VAR_2 = METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4162
public void METHOD_1 ( ) { list = new TYPE_1 ( this ) . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( INT_1 ) ; },public void METHOD_1 ( ) { list = new TYPE_1 ( this ) . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4163
public void METHOD_1 ( java.lang.String token ) { this . token = token ; METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 . execute ( token ) ; VAR_4 = VAR_2 ; },public void METHOD_1 ( java.lang.String token ) { this . token = token ; METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 . execute ( token ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4164
"public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = ""0"" ; } if ( ( VAR_3 . length ( ) ) == 0 ) { VAR_4 = ""0"" ; } }","public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = ""0"" ; } }","['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4165
"public final android.view.View getView ( final int position , final android.view.View VAR_1 , final TYPE_1 VAR_2 ) { if ( position > ( VAR_3 ) ) { VAR_3 = position ; METHOD_1 ( ) ; } return VAR_4 . get ( position , VAR_2 ) ; }","public final android.view.View getView ( final int position , final android.view.View VAR_1 , final TYPE_1 VAR_2 ) { return VAR_4 . get ( position , VAR_2 ) ; }","['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",4166
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = null ; },public void METHOD_1 ( ) { this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4167
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; VAR_2 = new TYPE_3 ( STRING_1 , STRING_1 , STRING_1 , STRING_2 , STRING_3 , VAR_3 ) ; VAR_4 = new TYPE_4 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( STRING_1 , STRING_1 , STRING_1 , STRING_2 , STRING_3 , VAR_3 ) ; VAR_4 = new TYPE_4 ( VAR_2 , VAR_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4168
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = true ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4169
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_1 ( ) ; VAR_6 = false ; VAR_7 = 0 ; VAR_8 . rows = 0 ; },public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4170
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( true ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4171
"public static void main ( java.lang.String [ ] args ) { TYPE_1 counter = new TYPE_1 ( args ) ; VAR_1 = new TYPE_2 ( counter , args ) ; counter . METHOD_1 ( ) ; }","public static void main ( java.lang.String [ ] args ) { TYPE_1 counter = new TYPE_1 ( ) ; new TYPE_2 ( counter , args ) ; counter . METHOD_1 ( ) ; }","['Move ConstructorCall', 'Update ConstructorCall', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Assignment']",4172
public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_1 ( new TYPE_3 ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 = new TYPE_4 ( VAR_1 ) ; },public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_1 ( new TYPE_3 ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",4173
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = ( VAR_1 != null ) && ( VAR_4 . toString ( ) . equals ( VAR_5 . getValue ( ) ) ) ; VAR_6 = METHOD_2 ( ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = ( VAR_1 != null ) && ( VAR_4 . toString ( ) . equals ( VAR_5 . getValue ( ) ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4174
"public static void main ( final java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = INT_1 ; VAR_3 . height = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( final java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4176
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4177
public void METHOD_1 ( boolean VAR_1 ) { height = 0 ; VAR_2 = 0 ; },public void METHOD_1 ( boolean VAR_1 ) { height = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4178
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; length = 0 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4179
"private void METHOD_1 ( int VAR_1 ) { VAR_2 |= VAR_1 ; VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; }",private void METHOD_1 ( int VAR_1 ) { VAR_2 |= VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4180
public TYPE_1 METHOD_1 ( java.lang.String endTime ) { VAR_1 = endTime ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String endTime ) { return this ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4181
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",4182
"private android.widget.LinearLayout METHOD_1 ( ) { android.widget.LinearLayout VAR_1 = new android.widget.LinearLayout ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 ) ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_1 . METHOD_2 ( VAR_3 ) ; return VAR_1 ; }","private android.widget.LinearLayout METHOD_1 ( ) { android.widget.LinearLayout VAR_1 = new android.widget.LinearLayout ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 ) ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_1 . METHOD_2 ( VAR_3 ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4183
private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( true ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( true ) ; VAR_2 . METHOD_1 ( ) ; },"['Update Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4184
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 . add ( 0 , VAR_1 ) ; ( size ) ++ ; VAR_3 = VAR_1 ; ( VAR_4 ) -- ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 . add ( 0 , VAR_1 ) ; ( size ) ++ ; VAR_3 = VAR_1 ; }","['Delete FieldWrite', 'Delete UnaryOperator']",4185
"public java.util.ArrayList < java.lang.String [ ] > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = STRING_1 ; VAR_3 = new TYPE_2 ( ) ; return VAR_3 . METHOD_2 ( VAR_4 , VAR_2 , VAR_1 ) ; }","public java.util.ArrayList < java.lang.String [ ] > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 = STRING_1 ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; return VAR_3 . METHOD_2 ( VAR_4 , VAR_2 , VAR_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4187
public void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ! VAR_1 ) { METHOD_3 ( STRING_1 ) ; } else { VAR_3 . METHOD_4 ( ) ; VAR_3 = null ; } },public void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ! VAR_1 ) { METHOD_3 ( STRING_1 ) ; } else { VAR_3 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4188
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { return ; } VAR_2 = VAR_1 ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { return ; } VAR_2 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4189
public void METHOD_1 ( int type ) { if ( type == 1 ) { VAR_1 = false ; } this . type = type ; VAR_2 . METHOD_2 ( 1 ) ; VAR_2 . METHOD_3 ( FLOAT_1 ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( int type ) { this . type = type ; VAR_2 . METHOD_2 ( 1 ) ; VAR_2 . METHOD_3 ( FLOAT_1 ) ; METHOD_4 ( VAR_2 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4190
private void init ( ) { while ( ( ( VAR_1 ) < ( offset ) ) && ( TYPE_1 . METHOD_1 ( ) ) ) { METHOD_2 ( ) ; } },private void init ( ) { while ( ( ( VAR_1 ) < ( offset ) ) && ( TYPE_1 . METHOD_1 ( ) ) ) { METHOD_2 ( ) ; ( VAR_1 ) ++ ; } },"['Insert UnaryOperator', 'Insert FieldWrite']",4191
"private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 = null ; TYPE_1 . METHOD_2 ( VAR_2 , STRING_2 ) ; } }","private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_3 ( true ) ; TYPE_1 . METHOD_2 ( VAR_2 , STRING_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4192
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; METHOD_4 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; METHOD_4 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",4193
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( id ) ; content = STRING_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( id ) ; content = STRING_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4195
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",4196
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_1 result = new TYPE_1 ( VAR_1 ) ; VAR_2 . type = VAR_3 ; VAR_2 . state = VAR_4 ; VAR_5 = VAR_1 . METHOD_2 ( ) . toString ( ) ; return result ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_1 result = new TYPE_1 ( VAR_1 ) ; VAR_2 . type = VAR_3 ; VAR_2 . state = VAR_4 ; return result ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4198
public final boolean METHOD_1 ( ) { VAR_1 = this . METHOD_2 ( ) ; return VAR_1 ; },public final boolean METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",4199
"public void METHOD_1 ( ) { data = TYPE_1 . METHOD_2 ( VAR_1 , file ) ; VAR_2 = TYPE_1 . METHOD_2 ( null , new java.io.File ( file . METHOD_3 ( ) , VAR_3 ) ) ; }","public void METHOD_1 ( ) { data = TYPE_1 . METHOD_2 ( VAR_1 , file ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",4200
public void METHOD_1 ( TYPE_1 position ) { TYPE_2 VAR_1 = METHOD_2 ( position ) ; if ( VAR_1 != null ) { METHOD_3 ( ) ; index = METHOD_4 ( position ) ; METHOD_5 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 position ) { TYPE_2 VAR_1 = METHOD_2 ( position ) ; if ( VAR_1 != null ) { METHOD_3 ( ) ; METHOD_5 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4201
"public void METHOD_1 ( TYPE_1 n ) { VAR_1 = VAR_2 . getName ( ) ; java.lang.String VAR_3 = n . METHOD_2 ( STRING_1 ) ; n . METHOD_3 ( STRING_1 ) ; n . METHOD_4 ( STRING_2 , VAR_3 ) ; VAR_4 . add ( n ) ; }","public void METHOD_1 ( TYPE_1 n ) { java.lang.String VAR_3 = n . METHOD_2 ( STRING_1 ) ; n . METHOD_3 ( STRING_1 ) ; n . METHOD_4 ( STRING_2 , VAR_3 ) ; VAR_4 . add ( n ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4202
"public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { VAR_1 = VAR_2 ; VAR_2 = new TYPE_3 ( ) ; return METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; }","public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { return METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4203
public static final TYPE_1 METHOD_1 ( float VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . a = VAR_1 ; VAR_3 . f = VAR_1 ; VAR_3 . k = VAR_1 ; VAR_3 . p = 1.0F ; return VAR_2 ; },public static final TYPE_1 METHOD_1 ( float VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . a = VAR_1 ; VAR_3 . f = VAR_1 ; VAR_3 . k = VAR_1 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4204
"public void start ( ) { VAR_1 = true ; VAR_2 = 0 ; VAR_3 . start ( ) ; METHOD_1 ( VAR_4 , VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_7 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }","public void start ( ) { VAR_2 = 0 ; VAR_3 . start ( ) ; METHOD_1 ( VAR_4 , VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_7 ) ; VAR_6 . METHOD_3 ( VAR_7 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4205
public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = true ; VAR_3 = false ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4206
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_3 = null ; if ( ( ( VAR_1 ) != null ) && ( ( VAR_4 ) != null ) ) { VAR_3 = VAR_5 ; } return VAR_3 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_3 = null ; if ( ( ( VAR_1 ) != null ) && ( ( VAR_4 ) != null ) ) { VAR_3 = VAR_5 ; } return VAR_3 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4207
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = new TYPE_2 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4208
"private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; METHOD_2 ( VAR_4 , new TYPE_1 ( VAR_5 ) ) ; VAR_1 = true ; } }","private void METHOD_1 ( ) { METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; METHOD_2 ( VAR_4 , new TYPE_1 ( VAR_5 ) ) ; }","['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4209
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4210
public void METHOD_1 ( int type ) { switch ( type ) { case 1 : VAR_1 . METHOD_2 ( ) ; break ; case INT_1 : VAR_1 . METHOD_3 ( VAR_2 ) ; break ; } VAR_3 = true ; VAR_1 . METHOD_4 ( type ) ; },public void METHOD_1 ( int type ) { switch ( type ) { case 1 : VAR_1 . METHOD_2 ( ) ; break ; case INT_1 : VAR_1 . METHOD_3 ( VAR_2 ) ; break ; } VAR_1 . METHOD_4 ( type ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4211
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_2 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4213
"private java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { java.lang.String text = STRING_1 ; for ( java.lang.String VAR_2 : VAR_1 ) { text = ( text + VAR_2 ) + ""\n"" ; } return text ; }","private java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { java.lang.String text = STRING_1 ; for ( java.lang.String VAR_2 : VAR_1 ) { text = ( text + ""\n"" ) + VAR_2 ; } return text ; }","['Move VariableRead', 'Move Literal']",4214
"private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_5 ( VAR_3 , STRING_1 ) ; } }",private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4215
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( this . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; },private void METHOD_1 ( ) { TYPE_2 VAR_2 = new TYPE_2 ( this . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4216
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = INT_1 ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = INT_1 ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4218
public void METHOD_1 ( java.lang.Object obj ) { this . VAR_1 = ( ( TYPE_1 ) ( obj ) ) ; VAR_2 = ( this . VAR_1 . METHOD_2 ( ) ) * ( ( this . VAR_1 . METHOD_3 ( ) ) - 1 ) ; },public void METHOD_1 ( java.lang.Object obj ) { this . VAR_1 = ( ( TYPE_1 ) ( VAR_1 ) ) ; VAR_2 = ( this . VAR_1 . METHOD_2 ( ) ) * ( ( this . VAR_1 . METHOD_3 ( ) ) - 1 ) ; },"['Insert FieldRead', 'Move TypeReference', 'Delete VariableRead']",4219
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( false ) ; VAR_4 = VAR_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( false ) ; VAR_4 = VAR_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; },"['Move FieldWrite', 'Update Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4220
"public void METHOD_1 ( TYPE_1 key , TYPE_2 value ) { VAR_1 = METHOD_1 ( VAR_1 , new TYPE_3 ( key , value , true ) ) ; VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 key , TYPE_2 value ) { VAR_1 = METHOD_1 ( VAR_1 , new TYPE_3 ( key , value , true ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4221
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) > ( VAR_2 ) ) { this . VAR_3 = this . VAR_4 . METHOD_2 ( ) ; } else { ( VAR_1 ) ++ ; } return this . VAR_3 ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_3 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",4222
"public boolean METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 = VAR_5 ; view . METHOD_2 ( true , id ) ; view . METHOD_3 ( id , VAR_4 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 event , float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 = true ; view . METHOD_2 ( true , id ) ; return true ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",4223
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class . METHOD_3 ( ) ) ; VAR_4 = ( ( TYPE_1 ) ( VAR_1 ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Assignment']",4224
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_3 ) ; }","['Insert FieldRead', 'Delete VariableRead']",4225
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) . VAR_3 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment']",4226
public static void METHOD_1 ( ) { VAR_1 . setState ( VAR_2 ) ; },public static void METHOD_1 ( ) { VAR_1 . state = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Move TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4227
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4228
"private void METHOD_1 ( int [ ] VAR_1 , java.lang.String name ) { this . VAR_2 = 1 ; while ( ( this . VAR_2 ) == 1 ) { this . VAR_2 = METHOD_2 ( VAR_1 , name ) ; } }","private void METHOD_1 ( int [ ] VAR_1 , java.lang.String name ) { while ( ( METHOD_2 ( VAR_1 , name ) ) == 1 ) { } }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",4229
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getInt ( STRING_1 , VAR_4 , INT_1 , 0 , INT_2 , STRING_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4230
public void METHOD_1 ( ) { if ( ( index ) == ( VAR_1 . size ( ) ) ) { endTime = TYPE_1 . METHOD_2 ( ) ; } else { ( index ) ++ ; } ( VAR_2 ) ++ ; },public void METHOD_1 ( ) { ( index ) ++ ; ( VAR_2 ) ++ ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4231
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new java.util.ArrayList < > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4232
public static void METHOD_1 ( android.content.Context VAR_1 ) { VAR_2 = null ; VAR_3 = null ; TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . commit ( ) ; },public static void METHOD_1 ( android.content.Context VAR_1 ) { VAR_2 = null ; TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . commit ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4233
"private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = METHOD_2 ( VAR_6 , VAR_7 , VAR_8 ) ; }","private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; }","['Move Invocation', 'Move Invocation', 'Insert TypeAccess', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",4234
public void METHOD_1 ( ) { VAR_1 = 0.0 ; VAR_2 = 0.0 ; for ( TYPE_1 c : VAR_3 ) { VAR_4 = 0.0 ; VAR_5 = 0.0 ; } },public void METHOD_1 ( ) { VAR_1 = 0.0 ; for ( TYPE_1 c : VAR_3 ) { VAR_4 = 0.0 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4235
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_2 ( this . VAR_2 . METHOD_2 ( this . path ) ) ; } return this . VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this . VAR_2 . METHOD_2 ( this . path ) ) ; },"['Move ConstructorCall', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead']",4236
private int METHOD_1 ( ) { if ( ( this . VAR_1 ) < 0 ) { this . VAR_1 = METHOD_2 ( ) ; } return this . VAR_1 ; },private int METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4238
"public void METHOD_1 ( java.util.List < TYPE_1 > list , int source ) { this . list = list ; this . VAR_1 = source ; }","public void METHOD_1 ( java.util.List < TYPE_1 > list , int source ) { this . list = list ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4239
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ! ( VAR_1 instanceof TYPE_3 ) ) return ; this . VAR_1 = ( ( TYPE_3 ) ( VAR_1 ) ) ; this . VAR_3 = VAR_2 ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ! ( VAR_1 instanceof TYPE_3 ) ) return ; this . VAR_1 = ( ( TYPE_3 ) ( VAR_1 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4240
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( false , VAR_2 , VAR_3 , VAR_4 , VAR_5 , this ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4241
public void METHOD_1 ( java.lang.String name ) { this . name = name ; },public void METHOD_1 ( java.lang.String name ) { this . METHOD_1 ( name ) ; },"['Insert Invocation', 'Move ThisAccess', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",4242
"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 , java.util.List < TYPE_2 > VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 , true ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 , java.util.List < TYPE_2 > VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4243
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 . get ( ) ; } return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4244
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4245
public void METHOD_1 ( TYPE_1 view ) { VAR_1 = view ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4246
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; java.lang.String name = TYPE_1 . METHOD_3 ( STRING_1 ) ; TYPE_2 . METHOD_4 ( ) ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; java.lang.String name = TYPE_1 . METHOD_3 ( STRING_1 ) ; TYPE_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4247
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 , TYPE_2 . METHOD_2 ( STRING_3 ) ) ; VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . assertEquals ( VAR_2 . METHOD_3 ( ) , true ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",4248
public void METHOD_1 ( int [ ] VAR_1 ) { array = VAR_1 ; VAR_2 = false ; },public void METHOD_1 ( int [ ] VAR_1 ) { array = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4249
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; state = VAR_3 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = false ; VAR_7 = false ; VAR_8 = 0 ; VAR_9 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; state = VAR_3 ; VAR_4 = 0 ; VAR_5 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4250
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 , METHOD_4 ( ) , METHOD_5 ( ) ) ; VAR_3 = true ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 , METHOD_4 ( ) , METHOD_5 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4251
"public TYPE_1 < java.lang.Object [ ] > execute ( TYPE_2 VAR_1 ) throws TYPE_3 { java.util.List < TYPE_4 > VAR_2 = METHOD_1 ( VAR_1 ) ; VAR_3 = TYPE_5 . METHOD_2 ( ) ; return new TYPE_6 ( VAR_2 , VAR_1 , VAR_4 ) ; }","public TYPE_1 < java.lang.Object [ ] > execute ( TYPE_2 VAR_1 ) throws TYPE_3 { java.util.List < TYPE_4 > VAR_2 = METHOD_1 ( VAR_1 ) ; return new TYPE_6 ( VAR_2 , VAR_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4252
"public void update ( TYPE_1 VAR_1 , TYPE_2 time ) { this . VAR_2 = VAR_3 . METHOD_1 ( ) ; this . VAR_4 = ( VAR_1 . METHOD_2 ( ) ) - ( VAR_3 . METHOD_3 ( ) ) ; }","public void update ( TYPE_1 VAR_1 , TYPE_2 time ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",4253
public int METHOD_1 ( ) { if ( ! ( VAR_1 ) ) this . height = VAR_2 . METHOD_1 ( ) ; return height ; },public int METHOD_1 ( ) { return height ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4254
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 . id = VAR_4 . id ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_2 ; VAR_10 = true ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 . id = VAR_4 . id ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_2 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4255
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4256
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4257
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4258
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( 0 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 = STRING_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( 0 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4259
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = null ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4261
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . setText ( VAR_3 ) ; if ( ( VAR_4 ) != null ) VAR_5 = false ; VAR_4 . METHOD_3 ( ) ; }",private void METHOD_1 ( ) { VAR_2 . setText ( VAR_3 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation']",4262
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; if ( VAR_1 != null ) VAR_2 = VAR_3 . getString ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4263
public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) . toLowerCase ( TYPE_1 . METHOD_2 ( ) ) ; VAR_3 = VAR_4 . METHOD_3 ( text ) ; METHOD_4 ( ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) . toLowerCase ( TYPE_1 . METHOD_2 ( ) ) ; VAR_3 = VAR_4 . METHOD_3 ( text ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4264
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = VAR_2 ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4265
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 = VAR_7 ; this . VAR_8 = VAR_9 ; this . token = VAR_10 . token ; this . VAR_11 = VAR_12 ; },public void METHOD_1 ( ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 = VAR_7 ; this . VAR_8 = VAR_9 ; this . token = VAR_10 . token ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4266
public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = 0 ; } return VAR_1 ; },public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 ) != null ) return VAR_1 ; else return 0 ; },"['Update BinaryOperator', 'Insert Block', 'Move Return', 'Insert Return', 'Move Literal', 'Delete FieldWrite', 'Delete Assignment']",4267
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = true ; this . VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4268
public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; new TYPE_1 ( ) . VAR_1 = 1 ; },public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete ConstructorCall', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4269
public void METHOD_1 ( ) { VAR_1 . update ( VAR_2 ) ; VAR_3 = ( VAR_3 ) + ( VAR_2 ) ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 . update ( VAR_2 ) ; VAR_3 = ( VAR_3 ) + ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4271
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } },public void METHOD_1 ( boolean VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } },"['Update Parameter', 'Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess']",4272
protected void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },protected void METHOD_1 ( ) { VAR_1 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4273
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... VAR_2 ) { VAR_3 = true ; METHOD_2 ( VAR_4 , STRING_1 , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... VAR_2 ) { VAR_3 = true ; METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; }",['Delete TypeAccess'],4274
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = false ; TYPE_2 . METHOD_2 ( VAR_1 ) ; },public static void METHOD_1 ( ) { VAR_3 = false ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",4275
protected void METHOD_1 ( java.lang.Integer VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; VAR_2 = 0 ; METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.Integer VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4276
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 1 ] [ INT_1 ] ; VAR_3 = INT_1 ; VAR_4 = 1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 1 ] [ INT_1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4277
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) ) throw new TYPE_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) ) throw new TYPE_2 ( ( STRING_1 + ( METHOD_3 ( ) ) ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4278
"public void METHOD_1 ( ) { VAR_1 = 1 ; METHOD_2 ( 1 , true ) ; }","public void METHOD_1 ( ) { METHOD_2 ( 1 , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4279
public int METHOD_1 ( long VAR_1 ) { VAR_2 = ( VAR_3 ) + ( METHOD_2 ( VAR_1 ) ) ; return VAR_2 ; },public int METHOD_1 ( long VAR_1 ) { return ( VAR_3 ) + ( METHOD_2 ( VAR_1 ) ) ; },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4280
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , 0 ) ; VAR_2 . set ( false ) ; VAR_3 = null ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , 0 ) ; }","['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4281
"protected void METHOD_1 ( ) { if ( VAR_1 ) VAR_1 = false ; VAR_2 = VAR_3 . show ( this , STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( ) { VAR_2 = VAR_3 . show ( this , STRING_1 , STRING_2 ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4282
public void step ( ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; ( VAR_1 ) ++ ; } else { VAR_2 = false ; } },public void step ( ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; ( VAR_1 ) ++ ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",4283
public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_2 = new TYPE_2 ( ) ; METHOD_1 ( VAR_1 ) ; },public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4284
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 = VAR_1 ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4285
public void METHOD_1 ( android.view.View view ) { VAR_1 = 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4286
public TYPE_1 METHOD_1 ( int number ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( number ) ; } else { VAR_1 = VAR_1 . METHOD_2 ( number ) ; } return null ; },public TYPE_1 METHOD_1 ( int number ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( number ) ; } else { VAR_1 . METHOD_2 ( number ) ; } return null ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4287
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_1 ( ) ; } VAR_1 = false ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4288
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { TYPE_1 < TYPE_2 > VAR_2 = VAR_1 . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_3 = VAR_4 ; } else { VAR_3 = VAR_5 ; } } },private void METHOD_1 ( ) { synchronized ( VAR_1 ) { TYPE_1 < TYPE_2 > VAR_2 = VAR_1 . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_3 = - 1 ; } else { VAR_3 = VAR_5 ; } } },"['Insert UnaryOperator', 'Insert Literal', 'Delete FieldRead']",4289
void METHOD_1 ( int x ) { this . VAR_1 . METHOD_1 ( x ) ; },void METHOD_1 ( int x ) { this . x = x ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4290
"public static TYPE_1 METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; return VAR_5 = new TYPE_1 ( ) ; }",public static TYPE_1 METHOD_1 ( boolean VAR_1 ) { VAR_3 = VAR_1 ; return VAR_5 = new TYPE_1 ( ) ; },"['Move VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Assignment']",4291
"public void METHOD_1 ( boolean VAR_1 , java.util.Vector < TYPE_1 > VAR_2 , java.util.Vector < TYPE_1 > VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; this . METHOD_2 ( ) ; }",public void METHOD_1 ( boolean VAR_1 ) { VAR_4 = VAR_1 ; this . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4293
public void METHOD_1 ( ) { TYPE_1 VAR_1 = false ; VAR_2 = null ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = null ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeReference', 'Delete LocalVariable']",4294
private void METHOD_1 ( ) { VAR_1 = true ; java.lang.System.out.println ( ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( ) ; VAR_2 = true ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { java.lang.System.out.println ( ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; java.lang.System.out.println ( ) ; VAR_2 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4295
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( ! ( VAR_3 ) ) { context . METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_3 = true ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4296
public void METHOD_1 ( final TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } VAR_3 . context = null ; VAR_4 = null ; },public void METHOD_1 ( final TYPE_1 context ) throws java.lang.Exception { },"['Update Parameter', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4297
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { char VAR_3 = ( VAR_4 ) ? CHAR_1 : CHAR_2 ; METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; VAR_4 = true ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { char VAR_3 = ( VAR_4 ) ? CHAR_1 : CHAR_2 ; METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; return this ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4298
public void METHOD_1 ( ) { try { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4299
"private void METHOD_1 ( ) { VAR_1 = getIntent ( ) . METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_2 ( VAR_4 ) ; VAR_5 = getIntent ( ) . METHOD_3 ( VAR_6 , VAR_7 ) ; }",private void METHOD_1 ( ) { VAR_1 = getIntent ( ) . METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4300
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation', 'Delete Invocation']",4301
public void METHOD_1 ( int VAR_1 ) { VAR_2 . status ( VAR_1 ) ; status = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . status ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4302
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4303
public void METHOD_1 ( ) { for ( double VAR_1 : output ) { java.lang.System.out.println ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; VAR_2 = VAR_1 ; } },public void METHOD_1 ( ) { for ( double VAR_1 : output ) { java.lang.System.out.println ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; double VAR_2 = VAR_1 ; } },"['Insert LocalVariable', 'Insert TypeReference', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",4304
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = STRING_2 ; VAR_5 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = STRING_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4305
void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_1 . METHOD_2 ( STRING_1 ) ; this . date = METHOD_3 ( ) ; },void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4306
public void METHOD_1 ( ) { this . index = ( ( this . VAR_1 ) + ( this . index ) ) % ( this . VAR_2 . length ) ; },public void METHOD_1 ( ) { ( this . index ) ++ ; },"['Insert UnaryOperator', 'Move FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4307
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = null ; METHOD_2 ( ) ; METHOD_3 ( VAR_3 . getText ( ) . toString ( ) ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { METHOD_3 ( VAR_3 . getText ( ) . toString ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4308
public void METHOD_1 ( int position ) { this . VAR_1 = position ; this . VAR_2 = position ; },public void METHOD_1 ( int position ) { this . VAR_1 = position ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4309
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4310
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) [ VAR_2 ] ) ; METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( ) ; VAR_5 = true ; VAR_6 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) [ VAR_2 ] ) ; METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( ) ; VAR_5 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4311
public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = new TYPE_2 ( ) ; METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4312
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4313
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = 1.0F ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4314
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ( STRING_1 + ( VAR_2 ) ) ) ; this . METHOD_4 ( ) ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) -- ; VAR_3 . METHOD_3 ( ( STRING_1 + ( VAR_2 ) ) ) ; this . METHOD_4 ( ) ; },"['Insert UnaryOperator', 'Insert Wra', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",4315
public void METHOD_1 ( ) { VAR_1 = true ; new TYPE_1 ( ) . execute ( ) ; },public void METHOD_1 ( ) { new TYPE_1 ( ) . execute ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4316
public static void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },public static void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4317
protected synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; boolean state = ( VAR_2 ) == VAR_1 ; VAR_3 . setState ( ( VAR_4 ? ! state : state ) ) ; },protected synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; boolean state = ( VAR_2 ) == VAR_1 ; VAR_3 . setState ( ( VAR_4 ? ! state : state ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4319
"public int METHOD_1 ( ) { if ( ( this . VAR_1 ) == 0 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( this . VAR_2 . METHOD_3 ( STRING_1 ) , 0 , INT_1 ) ; } return this . VAR_1 ; }","public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( this . VAR_2 . METHOD_3 ( STRING_1 ) , 0 , INT_1 ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead']",4320
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 ; return VAR_1 . METHOD_2 ( ) ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { return VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4321
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , int VAR_5 ) { VAR_6 = VAR_1 ; VAR_7 = VAR_2 ; VAR_8 = VAR_3 ; VAR_9 = VAR_4 ; VAR_10 . index = VAR_5 ; return VAR_11 ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { VAR_6 = VAR_1 ; VAR_7 = VAR_2 ; VAR_8 = VAR_3 ; }","['Update TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",4322
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( null ) ; } VAR_2 . METHOD_4 ( ) ; METHOD_5 ( true ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_4 ( ) ; METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",4323
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_2 = new TYPE_2 ( getContext ( ) , VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_3 . METHOD_4 ( new TYPE_2 ( getContext ( ) , VAR_1 ) ) ; }","['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4324
public void METHOD_1 ( TYPE_1 VAR_1 ) { node = VAR_2 . node ; VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . node = node ; VAR_4 = VAR_3 ; },"['Update FieldWrite', 'Update FieldRead']",4325
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4328
public void METHOD_1 ( java.lang.String msg ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = msg ; },public void METHOD_1 ( java.lang.String msg ) { this . msg = msg ; },"['Update FieldWrite', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",4329
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 ; METHOD_2 ( VAR_4 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_4 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4330
public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < java.lang.Long > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4331
"public void init ( final TYPE_1 VAR_1 , final TYPE_2 t ) { VAR_2 = ( t . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) >= 0.0 ; }","public void init ( final TYPE_1 VAR_1 , final TYPE_2 t ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",4332
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( METHOD_2 ( ) ) ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_1 ( ) ; } VAR_3 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_1 ( ) ; } } },"['Move BinaryOperator', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4333
public TYPE_1 METHOD_1 ( boolean value ) { VAR_1 = value ; VAR_2 = true ; return this ; },public TYPE_1 METHOD_1 ( boolean value ) { VAR_1 = value ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4334
private void METHOD_1 ( ) { if ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_1 = false ; } },private void METHOD_1 ( ) { if ( VAR_1 = true ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_1 = false ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator']",4335
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( ) ; if ( VAR_1 ) { this . METHOD_3 ( ) ; VAR_1 = false ; } }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; super . METHOD_1 ( ) ; this . METHOD_3 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4336
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 + ( ( height ) / INT_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",4337
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; ( this . VAR_3 ) ++ ; this . VAR_4 . METHOD_3 ( this ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; ( this . VAR_3 ) ++ ; this . VAR_4 . METHOD_3 ( this ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4338
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( true ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( true ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4339
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 ) ; METHOD_3 ( STRING_1 ) ; super . METHOD_1 ( ) ; }",public void METHOD_1 ( ) { METHOD_3 ( STRING_1 ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4340
private void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; this . VAR_4 = null ; },private void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4341
"void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( getContext ( ) ) ) . VAR_1 ; VAR_2 = new TYPE_2 ( VAR_1 , getActivity ( ) , this ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; }","void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( VAR_1 , getActivity ( ) , this ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment']",4343
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; METHOD_2 ( VAR_1 , VAR_3 ) ; VAR_2 = false ; }","public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4344
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_1 = false ; } VAR_4 = true ; VAR_7 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = null ; VAR_3 = false ; VAR_4 = false ; VAR_5 = 0 ; VAR_6 = 0 ; } VAR_4 = true ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4346
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; VAR_5 = false ; }","public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4347
public java.util.Set < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashSet < TYPE_1 > ( ) ; } return VAR_1 ; },public java.util.Set < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4349
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; VAR_3 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4351
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 . length ( ) ) >= ( VAR_3 ) ) { VAR_4 = VAR_2 . substring ( 0 , VAR_3 ) ; } else { VAR_4 = VAR_1 ; } }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_4 = VAR_2 . substring ( 0 , VAR_3 ) ; }","['Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4352
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4353
public void METHOD_1 ( TYPE_1 data ) { this . type = data ; VAR_1 = new TYPE_2 ( data ) ; METHOD_2 ( METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 data ) { VAR_1 = new TYPE_2 ( data ) ; METHOD_2 ( METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4354
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( VAR_3 != null ) { VAR_4 = VAR_3 . METHOD_2 ( STRING_1 ) ; } return VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4355
"public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( null , VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_4 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_5 ( ) . replace ( VAR_4 , VAR_3 , VAR_5 ) . commit ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( null , VAR_2 ) ; METHOD_2 ( ) . METHOD_5 ( ) . replace ( VAR_4 , TYPE_2 . METHOD_4 ( VAR_1 ) , VAR_5 ) . commit ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4356
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; VAR_2 . METHOD_3 ( null , false , false ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( null , false , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4357
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getActivity ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4358
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4359
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 < > ( ) ; VAR_4 = 0 ; },public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 < > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4360
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , null ) ; context = getActivity ( ) ; VAR_6 = METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , null ) ; context = getActivity ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4361
private void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) / ( VAR_3 ) ; VAR_4 = ( VAR_1 ) / INT_1 ; VAR_5 = 0 ; },private void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) / ( VAR_3 ) ; VAR_4 = ( VAR_1 ) / INT_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4363
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4364
public void METHOD_1 ( ) { position = null ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4365
"public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( TYPE_4 . METHOD_2 ( VAR_2 ) ) ; VAR_3 = TYPE_5 . METHOD_3 ( VAR_1 , TYPE_6 . METHOD_4 ( ) ) ; return VAR_3 ; }",public static TYPE_1 METHOD_1 ( ) { return VAR_3 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4366
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 . METHOD_2 ( VAR_3 , 0 , VAR_4 , 0 , VAR_5 . length ) ; }",protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete FieldRead', 'Delete Invocation']",4368
void METHOD_1 ( boolean show ) { VAR_1 = show ; VAR_2 = false ; },void METHOD_1 ( boolean show ) { VAR_1 = show ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4369
"public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_5 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_5 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4370
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = 1 ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4371
public static void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4372
"private void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_5 ( VAR_4 , VAR_6 ) ; TYPE_3 . METHOD_6 ( VAR_4 ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 . METHOD_4 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_5 ( VAR_4 , VAR_6 ) ; TYPE_3 . METHOD_6 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4373
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4376
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = ( ( TYPE_1 . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_2 ) ; VAR_4 . setText ( VAR_3 ) ; VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4377
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = INT_1 ; VAR_4 = true ; VAR_5 = 1 ; VAR_6 = 1 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = INT_1 ; VAR_4 = true ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4379
"public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_1 , VAR_5 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4380
"protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 , response ) ; VAR_2 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException , TYPE_3 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 , response ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4381
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; if ( ( VAR_2 ) > 0 ) { VAR_2 = ( VAR_2 ) - 1 ; } else { VAR_2 = VAR_3 ; } },public void METHOD_1 ( ) { if ( ( VAR_2 ) > 0 ) { VAR_2 = ( VAR_2 ) - 1 ; } else { VAR_2 = VAR_3 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4382
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; number = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; number = 0 ; VAR_2 = 0 ; VAR_4 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4383
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( VAR_3 , 0 , INT_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation']",4384
protected void METHOD_1 ( TYPE_1 event ) { VAR_1 += VAR_2 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; super . METHOD_1 ( event ) ; },protected void METHOD_1 ( TYPE_1 event ) { VAR_1 += VAR_2 ; VAR_2 = 0 ; super . METHOD_1 ( event ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4385
public void METHOD_1 ( ) { this . VAR_1 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4386
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 , VAR_3 ) . commit ( ) ; VAR_1 = true ; } else VAR_3 . METHOD_4 ( 1 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . add ( VAR_2 , VAR_3 ) . commit ( ) ; }","['Move Invocation', 'Update Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",4387
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) VAR_2 . remove ( VAR_1 ) ; this . METHOD_2 ( ) ; METHOD_3 ( ) ; this . VAR_3 = true ; this . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) VAR_2 . remove ( VAR_1 ) ; this . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",4388
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = b . METHOD_2 ( ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( 0 ) ; } else { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( INT_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( b . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( 0 ) ; } else { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( INT_1 ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4389
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4390
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; super . METHOD_1 ( ) ; VAR_4 . state = true ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4392
public java.lang.String METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; return VAR_2 ; },public java.lang.String METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",4393
"public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = null ; getView ( ) . METHOD_2 ( ) . METHOD_3 ( getView ( ) . METHOD_2 ( ) . METHOD_4 ( ) , true ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",4395
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; status = VAR_4 ; VAR_5 = null ; VAR_6 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = null ; VAR_3 = null ; status = VAR_4 ; VAR_5 = null ; VAR_6 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4396
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; startTime = 0 ; VAR_2 . start ( ) ; TYPE_2 . METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4397
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; java.lang.System.exit ( 0 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",4398
public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4399
"public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4400
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) ) ; VAR_3 = new TYPE_3 ( ) . execute ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",4401
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 = new android.content.Intent ( METHOD_2 ( ) , VAR_4 class ) ; METHOD_3 ( VAR_3 ) ; } else { METHOD_4 ( this ) ; } }",public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4402
public java.lang.String METHOD_1 ( ) { if ( ( ( url ) == null ) || ( ( url ) == STRING_1 ) ) url = METHOD_2 ( ) . getString ( VAR_1 ) ; return url ; },public java.lang.String METHOD_1 ( ) { return url ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4403
void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) > 0 ) { VAR_3 -= ( VAR_2 ) - ( VAR_4 ) ; VAR_5 += ( VAR_2 ) - ( VAR_4 ) ; VAR_4 = VAR_2 ; } },void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) > 0 ) { VAR_3 -= ( VAR_2 ) - ( VAR_4 ) ; VAR_5 += ( VAR_2 ) - ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4404
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4405
protected void METHOD_1 ( ) { this . VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4406
void METHOD_1 ( int y ) { VAR_1 . y = y ; },void METHOD_1 ( int y ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4407
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( VAR_1 ) { VAR_1 = false ; writer . METHOD_2 ( ) ; } return out ; },public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return out ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",4408
"private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , ( ++ ( VAR_4 ) ) ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",4409
protected void METHOD_1 ( TYPE_1 param ) throws java.lang.Throwable { if ( ( VAR_1 ) == null ) { VAR_1 = new java.lang.StringBuffer ( ) ; } VAR_2 . append ( ( STRING_1 + ( ( java.lang.String ) ( param . METHOD_2 ( ) ) ) ) ) ; },protected void METHOD_1 ( TYPE_1 param ) throws java.lang.Throwable { VAR_2 . append ( ( STRING_1 + ( ( java.lang.String ) ( param . METHOD_2 ( ) ) ) ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4410
"public void setValue ( java.lang.Object value ) { METHOD_1 ( VAR_1 , value ) ; }",public void setValue ( java.lang.Object value ) { this . value = value ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",4411
"public void METHOD_1 ( TYPE_1 name ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 name ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4412
"static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , 1 , STRING_2 ) ; VAR_3 = VAR_1 . METHOD_2 ( STRING_3 , 1 , STRING_4 ) ; VAR_4 = VAR_1 . METHOD_2 ( STRING_5 , 1 , STRING_6 ) ; }",static void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4413
public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( buf ) ) ; VAR_2 = buf . METHOD_4 ( ) ; VAR_3 = METHOD_5 ( buf ) ; },public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( buf ) ) ; VAR_3 = METHOD_5 ( buf ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4414
public static void METHOD_1 ( ) { VAR_1 . count = 0 ; VAR_1 . startTime = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public static void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4415
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( this ) ; VAR_3 = new TYPE_1 < > ( ) ; METHOD_3 ( ) ; VAR_4 . info ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( this ) ; VAR_4 . info ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",4416
"public void METHOD_1 ( TYPE_1 id , java.lang.String name , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { VAR_3 . METHOD_1 ( id , name , VAR_1 , VAR_2 ) ; VAR_4 = new TYPE_4 ( VAR_3 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( TYPE_1 id , java.lang.String name , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { VAR_3 . METHOD_1 ( id , name , VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",4417
"public void index ( TYPE_1 VAR_1 , boolean VAR_2 ) throws java.io.IOException { VAR_3 . index ( VAR_4 ) ; super . index ( VAR_1 , VAR_2 ) ; }","public void index ( TYPE_1 VAR_1 , boolean VAR_2 ) throws java.io.IOException { this . index = VAR_4 ; VAR_3 . index ( VAR_4 ) ; super . index ( VAR_1 , VAR_2 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Insert ThisAccess']",4418
public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = new java.util.HashSet < > ( VAR_1 ) ; } else { this . VAR_1 = null ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Move Assignment', 'Insert Assignment', 'Insert ConstructorCall', 'Insert FieldWrite', 'Insert Literal', 'Move VariableRead', 'Insert ThisAccess']",4419
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . equals ( VAR_3 ) ) ) { VAR_3 = VAR_1 ; VAR_4 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . show ( ) ; } return false ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . setText ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 . show ( ) ; return false ; },"['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4421
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . info ( STRING_1 ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . info ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete ThisAccess']",4422
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4423
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this , VAR_3 ) ; VAR_4 = new TYPE_3 ( this ) ; VAR_4 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this , VAR_3 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4424
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_3 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( true ) ; },"['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",4425
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4426
"public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this ) ; this . VAR_2 = null ; this . VAR_3 = new TYPE_1 ( VAR_1 , false ) ; }",public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",4427
public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } catch ( TYPE_1 VAR_2 ) { } for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { } for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4428
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4429
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = METHOD_2 ( VAR_3 ) ; },['Update Literal'],4430
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { METHOD_3 ( ) ; } VAR_3 = true ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4431
public static java.io.File METHOD_1 ( java.lang.String filePath ) { return ( VAR_1 ) == null ? VAR_1 = new java.io.File ( filePath ) : VAR_1 ; },public static java.io.File METHOD_1 ( java.lang.String filePath ) { return ( VAR_1 ) == null ? new java.io.File ( filePath ) : VAR_1 ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",4432
public void METHOD_1 ( java.lang.String p ) { this . path = p ; this . VAR_1 = STRING_1 ; },public void METHOD_1 ( java.lang.String p ) { this . path = p ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4433
public void METHOD_1 ( TYPE_1 t ) { this . type = METHOD_2 ( t ) ; },public void METHOD_1 ( TYPE_1 t ) { this . type = t ; },"['Move VariableRead', 'Delete Invocation']",4434
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) VAR_2 = VAR_1 . METHOD_3 ( ) . toString ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; },"['Insert Invocation', 'Insert FieldRead', 'Move TypeAccess', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Invocation']",4435
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . getValue ( ) ; if ( context . METHOD_2 ( VAR_2 ) ) { this . VAR_4 = null ; VAR_5 = true ; } else { this . VAR_4 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . getValue ( ) ; if ( context . METHOD_2 ( VAR_2 ) ) { this . value = null ; VAR_5 = true ; } else { this . value = VAR_1 ; } },"['Update FieldWrite', 'Update FieldWrite']",4436
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 = false ; VAR_4 = false ; METHOD_2 ( new TYPE_3 ( ) , VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( new TYPE_3 ( ) , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4437
public void METHOD_1 ( ) { try { VAR_1 = ( ( TYPE_1 ) ( this . METHOD_2 ( ) ) ) ; VAR_2 = VAR_3 ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 = ( ( TYPE_1 ) ( this . METHOD_2 ( ) ) ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4438
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { this . VAR_1 = true ; this . VAR_2 = false ; } else { this . VAR_1 = false ; } },public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { this . VAR_1 = true ; } else { this . VAR_2 = false ; } },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4439
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; VAR_3 = false ; if ( ( VAR_4 ) >= INT_1 ) VAR_5 = INT_1 ; else VAR_5 = VAR_4 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; VAR_3 = false ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4440
protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = TYPE_2 . METHOD_2 ( this ) . METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; super . METHOD_1 ( VAR_1 ) ; init ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( VAR_3 ) ; super . METHOD_1 ( VAR_1 ) ; init ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4441
private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4442
public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = null ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; } },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4443
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_4 ( VAR_6 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4444
"protected void METHOD_1 ( final boolean VAR_1 , final java.lang.Object VAR_2 ) { setValue ( ( VAR_1 ? METHOD_2 ( 0.0F ) : ( ( java.lang.Float ) ( VAR_2 ) ) ) , false ) ; VAR_3 = VAR_4 ; }","protected void METHOD_1 ( final boolean VAR_1 , final java.lang.Object VAR_2 ) { setValue ( ( VAR_1 ? METHOD_2 ( 0.0F ) : ( ( java.lang.Float ) ( VAR_2 ) ) ) , false ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4445
public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; VAR_1 = false ; VAR_2 = 0 ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4446
"public java.lang.String execute ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_1 ( date , true ) ; return METHOD_2 ( ) ; }",public java.lang.String execute ( TYPE_1 VAR_1 ) { return null ; },"['Insert Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",4447
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; java.lang.System.out.println ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4448
public void METHOD_1 ( ) { for ( int i = ( VAR_1 . size ( ) ) - 1 ; i >= 0 ; i -- ) VAR_1 . remove ( i ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) VAR_1 . remove ( i ) ; },"['Update BinaryOperator', 'Move BinaryOperator', 'Update UnaryOperator', 'Move Literal', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4449
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = new TYPE_3 ( this , VAR_3 ) ; VAR_5 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = new TYPE_3 ( this , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4450
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = false ; VAR_2 = STRING_1 ; METHOD_2 ( ) ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = false ; METHOD_2 ( ) ; return true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4451
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_4 ( VAR_3 ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4452
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = true ; VAR_2 = true ; synchronized ( VAR_3 ) { VAR_4 = false ; METHOD_3 ( ) ; } },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; synchronized ( VAR_3 ) { VAR_4 = false ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4453
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_2 = null ; } else { VAR_2 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4454
"public void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) == ( METHOD_2 ( ) ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","public void METHOD_1 ( ) { METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",4455
public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( this ) ; VAR_2 = false ; for ( TYPE_1 [ ] VAR_3 : this . VAR_4 ) for ( TYPE_1 t : VAR_3 ) t . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( this ) ; for ( TYPE_1 [ ] VAR_3 : this . VAR_4 ) for ( TYPE_1 t : VAR_3 ) t . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4456
"public void METHOD_1 ( TYPE_1 name ) { VAR_1 = false ; VAR_2 . i ( VAR_3 , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 name ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4457
public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4458
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4459
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 , index ) ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_3 ( VAR_3 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 , index ) ) { VAR_1 . METHOD_3 ( VAR_3 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4460
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; METHOD_2 ( VAR_3 ) ; VAR_4 = METHOD_3 ( VAR_5 ) ; VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; METHOD_4 ( ) ; METHOD_2 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4461
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } else { VAR_2 = VAR_1 . METHOD_3 ( ) ; } return this ; },public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } return this ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",4462
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = getIntent ( ) . METHOD_3 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = getIntent ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4463
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4464
public void METHOD_1 ( java.lang.Class < ? > VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = null ; },public void METHOD_1 ( java.lang.Class < ? > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4465
public void setText ( java.lang.String text ) { this . text = text ; this . VAR_1 = null ; },public void setText ( java.lang.String text ) { this . text = text ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4466
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 = false ; super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4468
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 = null ; super . METHOD_1 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",4469
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_2 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_5 ) ) ) ; VAR_6 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_2 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_5 ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4470
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 , 0 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",4471
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < ? super java.lang.Throwable > VAR_2 , TYPE_4 listener ) { if ( ( VAR_3 ) == null ) { VAR_3 = METHOD_2 ( ) ; } return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < ? super java.lang.Throwable > VAR_2 , TYPE_4 listener ) { return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4472
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_2 ( ) ) { this . METHOD_3 ( 1 ) ; return VAR_2 ; } this . result = false ; return VAR_3 ; },public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_2 ( ) ) { this . METHOD_3 ( 1 ) ; return VAR_2 ; } return VAR_3 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4473
private void init ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_1 ( VAR_4 ) ) ) ; },private void init ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4474
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; if ( ! ( VAR_3 ) ) { ( VAR_4 ) ++ ; VAR_5 . METHOD_4 ( new TYPE_1 ( VAR_5 ) ) ; } } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; if ( ! ( VAR_3 ) ) { VAR_5 . METHOD_4 ( new TYPE_1 ( VAR_5 ) ) ; } } },"['Delete FieldWrite', 'Delete UnaryOperator']",4475
public static void init ( ) { VAR_1 . init ( ) ; VAR_2 = INT_1 ; },public static void init ( ) { VAR_1 . init ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4476
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this , VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this , VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4477
private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 item = new TYPE_1 ( ) ; VAR_2 = ( VAR_3 ) ++ ; VAR_4 = VAR_1 ; VAR_5 = VAR_6 ; return item ; },private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_1 item = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_6 ; return item ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Assignment']",4478
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; VAR_4 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4479
public void METHOD_1 ( TYPE_1 event ) throws java.lang.Exception { try { VAR_1 = new TYPE_2 ( ) ; VAR_2 . show ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) throws java.lang.Exception { try { VAR_2 . show ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4480
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = false ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_1 . METHOD_3 ( STRING_3 , VAR_5 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_1 . METHOD_3 ( STRING_3 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4481
"private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 . getBoolean ( VAR_6 , true ) ; VAR_7 = VAR_5 . getBoolean ( VAR_8 , true ) ; VAR_9 = VAR_10 ; }","private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_5 . getBoolean ( VAR_6 , true ) ; VAR_9 = VAR_10 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",4482
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 . METHOD_1 ( null ) ; for ( TYPE_2 a : VAR_6 ) VAR_7 . add ( a . METHOD_1 ( ) ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_4 = VAR_5 . METHOD_1 ( null ) ; for ( TYPE_2 a : VAR_6 ) VAR_7 . add ( a . METHOD_1 ( ) ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4483
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( this ) ; VAR_2 = VAR_3 . getString ( STRING_1 , STRING_2 ) ; VAR_4 = STRING_3 ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( this ) ; VAR_2 = VAR_3 . getString ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4484
public void METHOD_1 ( double VAR_1 ) { VAR_2 = ( VAR_2 ) + ( VAR_1 - ( this . VAR_1 ) ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",4485
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",4486
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = STRING_1 ; this . VAR_3 = true ; this . VAR_4 = STRING_1 ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = STRING_1 ; this . VAR_3 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4487
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 . content , ( VAR_3 = new TYPE_2 ( ) ) ) . commit ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 . content , new TYPE_2 ( ) ) . commit ( ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",4488
"public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 class ) . METHOD_5 ( ) ; VAR_3 = new java.util.HashMap < java.lang.String , java.lang.Boolean > ( ) ; }","public static void METHOD_1 ( ) { VAR_3 = new java.util.HashMap < java.lang.String , java.lang.Boolean > ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4489
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getString ( VAR_4 ) ; VAR_5 = getString ( VAR_6 ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4490
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . add ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; ( VAR_5 ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . add ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",4491
public void METHOD_1 ( java.lang.String name ) { java.lang.System.out.println ( ( STRING_1 + name ) ) ; METHOD_2 ( ( ( buffer ) + name ) ) ; buffer = STRING_2 ; },public void METHOD_1 ( java.lang.String name ) { METHOD_2 ( name ) ; },"['Insert Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4492
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 , ( - 1 ) , VAR_3 , this ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4493
private void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; METHOD_2 ( this ) ; },private void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4495
private void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { this . VAR_2 = new java.util.Date ( ) ; this . VAR_1 = false ; } else { throw new TYPE_1 ( STRING_1 ) ; } },private void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { this . VAR_2 = new java.util.Date ( ) ; } else { throw new TYPE_1 ( STRING_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4496
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( this . VAR_1 . METHOD_3 ( null , VAR_1 ) , STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ( VAR_1 == null ) , STRING_1 ) ; this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert BinaryOperator', 'Insert FieldWrite', 'Move VariableRead', 'Insert VariableRead', 'Move Literal', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4497
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4498
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 = false ; VAR_3 . info ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; VAR_3 . info ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4499
public void METHOD_1 ( TYPE_1 b ) { VAR_1 = VAR_2 . getString ( VAR_3 ) ; VAR_4 = VAR_2 . getString ( VAR_5 ) ; VAR_6 = b . METHOD_2 ( VAR_7 ) ; },public void METHOD_1 ( TYPE_1 b ) { VAR_1 = VAR_2 . getString ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4500
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4501
public void event ( TYPE_1 VAR_1 ) { ( n ) ++ ; try { VAR_1 . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },public void event ( TYPE_1 VAR_1 ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete FieldWrite', 'Delete UnaryOperator']",4502
"public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_2 ) { throw new TYPE_2 ( STRING_1 , VAR_2 ) ; } VAR_3 = VAR_4 ; }","public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_2 ) { throw new TYPE_2 ( STRING_1 , VAR_2 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4503
public void METHOD_1 ( ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; },public void METHOD_1 ( ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4505
protected void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4506
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4507
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = null ; VAR_6 = null ; },private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4508
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 = false ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4509
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 index = VAR_2 [ VAR_3 ] ; index . METHOD_3 ( ) ; VAR_2 [ VAR_3 ] = null ; ( VAR_4 ) -- ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 index = VAR_2 [ VAR_3 ] ; index . METHOD_3 ( ) ; VAR_2 [ VAR_3 ] = null ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",4510
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; } VAR_2 = false ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4511
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4512
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4513
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ( ( VAR_4 ) == ( VAR_5 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( ( ( VAR_4 ) == ( VAR_5 ) ) ) ; VAR_2 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",4514
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; sum = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },protected void METHOD_1 ( ) { VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4515
"public static TYPE_1 METHOD_1 ( TYPE_2 listener , java.util.Set < TYPE_3 > VAR_1 , TYPE_4 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = listener ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 listener , java.util.Set < TYPE_3 > VAR_1 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = listener ; VAR_5 = VAR_1 ; return VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4516
private void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_5 ) ) ) ; },private void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4517
public void METHOD_1 ( ) { this . VAR_1 = VAR_1 ; assertTrue ( VAR_2 ) ; assertTrue ( VAR_3 ) ; assertTrue ( VAR_4 ) ; },public void METHOD_1 ( ) { assertTrue ( VAR_2 ) ; assertTrue ( VAR_3 ) ; assertTrue ( VAR_4 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4518
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; },protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4519
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4520
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 ; try { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; return VAR_1 ; } catch ( java.lang.Exception VAR_4 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 ; try { VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 ; } catch ( java.lang.Exception VAR_4 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4521
public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_2 = false ; return false ; },public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4522
public void METHOD_1 ( int VAR_1 ) { VAR_2 . open ( null ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_6 = true ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 . open ( null ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4523
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = VAR_13 ; VAR_14 = VAR_15 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4524
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( this . VAR_2 ) == INT_1 ) { this . VAR_3 = true ; this . VAR_4 = INT_1 ; } else this . VAR_4 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( this . VAR_2 ) == INT_1 ) { this . VAR_3 = true ; this . VAR_4 = INT_1 ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",4525
public void METHOD_1 ( ) { if ( VAR_1 ) METHOD_2 ( false ) ; },public void METHOD_1 ( ) { if ( VAR_1 = true ) METHOD_2 ( false ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead']",4526
protected void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; } },protected void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4528
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_2 = true ; } else { VAR_3 . METHOD_3 ( ) ; VAR_2 = false ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4530
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; if ( VAR_1 != null ) { VAR_3 = VAR_4 . getInt ( STRING_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4531
public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_1 ) ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_3 ( false ) ; VAR_2 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_1 ) ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4532
"public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; VAR_2 = false ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) . replace ( VAR_5 , VAR_3 , VAR_1 ) . commit ( ) ; }","public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) . replace ( VAR_5 , VAR_3 , VAR_1 ) . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4533
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4534
public void METHOD_1 ( java.lang.Integer VAR_1 ) { start = ( VAR_1 - 1 ) * ( VAR_2 ) ; this . VAR_1 = ( ( null == VAR_1 ) || ( VAR_1 < 1 ) ) ? 1 : VAR_1 ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = ( ( null == VAR_1 ) || ( VAR_1 < 1 ) ) ? 1 : VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4535
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_2 ( true ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; METHOD_4 ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_2 ( true ) ; return VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead']",4537
public void METHOD_1 ( java.lang.String str ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = null ; VAR_2 = null ; METHOD_4 ( str ) ; METHOD_5 ( ( - 1 ) ) ; },public void METHOD_1 ( java.lang.String str ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = null ; METHOD_4 ( str ) ; METHOD_5 ( ( - 1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4538
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead']",4539
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4540
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , VAR_3 ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; this . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4541
"public void METHOD_1 ( TYPE_1 [ ] VAR_1 , int type ) { this . VAR_1 = VAR_1 ; this . type = type ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4542
"public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { VAR_2 = position ; METHOD_2 ( position ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { METHOD_2 ( position ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4543
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_5 . time = time ; VAR_6 = VAR_7 ; VAR_8 . METHOD_2 ( VAR_9 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_5 . time = time ; VAR_8 . METHOD_2 ( VAR_9 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4544
public void METHOD_1 ( java.util.Collection < java.lang.Long > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.Set < java.lang.Long > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4545
public void METHOD_1 ( java.lang.String key ) { if ( VAR_1 . equals ( key ) ) { VAR_2 = false ; VAR_3 = VAR_4 ; } },public void METHOD_1 ( java.lang.String key ) { if ( VAR_1 . equals ( key ) ) { VAR_2 = false ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4546
public void METHOD_1 ( android.view.View view ) { VAR_1 = STRING_1 ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_3 ( ) ; VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4547
public void METHOD_1 ( ) { this . VAR_1 = INT_1 ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4548
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . i ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . i ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4549
"protected final void METHOD_1 ( int VAR_1 ) { count = VAR_1 ; values = TYPE_1 . METHOD_2 ( values , count ) ; VAR_2 = 0 ; }","protected final void METHOD_1 ( int VAR_1 ) { count = VAR_1 ; values = TYPE_1 . METHOD_2 ( values , count ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4551
"protected void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 = false ; VAR_1 . i ( STRING_1 , ( STRING_2 + ( java.lang.String . METHOD_2 ( VAR_2 ) ) ) ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",4552
public void METHOD_1 ( final boolean VAR_1 ) { VAR_2 = VAR_1 ; for ( final TYPE_1 VAR_3 : VAR_4 . METHOD_2 ( VAR_5 ) . METHOD_3 ( ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( final boolean VAR_1 ) { for ( final TYPE_1 VAR_3 : VAR_4 . METHOD_2 ( VAR_5 ) . METHOD_3 ( ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4553
public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( position ) ; } VAR_2 = position ; VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int position ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( position ) ; } VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4554
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( ( ( VAR_1 . METHOD_3 ( ) ) + STRING_2 ) + ( VAR_2 ) ) ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = true ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4555
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( this . VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( this . VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4556
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = false ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4557
public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new TYPE_2 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4558
public void METHOD_1 ( ) { response = null ; VAR_1 . METHOD_1 ( ) ; i = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; i = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4559
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; VAR_3 . end ( ) ; } return true ; },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_3 . end ( ) ; } return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4560
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( event ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( event ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4561
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_1 = true ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4562
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; VAR_3 = VAR_4 = 0 ; VAR_5 . METHOD_2 ( VAR_3 ) ; update ( true ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; update ( ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal']",4563
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 ) { if ( VAR_1 == ( VAR_4 ) ) java.lang.System.out.println ( STRING_1 ) ; this . VAR_5 = true ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 ) { if ( VAR_1 == ( VAR_4 ) ) java.lang.System.out.println ( STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4564
public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 ) { VAR_3 . METHOD_2 ( ) ; return ; } VAR_4 = true ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 ) { VAR_3 . METHOD_2 ( ) ; return ; } METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4565
"public void METHOD_1 ( android.view.View view ) { if ( METHOD_2 ( ) ) { VAR_1 = true ; METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , STRING_1 ) , VAR_3 ) ; } }","public void METHOD_1 ( android.view.View view ) { if ( METHOD_2 ( ) ) { METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , STRING_1 ) , VAR_3 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4566
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4567
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 = false ; METHOD_4 ( ) ; METHOD_5 ( false ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4569
"public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . get ( VAR_1 , VAR_4 class ) ; VAR_5 = VAR_3 . get ( VAR_1 , VAR_6 class ) ; }","public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . get ( VAR_1 , VAR_4 class ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4570
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; this . VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; },['Delete ThisAccess'],4571
void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) . rows ) ; METHOD_2 ( ) . METHOD_5 ( METHOD_4 ( ) . VAR_1 ) ; },void METHOD_1 ( ) { METHOD_2 ( ) . rows = METHOD_4 ( ) . rows ; METHOD_2 ( ) . VAR_1 = METHOD_4 ( ) . VAR_1 ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Move Invocation', 'Move Invocation', 'Delete Invocation', 'Delete Invocation']",4572
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = true ; METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4574
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4575
public TYPE_1 METHOD_1 ( long endTime ) { this . endTime = endTime ; VAR_1 = new TYPE_2 ( endTime ) . METHOD_2 ( VAR_2 ) ; return this ; },public TYPE_1 METHOD_1 ( long endTime ) { this . endTime = endTime ; VAR_1 = new TYPE_2 ( endTime ) ; return this ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",4576
"public void METHOD_1 ( ) { this . VAR_1 = false ; TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; }",public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4577
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . title = STRING_1 ; VAR_2 . content = STRING_2 ; VAR_3 = true ; VAR_4 = INT_1 ; VAR_5 = TYPE_2 . METHOD_2 ( VAR_6 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . title = STRING_1 ; VAR_2 . content = STRING_2 ; VAR_3 = true ; VAR_5 = TYPE_2 . METHOD_2 ( VAR_6 ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4578
public static void METHOD_1 ( final java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . list = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },public static void METHOD_1 ( final java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4579
private TYPE_1 METHOD_1 ( java.lang.String response ) { TYPE_2 VAR_1 = new TYPE_2 ( response . METHOD_2 ( ) ) ; VAR_2 = new TYPE_3 ( VAR_1 ) ; return new TYPE_1 ( VAR_2 ) ; },private TYPE_1 METHOD_1 ( java.lang.String response ) { TYPE_2 VAR_1 = new TYPE_2 ( response . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; return new TYPE_1 ( VAR_2 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4580
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; ( ( TYPE_1 ) ( context ) ) . METHOD_4 ( ) ; VAR_4 = - 1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; ( ( TYPE_1 ) ( context ) ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",4581
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( METHOD_3 ( METHOD_4 ( ) ) ) ; VAR_2 = new TYPE_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( METHOD_3 ( METHOD_4 ( ) ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4582
public void METHOD_1 ( int value ) { this . value = value ; this . VAR_1 = value ; this . VAR_2 = true ; },public void METHOD_1 ( int value ) { this . value = value ; this . VAR_2 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4583
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4584
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = METHOD_2 ( STRING_1 , VAR_3 ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( STRING_2 , false ) ; VAR_5 . commit ( ) ; TYPE_2 . METHOD_5 ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_2 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",4585
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4586
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_3 = STRING_3 ; VAR_4 = STRING_4 ; VAR_5 = STRING_5 ; VAR_6 = STRING_6 ; VAR_7 = STRING_7 ; },private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_3 = STRING_3 ; VAR_4 = STRING_4 ; VAR_5 = STRING_5 ; VAR_6 = STRING_6 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4587
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = - 1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; },"['Insert Literal', 'Delete Literal', 'Delete UnaryOperator']",4588
public static TYPE_1 METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = STRING_2 ; VAR_4 = STRING_2 ; VAR_5 = VAR_6 ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = STRING_2 ; VAR_4 = STRING_2 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4589
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4590
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( new java.util.HashSet < TYPE_2 > ( VAR_1 . METHOD_2 ( ) ) ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; return STRING_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",4591
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = 0 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4594
public void METHOD_1 ( ) { VAR_1 = 0.0F ; VAR_2 = true ; VAR_3 = - 1.0F ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 = 0.0F ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4595
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_3 ( ) ; this . METHOD_4 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",4596
"protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = false ; METHOD_2 ( VAR_2 , VAR_3 ) ; if ( VAR_4 ) { VAR_5 = new TYPE_2 ( ) . METHOD_3 ( VAR_6 , VAR_7 [ 1 ] ) ; VAR_4 = false ; } }","protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = false ; METHOD_2 ( VAR_2 , VAR_3 ) ; if ( VAR_4 ) { new TYPE_2 ( ) . METHOD_3 ( VAR_6 , VAR_7 [ 1 ] ) ; VAR_4 = false ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4597
TYPE_1 METHOD_1 ( ) { TYPE_1 result = ( VAR_1 ) ? null : VAR_2 ; set ( null ) ; VAR_1 = false ; return result ; },TYPE_1 METHOD_1 ( ) { TYPE_1 result = ( VAR_1 ) ? null : VAR_2 ; VAR_2 = null ; VAR_1 = false ; return result ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete Invocation']",4598
public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_2 = new TYPE_1 ( ( VAR_1 * INT_1 ) ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ConstructorCall', 'Delete Assignment']",4599
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = true ; } VAR_3 = false ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; } VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4600
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4601
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; context = METHOD_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4602
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { this . VAR_4 = VAR_1 ; this . VAR_5 = VAR_2 ; this . VAR_6 = VAR_3 ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { this . VAR_4 = VAR_1 ; this . VAR_5 = VAR_2 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4603
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == ( VAR_3 ) ) { VAR_4 = false ; if ( VAR_2 == ( VAR_5 ) ) { METHOD_2 ( ) ; } } }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == ( VAR_3 ) ) { if ( VAR_2 == ( VAR_5 ) ) { METHOD_2 ( ) ; } } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4604
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4605
"public void METHOD_1 ( java.util.Map < TYPE_1 , TYPE_2 > VAR_1 ) { }","public void METHOD_1 ( java.util.Map < TYPE_1 , TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",4606
public void METHOD_1 ( java.lang.String text ) { if ( ( ( this . VAR_1 ) == null ) || ( ! ( this . VAR_2 . equals ( text ) ) ) ) VAR_3 = true ; else VAR_3 = false ; this . VAR_1 = text ; },public void METHOD_1 ( java.lang.String text ) { if ( ( ( this . VAR_1 ) == null ) || ( ! ( this . VAR_2 . equals ( text ) ) ) ) VAR_3 = true ; this . VAR_1 = text ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",4607
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . height = VAR_2 ; VAR_4 = VAR_1 ; VAR_5 = VAR_4 ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . height = VAR_2 ; VAR_4 = VAR_1 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4608
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { position = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; },"['Move Invocation', 'Move Invocation', 'Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4609
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; getContext ( ) . METHOD_2 ( TYPE_2 . METHOD_3 ( getContext ( ) , VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { getContext ( ) . METHOD_2 ( TYPE_2 . METHOD_3 ( getContext ( ) , VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4610
public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; VAR_5 = new TYPE_5 ( ) ; VAR_6 = new TYPE_6 ( ) ; },public static void init ( ) { VAR_6 = new TYPE_6 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4611
void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = getConfig ( ) . getString ( STRING_1 ) ; VAR_2 = getConfig ( ) . METHOD_3 ( STRING_2 ) ; VAR_3 = getConfig ( ) . getBoolean ( STRING_3 ) ; },void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = getConfig ( ) . getString ( STRING_1 ) ; VAR_2 = getConfig ( ) . METHOD_3 ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4612
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; METHOD_2 ( ) ; VAR_7 = METHOD_3 ( ) ; VAR_8 = METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; METHOD_2 ( ) ; VAR_7 = METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4613
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_2 ( 0 ) ; VAR_3 = false ; VAR_4 = false ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_2 ( 0 ) ; VAR_3 = false ; VAR_4 = false ; VAR_5 = VAR_6 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4614
"public java.lang.String METHOD_1 ( ) { java.lang.Integer VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = VAR_3 . METHOD_4 ( VAR_1 , VAR_4 ) ; VAR_5 = VAR_6 . METHOD_5 ( VAR_1 ) ; return STRING_1 ; }","public java.lang.String METHOD_1 ( ) { java.lang.Integer VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = VAR_3 . METHOD_4 ( VAR_1 , VAR_4 ) ; return STRING_1 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4615
"public void METHOD_1 ( int x , int y ) { this . x = x ; this . y = y ; }","public void METHOD_1 ( int x , int y ) { this . y = y ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4616
public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4617
"private void METHOD_1 ( TYPE_1 value ) { VAR_1 . set ( value ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.lang.String VAR_3 = VAR_2 . METHOD_2 ( VAR_4 ) ; TYPE_3 . METHOD_3 ( VAR_5 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 value ) { VAR_4 = value ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.lang.String VAR_3 = VAR_2 . METHOD_2 ( VAR_4 ) ; TYPE_3 . METHOD_3 ( VAR_5 , VAR_3 ) ; }","['Insert Assignment', 'Update Wra', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",4618
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = true ; VAR_3 = false ; } VAR_1 = false ; },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = true ; } VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4619
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4620
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; response = new TYPE_2 ( ) ; writer = new TYPE_3 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . response = new TYPE_2 ( ) ; this . writer = new TYPE_3 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",4621
public void METHOD_1 ( java.lang.Class < ? > type ) { this . name = VAR_1 . getName ( ) ; VAR_2 = type ; },public void METHOD_1 ( java.lang.Class < ? > type ) { this . name = VAR_1 . getName ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4622
public void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4623
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = new java.util.ArrayList < android.view.View > ( ) ; METHOD_3 ( ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; METHOD_3 ( ) ; return view ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4624
"public void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = new TYPE_1 ( ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4625
"public void METHOD_1 ( ) { TYPE_1 info = METHOD_2 ( ) ; VAR_1 = VAR_2 ; METHOD_3 ( info ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = METHOD_5 ( getString ( VAR_6 ) , VAR_7 ) ; }","public void METHOD_1 ( ) { TYPE_1 info = METHOD_2 ( ) ; VAR_1 = VAR_2 ; METHOD_3 ( info ) ; VAR_5 = METHOD_5 ( getString ( VAR_6 ) , VAR_7 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4627
"void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { this . VAR_2 = VAR_2 ; view . METHOD_2 ( VAR_2 ) ; }","void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { view . METHOD_2 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead']",4628
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_8 = VAR_9 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4629
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( METHOD_2 ( ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ) ; if ( VAR_3 ) { VAR_4 = VAR_2 ; } METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( new TYPE_3 ( METHOD_2 ( ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ) ) ; },"['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",4630
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 class . getName ( ) ; VAR_3 = TYPE_1 . METHOD_2 ( true ) ; VAR_4 . METHOD_3 ( VAR_3 , VAR_5 class ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_3 = TYPE_1 . METHOD_2 ( true ) ; VAR_4 . METHOD_3 ( VAR_3 , VAR_5 class ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4631
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; } },private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4632
"public void METHOD_1 ( float VAR_1 ) { METHOD_2 ( STRING_1 , ( ( float ) ( TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ) ) ) ; VAR_2 = true ; }","public void METHOD_1 ( float VAR_1 ) { METHOD_2 ( STRING_1 , ( ( float ) ( TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4633
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( false ) ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4634
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . remove ( VAR_1 ) ) ) ; if ( VAR_3 . isEmpty ( ) ) VAR_4 = TYPE_2 . METHOD_2 ( ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . remove ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeReference', 'Delete VariableRead']",4636
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 = intent . METHOD_2 ( STRING_1 ) ; start ( intent . METHOD_3 ( STRING_2 ) ) ; return VAR_4 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { start ( intent . METHOD_3 ( STRING_2 ) ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4637
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4640
protected void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4642
public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public static void init ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4643
"public void METHOD_1 ( android.view.View view ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = new android.content.Intent ( STRING_2 ) ; VAR_3 . METHOD_2 ( STRING_3 , true ) ; METHOD_3 ( VAR_3 ) ; view . METHOD_4 ( STRING_4 ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_3 , true ) ; METHOD_3 ( VAR_3 ) ; view . METHOD_4 ( STRING_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4645
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4646
"public void METHOD_1 ( int status , java.lang.String VAR_1 ) { if ( status == ( VAR_2 ) ) VAR_3 . METHOD_2 ( VAR_1 , this ) ; else if ( status == ( VAR_4 ) ) METHOD_3 ( VAR_1 ) ; VAR_5 = false ; }","public void METHOD_1 ( int status , java.lang.String VAR_1 ) { if ( status == 1 ) VAR_3 . METHOD_2 ( VAR_1 , this ) ; }","['Insert Literal', 'Delete FieldRead', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4647
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_4 = VAR_2 . METHOD_3 ( ) . toString ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4648
public void METHOD_1 ( java.lang.String content ) { response . METHOD_2 ( content ) ; VAR_1 = content ; },public void METHOD_1 ( java.lang.String content ) { response . METHOD_2 ( content ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4649
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_3 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4650
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; if ( VAR_2 != null ) { METHOD_4 ( VAR_2 ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; if ( VAR_2 != null ) { METHOD_4 ( VAR_2 ) ; } },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4651
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_2 = VAR_3 ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4652
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4653
public final void METHOD_1 ( ) { ( this . VAR_1 ) -- ; if ( ( this . VAR_1 ) < 0 ) this . VAR_1 = ( this . VAR_2 . size ( ) ) - 1 ; },public final void METHOD_1 ( ) { this . VAR_1 = ( ( this . VAR_1 ) - 1 ) % ( this . VAR_2 . size ( ) ) ; },"['Move Assignment', 'Update BinaryOperator', 'Update BinaryOperator', 'Move BinaryOperator', 'Move Literal', 'Delete Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",4654
public void METHOD_1 ( TYPE_1 error ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( error . METHOD_3 ( ) ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 error ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( error . METHOD_3 ( ) ) ; VAR_2 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4655
"public void METHOD_1 ( ) throws TYPE_1 { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } catch ( TYPE_2 VAR_2 ) { throw new TYPE_1 ( STRING_1 , VAR_2 ) ; } }","public void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { throw new TYPE_1 ( STRING_1 , VAR_2 ) ; } }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4656
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . error ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + ( METHOD_2 ( VAR_1 ) ) ) ) ; VAR_2 . error ( VAR_1 ) ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . error ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + ( METHOD_2 ( VAR_1 ) ) ) ) ; VAR_2 . error ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4657
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4658
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , this , VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_1 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , this , VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4659
void init ( ) { VAR_1 = 0 ; VAR_2 = new TYPE_1 ( getActivity ( ) . METHOD_1 ( ) ) ; VAR_3 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( this ) ; METHOD_4 ( ) ; },void init ( ) { VAR_2 = new TYPE_1 ( getActivity ( ) . METHOD_1 ( ) ) ; VAR_3 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( this ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4660
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4661
public void METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { if ( VAR_1 == null ) METHOD_2 ( ) ; else { value = new TYPE_2 ( ) ; value . METHOD_1 ( VAR_1 ) ; METHOD_3 ( false ) ; } },public void METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",4662
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4663
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; },private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; VAR_4 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",4664
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4665
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 = 0 ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4666
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( true ) ; try { return METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_4 ( ) ; } },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_1 = true ; VAR_2 = true ; try { return METHOD_3 ( ) ; } finally { VAR_1 = false ; VAR_2 = false ; } },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",4667
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( ! ( VAR_2 ) ) { VAR_3 = false ; VAR_4 . add ( position , VAR_1 ) ; ( VAR_5 ) ++ ; TYPE_2 . METHOD_2 ( position ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( ! ( VAR_2 ) ) { VAR_4 . add ( position , VAR_1 ) ; ( VAR_5 ) ++ ; TYPE_2 . METHOD_2 ( position ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4668
public void METHOD_1 ( ) { if ( ( this . METHOD_2 ( ) . size ( ) ) > 1 ) this . METHOD_2 ( ) . remove ( 1 ) ; VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( this . METHOD_2 ( ) . size ( ) ) > 1 ) this . METHOD_2 ( ) . remove ( 1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4670
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( path ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( path ) ; VAR_3 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4671
public void METHOD_1 ( TYPE_1 < ? > arg ) { VAR_1 = null ; },public void METHOD_1 ( TYPE_1 < ? > arg ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4672
public char [ ] METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } else { VAR_1 = true ; } return METHOD_3 ( ) ; },public char [ ] METHOD_1 ( ) { METHOD_2 ( ) ; return METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4673
public void build ( TYPE_1 VAR_1 ) throws TYPE_2 { super . build ( VAR_1 ) ; if ( ( VAR_2 ) instanceof TYPE_3 ) VAR_3 = true ; },public void build ( TYPE_1 VAR_1 ) throws TYPE_2 { super . build ( VAR_1 ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4674
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; start . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = STRING_1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; start . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4675
"public java.lang.String toString ( ) { if ( ( VAR_1 ) == 0 ) { return ""0"" ; } else if ( ( VAR_1 ) == 1 ) { return STRING_1 ; } else { return STRING_2 ; } }","public java.lang.String toString ( ) { if ( ( VAR_1 ) == 0 ) { return ""0"" ; } else if ( VAR_1 = 1 ) { return STRING_1 ; } else { return STRING_2 ; } }","['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator']",4676
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4677
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( ) ; VAR_1 = false ; METHOD_3 ( false ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( ) ; METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4678
public boolean equals ( TYPE_1 i ) { return ( this . VAR_1 ) == ( VAR_2 ) ; },public boolean equals ( TYPE_1 i ) { return this . VAR_1 = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator']",4679
public TYPE_1 METHOD_1 ( ) { float temp = ( ( this . getValue ( ) ) * ( ( float ) ( FLOAT_1 ) ) ) + INT_1 ; this . value = temp ; return this ; },public TYPE_1 METHOD_1 ( ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess']",4680
"public void init ( int x , int y , double VAR_1 , double VAR_2 ) { this . x = x ; this . y = y ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = true ; }","public void init ( int x , int y , double VAR_1 , double VAR_2 ) { this . x = x ; this . y = y ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4681
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; if ( VAR_3 ) { VAR_4 . setText ( VAR_5 ) ; } else { VAR_4 . setText ( VAR_6 ) ; } METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_3 ) { VAR_4 . setText ( VAR_5 ) ; } else { VAR_4 . setText ( VAR_6 ) ; } METHOD_2 ( true ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4682
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; if ( ! ( VAR_2 ) ) VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_2 ) ) VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4683
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4684
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.lang.Thread VAR_1 = new java.lang.Thread ( new TYPE_1 ( ) ) ; VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; listener = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; listener = null ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",4685
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4686
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 . x = 0 ; VAR_7 . y = 0 ; VAR_8 = false ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 . x = 0 ; VAR_7 . y = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4687
public void METHOD_1 ( ) { METHOD_2 ( ) ; sum = 0 ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4688
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { VAR_2 = new TYPE_3 ( getActivity ( ) , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { VAR_4 . METHOD_2 ( new TYPE_3 ( getActivity ( ) , VAR_3 ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4689
private void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { VAR_3 = false ; VAR_4 . remove ( VAR_1 ) ; } TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },private void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { VAR_4 . remove ( VAR_1 ) ; } TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( ) ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4690
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = true ; VAR_3 = false ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4691
public void METHOD_1 ( java.lang.String name ) { this . VAR_1 . set ( name ) ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",4692
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4693
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_3 ( this ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( true ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",4694
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_2 ( STRING_1 ) ; if ( ( METHOD_3 ( ) ) != null ) { VAR_2 = METHOD_3 ( ) . getBoolean ( STRING_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getActivity ( ) . METHOD_2 ( STRING_1 ) ; },"['Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4695
"protected void METHOD_1 ( ) { VAR_1 . info ( java.lang.String.format ( STRING_1 , VAR_2 ) ) ; VAR_3 . METHOD_2 ( 0 ) ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; }","protected void METHOD_1 ( ) { VAR_1 . info ( java.lang.String.format ( STRING_1 , VAR_2 ) ) ; VAR_3 . METHOD_2 ( 0 ) ; VAR_4 = false ; VAR_5 = false ; VAR_6 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4696
public java.lang.String [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = TYPE_1 . METHOD_2 ( message ) ; return VAR_1 ; },public java.lang.String [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) TYPE_1 . METHOD_2 ( message ) ; return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4697
"private void METHOD_1 ( ) { java.util.Collections.sort ( VAR_1 , TYPE_1 . METHOD_2 ( ) ) ; VAR_2 = VAR_1 ; }","private void METHOD_1 ( ) { java.util.Collections.sort ( VAR_1 , TYPE_1 . METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4698
"public void METHOD_1 ( java.lang.String VAR_1 , android.content.Context VAR_2 , TYPE_1 VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 = VAR_3 ; VAR_6 = VAR_1 ; METHOD_2 ( ) ; new TYPE_2 ( ) . execute ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , android.content.Context VAR_2 ) { VAR_4 = VAR_2 ; VAR_6 = VAR_1 ; METHOD_2 ( ) ; new TYPE_2 ( ) . execute ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4699
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4700
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; VAR_2 = VAR_1 ; } return VAR_5 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; } return VAR_5 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4701
"public void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , false ) ; } VAR_3 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , false ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",4702
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4703
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_2 ; VAR_4 = VAR_2 ; VAR_5 = VAR_2 ; VAR_6 = VAR_7 ; },private void METHOD_1 ( ) { VAR_3 = VAR_2 ; VAR_4 = VAR_2 ; VAR_5 = VAR_2 ; VAR_6 = VAR_7 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4704
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4705
private void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4706
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = null ; android.content.Intent i = new android.content.Intent ( this , VAR_3 class ) ; i . METHOD_2 ( VAR_4 ) ; this . METHOD_3 ( i ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = new android.content.Intent ( this , VAR_3 class ) ; i . METHOD_2 ( VAR_4 ) ; this . METHOD_3 ( i ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4707
public void METHOD_1 ( ) { context = VAR_1 ; VAR_2 = TYPE_1 . METHOD_2 ( context ) ; },public void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_2 ( context ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4709
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = null ; VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; } else { super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; } else { super . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4710
public void METHOD_1 ( android.view.View view ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = 0.0 ; VAR_4 = 0.0 ; result = 0.0 ; VAR_5 = STRING_1 ; VAR_6 = false ; VAR_7 = false ; VAR_8 . setText ( VAR_1 ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = 0.0 ; VAR_4 = 0.0 ; result = 0.0 ; VAR_5 = STRING_1 ; VAR_6 = 0 ; VAR_8 . setText ( VAR_1 ) ; },"['Update Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4711
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4712
"public void METHOD_1 ( ) { a = new TYPE_1 ( INT_1 ) ; assertEquals ( null , a . METHOD_2 ( VAR_1 ) ) ; }","public void METHOD_1 ( ) { assertEquals ( null , a . METHOD_2 ( VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4713
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4714
public void update ( double time ) { if ( ( VAR_1 ) > 0 ) { ( VAR_1 ) -- ; } },public void update ( double time ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",4715
"public static synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) . METHOD_2 ( STRING_1 ) . build ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_2 ) ; } }","public static synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) . build ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_2 ) ; } }","['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",4716
public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = java.lang.Thread . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return true ; },public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( ) ; return true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4717
public void METHOD_1 ( ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( VAR_2 . METHOD_2 ( ) . getValue ( VAR_3 ) ) ) ; if ( VAR_1 != null ) { VAR_4 = VAR_1 ; } else { VAR_4 = VAR_5 ; } },public void METHOD_1 ( ) { VAR_4 = VAR_5 ; },"['Move Assignment', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4718
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; init ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4719
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( null != ( VAR_3 ) ) && ( VAR_3 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( ) ; } VAR_3 = null ; VAR_4 . METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_4 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4720
public void init ( android.content.Context context ) { VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; this . context = context ; VAR_2 = METHOD_3 ( ) ; METHOD_4 ( ) ; },public void init ( android.content.Context context ) { this . context = context ; VAR_2 = METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4722
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; VAR_1 = VAR_3 ; ( VAR_4 ) -- ; },public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; VAR_1 = VAR_3 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4723
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",4725
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { if ( VAR_1 < 0 ) throw new TYPE_2 ( STRING_1 ) ; VAR_4 = ( VAR_4 ) + VAR_1 ; VAR_5 = ( VAR_4 ) + VAR_3 ; }",public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) throw new TYPE_2 ( STRING_1 ) ; VAR_4 = ( VAR_4 ) + VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment']",4726
public void METHOD_1 ( java.lang.String id ) { this . id = id ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; if ( ! ( VAR_6 ) ) { VAR_7 = null ; } },public void METHOD_1 ( java.lang.String id ) { this . id = id ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; if ( ! ( VAR_6 ) ) { VAR_7 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4727
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; ( VAR_3 ) -- ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4728
public void set ( boolean value ) { this . value = value ; },public void set ( boolean value ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4729
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != INT_1 ) { VAR_2 = INT_1 ; } else { VAR_2 = 0 ; } VAR_3 . METHOD_2 ( false ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 ; VAR_3 . METHOD_2 ( false ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4730
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } VAR_1 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4731
public void METHOD_1 ( int position ) { if ( position == 0 ) { VAR_1 = false ; VAR_2 = true ; } else VAR_1 = true ; },public void METHOD_1 ( int position ) { if ( position == 0 ) { VAR_1 = false ; } else VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4732
"public void METHOD_1 ( ) { intent = getIntent ( ) ; if ( intent . METHOD_2 ( ) . getString ( STRING_1 ) . METHOD_3 ( STRING_2 ) ) { VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; } }",public void METHOD_1 ( ) { intent = getIntent ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4734
"public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( VAR_2 , 0 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_2 , 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4735
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = false ; VAR_3 . METHOD_1 ( ) ; size = 0 ; },public void METHOD_1 ( ) { VAR_2 = false ; VAR_3 . METHOD_1 ( ) ; size = 0 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4736
public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 = true ; } else if ( ( VAR_4 ) == ( VAR_5 ) ) { VAR_6 = true ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 = true ; } },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block']",4739
private TYPE_1 METHOD_1 ( ) { int VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . getInt ( INT_1 ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = TYPE_1 . METHOD_4 ( VAR_1 ) ; return VAR_4 ; },private TYPE_1 METHOD_1 ( ) { int VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . getInt ( INT_1 ) ) ; VAR_3 . METHOD_3 ( ) ; return TYPE_1 . METHOD_4 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4740
protected final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_4 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; } },protected final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4741
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.System.out.println ( VAR_2 . METHOD_3 ( ) ) ; } finally { VAR_1 = null ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.System.out.println ( VAR_2 . METHOD_3 ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4742
"public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_4 ( 1 ) ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_3 , VAR_1 . METHOD_4 ( 1 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4743
public void METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4744
public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) > 0 ) { VAR_2 = true ; } else { VAR_2 = false ; } return VAR_2 ; },public boolean METHOD_1 ( ) { return VAR_2 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4745
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_4 . values ( ) [ VAR_2 ] ; VAR_5 = 0 ; VAR_6 . METHOD_2 ( ) ; new TYPE_2 ( true ) . execute ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_4 . values ( ) [ VAR_2 ] ; new TYPE_2 ( true ) . execute ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4746
"public void METHOD_1 ( TYPE_1 name ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = null ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 name ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4747
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4749
"public java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; return STRING_1 ; }","public java.lang.String METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; return STRING_1 ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4752
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4754
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . info ( ( ( name ) + STRING_1 ) ) ; VAR_1 = null ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . info ( ( ( name ) + STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4755
public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( STRING_1 ) ; VAR_1 = VAR_2 ; synchronized ( VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_3 ) { VAR_4 . METHOD_1 ( error ) ; } } },public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( STRING_1 ) ; synchronized ( VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_3 ) { VAR_4 . METHOD_1 ( error ) ; } } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4756
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; VAR_4 = new TYPE_2 ( ) ; VAR_5 = new TYPE_3 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4758
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = java.lang.Integer.parseInt ( VAR_1 . METHOD_2 ( VAR_3 , STRING_1 ) ) ; VAR_4 = java.lang.Boolean . METHOD_3 ( VAR_1 . METHOD_2 ( STRING_2 , ""false"" ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = java.lang.Integer.parseInt ( VAR_1 . METHOD_2 ( VAR_3 , STRING_1 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4759
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; VAR_3 . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4760
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; METHOD_3 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4761
"public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < java.lang.String > path = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( VAR_3 . item ( 0 ) . METHOD_2 ( ) ) ; METHOD_1 ( VAR_1 , path ) ; number = 0 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < java.lang.String > path = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( VAR_3 . item ( 0 ) . METHOD_2 ( ) ) ; METHOD_1 ( VAR_1 , path , 0 ) ; }","['Move Literal', 'Delete FieldWrite', 'Delete Assignment']",4762
"protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 , ( - 1 ) ) ) ; VAR_3 = new TYPE_1 ( getActivity ( ) , null ) ; list . METHOD_4 ( VAR_3 ) ; }","protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 , ( - 1 ) ) ) ; list . METHOD_4 ( new TYPE_1 ( getActivity ( ) , null ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4763
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { this . VAR_2 = null ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4764
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 = false ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_5 . commit ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_5 . commit ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4765
"public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { this . VAR_2 = VAR_2 ; VAR_3 = 0 ; VAR_4 = false ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { this . VAR_2 = VAR_2 ; VAR_3 = 0 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4766
"public void METHOD_1 ( ) { long [ ] position = new long [ VAR_1 . METHOD_2 ( ) ] ; VAR_1 . METHOD_3 ( position ) ; output = VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , position ) ; }","public void METHOD_1 ( ) { long [ ] position = new long [ VAR_1 . METHOD_2 ( ) ] ; VAR_1 . METHOD_3 ( position ) ; VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , position ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4767
"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 , VAR_1 ) ; if ( 0 != ( VAR_4 . size ( ) ) ) { VAR_5 = true ; } }","private void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4768
public TYPE_1 METHOD_1 ( final TYPE_2 delete ) { this . delete = delete ; return this ; },public TYPE_1 METHOD_1 ( final TYPE_2 delete ) { return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4769
"public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 ( VAR_2 , VAR_3 ) , 0 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_6 = VAR_7 ; } }","public void METHOD_1 ( ) { if ( ( VAR_2 ) != 0 ) METHOD_2 ( ) . METHOD_3 ( new TYPE_1 ( VAR_2 , VAR_3 ) , 0 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; }","['Move Invocation', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4770
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = - 1 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; VAR_9 = 0 ; },public void METHOD_1 ( ) { VAR_4 = 0 ; VAR_9 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4771
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( this . METHOD_2 ( ) ) ) ; VAR_2 = new TYPE_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( this . METHOD_2 ( ) ) ) ; METHOD_4 ( new TYPE_2 ( METHOD_3 ( ) ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4772
public java.lang.String METHOD_1 ( ) { VAR_1 = null ; VAR_1 = new TYPE_1 ( ) ; VAR_2 = null ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 = null ; VAR_1 = new TYPE_1 ( ) ; return STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4773
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4774
public final void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . METHOD_2 ( ) . METHOD_3 ( ) ; },public final void METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4777
private void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4778
public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = true ; },public static void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4779
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( 0 , 0 ) ; METHOD_2 ( new TYPE_3 ( this ) ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( new TYPE_3 ( this ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",4780
public void METHOD_1 ( TYPE_1 VAR_1 ) { list . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { list . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4781
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; VAR_2 . start ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . start ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4782
"protected void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; VAR_2 = TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( this , intent , null ) ; }","protected void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; TYPE_2 . METHOD_4 ( this , intent , null ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4783
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 args = METHOD_2 ( ) ; VAR_2 = VAR_3 . getInt ( ""type"" ) ; VAR_4 = VAR_3 . getString ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 args = METHOD_2 ( ) ; VAR_2 = VAR_3 . getInt ( ""type"" ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4784
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_2 . METHOD_1 ( VAR_3 ) ; } else { VAR_4 = VAR_5 ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( VAR_3 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4785
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_2 ( VAR_4 class ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_3 = new TYPE_1 ( VAR_2 ) . METHOD_2 ( VAR_4 class ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; },"['Move FieldWrite', 'Insert Invocation', 'Move ConstructorCall', 'Move TypeAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4786
public void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . data = VAR_1 ; VAR_4 = VAR_5 ; VAR_5 = VAR_2 ; },"public void METHOD_1 ( java.lang.Object VAR_1 ) { add ( 0 , VAR_1 ) ; }","['Insert Invocation', 'Insert Literal', 'Move VariableRead', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4787
public void METHOD_1 ( TYPE_1 buf ) { TYPE_2 VAR_1 = new TYPE_2 ( buf ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 buf ) { TYPE_2 VAR_1 = new TYPE_2 ( buf ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4788
"public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = 0 ; VAR_3 = false ; VAR_4 . start = 0 ; VAR_4 . end = 0 ; VAR_5 . setText ( VAR_1 ) ; }","public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = 0 ; VAR_4 . start = 0 ; VAR_4 . end = 0 ; VAR_5 . setText ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4789
"private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_1 ; METHOD_2 ( STRING_1 , VAR_3 ) ; return ; }","private void METHOD_1 ( java.lang.String VAR_4 , java.lang.String VAR_2 , boolean VAR_3 ) { METHOD_2 ( STRING_1 , VAR_4 , VAR_2 , VAR_3 ) ; return ; }","['Update Parameter', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4790
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4792
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4793
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { java.lang.String name = VAR_2 . toString ( ) ; if ( VAR_3 . contains ( name ) ) { VAR_4 . setValue ( name ) ; } } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { java.lang.String name = VAR_2 . toString ( ) ; if ( VAR_3 . contains ( name ) ) { VAR_4 . value = name ; } } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move TypeAccess', 'Delete Invocation']",4794
"private static void METHOD_1 ( ) { VAR_1 = VAR_2 . getBoolean ( STRING_1 , VAR_3 , true , STRING_2 ) ; if ( VAR_4 . METHOD_2 ( ) ) VAR_4 . METHOD_3 ( ) ; }",private static void METHOD_1 ( ) { if ( VAR_4 . METHOD_2 ( ) ) VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4795
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = this ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert VariableRead', 'Delete ThisAccess']",4796
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; VAR_1 . METHOD_1 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",4797
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { this . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = true ; return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { this . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4798
private void METHOD_1 ( ) { this . message = STRING_1 ; },private void METHOD_1 ( ) { this . text = STRING_1 ; },['Update FieldWrite'],4799
"protected void METHOD_1 ( ) { METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; }",protected void METHOD_1 ( ) { METHOD_2 ( true ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4800
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) METHOD_3 ( ) ; if ( ! ( VAR_1 ) ) VAR_2 . METHOD_4 ( ) ; select . METHOD_5 ( VAR_3 ) ; VAR_1 = false ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; select . METHOD_5 ( VAR_3 ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4801
public void METHOD_1 ( ) { VAR_1 . delete ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( STRING_1 ) ; VAR_6 . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { VAR_1 . delete ( ) ; VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( STRING_1 ) ; VAR_6 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4802
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = new TYPE_2 < > ( ) ; this . VAR_2 . setValue ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . setValue ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4803
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( INT_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( STRING_1 , STRING_2 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( INT_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4804
public void METHOD_1 ( TYPE_1 event ) { if ( ( ( VAR_1 ) == ( VAR_2 ) ) && ( ( VAR_3 ) == CHAR_1 ) ) { VAR_4 = false ; this . VAR_5 . METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If']",4805
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) == ( VAR_3 ) ) this . VAR_1 = true ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4806
public void METHOD_1 ( java.lang.String VAR_1 ) { this . name = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . name = name ; },"['Insert FieldRead', 'Delete VariableRead']",4807
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) + ( VAR_4 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4810
public void METHOD_1 ( ) { METHOD_2 ( ) ; try { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( new java.io.FileInputStream ( file ) ) ) ; } catch ( TYPE_3 VAR_2 ) { throw new TYPE_4 ( VAR_2 ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; try { this . VAR_1 = new java.io.FileInputStream ( file ) ; } catch ( TYPE_3 VAR_2 ) { throw new TYPE_4 ( VAR_2 ) ; } },"['Move ConstructorCall', 'Delete ConstructorCall', 'Delete ConstructorCall']",4811
"private void METHOD_1 ( ) { METHOD_2 ( false ) ; VAR_1 = false ; VAR_2 . remove ( this ) ; VAR_2 . add ( new TYPE_1 ( METHOD_3 ( ) , METHOD_4 ( ) ) ) ; }","private void METHOD_1 ( ) { this . METHOD_2 ( false ) ; VAR_2 . remove ( this ) ; VAR_2 . add ( new TYPE_1 ( METHOD_3 ( ) , METHOD_4 ( ) ) ) ; }","['Insert ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4812
"public boolean METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( VAR_2 . get ( position ) , true ) ; VAR_3 = true ; return true ; }","public boolean METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( VAR_2 . get ( position ) , true ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4813
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_3 . get ( position ) ; VAR_4 = VAR_5 . get ( position ) ; VAR_6 = VAR_7 . get ( position ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_3 . get ( position ) ; VAR_4 = VAR_5 . get ( position ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4814
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . start ( ) ; },protected void METHOD_1 ( ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4815
public void METHOD_1 ( ) { VAR_1 = false ; java.lang.Thread t = new java.lang.Thread ( this ) ; VAR_2 . start ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { java.lang.Thread t = new java.lang.Thread ( this ) ; VAR_2 . start ( ) ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4816
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( INT_1 ) ) ; METHOD_4 ( INT_2 , view ) ; VAR_3 = true ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( INT_1 ) ) ; METHOD_4 ( INT_2 , view ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4817
public void METHOD_1 ( ) { VAR_1 = null ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4818
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 = - 1 ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",4819
public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Move VariableRead', 'Insert TypeReference', 'Delete Invocation']",4820
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_3 = null ; VAR_2 = null ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_3 = null ; VAR_2 = null ; VAR_1 = null ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",4822
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; VAR_3 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_4 = VAR_5 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4823
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; startTime = TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4824
public void METHOD_1 ( ) { if ( VAR_1 ) java.lang.System.out.println ( STRING_1 ) ; VAR_2 = true ; VAR_3 = false ; METHOD_2 ( ) . start ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) java.lang.System.out.println ( STRING_1 ) ; VAR_3 = false ; METHOD_2 ( ) . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4826
public void METHOD_1 ( ) { this . VAR_1 = false ; this . METHOD_1 ( 0 ) ; this . METHOD_2 ( ) ; this . VAR_2 = 0 ; },public void METHOD_1 ( ) { this . METHOD_1 ( 0 ) ; this . METHOD_2 ( ) ; this . VAR_2 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4828
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; } TYPE_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4829
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4830
"public void METHOD_1 ( android.content.Context c , android.content.Intent intent ) { TYPE_1 state = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( ( state == ( VAR_2 ) ) && ( VAR_3 ) ) { VAR_3 = false ; METHOD_4 ( ) ; } }","public void METHOD_1 ( android.content.Context c , android.content.Intent intent ) { if ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) { METHOD_4 ( ) ; } }","['Update BinaryOperator', 'Move Invocation', 'Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4831
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_3 ( VAR_4 . getName ( ) ) ; this . VAR_5 = VAR_1 ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 . METHOD_3 ( VAR_4 . getName ( ) ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4833
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4835
public void METHOD_1 ( boolean parameters ) { this . rows = null ; this . VAR_1 = null ; if ( parameters ) { this . parameters = new java.util.ArrayList < > ( ) ; this . VAR_2 = STRING_1 ; } },public void METHOD_1 ( boolean parameters ) { this . rows = null ; this . VAR_1 = null ; if ( parameters ) this . parameters = new java.util.ArrayList < > ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4836
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess']",4838
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( ) ; VAR_6 = 0 ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; VAR_6 = 0 ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4839
public void METHOD_1 ( android.content.Context context ) { VAR_1 = - 1 ; VAR_2 = null ; VAR_3 = - 1 ; VAR_4 = null ; VAR_5 = null ; VAR_6 = - 1 ; VAR_7 = null ; VAR_8 = - 1 ; VAR_9 = null ; },public void METHOD_1 ( android.content.Context context ) { VAR_1 = - 1 ; VAR_2 = null ; VAR_3 = - 1 ; VAR_5 = null ; VAR_6 = - 1 ; VAR_8 = - 1 ; VAR_9 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4840
"void METHOD_1 ( ) { VAR_1 . add ( new TYPE_1 ( VAR_2 , STRING_1 , ( ++ ( VAR_3 ) ) ) ) ; }","void METHOD_1 ( ) { VAR_1 . add ( new TYPE_1 ( VAR_2 , STRING_1 , 0 ) ) ; }","['Insert Literal', 'Delete FieldWrite', 'Delete UnaryOperator']",4841
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } VAR_4 = INT_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4842
public void METHOD_1 ( ) { VAR_1 = new java.util.Random ( ) ; VAR_2 = 0 ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = new java.util.Random ( ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4843
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 METHOD_3 ( ) throws java.lang.Exception { return VAR_2 . METHOD_4 ( ) ; } } ) ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 METHOD_3 ( ) throws java.lang.Exception { return VAR_2 . METHOD_4 ( ) ; } } ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4844
protected java.lang.Boolean METHOD_1 ( java.lang.Void ... params ) { error = null ; return METHOD_2 ( ) ; },protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { return METHOD_2 ( ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4845
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 index , TYPE_1 VAR_2 ) throws TYPE_2 { if ( index == null ) { VAR_3 = VAR_2 ; } else { VAR_4 = VAR_4 . METHOD_1 ( index , VAR_2 ) ; } VAR_5 = VAR_6 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 index , TYPE_1 VAR_2 ) throws TYPE_2 { if ( index == null ) { VAR_3 = VAR_2 ; } else { VAR_4 . METHOD_1 ( index , VAR_2 ) ; } VAR_5 = VAR_6 ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",4846
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_2 = true ; TYPE_2 . METHOD_5 ( ) . VAR_3 . METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( ) . VAR_3 . METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4849
public void append ( int VAR_1 ) { TYPE_1 temp = VAR_2 ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 ) ; while ( ( VAR_4 ) != null ) { temp = VAR_4 ; } VAR_4 = VAR_3 ; ( length ) ++ ; },public void append ( int VAR_1 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 ) ; TYPE_1 temp = VAR_2 ; while ( ( VAR_4 ) != null ) { temp = VAR_4 ; } VAR_4 = VAR_3 ; },"['Move LocalVariable', 'Delete FieldWrite', 'Delete UnaryOperator']",4850
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4851
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 ; } METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4852
"public void METHOD_1 ( java.lang.String className , java.lang.Class < ? > VAR_1 ) { if ( ( this . VAR_2 ) == null ) this . VAR_2 = new java.util.HashMap < > ( ) ; this . VAR_3 . put ( className , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String className , java.lang.Class < ? > VAR_1 ) { this . VAR_3 . put ( className , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4853
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { this . VAR_2 = VAR_2 ; if ( ( this . VAR_3 ) != null ) { this . VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } METHOD_2 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ( this . VAR_3 ) != null ) { this . VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } METHOD_2 ( VAR_2 ) ; }","['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",4854
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_2 = VAR_3 . METHOD_6 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = VAR_3 . METHOD_6 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",4855
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; time = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; time = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4856
private boolean METHOD_1 ( ) { try { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; return true ; } catch ( TYPE_1 VAR_3 ) { return false ; } },private boolean METHOD_1 ( ) { try { METHOD_2 ( VAR_1 ) ; return true ; } catch ( java.lang.Exception VAR_3 ) { return false ; } },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4857
public void init ( ) { VAR_1 = METHOD_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; },public void init ( ) { VAR_1 = METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4858
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; context = new TYPE_2 ( VAR_2 . getContext ( ) , STRING_2 ) ; VAR_3 = TYPE_3 . METHOD_3 ( context ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 context = new TYPE_2 ( VAR_2 . getContext ( ) , STRING_2 ) ; VAR_3 = TYPE_3 . METHOD_3 ( context ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4859
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4860
public int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } return VAR_1 . METHOD_3 ( ) ; },public int METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",4861
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( method ) != INT_1 ) { method = INT_1 ; } else { method = 0 ; } VAR_2 . METHOD_2 ( false ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { method = INT_1 ; VAR_2 . METHOD_2 ( false ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4862
"public void METHOD_1 ( java.util.List < TYPE_1 > list ) { VAR_1 = new TYPE_2 ( this , list ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > list ) { VAR_2 . METHOD_2 ( new TYPE_2 ( this , list ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4863
public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 listener : VAR_2 ) { listener . METHOD_1 ( VAR_1 ) ; } VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 listener : VAR_2 ) { listener . METHOD_1 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4864
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 , false ) ; }","public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( VAR_2 . METHOD_2 ( ) , false ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4865
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = false ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = false ; VAR_8 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4866
public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { VAR_3 = VAR_1 ; VAR_4 = true ; } else { VAR_5 = VAR_1 ; VAR_6 = true ; } },public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { VAR_3 = VAR_1 ; } else { VAR_5 = VAR_1 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4867
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { state = VAR_2 ; return VAR_1 ; },public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4868
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4870
public void METHOD_1 ( java.util.Map VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 < > ( ) ; VAR_3 = new java.util.HashMap < > ( ) ; },public void METHOD_1 ( java.util.Map VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4871
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = null ; } else { super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { super . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4872
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",4873
public void METHOD_1 ( java.lang.String fileName ) { file = fileName ; },public METHOD_1 ( ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4874
long METHOD_1 ( ) { short VAR_1 = INT_1 ; endTime = TYPE_1 . METHOD_2 ( ) ; long time = ( endTime ) - ( startTime ) ; return time ; },long METHOD_1 ( ) { short VAR_1 = INT_1 ; endTime = TYPE_1 . METHOD_2 ( ) ; long time = ( endTime ) - ( startTime ) ; startTime = endTime ; return time / VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Insert BinaryOperator', 'Move VariableRead', 'Insert VariableRead']",4875
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 ) ; this . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",4876
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( ) { if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead']",4877
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( context , this ) ) ; VAR_2 = context ; VAR_3 = new TYPE_3 ( context ) ; METHOD_2 ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( context , this ) ) ; VAR_2 = context ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",4878
protected static synchronized void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . start ( VAR_3 ) ; },protected static void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . start ( VAR_3 ) ; } },"['Insert If', 'Insert FieldRead', 'Insert Block', 'Move Invocation', 'Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4880
public void METHOD_1 ( ) { if ( ( VAR_1 ) > ( METHOD_2 ( ) ) ) { VAR_1 = METHOD_2 ( ) ; } if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) > ( METHOD_2 ( ) ) ) { VAR_1 = METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4881
void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4882
"public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { VAR_3 = java.lang.Integer . METHOD_2 ( java.lang.String . METHOD_2 ( VAR_2 ) ) ; METHOD_3 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { return true ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",4883
"public void METHOD_1 ( ) { if ( ( ! ( VAR_1 . get ( ) ) ) && ( VAR_2 ) ) { VAR_3 = true ; VAR_4 . METHOD_2 ( VAR_5 , true , false ) ; } }","public void METHOD_1 ( ) { if ( ( ! ( VAR_1 . get ( ) ) ) && ( VAR_2 ) ) { VAR_4 . METHOD_2 ( VAR_5 , true , false ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4884
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4885
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > output ) { if ( ! ( VAR_1 ) ) { VAR_2 = output ; VAR_3 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > output ) { if ( ! ( VAR_1 ) ) { VAR_2 = output ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4886
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; this . VAR_2 = VAR_3 . METHOD_3 ( ) . get ( STRING_1 , VAR_4 . String class ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",4887
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ""false"" ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",4888
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = false ; VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_1 = true ; TYPE_1 . METHOD_2 ( STRING_2 ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4889
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( true ) ) { TYPE_1 . METHOD_3 ( this ) ; } else { VAR_2 = VAR_3 . METHOD_4 ( ) ; VAR_4 = VAR_3 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( true ) ) { TYPE_1 . METHOD_3 ( this ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block']",4890
public final void METHOD_1 ( java.lang.Throwable VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_1 ( ) ; },public final void METHOD_1 ( java.lang.Throwable VAR_1 ) { METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4891
public int METHOD_1 ( ) { this . VAR_1 = ( ( VAR_2 ) - 1 ) % INT_1 ; return this . VAR_1 ; },public int METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",4892
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; className = VAR_3 . className ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4893
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false , VAR_3 ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( this , STRING_1 , VAR_5 ) . show ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( false , VAR_3 ) ; TYPE_1 . METHOD_4 ( this , STRING_1 , VAR_5 ) . show ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4894
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { VAR_2 = 0 ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",4895
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",4896
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_3 = VAR_4 . getBoolean ( STRING_2 ) ; this . VAR_5 = VAR_4 . getBoolean ( STRING_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4897
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( INT_1 , VAR_3 ) , TYPE_3 ) ; VAR_4 = true ; set = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( INT_1 , VAR_3 ) , TYPE_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4898
"public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 . METHOD_1 ( id ) ; VAR_3 = false ; java.lang.String message = STRING_2 ; VAR_1 . METHOD_2 ( STRING_3 , message ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( java.lang.Integer id ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 . METHOD_1 ( id ) ; java.lang.String message = STRING_2 ; VAR_1 . METHOD_2 ( STRING_3 , message ) ; return VAR_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4899
protected void METHOD_1 ( ) { this . error = null ; this . VAR_1 = 0 ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { this . VAR_1 = 0 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4900
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_2 = false ; VAR_3 = false ; VAR_4 = null ; },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_2 = false ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4901
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( context ) ; VAR_2 = false ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( context ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4902
public void start ( ) { VAR_1 = true ; VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; },public void start ( ) { VAR_1 = true ; java.lang.Thread VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",4903
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4904
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4905
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4906
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },['Insert ThisAccess'],4908
private void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = java.lang.Integer.toString ( VAR_1 ) ; VAR_4 . setText ( VAR_3 ) ; },private void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_4 . setText ( java.lang.Integer.toString ( VAR_1 ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",4910
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = true ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4911
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 = true ; VAR_3 . show ( VAR_4 , false ) ; VAR_5 . METHOD_2 ( data ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_5 . METHOD_2 ( data ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",4912
"public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 . METHOD_3 ( VAR_3 class . getClass ( ) , STRING_1 , VAR_2 ) ; } VAR_4 = false ; }","public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 . METHOD_3 ( VAR_3 class . getClass ( ) , STRING_1 , VAR_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4913
"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { VAR_2 . info ( STRING_1 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { VAR_3 . METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4914
public int METHOD_1 ( ) { if ( ( VAR_1 ) > INT_1 ) VAR_1 = INT_1 ; else if ( ( VAR_1 ) < 0 ) VAR_1 = 0 ; return VAR_1 ; },public int METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",4915
"public void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( VAR_2 , VAR_3 ) ; android.view.View VAR_4 = getView ( ) ; if ( VAR_4 != null ) { VAR_4 . METHOD_3 ( ) ; } }","public void METHOD_1 ( ) { METHOD_2 ( VAR_2 , VAR_3 ) ; android.view.View VAR_4 = getView ( ) ; if ( VAR_4 != null ) { VAR_4 . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4916
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( new TYPE_1 ( null ) ) ; METHOD_3 ( false ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( new TYPE_1 ( null ) ) ; METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4917
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 = null ; this . VAR_2 = - INT_1 ; this . VAR_3 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4918
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = true ; } else { VAR_3 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",4919
void METHOD_1 ( TYPE_1 status ) { if ( ( this . status ) != status ) { this . VAR_1 = new java.util.Date ( ) ; } this . status = status ; },void METHOD_1 ( TYPE_1 status ) { this . status = status ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4920
public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",4921
"protected void METHOD_1 ( android.content.Intent intent ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; } VAR_3 = true ; }","protected void METHOD_1 ( android.content.Intent intent ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4922
"public void METHOD_1 ( boolean VAR_1 , java.lang.String text ) { VAR_2 = text ; VAR_3 = VAR_1 ; }",public void METHOD_1 ( boolean VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4924
public void setText ( final java.lang.String VAR_1 ) { this . VAR_2 = this ; VAR_3 = VAR_1 ; METHOD_1 ( ) ; },public void setText ( final java.lang.String VAR_1 ) { this . VAR_2 = this ; METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4926
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; METHOD_4 ( ) ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",4927
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . replaceAll ( STRING_1 , STRING_2 ) ; VAR_3 . METHOD_2 ( ( ( STRING_3 + ( VAR_1 ) ) + STRING_4 ) ) ; TYPE_1 . METHOD_3 ( STRING_5 , data ) ; }","public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ( ( STRING_3 + data ) + STRING_4 ) ) ; TYPE_1 . METHOD_3 ( STRING_5 , data ) ; }","['Update FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4928
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . temp = VAR_1 ; this . VAR_2 = new TYPE_2 ( temp ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . temp = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",4929
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , false ) ; VAR_1 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( METHOD_2 ( ) ) ; }",private void METHOD_1 ( ) { TYPE_2 . METHOD_4 ( METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",4930
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",4931
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( null ) ; VAR_3 = VAR_1 . METHOD_2 ( VAR_4 class . METHOD_3 ( ) ) ; VAR_5 = VAR_1 . METHOD_4 ( ) ; VAR_6 = VAR_1 . METHOD_5 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( null ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",4932
public TYPE_1 METHOD_1 ( ) { TYPE_1 temp = VAR_1 ; VAR_1 = null ; return temp ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",4933
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; android.content.Intent intent = new android.content.Intent ( VAR_4 , VAR_5 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 . METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_4 , VAR_5 class ) ; intent . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 . METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4934
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; ( VAR_3 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator']",4935
public void METHOD_1 ( ) { VAR_1 = - 1 ; VAR_2 = - 1 ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",4936
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( VAR_2 ) ; METHOD_3 ( VAR_1 . METHOD_6 ( ) ) . METHOD_5 ( true ) ; VAR_3 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( VAR_2 ) ; METHOD_3 ( VAR_1 . METHOD_6 ( ) ) . METHOD_5 ( true ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4938
public static void METHOD_1 ( ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 = null ; VAR_3 = null ; } else { VAR_4 = STRING_1 ; VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_5 = false ; } },public static void METHOD_1 ( ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 = null ; VAR_3 = null ; } else { VAR_4 = STRING_1 ; VAR_5 = false ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4939
public void METHOD_1 ( java.lang.String name ) { if ( VAR_1 . equals ( STRING_1 ) ) { this . title = STRING_2 ; } else { this . title = name ; } },public void METHOD_1 ( java.lang.String name ) { this . title = name ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4940
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4941
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = 1 ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4942
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , FLOAT_1 ) ; VAR_2 = new TYPE_2 ( ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , FLOAT_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4943
public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { VAR_1 = true ; } else { VAR_1 = false ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Move FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Delete UnaryOperator', 'Delete Assignment']",4944
public void METHOD_1 ( ) { super . METHOD_2 ( false ) ; VAR_1 = false ; },public void METHOD_1 ( ) { super . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4945
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . text = VAR_3 . getText ( ) . toString ( ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4947
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4948
"private TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } else { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; } return VAR_2 ; }",private TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { } else { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4949
public static void main ( java.lang.String [ ] args ) { VAR_1 = args ; TYPE_1 . METHOD_1 ( args ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( args ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4950
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4951
public boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 1 ) { VAR_2 += - FLOAT_1 ; } else { VAR_2 += FLOAT_1 ; } if ( ( VAR_2 ) < 0 ) { VAR_2 = 0.0F ; } VAR_3 = 1 ; return false ; },public boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 1 ) { VAR_2 += - FLOAT_1 ; } else { VAR_2 += FLOAT_1 ; } if ( ( VAR_2 ) < 0 ) { VAR_2 = 0.0F ; } return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4952
public synchronized void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete Wra', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4953
public TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; if ( ( VAR_2 ) == null ) { VAR_2 = VAR_3 ; return VAR_4 . value ; } VAR_2 = VAR_5 ; return VAR_6 . value ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { VAR_2 = VAR_3 ; return VAR_4 . value ; } VAR_2 = VAR_5 ; return VAR_6 . value ; },"['Delete FieldWrite', 'Delete UnaryOperator']",4954
public static void METHOD_1 ( ) { double VAR_1 = VAR_2 . METHOD_2 ( ) ; double output = TYPE_1 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_3 ( output ) ; VAR_3 = output ; TYPE_2 . METHOD_4 ( ) ; },private static void METHOD_1 ( ) { double VAR_1 = VAR_2 . METHOD_2 ( ) ; double output = TYPE_1 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_3 ( output ) ; TYPE_2 . METHOD_4 ( ) ; },"['Update Wra', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4955
public java.lang.String METHOD_1 ( ) { VAR_1 = STRING_1 ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 += ( VAR_4 . toString ( ) ) + STRING_2 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 += ( VAR_4 . toString ( ) ) + STRING_2 ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4956
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) ) ; if ( VAR_2 . equals ( VAR_3 ) ) { VAR_3 = VAR_1 ; } },public void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",4957
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; else VAR_2 = null ; METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( true ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4959
"public void METHOD_1 ( android.view.View view ) { java.lang.String c = STRING_1 ; VAR_1 = true ; android.content.Intent VAR_2 = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; VAR_2 . METHOD_3 ( STRING_2 , c ) ; METHOD_4 ( VAR_2 , 1 ) ; }","public void METHOD_1 ( android.view.View view ) { java.lang.String c = STRING_1 ; android.content.Intent VAR_2 = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; VAR_2 . METHOD_3 ( STRING_2 , c ) ; METHOD_4 ( VAR_2 , 1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4961
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 . show ( ) ; VAR_5 = TYPE_3 . METHOD_2 ( VAR_3 , METHOD_3 ( ) , VAR_6 . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_4 . show ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",4962
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( STRING_1 , STRING_2 ) ; } else VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4963
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( true ) ; VAR_4 = true ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4965
"public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { if ( ( VAR_1 ) != null ) { VAR_2 = append ( VAR_2 , VAR_1 , field ) ; } else { VAR_2 = field ; } }","public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { VAR_2 = field ; }","['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",4966
private void METHOD_1 ( ) { if ( ( VAR_1 ) > ( VAR_2 ) ) { VAR_1 = VAR_2 ; } else if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) > ( VAR_2 ) ) { VAR_1 = VAR_2 ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block']",4967
"public void add ( int index , TYPE_1 VAR_1 ) { ( this . size ) ++ ; this . VAR_2 . add ( index , VAR_1 ) ; }","public void add ( int index , TYPE_1 VAR_1 ) { this . VAR_2 . add ( index , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",4968
public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String message = STRING_1 ; METHOD_2 ( message ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_3 = null ; VAR_4 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String message = STRING_1 ; METHOD_2 ( message ) ; VAR_2 . METHOD_3 ( INT_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4969
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4971
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( n ) ; VAR_2 . add ( VAR_1 . METHOD_3 ( n ) ) ; VAR_3 = n ; ( n ) ++ ; ( VAR_4 ) ++ ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( n ) ; VAR_2 . add ( VAR_1 . METHOD_3 ( n ) ) ; ( n ) ++ ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete UnaryOperator']",4972
public void METHOD_1 ( TYPE_1 TYPE_2 ) { VAR_1 . METHOD_2 ( TYPE_2 ) ; VAR_2 . METHOD_2 ( TYPE_2 ) ; VAR_3 . METHOD_2 ( TYPE_2 ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 TYPE_2 ) { this . TYPE_2 = TYPE_2 ; VAR_1 . METHOD_2 ( TYPE_2 ) ; VAR_2 . METHOD_2 ( TYPE_2 ) ; VAR_3 . METHOD_2 ( TYPE_2 ) ; VAR_3 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",4973
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 = null ; METHOD_2 ( ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4974
"private void METHOD_1 ( ) { VAR_1 = VAR_2 . split ( STRING_1 ) ; VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_5 = new java.util.HashMap < > ( ) ; VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_7 . METHOD_4 ( VAR_8 , VAR_9 ) ; }","private void METHOD_1 ( ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_5 = new java.util.HashMap < > ( ) ; VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_7 . METHOD_4 ( VAR_8 , VAR_9 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",4976
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4977
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( true ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( true ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4978
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4979
public TYPE_1 METHOD_1 ( ) { TYPE_1 element = VAR_1 . array [ VAR_2 ] ; this . VAR_3 = VAR_2 ; this . VAR_2 += 1 ; return element ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 element = VAR_1 . array [ VAR_2 ] ; this . VAR_2 += 1 ; return element ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",4980
protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4983
void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_1 -= INT_1 ; } else { VAR_1 = ( VAR_2 ) - INT_1 ; VAR_3 -= INT_1 ; } METHOD_2 ( ) ; },void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_1 -= INT_1 ; } else { VAR_1 = 0 ; VAR_3 -= INT_1 ; } METHOD_2 ( ) ; },"['Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator']",4984
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; } VAR_1 = null ; VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_3 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",4985
"public void METHOD_1 ( float value ) { VAR_1 = true ; VAR_2 = true ; this . VAR_3 . value ( value ) ; METHOD_2 ( new TYPE_1 ( this , VAR_4 ) ) ; }","public void METHOD_1 ( float value ) { this . VAR_3 . value ( value ) ; METHOD_2 ( new TYPE_1 ( this , VAR_4 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4986
public void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; if ( VAR_1 . isEmpty ( ) ) { METHOD_2 ( ) ; } VAR_2 = false ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String result ) { super . METHOD_1 ( result ) ; if ( VAR_1 . isEmpty ( ) ) { METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4987
"public void METHOD_1 ( float VAR_1 , int x , int y ) { this . VAR_2 . METHOD_1 ( VAR_1 , x , y ) ; VAR_3 = false ; this . METHOD_2 ( ) ; }","public void METHOD_1 ( float VAR_1 , int x , int y ) { }","['Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",4988
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 = false ; ( ( TYPE_1 ) ( VAR_3 . METHOD_2 ( ) ) ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4989
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },protected void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4990
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4991
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( true ) ; this . METHOD_3 ( VAR_2 ) ; VAR_3 . response ( new TYPE_1 ( this , STRING_1 , null ) ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( true ) ; this . METHOD_3 ( VAR_2 ) ; VAR_3 . response ( new TYPE_1 ( this , STRING_1 , null ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4993
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new java.util.ArrayList < > ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",4994
"public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = true ; VAR_4 . METHOD_3 ( new TYPE_2 ( ) ) ; }","public void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_4 . METHOD_3 ( new TYPE_2 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",4995
void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 . title ) ; VAR_3 . METHOD_4 ( VAR_6 ) ; },void METHOD_1 ( ) { VAR_1 = false ; VAR_3 . METHOD_3 ( VAR_5 . title ) ; VAR_3 . METHOD_4 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4996
"public void METHOD_1 ( java.lang.Exception error ) { METHOD_2 ( ( ( STRING_1 + ( this . VAR_1 ) ) + STRING_2 ) , error ) ; this . error = error ; this . VAR_2 . METHOD_3 ( ) ; }","public void METHOD_1 ( java.lang.Exception error ) { METHOD_2 ( ( ( STRING_1 + ( this . VAR_1 ) ) + STRING_2 ) , error ) ; this . VAR_2 . METHOD_3 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",4998
"protected void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . start ( this ) ; }",protected void METHOD_1 ( ) { VAR_4 . start ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",4999
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ( ! VAR_1 ) ) ; VAR_4 = 1 ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ( ! VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5000
public java.util.List < TYPE_1 > METHOD_1 ( ) { try { VAR_1 = METHOD_2 ( VAR_2 ) ; return VAR_1 ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return null ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { try { return METHOD_2 ( VAR_2 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return null ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",5001
public void METHOD_1 ( final TYPE_1 status ) { VAR_1 = status ; VAR_2 = new java.util.Date ( ) ; },public void METHOD_1 ( final TYPE_1 status ) { VAR_1 = status ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5002
public java.lang.String delete ( ) { synchronized ( VAR_1 ) { } VAR_2 = new TYPE_1 ( ) ; return VAR_3 ; },public java.lang.String delete ( ) { synchronized ( VAR_1 ) { } return VAR_3 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5003
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; this . VAR_1 = null ; this . VAR_2 = null ; METHOD_3 ( true ) ; METHOD_4 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; this . VAR_1 = null ; METHOD_3 ( true ) ; METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5004
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5005
public void METHOD_1 ( ) { counter = ( counter ) + 1 ; message = STRING_1 ; VAR_1 . setText ( VAR_2 . toString ( ) ) ; VAR_3 . setText ( message ) ; },public void METHOD_1 ( ) { counter = ( counter ) + 1 ; VAR_1 . setText ( VAR_2 . toString ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",5006
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . add ( VAR_1 ) ; VAR_5 . put ( VAR_1 , VAR_6 ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5007
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5009
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },"['Insert Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",5010
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = TYPE_1 . METHOD_4 ( METHOD_5 ( ) , VAR_3 , VAR_4 ) ; VAR_5 . show ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( METHOD_5 ( ) , VAR_3 , VAR_4 ) . show ( ) ; }","['Insert Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5011
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . info ( ( STRING_1 + VAR_1 ) ) ; this . VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( true ) ; ( VAR_5 ) ++ ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . info ( ( STRING_1 + VAR_1 ) ) ; this . VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( true ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5012
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = null ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5013
public boolean METHOD_1 ( ) { boolean temp = VAR_1 ; VAR_1 = false ; return temp ; },public boolean METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",5014
public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; },public void METHOD_1 ( long VAR_1 ) { VAR_3 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5015
public java.lang.Void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) ; while ( ( VAR_2 ) != ( VAR_3 ) ) { VAR_4 . METHOD_3 ( ) ; } VAR_5 = true ; VAR_6 = VAR_7 ; return null ; },public java.lang.Void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) ; while ( ( VAR_2 ) != ( VAR_3 ) ) { VAR_4 . METHOD_3 ( ) ; } VAR_5 = true ; return null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5016
public TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) { status = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) { return null ; },"['Insert Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess']",5017
"void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = VAR_1 ; VAR_3 = height ; VAR_4 = true ; TYPE_1 VAR_5 ; VAR_5 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; }","void METHOD_1 ( int VAR_1 , int height ) { VAR_2 = VAR_1 ; VAR_3 = height ; TYPE_1 VAR_5 ; VAR_5 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5018
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_2 . METHOD_1 ( VAR_3 ) ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = TYPE_2 . METHOD_1 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5019
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this , VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5020
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( this ) ; VAR_3 . get ( ) . execute ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_1 . METHOD_3 ( this ) ; VAR_3 . get ( ) . execute ( VAR_4 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5021
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; view = null ; VAR_2 . METHOD_1 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",5022
public void METHOD_1 ( byte [ ] VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = null ; } else { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5023
public void METHOD_1 ( final boolean VAR_1 ) { content . METHOD_1 ( ) ; VAR_2 = 0 ; if ( VAR_1 ) { METHOD_2 ( ) ; } state = new TYPE_1 ( ) ; },public void METHOD_1 ( final boolean VAR_1 ) { content . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } state = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5024
"public void METHOD_1 ( ) { METHOD_2 ( new java.awt.Color ( INT_1 , INT_1 , INT_1 ) ) ; setText ( STRING_1 ) ; VAR_1 = null ; }","public void METHOD_1 ( ) { METHOD_2 ( new java.awt.Color ( INT_1 , INT_1 , INT_1 ) ) ; setText ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5026
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( VAR_3 . equals ( VAR_1 ) ) ) { VAR_2 = null ; } this . VAR_4 = VAR_1 ; VAR_5 = true ; this . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_3 . equals ( VAR_1 ) ) { VAR_2 = null ; } this . VAR_4 = VAR_1 ; this . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5027
public java.lang.Integer METHOD_1 ( ) { long VAR_1 = METHOD_2 ( ) ; long VAR_2 = VAR_1 / INT_1 ; if ( ( VAR_1 % INT_1 ) > 0 ) VAR_2 ++ ; VAR_3 = ( ( int ) ( VAR_2 ) ) ; return VAR_3 ; },public java.lang.Integer METHOD_1 ( ) { long VAR_1 = METHOD_2 ( ) ; long VAR_2 = VAR_1 / INT_1 ; if ( ( VAR_1 % INT_1 ) > 0 ) VAR_2 ++ ; return ( ( int ) ( VAR_2 ) ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",5029
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( 0 , VAR_3 ) ; } else { VAR_1 = false ; } }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( 0 , VAR_3 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5030
private void METHOD_1 ( ) { VAR_1 . setText ( getString ( VAR_2 ) ) ; VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_4 = null ; },private void METHOD_1 ( ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5031
"public void METHOD_1 ( TYPE_1 data ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; i . METHOD_3 ( STRING_1 , data ) ; METHOD_4 ( i ) ; }","public void METHOD_1 ( TYPE_1 data ) { android.content.Intent i = new android.content.Intent ( this , VAR_2 class ) ; i . METHOD_3 ( STRING_1 , data ) ; METHOD_4 ( i ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5032
public void METHOD_1 ( int key ) { if ( key == ( - 1 ) ) return ; VAR_1 [ key ] = true ; VAR_2 [ key ] = false ; VAR_3 = true ; },public void METHOD_1 ( int key ) { if ( key == ( - 1 ) ) return ; VAR_1 [ key ] = true ; VAR_2 [ key ] = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5033
public void METHOD_1 ( int id ) { this . id = id ; },public void METHOD_1 ( ) { this . id = id ; },"['Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",5034
"public void METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 ) { return ; } VAR_1 = true ; METHOD_2 ( VAR_2 , VAR_3 , false ) ; METHOD_3 ( METHOD_4 ( VAR_2 , VAR_3 ) . METHOD_5 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_2 , VAR_3 , false ) ; METHOD_3 ( METHOD_4 ( VAR_2 , VAR_3 ) . METHOD_5 ( ) , STRING_1 ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5035
public boolean METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; } VAR_4 . METHOD_4 ( true ) ; return true ; },public boolean METHOD_1 ( android.view.View view ) { return false ; },"['Update Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",5037
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_2 = false ; METHOD_2 ( STRING_1 , t ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { METHOD_2 ( STRING_1 , t ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5038
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_3 = 1 ; VAR_4 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5039
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == ( TYPE_3 ) ) { VAR_2 = TYPE_3 . METHOD_2 ( ) ; } VAR_3 . add ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; return this ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5040
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5041
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = STRING_1 ; VAR_3 = 0 ; if ( METHOD_2 ( getActivity ( ) ) ) { VAR_4 . execute ( VAR_2 ) ; } },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = STRING_1 ; VAR_4 . execute ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",5042
"public void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 = 0 ; VAR_4 = 0 ; }","public void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5043
public void update ( TYPE_1 VAR_1 ) { this . id = VAR_2 . id ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; VAR_13 = VAR_14 ; },public void update ( TYPE_1 VAR_1 ) { this . id = VAR_2 . id ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5044
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { if ( ( response . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = response . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; } }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { if ( ( response . METHOD_2 ( ) ) == ( VAR_2 ) ) { METHOD_5 ( response . METHOD_3 ( ) . METHOD_4 ( ) ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5045
public void METHOD_1 ( ) { VAR_1 = - 1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5046
"public TYPE_1 METHOD_1 ( ) { VAR_1 = INT_1 ; int count = VAR_2 . METHOD_2 ( ) ; return new TYPE_1 ( STRING_1 , STRING_2 , count ) ; }","public TYPE_1 METHOD_1 ( ) { int count = VAR_2 . METHOD_2 ( ) ; return new TYPE_1 ( STRING_1 , STRING_2 , count ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5047
public boolean METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) . equals ( STRING_2 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_2 = false ; } return VAR_2 ; },public boolean METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_2 = false ; } return VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5048
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { if ( VAR_3 . METHOD_2 ( STRING_1 ) ) VAR_5 = true ; else VAR_5 = false ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) throws TYPE_2 { if ( VAR_3 . METHOD_2 ( STRING_1 ) ) VAR_5 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",5049
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_3 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5050
public void start ( float VAR_1 ) { startTime = VAR_1 ; VAR_2 = true ; },public void start ( float VAR_1 ) { startTime = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5051
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( STRING_1 , VAR_1 ) ; this . VAR_3 = VAR_1 ; VAR_4 = true ; this . METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",5052
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5053
public void METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5054
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 init ) { this . VAR_1 = VAR_1 ; java.lang.System.out.println ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 init ) { java.lang.System.out.println ( STRING_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5056
"public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( INT_1 , INT_1 ) ; VAR_1 = false ; } }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( 0 , INT_1 ) ; }","['Move Invocation', 'Insert Literal', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5057
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 [ 0 ] = VAR_2 ; VAR_4 [ 1 ] = VAR_3 ; VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 [ 0 ] = VAR_2 ; VAR_4 [ 1 ] = VAR_3 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5059
"protected void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , ( STRING_1 + ( VAR_3 ) ) ) ; VAR_4 = true ; }","protected void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , ( STRING_1 + ( VAR_3 ) ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5060
public boolean METHOD_1 ( ) { VAR_1 = ( ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( file . METHOD_3 ( ) ) ; return VAR_1 ; },public boolean METHOD_1 ( ) { return ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( file . METHOD_3 ( ) ) ; },"['Move BinaryOperator', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead']",5061
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) ; VAR_3 . METHOD_4 ( VAR_4 [ VAR_5 ] ) ; },private void METHOD_1 ( ) { VAR_5 = 0 ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) ; VAR_3 . METHOD_4 ( VAR_4 [ 0 ] ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert Literal', 'Delete FieldRead']",5062
public void METHOD_1 ( ) { long tmp = ( TYPE_1 . METHOD_2 ( ) ) / INT_1 ; this . VAR_1 = tmp + ( time ) ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; },"['Insert Literal', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",5063
public boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == 0 ) { VAR_1 = true ; } return ( ! ( VAR_2 ) ) || ( ! ( VAR_1 ) ) ; },public boolean METHOD_1 ( ) { return ( ! ( VAR_2 ) ) || ( ! ( VAR_1 ) ) ; },"['Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5064
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 += VAR_1 ; if ( ( this . VAR_1 ) > ( VAR_2 ) ) { this . VAR_1 = VAR_2 ; } VAR_3 = VAR_1 ; VAR_4 = p . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 += VAR_1 ; if ( ( this . VAR_1 ) > ( VAR_2 ) ) { this . VAR_1 = VAR_2 ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",5065
public void METHOD_1 ( TYPE_1 name ) { VAR_1 = false ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 name ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5066
private void METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_2 . add ( new TYPE_2 ( ) ) ; VAR_2 . add ( new TYPE_3 ( ) ) ; },private void METHOD_1 ( ) { VAR_2 . add ( new TYPE_2 ( ) ) ; VAR_2 . add ( new TYPE_3 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5067
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = ( TYPE_1 . METHOD_2 ( ) ) / INT_1 ; VAR_3 = 0.0F ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5068
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; VAR_4 = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5069
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; METHOD_3 ( VAR_1 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",5070
public void METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = new java.lang.String ( VAR_1 ) ; },public void METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",5071
"public void METHOD_1 ( TYPE_1 TYPE_2 , TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; this . VAR_3 . METHOD_4 ( this . VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 TYPE_2 , TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; this . state = null ; this . VAR_3 . METHOD_4 ( this . VAR_4 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",5073
public void METHOD_1 ( int value ) { this . VAR_1 = value ; },public void METHOD_1 ( int value ) { this . VAR_1 = VAR_1 ; },"['Insert FieldRead', 'Delete VariableRead']",5074
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = false ; VAR_4 = 1 ; VAR_5 = 0 ; VAR_6 = 1 ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = false ; VAR_4 = 1 ; VAR_5 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5075
public boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . update ( ) ; view . METHOD_3 ( ) ; this . VAR_4 = true ; return true ; },public boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . update ( ) ; view . METHOD_3 ( ) ; return true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5076
"public void handle ( long VAR_1 ) { long VAR_2 = VAR_1 - ( VAR_3 ) ; VAR_3 = VAR_1 ; METHOD_1 ( VAR_4 . METHOD_2 ( ) , VAR_4 . METHOD_3 ( ) , ( ( long ) ( VAR_2 * ( VAR_5 ) ) ) ) ; }","public void handle ( long VAR_1 ) { METHOD_1 ( VAR_4 . METHOD_2 ( ) , VAR_4 . METHOD_3 ( ) ) ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",5078
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = false ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5079
private void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . setText ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_1 ) ) ) ) ; },private void METHOD_1 ( int VAR_1 ) { VAR_3 . setText ( ( STRING_1 + ( java.lang.String . METHOD_2 ( VAR_1 ) ) ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5080
public void METHOD_1 ( boolean show ) { VAR_1 = null ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_1 ( show ) ; } },public void METHOD_1 ( boolean show ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_1 ( show ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5081
"public void METHOD_1 ( TYPE_1 ... node ) { ( METHOD_2 ( ) . VAR_1 ) ++ ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.lang.String VAR_3 = VAR_2 . METHOD_3 ( node ) ; METHOD_4 ( STRING_1 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 ... node ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; java.lang.String VAR_3 = VAR_2 . METHOD_3 ( node ) ; METHOD_4 ( STRING_1 , VAR_3 ) ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator']",5082
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; VAR_3 = new TYPE_1 ( STRING_3 ) ; VAR_4 = new TYPE_1 ( STRING_4 ) ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5083
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5084
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( 1 ) , VAR_2 ) ; VAR_1 . METHOD_3 ( 0 ) ; VAR_1 . METHOD_4 ( ) ; this . VAR_3 = false ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( 1 ) , VAR_2 ) ; VAR_1 . METHOD_3 ( 0 ) ; VAR_1 . METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5085
public void METHOD_1 ( ) { value = TYPE_1 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Update TypeReference', 'Insert Return', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5086
public void METHOD_1 ( TYPE_1 msg ) { switch ( VAR_1 ) { case VAR_2 : if ( VAR_3 ) { VAR_4 = true ; } else { METHOD_2 ( ) ; } break ; } },public void METHOD_1 ( TYPE_1 msg ) { switch ( VAR_1 ) { case VAR_2 : METHOD_2 ( ) ; break ; } },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5087
"public void METHOD_1 ( final int [ ] VAR_1 ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; size = VAR_3 . length ; VAR_4 = null ; }","public void METHOD_1 ( final int [ ] VAR_1 ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; VAR_4 = null ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5088
public void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 < ( VAR_2 ) ) { VAR_2 = 0 ; } this . VAR_1 = VAR_1 - ( VAR_2 ) ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 - ( VAR_2 ) ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5089
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { this . VAR_2 = VAR_3 . get ( ) ; } else { this . VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { this . VAR_2 = VAR_3 . get ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",5090
public TYPE_1 METHOD_1 ( boolean value ) { VAR_1 = true ; VAR_2 = value ; return this ; },public TYPE_1 METHOD_1 ( boolean value ) { VAR_2 = value ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5091
public TYPE_1 open ( ) throws TYPE_2 { this . VAR_1 = new TYPE_3 ( this . context ) ; this . VAR_2 = this . VAR_1 . METHOD_1 ( ) ; return this ; },public TYPE_1 open ( ) throws TYPE_2 { VAR_1 = new TYPE_3 ( context ) ; VAR_2 = VAR_1 . METHOD_1 ( ) ; return this ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Insert FieldWrite', 'Insert Invocation', 'Insert FieldRead', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",5092
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 ; this . VAR_2 = VAR_2 ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5093
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5094
"public void update ( float VAR_1 ) { VAR_2 = VAR_3 . add ( METHOD_1 ( VAR_4 ) . METHOD_2 ( VAR_1 ) ) ; java.lang.System.out.println ( VAR_5 . x ) ; this . METHOD_3 ( VAR_3 . x , VAR_3 . y ) ; }",public void update ( float VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']",5095
"public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5096
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . info ( STRING_1 ) ; VAR_3 = VAR_1 ; java.lang.String VAR_4 = VAR_5 . toString ( ) ; METHOD_2 ( VAR_4 , VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . info ( STRING_1 ) ; java.lang.String VAR_4 = VAR_5 . toString ( ) ; METHOD_2 ( VAR_4 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5097
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; this . VAR_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",5098
"public void METHOD_1 ( ) { VAR_1 = null ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; METHOD_2 ( VAR_4 , VAR_2 ) ; ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) . METHOD_4 ( ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; METHOD_2 ( VAR_4 , VAR_2 ) ; ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) . METHOD_4 ( ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5099
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = null ; VAR_2 = null ; VAR_3 = new java.lang.StringBuffer ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5100
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 = 0 ; VAR_6 = 1 ; VAR_7 = 0 ; VAR_8 = false ; VAR_9 . setText ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_6 = 1 ; VAR_7 = 0 ; VAR_8 = false ; VAR_9 . setText ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5101
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_4 = true ; } METHOD_4 ( ) . METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5102
public void METHOD_1 ( ) { init ( ) ; if ( ! ( VAR_1 ) ) { VAR_1 = true ; METHOD_2 ( INT_1 ) ; } else { METHOD_2 ( INT_2 ) ; } },public void METHOD_1 ( ) { init ( ) ; METHOD_2 ( INT_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",5103
"public java.lang.String METHOD_1 ( java.lang.String fileName ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; java.lang.String filePath = VAR_2 . METHOD_2 ( fileName ) ; VAR_3 = VAR_2 . METHOD_3 ( VAR_4 ) ; return java.lang.String.format ( VAR_5 , filePath ) ; }","public java.lang.String METHOD_1 ( java.lang.String fileName ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; java.lang.String filePath = VAR_2 . METHOD_2 ( fileName ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; return java.lang.String.format ( VAR_5 , filePath ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5104
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = STRING_1 ; return ; },protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; return ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5105
public final void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = true ; },public final void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5106
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = null ; METHOD_2 ( new TYPE_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( new TYPE_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5107
"private static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_4 . get ( VAR_1 ) ; return VAR_2 ; }","private static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5108
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5109
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5110
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; VAR_4 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5113
public void METHOD_1 ( TYPE_1 event ) { if ( ( ( this . VAR_1 ) instanceof TYPE_2 ) && ( this . VAR_2 ) ) { ( ( TYPE_2 ) ( this . VAR_1 ) ) . METHOD_2 ( ) ; this . VAR_2 = false ; } },public void METHOD_1 ( TYPE_1 event ) { if ( ( this . VAR_1 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( this . VAR_1 ) ) . METHOD_2 ( ) ; } },"['Move BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5114
public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( name ) ) ) ; VAR_1 = true ; TYPE_1 . METHOD_2 ( end ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation']",5115
"public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { TYPE_2 . METHOD_2 ( this , VAR_1 ) ; parameters = new java.util.HashMap < > ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { TYPE_2 . METHOD_2 ( this , VAR_1 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5116
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5117
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 listener ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; this . listener = listener ; METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 listener ) { this . VAR_1 = VAR_1 ; this . listener = listener ; METHOD_2 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5118
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; ( VAR_3 ) ++ ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . contains ( VAR_1 ) ) ) VAR_2 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5119
public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) throw new TYPE_2 ( STRING_1 ) ; TYPE_1 item = VAR_1 . item ; VAR_2 = VAR_3 ; ( VAR_4 ) -- ; return item ; },public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) throw new TYPE_2 ( STRING_1 ) ; TYPE_1 item = VAR_1 . item ; VAR_2 = VAR_3 ; return item ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5120
"public void METHOD_1 ( int source , int VAR_1 ) { VAR_2 = source ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; }",public void METHOD_1 ( int source ) { VAR_2 = source ; VAR_4 . METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",5121
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5122
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_13 ) ; },protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5123
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = METHOD_2 ( position , VAR_4 . getId ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( position ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",5124
public void METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_2 . toString ( ) . METHOD_2 ( STRING_1 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = null ; } },public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5125
public void METHOD_1 ( TYPE_1 target ) { this . VAR_1 . add ( target ) ; },public void METHOD_1 ( TYPE_1 target ) { this . target = target ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",5126
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; VAR_1 = false ; TYPE_1 . METHOD_3 ( null ) ; VAR_2 = null ; VAR_3 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; VAR_1 = false ; TYPE_1 . METHOD_3 ( null ) ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5127
"public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }","public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",5128
public void init ( ) { for ( java.util.Iterator < TYPE_1 > i = VAR_1 . iterator ( ) ; i . METHOD_1 ( ) ; ) i . METHOD_2 ( ) . init ( ) ; VAR_2 = false ; VAR_3 = false ; },public void init ( ) { for ( java.util.Iterator < TYPE_1 > i = VAR_1 . iterator ( ) ; i . METHOD_1 ( ) ; ) i . METHOD_2 ( ) . init ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5129
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 ) { VAR_3 = VAR_4 . getText ( ) . toString ( ) ; VAR_5 . setText ( VAR_3 ) ; VAR_6 . METHOD_2 ( ) ; } }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 ) { VAR_5 . setText ( VAR_3 ) ; VAR_6 . METHOD_2 ( ) ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5130
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; assert VAR_3 . set ( METHOD_2 ( INT_1 ) , METHOD_2 ( INT_1 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; assert VAR_3 . set ( METHOD_2 ( INT_1 ) , METHOD_2 ( INT_1 ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5131
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . context ) == null ) { VAR_1 . context = new TYPE_1 ( ) ; } return VAR_1 . context ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 . context ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5132
public TYPE_1 METHOD_1 ( TYPE_2 n ) { VAR_1 . add ( n ) ; VAR_2 = this ; int VAR_3 = METHOD_2 ( ) ; TYPE_1 VAR_4 = METHOD_3 ( VAR_3 ) ; return VAR_4 ; },public TYPE_1 METHOD_1 ( TYPE_2 n ) { VAR_1 . add ( n ) ; int VAR_3 = METHOD_2 ( ) ; TYPE_1 VAR_4 = METHOD_3 ( VAR_3 ) ; return VAR_4 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",5133
"private void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 ) TYPE_1 . METHOD_3 ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; VAR_6 . start ( this ) ; } }","private void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( ) ) { if ( VAR_3 ) TYPE_1 . METHOD_3 ( VAR_4 , ( ( VAR_5 ) + STRING_1 ) ) ; VAR_6 . start ( this ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5135
"private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , STRING_1 , STRING_2 ) ; VAR_4 = ( VAR_3 ) - 1 ; VAR_5 = true ; }","private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , STRING_1 , STRING_2 ) ; VAR_4 = ( VAR_3 ) - 1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5136
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) . add ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) . add ( VAR_4 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",5137
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_6 ) ; METHOD_2 ( VAR_3 ) . METHOD_4 ( ) ; VAR_7 = false ; VAR_8 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_6 ) ; METHOD_2 ( VAR_3 ) . METHOD_4 ( ) ; VAR_7 = false ; VAR_8 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5138
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5139
"public void METHOD_1 ( boolean b , java.io.File file ) { this . file = file ; VAR_1 = b ; }",public void METHOD_1 ( boolean b ) { VAR_1 = b ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5140
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_4 , TYPE_2 VAR_5 , TYPE_3 VAR_6 ) { }","['Update Parameter', 'Update Parameter', 'Update Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",5141
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( false ) ; VAR_5 = true ; VAR_6 . METHOD_3 ( ) ; VAR_7 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( false ) ; VAR_5 = true ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",5143
public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) throws TYPE_1 { if ( ( value ) != null ) { value = null ; } if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",5144
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeAccess', 'Delete Invocation']",5145
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( INT_1 ) ; VAR_3 . METHOD_2 ( INT_1 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( INT_1 ) ; VAR_3 . METHOD_2 ( INT_1 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5146
public static TYPE_1 get ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public static TYPE_1 get ( ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( ) ; } return VAR_1 ; },"['Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5147
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = true ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5148
public void METHOD_1 ( long VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; },['Delete ThisAccess'],5149
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . put ( VAR_3 , VAR_1 ) ; ( VAR_3 ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . put ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",5150
public void METHOD_1 ( TYPE_1 buffer ) { if ( buffer . METHOD_2 ( ) ) { VAR_1 = TYPE_2 . METHOD_1 ( buffer ) ; } else { VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 buffer ) { if ( buffer . METHOD_2 ( ) ) { VAR_1 = TYPE_2 . METHOD_1 ( buffer ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",5151
"public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , final int position , long id ) { VAR_2 = view ; METHOD_2 ( VAR_2 ) ; VAR_3 = position ; return true ; }","public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , final int position , long id ) { METHOD_2 ( ) ; VAR_3 = position ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess']",5152
"public void METHOD_1 ( int VAR_1 , java.lang.Integer VAR_2 , java.lang.String VAR_3 ) { VAR_4 = false ; }","public void METHOD_1 ( int VAR_1 , java.lang.Integer VAR_2 , java.lang.String VAR_3 ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5153
public void METHOD_1 ( ) { VAR_1 = INT_1 ; METHOD_2 ( VAR_2 class ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 class ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5154
public void init ( ) { if ( ( VAR_1 ) == null ) VAR_1 = STRING_1 ; java.lang.System.out.println ( ( STRING_2 + ( VAR_1 ) ) ) ; },public void init ( ) { java.lang.System.out.println ( ( STRING_2 + ( VAR_1 ) ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5155
public java.lang.String execute ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_1 ( ) ; result = ( STRING_1 + ( VAR_3 ) ) + STRING_2 ; result = VAR_1 . METHOD_2 ( VAR_3 ) ; return VAR_4 ; },public java.lang.String execute ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_1 ( ) ; result = ( STRING_1 + ( VAR_3 ) ) + STRING_2 ; return VAR_4 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5156
public void METHOD_1 ( ) { if ( ! ( this . VAR_1 ) ) { this . VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; } this . VAR_1 = false ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5157
"public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 = VAR_2 ; if ( ( METHOD_2 ( ) ) == false ) return ; VAR_5 . METHOD_1 ( VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { if ( ( METHOD_2 ( ) ) == false ) return ; VAR_5 . METHOD_1 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5158
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) VAR_3 [ ( ( VAR_1 . METHOD_2 ( ) ) - ( VAR_4 ) ) ] . VAR_5 += VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) VAR_3 [ VAR_1 . METHOD_2 ( ) ] . VAR_5 += VAR_2 ; }","['Move Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",5159
void METHOD_1 ( boolean VAR_1 ) { VAR_2 = ( VAR_3 ) + 1 ; VAR_4 = VAR_1 ; },void METHOD_1 ( boolean VAR_1 ) { VAR_4 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",5160
public void METHOD_1 ( ) { VAR_1 = false ; id = - 1 ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = - 1 ; VAR_7 = 0 ; VAR_8 = false ; position = 0 ; },public void METHOD_1 ( ) { VAR_1 = false ; id = - 1 ; VAR_2 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = - 1 ; VAR_7 = 0 ; VAR_8 = false ; position = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5161
public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ 1 ] ) ; VAR_1 = METHOD_3 ( VAR_1 ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },public void METHOD_1 ( ) { VAR_1 += ( VAR_2 . METHOD_2 ( ) ) * ( VAR_3 [ 1 ] ) ; VAR_4 . setText ( ( STRING_1 + ( VAR_1 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5162
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 VAR_3 = new TYPE_3 ( getContext ( ) ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = new TYPE_3 ( getContext ( ) ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",5163
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { this . VAR_1 = VAR_1 ; return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5164
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = true ; return STRING_1 ; } else { return null ; } },public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; return STRING_1 ; } else { return null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5165
public void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 ; this . VAR_2 = VAR_3 ; this . VAR_4 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 = VAR_3 ; this . VAR_4 = null ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",5166
public java.util.Collection < TYPE_1 > METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } return VAR_2 . METHOD_1 ( ) ; },public java.util.Collection < TYPE_1 > METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5167
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_2 ( null ) ; VAR_4 = VAR_5 ; VAR_5 = VAR_1 ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_2 ( null ) ; VAR_5 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5168
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) throw new TYPE_2 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) throw new TYPE_2 ( STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5169
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5170
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = 0 ; VAR_1 = false ; } else { VAR_2 = VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5171
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 = new TYPE_3 ( this . VAR_2 ) ; } TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( VAR_1 ) ; return VAR_3 ; },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( VAR_1 ) ; return VAR_3 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5172
"public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_2 ( VAR_1 , VAR_1 , VAR_1 , VAR_1 ) ; }","public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 , VAR_1 , VAR_1 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5173
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5174
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = 0 ; VAR_5 = new TYPE_1 ( 0 , STRING_1 , 0 , 0 , true ) ; }","public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_4 = 0 ; VAR_5 = new TYPE_1 ( 0 , STRING_1 , 0 , 0 , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5175
public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],5176
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5178
public TYPE_1 METHOD_1 ( ) { if ( this . VAR_1 ) return this ; this . VAR_2 . METHOD_2 ( this ) ; this . VAR_1 = true ; return this ; },public TYPE_1 METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( this ) ; return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Return', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5179
public final void METHOD_1 ( final java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } },public final void METHOD_1 ( final java.util.ArrayList < java.lang.String > VAR_1 ) { if ( VAR_1 == null ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 = new java.util.HashSet < > ( VAR_1 ) ; } },"['Update BinaryOperator', 'Insert Block', 'Move Invocation', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",5180
"public static void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( context ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_1 ) ; VAR_3 . METHOD_5 ( ) ; }","public static void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 ) { TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( context ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_1 ) ; VAR_3 . METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5181
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . setText ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { VAR_2 . setText ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5182
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; if ( ( VAR_3 ) != null ) { VAR_4 = new TYPE_2 ( VAR_3 , VAR_5 ) ; VAR_6 . execute ( ) ; METHOD_3 ( ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; if ( ( VAR_3 ) != null ) { } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5183
public double METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } else { VAR_3 = true ; VAR_2 = 0 ; } return VAR_2 ; },public double METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } else { VAR_3 = true ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5184
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = this . METHOD_2 ( ) ; VAR_3 = true ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 = true ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",5185
"public void METHOD_1 ( long VAR_1 ) { if ( VAR_2 ) return ; VAR_2 = true ; new java.lang.Thread ( VAR_3 ) . start ( ) ; VAR_4 . i ( VAR_5 , STRING_1 ) ; }","public void METHOD_1 ( long VAR_1 ) { new java.lang.Thread ( VAR_3 ) . start ( ) ; VAR_4 . i ( VAR_5 , STRING_1 ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5186
"public TYPE_1 start ( ) { if ( ( startTime ) == 0 ) { startTime = TYPE_2 . METHOD_1 ( ) ; } return new TYPE_3 ( this . VAR_1 , this . startTime , this . VAR_2 ) ; }","public TYPE_1 start ( ) { return new TYPE_3 ( this . VAR_1 , this . startTime , this . VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5187
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( VAR_1 ) { METHOD_2 ( STRING_1 ) ; } VAR_2 . METHOD_3 ( true ) ; try { return METHOD_4 ( ) ; } finally { VAR_2 . METHOD_5 ( ) ; } },public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( VAR_1 ) { METHOD_2 ( STRING_1 ) ; } VAR_2 = true ; try { return METHOD_4 ( ) ; } finally { VAR_2 = false ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",5188
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5189
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5190
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) && ( ( VAR_3 ) != null ) ) { VAR_2 = false ; METHOD_2 ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",5191
public void METHOD_1 ( TYPE_1 VAR_1 ) { listener . METHOD_2 ( false ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { listener . METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5192
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5194
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 ) { VAR_5 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5195
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_2 = new TYPE_3 ( 1 , 1 ) ; VAR_3 . METHOD_3 ( VAR_1 , INT_1 , INT_1 ) ; VAR_3 . METHOD_4 ( 0 , VAR_2 , INT_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_1 , INT_1 , INT_1 ) ; VAR_3 . METHOD_4 ( 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",5196
public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; if ( ( VAR_2 ) == true ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = false ; } },public void handle ( TYPE_1 VAR_1 ) { METHOD_1 ( ) ; if ( ( VAR_2 ) == true ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5197
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5198
public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_4 = METHOD_2 ( ) ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 = METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5199
public static void METHOD_1 ( ) { TYPE_1 status = VAR_1 . get ( ) ; synchronized ( status ) { VAR_2 = false ; java.lang.Thread . METHOD_2 ( ) ; VAR_3 = false ; } },public static void METHOD_1 ( ) { TYPE_1 status = VAR_1 . get ( ) ; synchronized ( status ) { VAR_2 = false ; java.lang.Thread . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5200
public void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5201
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; } return this . VAR_2 ; },public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } return this . VAR_2 ; },"['Insert Return', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5202
public void METHOD_1 ( ) { ( time ) -- ; if ( ( time ) == 0 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },public void METHOD_1 ( ) { ( time ) -- ; if ( ( time ) == 0 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5203
"public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) { TYPE_2 . METHOD_2 ( ) . METHOD_4 ( path ) ; } else { VAR_2 = path ; } }","public void METHOD_1 ( java.lang.String path , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_4 ( path ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5204
public void METHOD_1 ( TYPE_1 time ) { this . time = time ; new TYPE_2 ( true ) . execute ( ) ; },public void METHOD_1 ( ) { new TYPE_2 ( true ) . execute ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5205
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 = METHOD_2 ( ) . getString ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5206
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5207
"public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 = new TYPE_3 ( this . VAR_2 ) ; } TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( VAR_1 , null ) ; return VAR_3 ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 VAR_3 = VAR_4 . METHOD_3 ( VAR_1 , null ) ; return VAR_3 ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5208
"public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( VAR_3 , false ) ; VAR_4 = true ; VAR_5 = true ; VAR_6 . METHOD_1 ( STRING_1 , STRING_2 ) ; }","public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . init ( VAR_3 , false ) ; VAR_4 = true ; VAR_6 . METHOD_1 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5209
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",5210
private void METHOD_1 ( ) { VAR_1 = 0.0 ; VAR_2 = 0.0 ; VAR_3 = 0.0 ; for ( TYPE_1 VAR_4 : METHOD_2 ( ) ) { METHOD_3 ( VAR_4 ) ; } },private void METHOD_1 ( ) { for ( TYPE_1 VAR_4 : METHOD_2 ( ) ) { METHOD_3 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5211
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( ) ; VAR_2 = METHOD_2 ( ) ; view = METHOD_3 ( ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( ) ; VAR_2 = METHOD_2 ( ) ; view = METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5212
"public void METHOD_1 ( long VAR_1 ) { VAR_2 = new TYPE_1 ( context ) ; java.lang.String VAR_3 = STRING_1 ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 ) ; long VAR_5 = VAR_2 . METHOD_1 ( VAR_4 , new long [ ] { VAR_1 } ) ; }","public void METHOD_1 ( long VAR_1 ) { java.lang.String VAR_3 = STRING_1 ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 ) ; long VAR_5 = VAR_2 . METHOD_1 ( VAR_4 , new long [ ] { VAR_1 } ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5213
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5214
"public int METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 . get ( VAR_1 ) ) != null ) { VAR_3 . get ( VAR_1 ) . METHOD_2 ( VAR_2 ) ; return VAR_4 ; } else return VAR_5 ; }","public int METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 . get ( VAR_1 ) ) != null ) { VAR_3 . get ( VAR_1 ) . VAR_2 = VAR_2 ; return VAR_4 ; } else return VAR_5 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move Invocation', 'Delete Invocation']",5215
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) METHOD_3 ( ) ; VAR_2 = true ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5216
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) . delete ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_3 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) . delete ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",5217
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = true ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5219
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . execute ( ) ; VAR_3 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . execute ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5220
public void METHOD_1 ( java.lang.Long VAR_1 ) { this . id = VAR_1 ; },public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],5221
"public int METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 ) throws TYPE_1 { VAR_3 = VAR_1 ; if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","public int METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 ) throws TYPE_1 { if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5223
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5224
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( true ) ; VAR_2 = true ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5225
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_3 = new TYPE_1 ( METHOD_3 ( ) ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( STRING_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5226
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5227
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_3 [ i ] = 0 ; } },public void METHOD_1 ( ) { VAR_1 = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_3 [ i ] = 0 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5228
public void init ( TYPE_1 context ) { this . VAR_1 = new TYPE_2 ( ) ; VAR_2 . init ( context ) ; TYPE_3 . METHOD_1 ( ) . init ( context ) ; VAR_3 = new TYPE_4 ( VAR_1 ) ; },public void init ( TYPE_1 context ) { VAR_2 . init ( context ) ; TYPE_3 . METHOD_1 ( ) . init ( context ) ; VAR_3 = new TYPE_4 ( ) ; },"['Insert Assignment', 'Move FieldWrite', 'Insert ConstructorCall', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5229
public void METHOD_1 ( java.lang.String value ) { if ( value != null ) { VAR_1 = value ; } METHOD_2 ( value ) ; },public void METHOD_1 ( java.lang.String value ) { METHOD_2 ( value ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5230
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { this . VAR_2 = VAR_2 ; VAR_3 = new TYPE_4 ( INT_1 , 0 , INT_1 , INT_1 ) ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { VAR_3 = new TYPE_4 ( INT_1 , 0 , INT_1 , INT_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5232
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; if ( VAR_2 ) { VAR_3 . METHOD_1 ( ) ; VAR_2 = false ; } }",public void METHOD_1 ( ) { if ( VAR_2 ) { VAR_3 . METHOD_1 ( ) ; } },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5233
"private void METHOD_1 ( android.widget.Button VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = 0 ; VAR_5 . setText ( TYPE_1 . METHOD_2 ( VAR_5 . getText ( ) , VAR_6 . getText ( ) ) ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( android.widget.Button VAR_1 ) { VAR_2 = VAR_3 ; VAR_5 . setText ( TYPE_1 . METHOD_2 ( VAR_5 . getText ( ) , VAR_6 . getText ( ) ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5234
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = VAR_1 ; VAR_5 = null ; METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = VAR_1 ; super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5235
public void METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = this . VAR_2 ; TYPE_2 VAR_3 = new TYPE_3 ( context ) ; this . VAR_2 = VAR_3 ; this . context = context ; },public void METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = this . VAR_2 ; TYPE_2 VAR_3 = new TYPE_3 ( context ) ; this . VAR_2 = VAR_3 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5236
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = ( VAR_3 ) - ( VAR_4 ) ; VAR_5 = ( VAR_6 ) - ( VAR_4 ) ; time = TYPE_1 . METHOD_2 ( ) ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = ( VAR_3 ) - ( VAR_4 ) ; VAR_5 = ( VAR_6 ) - ( VAR_4 ) ; this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move Assignment', 'Delete VariableRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5237
private double METHOD_1 ( double time ) { return time - ( startTime ) ; },private double METHOD_1 ( double time ) { if ( ( startTime ) <= ( - 1 ) ) { startTime = time ; } return time - ( startTime ) ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert UnaryOperator', 'Insert Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert VariableRead']",5238
"protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { VAR_1 = TYPE_3 . METHOD_2 ( ) ; VAR_2 = new TYPE_4 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; }","protected void METHOD_1 ( TYPE_1 context ) throws java.io.IOException , TYPE_2 { VAR_2 = new TYPE_4 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5239
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_1 ( ) ; VAR_6 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_1 ( ) ; VAR_6 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5240
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Update FieldWrite', 'Insert ThisAccess']",5242
public void METHOD_1 ( android.view.View VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) ; VAR_5 = VAR_6 . getText ( ) . toString ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5243
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 ; this . VAR_5 = VAR_2 ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 ; this . VAR_5 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5244
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ! ( VAR_2 ) ) { VAR_2 = true ; METHOD_3 ( new TYPE_2 ( ) ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Invocation', 'Delete Invocation']",5245
public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; this . VAR_5 = 0 ; },public void METHOD_1 ( ) { this . VAR_2 = 0 ; this . VAR_3 = 0 ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; this . VAR_5 = 0 ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5246
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 . token = token ; VAR_11 = VAR_12 ; return this . VAR_1 = VAR_1 ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 . token = token ; this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Move Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Return']",5248
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 t = VAR_1 . item ; VAR_2 = start ; start = VAR_3 ; ( position ) ++ ; handle = 1 ; return t ; },public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 t = VAR_1 . item ; start = VAR_3 ; ( position ) ++ ; handle = 1 ; return t ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5250
public void METHOD_1 ( ) { size = 0 ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5251
public int METHOD_1 ( ) { if ( ( query ) == null ) return 0 ; if ( ( VAR_1 ) <= 0 ) VAR_1 = query . METHOD_2 ( ) . getConfig ( ) . METHOD_3 ( ) ; return VAR_1 ; },public int METHOD_1 ( ) { if ( ( query ) == null ) return 0 ; return query . METHOD_2 ( ) . getConfig ( ) . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",5252
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 < FLOAT_1 ) { this . VAR_1 = 0 ; return ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",5253
public void METHOD_1 ( ) { this . VAR_1 = false ; if ( this . VAR_2 ) { this . VAR_3 . METHOD_2 ( this . VAR_4 ) ; this . VAR_2 = false ; } },public void METHOD_1 ( ) { if ( this . VAR_2 ) { this . VAR_3 . METHOD_2 ( this . VAR_4 ) ; this . VAR_2 = false ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5254
public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; VAR_1 = ( ( TYPE_1 ) ( context ) ) ; },public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",5255
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5256
"public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; position = ( ( position ) > VAR_1 ) ? VAR_1 : position ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; position = ( ( position ) > VAR_1 ) ? VAR_1 : position ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5257
public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = buf . METHOD_2 ( ) ; VAR_2 = buf . METHOD_3 ( ) ; VAR_3 = buf . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 buf ) { VAR_1 = buf . METHOD_2 ( ) ; VAR_2 = buf . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5259
public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_1 ( ) ; } finally { VAR_2 = true ; VAR_1 = null ; } } },public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_1 ( ) ; } finally { VAR_1 = null ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5260
"private TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( 1 ) ; return new TYPE_1 ( VAR_2 . get ( TYPE_2 . METHOD_3 ( ) ) , VAR_2 . get ( TYPE_2 . METHOD_4 ( ) ) ) ; }","private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_2 . get ( TYPE_2 . METHOD_3 ( ) ) , ( ( VAR_2 . get ( TYPE_2 . METHOD_4 ( ) ) ) + 1 ) ) ; }","['Insert BinaryOperator', 'Move Invocation', 'Move Literal', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5261
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_4 = VAR_3 . getText ( ) . toString ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",5262
public void METHOD_1 ( java.lang.Long id ) { this . VAR_1 = id ; },public void METHOD_1 ( java.lang.Long id ) { this . id = id ; },['Update FieldWrite'],5264
"public void METHOD_1 ( int index , java.lang.String element ) { VAR_1 = true ; VAR_2 . METHOD_2 ( index ) ; VAR_1 = false ; }","public void METHOD_1 ( int index , java.lang.String element ) { VAR_2 . METHOD_2 ( index ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5265
private int METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { if ( VAR_2 ) { VAR_2 = false ; return CHAR_1 ; } ( VAR_3 ) -- ; METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ; },private int METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { ( VAR_3 ) -- ; METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",5266
private boolean METHOD_1 ( ) { VAR_1 = false ; return true ; },private boolean METHOD_1 ( ) { return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5268
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5270
public TYPE_1 METHOD_1 ( ) { return value = TYPE_1 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5271
"public TYPE_1 field ( java.lang.String name , java.io.File file ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) . field ( name , file ) ; this . VAR_1 = VAR_1 ; return VAR_1 ; }","public TYPE_1 field ( java.lang.String name , java.io.File file ) { return field ( name , file ) ; }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete VariableRead']",5272
public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_5 . METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_5 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5273
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = new java.util.HashSet < > ( ) ; VAR_4 . METHOD_3 ( METHOD_4 ( ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_4 . METHOD_3 ( METHOD_4 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5274
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete ConstructorCall']",5275
"public void init ( ) { if ( ( VAR_1 ) != null ) VAR_2 = VAR_3 . METHOD_1 ( VAR_4 class , VAR_1 ) ; VAR_5 = INT_1 ; }",public void init ( ) { VAR_5 = INT_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5276
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; if ( ( ! ( VAR_3 ) ) && ( ( VAR_4 . METHOD_3 ( ) ) != null ) ) { METHOD_4 ( VAR_4 ) ; VAR_3 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5278
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 , null ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , null ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5279
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_3 . getColor ( VAR_4 , VAR_1 ) ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_3 . getColor ( VAR_4 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5280
public void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5281
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_4 = TYPE_3 . METHOD_1 ( ) ; VAR_5 = VAR_1 . METHOD_2 ( ) ; }",public void init ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; VAR_4 = TYPE_3 . METHOD_1 ( ) ; VAR_5 = VAR_1 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5282
public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = ( VAR_3 ) * VAR_1 ; VAR_4 = ( VAR_5 ) * VAR_1 ; listener . METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( float VAR_1 ) { VAR_2 = ( VAR_3 ) * VAR_1 ; VAR_4 = ( VAR_5 ) * VAR_1 ; listener . METHOD_2 ( VAR_6 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5283
"public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { VAR_3 = height ; VAR_4 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int format , int VAR_2 , int height ) { METHOD_2 ( VAR_2 , height ) ; METHOD_3 ( ) ; }","['Move VariableRead', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",5284
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . title = STRING_1 ; VAR_2 . height = INT_1 ; VAR_3 = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5285
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . add ( METHOD_2 ( ) ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 . execute ( ) ; },private void METHOD_1 ( ) { VAR_2 . add ( METHOD_2 ( ) ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 . execute ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5286
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) VAR_2 = INT_1 ; else VAR_2 = INT_2 ; if ( ( VAR_3 ) < ( VAR_4 ) ) VAR_3 = ( ( VAR_3 ) * ( VAR_2 ) ) / INT_2 ; },public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) VAR_2 = INT_1 ; else VAR_2 = INT_2 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",5287
public void setValue ( java.lang.String value ) { this . value = value ; if ( ( VAR_1 ) > ( VAR_2 . length ( ) ) ) { VAR_1 = VAR_2 . length ( ) ; } },public void setValue ( java.lang.String value ) { this . value = value ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5288
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5289
"public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { if ( VAR_1 ) VAR_2 = VAR_3 ; if ( VAR_4 ) VAR_2 = VAR_5 ; VAR_6 = append ( VAR_6 , VAR_7 , field ) ; }","public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { VAR_6 = append ( VAR_6 , VAR_7 , field ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5290
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == 1 ) { METHOD_3 ( INT_1 ) ; } else { METHOD_3 ( 1 ) ; } VAR_1 = INT_2 ; ( VAR_2 ) ++ ; METHOD_4 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == 1 ) { METHOD_3 ( INT_1 ) ; } else { METHOD_3 ( 1 ) ; } VAR_1 = INT_2 ; ( VAR_2 ) ++ ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5291
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; METHOD_3 ( ) . METHOD_4 ( STRING_1 , false ) ; }",private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",5292
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = ( ( android.widget.LinearLayout ) ( METHOD_4 ( VAR_4 ) ) ) ; new TYPE_2 ( ) . execute ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( STRING_1 ) ; new TYPE_2 ( ) . execute ( STRING_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5294
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5295
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) . METHOD_4 ( ) , STRING_1 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5296
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( ) { new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Move ConstructorCall', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If']",5297
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5298
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; VAR_3 = new TYPE_3 ( getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5299
public void METHOD_1 ( ) { while ( true ) { ( VAR_1 ) ++ ; METHOD_2 ( ) ; METHOD_3 ( select ( ) ) ; } },public void METHOD_1 ( ) { while ( true ) { METHOD_2 ( ) ; METHOD_3 ( select ( ) ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",5300
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = false ; super . METHOD_1 ( VAR_2 ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5301
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = true ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5302
public static synchronized void METHOD_1 ( android.content.Context context ) { VAR_1 = new TYPE_1 ( context ) ; },public static synchronized void METHOD_1 ( android.content.Context context ) { new TYPE_1 ( context ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5303
public static java.util.Set < TYPE_1 < java.lang.Integer > > METHOD_1 ( ) { VAR_1 . startTime = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; return new java.util.HashSet < TYPE_1 < java.lang.Integer > > ( VAR_2 ) ; },public static java.util.Set < TYPE_1 < java.lang.Integer > > METHOD_1 ( ) { TYPE_3 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; return new java.util.HashSet < TYPE_1 < java.lang.Integer > > ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5305
private static final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_2 ) == null ? VAR_2 = new TYPE_1 ( VAR_1 ) : VAR_2 ; },private static final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_2 ) == null ? new TYPE_1 ( VAR_1 ) : VAR_2 ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5306
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; t . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( double VAR_1 ) { t . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5308
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_4 class ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5309
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5310
"public void METHOD_1 ( TYPE_1 VAR_1 ) { ( METHOD_2 ( ) . VAR_2 ) ++ ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; java.lang.String VAR_4 = VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( STRING_1 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . VAR_1 = VAR_1 ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; java.lang.String VAR_4 = VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( STRING_1 , VAR_4 ) ; }","['Insert Assignment', 'Update FieldWrite', 'Move FieldWrite', 'Insert VariableRead', 'Delete UnaryOperator']",5311
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } VAR_2 . open ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead']",5312
public void update ( ) { VAR_1 = true ; this . METHOD_1 ( ) ; super . update ( ) ; },public void update ( ) { this . METHOD_1 ( ) ; super . update ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5313
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { startTime = getTime ( ) ; VAR_1 = false ; } METHOD_2 ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5314
"public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { METHOD_2 ( ) ; VAR_3 = true ; METHOD_3 ( getIntent ( ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( getIntent ( ) ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5315
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5316
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; return VAR_3 ; },public TYPE_1 < TYPE_2 > METHOD_1 ( ) { VAR_1 = true ; return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5317
"public void METHOD_1 ( ) throws java.lang.Exception { source = null ; VAR_1 = new TYPE_1 ( source , new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = new TYPE_1 ( VAR_2 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",5319
"public void METHOD_1 ( int position , boolean VAR_1 ) { VAR_2 = position ; VAR_3 = VAR_1 ; }",public void METHOD_1 ( int position ) { VAR_2 = position ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5320
"public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Integer > ( ) ; VAR_2 = new java.util.HashMap < java.lang.Integer , java.lang.String > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_4 = 0 ; }","public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Integer > ( ) ; VAR_2 = new java.util.HashMap < java.lang.Integer , java.lang.String > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.Integer > ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5321
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; } else { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_3 ) ) ; VAR_4 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_3 ) ) ; VAR_4 = null ; },"['Move Invocation', 'Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5323
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; view . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { view . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5325
"private void METHOD_1 ( ) { VAR_1 = INT_1 * INT_2 ; VAR_2 = INT_3 * INT_2 ; VAR_3 . init ( METHOD_2 ( ) , STRING_1 , false ) ; }","private void METHOD_1 ( ) { VAR_1 = INT_1 * INT_2 ; VAR_3 . init ( METHOD_2 ( ) , STRING_1 , false ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",5326
public boolean METHOD_1 ( ) { boolean VAR_1 = VAR_2 ; VAR_2 = false ; return VAR_1 ; },public boolean METHOD_1 ( ) { return VAR_2 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",5327
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; TYPE_1 handle = this . handle ; if ( handle != null ) { VAR_2 . remove ( ) ; this . handle = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5328
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5329
"private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = 0 ; if ( ( VAR_4 ) >= INT_1 ) VAR_6 = INT_1 ; else VAR_6 = VAR_4 ; VAR_7 = false ; VAR_8 = false ; }","private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = 0 ; VAR_6 = INT_1 ; VAR_7 = false ; VAR_8 = false ; }","['Move Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5330
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 , null , this ) ; }","public void METHOD_1 ( ) { getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 , null , this ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5331
public void handle ( TYPE_1 event ) { TYPE_2 VAR_1 = TYPE_2 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; VAR_6 . METHOD_3 ( ) ; },public void handle ( TYPE_1 event ) { TYPE_2 . METHOD_1 ( ) . METHOD_2 ( ) ; VAR_6 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5332
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = ( VAR_3 ) ? ( ( byte ) ( INT_1 ) ) : ( ( byte ) ( 1 ) ) ; VAR_4 = false ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = ( VAR_3 ) ? ( ( byte ) ( INT_1 ) ) : ( ( byte ) ( 1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5333
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_1 == false ) && ( ( this . VAR_2 ) != null ) ) { this . VAR_2 . METHOD_2 ( ) ; this . VAR_2 = null ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5335
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , STRING_1 ) ; VAR_1 = false ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5336
"private void METHOD_1 ( ) throws java.io.IOException { java.io.File VAR_1 = new java.io.File ( VAR_2 ) ; java.io.File VAR_3 = new java.io.File ( VAR_4 ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ; VAR_2 = VAR_4 ; }","private void METHOD_1 ( ) throws java.io.IOException { java.io.File VAR_1 = new java.io.File ( VAR_2 ) ; java.io.File VAR_3 = new java.io.File ( VAR_4 ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5337
public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = METHOD_2 ( ) ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5338
private void METHOD_1 ( ) { if ( VAR_1 ) return ; VAR_1 = true ; if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( true ) ; } else { TYPE_2 . METHOD_5 ( ) ; } },private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( true ) ; } else { TYPE_2 . METHOD_5 ( ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5339
"public void METHOD_1 ( java.lang.Object ... VAR_1 ) { this . VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 . length , TYPE_2 [ ] . class ) ; }",public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) ; },"['Update FieldWrite', 'Insert VariableRead', 'Insert TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete Invocation']",5340
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete VariableRead', 'Delete Invocation']",5342
public void METHOD_1 ( android.view.View view ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) > INT_1 ) { VAR_1 = INT_1 ; } VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { ( VAR_1 ) ++ ; if ( ( VAR_1 ) > INT_1 ) { VAR_1 = 0 ; } METHOD_2 ( ) ; },"['Insert Literal', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5344
protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_1 . METHOD_2 ( ) ; return null ; },protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5345
public java.io.File METHOD_1 ( ) { if ( ( ( ( VAR_1 ) == null ) && ( ( filePath ) != null ) ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) VAR_1 = new java.io.File ( filePath ) ; return VAR_1 ; },public java.io.File METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5346
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = false ; VAR_5 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5347
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int VAR_2 , long id ) { VAR_3 = true ; VAR_4 = ( ( TYPE_2 ) ( VAR_5 . METHOD_2 ( ) ) ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int VAR_2 , long id ) { METHOD_3 ( ( ( TYPE_2 ) ( VAR_5 . METHOD_2 ( ) ) ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",5348
"private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . getInt ( VAR_6 , 0 ) ; this . VAR_7 = VAR_5 . getString ( VAR_8 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_5 . getInt ( VAR_6 , 0 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5349
public int METHOD_1 ( ) { state = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 ) ) ) + 1 ; return state ; },public int METHOD_1 ( ) { int result = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 ) ) ) + 1 ; return result ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",5350
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) == null ) { VAR_3 = new java.util.ArrayList < > ( ) ; } METHOD_3 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5351
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ; VAR_3 . METHOD_4 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 = TYPE_1 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; } },"['Insert Assignment', 'Update Invocation', 'Insert FieldWrite', 'Move Invocation', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5352
public void setEnabled ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; },public void setEnabled ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],5353
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_2 != ( VAR_3 ) ) { return ; } VAR_4 = TYPE_1 . METHOD_2 ( data ) ; VAR_5 = VAR_6 ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_2 != ( VAR_3 ) ) { return ; } VAR_4 = TYPE_1 . METHOD_2 ( data ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5354
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; try { ( ( TYPE_3 ) ( getContext ( ) ) ) . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; try { ( ( TYPE_3 ) ( getContext ( ) ) ) . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_3 ) { } },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5355
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5356
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = true ; TYPE_1 VAR_3 = new TYPE_1 ( this ) ; VAR_3 . METHOD_1 ( ) ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_3 = new TYPE_1 ( this ) ; VAR_3 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5358
"public void METHOD_1 ( int id ) { this . VAR_1 = id ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; TYPE_1 . METHOD_2 ( this , intent , id ) ; }","public void METHOD_1 ( int id ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; TYPE_1 . METHOD_2 ( this , intent , id ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5359
"public void METHOD_1 ( java.lang.String id , TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.HashMap < > ( ) ; } VAR_3 . put ( id , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String id , TYPE_1 VAR_1 ) { VAR_3 . put ( id , VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5360
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , VAR_2 ) ; state = VAR_3 ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5361
"public void add ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; if ( VAR_2 . METHOD_1 ( ) ) { ( VAR_4 ) ++ ; } }","public void add ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",5362
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5363
"public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) ; }",public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; },"['Update ConstructorCall', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall']",5365
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ( VAR_1 = STRING_1 ) ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( STRING_1 ) ; },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5366
public void METHOD_1 ( ) { VAR_1 = false ; if ( ! ( VAR_2 ) ) { VAR_3 = ( - 1 ) * ( VAR_4 ) ; METHOD_2 ( ) ; } else METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 = ( - 1 ) * ( VAR_4 ) ; METHOD_2 ( ) ; },"['Move Assignment', 'Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",5367
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( ) ; VAR_5 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5368
public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 . METHOD_2 ( ) ; this . VAR_3 = true ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5369
"public TYPE_1 METHOD_1 ( int [ ] [ ] VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_2 ; METHOD_2 ( 0 , true , VAR_2 ) ; return VAR_4 ; }","public TYPE_1 METHOD_1 ( int [ ] [ ] VAR_1 , int VAR_2 ) { METHOD_2 ( 0 , true , VAR_2 ) ; return VAR_4 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5370
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . VAR_1 = false ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) . VAR_1 = false ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5371
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 = null ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5374
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_2 ( false ) ; VAR_3 = null ; METHOD_3 ( ) . remove ( VAR_2 ) ; remove ( VAR_1 ) ; METHOD_4 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_2 ( false ) ; METHOD_3 ( ) . remove ( VAR_2 ) ; remove ( VAR_1 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5375
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = ( ( android.widget.LinearLayout ) ( METHOD_2 ( VAR_6 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5376
private void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( ) ) { METHOD_4 ( event . METHOD_5 ( ) . getId ( ) ) ; } },private void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( ) ) { METHOD_4 ( event . METHOD_5 ( ) . getId ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5377
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5378
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; METHOD_2 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5379
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Update TypeAccess']",5380
protected void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5381
"public void METHOD_1 ( int VAR_1 , TYPE_1 start , TYPE_1 end ) { VAR_2 = VAR_3 ; this . VAR_4 = start ; this . VAR_5 = end ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 start , TYPE_1 end ) { VAR_2 = VAR_3 ; this . VAR_4 = start ; this . VAR_5 = end ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5382
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5383
public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . start ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5384
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = VAR_3 ; METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_4 . length ) ; i ++ ) { VAR_5 [ i ] . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_4 . length ) ; i ++ ) { VAR_5 [ i ] . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5385
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",5386
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_4 . getInt ( VAR_3 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( VAR_3 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5387
public java.io.InputStream open ( java.lang.String VAR_1 ) throws java.io.IOException { VAR_2 = new TYPE_1 ( new TYPE_2 ( VAR_1 . METHOD_1 ( VAR_3 ) ) ) ; return VAR_2 ; },public java.io.InputStream open ( java.lang.String VAR_1 ) throws java.io.IOException { return new TYPE_2 ( VAR_1 . METHOD_1 ( VAR_3 ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead']",5388
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; try { VAR_3 . put ( VAR_4 . METHOD_2 ( ) . get ( 0 ) ) ; } catch ( TYPE_2 VAR_5 ) { TYPE_3 . METHOD_3 ( VAR_5 , STRING_1 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_3 . put ( VAR_4 . METHOD_2 ( ) . get ( 0 ) ) ; } catch ( TYPE_2 VAR_5 ) { TYPE_3 . METHOD_3 ( VAR_5 , STRING_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5389
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5390
public void METHOD_1 ( ) { ++ ( this . VAR_1 ) ; if ( ( VAR_1 ) >= ( VAR_2 ) ) { VAR_3 . x = - 1 ; VAR_3 . y = ( VAR_4 . height ) * INT_1 ; } },public void METHOD_1 ( ) { ++ ( this . VAR_1 ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",5391
"public void METHOD_1 ( byte [ ] data , TYPE_1 VAR_1 ) { byte [ ] VAR_2 = data ; new TYPE_2 ( ) . execute ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; }","public void METHOD_1 ( byte [ ] data , TYPE_1 VAR_1 ) { byte [ ] VAR_2 = data ; new TYPE_2 ( ) . execute ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5392
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5393
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 . i ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { VAR_2 = false ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5394
protected void METHOD_1 ( ) { VAR_1 = ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ; if ( VAR_1 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",5395
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; try { VAR_3 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_4 ) { TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; } }","public void METHOD_1 ( ) { VAR_1 = false ; try { VAR_3 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_4 ) { TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5396
public java.lang.Integer METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = 1 ; } return VAR_1 ; },public java.lang.Integer METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5397
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 = null ; METHOD_2 ( ) ; if ( ( VAR_3 ) == null ) { TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_4 ) . show ( ) ; } }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( VAR_3 ) == null ) { TYPE_1 . METHOD_3 ( this , STRING_1 , VAR_4 ) . show ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5398
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 . c = 0 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_2 ( true ) ; METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_2 ( true ) ; METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5399
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; VAR_5 = new TYPE_5 ( ) ; VAR_6 = new TYPE_6 ( ) ; },public void METHOD_1 ( ) { VAR_5 = new TYPE_5 ( ) ; VAR_6 = new TYPE_6 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5400
public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",5401
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 , STRING_1 ) ; } METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( this ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( this ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5402
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5403
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; VAR_2 = false ; METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( null ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = false ; METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( null ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5404
public void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_2 . setEnabled ( false ) ; VAR_3 = true ; VAR_4 . METHOD_2 ( INT_1 ) ; VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( true ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . setEnabled ( false ) ; VAR_4 . METHOD_2 ( INT_1 ) ; VAR_1 . setEnabled ( true ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5406
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5407
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5408
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . getName ( ) ) ) ) ; p = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 . getName ( ) ) ) ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5409
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 . METHOD_2 ( ( - ( VAR_4 ) ) ) ; },public void METHOD_1 ( ) { this . VAR_3 . METHOD_2 ( ( - ( VAR_4 ) ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5410
"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_3 . METHOD_2 ( ) ; return VAR_3 ; }",public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; return VAR_3 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5411
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . execute ( params ) ; },public void METHOD_1 ( ) { new TYPE_1 ( ) . execute ( params ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",5412
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { VAR_2 = false ; TYPE_3 . METHOD_2 ( getContext ( ) ) . METHOD_3 ( VAR_1 ) ; android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { TYPE_3 . METHOD_2 ( getContext ( ) ) . METHOD_3 ( VAR_1 ) ; android.content.Intent intent = new android.content.Intent ( getContext ( ) , VAR_3 class ) ; METHOD_4 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5413
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { VAR_1 = STRING_1 ; TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5414
"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_3 VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . info = new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_6 = VAR_7 ; return VAR_4 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_3 VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . info = new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5415
public void METHOD_1 ( int data ) { TYPE_1 n = new TYPE_1 ( data ) ; VAR_1 = VAR_2 ; VAR_2 = n ; ( size ) ++ ; },public void METHOD_1 ( int data ) { TYPE_1 n = new TYPE_1 ( data ) ; VAR_1 = VAR_2 ; VAR_2 = n ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5417
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5418
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( METHOD_6 ( ) ) ; VAR_2 . METHOD_5 ( METHOD_7 ( ) ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5419
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = null ; VAR_6 = false ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5420
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; VAR_4 = METHOD_2 ( ) . getInt ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5421
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . VAR_2 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . VAR_2 = ! ( ( ( TYPE_2 ) ( getActivity ( ) ) ) . VAR_2 ) ; }","['Insert UnaryOperator', 'Insert FieldRead', 'Insert Invocation', 'Insert TypeReference', 'Delete Literal']",5422
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5423
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 > ( this . METHOD_2 ( ) ) ) { VAR_1 = this . METHOD_2 ( ) ; this . METHOD_1 ( VAR_1 ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 > ( this . METHOD_2 ( ) ) ) { VAR_1 = this . METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; } else { this . VAR_1 = VAR_1 ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete Invocation']",5424
"private void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_2 . METHOD_2 ( false , VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( STRING_1 ) ; TYPE_2 VAR_5 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( this ) ; }","private void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_2 . METHOD_2 ( false , VAR_3 ) ; TYPE_2 VAR_5 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( this ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5425
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_2 : METHOD_3 ( true , VAR_3 ) ; VAR_1 . METHOD_4 ( ) ; VAR_4 = null ; return true ; default : return false ; } }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_2 : METHOD_3 ( true , VAR_3 ) ; VAR_1 . METHOD_4 ( ) ; return true ; default : return false ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5426
"public void METHOD_1 ( TYPE_1 VAR_1 , int error ) { if ( VAR_2 ) TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + error ) ) ; VAR_4 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_5 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int error ) { }","['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5427
public java.lang.Integer METHOD_1 ( ) { java.lang.Integer VAR_1 = VAR_2 ; if ( iterator . METHOD_2 ( ) ) { VAR_2 = iterator . METHOD_1 ( ) ; } else { VAR_2 = null ; } return VAR_1 ; },public java.lang.Integer METHOD_1 ( ) { return null ; },"['Move Literal', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",5428
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = new java.io.File ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = new java.io.File ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; METHOD_4 ( VAR_3 ) ; },"['Move FieldWrite', 'Insert ConstructorCall', 'Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5429
"public TYPE_1 METHOD_1 ( TYPE_2 context , int VAR_1 , int VAR_2 , TYPE_3 VAR_3 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . error = false ; return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 context , int VAR_1 , int VAR_2 , TYPE_3 VAR_3 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5430
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = true ; VAR_4 . METHOD_3 ( ) ; VAR_5 = - 1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_5 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5431
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int number , int VAR_2 ) { METHOD_1 ( VAR_3 , number , VAR_2 ) ; }","['Update Parameter', 'Move Invocation', 'Update VariableRead', 'Delete FieldWrite', 'Delete Assignment']",5432
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = false ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5433
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_6 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5434
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( ) ; VAR_2 = new java.util.HashMap < > ( ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5435
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 , new TYPE_1 ( ) ) ; METHOD_4 ( ) ; VAR_2 = true ; METHOD_5 ( ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 , new TYPE_1 ( ) ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5436
protected TYPE_1 < ? > METHOD_1 ( TYPE_2 < ? > VAR_1 ) throws TYPE_3 { VAR_2 = this . METHOD_2 ( VAR_3 class ) ; return super . METHOD_1 ( VAR_1 ) ; },protected TYPE_1 < ? > METHOD_1 ( TYPE_2 < ? > VAR_1 ) throws TYPE_3 { return super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5438
public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } VAR_1 = true ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5439
protected void METHOD_1 ( TYPE_1 state ) { super . METHOD_1 ( state ) ; VAR_1 = ( ( TYPE_2 < java.lang.Long > ) ( state . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = VAR_4 . getBoolean ( VAR_5 ) ; },protected void METHOD_1 ( TYPE_1 state ) { super . METHOD_1 ( state ) ; VAR_1 = ( ( TYPE_2 < java.lang.Long > ) ( state . METHOD_2 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5440
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5441
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( this ) ; VAR_3 = VAR_4 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5442
public void METHOD_1 ( boolean VAR_1 ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_1 ( VAR_1 ) ; } else { this . VAR_2 . set ( VAR_1 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5443
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5444
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; VAR_3 = new TYPE_3 ( getActivity ( ) ) ; VAR_4 = new TYPE_4 ( getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) ) ; VAR_3 = new TYPE_3 ( getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5445
public void METHOD_1 ( ) { init ( true ) ; VAR_1 = false ; },public void METHOD_1 ( ) { init ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5446
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",5447
"private void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_5 , VAR_6 ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_5 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5448
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . context = this ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . context = VAR_1 . getContext ( ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete ThisAccess']",5449
public void METHOD_1 ( TYPE_1 item ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( item ) ; if ( VAR_2 ) { VAR_3 . time = ( METHOD_2 ( ) ) + INT_1 ; } METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 item ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( item ) ; } },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Invocation']",5450
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_3 = new TYPE_4 ( VAR_2 , this ) ; METHOD_4 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( new TYPE_4 ( VAR_2 , this ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",5451
"public boolean METHOD_1 ( float x , float y , float VAR_1 , float VAR_2 ) { if ( ! ( VAR_3 ) ) { this . METHOD_1 ( x , y , VAR_1 , VAR_2 ) ; } VAR_3 = false ; return true ; }","public boolean METHOD_1 ( float x , float y , float VAR_1 , float VAR_2 ) { this . METHOD_1 ( x , y , VAR_1 , VAR_2 ) ; return true ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5452
public void METHOD_1 ( java.lang.String error ) { if ( ( this . errors ) == null ) { this . errors = new java.util.ArrayList < java.lang.String > ( ) ; } this . VAR_1 . add ( error ) ; },public void METHOD_1 ( java.lang.String error ) { this . VAR_1 . add ( error ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5454
"protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this , VAR_2 ) ; VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this , VAR_4 ) ; }","protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5455
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5456
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = true ; TYPE_1 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5457
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = VAR_3 . getColor ( this , VAR_4 ) ; VAR_5 = STRING_3 ; TYPE_3 . METHOD_3 ( this , VAR_6 , VAR_7 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 = VAR_3 . getColor ( this , VAR_4 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5459
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) java.lang.System.out.println ( STRING_1 ) ; else { VAR_2 . remove ( VAR_1 ) ; VAR_3 = null ; java.lang.System.out.println ( STRING_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; java.lang.System.out.println ( STRING_2 ) ; },"['Move Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5461
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 . getText ( ) . toString ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5462
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; this . VAR_4 = ( ( int ) ( VAR_3 . METHOD_3 ( ) ) ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5463
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; }",public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5464
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . execute ( ) ; this . METHOD_2 ( ) ; VAR_2 = FLOAT_1 ; VAR_3 = - FLOAT_2 ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 . execute ( ) ; this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",5465
public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 = true ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 x ) { temp = java.lang.Double . METHOD_2 ( VAR_1 . getText ( ) ) ; VAR_1 . setText ( STRING_1 ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5466
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( ( VAR_2 ) + ( VAR_3 ) ) ) ; VAR_4 = VAR_5 . open ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5467
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5468
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setValue ( VAR_1 ) ; double size = METHOD_2 ( VAR_1 ) ; double VAR_3 = TYPE_1 . METHOD_3 ( size ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; double size = METHOD_2 ( VAR_1 ) ; double VAR_3 = TYPE_1 . METHOD_3 ( size ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",5470
"public TYPE_1 METHOD_1 ( int index , int VAR_1 ) { VAR_2 = null ; VAR_3 = null ; return VAR_4 . METHOD_1 ( index , VAR_1 ) ; }","public TYPE_1 METHOD_1 ( int index , int VAR_1 ) { VAR_2 = null ; return VAR_4 . METHOD_1 ( index , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5471
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_2 == ( VAR_3 ) ) { VAR_4 . delete ( ) ; VAR_5 = true ; TYPE_2 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_6 ) . show ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_2 == ( VAR_3 ) ) { VAR_4 . delete ( ) ; TYPE_2 . METHOD_2 ( getActivity ( ) , STRING_1 , VAR_6 ) . show ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5473
"private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_4 , null , VAR_5 , VAR_6 , null , null , VAR_1 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_1 ( VAR_4 , null , VAR_5 , VAR_6 , null , null , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5474
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; VAR_2 = false ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5475
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . isEmpty ( VAR_1 ) ) ) { VAR_3 = VAR_1 ; } VAR_4 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_5 , null , this ) ; return true ; }","public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . isEmpty ( VAR_4 ) ) ) { VAR_3 = VAR_4 ; } VAR_4 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_5 , null , this ) ; return true ; }","['Insert TypeAccess', 'Insert FieldRead', 'Delete VariableRead', 'Delete VariableRead']",5476
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_4 . size ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",5478
public java.lang.Void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; return null ; },public java.lang.Void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5479
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = false ; VAR_3 . setText ( VAR_4 ) ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_3 . setText ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5480
"public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = false ; TYPE_3 . METHOD_3 ( METHOD_4 ( ) , STRING_3 , VAR_2 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 error ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5481
public void commit ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_1 ( ) ) ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; } VAR_3 . commit ( ) ; },public void commit ( ) { VAR_3 . commit ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5482
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; super . VAR_1 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { super . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5483
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_3 . open ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5484
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = - ( VAR_2 ) ; VAR_3 = ( VAR_2 ) > 0 ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = - ( VAR_2 ) ; VAR_3 = ! ( VAR_3 ) ; } },"['Insert UnaryOperator', 'Insert FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",5485
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; android.content.Intent i = TYPE_1 . METHOD_2 ( this , VAR_4 [ VAR_3 ] . METHOD_3 ( ) ) ; METHOD_4 ( i , VAR_5 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent i = TYPE_1 . METHOD_2 ( this , VAR_4 [ VAR_3 ] . METHOD_3 ( ) ) ; METHOD_4 ( i , VAR_5 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5486
"public void add ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_3 , VAR_1 ) ; VAR_4 = null ; }","public void add ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5487
"public void METHOD_1 ( java.lang.Integer VAR_1 , int VAR_2 , boolean VAR_3 ) { this . METHOD_2 ( VAR_1 ) ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = true ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = true ; }","['Insert Assignment', 'Update TypeReference', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete Invocation']",5488
"public void METHOD_1 ( int VAR_1 , int to ) { VAR_2 = to ; VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_1 , to ) ; VAR_5 = true ; METHOD_3 ( ) ; VAR_3 = - 1 ; VAR_2 = - 1 ; }","public boolean METHOD_1 ( int VAR_1 , int to ) { VAR_2 = to ; VAR_3 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_1 , to ) ; METHOD_3 ( ) ; VAR_3 = - 1 ; VAR_2 = - 1 ; return true ; }","['Update TypeReference', 'Insert Return', 'Move Literal', 'Delete FieldWrite', 'Delete Assignment']",5489
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void init ( TYPE_1 VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Update Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5490
"void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , false ) ; METHOD_5 ( VAR_3 ) ; }","void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_4 ( STRING_1 , false ) ; METHOD_5 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5491
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = true ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5492
public java.lang.String METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . update ( p ) ; VAR_4 = null ; return STRING_1 ; },public void METHOD_1 ( ) { TYPE_1 p = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . update ( p ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",5493
"public void METHOD_1 ( ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( null ) ; if ( ! ( getActivity ( ) . METHOD_3 ( ) ) ) { VAR_3 = null ; } }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( null ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5494
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = false ; if ( VAR_1 instanceof TYPE_3 ) { VAR_3 = true ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5495
public void METHOD_1 ( int i ) { VAR_1 = i ; if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } },public void METHOD_1 ( int i ) { VAR_1 = i ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5496
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5497
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = new TYPE_1 ( ) ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = 0 ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5498
public int METHOD_1 ( ) { c = VAR_1 ; VAR_2 = 0 ; while ( ( c ) != null ) { ( VAR_2 ) ++ ; c = VAR_3 ; } return VAR_2 ; },public int METHOD_1 ( ) { c = VAR_1 ; while ( ( c ) != null ) { ( VAR_2 ) ++ ; c = VAR_3 ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5499
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = new TYPE_1 ( ( ( VAR_3 . getTime ( ) ) + 1 ) ) ; } else { VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Insert Assignment', 'Move FieldWrite', 'Move VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5500
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; VAR_3 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5501
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 . METHOD_2 ( VAR_3 class . getName ( ) ) , this ) ; VAR_4 = ( ( TYPE_3 ) ( TYPE_4 . METHOD_3 ( VAR_5 class , this ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { super . METHOD_1 ( VAR_1 . METHOD_2 ( VAR_3 class . getName ( ) ) , this ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",5502
public boolean METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; result = true ; } VAR_3 = false ; VAR_4 = - 1 ; return result ; },public boolean METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; result = true ; } return result ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5503
public void METHOD_1 ( TYPE_1 VAR_1 ) { int key = VAR_1 . METHOD_2 ( ) ; if ( ( key == ( VAR_2 ) ) || ( key == ( VAR_3 ) ) ) { VAR_4 = 0 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5504
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_5 . setText ( VAR_6 ) ; VAR_7 = VAR_6 ; VAR_8 = VAR_9 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_5 . setText ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5507
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) return new TYPE_1 ( ) ; } } return VAR_1 ; },"['Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5508
public void handle ( TYPE_1 VAR_1 ) { VAR_2 . show ( ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 = true ; },public void handle ( TYPE_1 VAR_1 ) { VAR_2 . show ( ) ; VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5509
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5510
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_1 = ! ( VAR_1 ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",5511
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",5512
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; sum = 0.0 ; },public void METHOD_1 ( ) { sum = 0.0 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5513
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = true ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . x = VAR_1 ; this . y = VAR_2 ; VAR_3 = true ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete Invocation', 'Delete Invocation']",5514
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5515
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 = VAR_5 ; VAR_6 = 0L ; VAR_7 = false ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; VAR_4 = VAR_5 ; VAR_6 = 0L ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5516
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; this . status = VAR_3 ; VAR_4 = VAR_2 . METHOD_2 ( this : : METHOD_3 , this : : METHOD_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_4 = VAR_2 . METHOD_2 ( this : : METHOD_3 , this : : METHOD_4 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5517
"public static void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; java.lang.String [ ] params = new java.lang.String [ ] { VAR_1 } ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , params ) ; return ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; java.lang.String [ ] params = new java.lang.String [ ] { VAR_1 } ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , params ) ; return ; }","['Update FieldWrite', 'Insert ThisAccess', 'Delete Wra']",5518
public void METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5520
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( new TYPE_2 ( VAR_3 , VAR_4 ) ) ; }","public void METHOD_1 ( ) { VAR_2 = new TYPE_1 ( new TYPE_2 ( VAR_3 , VAR_4 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5521
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = 1 ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_2 ( ) ; VAR_5 = new TYPE_3 ( ) ; VAR_6 = new java.util.LinkedList < java.lang.String > ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5522
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 . main ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 . main ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5523
public void init ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; },public void init ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5524
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) != ( VAR_3 ) ) { this . VAR_2 = VAR_4 ; } return this ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5525
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; VAR_3 = VAR_4 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5526
public void METHOD_1 ( TYPE_1 VAR_1 ) { status = false ; METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5527
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; METHOD_3 ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5528
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; VAR_2 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5529
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",5530
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5531
public int METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) . sum ( ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) ; return VAR_1 ; },public int METHOD_1 ( ) { java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5532
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = false ; VAR_4 = null ; },public void METHOD_1 ( TYPE_1 event ) { this . VAR_1 = null ; this . VAR_2 = false ; this . VAR_4 = null ; },"['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",5533
"public void METHOD_1 ( final TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 . get ( VAR_1 . METHOD_2 ( ) ) ; TYPE_2 VAR_5 = METHOD_3 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_6 ) ; VAR_7 . show ( ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 VAR_5 = METHOD_3 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_6 ) ; VAR_7 . show ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5534
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 = null ; } VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",5535
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_3 = true ; METHOD_2 ( new TYPE_3 ( ) , VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( new TYPE_3 ( ) , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5536
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = true ; },private void METHOD_1 ( ) { VAR_2 = null ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5537
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return null ; } else { VAR_1 = VAR_1 . METHOD_2 ( ) ; ( count ) ++ ; return VAR_1 . METHOD_3 ( ) ; } },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return null ; } else { VAR_1 = VAR_1 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",5538
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( status ) == ( VAR_2 ) ) { status = VAR_3 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5539
public static void main ( java.lang.String [ ] args ) { VAR_1 = new TYPE_1 ( args [ 0 ] ) ; },public static void main ( java.lang.String [ ] args ) { new TYPE_1 ( args [ 0 ] ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5540
"TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = false ; VAR_4 = false ; TYPE_1 VAR_5 = METHOD_1 ( VAR_6 , VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) && ( VAR_4 ) ) return VAR_5 ; return null ; }","TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { return METHOD_1 ( VAR_6 , VAR_1 , VAR_2 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",5541
static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; } VAR_2 = true ; return VAR_1 ; },static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5542
public void METHOD_1 ( ) { try { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",5543
public void METHOD_1 ( float VAR_1 ) { if ( ! ( VAR_2 ) ) return ; VAR_3 = VAR_1 ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( float VAR_1 ) { if ( ! ( VAR_2 ) ) return ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5544
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5545
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5546
private TYPE_1 METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = INT_1 ; VAR_4 = 1 ; VAR_5 = 1 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = VAR_9 ; return c ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( ) ; VAR_1 = 0 ; VAR_2 = 0 ; VAR_4 = 1 ; VAR_5 = 1 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = VAR_9 ; return c ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5547
"public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { state = VAR_2 ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; VAR_5 . METHOD_5 ( VAR_4 , VAR_6 , url , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; VAR_5 . METHOD_5 ( VAR_4 , VAR_6 , url , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5548
public boolean remove ( TYPE_1 VAR_1 ) { if ( VAR_2 . remove ( VAR_1 ) ) { if ( super . remove ( VAR_1 ) ) { ( VAR_3 ) -- ; return true ; } else { return false ; } } return false ; },public boolean remove ( TYPE_1 VAR_1 ) { if ( VAR_2 . remove ( VAR_1 ) ) { super . remove ( VAR_1 ) ; } return false ; },"['Move If', 'Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Literal', 'Delete Return', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",5549
"public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { super . METHOD_1 ( view , url , VAR_1 ) ; VAR_2 = TYPE_3 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( STRING_1 ) ; }","public void METHOD_1 ( TYPE_1 view , java.lang.String url , TYPE_2 VAR_1 ) { super . METHOD_1 ( view , url , VAR_1 ) ; TYPE_4 . METHOD_3 ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5551
"public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( VAR_1 , ( ( ( STRING_1 + ( name . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 ) ) ) ; VAR_2 = true ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 name ) { TYPE_2 . METHOD_2 ( VAR_1 , ( ( ( STRING_1 + ( name . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 ) ) ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5552
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = null ; type = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5553
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = true ; METHOD_2 ( 1 ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( 1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5555
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; METHOD_2 ( intent ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5556
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; isEmpty = false ; } METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( true ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5557
"public boolean METHOD_1 ( android.view.View VAR_1 , android.view.View target , int VAR_2 ) { if ( ( VAR_2 & ( VAR_3 ) ) != 0 ) { VAR_4 = true ; VAR_5 = VAR_6 . METHOD_2 ( ) ; return true ; } return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , android.view.View target , int VAR_2 ) { return ( VAR_2 & ( VAR_3 ) ) != 0 ; }","['Move BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",5558
"public void METHOD_1 ( TYPE_1 event , TYPE_2 VAR_1 ) { if ( VAR_2 . equals ( VAR_3 ) ) { VAR_4 = VAR_5 ; } VAR_6 += 1 ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 event , TYPE_2 VAR_1 ) { VAR_6 += 1 ; METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5560
public void METHOD_1 ( java.util.List < TYPE_1 > c ) { this . TYPE_2 . METHOD_2 ( ) ; this . TYPE_2 . METHOD_3 ( c ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > TYPE_2 ) { this . TYPE_2 = TYPE_2 ; METHOD_4 ( ) ; },"['Update Parameter', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation']",5561
"public void y ( float value ) { VAR_1 = true ; this . VAR_2 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_3 ) ) ; }","public void y ( float value ) { this . VAR_2 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5562
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = new TYPE_3 ( this ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",5563
"public boolean METHOD_1 ( ) { if ( VAR_1 ) { key . METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } return ( VAR_3 . position ( key , value , VAR_4 ) ) == 0 ; }","public boolean METHOD_1 ( ) { return ( VAR_3 . position ( key , value , VAR_4 ) ) == 0 ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5564
public int METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { return - 1 ; } else { VAR_1 = true ; return VAR_2 ; } },public int METHOD_1 ( ) throws TYPE_1 { return VAR_2 ; },"['Move Return', 'Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete Return', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5565
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_2 ( listener ) ; },public void METHOD_1 ( TYPE_1 listener ) { this . listener = listener ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",5566
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.lang.StringBuilder ( VAR_3 . getString ( STRING_1 ) ) ; VAR_4 = VAR_3 . getBoolean ( STRING_2 ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.lang.StringBuilder ( VAR_3 . getString ( STRING_1 ) ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5567
public static TYPE_1 get ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; },public static TYPE_1 get ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( context ) ; } else { return VAR_1 ; } },"['Insert Block', 'Insert Return', 'Move Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5568
"public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 class , VAR_3 ) ; VAR_4 = TYPE_1 . METHOD_3 ( VAR_2 class , new TYPE_2 ( VAR_5 ) ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 class , VAR_3 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",5569
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; this . METHOD_2 ( intent , VAR_2 , VAR_3 ) ; VAR_4 = true ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; this . METHOD_2 ( intent , VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5571
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; if ( VAR_3 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 = false ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; if ( VAR_3 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5572
"public void METHOD_1 ( java.lang.String name , java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . add ( new TYPE_2 ( name , VAR_1 ) ) ; ( VAR_3 ) ++ ; }","public void METHOD_1 ( java.lang.String name , java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . add ( new TYPE_2 ( name , VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",5573
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5574
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5575
"public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . info ( ( STRING_1 + ( this ) ) ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 . METHOD_1 ( VAR_5 , VAR_1 ) ; VAR_6 = VAR_5 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 . info ( ( STRING_1 + ( this ) ) ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 . METHOD_1 ( VAR_5 , VAR_1 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5576
public java.lang.Long METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = 0L ; return VAR_1 ; },public java.lang.Long METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5577
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.println ( STRING_1 ) ; if ( ! ( VAR_1 ) ) { VAR_1 = true ; } else VAR_1 = false ; super . METHOD_1 ( event , x , y ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.println ( STRING_1 ) ; if ( ! ( VAR_1 ) ) { VAR_1 = true ; } super . METHOD_1 ( event , x , y ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",5580
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5581
public void delete ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } VAR_3 . delete ( VAR_4 ) ; },public void delete ( ) throws TYPE_1 { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5582
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; } else { VAR_2 = VAR_1 ; } VAR_3 = false ; VAR_4 = - 1 ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; } else { VAR_2 = VAR_1 ; } VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5583
"public static void main ( java.lang.String [ ] args ) { VAR_1 . listener = TYPE_1 . METHOD_1 ( new TYPE_2 ( VAR_2 ) , STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_1 ( new TYPE_3 ( VAR_2 ) , STRING_2 ) ; }",public static void main ( java.lang.String [ ] args ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5584
"public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , TYPE_2 VAR_2 , TYPE_3 state ) { VAR_3 = INT_1 ; VAR_4 = INT_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , TYPE_2 VAR_2 , TYPE_3 state ) { }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5586
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5588
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5589
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 = VAR_5 . getString ( VAR_3 , VAR_6 , null ) ; init ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( ) ; init ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",5590
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; VAR_5 = true ; VAR_6 = 0 ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; VAR_5 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5591
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { status = VAR_3 ; METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",5592
"public void start ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , STRING_1 ) ; VAR_3 = new TYPE_2 ( VAR_1 , STRING_2 ) ; METHOD_3 ( ) ; }",public void start ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5593
public void METHOD_1 ( ) { if ( this . VAR_1 ) { ( this . VAR_2 ) -- ; if ( ( VAR_2 ) <= 0 ) { ( VAR_3 ) -- ; this . VAR_4 = true ; this . METHOD_2 ( ) ; } } },public void METHOD_1 ( ) { if ( this . VAR_1 ) { ( this . VAR_2 ) -- ; if ( ( VAR_2 ) <= 0 ) { this . VAR_4 = true ; } } },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete Invocation']",5594
public void METHOD_1 ( ) { this . METHOD_2 ( ) ; VAR_1 = false ; this . add ( VAR_2 ) ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) ; this . add ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5595
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = INT_1 ; VAR_4 = VAR_5 ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = INT_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5596
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5597
void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = false ; VAR_5 = null ; } },void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5598
public void init ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; METHOD_1 ( ) ; },public void init ( ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5599
"void METHOD_1 ( double VAR_1 , double VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = METHOD_2 ( 0 , VAR_3 , VAR_4 ) ; VAR_6 = METHOD_2 ( 1 , VAR_3 , VAR_4 ) ; }","void METHOD_1 ( double VAR_1 , double VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5600
"public void height ( float value ) { VAR_1 = true ; VAR_2 = true ; this . VAR_3 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_4 ) ) ; }","public void height ( float value ) { this . VAR_3 . value ( value ) ; METHOD_1 ( new TYPE_1 ( this , VAR_4 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5602
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; VAR_3 = null ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = null ; VAR_7 = false ; VAR_8 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; VAR_3 = null ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = null ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5603
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5604
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; t = new java.lang.Thread ( VAR_2 ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( ) ; java.lang.Thread t = new java.lang.Thread ( VAR_2 ) ; VAR_3 . start ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5605
public void METHOD_1 ( ) { state = VAR_1 ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5608
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 = false ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } } catch ( java.lang.Exception VAR_4 ) { } },public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_3 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_4 ) { } },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",5609
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5610
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = STRING_1 ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5611
public static double TYPE_1 ( TYPE_2 VAR_1 ) { VAR_2 = new TYPE_3 ( ) ; VAR_3 = 0 ; TYPE_1 . METHOD_1 ( VAR_1 ) ; return VAR_3 ; },public static double TYPE_1 ( TYPE_2 VAR_1 ) { return 0 ; },"['Move Literal', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldRead']",5612
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( ( VAR_1 ) == null ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) VAR_1 = new TYPE_2 ( ) . show ( this ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; new TYPE_2 ( ) . show ( this ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If']",5614
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( 0 ) ; VAR_2 = TYPE_2 . METHOD_3 ( 0 , 1 , VAR_3 ) ; VAR_4 = TYPE_3 . METHOD_4 ( ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5616
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( this . VAR_3 ) == null ) this . VAR_3 = new TYPE_3 ( ) ; return this . VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( this . VAR_3 ) == null ) return false ; return this . VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Insert Return', 'Insert Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5617
protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5618
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; ( VAR_3 . count ) ++ ; if ( ( VAR_3 . count ) == ( VAR_4 ) ) { METHOD_3 ( ) ; VAR_3 . count = 0 ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5619
"public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; } else { VAR_3 . METHOD_2 ( VAR_6 , VAR_7 ) ; } }","public void METHOD_1 ( ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; } else { VAR_3 . METHOD_2 ( VAR_6 , VAR_7 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5620
public void init ( ) { VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = VAR_2 . get ( STRING_2 ) ; VAR_4 = VAR_5 . get ( STRING_3 ) ; VAR_1 . METHOD_1 ( VAR_6 ) ; VAR_3 . METHOD_1 ( VAR_7 ) ; },public void init ( ) { VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = VAR_2 . get ( STRING_2 ) ; VAR_1 . METHOD_1 ( VAR_6 ) ; VAR_3 . METHOD_1 ( VAR_7 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5621
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 = true ; VAR_6 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5622
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5623
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , this ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",5624
"public TYPE_1 METHOD_1 ( java.lang.String name ) { final TYPE_2 pattern = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( pattern . METHOD_4 ( name ) . METHOD_5 ( ) , STRING_2 ) ; VAR_1 = name ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String name ) { final TYPE_2 pattern = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( pattern . METHOD_4 ( name ) . METHOD_5 ( ) , STRING_2 ) ; return this ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5625
"public static void METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { VAR_2 = false ; if ( TYPE_2 . METHOD_2 ( context ) ) { TYPE_2 . METHOD_3 ( VAR_1 , context ) ; } else { TYPE_2 . METHOD_4 ( VAR_1 , context ) ; } }","public static void METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { if ( TYPE_2 . METHOD_2 ( context ) ) { TYPE_2 . METHOD_3 ( VAR_1 , context ) ; } else { TYPE_2 . METHOD_4 ( VAR_1 , context ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5626
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = STRING_1 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5627
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 ) ) ; },private void METHOD_1 ( ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5628
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent VAR_1 = new android.content.Intent ( ) ; METHOD_2 ( VAR_2 , VAR_1 ) ; VAR_3 = null ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent VAR_1 = new android.content.Intent ( ) ; METHOD_2 ( VAR_2 , VAR_1 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5629
public void handle ( TYPE_1 event ) { VAR_1 = TYPE_2 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; },public void handle ( TYPE_1 event ) { TYPE_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",5630
public void remove ( ) { if ( ! ( VAR_1 ) ) throw new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( VAR_3 . METHOD_2 ( ) ) ; VAR_1 = false ; },public void remove ( ) { if ( ! ( VAR_1 ) ) throw new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( VAR_3 . METHOD_2 ( ) ) ; VAR_3 = VAR_3 . METHOD_2 ( ) ; VAR_1 = false ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Invocation', 'Insert TypeAccess']",5631
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; this . VAR_1 = VAR_1 ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5632
"public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { this . VAR_2 = VAR_2 ; new TYPE_1 ( ) . execute ( VAR_1 ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { new TYPE_1 ( ) . execute ( VAR_1 ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5633
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . getString ( VAR_2 ) ; VAR_3 = METHOD_2 ( ) . getInt ( VAR_4 ) ; VAR_5 = METHOD_2 ( ) . getString ( VAR_6 ) ; VAR_7 = getActivity ( ) . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . getString ( VAR_2 ) ; VAR_3 = METHOD_2 ( ) . getInt ( VAR_4 ) ; VAR_5 = METHOD_2 ( ) . getString ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5634
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_4 = new android.content.Intent ( VAR_5 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5635
public void METHOD_1 ( ) { VAR_1 = false ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5636
static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 = false ; },static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5637
public void METHOD_1 ( int position ) { VAR_1 = position ; if ( ( VAR_2 ) != position ) { VAR_2 = position ; VAR_3 = false ; } else if ( ( VAR_2 ) == 0 ) VAR_3 = false ; },public void METHOD_1 ( int position ) { if ( ( VAR_2 ) != position ) { VAR_2 = position ; VAR_3 = false ; } else if ( ( ( VAR_2 ) == 0 ) && ( position == 0 ) ) VAR_3 = false ; },"['Insert BinaryOperator', 'Move BinaryOperator', 'Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete FieldWrite', 'Delete Assignment']",5638
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getIntent ( ) . METHOD_2 ( STRING_1 , false ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( this ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( this ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",5639
private static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },private static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5640
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) VAR_3 = new TYPE_2 ( VAR_4 , VAR_5 ) ; else VAR_3 = new TYPE_3 ( VAR_4 , VAR_5 ) ; VAR_6 . setEnabled ( false ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_6 . setEnabled ( false ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5641
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",5642
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , INT_1 , VAR_2 ) ; VAR_3 = new TYPE_1 ( STRING_2 , INT_2 , VAR_4 ) ; VAR_5 = new TYPE_1 ( STRING_3 , INT_3 , VAR_6 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5644
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; ( VAR_3 ) -- ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . contains ( VAR_1 ) ) { VAR_2 . remove ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",5646
"public void METHOD_1 ( TYPE_1 result , TYPE_2 VAR_1 ) { VAR_2 = result . METHOD_2 ( ) ; if ( ( result . METHOD_3 ( ) ) == ( VAR_3 ) ) { VAR_2 = true ; } METHOD_4 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 result , TYPE_2 VAR_1 ) { VAR_2 = result . METHOD_2 ( ) ; METHOD_4 ( VAR_2 ) ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5647
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; error = false ; VAR_5 = 0 ; errors . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; error = false ; errors . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5648
public final TYPE_1 METHOD_1 ( final TYPE_1 value ) { TYPE_2 . METHOD_2 ( value ) ; VAR_1 = value . METHOD_3 ( ) . METHOD_4 ( ) ; return value ; },public final TYPE_1 METHOD_1 ( final TYPE_1 value ) { TYPE_2 . METHOD_2 ( value ) ; return value ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5649
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . startsWith ( STRING_1 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = STRING_2 + VAR_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = STRING_2 + VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5650
"public final < TYPE_1 > TYPE_2 < TYPE_1 , TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( null ) ; } VAR_1 = TYPE_3 . METHOD_3 ( ) ; return METHOD_4 ( VAR_1 ) ; }","public final < TYPE_1 > TYPE_2 < TYPE_1 , TYPE_1 > METHOD_1 ( ) { return METHOD_4 ( VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5651
TYPE_1 METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; step = 0 ; VAR_3 = null ; return this ; },TYPE_1 METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; step = 0 ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5652
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5653
public void METHOD_1 ( java.lang.String title ) { VAR_1 = title ; VAR_2 . METHOD_1 ( title ) ; },public void METHOD_1 ( java.lang.String title ) { VAR_2 . METHOD_1 ( title ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5654
public void METHOD_1 ( int status ) { this . VAR_1 . set ( status ) ; },public void METHOD_1 ( int status ) { this . status = status ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",5655
"public static void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . init ( ) ; } VAR_3 . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( ) ) ; }",public static void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . init ( ) ; } ( VAR_2 . x ) ++ ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",5656
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this , VAR_2 ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . i ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5657
public TYPE_1 METHOD_1 ( ) { while ( METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_1 ) ) { return VAR_2 [ ( ( this . VAR_1 ) ++ ) ] ; } } throw new TYPE_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { while ( METHOD_2 ( ) ) { if ( METHOD_3 ( ( ( VAR_1 ) ++ ) ) ) { return VAR_2 [ this . VAR_1 ] ; } } throw new TYPE_2 ( ) ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Insert FieldRead', 'Move ThisAccess', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",5658
"private void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 , TYPE_2 type ) { if ( ( VAR_2 ) == null ) VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_3 . put ( VAR_1 , type ) ; }","private void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 , TYPE_2 type ) { VAR_3 . put ( VAR_1 , type ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5659
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_3 = true ; VAR_1 = VAR_2 . METHOD_3 ( VAR_4 ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_1 = VAR_2 . METHOD_3 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5660
public int remove ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_5 = null ; VAR_3 = null ; return VAR_6 ; },public int remove ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_5 = null ; VAR_3 = null ; return VAR_6 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5661
public void METHOD_1 ( TYPE_1 error ) { VAR_1 = null ; VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_1 ( error . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 error ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_1 ( error . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5662
"public void show ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , true ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_4 = false ; }","public void show ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 , true ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_4 = true ; }",['Update Literal'],5663
"private void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_1 , false ) ; VAR_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , true ) ; VAR_4 = true ; VAR_5 . setText ( VAR_6 ) ; METHOD_5 ( ) ; } }","private void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_1 , false ) ; VAR_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , true ) ; VAR_5 . setText ( VAR_6 ) ; METHOD_5 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5664
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; VAR_4 = METHOD_2 ( ) . getString ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5665
"private void METHOD_1 ( ) { try { java.io.InputStream VAR_1 = new java.io.FileInputStream ( VAR_2 ) ; VAR_3 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_4 , VAR_3 ) ; } catch ( TYPE_3 VAR_5 ) { VAR_5 . METHOD_3 ( ) ; } }","private void METHOD_1 ( ) { try { java.io.InputStream VAR_1 = new java.io.FileInputStream ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_4 , VAR_3 ) ; } catch ( TYPE_3 VAR_5 ) { VAR_5 . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5666
public void METHOD_1 ( TYPE_1 TYPE_2 ) { VAR_1 = TYPE_2 ; VAR_2 . METHOD_2 ( TYPE_2 : : METHOD_3 ) ; },public void METHOD_1 ( TYPE_1 TYPE_2 ) { VAR_2 . METHOD_2 ( TYPE_2 : : METHOD_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5667
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_4 ( ) ; } else if ( VAR_3 ) { VAR_3 = false ; METHOD_5 ( VAR_4 ) ; } }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",5668
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5669
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5670
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = context ; final java.lang.String VAR_2 = intent . METHOD_2 ( ) ; if ( VAR_3 . equals ( VAR_2 ) ) { METHOD_3 ( ) ; } super . METHOD_1 ( context , intent ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { final java.lang.String VAR_2 = intent . METHOD_2 ( ) ; if ( VAR_3 . equals ( VAR_2 ) ) { METHOD_3 ( ) ; } super . METHOD_1 ( context , intent ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5671
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; return VAR_5 . METHOD_4 ( VAR_3 . METHOD_1 ( ) , VAR_2 , METHOD_5 ( ) ) ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_3 ( VAR_1 ) ; return VAR_5 . METHOD_4 ( VAR_3 . METHOD_1 ( ) , VAR_2 , METHOD_5 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5672
protected void update ( ) { if ( VAR_1 ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) . METHOD_2 ( true ) ; } super . update ( ) ; },protected void update ( ) { super . update ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",5673
public boolean METHOD_1 ( ) { if ( ( VAR_1 . index ( ) ) >= 0 ) { return true ; } else { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; return false ; } },public boolean METHOD_1 ( ) { if ( ( VAR_1 . index ( ) ) >= 0 ) { return true ; } else { VAR_2 = VAR_3 ; return false ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5674
public synchronized void METHOD_1 ( final TYPE_1 state ) { VAR_1 . METHOD_2 ( state ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( final TYPE_1 state ) { VAR_1 = new TYPE_1 ( VAR_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldRead', 'Delete Wra', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",5675
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { context . METHOD_2 ( ) . setState ( VAR_1 ) ; context . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_2 . remove ( ) ; VAR_3 = 0 ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { context . METHOD_2 ( ) . setState ( VAR_1 ) ; context . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_2 . remove ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5676
"public java.lang.String METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return STRING_2 ; } ( this . VAR_3 ) ++ ; VAR_4 = true ; return METHOD_3 ( ) ; }","public java.lang.String METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return STRING_2 ; } ( this . VAR_3 ) ++ ; return METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5677
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; } },"['Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5678
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5679
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; } },private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5680
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_3 . get ( position ) ; VAR_4 = VAR_3 . get ( position ) ; this . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = VAR_3 . get ( position ) ; this . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5682
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 ) ) VAR_4 = 1 ; VAR_5 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 ) ) VAR_5 = true ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5683
private TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = VAR_2 ; VAR_2 = - 1 ; ( VAR_3 ) -- ; return VAR_4 . METHOD_2 ( ) ; },private TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; ( VAR_3 ) -- ; return VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5684
public void METHOD_1 ( TYPE_1 params ) throws java.lang.Exception { METHOD_2 ( ) ; this . VAR_1 = params ; this . method = new TYPE_2 ( this . VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 params ) throws java.lang.Exception { METHOD_2 ( ) ; this . VAR_1 = params ; METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5686
protected void METHOD_1 ( TYPE_1 event ) { VAR_1 = event ; METHOD_2 ( ) ; VAR_1 = null ; },protected void METHOD_1 ( TYPE_1 event ) { VAR_1 = event ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5687
private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; },private static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5688
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5689
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 . start ( ) ; VAR_4 = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5690
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5691
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5692
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = false ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5693
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 = true ; VAR_7 = INT_1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5694
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation']",5695
"public void METHOD_1 ( TYPE_1 VAR_1 ) { answer = METHOD_2 ( VAR_2 . toString ( ) ) ; VAR_3 . setText ( ( ( answer ) + STRING_1 ) ) ; VAR_2 . delete ( 0 , VAR_2 . length ( ) ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { answer = METHOD_2 ( VAR_2 . toString ( ) ) ; VAR_3 . setText ( ( ( answer ) + STRING_1 ) ) ; VAR_2 . delete ( 0 , VAR_2 . length ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5696
"public boolean METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( VAR_4 , null ) ; return true ; }","public boolean METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , null ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5697
public void METHOD_1 ( boolean b ) { if ( b ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } else { VAR_1 . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( ) ) ; } this . VAR_3 = b ; },public void METHOD_1 ( boolean b ) { if ( b ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } else { VAR_1 . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5698
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( VAR_1 ) ; VAR_1 = null ; VAR_2 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( VAR_1 ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5699
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = null ; VAR_5 = VAR_1 ; METHOD_3 ( VAR_1 , false ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 = VAR_1 ; METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal']",5700
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; VAR_3 = true ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5701
public void METHOD_1 ( TYPE_1 VAR_1 ) { source = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ! ( VAR_2 ) ) VAR_3 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5702
public static void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 = null ; } if ( VAR_3 ) { VAR_3 = false ; TYPE_1 . METHOD_2 ( ) ; } },public static void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 = null ; } },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",5703
void METHOD_1 ( ) { VAR_1 . x = ( - ( VAR_2 ) ) + ( VAR_3 ) ; if ( VAR_4 ) state = VAR_5 ; VAR_6 = false ; },void METHOD_1 ( ) { VAR_1 . x = - ( VAR_2 ) ; if ( VAR_4 ) state = VAR_5 ; VAR_6 = false ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",5705
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; message = TYPE_2 . METHOD_2 ( ) ; VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . put ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; message = TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5706
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 . getBoolean ( VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5707
"public synchronized void METHOD_1 ( java.lang.String token , int VAR_1 , java.lang.String VAR_2 ) { this . token = token ; this . VAR_1 = VAR_1 ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; }","public synchronized void METHOD_1 ( java.lang.String token , int VAR_1 ) { this . token = token ; this . VAR_1 = VAR_1 ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5708
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . status ( VAR_3 ) . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) . build ( ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 . status ( VAR_3 ) . build ( ) ; },"['Update Invocation', 'Move Invocation', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Invocation']",5709
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( VAR_1 ) ; } VAR_2 = null ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5710
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , this ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , this ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",5711
"public void METHOD_1 ( android.view.View view ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( context , VAR_3 ) ; VAR_1 = true ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = true ; return ; } METHOD_3 ( ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_2 . METHOD_2 ( context , VAR_3 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Invocation']",5713
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; ( this . VAR_3 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",5714
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",5715
public void update ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; data = VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; },public void update ( TYPE_1 VAR_1 ) { data = VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5716
public static void METHOD_1 ( float VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },public static void METHOD_1 ( float VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5717
"public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 < java.lang.String , TYPE_3 > ( ) ; } return VAR_1 ; }",public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5718
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_3 = 0 ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5719
public boolean METHOD_1 ( TYPE_1 item ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; return true ; },public boolean METHOD_1 ( TYPE_1 item ) { VAR_2 . METHOD_2 ( ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5721
"public TYPE_1 replace ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { node = VAR_1 ; } else { VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) . set ( index , VAR_1 ) ; } return this ; }","public TYPE_1 replace ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) . set ( index , VAR_1 ) ; return this ; }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5722
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; open = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5723
"public void METHOD_1 ( TYPE_1 VAR_1 ) { intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; return ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",5724
public void METHOD_1 ( ) { VAR_1 = VAR_2 . get ( TYPE_1 . METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5726
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5728
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_3 , ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_3 , ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5730
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return ; } if ( ! ( VAR_1 ) ) { VAR_2 = true ; ( VAR_3 ) ++ ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return ; } METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",5731
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5732
protected TYPE_1 METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( getContext ( ) ) ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( getContext ( ) ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",5733
"public void METHOD_1 ( TYPE_1 < java.lang.String , java.lang.Object > VAR_1 ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = VAR_1 ; } METHOD_2 ( this . VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 < java.lang.String , java.lang.Object > VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Move VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead']",5734
"public int METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 - ( TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) . METHOD_3 ( ) ) ; return TYPE_3 . METHOD_4 ( VAR_2 , 0 ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = INT_1 - ( TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) . METHOD_3 ( ) ) ; if ( ( VAR_2 ) <= 0 ) { VAR_2 = 0 ; } return VAR_2 ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert FieldRead', 'Move Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5736
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5738
"public void update ( TYPE_1 VAR_1 , int VAR_2 ) throws TYPE_2 { VAR_3 = VAR_4 . METHOD_1 ( ) ; }","public void update ( TYPE_1 VAR_1 , int VAR_2 ) throws TYPE_2 { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5739
"public int METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { this . VAR_3 . set ( VAR_1 ) ; return VAR_1 . METHOD_1 ( VAR_2 , VAR_4 ) ; }","public int METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { this . VAR_1 = VAR_1 ; return VAR_1 . METHOD_1 ( VAR_2 , VAR_4 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",5740
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( STRING_1 ) ; VAR_3 = METHOD_2 ( ) . getInt ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getInt ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5741
public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 . METHOD_2 ( ) ) - ( startTime ) ) + ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 . METHOD_2 ( ) ) - ( startTime ) ) + ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5742
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = null ; METHOD_2 ( true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal']",5743
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },public void METHOD_1 ( ) { VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5744
"public void METHOD_1 ( java.lang.String error ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_2 . METHOD_1 ( error , VAR_3 ) ; } else { VAR_4 = VAR_5 ; this . VAR_6 = error ; } }","public void METHOD_1 ( java.lang.String error ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_2 . METHOD_1 ( error , VAR_3 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",5745
public TYPE_1 METHOD_1 ( ) { if ( ( end ) == null ) { return null ; } TYPE_1 element = VAR_1 . value ; end = VAR_2 ; if ( ( end ) == null ) { VAR_3 = null ; } return element ; },public TYPE_1 METHOD_1 ( ) { if ( ( end ) == null ) { return null ; } TYPE_1 element = VAR_1 . value ; end = VAR_2 ; return element ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5747
public abstract void METHOD_1 ( java.lang.String VAR_1 ) ;,public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete Wra']",5748
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) ; VAR_4 = VAR_1 . METHOD_2 ( VAR_5 class ) ; },public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = this . VAR_1 . METHOD_2 ( VAR_3 class ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert FieldWrite', 'Insert Invocation', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert FieldRead', 'Move TypeAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5749
public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = INT_1 ; METHOD_2 ( ) ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = INT_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5750
"public static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; }",public static TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( context ) ; } else { return VAR_1 ; } },"['Insert Block', 'Insert Return', 'Move Return', 'Move ConstructorCall', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",5751
public void METHOD_1 ( double value ) { VAR_1 = TYPE_1 . METHOD_2 ( value ) ; },public void METHOD_1 ( double value ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5752
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5753
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; VAR_3 = false ; VAR_4 = false ; VAR_5 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5754
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = VAR_6 . getBoolean ( STRING_1 , true ) ; VAR_7 = VAR_6 . getBoolean ( STRING_2 , true ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",5755
private void METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = VAR_5 . METHOD_4 ( ) ; },private void METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5756
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , 0 ) ; VAR_4 = VAR_5 . getInt ( VAR_6 , VAR_7 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , 0 ) ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5757
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; METHOD_2 ( ) ; VAR_7 = true ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5758
"private void METHOD_1 ( ) { endTime = TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , startTime , endTime ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; }","private void METHOD_1 ( ) { endTime = TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , startTime , endTime ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; startTime = endTime ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead']",5759
"public void handle ( TYPE_1 VAR_1 , TYPE_2 response ) { java.lang.String VAR_2 = STRING_1 + VAR_1 ; VAR_3 = true ; response . METHOD_1 ( VAR_2 ) ; response . METHOD_2 ( STRING_2 ) ; }","public void handle ( TYPE_1 VAR_1 , TYPE_2 response ) { java.lang.String VAR_2 = STRING_1 + VAR_1 ; response . METHOD_1 ( VAR_2 ) ; response . METHOD_2 ( STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5760
"public void init ( TYPE_1 TYPE_2 , TYPE_3 VAR_1 ) { this . TYPE_2 = TYPE_2 ; VAR_2 = new TYPE_4 ( VAR_1 ) ; METHOD_1 ( TYPE_2 ) ; }",public void init ( TYPE_1 TYPE_2 ) { this . TYPE_2 = TYPE_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",5761
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = 0.0 ; try { VAR_3 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_4 ) { VAR_4 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; try { VAR_3 . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_4 ) { VAR_4 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5762
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",5763
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; this . VAR_3 = null ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5764
public void METHOD_1 ( int position ) { VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( 0 ) ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; },public void METHOD_1 ( int position ) { VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",5765
public void METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",5766
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; } else { VAR_2 . setText ( VAR_4 ) ; } VAR_5 = true ; METHOD_2 ( true ) ; },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; } else { VAR_2 . setText ( VAR_4 ) ; } METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5767
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",5768
private boolean METHOD_1 ( ) { java.io.File VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; this . VAR_3 = VAR_1 . METHOD_4 ( ) ; return VAR_1 . METHOD_4 ( ) ; },private boolean METHOD_1 ( ) { java.io.File VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; return VAR_1 . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5769
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . type = VAR_1 ; this . VAR_2 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . type = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5770
"public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 = false ) { new TYPE_1 ( getActivity ( ) , VAR_3 , VAR_4 , VAR_5 . METHOD_2 ( position ) ) . execute ( ) ; VAR_2 = true ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( getActivity ( ) , VAR_3 , VAR_4 , VAR_5 . METHOD_2 ( position ) ) . execute ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5771
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( this : : METHOD_3 ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( this : : METHOD_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5772
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5773
public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } VAR_2 = null ; },public synchronized void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5774
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; position = VAR_3 ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5775
"public void METHOD_1 ( TYPE_1 node ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 ; VAR_4 = true ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 node ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5776
public TYPE_1 METHOD_1 ( TYPE_2 [ ] VAR_1 ) { METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 [ ] VAR_1 ) { params = new java.util.ArrayList ( ) ; METHOD_2 ( VAR_1 ) ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",5777
public TYPE_1 < TYPE_2 > remove ( TYPE_2 value ) { METHOD_1 ( value ) ; if ( this . VAR_1 . equals ( value ) ) { return VAR_2 ; } else { this . VAR_2 = VAR_3 . remove ( value ) ; return this ; } },public TYPE_1 < TYPE_2 > remove ( TYPE_2 value ) { METHOD_1 ( value ) ; if ( VAR_1 . equals ( this . value ) ) { return VAR_2 ; } return VAR_3 . remove ( value ) . add ( value ) ; },"['Insert Return', 'Insert Invocation', 'Insert TypeAccess', 'Update FieldRead', 'Move Invocation', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete Return', 'Delete Block']",5778
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 ) { METHOD_3 ( METHOD_4 ( ) , VAR_3 ) ; VAR_2 = false ; } VAR_4 = null ; VAR_5 . METHOD_5 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 ) { METHOD_3 ( METHOD_4 ( ) , VAR_3 ) ; VAR_2 = false ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5779
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( FLOAT_1 ) ) ; VAR_2 = METHOD_4 ( ) ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( FLOAT_1 ) ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5780
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_3 . name = VAR_4 . getText ( ) . toString ( ) ; VAR_2 . METHOD_3 ( VAR_3 . id , VAR_5 ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( VAR_4 . getText ( ) . toString ( ) , VAR_5 ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",5781
private void init ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_1 ( VAR_6 ) ) ) ; },private void init ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_1 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5782
private void METHOD_1 ( ) { VAR_1 += 1 ; if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; } else { ( VAR_1 ) -- ; } },private void METHOD_1 ( ) { VAR_1 += 1 ; if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block']",5783
public void update ( ) { this . VAR_1 = null ; this . VAR_2 = 0 ; this . VAR_3 = new TYPE_1 ( ) ; this . VAR_1 = METHOD_1 ( ) ; },public void update ( ) { this . VAR_1 = null ; this . VAR_3 = new TYPE_1 ( ) ; this . VAR_1 = METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5784
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . set ( VAR_4 , VAR_1 ) ; VAR_3 . set ( VAR_5 , VAR_2 ) ; VAR_6 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . set ( VAR_4 , VAR_1 ) ; VAR_3 . set ( VAR_5 , VAR_2 ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5785
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 = false ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5786
public void METHOD_1 ( ) { VAR_1 = 1.0 ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5788
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; java.lang.String url = getString ( VAR_4 ) ; METHOD_3 ( url ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; java.lang.String url = getString ( VAR_4 ) ; METHOD_3 ( url ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5789
"public void METHOD_1 ( final TYPE_1 < ? super java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 , true ) ; if ( ( VAR_2 ) != null ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_2 = null ; } }","public void METHOD_1 ( final TYPE_1 < ? super java.lang.String > VAR_1 ) { METHOD_2 ( VAR_1 , true ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5790
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5791
public void METHOD_1 ( ) { count = 0 ; VAR_1 = false ; VAR_2 . x = VAR_3 ; type = 0 ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; VAR_8 = null ; },public void METHOD_1 ( ) { count = 0 ; VAR_1 = false ; VAR_2 . x = VAR_3 ; type = 0 ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5792
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = java.util.Calendar.getInstance ( ) ; METHOD_3 ( VAR_1 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5793
public void end ( ) { METHOD_1 ( false ) ; VAR_1 = true ; },public void end ( ) { METHOD_1 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5794
public java.lang.String METHOD_1 ( ) { TYPE_1 c = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . update ( c ) ; VAR_4 = null ; return STRING_1 ; },public void METHOD_1 ( ) { TYPE_1 c = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . update ( c ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",5795
public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = this . VAR_3 ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_7 ; VAR_8 = new java.util.Date ( ) ; return VAR_1 ; },public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = this . VAR_3 ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_7 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5796
public java.lang.String METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = true ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { VAR_1 = true ; return STRING_1 ; },"['Move Literal', 'Delete Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5797
public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_3 = 0 ; VAR_4 = false ; ( VAR_5 ) -- ; return ( VAR_5 ) < 1 ; },public java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_3 = 0 ; VAR_4 = false ; return ( VAR_5 ) < 1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5798
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 . METHOD_1 ( ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5799
private void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( ( this . VAR_2 . METHOD_2 ( ) ) != ( VAR_3 ) ) { this . VAR_2 . METHOD_3 ( VAR_4 ) ; this . VAR_5 = VAR_1 ; } },private void METHOD_1 ( ) { if ( ( this . VAR_2 . METHOD_2 ( ) ) != ( VAR_3 ) ) { this . VAR_2 . METHOD_3 ( VAR_4 ) ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5800
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_2 . equals ( STRING_1 ) ) ) { VAR_1 = STRING_2 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5801
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { if ( ! ( this . VAR_3 . contains ( VAR_1 ) ) ) { VAR_1 . METHOD_2 ( false ) ; this . VAR_4 . remove ( VAR_1 ) ; } } },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_2 ( false ) ; } this . VAR_2 = new java.util.HashSet < TYPE_1 > ( ) ; },"['Insert Assignment', 'Move Invocation', 'Insert FieldWrite', 'Insert ConstructorCall', 'Move ThisAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",5802
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 . info ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( VAR_3 . info ) ; VAR_2 = null ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",5803
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_3 = true ; VAR_4 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; VAR_4 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5804
"public void METHOD_1 ( long VAR_1 , long VAR_2 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; this . VAR_2 = METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( long VAR_1 , long VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Move VariableRead', 'Move VariableRead', 'Delete Invocation', 'Delete Invocation']",5805
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { this . VAR_2 = VAR_2 ; TYPE_4 VAR_3 = new TYPE_4 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_4 VAR_3 = new TYPE_4 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; }","['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",5806
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String source , TYPE_3 VAR_4 , java.lang.Object VAR_5 ) { this . VAR_5 = VAR_5 ; METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , source , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String source , TYPE_3 VAR_4 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , source , VAR_4 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5807
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = super . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) ) . build ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { super . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) ) . build ( ) ; } return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5808
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . setText ( ( VAR_1 + STRING_1 ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setText ( ( VAR_1 + STRING_1 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5809
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 = false ; VAR_4 = false ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5810
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . getText ( ) . isEmpty ( ) ) ) { VAR_3 = VAR_2 . getText ( ) ; } else { VAR_3 = VAR_4 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_2 . getText ( ) ; },"['Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5811
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_1 . METHOD_3 ( this ) ; if ( ! ( VAR_1 . METHOD_4 ( ) ) ) { VAR_1 . METHOD_5 ( ) ; } },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; if ( ! ( TYPE_1 . METHOD_3 ( this ) . METHOD_4 ( ) ) ) { TYPE_1 . METHOD_3 ( this ) . METHOD_5 ( ) ; } },"['Insert Invocation', 'Move Invocation', 'Insert TypeAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",5812
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5813
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5814
public void METHOD_1 ( ) { VAR_1 = false ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = this . VAR_5 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = this . VAR_5 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5815
public static TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 = TYPE_2 . METHOD_3 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5816
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_1 . METHOD_2 ( ) ) && ( ( VAR_2 ) == null ) ) { VAR_2 = new TYPE_2 ( this , VAR_1 ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5817
public void METHOD_1 ( ) throws TYPE_1 { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; } },public void METHOD_1 ( ) throws TYPE_1 { VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5818
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = STRING_1 ; VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5819
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5820
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5821
private void METHOD_1 ( TYPE_1 p ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = VAR_2 . METHOD_3 ( ) ; VAR_3 = VAR_4 ; VAR_2 . METHOD_4 ( p ) ; TYPE_2 . METHOD_5 ( VAR_5 . toString ( ) ) ; },private void METHOD_1 ( TYPE_1 p ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( p ) ; TYPE_2 . METHOD_5 ( VAR_5 . toString ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5822
public void add ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; ( VAR_3 ) ++ ; },public void add ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5823
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = 0 ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5824
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; } VAR_4 = null ; VAR_2 = false ; super . METHOD_1 ( ) ; }","protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = null ; } super . METHOD_1 ( ) ; }","['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5825
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = true ; this . VAR_4 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_3 = true ; this . VAR_4 = TYPE_1 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5826
"private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( null ) ; VAR_3 = new TYPE_2 ( this , VAR_4 ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; }","private void METHOD_1 ( ) { VAR_3 = new TYPE_2 ( this , VAR_4 ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",5828
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; x = VAR_1 . METHOD_2 ( ) ; y = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5829
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . add ( ( ( STRING_1 + VAR_1 ) + STRING_1 ) ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",5830
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5831
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 = new TYPE_3 ( getActivity ( ) , data ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( data ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { }","['Delete FieldWrite', 'Delete Invocation', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",5832
protected java.lang.Object METHOD_1 ( java.lang.Object [ ] VAR_1 ) { try { VAR_2 = METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return null ; },protected java.lang.Object METHOD_1 ( java.lang.Object [ ] VAR_1 ) { try { METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return null ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5833
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5834
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5835
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = true ; VAR_4 . METHOD_2 ( ) ; VAR_5 = new TYPE_1 ( INT_1 , INT_2 , INT_3 , INT_4 ) ; }",public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = true ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5836
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; this . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; METHOD_4 ( ) ; return this ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; this . METHOD_3 ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5837
public void step ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( null ) ; VAR_1 . METHOD_1 ( this ) ; if ( ( TYPE_3 ) != null ) VAR_2 . step ( TYPE_2 ) ; VAR_3 = TYPE_2 ; TYPE_2 = VAR_1 ; },public void step ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( null ) ; VAR_1 . METHOD_1 ( this ) ; if ( ( TYPE_3 ) != null ) VAR_2 . step ( TYPE_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5838
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ 1 ] ; VAR_3 = 1 ; VAR_4 = 0 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 0 ] [ 1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5839
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5840
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( index ) ; VAR_2 = ( VAR_1 ) != 0 ; if ( ! ( VAR_2 ) ) { throw new TYPE_1 ( ( ( STRING_1 + ( index ) ) + STRING_2 ) ) ; } },private void METHOD_1 ( ) { VAR_2 = METHOD_2 ( index ) ; if ( ! ( VAR_2 ) ) { throw new TYPE_1 ( ( ( STRING_1 + ( index ) ) + STRING_2 ) ) ; } },"['Move FieldWrite', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",5841
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = STRING_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5842
"public void METHOD_1 ( float x , float y ) { VAR_1 = false ; VAR_2 = false ; this . VAR_3 = x ; this . VAR_4 = y ; }","public void METHOD_1 ( float x , float y ) { VAR_1 = false ; this . VAR_3 = x ; this . VAR_4 = y ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5843
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 ) ) { try { VAR_2 = true ; METHOD_2 ( ) ; } finally { VAR_3 . METHOD_3 ( buffer ) ; } } } },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 ) ) { try { VAR_2 = true ; METHOD_2 ( ) ; } finally { VAR_3 . METHOD_3 ( buffer ) ; buffer = null ; } } } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",5844
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5845
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . setText ( METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = position ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . setText ( METHOD_3 ( VAR_2 ) ) ; METHOD_4 ( ) ; },"['Insert FieldRead', 'Delete VariableRead']",5846
public void METHOD_1 ( java.util.Calendar date ) { VAR_1 = date ; TYPE_1 . METHOD_2 ( date ) ; TYPE_2 . METHOD_2 ( date ) ; },public void METHOD_1 ( java.util.Calendar date ) { TYPE_1 . METHOD_2 ( date ) ; TYPE_2 . METHOD_2 ( date ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5847
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = false ; VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5850
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) == 1 ) { METHOD_3 ( ) ; VAR_3 = 0 ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5851
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5852
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5854
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ! ( VAR_2 ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",5855
"protected java.util.List < java.lang.String > METHOD_1 ( java.lang.Object ... params ) { TYPE_1 . METHOD_2 ( context , VAR_1 ) ; return VAR_1 ; }",protected java.util.List < java.lang.String > METHOD_1 ( java.lang.Object ... params ) { VAR_1 = TYPE_1 . METHOD_2 ( context ) ; return VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess']",5856
"private void METHOD_1 ( ) { VAR_1 = VAR_2 . getColor ( getContext ( ) , VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( getContext ( ) , VAR_5 ) ) ; }","private void METHOD_1 ( ) { VAR_4 . METHOD_2 ( VAR_2 . getColor ( getContext ( ) , VAR_3 ) ) ; VAR_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( getContext ( ) , VAR_5 ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",5857
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this . getActivity ( ) ) ; VAR_3 = new TYPE_3 ( this . getActivity ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this . getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",5858
private void METHOD_1 ( ) { VAR_1 = ( ( VAR_2 ) * INT_1 ) * INT_2 ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( VAR_2 ) * INT_1 ) * INT_2 ; VAR_3 = new TYPE_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5859
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_2 = 0 ; VAR_3 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5860
public boolean METHOD_1 ( int VAR_1 ) { this . VAR_2 = false ; return false ; },public boolean METHOD_1 ( int VAR_1 ) { return false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5861
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_2 ; return this ; },"['Insert FieldRead', 'Delete VariableRead']",5862
public void handle ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_3 = true ; },public void handle ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5863
"public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) , false ) ; }","public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5864
public void METHOD_1 ( ) { temp = METHOD_2 ( ) ; METHOD_3 ( true ) ; VAR_1 . setEnabled ( true ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . setEnabled ( false ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",5866
public void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( VAR_4 . format ( VAR_5 . getTime ( ) ) ) ; VAR_6 . METHOD_2 ( ) ; },public void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_3 . setText ( VAR_4 . format ( VAR_5 . getTime ( ) ) ) ; VAR_6 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5867
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this , VAR_4 ) ; VAR_5 . start ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5868
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5869
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.Collections.sort ( VAR_1 , new TYPE_2 ( ) ) ; VAR_2 = VAR_1 ; VAR_3 = true ; VAR_4 . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.Collections.sort ( VAR_1 , new TYPE_2 ( ) ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5870
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5871
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; if ( VAR_2 . isEmpty ( ) ) { min = null ; return ; } if ( VAR_1 == ( min ) ) { min = VAR_3 . min ( VAR_4 ) ; } },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; if ( VAR_2 . isEmpty ( ) ) { return ; } if ( VAR_1 == ( min ) ) { min = VAR_3 . min ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5872
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = true ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5873
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; if ( null != ( VAR_4 ) ) { VAR_5 . METHOD_3 ( VAR_6 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",5874
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = true ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5875
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",5876
"public void METHOD_1 ( ) { size ( INT_1 , INT_2 ) ; METHOD_2 ( 0 ) ; METHOD_3 ( INT_3 ) ; METHOD_4 ( ) ; this . VAR_1 = this . METHOD_5 ( ) ; this . VAR_2 = this . VAR_1 . METHOD_6 ( ) ; }","public void METHOD_1 ( ) { size ( INT_1 , INT_2 ) ; METHOD_2 ( 0 ) ; METHOD_3 ( INT_3 ) ; METHOD_4 ( ) ; this . VAR_1 = this . METHOD_5 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",5877
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_3 ) METHOD_3 ( ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5878
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( METHOD_2 ( ) ) VAR_2 = VAR_3 . replace ( METHOD_3 ( ) , STRING_1 ) . trim ( ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",5879
public void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_1 ( ) ; if ( ! VAR_1 ) { message = STRING_1 ; } if ( VAR_3 ) { VAR_3 = false ; message = STRING_2 ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_1 ( ) ; if ( ! VAR_1 ) { message = STRING_1 ; } if ( VAR_3 ) { VAR_3 = false ; } METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5880
public void METHOD_1 ( ) { VAR_1 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 = false ; },public void METHOD_1 ( ) { VAR_1 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; VAR_2 . setEnabled ( false ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5881
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = INT_1 ; VAR_3 = - INT_1 ; VAR_4 = INT_2 ; VAR_5 = STRING_1 ; new TYPE_1 ( this ) . execute ( VAR_6 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( this ) . execute ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5882
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; t = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5883
"public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object arg ) { VAR_2 . METHOD_2 ( this , null ) ; VAR_3 = VAR_2 ; VAR_4 = true ; VAR_5 . METHOD_2 ( this , null ) ; VAR_4 = false ; return null ; }","public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object arg ) { VAR_2 . METHOD_2 ( this , null ) ; VAR_5 . METHOD_2 ( this , null ) ; return null ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5884
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = ( this . VAR_3 . isEmpty ( ) ) && ( this . VAR_4 . isEmpty ( ) ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",5885
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5886
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { this . VAR_1 = STRING_2 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",5889
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 = VAR_7 ; } catch ( java.lang.Exception VAR_8 ) { VAR_8 . METHOD_2 ( ) ; throw new TYPE_2 ( STRING_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { try { this . VAR_2 = VAR_3 ; } catch ( java.lang.Exception VAR_8 ) { VAR_8 . METHOD_2 ( ) ; throw new TYPE_2 ( STRING_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5890
public static void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String str : VAR_1 ) { VAR_3 . add ( str ) ; } },public static void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { for ( java.lang.String str : VAR_1 ) { VAR_3 . add ( str ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5891
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; VAR_4 . setText ( ( ( VAR_5 ) + STRING_1 ) ) ; VAR_6 = true ; this . VAR_7 = VAR_8 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( VAR_3 ) ; VAR_4 . setText ( ( ( VAR_5 ) + STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5892
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5893
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = new java.util.LinkedList < TYPE_3 > ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5894
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 < > ( this ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Update ConstructorCall', 'Move ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5895
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; if ( ( ( VAR_3 ) == null ) || ( ( VAR_4 ) == null ) ) { TYPE_1 . METHOD_2 ( VAR_5 , STRING_1 ) ; return ; } VAR_4 . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { if ( ( ( VAR_3 ) == null ) || ( ( VAR_4 ) == null ) ) { TYPE_1 . METHOD_2 ( VAR_5 , STRING_1 ) ; return ; } VAR_4 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5896
"public TYPE_1 METHOD_1 ( ) { this . VAR_1 = TYPE_2 . METHOD_2 ( super . METHOD_1 ( ) , new TYPE_1 ( STRING_1 ) ) ; return this . VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ; }","public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( super . METHOD_1 ( ) , new TYPE_1 ( STRING_1 ) ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5897
public void METHOD_1 ( int i ) { VAR_1 = i ; VAR_2 = i ; },public void METHOD_1 ( int i ) { VAR_1 = i ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5898
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; TYPE_2 item = VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_3 ) ( item . METHOD_5 ( ) ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",5899
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } } TYPE_1 result = VAR_1 ; VAR_1 = null ; return result ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } } return VAR_1 ; },"['Update BinaryOperator', 'Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",5900
public java.lang.Boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = true ; return VAR_1 ; },public java.lang.Boolean METHOD_1 ( ) { return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5902
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( 0 ) ; METHOD_3 ( ) ; VAR_2 = VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( 0 ) ; METHOD_3 ( ) ; VAR_2 = VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5903
public void METHOD_1 ( ) { VAR_1 = false ; if ( ! ( this . METHOD_2 ( ) ) ) { VAR_2 = INT_1 ; } },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete ThisAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5904
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",5905
public void METHOD_1 ( ) { try { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = VAR_2 . METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_5 ) { VAR_5 . METHOD_5 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_5 ) { VAR_5 . METHOD_5 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5906
"protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 . name = VAR_1 ; VAR_5 = VAR_2 ; METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { }","['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5907
"public void METHOD_1 ( ) { try { VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , VAR_2 ) ; VAR_3 = 1 ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.err.println ( ( STRING_4 + VAR_4 ) ) ; } }","public void METHOD_1 ( ) { try { VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.err.println ( ( STRING_4 + VAR_4 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5908
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_4 = false ; init ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; init ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5909
protected void METHOD_1 ( ) { VAR_1 . error = false ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5910
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_1 ; this . view . METHOD_2 ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; this . view . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5911
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; ( VAR_5 ) -- ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5912
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",5913
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_3 = ( ( VAR_3 ) + 1 ) % ( VAR_2 . size ( ) ) ; return VAR_2 . get ( VAR_3 ) ; },public TYPE_1 METHOD_1 ( ) { VAR_3 = ( ( VAR_3 ) + 1 ) % ( VAR_2 . size ( ) ) ; return VAR_2 . get ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5914
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = ! ( VAR_3 ) ; }","['Insert UnaryOperator', 'Insert FieldRead', 'Delete VariableRead']",5915
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_2 , 0 , INT_1 ) ; METHOD_2 ( VAR_3 , 0 , INT_2 ) ; METHOD_2 ( VAR_4 , INT_3 , INT_1 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_2 , 0 , INT_1 ) ; METHOD_2 ( VAR_3 , 0 , INT_2 ) ; METHOD_2 ( VAR_4 , INT_3 , INT_1 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5916
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_4 = VAR_2 ; ( length ) ++ ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = VAR_4 ; VAR_4 = VAR_2 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5917
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( VAR_1 ) ; this . context = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5918
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5919
protected void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_1 == CHAR_1 ) { ( line ) ++ ; VAR_3 = 0 ; } else { ( VAR_3 ) ++ ; } },protected void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == CHAR_1 ) { ( line ) ++ ; VAR_3 = 0 ; } else { ( VAR_3 ) ++ ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5920
protected static void METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 ) return ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( ) ; VAR_4 = null ; },protected static void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5921
protected void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = 0 ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { this . VAR_1 = true ; super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5922
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = true ; VAR_3 = 1 ; VAR_4 = 1 ; VAR_5 = 0 ; VAR_6 = VAR_7 ; VAR_8 = true ; },private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = true ; VAR_3 = 1 ; VAR_4 = 1 ; VAR_5 = 0 ; VAR_6 = VAR_7 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5923
public static void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( TYPE_1 . METHOD_2 ( ) ) { VAR_3 = VAR_1 ; } else { VAR_4 = VAR_1 ; } },public static void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5925
public void METHOD_1 ( TYPE_1 n ) { VAR_1 = VAR_2 . getName ( ) ; },public void METHOD_1 ( TYPE_1 n ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5926
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; this . VAR_3 . METHOD_1 ( VAR_1 ) ; this . VAR_4 . METHOD_1 ( VAR_1 ) ; this . VAR_5 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_3 . METHOD_1 ( VAR_1 ) ; this . VAR_4 . METHOD_1 ( VAR_1 ) ; this . VAR_5 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5927
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; for ( TYPE_1 i : VAR_3 ) { VAR_4 . remove ( ) ; } VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { for ( TYPE_1 i : VAR_3 ) { VAR_4 . remove ( ) ; } VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5928
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { VAR_2 . state = VAR_3 ; } } , VAR_4 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { VAR_2 . state = VAR_3 ; } } , VAR_4 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5929
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; super . METHOD_1 ( VAR_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5930
"public void METHOD_1 ( ) { VAR_1 = new java.util.Date ( ) ; TYPE_1 content = VAR_2 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , VAR_3 . toString ( ) ) ; }","public void METHOD_1 ( ) { TYPE_1 content = VAR_2 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( this , STRING_1 , VAR_3 . toString ( ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5931
public java.lang.String getText ( ) { this . text = this . VAR_1 . getText ( ) ; return this . VAR_1 . getText ( ) ; },public java.lang.String getText ( ) { return this . VAR_1 . getText ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",5932
private void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 . METHOD_2 ( ( ( VAR_2 ) + 1 ) ) ; VAR_4 . setValue ( VAR_2 ) ; VAR_5 = VAR_2 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 . METHOD_2 ( ( ( VAR_2 ) + 1 ) ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5933
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; },['Delete TypeAccess'],5934
public void METHOD_1 ( ) { java.lang.String text = TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( text == null ) this . text = STRING_2 ; else this . text = text ; java.lang.System.out.println ( text ) ; },public void METHOD_1 ( ) { java.lang.String text = TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( text == null ) this . text = STRING_2 ; java.lang.System.out.println ( text ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",5935
public void METHOD_1 ( ) { VAR_1 . delete ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = true ; TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_6 . execute ( STRING_1 ) ; VAR_7 . METHOD_3 ( false ) ; },public void METHOD_1 ( ) { VAR_1 . delete ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_6 . execute ( STRING_1 ) ; VAR_7 . METHOD_3 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5936
"public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 . getText ( ) . toString ( ) , count , offset ) ; VAR_3 . METHOD_3 ( ) ; title = VAR_2 . getText ( ) . toString ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_2 . getText ( ) . toString ( ) , count , offset ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5937
"protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_3 . values ) ) ; METHOD_2 ( ) ; }","protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeReference', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",5938
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_4 ; METHOD_2 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",5939
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_4 = null ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5943
public TYPE_1 METHOD_1 ( ) { VAR_1 = 0 ; while ( ( VAR_1 ) < ( VAR_2 ) ) { ( VAR_1 ) ++ ; VAR_3 = METHOD_2 ( ) ; } return VAR_3 ; },public TYPE_1 METHOD_1 ( ) { while ( ( VAR_1 ) < ( VAR_2 ) ) { ( VAR_1 ) ++ ; VAR_3 = METHOD_2 ( ) ; } return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5944
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( true ) ; VAR_6 = new TYPE_1 ( VAR_7 . METHOD_3 ( this ) ) ; VAR_6 . METHOD_4 ( ) ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( true ) ; new TYPE_1 ( ) ; },"['Insert ConstructorCall', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5945
public TYPE_1 remove ( int index ) { ( size ) -- ; TYPE_1 VAR_1 = get ( index ) ; VAR_2 [ index ] = null ; return VAR_1 ; },public TYPE_1 remove ( int index ) { TYPE_1 VAR_1 = get ( index ) ; VAR_2 [ index ] = null ; return VAR_1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",5947
public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { out . METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_1 ( out ) ; },public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { out . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_1 ( out ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5948
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; VAR_2 = - 1 ; ( VAR_3 ) ++ ; VAR_4 = new java.io.File ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; ( VAR_3 ) ++ ; VAR_4 = new java.io.File ( STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5949
void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",5950
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . height = null ; this . VAR_3 = null ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5951
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = ( ( android.widget.Button ) ( view . METHOD_3 ( VAR_6 ) ) ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5952
"public TYPE_1 context ( java.lang.String name ) { TYPE_2 . METHOD_1 ( name , STRING_1 ) ; execute ( VAR_1 , TYPE_3 . METHOD_2 ( ""name"" , name ) ) ; VAR_2 = name ; return this ; }","public TYPE_1 context ( java.lang.String name ) { TYPE_2 . METHOD_1 ( name , STRING_1 ) ; execute ( VAR_1 , TYPE_3 . METHOD_2 ( ""name"" , name ) ) ; return this ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5953
"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_5 ; VAR_6 = VAR_1 ; VAR_7 = VAR_2 ; VAR_8 = VAR_3 ; }","public void METHOD_1 ( int VAR_2 , int VAR_3 ) { VAR_4 = VAR_5 ; VAR_7 = VAR_2 ; VAR_8 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5954
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getContext ( ) ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getContext ( ) ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5955
protected void METHOD_1 ( java.lang.String result ) { VAR_1 . remove ( this ) ; if ( ( VAR_1 . size ( ) ) == 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } VAR_4 = TYPE_1 . METHOD_3 ( result ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( java.lang.String result ) { METHOD_4 ( result ) ; VAR_1 . remove ( this ) ; if ( ( VAR_1 . size ( ) ) == 0 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } },"['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",5956
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 + STRING_1 ; VAR_4 = VAR_1 + STRING_2 ; VAR_5 = VAR_1 + STRING_3 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",5957
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = false ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",5958
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) || ( ( VAR_2 ) == 0 ) ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; } else { METHOD_2 ( ) ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) || ( ( VAR_2 ) == 0 ) ) { VAR_2 = VAR_1 ; } else { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5959
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) return ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_3 = VAR_4 ; METHOD_5 ( ) . METHOD_6 ( VAR_5 ) ; },private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) return ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5960
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = true ; VAR_5 . METHOD_2 ( VAR_6 ) ; METHOD_3 ( VAR_7 , VAR_8 ) ; METHOD_4 ( ) ; VAR_9 . METHOD_5 ( VAR_1 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; METHOD_3 ( VAR_7 , VAR_8 ) ; METHOD_4 ( ) ; VAR_9 . METHOD_5 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5961
public void METHOD_1 ( ) { VAR_1 . setText ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_2 = false ; },public void METHOD_1 ( ) { VAR_1 . setText ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5962
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getValue ( VAR_4 . String class ) ; if ( ( VAR_2 ) != null ) { VAR_5 . setText ( VAR_6 . toString ( ) ) ; } else { VAR_2 = STRING_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getValue ( VAR_4 . String class ) ; VAR_5 . setText ( VAR_6 . toString ( ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5963
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 = false ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_6 ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5964
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { byte [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; buf = TYPE_2 . METHOD_3 ( buf , VAR_4 . length ) ; VAR_5 . put ( VAR_2 ) ; METHOD_4 ( CHAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { byte [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( buf , VAR_4 . length ) ; VAR_5 . put ( VAR_2 ) ; METHOD_4 ( CHAR_1 ) ; return this ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",5965
private static void METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( context ) ; } },private static void METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( context ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation']",5966
public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( position ) ; VAR_2 = position ; this . METHOD_3 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( position ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",5967
protected void setState ( TYPE_1 state ) { this . state = state ; },protected void setState ( TYPE_1 state ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5968
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) == ( - 1 ) ) { this . VAR_3 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",5969
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.HashMap < > ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",5970
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 class ) ; METHOD_2 ( VAR_2 ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . VAR_5 = true ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 , VAR_4 class ) ; METHOD_2 ( VAR_2 ) ; return true ; }","['Delete TypeReference', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5971
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5972
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5974
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; VAR_3 = true ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5975
public void METHOD_1 ( ) throws java.lang.Throwable { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( ) throws java.lang.Throwable { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5976
public void METHOD_1 ( TYPE_1 result ) { this . data = result ; this . VAR_1 = true ; super . METHOD_1 ( result ) ; },public void METHOD_1 ( TYPE_1 result ) { this . data = result ; super . METHOD_1 ( result ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5977
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( this ) ; } VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",5978
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . error ) ; VAR_4 = VAR_2 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . error ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5979
public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( VAR_1 ) ) ) ; VAR_2 = false ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ( STRING_1 + ( VAR_1 ) ) ) ; VAR_3 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5980
"public void METHOD_1 ( TYPE_1 context ) { this . VAR_1 = context . METHOD_2 ( STRING_1 , FLOAT_1 ) ; this . VAR_2 = context . METHOD_2 ( STRING_2 , 0.0F ) ; }","public void METHOD_1 ( TYPE_1 context ) { this . VAR_1 = context . METHOD_2 ( STRING_1 , FLOAT_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",5981
public static void init ( ) { TYPE_1 . METHOD_1 ( ) ; VAR_1 = new TYPE_2 ( VAR_2 ) ; },public static void init ( ) { TYPE_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",5982
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = VAR_3 ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5983
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",5984
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5985
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = - 1 ; for ( TYPE_1 c : VAR_4 ) { c . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; for ( TYPE_1 c : VAR_4 ) { c . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",5986
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) , VAR_2 ) ; setState ( VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) , VAR_2 ) ; state = VAR_3 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",5987
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_2 ; ( this . length ) -- ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = VAR_2 ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",5988
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { VAR_3 . METHOD_2 ( VAR_4 . toString ( ) ) ; VAR_5 = java.lang.Integer.parseInt ( VAR_4 . toString ( ) ) ; }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int start , int VAR_2 , int count ) { VAR_3 . METHOD_2 ( VAR_4 . toString ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",5989
protected void execute ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_1 ( true ) ; VAR_1 = true ; } VAR_2 . METHOD_2 ( ) ; },protected void execute ( ) { VAR_2 . METHOD_1 ( true ) ; VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",5990
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . show ( context , STRING_1 , STRING_2 ) ; METHOD_2 ( VAR_3 ) ; }",public void METHOD_1 ( ) { METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",5991
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 = new TYPE_1 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_3 ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; java.lang.System.out.println ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",5992
"public void METHOD_1 ( ) { value = 0L ; VAR_1 = 0L ; VAR_2 = ""0"" ; VAR_3 = true ; VAR_4 = true ; add = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; update ( value ) ; }","public void METHOD_1 ( ) { value = 0L ; VAR_1 = 0L ; VAR_2 = ""0"" ; VAR_3 = true ; add = false ; VAR_5 = false ; VAR_6 = false ; VAR_7 = false ; update ( value ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",5993
private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } VAR_1 = ! ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( ) { VAR_4 . METHOD_3 ( true ) ; },"['Insert Literal', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete TypeAccess']",5994
"public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( STRING_2 , STRING_3 ) ; } else { TYPE_2 . METHOD_3 ( STRING_2 , STRING_4 ) ; } VAR_2 = VAR_3 ; }","public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( STRING_2 , STRING_3 ) ; } else { TYPE_2 . METHOD_3 ( STRING_2 , STRING_4 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",5995
"public void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , true ) ; } VAR_3 = false ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { for ( final TYPE_1 VAR_1 : VAR_2 ) { METHOD_2 ( VAR_1 , true ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",5996
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",5998
void METHOD_1 ( ) { if ( ( this . VAR_1 ) == false ) { this . VAR_1 = true ; METHOD_2 ( ) ; } else { this . VAR_1 = false ; METHOD_3 ( ) ; } },void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( ) ; },"['Move Assignment', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",5999
public int METHOD_1 ( int VAR_1 ) throws java.lang.Exception { VAR_2 = 1 ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return 0 ; },public int METHOD_1 ( int VAR_1 ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6000
"public java.lang.Void METHOD_1 ( java.lang.CharSequence VAR_1 , int VAR_2 ) throws TYPE_1 { VAR_3 = new TYPE_2 ( VAR_4 . toString ( ) , VAR_2 ) ; java.lang.System.out.println ( VAR_5 . toString ( ) ) ; VAR_6 = true ; return null ; }","public java.lang.Void METHOD_1 ( java.lang.CharSequence VAR_1 , int VAR_2 ) throws TYPE_1 { VAR_3 = new TYPE_2 ( VAR_4 . toString ( ) , VAR_2 ) ; java.lang.System.out.println ( VAR_5 . toString ( ) ) ; return null ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6001
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 [ VAR_2 ] ; for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_1 [ i ] = new TYPE_1 ( ) ; } size = 0 ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 [ VAR_2 ] ; for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_1 [ i ] = new TYPE_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6003
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_2 ) ; TYPE_2 index = METHOD_4 ( VAR_1 ) ; VAR_3 [ VAR_2 ] = index ; ( VAR_4 ) ++ ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_2 ) ; TYPE_2 index = METHOD_4 ( VAR_1 ) ; VAR_3 [ VAR_2 ] = index ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",6004
public void METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6005
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . remove ( STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . remove ( STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6006
public void METHOD_1 ( ) { VAR_1 . get ( ) . METHOD_2 ( ) ; VAR_1 . get ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . get ( ) . METHOD_2 ( ) ; VAR_1 . get ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6007
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6009
public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( ) ; VAR_4 = 0 ; },public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6010
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . TYPE_2 = new TYPE_3 ( ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( this . TYPE_2 . METHOD_4 ( ) ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( this . TYPE_2 . METHOD_4 ( ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6011
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; android.content.Intent intent = getActivity ( ) . getIntent ( ) ; VAR_3 = intent . METHOD_2 ( VAR_4 ) ; VAR_5 = intent . METHOD_2 ( VAR_6 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = this ; android.content.Intent intent = getActivity ( ) . getIntent ( ) ; VAR_3 = intent . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6012
"public synchronized void start ( ) { TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . init ( VAR_4 ) ; } }","public void start ( ) { TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; METHOD_2 ( ) ; VAR_3 . init ( VAR_4 ) ; }","['Move Invocation', 'Move Invocation', 'Delete Wra', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6014
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; try { METHOD_4 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; } catch ( java.lang.Throwable VAR_3 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6015
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; this . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation']",6016
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6017
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; METHOD_2 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6018
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 = TYPE_3 . METHOD_3 ( getActivity ( ) ) . get ( VAR_6 class ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6019
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; if ( VAR_3 ) { VAR_3 = false ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",6021
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6022
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( METHOD_2 ( ) ) ; VAR_3 = METHOD_3 ( VAR_4 , VAR_5 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6023
public TYPE_1 message ( java.lang.String message ) { this . message = message ; if ( ( name ) == null ) { name = message ; } return this ; },public TYPE_1 message ( java.lang.String message ) { this . message = message ; return this ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6024
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = false ; VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 , VAR_4 , INT_1 ) ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 , VAR_4 , INT_1 ) ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6025
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; java.lang.System.out.println ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( null ) ; },private void METHOD_1 ( ) { METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( null ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6026
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6027
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } VAR_2 = VAR_3 ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6028
public void METHOD_1 ( final android.view.View view ) { if ( VAR_1 . equals ( VAR_2 ) ) { if ( ! ( VAR_3 ) ) { VAR_3 = true ; METHOD_2 ( ) ; } } },public void METHOD_1 ( final android.view.View view ) { if ( VAR_1 . equals ( VAR_2 ) ) { METHOD_2 ( ) ; } },"['Move If', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6029
"public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } VAR_3 = new TYPE_1 ( VAR_2 , this ) ; VAR_4 . start ( ) ; }",public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",6030
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = TYPE_1 . METHOD_2 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6031
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = false ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6032
"public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_4 VAR_1 ) throws TYPE_5 { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; VAR_6 = VAR_6 . METHOD_1 ( VAR_2 ) ; return this ; }","public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_4 VAR_1 ) throws TYPE_5 { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; return this ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6033
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; this . METHOD_2 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6034
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = null ; VAR_1 = METHOD_2 ( VAR_2 ) ; return VAR_1 ; },"['Insert Assignment', 'Move Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",6035
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( 1 , false ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( 0 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( 1 , false ) ; VAR_3 . METHOD_4 ( 0 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6036
public void METHOD_1 ( boolean state ) { VAR_1 = state ; VAR_2 [ 0 ] = - 1 ; VAR_2 [ 1 ] = - 1 ; VAR_3 = 0 ; VAR_4 = 0 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( boolean state ) { VAR_1 = state ; VAR_2 [ 0 ] = - 1 ; VAR_2 [ 1 ] = - 1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6037
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . getBoolean ( STRING_1 , true ) ; VAR_5 = VAR_4 . getBoolean ( STRING_1 , true ) ; VAR_6 = VAR_4 . getBoolean ( STRING_2 , true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_4 . getBoolean ( STRING_1 , true ) ; VAR_5 = VAR_4 . getBoolean ( STRING_1 , true ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6039
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; this . VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_3 = new TYPE_2 ( this . VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6040
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 . show ( context , STRING_1 , STRING_2 , true ) ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6042
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = position ; VAR_5 . obj = VAR_6 ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = position ; VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6043
public void METHOD_1 ( ) { n = 0 ; VAR_1 = 0 ; VAR_2 = 0 ; min = VAR_3 ; VAR_4 = VAR_5 ; },public void METHOD_1 ( ) { n = 0 ; VAR_1 = 0 ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6044
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_4 ; this . VAR_5 [ 1 ] = VAR_2 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_5 [ 1 ] = VAR_2 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6045
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = new TYPE_1 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6046
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . i = 0 ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6047
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 = null ; VAR_2 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",6048
public void count ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; this . VAR_3 = TYPE_1 . METHOD_1 ( ) ; this . VAR_4 = VAR_5 ; this . VAR_6 = null ; },public void count ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; this . VAR_3 = TYPE_1 . METHOD_1 ( ) ; this . VAR_4 = VAR_5 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6049
"private void METHOD_1 ( final TYPE_1 VAR_1 ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; }","private void METHOD_1 ( final TYPE_1 VAR_1 ) throws java.io.IOException , java.lang.ClassNotFoundException { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6050
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . getBoolean ( VAR_4 , false ) ; VAR_5 = VAR_3 . getBoolean ( VAR_6 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_5 = VAR_3 . getBoolean ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6052
public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_1 = value ; },"['Insert FieldRead', 'Delete VariableRead']",6053
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6054
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_5 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6055
public void METHOD_1 ( java.lang.Long position ) { VAR_1 = true ; VAR_2 = false ; if ( ( VAR_3 ) == null ) { return ; } VAR_3 . METHOD_2 ( position ) ; },public void METHOD_1 ( java.lang.Long position ) { VAR_1 = true ; if ( ( VAR_3 ) == null ) { return ; } VAR_3 . METHOD_2 ( position ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6056
public static java.lang.Integer METHOD_1 ( java.lang.String path ) { int VAR_1 ; VAR_1 = java.lang.Integer.parseInt ( VAR_2 . getString ( path ) ) ; return VAR_1 ; },public static java.lang.Integer METHOD_1 ( java.lang.String path ) { int VAR_1 ; VAR_1 = VAR_2 . getInt ( path ) ; return VAR_1 ; },"['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",6057
public void METHOD_1 ( int c ) { this . c = c ; this . VAR_1 = ( this . c ) < 0 ; },public void METHOD_1 ( int c ) { this . c = c ; if ( ( this . c ) < 0 ) { this . VAR_1 = true ; } else { this . VAR_1 = false ; } },"['Insert If', 'Move BinaryOperator', 'Insert Block', 'Insert Block', 'Move Assignment', 'Insert Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",6058
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) { this . VAR_1 = 0 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6059
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6060
public void METHOD_1 ( ) { list = null ; VAR_1 = null ; },public void METHOD_1 ( ) { list = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6061
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = false ; METHOD_4 ( ) ; VAR_4 = new TYPE_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6062
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; if ( this . VAR_3 ) { this . VAR_4 . METHOD_3 ( this . VAR_2 . METHOD_4 ( ) ) ; } this . VAR_3 = true ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; if ( this . VAR_3 ) { this . VAR_4 . METHOD_3 ( this . VAR_2 . METHOD_4 ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6063
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; this . VAR_2 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; this . VAR_2 = false ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6064
"public void METHOD_1 ( TYPE_1 message ) { TYPE_2 VAR_1 = VAR_2 . get ( ) ; if ( VAR_1 != null ) { VAR_3 = true ; VAR_4 . METHOD_2 ( VAR_5 , VAR_6 . x , VAR_6 . y ) ; VAR_7 = null ; } }","public void METHOD_1 ( TYPE_1 message ) { TYPE_2 VAR_1 = VAR_2 . get ( ) ; if ( VAR_1 != null ) { VAR_4 . METHOD_2 ( VAR_5 , VAR_6 . x , VAR_6 . y ) ; VAR_3 = true ; } }","['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6065
public void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { if ( VAR_1 != null ) VAR_2 = new java.util.ArrayList < TYPE_1 > ( java.util.Arrays.asList ( VAR_1 ) ) ; else VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( final TYPE_1 [ ] VAR_1 ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( java.util.Arrays.asList ( VAR_1 ) ) ; METHOD_2 ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6066
private void METHOD_1 ( ) { this . isEmpty = ( this . VAR_1 . getText ( ) . length ( ) ) == 0 ; if ( this . VAR_2 ) { this . isEmpty = true ; } },private void METHOD_1 ( ) { this . isEmpty = ( this . VAR_1 . getText ( ) . length ( ) ) == 0 ; if ( this . isEmpty ) { this . VAR_2 = true ; } },"['Update FieldRead', 'Update FieldWrite']",6067
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; { METHOD_3 ( ) ; } VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6068
public void METHOD_1 ( java.lang.String error ) { this . VAR_1 = false ; this . error = error ; },public void METHOD_1 ( java.lang.String error ) { this . error = error ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6069
public static void main ( java.lang.String [ ] args ) { int i ; i = INT_1 ; int k = i + ( INT_2 / INT_3 ) ; java.lang.System.out.println ( k ) ; },public static void main ( java.lang.String [ ] args ) { int i ; i = INT_1 ; k = i + ( INT_2 / INT_3 ) ; java.lang.System.out.println ( k ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move BinaryOperator', 'Insert FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead']",6070
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",6071
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_4 ( VAR_4 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6073
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { this . VAR_2 = VAR_2 ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( int number , java.lang.String name ) { VAR_2 = name ; VAR_1 = number ; }","['Update Parameter', 'Update Parameter', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert FieldWrite', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6074
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6075
public void METHOD_1 ( TYPE_1 value ) { if ( value != null ) VAR_1 = new TYPE_1 ( value ) ; else VAR_1 = null ; },public void METHOD_1 ( TYPE_1 value ) { VAR_1 = new TYPE_1 ( value ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6076
public void METHOD_1 ( ) { VAR_1 = - 1 ; if ( ( VAR_2 ) == ( VAR_3 ) ) VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 = - 1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6077
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 class ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_2 class ) ; VAR_4 = new TYPE_2 ( VAR_1 , VAR_3 ) ; VAR_5 = new TYPE_3 ( VAR_4 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6078
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , true ) ; VAR_4 = VAR_1 . METHOD_2 ( VAR_3 , true ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , true ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",6079
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 -= 1 ; this . VAR_7 = true ; this . VAR_8 = true ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { this . VAR_2 = VAR_3 ; this . VAR_4 = VAR_5 ; this . VAR_6 -= 1 ; this . VAR_7 = true ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6080
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( ! ( this . VAR_2 ) ) ) { TYPE_1 . METHOD_3 ( new TYPE_2 ( this ) ) ; this . VAR_2 = true ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",6081
"public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 , VAR_3 class ) ; intent . METHOD_2 ( STRING_1 , url ) ; VAR_2 . METHOD_3 ( intent , INT_1 ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 , VAR_3 class ) ; intent . METHOD_2 ( STRING_1 , url ) ; VAR_2 . METHOD_3 ( intent , INT_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6082
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_3 . toString ( ) ) ) ) { VAR_2 = VAR_3 . toString ( ) ; METHOD_3 ( VAR_2 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_3 . toString ( ) ) ) ) { METHOD_3 ( VAR_3 . toString ( ) ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6083
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6084
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; VAR_2 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6085
public java.lang.String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( this . VAR_1 ) ) { this . VAR_1 = null ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6087
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_2 ) { VAR_2 . METHOD_2 ( this ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; },"['Update Parameter', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead']",6088
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = null ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6089
public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_1 ( ) ; } else { VAR_2 = true ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6090
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6091
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) ; ( ( TYPE_3 ) ( getActivity ( ) . METHOD_3 ( ) ) ) . VAR_3 = false ; VAR_4 . METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) ; VAR_4 . METHOD_4 ( ) ; }","['Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6092
public void METHOD_1 ( android.view.View VAR_1 ) { this . METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; },public void METHOD_1 ( android.view.View VAR_1 ) { this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6093
"public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { parameters . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( parameters ) ; VAR_2 . METHOD_5 ( ) ; VAR_3 = true ; TYPE_1 . METHOD_6 ( VAR_4 , STRING_1 ) ; } }","public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { parameters . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( parameters ) ; VAR_2 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_4 , STRING_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6094
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( this , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( this , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6095
"public void METHOD_1 ( java.lang.String title ) { if ( title != null ) this . title = VAR_1 . replace ( STRING_1 , STRING_2 ) ; else this . title = STRING_3 ; }",public void METHOD_1 ( java.lang.String title ) { this . title = title ; },"['Move Assignment', 'Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6097
public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6098
private static synchronized java.lang.Integer METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) == ( VAR_2 ) ) ? 0 : ( VAR_1 ) + 1 ; return new java.lang.Integer ( VAR_1 ) ; },private static synchronized java.lang.Integer METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) == ( VAR_2 ) ) ? 0 : ( VAR_1 ) + 1 ; return new java.lang.Integer ( ( ( VAR_1 ) ++ ) ) ; },"['Insert UnaryOperator', 'Insert FieldWrite', 'Delete FieldRead']",6100
private void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_3 . message ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; } },private void METHOD_1 ( ) { VAR_3 . message ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6102
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; },public void init ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6103
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6104
public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_3 = 0 ; } },public void METHOD_1 ( ) { VAR_3 = 0 ; try { METHOD_2 ( ) ; } catch ( java.io.IOException VAR_1 ) { VAR_3 = 0 ; VAR_2 . METHOD_3 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Move Invocation']",6105
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_6 , VAR_6 ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_7 . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_5 . METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_6 , VAR_6 ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_7 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6106
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6107
"public void METHOD_1 ( double VAR_1 , double VAR_2 ) { VAR_3 . set ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( double VAR_1 , double VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6108
public void METHOD_1 ( final TYPE_1 listener ) { VAR_1 = listener ; },public void METHOD_1 ( final TYPE_1 listener ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6109
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 < > ( ) ; VAR_3 = new TYPE_2 < > ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6110
"private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 = null ; new TYPE_3 ( VAR_3 , VAR_1 . METHOD_2 ( ) , VAR_4 , this , VAR_5 ) . METHOD_3 ( ) ; VAR_1 . METHOD_3 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { new TYPE_3 ( VAR_3 , VAR_1 . METHOD_2 ( ) , VAR_4 , this , VAR_5 ) . METHOD_3 ( ) ; VAR_1 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6111
"protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 ) ; VAR_3 = false ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ) ; }","['Delete TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6112
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 class , STRING_1 , VAR_1 ) ; TYPE_2 . METHOD_3 ( getContext ( ) , VAR_1 . METHOD_4 ( ) , VAR_3 ) . show ( ) ; VAR_4 = true ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 class , STRING_1 , VAR_1 ) ; TYPE_2 . METHOD_3 ( getContext ( ) , VAR_1 . METHOD_4 ( ) , VAR_3 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6114
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( - 1 ) ) { VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; VAR_3 = true ; METHOD_3 ( ) ; } else { VAR_3 = false ; METHOD_3 ( ) ; } },public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( - 1 ) ) { VAR_2 . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; VAR_3 = true ; METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block']",6115
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( ""0"" ) ; VAR_3 . setText ( STRING_1 ) ; temp = ""0"" ; VAR_4 = STRING_1 ; VAR_5 = ""0"" ; result = 0 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( ""0"" ) ; VAR_3 . setText ( STRING_1 ) ; temp = ""0"" ; VAR_4 = ""0"" ; VAR_5 = ""0"" ; }","['Insert Literal', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6117
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 . size ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 . size ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6118
public void METHOD_1 ( double VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( METHOD_2 ( ) ) && ( ! ( VAR_2 ) ) ) { ++ ( this . VAR_3 ) ; } this . VAR_2 = false ; },public void METHOD_1 ( double VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( METHOD_2 ( ) ) { ++ ( this . VAR_3 ) ; } },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6119
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( getContext ( ) , VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 = new TYPE_2 ( getContext ( ) , VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6120
protected void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6121
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; VAR_4 = VAR_5 ; METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6122
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( getContext ( ) ) ; },private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6124
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 ; return VAR_2 . METHOD_2 ( ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6125
public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; if ( ! ( VAR_3 . contains ( VAR_2 ) ) ) { VAR_3 . add ( VAR_2 ) ; } this . VAR_4 = VAR_5 ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; if ( ! ( VAR_3 . contains ( VAR_2 ) ) ) { VAR_3 . add ( VAR_2 ) ; } return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6126
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6127
"public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( METHOD_4 ( ) , VAR_1 , VAR_3 ) ; VAR_4 . show ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_3 ( METHOD_4 ( ) , VAR_1 , VAR_3 ) . show ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6128
public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; result = 0.0 ; VAR_2 = null ; VAR_3 = STRING_2 ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . setText ( STRING_1 ) ; result = 0.0 ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6129
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 ; } try { METHOD_2 ( ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6130
public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; METHOD_3 ( ) ; } },public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",6131
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 . equals ( VAR_3 ) ) { VAR_4 = null ; } else { METHOD_1 ( VAR_2 . name ( ) ) ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 . equals ( VAR_3 ) ) { VAR_4 = null ; } else { VAR_4 = VAR_2 . name ( ) ; } return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete Invocation']",6132
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6133
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( this ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6134
public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null ) ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6135
"public void show ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( false , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; }",public void show ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6136
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; VAR_1 = VAR_2 ; VAR_3 = new TYPE_2 ( VAR_4 , VAR_5 , VAR_6 ) ; VAR_7 = new TYPE_3 ( VAR_8 . getContext ( ) , this ) ; }","private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; VAR_1 = VAR_2 ; VAR_3 = new TYPE_2 ( VAR_4 , VAR_5 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",6137
public final void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { this . VAR_1 = VAR_1 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; this . VAR_4 = false ; METHOD_2 ( ) ; },public final void METHOD_1 ( java.io.InputStream VAR_1 ) throws java.io.IOException { this . VAR_1 = VAR_1 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6138
"public void METHOD_1 ( TYPE_1 VAR_1 , final android.view.View view , int position ) { if ( position == ( VAR_2 ) ) { return ; } VAR_3 = false ; VAR_2 = position ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , final android.view.View view , int position ) { if ( position == ( VAR_2 ) ) { return ; } VAR_2 = position ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6139
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_2 ) ) { VAR_2 = true ; METHOD_3 ( ) ; } },public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",6140
"public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 = VAR_1 ; return STRING_2 ; }","public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; return STRING_2 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6141
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6142
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } } VAR_1 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } VAR_1 = false ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6143
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( this ) ; name = VAR_3 . METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6145
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 = false ; TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_4 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6146
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . source = null ; this . target = null ; this . VAR_1 = false ; this . VAR_2 = java.lang.Integer . METHOD_2 ( 1 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . source = null ; this . target = null ; this . VAR_2 = java.lang.Integer . METHOD_2 ( 1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6147
public void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; if ( ( VAR_2 ) < ( VAR_3 . size ( ) ) ) { METHOD_3 ( VAR_3 . get ( VAR_2 ) . getId ( ) ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_2 ) <= ( VAR_3 . size ( ) ) ) { METHOD_3 ( VAR_3 . get ( VAR_2 ) . getId ( ) ) ; } },"['Update BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6148
public void update ( float VAR_1 ) { super . update ( VAR_1 ) ; this . VAR_2 = VAR_3 ; },public void update ( float VAR_1 ) { super . update ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6149
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6150
"public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = true ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6151
public void METHOD_1 ( ) { VAR_1 = false ; if ( VAR_2 . METHOD_2 ( ) ) VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; } },"['Update TypeAccess', 'Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6152
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , false ) ; VAR_4 = TYPE_4 . METHOD_4 ( this , view ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , false ) ; TYPE_4 . METHOD_4 ( this , view ) ; return view ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6153
private int METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = false ; return 0 ; } int VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = 0 ; return VAR_3 ; },private int METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = false ; return 0 ; } int VAR_3 = VAR_1 . METHOD_3 ( ) ; return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6154
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6155
public void update ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; java.lang.System.out.println ( ( ++ ( VAR_3 ) ) ) ; },public void update ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Invocation']",6156
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 ) != null ) VAR_3 . METHOD_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6157
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; message = VAR_3 ; url = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; message = VAR_3 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6158
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = null ; VAR_4 . METHOD_2 ( true ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 = null ; VAR_4 . METHOD_2 ( true ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6159
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } this . VAR_3 = this . VAR_4 . size ( ) ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",6160
"public void METHOD_1 ( TYPE_1 b ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = b ; VAR_3 = ( VAR_1 ) / ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_3 ( VAR_5 , VAR_3 , VAR_3 , false ) ; }","public void METHOD_1 ( TYPE_1 b ) { VAR_2 = b ; VAR_3 = ( VAR_1 ) / ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_3 ( VAR_5 , VAR_3 , VAR_3 , false ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",6161
"public void init ( ) { if ( VAR_1 ) { VAR_2 . METHOD_1 ( ) ; METHOD_2 ( STRING_1 , INT_1 , INT_1 ) ; METHOD_3 ( ) ; VAR_1 = false ; } else { METHOD_3 ( ) ; } }","public void init ( ) { VAR_2 . METHOD_1 ( ) ; METHOD_2 ( STRING_1 , INT_1 , INT_1 ) ; METHOD_3 ( ) ; }","['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Invocation', 'Delete Block', 'Delete If']",6162
public int [ ] METHOD_1 ( ) { boolean first = true ; int [ ] VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) VAR_1 = METHOD_3 ( ) ; VAR_2 = VAR_1 ; return VAR_1 ; },public int [ ] METHOD_1 ( ) { int [ ] VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) VAR_1 = METHOD_3 ( ) ; return VAR_1 ; },"['Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6163
"protected void METHOD_1 ( java.lang.Void VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = false ; METHOD_2 ( ) ; }","protected void METHOD_1 ( java.lang.Void VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6164
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( VAR_4 , INT_1 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( VAR_4 , INT_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6165
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = null ; if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( ) ; VAR_3 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6166
public void METHOD_1 ( boolean VAR_1 ) { if ( ( this . VAR_1 ) && ( ! VAR_1 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; this . VAR_4 = false ; } this . VAR_1 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { if ( ( this . VAR_1 ) && ( ! VAR_1 ) ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; } this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6168
public void METHOD_1 ( ) { startTime = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6169
public void METHOD_1 ( int i ) { TYPE_1 VAR_1 = new TYPE_1 ( i ) ; if ( METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( VAR_1 ) ; } ( this . size ) ++ ; },public void METHOD_1 ( int i ) { TYPE_1 VAR_1 = new TYPE_1 ( i ) ; if ( METHOD_2 ( ) ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",6170
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , true ) ; VAR_4 = VAR_2 . METHOD_2 ( VAR_5 , false ) ; java.lang.System.out.println ( STRING_1 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",6171
public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } state = VAR_2 ; },public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6172
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_6 ( ) ) | ( VAR_2 ) ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_6 ( ) ) | ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",6173
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6174
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . end ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; setText ( text ) ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . end ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = true ; setText ( text ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6175
private final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; METHOD_3 ( ) ; },private final void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6176
public void METHOD_1 ( ) { ( this . VAR_1 ) -- ; if ( ( METHOD_2 ( ) ) == 0 ) { METHOD_3 ( true ) ; TYPE_1 . METHOD_4 ( STRING_1 ) ; } },public void METHOD_1 ( ) { this . VAR_1 = ( this . VAR_1 ) - 1 ; if ( ( METHOD_2 ( ) ) == 0 ) { METHOD_3 ( true ) ; TYPE_1 . METHOD_4 ( STRING_1 ) ; } },"['Insert Assignment', 'Move FieldWrite', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Insert ThisAccess', 'Delete UnaryOperator']",6177
public static void METHOD_1 ( ) { for ( java.util.ArrayList < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) VAR_1 . METHOD_2 ( ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; },public static void METHOD_1 ( ) { for ( java.util.ArrayList < TYPE_1 > VAR_1 : VAR_2 . values ( ) ) VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6179
void METHOD_1 ( ) { if ( ( this . errors ) == null ) { this . errors = new java.util.ArrayList < > ( ) ; } METHOD_2 ( ) ; METHOD_3 ( ) ; },void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6180
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 . METHOD_2 ( null ) ; } else { this . VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( null ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6181
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; this . VAR_2 = 1 ; } else this . VAR_1 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; if ( VAR_1 != null ) this . VAR_2 = 1 ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",6182
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . info ( STRING_1 ) ; VAR_3 . info ( STRING_2 ) ; VAR_4 = new TYPE_2 ( ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6183
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6184
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6185
public void METHOD_1 ( java.io.File file ) throws java.io.IOException { java.io.FileInputStream VAR_1 = new java.io.FileInputStream ( file ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; java.lang.System.out.println ( VAR_2 . METHOD_3 ( ) ) ; this . file = file ; },public void METHOD_1 ( java.io.File file ) throws java.io.IOException { java.io.FileInputStream VAR_1 = new java.io.FileInputStream ( file ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; java.lang.System.out.println ( VAR_2 . METHOD_3 ( ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6186
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_1 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 class ) ; TYPE_1 VAR_3 = new TYPE_1 ( STRING_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",6187
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) { VAR_3 = VAR_4 . getInt ( VAR_2 ) ; } METHOD_3 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( true ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6189
public void METHOD_1 ( java.lang.String name ) { this . name = TYPE_1 . METHOD_2 ( name ) ; },public void METHOD_1 ( java.lang.String name ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6190
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { boolean VAR_2 = VAR_3 . getBoolean ( STRING_1 ) ; if ( VAR_2 ) { VAR_4 = INT_1 ; } return new TYPE_1 ( VAR_1 ) ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6191
public java.lang.String execute ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_1 ( VAR_3 ) ; return METHOD_2 ( ) ; },public java.lang.String execute ( TYPE_1 VAR_1 ) { return null ; },"['Insert Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",6192
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = value ; VAR_3 . add ( VAR_1 ) ; VAR_2 -= VAR_4 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; VAR_2 -= VAR_4 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6193
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_4 , VAR_3 ) . commit ( ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_4 , VAR_3 ) . commit ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6194
public java.lang.String getText ( ) { VAR_1 = 0 ; return VAR_2 . getText ( ) ; },public java.lang.String getText ( ) { return VAR_2 . getText ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6195
public void METHOD_1 ( int position ) { VAR_1 . setText ( VAR_2 . names [ position ] ) ; VAR_3 . METHOD_2 ( VAR_4 [ position ] ) ; VAR_5 = position ; },public void METHOD_1 ( int position ) { VAR_1 . setText ( VAR_2 . names [ position ] ) ; VAR_3 . METHOD_2 ( VAR_4 [ position ] ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6196
private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; VAR_2 = false ; } },private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6197
public void METHOD_1 ( java.lang.Integer VAR_1 ) { id . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6198
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6199
public void METHOD_1 ( ) { this . VAR_1 = true ; VAR_2 = 0 ; },public void METHOD_1 ( ) { this . VAR_1 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6200
public void execute ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_1 ( ) . METHOD_2 ( VAR_1 ) ; },public void execute ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( ) . METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6201
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6202
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = new TYPE_4 ( this , METHOD_3 ( ) . getInt ( VAR_7 ) ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",6203
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { VAR_3 . remove ( ) ; } VAR_4 . METHOD_2 ( ) ; VAR_5 = - 1 ; VAR_6 = - 1 ; },private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { VAR_3 . remove ( ) ; } VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",6204
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6205
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; VAR_3 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_3 ( VAR_1 ) ; super . METHOD_1 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6206
"public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6207
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 , STRING_1 ) ; VAR_3 . assertThat ( VAR_4 . execute ( ) . METHOD_2 ( ) ) . METHOD_3 ( ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",6208
public void METHOD_1 ( long VAR_1 ) { VAR_2 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 . setText ( ( STRING_1 + ( VAR_1 / INT_1 ) ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6210
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_1 text = VAR_3 . METHOD_3 ( STRING_1 , VAR_4 class ) ; VAR_5 = VAR_6 . getText ( ) ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6211
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( this ) ; VAR_3 . execute ( VAR_4 ) ; VAR_5 = getActivity ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( this ) ; VAR_3 . execute ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",6212
"protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . get ( TYPE_1 . METHOD_2 ( STRING_1 ) , STRING_2 ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; }",protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6213
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this . context ) ; VAR_2 = VAR_3 . getString ( STRING_1 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this . context ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6214
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; return VAR_3 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { VAR_1 = true ; return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6215
"public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( VAR_3 ) ; if ( VAR_2 != null ) { VAR_4 = VAR_5 . split ( STRING_1 ) ; VAR_6 . METHOD_2 ( STRING_2 , VAR_2 ) ; } }",public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { },"['Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",6216
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = null ; VAR_1 . METHOD_2 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6219
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6220
public void METHOD_1 ( TYPE_1 n ) { VAR_1 . remove ( n ) ; if ( VAR_2 . equals ( VAR_3 ) ) { java.lang.System.out.println ( STRING_1 ) ; this . VAR_3 = null ; } },public void METHOD_1 ( TYPE_1 n ) { VAR_1 . remove ( n ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6221
private void METHOD_1 ( ) { VAR_1 = true ; if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_2 . getId ( ) ) ; } },private void METHOD_1 ( ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_2 . getId ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6222
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return ; } try { VAR_1 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } try { VAR_1 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } VAR_1 = null ; },"['Insert Assignment', 'Insert BinaryOperator', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldRead', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",6223
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this . VAR_1 ) ; this . VAR_2 = null ; this . VAR_3 = - 1 ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this . VAR_1 ) ; this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",6225
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; new TYPE_4 ( this , VAR_2 ) ; new TYPE_5 ( this , VAR_2 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; new TYPE_4 ( this , VAR_2 ) ; new TYPE_5 ( this , VAR_2 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead']",6226
protected boolean METHOD_1 ( ) throws TYPE_1 { synchronized ( VAR_1 ) { if ( ( state ) == ( VAR_2 ) ) return false ; setState ( VAR_3 ) ; VAR_4 = false ; return true ; } },protected boolean METHOD_1 ( ) throws TYPE_1 { synchronized ( VAR_1 ) { if ( ( state ) == ( VAR_2 ) ) return false ; setState ( VAR_3 ) ; return true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6227
public synchronized void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; super . METHOD_1 ( ) ; } },public synchronized void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6228
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6230
protected void METHOD_1 ( TYPE_1 VAR_1 ) { intent = null ; super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6231
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( new TYPE_1 ( ) ) ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( new TYPE_1 ( ) ) ; VAR_1 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete Invocation']",6232
private void METHOD_1 ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_4 = null ; METHOD_2 ( ) ; new TYPE_1 ( ) . execute ( ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; METHOD_2 ( ) ; new TYPE_1 ( ) . execute ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6233
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_1 . METHOD_2 ( event ) ; } if ( VAR_3 . METHOD_3 ( event ) ) { return true ; } return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( VAR_3 . METHOD_3 ( event ) ) { return true ; } return false ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6234
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6235
"public void METHOD_1 ( android.view.View view , final int position ) { VAR_1 = VAR_2 . get ( position ) . METHOD_2 ( ) ; VAR_3 = STRING_1 ; METHOD_3 ( STRING_1 , VAR_2 . get ( position ) . METHOD_2 ( ) ) ; }","public void METHOD_1 ( android.view.View view , final int position ) { METHOD_3 ( STRING_1 , VAR_2 . get ( position ) . METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6236
public void METHOD_1 ( int VAR_1 ) { if ( this . METHOD_2 ( ) ) { value = ( VAR_2 ) ? INT_1 : - INT_1 ; } else { value = 0 ; } this . VAR_3 = VAR_1 ; },public void METHOD_1 ( ) { if ( this . METHOD_2 ( ) ) { value = ( VAR_2 ) ? INT_1 : - INT_1 ; } else { value = 0 ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6237
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; java.lang.System.exit ( 0 ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6238
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6239
public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; if ( ( VAR_1 ) < 0 ) VAR_1 = 0 ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6240
public synchronized void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( -- ( VAR_2 ) ) == 0 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_3 = false ; VAR_4 . info ( STRING_1 ) ; } },public synchronized void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( -- ( VAR_2 ) ) == 0 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_4 . info ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6241
"public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 = true ; METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_3 this . METHOD_3 ( ) ; } } ) ; }","public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { VAR_3 this . METHOD_3 ( ) ; } } ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6243
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6244
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6245
"protected void METHOD_1 ( java.lang.String state ) { VAR_1 = state ; VAR_2 = state ; VAR_3 = TYPE_1 . METHOD_2 ( this ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( STRING_1 , state ) ; VAR_4 . METHOD_5 ( ) ; }","protected void METHOD_1 ( java.lang.String state ) { VAR_1 = state ; VAR_3 = TYPE_1 . METHOD_2 ( this ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( STRING_1 , state ) ; VAR_4 . METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6246
"public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . get ( VAR_3 , STRING_1 , new java.lang.String [ 0 ] ) . set ( VAR_1 ) ; VAR_4 . METHOD_4 ( ) ; }","public static void METHOD_1 ( ) { VAR_2 . get ( VAR_3 , STRING_1 , new java.lang.String [ 0 ] ) . set ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6247
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; VAR_3 = new TYPE_3 ( METHOD_3 ( ) . getString ( VAR_4 ) . toUpperCase ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",6248
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 = VAR_2 . METHOD_2 ( STRING_2 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6249
private void METHOD_1 ( android.content.Context context ) { VAR_1 = ( context . METHOD_2 ( ) . METHOD_3 ( ) ) + STRING_1 ; },private void METHOD_1 ( android.content.Context context ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6250
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( new TYPE_1 ( ) ) ; METHOD_5 ( 0.0F ) ; METHOD_6 ( 0.0F ) ; VAR_2 = 0 ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( new TYPE_1 ( ) ) ; METHOD_5 ( 0.0F ) ; METHOD_6 ( 0.0F ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6251
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 = VAR_3 = VAR_4 . x ; VAR_5 . height = VAR_6 . height = VAR_4 . y ; VAR_1 . METHOD_3 ( this , VAR_7 ) ; VAR_8 . METHOD_4 ( VAR_9 ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_3 = VAR_4 . x ; VAR_6 . height = VAR_4 . y ; VAR_1 . METHOD_3 ( this , VAR_7 ) ; }","['Move Assignment', 'Move Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6252
public void METHOD_1 ( java.lang.String title ) { VAR_1 = title ; },public void METHOD_1 ( java.lang.String title ) { this . title = title ; },"['Update FieldWrite', 'Insert ThisAccess']",6253
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = new TYPE_1 ( ) ; VAR_5 = true ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6254
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = STRING_1 + ( METHOD_2 ( ) . getString ( VAR_2 ) ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = new TYPE_1 [ ] { VAR_8 } ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = new TYPE_1 [ ] { VAR_8 } ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",6255
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . getData ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6256
void METHOD_1 ( long VAR_1 ) { ( VAR_2 ) ++ ; },void METHOD_1 ( long VAR_1 ) { },"['Delete FieldWrite', 'Delete UnaryOperator']",6257
"public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { if ( ( VAR_1 ) == true ) { VAR_2 = STRING_1 ; } TYPE_2 . METHOD_1 ( VAR_2 ) ; }","public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { if ( VAR_1 = true ) { VAR_2 = STRING_1 ; } TYPE_2 . METHOD_1 ( VAR_2 ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator']",6258
public void METHOD_1 ( ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6259
public void METHOD_1 ( TYPE_1 state ) { VAR_1 = true ; VAR_2 = ( ( TYPE_2 ) ( state ) ) . VAR_3 ; VAR_4 = ( ( TYPE_2 ) ( state ) ) . VAR_5 ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 state ) { VAR_2 = ( ( TYPE_2 ) ( state ) ) . VAR_3 ; VAR_4 = ( ( TYPE_2 ) ( state ) ) . VAR_5 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6260
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , getString ( VAR_3 ) ) . show ( ) ; METHOD_4 ( VAR_4 ) ; this . METHOD_5 ( ) ; VAR_5 = true ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 , getString ( VAR_3 ) ) . show ( ) ; METHOD_4 ( VAR_4 ) ; this . METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6262
public void METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 == 0 ) { this . VAR_1 = INT_1 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.Long VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6264
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( ) ; VAR_4 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6265
public synchronized void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_3 = false ; VAR_4 = null ; },public synchronized void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6267
"private static TYPE_1 METHOD_1 ( ) { return ( ! ( TYPE_2 . METHOD_2 ( ) ) ) && ( ( VAR_1 ) != null ) ? new TYPE_1 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) : VAR_2 ; }","private static TYPE_1 METHOD_1 ( ) { return ( ! ( TYPE_2 . METHOD_2 ( ) ) ) && ( ( VAR_1 ) != null ) ? VAR_2 = new TYPE_1 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) : VAR_2 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall']",6269
public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . id = id ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_2 . message = message ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; return VAR_1 ; },public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_2 . message = message ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6271
"public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . getString ( VAR_2 ) , STRING_1 ) ; VAR_3 = null ; TYPE_2 . METHOD_3 ( ) ; }","public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . getString ( VAR_2 ) , STRING_1 ) ; TYPE_2 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6272
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6273
protected final void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = true ; this . METHOD_2 ( ) ; },protected final void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; this . METHOD_2 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",6274
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 , STRING_2 ) ; VAR_5 = TYPE_1 . METHOD_2 ( VAR_6 , STRING_3 ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6275
public TYPE_1 id ( java.lang.String id ) { this . VAR_1 = id ; this . VAR_2 . METHOD_1 ( id ) ; return ( ( TYPE_1 ) ( this ) ) ; },public TYPE_1 id ( java.lang.String id ) { this . VAR_2 . METHOD_1 ( id ) ; return ( ( TYPE_1 ) ( this ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6276
public void METHOD_1 ( ) { VAR_1 = true ; if ( VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; if ( VAR_4 ) VAR_5 . METHOD_4 ( STRING_1 ) ; } VAR_1 = false ; },public void METHOD_1 ( ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6277
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) < 0 ) throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; VAR_3 = true ; },public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) < 0 ) throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6278
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; TYPE_2 . METHOD_4 ( STRING_2 ) ; VAR_2 = new TYPE_3 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_5 ( STRING_2 ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; TYPE_2 . METHOD_4 ( STRING_2 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6279
private void METHOD_1 ( ) { VAR_1 = 0L ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = 0L ; },private void METHOD_1 ( ) { VAR_1 = 0L ; VAR_2 = STRING_1 ; VAR_4 = 0L ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6280
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6281
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; VAR_3 = null ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = null ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6282
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getView ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 = false ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getView ( ) . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6283
"private void METHOD_1 ( float VAR_1 ) { VAR_2 = true ; if ( VAR_1 > ( VAR_3 ) ) { METHOD_2 ( true , true ) ; } else { VAR_4 = false ; METHOD_3 ( ( - ( VAR_5 ) ) , VAR_6 ) ; } }","private void METHOD_1 ( float VAR_1 ) { if ( VAR_1 > ( VAR_3 ) ) { METHOD_2 ( true , true ) ; } else { VAR_4 = false ; METHOD_3 ( ( - ( VAR_5 ) ) , VAR_6 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6284
public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; VAR_3 = false ; },public static void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6285
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . context = VAR_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6287
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; VAR_3 = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_4 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6288
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = name ; METHOD_2 ( VAR_1 ) ; },"['Update FieldRead', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6289
"public void METHOD_1 ( float VAR_1 , float VAR_2 ) { this . VAR_3 = 0 ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . startTime = TYPE_1 . METHOD_2 ( ) ; this . VAR_4 = true ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 ) { this . VAR_3 = 0 ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_4 = true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6290
protected void add ( final java.lang.CharSequence VAR_1 ) { VAR_2 . add ( VAR_1 ) ; length = - 1 ; VAR_3 = 0 ; },protected void add ( final java.lang.CharSequence VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",6291
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; ( ( android.widget.Button ) ( METHOD_4 ( VAR_2 ) ) ) . setText ( STRING_2 ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; ( ( android.widget.Button ) ( METHOD_4 ( VAR_2 ) ) ) . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6294
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( params ) == null ) return params = new java.util.ArrayList < > ( ) ; return params ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return params ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",6295
"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ; }","private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( ) , VAR_3 ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6296
public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6297
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , true ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_4 . getId ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this , true ) ; VAR_2 . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6298
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6299
"public void METHOD_1 ( java.util.List < TYPE_1 > list ) { VAR_1 = true ; VAR_2 = new java.util.HashMap < > ( ) ; for ( TYPE_1 c : list ) { VAR_3 . put ( VAR_4 . getName ( ) , c ) ; } }","public void METHOD_1 ( java.util.List < TYPE_1 > list ) { VAR_2 = new java.util.HashMap < > ( ) ; for ( TYPE_1 c : list ) { VAR_3 . put ( VAR_4 . getName ( ) , c ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6300
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = false ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6301
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . index = position ; VAR_1 . METHOD_2 ( VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6302
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = null ; VAR_3 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = null ; METHOD_3 ( TYPE_2 . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6303
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6304
public void METHOD_1 ( ) { try { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; } finally { VAR_3 = null ; METHOD_2 ( VAR_4 ) ; } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_1 ( ) ; } finally { VAR_3 = null ; METHOD_2 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6305
"public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 data ) { if ( ! ( METHOD_2 ( VAR_2 . split ( STRING_1 ) , data ) ) ) return false ; VAR_3 = METHOD_3 ( VAR_3 , VAR_4 ) ; return true ; }","public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 data ) { return METHOD_2 ( VAR_2 . split ( STRING_1 ) , data ) ; }","['Move Invocation', 'Delete UnaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Literal']",6306
"private void init ( ) { VAR_1 = java.lang.Thread . METHOD_1 ( ) . getId ( ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( true , false ) ; VAR_3 = TYPE_2 . METHOD_5 ( this ) ; }","private void init ( ) { VAR_1 = java.lang.Thread . METHOD_1 ( ) . getId ( ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( true , false ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",6307
"public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.Set < java.lang.String > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; return VAR_3 ; }","public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.Set < java.lang.String > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 , null , false , false , false ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; return VAR_3 ; }","['Update ConstructorCall', 'Move VariableRead', 'Insert Literal', 'Insert Literal', 'Insert Literal', 'Insert Literal', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6308
public void METHOD_1 ( ) { VAR_1 = new byte [ VAR_2 ] ; METHOD_2 ( 0 ) ; METHOD_3 ( 0 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 = new byte [ VAR_2 ] ; METHOD_2 ( 0 ) ; METHOD_3 ( 0 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6309
"protected void METHOD_1 ( TYPE_1 context , TYPE_2 operation , TYPE_2 VAR_1 ) throws TYPE_3 { if ( TYPE_4 . METHOD_2 ( context ) ) { context . METHOD_3 ( ) ; VAR_2 = true ; } }","protected void METHOD_1 ( TYPE_1 context , TYPE_2 operation , TYPE_2 VAR_1 ) throws TYPE_3 { if ( TYPE_4 . METHOD_2 ( context ) ) { context . METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6310
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6311
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! show ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; } VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! show ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6312
public void METHOD_1 ( ) { VAR_1 = state ; state = VAR_2 ; },public void METHOD_1 ( ) { state = VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6313
private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 = true ; VAR_4 . METHOD_4 ( ( ( VAR_4 . METHOD_5 ( ) ) + VAR_2 ) ) ; METHOD_6 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ( ( VAR_4 . METHOD_5 ( ) ) + VAR_2 ) ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6314
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_2 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6315
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 , INT_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( VAR_2 , VAR_3 , VAR_5 , VAR_6 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6316
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6317
private void METHOD_1 ( ) { ( VAR_1 ) ++ ; },private int METHOD_1 ( ) { return ++ ( VAR_1 ) ; },"['Update TypeReference', 'Insert Return', 'Update UnaryOperator', 'Move UnaryOperator']",6318
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6320
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; },private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6321
double METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = 0 ; VAR_3 = ( VAR_2 ) + ( VAR_1 ) ; return VAR_3 ; },double METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = ( VAR_2 ) + ( VAR_1 ) ; return VAR_3 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6322
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) . METHOD_1 ( ) ; VAR_2 = false ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_4 ( ) . METHOD_1 ( ) ; VAR_2 = false ; },"['Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6323
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6324
public void METHOD_1 ( java.lang.String message ) { this . status = true ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( java.lang.String message ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6325
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) && ( ! ( VAR_2 ) ) ) { out.write ( 0 ) ; out.write ( VAR_3 ) ; out.write ( VAR_3 ) ; out.write ( 0 ) ; VAR_2 = true ; } },private void METHOD_1 ( ) throws java.io.IOException { out.write ( 0 ) ; out.write ( VAR_3 ) ; out.write ( VAR_3 ) ; out.write ( 0 ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6327
"public void METHOD_1 ( java.lang.String id ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Boolean > ( ) ; } VAR_2 . put ( id , true ) ; }","public void METHOD_1 ( java.lang.String id ) { if ( ( VAR_1 ) != null ) { VAR_2 . put ( id , true ) ; } }","['Update BinaryOperator', 'Move Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6328
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6329
"public TYPE_1 METHOD_1 ( char c ) { buf = TYPE_2 . METHOD_2 ( buf , VAR_1 ) ; VAR_2 . put ( ( ( byte ) ( c ) ) ) ; return this ; }","public TYPE_1 METHOD_1 ( char c ) { TYPE_2 . METHOD_2 ( buf , VAR_1 ) ; VAR_2 . put ( ( ( byte ) ( c ) ) ) ; return this ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6330
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0.0F ; VAR_2 = 0.0F ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6331
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6333
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },['Delete ThisAccess'],6334
"public void METHOD_1 ( final TYPE_1 context , final TYPE_2 output ) throws TYPE_3 { this . output = output ; }","public void METHOD_1 ( final TYPE_1 context , final TYPE_2 output ) throws TYPE_3 { this . output = output ; this . context = context ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",6335
protected void METHOD_1 ( ) { this . VAR_1 = false ; },protected void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6336
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6337
public void METHOD_1 ( ) { if ( ( file ) != null ) { VAR_1 . delete ( ) ; file = null ; } },public void METHOD_1 ( ) { if ( ( file ) != null ) { VAR_1 . delete ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6338
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; this . VAR_2 = VAR_3 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6339
public void METHOD_1 ( java.lang.String name ) { this . VAR_1 = name ; },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },['Update FieldWrite'],6340
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_3 ) == null ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; } else if ( VAR_1 == null ) { VAR_3 = null ; VAR_4 = null ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 ) == null ) { VAR_3 = VAR_1 ; } else if ( VAR_1 == null ) { VAR_3 = null ; } },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6341
private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 p : VAR_1 ) { if ( ( p . METHOD_2 ( ) ) == ( VAR_2 ) ) { return true ; } } ( this . VAR_3 ) ++ ; return false ; },private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 p : VAR_1 ) { if ( ( p . METHOD_2 ( ) ) == ( VAR_2 ) ) { return true ; } } return false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",6342
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . height = INT_1 ; VAR_3 = INT_2 ; new TYPE_2 ( TYPE_3 . METHOD_1 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( TYPE_3 . METHOD_1 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6343
public TYPE_1 METHOD_1 ( ) { TYPE_1 a = METHOD_2 ( ) ; VAR_1 . name = name ; VAR_1 . fieldName = fieldName ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; return a ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 a = METHOD_2 ( ) ; VAR_1 . name = name ; VAR_4 = VAR_5 ; return a ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6344
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 = VAR_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6345
"public void METHOD_1 ( int VAR_1 , int height ) { this . VAR_2 = VAR_3 . METHOD_2 ( ) ; this . VAR_4 = VAR_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( int VAR_1 , int height ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6346
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6347
"public void METHOD_1 ( double x , double y , double VAR_1 ) { this . VAR_2 = x ; this . VAR_3 = y ; this . VAR_4 = VAR_1 ; }","public void METHOD_1 ( double x , double y , double VAR_1 ) { this . VAR_2 = x ; this . VAR_3 = y ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6348
public java.lang.Integer METHOD_1 ( ) { if ( ( state ) == null ) state = VAR_1 . getId ( ) ; return state ; },public java.lang.Integer METHOD_1 ( ) { return state ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6349
public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( long VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6350
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Move VariableRead', 'Delete Invocation']",6351
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = null ; },private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6352
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; result = new java.util.ArrayList < > ( ) ; VAR_2 = true ; VAR_3 = true ; getData ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_3 = true ; getData ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6353
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = ( this . VAR_1 = VAR_1 ) != null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; } this . VAR_2 = false ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Literal', 'Insert VariableRead', 'Move Literal', 'Move Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess', 'Delete BinaryOperator']",6354
private void METHOD_1 ( ) { TYPE_1 t = VAR_1 . get ( index ) ; VAR_2 . setText ( ( STRING_1 + ( VAR_3 ) ) ) ; VAR_4 = VAR_5 ; ( index ) ++ ; },private void METHOD_1 ( ) { TYPE_1 t = VAR_1 . get ( index ) ; VAR_2 . setText ( ( STRING_1 + ( VAR_3 ) ) ) ; ( index ) ++ ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6355
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( VAR_2 ) VAR_3 = true ; else VAR_3 = false ; } METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation']",6356
public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6357
public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = ( ( int ) ( VAR_1 - ( VAR_4 ) ) ) ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6358
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_2 ) ; VAR_3 = new TYPE_3 ( this ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",6359
"public void METHOD_1 ( int VAR_1 , int height , int VAR_2 ) { this . VAR_1 = VAR_1 ; this . height = height ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( int VAR_1 , int height ) { this . VAR_1 = VAR_1 ; this . height = height ; this . VAR_2 = VAR_2 ; }","['Insert FieldRead', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead']",6360
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6362
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = ( ( int ) ( VAR_1 * ( VAR_4 ) ) ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6363
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_2 = STRING_1 ; },public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6364
public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 = false ; },public void METHOD_1 ( ) throws java.io.IOException { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6365
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( ( a ) != null ) a . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_1 ( ) { METHOD_4 ( ) ; } } ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; if ( ( a ) != null ) a . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_1 ( ) { METHOD_4 ( ) ; } } ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6366
public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 . getId ( ) ) ; VAR_3 = null ; VAR_4 = false ; },public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 . getId ( ) ) ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6367
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 = false ; java.util.Collections.sort ( VAR_2 ) ; if ( VAR_4 . isEmpty ( ) ) { return null ; } return VAR_4 . get ( 0 ) ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( VAR_1 ) ; java.util.Collections.sort ( VAR_2 ) ; return VAR_4 . get ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If']",6368
public java.lang.Void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; return null ; },public java.lang.Void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6369
public void METHOD_1 ( ) throws java.io.IOException { if ( ( out ) != null ) { out . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { out . METHOD_2 ( ) ; out = null ; } } },public void METHOD_1 ( ) throws java.io.IOException { out . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { out . METHOD_2 ( ) ; } },"['Move Invocation', 'Move If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",6370
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( this ) ; VAR_3 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6371
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , false ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_5 . METHOD_5 ( VAR_3 ) ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , false ) ; VAR_2 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6372
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_4 = false ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6373
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; TYPE_5 . METHOD_2 ( STRING_1 , new TYPE_6 ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; TYPE_5 . METHOD_2 ( STRING_1 , new TYPE_6 ( ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6374
public void update ( float VAR_1 ) { if ( VAR_2 ) { VAR_3 . METHOD_1 ( VAR_4 ) ; } },public void update ( float VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_4 ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6375
public static synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public static synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6376
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( null ) ; VAR_2 = false ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( null ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6377
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.lang.StringBuilder ( VAR_3 . getString ( STRING_1 ) ) ; VAR_4 = VAR_3 . getBoolean ( STRING_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.lang.StringBuilder ( VAR_3 . getString ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6378
public void METHOD_1 ( float VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_2 ; METHOD_2 ( ) ; },public void METHOD_1 ( float VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",6379
public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = 0.0F ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6381
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( this . METHOD_2 ( VAR_1 ) ) { VAR_2 = - ( VAR_2 ) ; y = ( VAR_3 . y ) - ( height ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( this . METHOD_2 ( VAR_1 ) ) { VAR_2 = - ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6382
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = false ; VAR_4 . METHOD_2 ( false ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_5 , STRING_1 ) ; METHOD_4 ( VAR_6 , STRING_2 ) ; METHOD_4 ( VAR_7 , STRING_3 ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_4 . METHOD_2 ( false ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_5 , STRING_1 ) ; METHOD_4 ( VAR_6 , STRING_2 ) ; METHOD_4 ( VAR_7 , STRING_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6383
"public void METHOD_1 ( java.util.Map.Entry < java.util.List < TYPE_1 > , java.lang.String > VAR_1 ) { this . VAR_2 = VAR_3 . getValue ( ) ; this . VAR_4 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( this ) ; }",public void METHOD_1 ( java.util.List < TYPE_1 > VAR_4 ) { this . VAR_4 = VAR_4 ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( this ) ; },"['Update Parameter', 'Update TypeReference', 'Insert VariableRead', 'Move TypeReference', 'Delete TypeReference', 'Delete TypeReference', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete VariableRead', 'Delete Invocation']",6384
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6385
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",6386
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 . error ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; METHOD_3 ( ) ; }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = true ; METHOD_3 ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation']",6387
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_4 ( VAR_6 ) ; VAR_7 = VAR_1 . METHOD_4 ( VAR_8 ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_4 ( VAR_6 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6388
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_1 = null ; VAR_4 = null ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_3 = null ; VAR_1 = null ; VAR_4 = null ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6390
private void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; b = VAR_2 ; },private void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6391
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { if ( ( ( VAR_2 ) || ( ( VAR_3 ) != null ) ) || ( ( VAR_4 ) != null ) ) { VAR_1 = false ; } } return param ; },public TYPE_1 METHOD_1 ( ) { return param ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",6392
public void METHOD_1 ( int position ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( position ) ; },public void METHOD_1 ( int position ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( position ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6393
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( VAR_2 ) ; this . VAR_3 = true ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6394
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_2 = INT_1 ; },public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6395
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_1 ( VAR_1 ) ) ; ( VAR_3 ) ++ ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( new TYPE_1 ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6396
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( ) { this . VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6398
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = STRING_1 ; METHOD_4 ( ) ; VAR_2 = new TYPE_1 ( getActivity ( ) , VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 = STRING_1 ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6399
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 . setText ( ( ( VAR_4 . format ( VAR_5 ) ) + STRING_1 ) ) ; VAR_6 . setText ( null ) ; VAR_7 = VAR_8 ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 . setText ( ( ( VAR_4 . format ( VAR_5 ) ) + STRING_1 ) ) ; VAR_6 . setText ( null ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6400
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6401
"public void METHOD_1 ( java.lang.String result ) { VAR_1 . i ( VAR_2 , ( STRING_1 + result ) ) ; VAR_3 = result ; METHOD_2 ( VAR_3 ) ; METHOD_3 ( true ) ; METHOD_4 ( true ) ; }","public void METHOD_1 ( java.lang.String result ) { VAR_1 . i ( VAR_2 , ( STRING_1 + result ) ) ; METHOD_2 ( result ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",6402
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 class ) ; VAR_3 = new TYPE_3 ( VAR_1 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",6403
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6404
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = TYPE_4 . METHOD_5 ( STRING_1 ) ; VAR_3 = TYPE_4 . METHOD_5 ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = TYPE_4 . METHOD_5 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6405
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },private void METHOD_1 ( ) { VAR_4 = null ; VAR_6 = null ; VAR_3 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6407
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_3 ) == VAR_4 ) { VAR_5 = VAR_6 ; } if ( ( VAR_7 ) == VAR_4 ) { VAR_8 = VAR_9 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; }","['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6408
"public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_2 , false , false ) ; }","public void METHOD_1 ( ) { VAR_4 . METHOD_2 ( VAR_2 , false , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6409
public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = 1 ; VAR_3 = 0 ; VAR_4 = 1 ; VAR_5 = true ; VAR_6 = false ; VAR_7 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = 1 ; VAR_3 = 0 ; VAR_4 = 1 ; VAR_5 = true ; VAR_6 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6410
"public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( INT_1 , VAR_3 ) ; VAR_2 = null ; } VAR_4 . METHOD_3 ( TYPE_1 : : METHOD_1 ) ; }",public void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; VAR_4 . METHOD_3 ( TYPE_1 : : METHOD_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6412
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( true ) ; VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6414
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 = INT_1 ; VAR_5 = false ; VAR_6 = false ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 = INT_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6415
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { size = - 1 ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 . METHOD_2 ( VAR_5 . toString ( ) ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Throwable t ) { VAR_4 . METHOD_2 ( VAR_5 . toString ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6416
public void METHOD_1 ( TYPE_1 params ) { VAR_1 = params ; VAR_2 . METHOD_1 ( params ) ; },public void METHOD_1 ( TYPE_1 params ) { VAR_2 . METHOD_1 ( params ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6418
"public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . replace ( STRING_1 , ""\n"" ) . replace ( STRING_2 , ""\t"" ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . equals ( STRING_1 ) ) { this . VAR_1 = ""\n"" ; } else { this . VAR_1 = VAR_1 ; } }","['Insert If', 'Update Invocation', 'Move Invocation', 'Insert Block', 'Insert Block', 'Move Assignment', 'Insert Assignment', 'Move Literal', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",6420
"public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String filePath ) { this . VAR_3 = true ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . filePath = filePath ; }","public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String filePath ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . filePath = filePath ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6421
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; VAR_2 = event . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6422
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6423
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = - 1 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",6424
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( this ) ; },"['Insert ConstructorCall', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",6425
public void METHOD_1 ( double VAR_1 ) { VAR_2 = ( VAR_2 ) + VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",6426
"private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( VAR_3 , this ) ; VAR_2 = false ; } else TYPE_1 . METHOD_4 ( VAR_1 , STRING_2 ) ; }","private void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( VAR_3 , this ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",6428
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6429
"public static synchronized TYPE_1 METHOD_1 ( java.lang.Object ... message ) { TYPE_1 . METHOD_1 ( false , message ) ; VAR_1 = null ; return VAR_2 ; }","public static synchronized TYPE_1 METHOD_1 ( java.lang.Object ... message ) { TYPE_1 . METHOD_1 ( false , message ) ; return VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6430
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_2 = VAR_3 . getId ( ) ; ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) . METHOD_3 ( VAR_5 , 0 ) ; VAR_3 . setText ( STRING_1 ) ; return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) . METHOD_3 ( VAR_5 , 0 ) ; VAR_3 . setText ( STRING_1 ) ; return false ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6431
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 = TYPE_2 . METHOD_2 ( VAR_4 ) ; this . VAR_5 . add ( VAR_1 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { this . VAR_5 . add ( VAR_1 ) ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6432
"public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; VAR_7 = 0 ; }","public void METHOD_1 ( ) { VAR_1 = ""0"" ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6433
public void start ( ) { if ( null != ( VAR_1 ) ) { VAR_2 . start ( ) ; VAR_3 = false ; } },public void start ( ) { if ( null != ( VAR_1 ) ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6434
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( this ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6436
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6437
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6439
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 ) == null ) { VAR_3 = new java.util.HashMap < > ( ) ; } VAR_4 . put ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_4 . put ( VAR_1 , VAR_2 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6441
"public void METHOD_1 ( TYPE_1 value ) { VAR_1 . METHOD_2 ( null , value ) ; METHOD_3 ( value , false ) ; }","public void METHOD_1 ( TYPE_1 value ) { if ( METHOD_3 ( value , false ) ) { VAR_1 = value ; } }","['Insert If', 'Move Invocation', 'Insert Block', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",6442
"public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; setState ( VAR_2 ) ; TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( METHOD_3 ( ) ) ) ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; state = VAR_2 ; TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( METHOD_3 ( ) ) ) ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",6443
"public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; } }","public void METHOD_1 ( int VAR_1 ) { VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; }","['Move Assignment', 'Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6444
public void METHOD_1 ( TYPE_1 p ) { VAR_1 = position = p ; VAR_2 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 p ) { VAR_1 = p ; VAR_2 . add ( VAR_1 ) ; },"['Move Assignment', 'Move FieldWrite', 'Delete FieldWrite', 'Delete Assignment']",6445
public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( ( VAR_2 ) - 1 ) ) { VAR_1 += 1 ; } else { VAR_1 = 0 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) < ( VAR_2 ) ) { VAR_1 += 1 ; } },"['Update BinaryOperator', 'Move BinaryOperator', 'Move FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",6447
"public static TYPE_1 METHOD_1 ( java.util.Date date , java.lang.String name ) { if ( date == null ) { return null ; } VAR_1 = new TYPE_2 ( ) ; return new TYPE_1 ( date , name ) ; }","public static TYPE_1 METHOD_1 ( java.util.Date date , java.lang.String name ) { if ( date == null ) { return null ; } return new TYPE_1 ( date , name ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6448
"public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 , int data ) { this . data [ VAR_2 ] [ VAR_1 ] = data ; if ( ( VAR_3 ) < ( VAR_1 + 1 ) ) VAR_3 = VAR_1 + 1 ; return true ; }","public synchronized boolean METHOD_1 ( int VAR_1 , int VAR_2 , int data ) { this . data [ VAR_2 ] [ VAR_1 ] = data ; return true ; }","['Delete FieldRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6449
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; VAR_1 = null ; VAR_4 = null ; },['Update FieldWrite'],6451
public static TYPE_1 get ( ) { return VAR_1 ; },public static TYPE_1 get ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",6452
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_2 ) { } } },public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } catch ( TYPE_1 VAR_2 ) { } } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6453
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6454
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { long VAR_2 = VAR_3 . METHOD_2 ( this . METHOD_3 ( ) ) ; VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; } return VAR_1 ; }",public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeReference', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6455
public void start ( ) { VAR_1 = true ; VAR_2 = TYPE_1 . METHOD_1 ( ) ; },public void start ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6456
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) VAR_2 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { },"['Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Invocation']",6458
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_4 . METHOD_4 ( ) . METHOD_5 ( VAR_5 ) ; VAR_3 . METHOD_6 ( false ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",6459
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 . getBoolean ( STRING_1 , false ) ; if ( VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( 0 ) ; } else { VAR_3 . METHOD_2 ( VAR_5 ) ; } }",protected void METHOD_1 ( ) { VAR_3 . METHOD_2 ( VAR_5 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",6460
protected void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6461
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6462
"public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_4 , VAR_5 , VAR_6 ) ; METHOD_4 ( METHOD_5 ( ) ) ; }",public void METHOD_1 ( boolean VAR_1 ) { METHOD_4 ( METHOD_5 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6463
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) return this ; VAR_2 = ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_1 ( ) ; VAR_1 = true ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; return this ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6464
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = new TYPE_3 ( ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = new TYPE_3 ( ) ; this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6465
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 . execute ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . execute ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6466
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = METHOD_2 ( VAR_1 ) ; this . VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6468
public void init ( ) { if ( VAR_1 ) return ; else VAR_1 = true ; },public void init ( ) { },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6469
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { for ( TYPE_3 j : VAR_2 ) { VAR_3 = VAR_4 . get ( VAR_5 ) ; VAR_6 = VAR_4 . get ( VAR_7 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { for ( TYPE_3 j : VAR_2 ) { VAR_6 = VAR_4 . get ( VAR_7 ) ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6470
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_2 buffer ) { this . name = TYPE_3 . METHOD_2 ( buffer ) ; this . VAR_2 = ( VAR_3 . get ( ) ) != 0 ; this . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_2 buffer ) { this . name = TYPE_3 . METHOD_2 ( buffer ) ; this . METHOD_3 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",6471
protected void METHOD_1 ( ) { VAR_1 = true ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6472
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; int [ ] VAR_3 = METHOD_2 ( ) ; this . VAR_4 = VAR_3 [ 0 ] ; this . VAR_5 = VAR_3 [ 1 ] ; this . VAR_6 = VAR_7 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; int [ ] VAR_3 = METHOD_2 ( ) ; this . VAR_4 = VAR_3 [ 0 ] ; this . VAR_5 = VAR_3 [ 1 ] ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6473
"private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = true ; } android.content.Intent data = new android.content.Intent ( ) ; data . METHOD_2 ( VAR_3 , VAR_1 ) ; METHOD_3 ( VAR_4 , data ) ; }","private void METHOD_1 ( boolean VAR_1 ) { android.content.Intent data = new android.content.Intent ( ) ; data . METHOD_2 ( VAR_3 , VAR_1 ) ; METHOD_3 ( VAR_4 , data ) ; }","['Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6475
"public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return ; } if ( ( VAR_3 ) != null ) { VAR_4 = VAR_3 . METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return ; } METHOD_4 ( ) ; METHOD_5 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6476
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_1 ) > 0 ) { this . VAR_2 = false ; } else { this . VAR_2 = true ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6477
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = false ; VAR_5 = false ; METHOD_3 ( ) ; VAR_6 . METHOD_4 ( ) ; VAR_6 = null ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = false ; METHOD_3 ( ) ; VAR_6 . METHOD_4 ( ) ; VAR_6 = null ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6478
private void METHOD_1 ( TYPE_1 VAR_1 ) { result = 0 ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { result = 0 ; VAR_2 . setText ( STRING_1 ) ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6479
public void METHOD_1 ( TYPE_1 state ) { if ( state != null ) { VAR_1 . METHOD_2 ( state . METHOD_3 ( VAR_2 class . getName ( ) ) ) ; } },public void METHOD_1 ( TYPE_1 state ) { if ( state != null ) { VAR_1 = state . METHOD_3 ( VAR_2 class . getName ( ) ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",6480
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 context = new TYPE_1 ( STRING_1 ) ; VAR_1 = ( ( TYPE_2 ) ( context . METHOD_2 ( STRING_2 ) ) ) ; VAR_2 = ( ( TYPE_3 ) ( context . METHOD_2 ( STRING_3 ) ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 context = new TYPE_1 ( STRING_1 ) ; VAR_1 = ( ( TYPE_2 ) ( context . METHOD_2 ( STRING_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6481
"public void METHOD_1 ( android.view.View VAR_1 , int position , TYPE_1 item ) { VAR_2 = VAR_3 ; METHOD_2 ( ) . METHOD_3 ( item ) ; super . METHOD_1 ( VAR_1 , position , item ) ; }","public void METHOD_1 ( android.view.View VAR_1 , int position , TYPE_1 item ) { METHOD_2 ( ) . METHOD_3 ( item ) ; super . METHOD_1 ( VAR_1 , position , item ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6482
public void METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) throws TYPE_1 { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6483
"public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_2 ( getContext ( ) , VAR_2 , null ) ; if ( ( VAR_2 ) == null ) METHOD_2 ( ) ; return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) == null ) METHOD_2 ( ) ; return new TYPE_2 ( getContext ( ) , VAR_2 , null ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",6484
public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; VAR_2 = java.util.Calendar.getInstance ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6485
public void METHOD_1 ( ) { if ( VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ) { METHOD_3 ( false ) ; } else { METHOD_3 ( true ) ; } },public void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( VAR_3 ) ) { METHOD_3 ( false ) ; } else { METHOD_3 ( true ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6486
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6487
public java.util.List < TYPE_1 > METHOD_1 ( ) { VAR_1 = new TYPE_2 ( context ) ; java.util.List < TYPE_1 > VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_2 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_2 = VAR_1 . METHOD_2 ( ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6488
public TYPE_1 set ( TYPE_2 VAR_1 ) { super . set ( VAR_1 ) ; if ( VAR_1 . METHOD_1 ( VAR_2 ) ) { VAR_3 = VAR_4 . getString ( VAR_2 ) ; } else { VAR_3 = null ; } return this ; },public TYPE_1 set ( TYPE_2 VAR_1 ) { super . set ( VAR_1 ) ; if ( VAR_1 . METHOD_1 ( VAR_2 ) ) { VAR_3 = VAR_4 . getString ( VAR_2 ) ; } return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",6489
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6490
"public static void init ( int VAR_1 , int height ) { VAR_2 = VAR_1 / INT_1 ; VAR_3 = VAR_1 / INT_2 ; VAR_4 = ( VAR_1 / INT_3 ) - ( VAR_2 ) ; VAR_5 = VAR_1 / INT_3 ; }","public static void init ( int VAR_1 , int height ) { VAR_3 = VAR_1 / INT_2 ; VAR_4 = ( VAR_1 / INT_3 ) - ( VAR_2 ) ; VAR_5 = VAR_1 / INT_3 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6491
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( ) ; VAR_2 = new TYPE_3 ( this ) ; },private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_2 = new TYPE_3 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6492
public void replace ( ) { VAR_1 = false ; VAR_2 = - 1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; },public void replace ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",6493
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; if ( ! ( status ) ) ( VAR_4 ) ++ ; METHOD_2 ( ) ; VAR_5 = TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; METHOD_2 ( ) ; VAR_5 = TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",6495
private void update ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( null ) ; VAR_1 = false ; },private void update ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6496
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != true ) { setState ( VAR_1 ) ; METHOD_3 ( true ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != true ) { state = VAR_1 ; METHOD_3 ( true ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",6497
private void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; VAR_3 = true ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = false ; VAR_8 . setText ( STRING_1 ) ; },private void METHOD_1 ( ) { VAR_2 = false ; VAR_3 = true ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_8 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6499
private void METHOD_1 ( ) { VAR_1 = false ; if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_2 . getId ( ) ) ; } },private void METHOD_1 ( ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_2 . getId ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6500
public void METHOD_1 ( ) { if ( VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; } VAR_3 . METHOD_1 ( VAR_4 ) ; VAR_4 = new int [ INT_1 ] [ INT_2 ] ; VAR_2 = 0 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_2 ) ) ) ; } VAR_3 . METHOD_1 ( VAR_4 ) ; VAR_4 = new int [ INT_1 ] [ INT_2 ] ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6501
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . getContext ( ) . METHOD_2 ( ) . getName ( ) ; return new TYPE_1 ( ) ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6502
public void execute ( ) { VAR_1 = true ; METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; },public void execute ( ) { METHOD_1 ( VAR_2 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6503
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6504
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( VAR_2 ) ) { VAR_3 = VAR_2 ; } else if ( VAR_1 >= 0 ) { VAR_3 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",6505
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",6507
private void METHOD_1 ( ) { p . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( p ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = true ; },private void METHOD_1 ( ) { p . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( p ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6508
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = 0 ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { VAR_2 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6509
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ( VAR_2 . toString ( ) ) + ( METHOD_2 ( ) ) ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6510
public void METHOD_1 ( boolean b ) { VAR_1 = true ; VAR_2 = b ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6511
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6512
"private void METHOD_1 ( TYPE_1 start , TYPE_1 end ) { end . METHOD_2 ( VAR_1 ) ; end . METHOD_3 ( start . METHOD_4 ( ) , start . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; }","private void METHOD_1 ( TYPE_1 start , TYPE_1 end ) { end . METHOD_2 ( VAR_1 ) ; end . METHOD_3 ( start . METHOD_4 ( ) , start . METHOD_5 ( ) ) ; VAR_2 = VAR_3 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6513
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { first = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6514
void start ( ) { if ( VAR_1 ) { METHOD_1 ( ) ; VAR_1 = false ; } else { VAR_2 . METHOD_2 ( ) ; } },void start ( ) { METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",6515
public void METHOD_1 ( java.lang.String result ) { METHOD_2 ( ) ; VAR_1 . setText ( result ) ; VAR_2 = true ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String result ) { METHOD_3 ( ) ; },"['Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6516
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; METHOD_2 ( ) ; if ( null != ( this . VAR_5 ) ) { this . VAR_5 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; if ( null != ( this . VAR_5 ) ) { this . VAR_5 . METHOD_3 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",6517
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 VAR_3 = new TYPE_2 ( INT_1 , INT_1 ) ; VAR_4 = VAR_5 . get ( VAR_6 . toString ( ) ) ; VAR_7 = null ; }","protected void METHOD_1 ( ) { VAR_2 = true ; VAR_4 = new TYPE_2 ( INT_1 , INT_1 ) ; }","['Insert Assignment', 'Move FieldWrite', 'Move ConstructorCall', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6518
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; VAR_3 . set ( null ) ; METHOD_2 ( ) ; VAR_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ; } },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_3 . set ( null ) ; METHOD_2 ( ) ; VAR_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ; },"['Move Invocation', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6519
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getBoolean ( STRING_1 ) ; getData ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getData ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6520
public int METHOD_1 ( ) { if ( ( VAR_1 ) < INT_1 ) { this . VAR_2 = this . VAR_3 ; return 0 ; } else { return ( this . VAR_3 ) - ( this . VAR_2 ) ; } },public int METHOD_1 ( ) { return this . VAR_3 ; },"['Move Return', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete Block', 'Delete If']",6521
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6522
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( null , null , null ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_4 ( INT_2 ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6523
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = false ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6524
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( null != ( VAR_3 ) ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6525
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } VAR_4 = false ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6526
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 ) ; } METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( true ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",6527
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 > ( VAR_2 ) ) { METHOD_2 ( ( VAR_1 - ( VAR_2 ) ) ) ; VAR_2 = 0 ; } else { VAR_2 = ( VAR_2 ) - VAR_1 ; } },public void METHOD_1 ( double VAR_1 ) { VAR_2 = ( VAR_2 ) - VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6528
"public void delete ( final byte [ ] key ) { if ( ( VAR_1 ) != null ) { boolean VAR_2 = VAR_3 . delete ( this , key , 0 , false ) ; if ( VAR_2 ) { VAR_1 = null ; } } }","public void delete ( final byte [ ] key ) { if ( ( VAR_1 ) != null ) { VAR_3 . delete ( this , key , 0 , false ) ; } }","['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6529
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_3 ) ( view . METHOD_2 ( VAR_5 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_4 = ( ( TYPE_3 ) ( view . METHOD_2 ( VAR_5 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6530
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6531
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , new TYPE_3 ( ) ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",6532
public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_2 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6533
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; if ( ( VAR_3 ) == 0 ) { METHOD_2 ( VAR_1 ) ; } VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",6534
public void remove ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( ) ; } VAR_2 = VAR_3 ; ( size ) -- ; if ( ( size ) == 0 ) { METHOD_1 ( ) ; } VAR_1 = false ; },public void remove ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( ) ; } VAR_2 = VAR_3 ; VAR_1 = false ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Block', 'Delete If']",6535
"protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; VAR_4 = VAR_1 ; TYPE_3 VAR_5 = METHOD_4 ( METHOD_5 ( ) ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; }","protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_3 VAR_5 = METHOD_4 ( METHOD_5 ( ) ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6536
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { VAR_5 = false ; return false ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6537
"public void METHOD_1 ( TYPE_1 VAR_1 , int size ) { this . VAR_1 = VAR_1 ; this . size = size ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int size ) { }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6538
public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } else { VAR_1 += step ; } METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6540
"public void METHOD_1 ( java.lang.String name , boolean VAR_1 ) { this . VAR_2 = TYPE_1 . METHOD_2 ( name ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( java.lang.String name , boolean VAR_1 ) { this . VAR_2 = TYPE_1 . METHOD_2 ( name ) ; this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation']",6541
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; ( VAR_3 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6542
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) ++ ) , VAR_2 , VAR_2 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) ++ ) , ( ( VAR_2 ) ++ ) , ( ( VAR_2 ) ++ ) ) ; }","['Insert UnaryOperator', 'Insert UnaryOperator', 'Insert FieldWrite', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess']",6543
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , url ) ; VAR_4 = VAR_3 ; VAR_5 = url ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , url ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6544
"void METHOD_1 ( ) { this . VAR_1 = true ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6545
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6546
public java.lang.String METHOD_1 ( ) { this . VAR_1 = STRING_1 ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; return this . VAR_1 ; },public java.lang.String METHOD_1 ( ) { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6548
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = new TYPE_4 ( getActivity ( ) , VAR_7 ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6549
protected void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },['Update FieldWrite'],6550
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_2 = null ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( STRING_1 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6551
public void METHOD_1 ( ) { if ( VAR_1 ) { this . start ( ) ; } else { VAR_1 = true ; } },public void METHOD_1 ( ) { this . start ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6552
public void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = ( ( int ) ( VAR_1 ) ) ; } else throw new java.lang.NullPointerException ( STRING_1 ) ; },public void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( VAR_1 ) ; else throw new java.lang.NullPointerException ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",6553
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = 0 ; METHOD_2 ( ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( ) { VAR_2 = 0 ; METHOD_2 ( ) ; VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6554
public void METHOD_1 ( ) { VAR_1 = this ; VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) . info ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_1 = this ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) . info ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6556
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 * INT_1 ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( VAR_4 , VAR_4 ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( ( VAR_2 * INT_1 ) , ( VAR_2 * INT_1 ) ) ; } }","['Move BinaryOperator', 'Insert BinaryOperator', 'Insert VariableRead', 'Insert FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",6557
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . VAR_2 = VAR_3 . METHOD_3 ( ) ; TYPE_3 i = new TYPE_3 ( VAR_4 , VAR_5 class ) ; VAR_4 . METHOD_4 ( i ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeReference', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",6558
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 . setValue ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6559
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) ; height = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6560
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6561
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( 0 ) ; VAR_4 = 0 ; VAR_5 = false ; METHOD_5 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( 0 ) ; VAR_4 = 0 ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6562
public void METHOD_1 ( ) { VAR_1 = true ; if ( METHOD_2 ( ) ) VAR_2 = true ; else VAR_3 = true ; VAR_4 = 0 ; if ( ( VAR_5 . size ( ) ) > 0 ) VAR_6 = true ; },public void METHOD_1 ( ) { VAR_1 = true ; if ( METHOD_2 ( ) ) VAR_2 = true ; else VAR_3 = true ; VAR_4 = 0 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6563
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }",public void METHOD_1 ( int VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6564
private void METHOD_1 ( boolean start ) { VAR_1 = true ; if ( start ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },private void METHOD_1 ( boolean start ) { if ( start ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6565
public void METHOD_1 ( ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; context = null ; VAR_3 = true ; },public void METHOD_1 ( ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_3 ( ) ; context = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6567
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = null ; if ( ( VAR_5 ) == null ) { VAR_5 = new TYPE_2 ( VAR_6 ) ; } VAR_5 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; if ( ( VAR_5 ) == null ) { VAR_5 = new TYPE_2 ( VAR_6 ) ; } VAR_5 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6568
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; if ( ( null != ( VAR_3 ) ) && ( VAR_3 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( ) ; } VAR_3 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( ) ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6569
public void METHOD_1 ( ) { VAR_1 = INT_1 ; VAR_2 = VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = INT_1 ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment']",6570
"public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , METHOD_3 ( ) , VAR_1 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , METHOD_3 ( ) , VAR_1 ) ; METHOD_4 ( ) ; VAR_2 = null ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",6571
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6572
public void select ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; this . VAR_3 = TYPE_1 . METHOD_1 ( ) ; this . VAR_4 = VAR_5 ; this . VAR_6 = null ; },public void select ( ) { this . VAR_1 = STRING_1 + ( this . VAR_2 ) ; this . VAR_3 = TYPE_1 . METHOD_1 ( ) ; this . VAR_4 = VAR_5 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6573
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6575
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( this ) ; METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete VariableRead', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6576
"public void METHOD_1 ( java.lang.String name ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_3 = new TYPE_2 ( STRING_2 , VAR_2 ) ; VAR_4 = new TYPE_2 ( STRING_3 , VAR_2 ) ; } }",public void METHOD_1 ( java.lang.String name ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_3 = new TYPE_2 ( ) ; VAR_4 = new TYPE_2 ( ) ; } },"['Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert ConstructorCall', 'Move FieldWrite', 'Insert ConstructorCall', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6577
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 params = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; VAR_3 = VAR_2 ; VAR_4 = VAR_2 ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6578
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( 0 ) ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_5 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6579
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = new TYPE_1 ( this ) ; VAR_3 = TYPE_2 . METHOD_2 ( this ) . getBoolean ( VAR_4 , false ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; VAR_2 = new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6580
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; if ( ( this . VAR_3 ) == null ) this . VAR_3 = this . VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6581
private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6582
public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( VAR_1 ) ) ) ; } },public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = ( ( java.util.List < TYPE_1 > ) ( VAR_1 ) ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",6583
public void METHOD_1 ( int key ) { switch ( key ) { case VAR_1 : case VAR_2 : case VAR_3 : case VAR_4 : VAR_5 = VAR_6 ; VAR_7 = 1 ; break ; } },public void METHOD_1 ( int key ) { switch ( key ) { case VAR_1 : case VAR_2 : case VAR_3 : case VAR_4 : VAR_5 = VAR_6 ; break ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6584
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . add ( event ) ; },public void METHOD_1 ( TYPE_1 event ) { this . event = event ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6586
public void init ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = METHOD_1 ( ) ; VAR_5 = true ; VAR_6 = true ; },public void init ( ) { VAR_4 = METHOD_1 ( ) ; VAR_5 = true ; VAR_6 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6587
"public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { return new TYPE_1 ( ( ( VAR_3 ) + ( VAR_4 ) ) , VAR_5 ) ; } else { return METHOD_2 ( ) ; } }",public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { this . VAR_3 = ( VAR_3 ) + ( VAR_4 ) ; if ( VAR_5 ) this . VAR_2 = true ; } return this ; },"['Move Return', 'Insert ThisAccess', 'Insert Assignment', 'Insert If', 'Insert FieldWrite', 'Move BinaryOperator', 'Move FieldRead', 'Insert Block', 'Insert ThisAccess', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess', 'Delete ConstructorCall', 'Delete Return', 'Delete Block', 'Delete Invocation']",6588
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6589
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = false ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6590
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_4 ; this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6592
public static void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6593
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) . METHOD_3 ( ) ; VAR_4 = new TYPE_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6594
public void METHOD_1 ( float [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = METHOD_2 ( VAR_1 ) ; VAR_3 . put ( VAR_2 ) . position ( 0 ) ; },public void METHOD_1 ( float [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",6595
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_4 ( VAR_3 ) ; VAR_4 = METHOD_4 ( VAR_3 ) ; },private void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6596
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6597
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return null ; } else { VAR_1 = VAR_1 . METHOD_2 ( ) ; ( count ) -- ; return VAR_1 . METHOD_3 ( ) ; } },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return null ; } else { VAR_1 = VAR_1 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",6598
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ; ( VAR_2 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator']",6599
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( VAR_2 ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_4 = new TYPE_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6600
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 ; if ( VAR_1 > 0 ) { if ( VAR_1 > ( VAR_4 ) ) { VAR_3 = VAR_4 ; } else { VAR_3 = VAR_1 ; } } else { VAR_3 = 0 ; } },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 ; VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6601
public void init ( java.io.File VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_2 . METHOD_1 ( ) ; },public void init ( java.io.File VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",6602
public void METHOD_1 ( ) { ( VAR_1 ) -- ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6603
public void METHOD_1 ( byte [ ] content ) { this . content = content ; },public void METHOD_1 ( byte [ ] content ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6604
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) VAR_4 = 1 ; else VAR_4 = 0 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) VAR_4 = 1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",6605
public TYPE_1 METHOD_1 ( java.lang.String title ) { VAR_1 . METHOD_1 ( title ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String title ) { this . title = title ; return this ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6606
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getType ( ) ) == ( VAR_3 ) ) { int VAR_4 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; VAR_5 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getType ( ) ) == ( VAR_3 ) ) { int VAR_4 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6607
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; for ( int i = 0 ; i < ( VAR_2 . length ( ) ) ; i ++ ) { VAR_1 += STRING_2 ; } },private void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_2 . length ( ) ) ; i ++ ) { VAR_1 += STRING_2 ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6608
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = STRING_1 ; VAR_3 = STRING_2 + ( TYPE_1 . METHOD_2 ( ) ) ; METHOD_3 ( ) ; VAR_1 = true ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 = STRING_1 ; METHOD_3 ( ) ; VAR_1 = true ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment']",6609
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) && ( VAR_1 == ( VAR_3 ) ) ) { VAR_4 . info ( STRING_1 ) ; this . VAR_1 = VAR_5 ; } else { this . VAR_1 = VAR_1 ; } return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Move Assignment', 'Delete FieldRead', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6610
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_3 ) ; VAR_4 = 1 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6611
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6612
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this ) ; java.lang.System.out.println ( ( ( STRING_1 + ( this . METHOD_3 ( ) ) ) + STRING_2 ) ) ; this . VAR_2 = true ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( this ) ; java.lang.System.out.println ( ( ( STRING_1 + ( this . METHOD_3 ( ) ) ) + STRING_2 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6613
"public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( true ) ; TYPE_1 VAR_3 = VAR_2 ; VAR_2 = VAR_1 ; if ( ! ( METHOD_2 ( 0 , 0 ) ) ) { VAR_2 = VAR_3 ; } }",private void METHOD_1 ( ) { },"['Update Wra', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete LocalVariable', 'Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal', 'Delete Literal', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6614
"public synchronized void start ( ) { VAR_1 = true ; VAR_2 = new java.lang.Thread ( this , STRING_1 ) ; VAR_3 . start ( ) ; }",public synchronized void start ( ) { VAR_1 = true ; VAR_2 = new java.lang.Thread ( ) ; VAR_3 . start ( ) ; },"['Update ConstructorCall', 'Delete ThisAccess', 'Delete FieldRead']",6615
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) this . VAR_1 = VAR_2 . trim ( ) ; else this . VAR_1 = null ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6616
public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( METHOD_2 ( ) ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = getData ( ) ; VAR_4 = VAR_3 ; },public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( METHOD_2 ( ) ) ; VAR_2 = METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6617
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; } VAR_2 . METHOD_2 ( true ) ; METHOD_2 ( false ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( true ) ; METHOD_2 ( false ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Insert ConstructorCall', 'Insert VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess']",6618
void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; VAR_5 . setText ( STRING_4 ) ; },void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_5 . setText ( STRING_4 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6619
public void METHOD_1 ( final int VAR_1 ) { this . VAR_2 = VAR_1 ; },public void METHOD_1 ( final int VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6620
void METHOD_1 ( int [ ] VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = VAR_1 [ 0 ] ; VAR_3 = ( TYPE_1 . METHOD_2 ( ) ) - ( VAR_4 ) ; },void METHOD_1 ( int [ ] VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = VAR_1 [ 0 ] ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6621
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . select ( i ) ; VAR_1 . METHOD_3 ( i ) ; ( VAR_2 ) -- ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . select ( i ) ; VAR_1 . METHOD_3 ( i ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6622
public void METHOD_1 ( int value ) { if ( ( VAR_1 ) < value ) { VAR_1 = value ; VAR_2 = VAR_3 ; } },public void METHOD_1 ( int value ) { if ( ( VAR_1 ) < value ) { VAR_1 = value ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6623
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_2 . toString ( ) ; } else { this . VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_2 . toString ( ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6624
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; } VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6625
private java.lang.String METHOD_1 ( ) { VAR_1 = VAR_2 . size ( ) ; return ( ( ( ( VAR_3 ) + STRING_1 ) + ( VAR_4 ) ) + STRING_2 ) + ( VAR_1 ) ; },private java.lang.String METHOD_1 ( ) { return ( ( ( ( VAR_3 ) + STRING_1 ) + ( VAR_4 ) ) + STRING_2 ) + ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6626
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_3 . getString ( VAR_4 ) ) ; METHOD_3 ( false ) ; METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( VAR_6 , VAR_1 . METHOD_6 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_3 . getString ( VAR_4 ) ) ; METHOD_3 ( false ) ; METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( VAR_6 , VAR_1 . METHOD_6 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6627
public void METHOD_1 ( ) { this . VAR_1 = null ; try { this . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { this . VAR_1 = VAR_2 ; } synchronized ( this ) { this . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = null ; try { this . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_2 ) { VAR_1 = VAR_2 ; } synchronized ( this ) { this . METHOD_3 ( ) ; } },"['Delete ThisAccess', 'Delete ThisAccess']",6628
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",6629
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . remove ( VAR_6 ) ; VAR_7 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . remove ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6631
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = true ; VAR_5 . setText ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_4 = true ; VAR_5 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6632
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != ( VAR_1 . position ) ) { VAR_2 . METHOD_3 ( VAR_1 . position ) ; VAR_3 = VAR_4 ; } else if ( VAR_4 ) { METHOD_4 ( ) ; } },private void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_1 . position ) ; if ( VAR_4 ) { METHOD_4 ( ) ; } },"['Move Invocation', 'Move If', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6633
"public void METHOD_1 ( int VAR_1 ) { y = VAR_1 ; TYPE_1 p = VAR_2 . METHOD_2 ( new TYPE_1 ( x , y ) ) ; VAR_3 = VAR_4 . x ; VAR_5 = VAR_4 . y ; }",public void METHOD_1 ( int VAR_1 ) { y = VAR_1 ; },"['Delete TypeReference', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6634
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; VAR_1 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = 0 ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; VAR_1 = false ; VAR_3 = false ; VAR_4 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6637
public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( TYPE_1 context ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6638
public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = VAR_3 ; this . VAR_4 = true ; this . VAR_5 = false ; this . VAR_6 = false ; this . VAR_7 = false ; this . VAR_8 = false ; },public void METHOD_1 ( ) { VAR_1 = 0 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6639
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6640
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",6641
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . select ( 0 ) ; VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . select ( 0 ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6642
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 != 1 ) { VAR_2 = INT_1 / VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6643
public TYPE_1 METHOD_1 ( ) { this . value = TYPE_1 . METHOD_2 ( ) ; return this . value ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",6644
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = true ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6645
private void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = VAR_2 ; } else { VAR_3 = VAR_4 ; } },private int METHOD_1 ( int VAR_3 ) { if ( VAR_3 == ( VAR_2 ) ) { return VAR_4 ; } else { return VAR_2 ; } },"['Update TypeReference', 'Update Parameter', 'Update VariableRead', 'Insert Return', 'Insert Return', 'Move FieldRead', 'Move FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",6646
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6647
public void METHOD_1 ( ) { this . VAR_1 = null ; TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . execute ( VAR_4 ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . execute ( VAR_4 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6648
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( ! ( ( ( VAR_1 . METHOD_2 ( ) ) >= CHAR_1 ) && ( ( VAR_1 . METHOD_2 ( ) ) <= CHAR_2 ) ) ) { VAR_1 . METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( ( ( VAR_1 . METHOD_2 ( ) ) >= CHAR_1 ) && ( ( VAR_1 . METHOD_2 ( ) ) <= CHAR_2 ) ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6650
public synchronized void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( INT_1 ) ; },public synchronized void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( INT_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6652
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_3 . size ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 . size ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",6654
"public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; }","public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6655
"public void METHOD_1 ( int position , float VAR_1 , int VAR_2 ) { VAR_3 = VAR_2 ; }","public void METHOD_1 ( int position , float VAR_1 , int VAR_2 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6656
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = true ; VAR_4 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6657
private void METHOD_1 ( ) { try { java.lang.Long VAR_1 = number . METHOD_2 ( ) ; VAR_2 = java.lang.Long . METHOD_3 ( VAR_1 ) ; VAR_3 = java.lang.Long . METHOD_4 ( VAR_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_5 ( ) ; } },public void METHOD_1 ( ) { try { java.lang.Long VAR_1 = number . METHOD_2 ( ) ; VAR_3 = java.lang.Long . METHOD_4 ( VAR_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_5 ( ) ; } },"['Update Wra', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6658
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6659
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; VAR_3 = 0 ; VAR_4 = true ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_3 = 0 ; VAR_4 = true ; },"['Insert Literal', 'Delete FieldRead']",6660
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = new TYPE_3 ( STRING_1 , VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",6661
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; VAR_3 = true ; TYPE_1 . METHOD_2 ( STRING_1 , ( position + STRING_2 ) ) ; VAR_4 super . METHOD_3 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . remove ( position ) ; TYPE_1 . METHOD_2 ( STRING_1 , ( position + STRING_2 ) ) ; VAR_4 super . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6662
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; context = this ; VAR_1 = new TYPE_1 ( context ) ; VAR_2 = new TYPE_2 ( context ) ; VAR_3 = new TYPE_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; context = this ; VAR_2 = new TYPE_2 ( context ) ; VAR_3 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6663
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 == null ) { for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_4 = new TYPE_3 ( ) ; VAR_5 . execute ( VAR_3 ) ; } } }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 == null ) { for ( TYPE_1 VAR_3 : VAR_1 ) new TYPE_3 ( ) . execute ( VAR_3 ) ; } }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6664
public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6666
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 >= INT_1 ) { this . VAR_2 = INT_1 ; } else this . VAR_2 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6667
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = ( ( TYPE_4 ) ( getActivity ( ) ) ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",6668
public void METHOD_1 ( java.util.List < java.lang.Boolean > VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.Boolean > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",6669
"public void METHOD_1 ( TYPE_1 item , TYPE_2 state ) { METHOD_2 ( function . METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( VAR_2 . getName ( ) , this . state , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 item , TYPE_2 state ) { VAR_3 = this . state ; setState ( function . METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( VAR_2 . getName ( ) , this . state , VAR_3 ) ; }","['Insert Assignment', 'Update Invocation', 'Insert FieldWrite', 'Insert FieldRead', 'Insert ThisAccess']",6670
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( new TYPE_2 ( VAR_2 , getActivity ( ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( new TYPE_2 ( VAR_1 . METHOD_2 ( ) , getActivity ( ) ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",6672
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( ) ; VAR_2 = 0 ; new TYPE_1 ( METHOD_3 ( ) ) . execute ( STRING_1 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",6673
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = false ; METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6674
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6675
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_2 = this . VAR_3 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_3 = VAR_1 ; return this ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",6676
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = false ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6677
public void METHOD_1 ( java.lang.String string ) { this . string = string ; },public void METHOD_1 ( java.lang.String string ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6678
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( VAR_3 ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",6679
"public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_2 , VAR_4 . METHOD_3 ( ) ) ; return this ; }",public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 ; return this ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",6680
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( ) ; assertNotNull ( VAR_1 ) ; assertNotNull ( VAR_1 . METHOD_3 ( ) ) ; VAR_1 = METHOD_4 ( ) ; assertNotNull ( VAR_1 ) ; assertNotNull ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6681
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6682
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6683
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 . METHOD_2 ( ) ; VAR_3 . info ( STRING_1 ) ; },public void METHOD_1 ( ) { this . VAR_2 . METHOD_2 ( ) ; VAR_3 . info ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6684
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( false ) ; } VAR_3 . METHOD_2 ( false ) ; VAR_3 = VAR_1 ; VAR_3 . METHOD_2 ( true ) ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( false ) ; } VAR_3 . METHOD_2 ( false ) ; VAR_3 = VAR_1 ; VAR_3 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6685
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 . add ( new TYPE_2 ( ) ) ; },private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 . add ( new TYPE_2 ( ) ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert TypeReference', 'Delete FieldWrite', 'Delete Assignment']",6686
public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 = false ; this . VAR_3 = false ; },public void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_3 = false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6687
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_1 . METHOD_3 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_1 . METHOD_3 ( ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6688
public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 = ( VAR_2 ) % INT_1 ; VAR_3 = ( VAR_2 ) + ( VAR_4 ) ; VAR_5 = ( VAR_2 ) - ( VAR_4 ) ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; VAR_2 = ( VAR_2 ) % INT_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6689
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = new TYPE_2 ( ) ; VAR_3 . add ( METHOD_2 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_3 . add ( METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6690
public void METHOD_1 ( double VAR_1 ) { VAR_2 += VAR_1 ; if ( ( VAR_2 ) > ( VAR_3 ) ) { VAR_2 = VAR_3 ; } else if ( ( VAR_2 ) < 0 ) { VAR_2 = 0 ; } },public void METHOD_1 ( double VAR_1 ) { VAR_2 += VAR_1 ; if ( ( ( VAR_2 ) > ( VAR_3 ) ) || ( ( VAR_2 ) < 0 ) ) { VAR_2 = VAR_3 ; } },"['Move If', 'Insert BinaryOperator', 'Move Block', 'Move BinaryOperator', 'Move BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6691
synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( null != VAR_1 ) { this . VAR_1 = VAR_2 . toString ( ) ; } else { this . VAR_1 = STRING_1 ; } },synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_2 . toString ( ) ; },"['Move Assignment', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6692
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this ) ; METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_5 ) ) ) ; METHOD_5 ( VAR_4 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_5 ) ) ) ; METHOD_5 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",6693
public void METHOD_1 ( int state ) { VAR_1 = state != ( VAR_2 ) ; },public void METHOD_1 ( int state ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",6694
public void METHOD_1 ( ) throws java.lang.Exception { if ( value . METHOD_2 ( ) ) { VAR_1 . n = 0 ; } },public void METHOD_1 ( ) throws java.lang.Exception { if ( value . METHOD_2 ( ) ) { update ( ) ; } },"['Insert Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6695
public void METHOD_1 ( TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( context ) ) . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( state ) == ( VAR_4 ) ) { METHOD_4 ( ) ; state = VAR_4 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( context ) ) . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6696
"public void METHOD_1 ( float VAR_1 , float VAR_2 ) { VAR_3 = VAR_2 / INT_1 ; VAR_4 = VAR_1 / INT_1 ; VAR_5 = 0 ; VAR_6 = 0 ; }","public void METHOD_1 ( float VAR_1 , float VAR_2 ) { VAR_3 = VAR_2 / INT_1 ; VAR_4 = VAR_1 / INT_1 ; VAR_5 = VAR_4 ; VAR_6 = VAR_3 ; }","['Insert FieldRead', 'Insert FieldRead', 'Delete Literal', 'Delete Literal']",6697
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . start ( ) ; start = TYPE_1 . METHOD_2 ( ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( VAR_4 , INT_1 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6698
public synchronized void METHOD_1 ( ) { this . size += this . VAR_1 ; this . VAR_1 = 0 ; this . VAR_2 = 0 ; },public synchronized void METHOD_1 ( ) { this . size += this . VAR_1 ; this . VAR_1 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6699
public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = null ; } else { this . VAR_1 = new java.util.Date ( VAR_2 . getTime ( ) ) ; } },public void METHOD_1 ( java.util.Date VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete Literal', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6700
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . id ) == ( - 1 ) ) VAR_2 . id = id ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6702
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",6703
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = new java.util.ArrayList < > ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6704
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6705
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6706
private void METHOD_1 ( long VAR_1 ) { if ( VAR_1 != 0 ) { endTime = VAR_1 - ( VAR_2 ) ; } else { endTime = 0 ; } },private void METHOD_1 ( long VAR_1 ) { endTime = VAR_1 - ( VAR_2 ) ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6707
public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) return null ; if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_3 ( METHOD_4 ( ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete Invocation', 'Delete UnaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6708
private static void METHOD_1 ( ) { VAR_1 = new java.util.Scanner ( VAR_2 ) ; while ( true ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_3 ( ) ; } },private static void METHOD_1 ( ) { while ( true ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",6710
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = ( ( TYPE_4 ) ( getActivity ( ) ) ) ; METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( VAR_5 , VAR_2 , false ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",6711
public void METHOD_1 ( TYPE_1 VAR_1 ) { p = VAR_1 ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6713
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_2 = 0 ; this . count = new int [ INT_1 ] ; },public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; this . count = new int [ INT_1 ] ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6714
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = null ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",6715
public void add ( TYPE_1 value ) { TYPE_2 < TYPE_1 > append = new TYPE_2 < TYPE_1 > ( value ) ; VAR_1 . METHOD_1 ( append ) ; ( size ) ++ ; VAR_1 = VAR_1 . METHOD_2 ( ) ; },public void add ( TYPE_1 value ) { TYPE_2 < TYPE_1 > append = new TYPE_2 < TYPE_1 > ( value ) ; VAR_1 . METHOD_1 ( append ) ; ( size ) ++ ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6716
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; } VAR_3 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( this ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; VAR_1 . METHOD_2 ( this ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6717
"public static void init ( android.content.Context context , java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 = context ; TYPE_1 . METHOD_1 ( VAR_1 ) ; VAR_4 = VAR_2 ; }","public static void init ( android.content.Context context , java.lang.String VAR_1 ) { VAR_3 = context ; TYPE_1 . METHOD_1 ( VAR_1 ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6718
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6720
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 to ) { this . VAR_2 = to ; this . remove ( VAR_1 ) ; this . add ( to ) ; this . METHOD_2 ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 to ) { this . remove ( VAR_1 ) ; this . add ( to ) ; this . METHOD_2 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6723
public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 = VAR_1 ; VAR_1 = 0 ; } else { METHOD_2 ( VAR_2 ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 = VAR_1 ; METHOD_2 ( 0 ) ; } else { METHOD_2 ( VAR_2 ) ; } },"['Insert Invocation', 'Move Literal', 'Delete FieldWrite', 'Delete Assignment']",6724
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6725
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , 0 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }",public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6726
public boolean METHOD_1 ( java.lang.String query ) { VAR_1 = VAR_2 . trim ( ) ; new TYPE_1 ( VAR_1 ) . execute ( ) ; return true ; },public boolean METHOD_1 ( java.lang.String query ) { VAR_1 = query ; new TYPE_1 ( query ) . execute ( ) ; return true ; },"['Insert VariableRead', 'Update ConstructorCall', 'Insert VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead']",6727
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = new TYPE_3 ( this ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_2 = new TYPE_2 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",6728
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( java.lang.String.format ( VAR_1 , VAR_2 ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; } }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( java.lang.String.format ( VAR_1 , VAR_2 ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6729
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= ( VAR_2 ) ) || ( VAR_1 <= ( VAR_3 ) ) ) { this . VAR_4 = VAR_3 ; return ; } this . VAR_4 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= ( VAR_2 ) ) || ( VAR_1 <= ( VAR_3 ) ) ) { this . VAR_4 = VAR_3 ; } },"['Delete Return', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6730
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = 0 ; VAR_4 = 0 ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6731
public void METHOD_1 ( ) { context = TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( context ) ; },public void METHOD_1 ( ) { android.content.Context context = TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( context ) ; },"['Insert LocalVariable', 'Insert Assignment', 'Insert TypeReference', 'Move Invocation', 'Move FieldWrite', 'Insert ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6732
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; VAR_5 = new byte [ VAR_3 ] [ VAR_4 ] ; VAR_6 = new int [ VAR_3 ] [ VAR_4 ] ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; VAR_5 = new byte [ VAR_3 ] [ VAR_4 ] ; VAR_6 = new int [ VAR_3 ] [ VAR_4 ] ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",6733
"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { error = true ; android.content.Intent intent = new android.content.Intent ( VAR_4 ) ; METHOD_2 ( intent ) ; return false ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( VAR_2 == 1 ) { android.content.Intent intent = new android.content.Intent ( VAR_4 ) ; METHOD_2 ( intent ) ; } return false ; }","['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert VariableRead', 'Insert Literal', 'Move LocalVariable', 'Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6734
"private void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 = false ; return ; } VAR_3 = true ; VAR_4 = new java.lang.Thread ( VAR_5 ) ; VAR_6 . start ( ) ; }",private void METHOD_1 ( ) { VAR_3 = true ; VAR_4 = new java.lang.Thread ( VAR_5 ) ; VAR_6 . start ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",6735
"public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; i ++ ) { ( VAR_2 ) ++ ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 ) ; VAR_5 = VAR_3 ; } }","public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; i ++ ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 ) ; VAR_5 = VAR_3 ; } }","['Delete FieldWrite', 'Delete UnaryOperator']",6736
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; setState ( VAR_3 , 0 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; state = VAR_3 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",6737
public void METHOD_1 ( TYPE_1 msg ) { VAR_1 = VAR_2 ; METHOD_2 ( ) . METHOD_3 ( msg ) ; VAR_3 = TYPE_2 . METHOD_4 ( METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 msg ) { VAR_1 = VAR_2 ; METHOD_2 ( ) . METHOD_3 ( msg ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6738
"public void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; }",public void METHOD_1 ( ) { VAR_1 = true ; },"['Insert Literal', 'Delete TypeReference', 'Delete Parameter', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete ThisAccess', 'Delete VariableRead']",6740
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6741
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6742
public void METHOD_1 ( TYPE_1 < java.lang.Void > VAR_1 ) throws java.io.IOException { VAR_2 = VAR_1 ; METHOD_2 ( false ) ; },public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( false ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6743
public void METHOD_1 ( java.lang.Throwable t ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( java.lang.Throwable t ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6744
public synchronized void add ( float value ) { this . value += value ; this . VAR_1 = true ; this . VAR_2 = value == 0.0F ; },public synchronized void add ( float value ) { this . value += value ; this . VAR_1 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",6745
"public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 ) { VAR_2 = null ; for ( int i = 0 ; i <= ( size ) ; i ++ ) { values [ i ] . METHOD_1 ( context , VAR_1 ) ; } }","public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 ) { for ( int i = 0 ; i <= ( size ) ; i ++ ) { values [ i ] . METHOD_1 ( context , VAR_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6746
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = - 1 ; VAR_4 = 0 ; } super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = - 1 ; } super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6747
public void set ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_1 ( ) ) ) { this . VAR_1 = VAR_1 ; super . set ( VAR_1 ) ; } },public void set ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_1 ( ) ) ) { super . set ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6748
"public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; this . VAR_4 = true ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6749
public java.lang.Integer METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( this ) ; return VAR_2 ; },public java.lang.Integer METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",6750
public void update ( java.util.List < TYPE_1 > data ) { this . data . METHOD_1 ( ) ; this . data . METHOD_2 ( data ) ; METHOD_3 ( ) ; },public void update ( java.util.List < TYPE_1 > data ) { this . data = data ; METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6751
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; VAR_2 = VAR_1 . METHOD_4 ( ) ; } else { METHOD_5 ( VAR_3 ) ; } },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } else { METHOD_5 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6753
private void METHOD_1 ( ) { int index = ( ( VAR_1 ) - 1 ) % ( VAR_2 . length ) ; if ( index < 0 ) { index += VAR_2 . length ; } METHOD_2 ( index ) ; VAR_3 = false ; },private void METHOD_1 ( ) { int index = ( ( VAR_1 ) - 1 ) % ( VAR_2 . length ) ; if ( index < 0 ) { index += VAR_2 . length ; } METHOD_2 ( index ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6754
"public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( 0 , 0 ) ) ; this . VAR_1 . METHOD_4 ( this ) ; VAR_2 = false ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( 0 , 0 ) ) ; this . VAR_1 . METHOD_4 ( this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6755
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = true ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6756
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setEnabled ( true ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . setEnabled ( true ) ; new TYPE_1 ( ) . execute ( ) ; },"['Update Invocation', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",6757
public TYPE_1 METHOD_1 ( final TYPE_2 token ) { if ( token == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } this . token = token ; return this ; },public TYPE_1 METHOD_1 ( final TYPE_2 token ) { if ( token == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6758
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( ) ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",6759
"public TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 ) ; VAR_5 = VAR_6 ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( boolean VAR_1 ) { return new TYPE_2 ( VAR_3 , VAR_4 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",6760
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 . assertNotNull ( VAR_3 ) ; },public void METHOD_1 ( ) { VAR_2 . assertNotNull ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6761
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6762
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( STRING_1 ) ) ) { VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_1 ( VAR_2 ) ; } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6764
"public void METHOD_1 ( TYPE_1 name ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = null ; VAR_4 = false ; VAR_5 = false ; }","public void METHOD_1 ( TYPE_1 name ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 = null ; VAR_4 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6765
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > content ) { this . content . METHOD_2 ( ) ; this . content . METHOD_3 ( content ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > content ) { this . content = content ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6766
public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View view ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6767
"public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( TYPE_4 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . set ( VAR_2 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( TYPE_4 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) ) ; VAR_5 . set ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6768
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) [ VAR_1 ] [ VAR_2 ] = STRING_1 ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_4 = null ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) [ VAR_1 ] [ VAR_2 ] = STRING_1 ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6769
public void METHOD_1 ( ) { if ( ( ! ( VAR_1 ) ) && ( ( ( VAR_2 ) + 1 ) < ( TYPE_1 . METHOD_2 ( ) ) ) ) { METHOD_3 ( VAR_3 ) ; VAR_1 = true ; } METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6770
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; VAR_2 = true ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6771
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( this . context , this . VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; }",public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6772
private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; for ( TYPE_2 listener : this . VAR_3 ) { listener . METHOD_1 ( VAR_1 ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 listener : this . VAR_3 ) { listener . METHOD_1 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6773
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6774
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( false ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 = VAR_5 . getId ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( false ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6776
"public TYPE_1 METHOD_1 ( java.lang.String field , java.lang.String value ) { this . field = field ; this . VAR_1 = METHOD_2 ( value ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String field , java.lang.String value ) { this . field = field ; this . VAR_1 = value ; return this ; }","['Move VariableRead', 'Delete Invocation']",6777
public void METHOD_1 ( java.util.List < java.lang.String > list ) throws TYPE_1 { count = 0 ; },public void METHOD_1 ( java.util.List < java.lang.String > list ) throws TYPE_1 { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6778
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",6779
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6780
public void METHOD_1 ( ) { x = ( ( VAR_1 ) / INT_1 ) - ( ( VAR_2 ) / INT_1 ) ; y = ( VAR_3 . METHOD_2 ( ) ) - ( VAR_2 ) ; VAR_4 = VAR_5 = 1 ; },public void METHOD_1 ( ) { x = ( ( VAR_1 ) / INT_1 ) - ( ( VAR_2 ) / INT_1 ) ; y = ( VAR_3 . METHOD_2 ( ) ) - ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment']",6781
public java.lang.String execute ( ) throws java.lang.Exception { VAR_1 = STRING_1 ; return STRING_2 ; },public java.lang.String execute ( ) throws java.lang.Exception { return STRING_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6782
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_2 = null ; VAR_3 . get ( ) . METHOD_2 ( new TYPE_1 ( VAR_4 , VAR_1 ) , this ) ; }","public void METHOD_1 ( java.lang.Throwable VAR_1 ) { VAR_3 . get ( ) . METHOD_2 ( new TYPE_1 ( VAR_4 , VAR_1 ) , this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6783
"public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( getContext ( ) , ( ( VAR_2 ) + ( VAR_4 ) ) ) ; }",public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",6784
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6785
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; this . VAR_3 = null ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; METHOD_2 ( ) ; this . VAR_3 = null ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6786
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { ( VAR_2 ) ++ ; } else { ( VAR_3 ) ++ ; } VAR_4 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . add ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",6787
public void METHOD_1 ( TYPE_1 c ) { VAR_1 = VAR_2 . getText ( ) . toString ( ) ; },public void METHOD_1 ( TYPE_1 c ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6788
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6789
public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { VAR_2 = VAR_3 ; VAR_3 = 0 ; if ( ( ( VAR_4 ) - ( VAR_5 ) ) > VAR_1 ) { VAR_4 = ( VAR_4 ) - ( VAR_5 ) ; } },public void METHOD_1 ( int VAR_1 ) throws java.io.IOException { VAR_3 = 0 ; if ( ( ( VAR_4 ) - ( VAR_5 ) ) > VAR_1 ) { VAR_4 = ( VAR_4 ) - ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6790
public void execute ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_1 ( ) . METHOD_2 ( ) ; },public void execute ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( ) . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6791
public void METHOD_1 ( int position ) { VAR_1 = position ; VAR_2 . METHOD_2 ( position ) ; },public void METHOD_1 ( int position ) { VAR_2 . METHOD_2 ( position ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6792
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) VAR_2 = METHOD_3 ( ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) METHOD_3 ( ) ; return VAR_1 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",6793
public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } VAR_1 = null ; } catch ( java.io.IOException VAR_2 ) { throw new TYPE_1 ( VAR_2 ) ; } },public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_2 ) { throw new TYPE_1 ( VAR_2 ) ; } },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6795
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; i = 0 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6797
public void METHOD_1 ( int index ) { VAR_1 . remove ( index ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_2 ) ; },public TYPE_1 METHOD_1 ( int index ) { return VAR_1 . remove ( index ) ; },"['Update TypeReference', 'Insert Return', 'Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6798
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 , INT_2 ) ; TYPE_1 . METHOD_2 ( INT_1 , 1 ) ; VAR_1 = 0 ; index = 0 ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 , INT_2 ) ; TYPE_1 . METHOD_2 ( INT_1 , 1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6799
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 . start ( ) ; },public void METHOD_1 ( ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6800
public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_2 ) <= 0 ) VAR_3 = false ; else VAR_4 = INT_1 / ( VAR_2 ) ; },public void METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 ; VAR_4 = INT_1 / ( VAR_2 ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6801
public void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( this . VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",6802
public void METHOD_1 ( java.lang.String name ) { this . name = name ; if ( VAR_1 . isEmpty ( VAR_2 ) ) { VAR_2 = name ; } },public void METHOD_1 ( java.lang.String name ) { this . name = name ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6803
"public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = FLOAT_1 ; this . VAR_2 = FLOAT_2 ; this . VAR_3 = - 1 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = FLOAT_1 ; VAR_2 = FLOAT_2 ; VAR_3 = - 1 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess']",6804
public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; VAR_1 = new TYPE_2 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6805
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( ) ; },protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_4 = VAR_1 ; VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6806
public java.util.ArrayList < java.util.ArrayList < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_2 ; METHOD_3 ( ) ; return VAR_2 ; },public java.util.ArrayList < java.util.ArrayList < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6807
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; METHOD_3 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6808
public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( VAR_2 . getId ( ) ) ; VAR_3 . remove ( VAR_4 ) ; VAR_5 = true ; } catch ( java.lang.Exception VAR_6 ) { VAR_7 . error ( VAR_6 ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( VAR_2 . getId ( ) ) ; VAR_3 . remove ( VAR_4 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_7 . error ( VAR_6 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6809
"public void METHOD_1 ( int startTime , int VAR_1 ) { this . startTime = startTime ; this . VAR_1 = VAR_1 ; this . VAR_1 = ( ( int ) ( VAR_1 - ( 1 / ( VAR_2 . METHOD_2 ( ) ) ) ) ) ; }","public void METHOD_1 ( int startTime , int endTime ) { this . startTime = startTime ; this . endTime = endTime ; }","['Update Parameter', 'Update FieldWrite', 'Update VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",6810
public void execute ( ) { METHOD_1 ( ) ; VAR_1 = false ; },public void execute ( ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6811
public void METHOD_1 ( android.view.View view ) { if ( position != ( VAR_1 ) ) { VAR_2 = true ; VAR_1 = position ; METHOD_2 ( ) ; METHOD_3 ( ) ; } VAR_3 . METHOD_4 ( position ) ; METHOD_5 ( position ) ; },public void METHOD_1 ( android.view.View view ) { VAR_3 . METHOD_4 ( position ) ; METHOD_5 ( position ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",6812
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = STRING_2 ; VAR_5 = false ; VAR_6 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = STRING_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6813
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 = STRING_2 ; this . VAR_3 = STRING_3 ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 = STRING_2 ; METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6814
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; this . METHOD_2 ( ) ; this . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_4 != null ) { VAR_4 . METHOD_5 ( this ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_4 != null ) { VAR_4 . METHOD_5 ( this ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation']",6815
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < > ( ) ; for ( java.lang.String VAR_2 : VAR_3 . METHOD_2 ( ) ) { VAR_4 . add ( VAR_2 ) ; } },private void METHOD_1 ( ) { for ( java.lang.String VAR_2 : VAR_3 . METHOD_2 ( ) ) { VAR_4 . add ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6816
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; this . VAR_4 . setValue ( STRING_1 ) ; this . VAR_5 . setValue ( STRING_1 ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_3 = TYPE_1 . METHOD_2 ( ) ; this . VAR_4 . setValue ( STRING_1 ) ; this . VAR_5 . setValue ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6817
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6818
private void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . METHOD_1 ( ) ; },private void METHOD_1 ( ) { this . VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",6819
private void METHOD_1 ( TYPE_1 event ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; } catch ( TYPE_2 VAR_3 ) { } },private void METHOD_1 ( TYPE_1 event ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6820
public TYPE_1 METHOD_1 ( ) { return VAR_1 = VAR_2 . METHOD_1 ( ) ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Insert FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6821
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_4 . add ( VAR_3 ) ; VAR_5 . add ( VAR_3 ) ; }",public void METHOD_1 ( java.lang.String VAR_3 ) { VAR_4 . add ( VAR_3 ) ; },"['Update Parameter', 'Insert VariableRead', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6822
public void handle ( TYPE_1 event ) { if ( ( event . METHOD_1 ( ) ) == ( VAR_1 ) ) { if ( ! ( VAR_2 ) ) VAR_2 = true ; else VAR_3 = ! ( VAR_3 ) ; } },public void handle ( TYPE_1 event ) { if ( ( event . METHOD_1 ( ) ) == ( VAR_1 ) ) VAR_2 = true ; },"['Move If', 'Move BinaryOperator', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6823
public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; view ( ) ; VAR_1 = VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; return VAR_4 ; },public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; return view ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete FieldRead']",6824
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",6825
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . start ( ) ; },public void METHOD_1 ( ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6826
"public void METHOD_1 ( int VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 , java.lang.String VAR_3 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; VAR_6 = VAR_3 ; }",public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_2 ) { VAR_5 = VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6827
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",6828
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 = null ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6829
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { ++ ( VAR_2 ) ; VAR_3 . add ( VAR_1 ) ; if ( VAR_4 . equals ( VAR_5 ) ) { VAR_6 = true ; METHOD_2 ( ) ; } },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { ++ ( VAR_2 ) ; VAR_3 . add ( VAR_1 ) ; if ( VAR_4 . equals ( VAR_5 ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6830
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6831
private void METHOD_1 ( ) { synchronized ( this ) { VAR_1 = false ; METHOD_2 ( ) ; } },private void METHOD_1 ( ) { synchronized ( this ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6832
public static void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_2 ) ; },public static void init ( ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6833
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ( STRING_1 + ( VAR_1 . METHOD_3 ( STRING_2 ) ) ) ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ( STRING_1 + ( VAR_1 . METHOD_3 ( STRING_2 ) ) ) ) ; VAR_4 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6834
public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; VAR_2 . add ( STRING_3 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6835
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) == 0 ) this . VAR_2 = VAR_1 / INT_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6836
protected void METHOD_1 ( ) { this . VAR_1 . add ( VAR_2 . data ( this . VAR_3 ) ) ; this . VAR_3 = STRING_1 ; },protected void METHOD_1 ( ) { this . VAR_1 . add ( VAR_2 . data ( this . VAR_3 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6837
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( STRING_1 ) ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6838
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) ++ ) > INT_1 ) VAR_2 = 0 ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . add ( 0 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( 0 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",6839
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6840
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6841
protected TYPE_1 METHOD_1 ( ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",6843
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( ) ) { VAR_3 = 0 ; VAR_2 . METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_4 , VAR_3 ) ) ; } this . state = VAR_5 ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; this . state = VAR_5 ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",6845
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 . METHOD_2 ( ) ) == null ) { VAR_3 . setText ( STRING_1 ) ; return ; } VAR_3 . setText ( VAR_4 . METHOD_3 ( VAR_2 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == null ) { VAR_3 . setText ( STRING_1 ) ; return ; } VAR_3 . setText ( VAR_4 . METHOD_3 ( VAR_2 ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6846
"public void METHOD_1 ( TYPE_1 VAR_1 ) { error = false ; METHOD_2 ( ) ; VAR_2 = 0 ; android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; intent . METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( intent ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 = 0 ; android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; intent . METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6847
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = new TYPE_2 ( STRING_2 ) ; TYPE_3 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6848
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6849
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getString ( VAR_1 ) ) ; VAR_2 = VAR_3 ; VAR_4 . METHOD_4 ( this ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getString ( VAR_1 ) ) ; VAR_4 . METHOD_4 ( this ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6850
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 . show ( METHOD_3 ( ) , STRING_1 ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_2 ( ) ; VAR_2 . show ( METHOD_3 ( ) , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6851
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6852
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; try { VAR_4 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_1 ( VAR_5 ) ; } },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; try { VAR_4 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_1 ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6853
public void execute ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 = VAR_3 ; VAR_4 = this . VAR_5 ; },public void execute ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",6854
void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; },void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6855
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6856
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 ; VAR_4 . METHOD_2 ( FLOAT_1 ) ; VAR_5 = FLOAT_1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_2 ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6857
public void METHOD_1 ( ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) ) ) { this . VAR_1 = this . VAR_2 . METHOD_3 ( 0 ) ; } else { this . VAR_1 . METHOD_4 ( ) ; } },public void METHOD_1 ( ) { this . VAR_1 . METHOD_4 ( ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",6858
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = ( VAR_2 ) + VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",6859
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = STRING_1 ; } return ( ( ( VAR_3 ) + STRING_2 ) + VAR_1 ) + ( VAR_2 ) ; },public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( ( ( VAR_3 ) + STRING_2 ) + VAR_1 ) + ( VAR_2 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6860
public void open ( java.lang.String VAR_1 ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = false ; } },public void open ( java.lang.String VAR_1 ) { if ( METHOD_1 ( ) ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6861
void METHOD_1 ( TYPE_1 VAR_1 ) { -- ( VAR_2 ) ; if ( ( VAR_2 ) == 0 ) VAR_3 = 0 ; if ( ! ( VAR_4 ) ) { VAR_5 . METHOD_2 ( ) ; VAR_4 = true ; } },void METHOD_1 ( TYPE_1 VAR_1 ) { -- ( VAR_2 ) ; if ( ( VAR_2 ) == 0 ) VAR_3 = 0 ; VAR_5 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6862
void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) > INT_1 ) { VAR_1 = true ; VAR_2 = VAR_3 ; } },void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) > INT_1 ) VAR_1 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6863
"public float METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { VAR_1 = ""0"" ; } return java.lang.Float . METHOD_3 ( VAR_1 ) ; }",public float METHOD_1 ( ) { return java.lang.Float . METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6864
"public void start ( ) { VAR_1 = new TYPE_1 ( this , 1 ) ; VAR_2 = new TYPE_1 ( this , INT_1 ) ; }",public void start ( ) { VAR_1 = new TYPE_1 ( 1 ) ; VAR_2 = new TYPE_1 ( INT_1 ) ; },"['Update ConstructorCall', 'Delete ThisAccess', 'Delete ThisAccess']",6865
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = - 1 ; },public void METHOD_1 ( ) { VAR_2 = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6866
"public void METHOD_1 ( android.view.View VAR_1 ) throws TYPE_1 , TYPE_2 { obj . METHOD_2 ( VAR_2 , VAR_3 . getId ( ) , null ) ; VAR_4 = 0 ; VAR_5 = false ; }","public void METHOD_1 ( android.view.View VAR_1 ) throws TYPE_1 , TYPE_2 { obj . METHOD_2 ( VAR_2 , VAR_3 . getId ( ) , null ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6867
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int i , long VAR_2 ) { VAR_3 = i ; METHOD_2 ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int i , long VAR_2 ) { METHOD_2 ( i ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6868
public void METHOD_1 ( float VAR_1 ) { y = VAR_1 + ( ( height ) / INT_1 ) ; },public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",6870
public void METHOD_1 ( java.lang.String query ) { VAR_1 = query ; if ( null == ( VAR_2 ) ) return ; VAR_2 . METHOD_2 ( query ) ; },public void METHOD_1 ( java.lang.String query ) { VAR_2 . METHOD_2 ( query ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",6871
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 = METHOD_2 ( INT_1 ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 = METHOD_2 ( INT_1 ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; },['Update Literal'],6872
"public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = - 1 ; VAR_3 = new java.util.HashSet < TYPE_1 > ( ) ; VAR_4 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; VAR_5 = true ; }","public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = - 1 ; VAR_3 = new java.util.HashSet < TYPE_1 > ( ) ; VAR_4 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6873
"public void METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_1 [ ] VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_1 [ ] VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6874
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_4 = ( ( java.util.ArrayList < java.lang.String > ) ( VAR_5 . get ( STRING_2 ) ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 . METHOD_2 ( STRING_1 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6875
"public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_4 = false ; VAR_5 . remove ( ) ; VAR_3 = null ; } return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_4 = false ; VAR_5 . remove ( ) ; return true ; }","['Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6876
"public void METHOD_1 ( TYPE_1 size ) { VAR_1 = size ; VAR_2 . METHOD_2 ( size . METHOD_3 ( ) , size . METHOD_4 ( ) , size . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; }","public void METHOD_1 ( TYPE_1 size ) { VAR_2 . METHOD_2 ( size . METHOD_3 ( ) , size . METHOD_4 ( ) , size . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6877
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; name = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = new TYPE_1 ( ) ; VAR_7 . update ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; name = 0 ; VAR_2 = 0 ; VAR_6 = new TYPE_1 ( ) ; VAR_7 . update ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6878
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_1 ( ) ; VAR_3 = 0 ; java.lang.System.out.println ( STRING_1 ) ; },public void METHOD_1 ( ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",6879
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; TYPE_2 VAR_3 = new TYPE_2 ( this , VAR_2 , VAR_4 ) ; VAR_5 . execute ( ) ; }","public void METHOD_1 ( int VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 , VAR_4 ) ; VAR_5 . execute ( ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess']",6880
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = new byte [ INT_1 ] ; VAR_7 = new byte [ INT_1 ] ; error = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = new byte [ INT_1 ] ; VAR_7 = new byte [ INT_1 ] ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6882
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_3 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6883
public TYPE_1 METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ; return this ; },public TYPE_1 METHOD_1 ( ) { VAR_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6884
public java.lang.String METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; response = STRING_1 ; return STRING_2 ; },public java.lang.String METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this . VAR_1 ) ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; this . response = STRING_1 ; return STRING_2 ; },"['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldRead', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move Literal', 'Insert FieldWrite', 'Move FieldRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",6885
"public void METHOD_1 ( TYPE_1 event ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( VAR_3 , 0 , INT_1 ) ; VAR_1 = true ; } }","public void METHOD_1 ( TYPE_1 event ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( VAR_3 , 0 , INT_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6886
"private synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_2 , VAR_3 , true ) ; VAR_4 = VAR_5 . getBoolean ( VAR_6 , VAR_7 ) ; } return VAR_1 ; }","private synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_2 , VAR_3 , true ) ; } return VAR_1 ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6888
"public void METHOD_1 ( java.lang.String VAR_1 ) { set ( VAR_2 , VAR_1 ) ; this . VAR_1 = VAR_1 ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { set ( VAR_2 , VAR_1 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6889
public static void METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = new TYPE_1 ( name ) ; VAR_2 = VAR_1 ; java.lang.System.out.println ( VAR_3 . toString ( ) ) ; VAR_4 . add ( VAR_1 ) ; },public static void METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = new TYPE_1 ( name ) ; VAR_4 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6890
"public int METHOD_1 ( java.lang.String VAR_1 , int [ ] VAR_2 ) throws TYPE_1 { VAR_3 = VAR_1 ; if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","public int METHOD_1 ( java.lang.String VAR_1 , int [ ] VAR_2 ) throws TYPE_1 { if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6891
"public static void METHOD_1 ( ) { VAR_1 = VAR_2 . getInt ( STRING_1 , INT_1 ) ; VAR_3 = VAR_2 . getBoolean ( STRING_2 , true ) ; VAR_4 = VAR_2 . getBoolean ( STRING_3 , false ) ; }","public static void METHOD_1 ( ) { VAR_1 = VAR_2 . getInt ( STRING_1 , INT_1 ) ; VAR_3 = VAR_2 . getBoolean ( STRING_2 , true ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",6892
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable VAR_4 ) { if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; } VAR_7 = false ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable VAR_4 ) { if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6893
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; java.lang.System.err.println ( STRING_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.err.println ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6894
"public void METHOD_1 ( ) { if ( ( java.lang.Math.random ( ) ) > FLOAT_1 ) { this . VAR_1 = STRING_1 ; } else { this . VAR_1 = ""0"" ; } }",public void METHOD_1 ( ) { this . VAR_1 = ( java.lang.Math.random ( ) ) > FLOAT_1 ; },"['Move Assignment', 'Move BinaryOperator', 'Delete FieldRead', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6895
"protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , null , null , this ) ) ; VAR_3 = VAR_4 ; VAR_4 = null ; VAR_5 = null ; }","protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , null , null , this ) ) ; VAR_4 = null ; VAR_5 = null ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6896
"public void setText ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_3 . replaceAll ( STRING_1 , STRING_2 ) ; VAR_4 = METHOD_1 ( ) . METHOD_2 ( ) ; METHOD_3 ( true ) ; }","public void setText ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_3 . replaceAll ( STRING_1 , STRING_2 ) ; METHOD_3 ( true ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",6897
public TYPE_1 METHOD_1 ( java.util.Random VAR_1 ) { TYPE_1 item = METHOD_2 ( VAR_1 ) ; if ( item != null ) { VAR_2 . remove ( item ) ; VAR_3 = true ; } return item ; },public TYPE_1 METHOD_1 ( java.util.Random VAR_1 ) { TYPE_1 item = METHOD_2 ( VAR_1 ) ; if ( item != null ) VAR_2 . remove ( item ) ; return item ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6899
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = METHOD_2 ( ) ; VAR_3 = VAR_4 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = METHOD_2 ( ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6900
public void METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 < 0 ) { throw new TYPE_1 ( STRING_1 ) ; } java.lang.Long VAR_2 = ( this . getValue ( ) ) + VAR_1 ; setValue ( VAR_2 ) ; },public void METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 < 0 ) { throw new TYPE_1 ( STRING_1 ) ; } this . value = ( value ) + VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert BinaryOperator', 'Move ThisAccess', 'Insert FieldRead', 'Move VariableRead', 'Delete TypeReference', 'Delete Invocation', 'Delete BinaryOperator', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation']",6901
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; context = this ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",6902
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = false ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) ; VAR_4 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6904
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; VAR_3 = false ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6905
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6907
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; TYPE_1 . METHOD_3 ( ) ; },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6908
public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( this . VAR_2 ) == null ) { return super . METHOD_1 ( VAR_1 ) ; } else { TYPE_1 result = this . VAR_2 ; this . VAR_2 = null ; return result ; } },public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( this . VAR_2 ) == null ) { return super . METHOD_1 ( VAR_1 ) ; } else { return this . VAR_2 ; } },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",6909
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . VAR_1 . METHOD_3 ( this ) ; VAR_2 = false ; VAR_3 = true ; VAR_4 . x = INT_1 ; VAR_4 . y = INT_1 ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . VAR_1 . METHOD_3 ( this ) ; VAR_2 = false ; VAR_3 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6910
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6911
protected void METHOD_1 ( float VAR_1 ) { VAR_2 = true ; super . METHOD_1 ( VAR_1 ) ; if ( ! ( VAR_3 . METHOD_2 ( ) ) ) VAR_4 = VAR_1 ; },protected void METHOD_1 ( float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ! ( VAR_3 . METHOD_2 ( ) ) ) VAR_4 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6912
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new java.util.Random ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6913
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; },protected void METHOD_1 ( ) { VAR_1 = 1 ; },"['Insert Literal', 'Delete FieldRead']",6914
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6915
public void step ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 = VAR_4 . METHOD_2 ( VAR_2 ) ; } },public void step ( ) { VAR_1 = VAR_2 ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 = VAR_4 . METHOD_2 ( VAR_2 ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6916
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_2 . toLowerCase ( ) . startsWith ( STRING_1 ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = STRING_1 + VAR_1 ; } return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6918
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; list = VAR_3 ; ( size ) -- ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; list = VAR_3 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete UnaryOperator']",6919
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( false ) ; VAR_4 = true ; VAR_5 = VAR_2 . getText ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setEnabled ( true ) ; VAR_3 . setEnabled ( false ) ; VAR_4 = true ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6921
public java.lang.String METHOD_1 ( ) { java.lang.String line = this . METHOD_2 ( ) ; this . VAR_1 = null ; return line ; },public java.lang.String METHOD_1 ( ) { return this . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",6922
"public void METHOD_1 ( android.view.View view ) { VAR_1 = true ; VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , VAR_3 ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_2 . show ( getActivity ( ) . METHOD_2 ( ) , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6924
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_3 = 0 ; VAR_4 . METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6925
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 += VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 += VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",6926
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; this . VAR_4 = new TYPE_3 ( VAR_3 ) ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; this . VAR_4 = new TYPE_3 ( VAR_3 ) ; this . VAR_4 . METHOD_2 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6927
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; VAR_2 . METHOD_2 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6928
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 == null ) { VAR_4 = STRING_1 ; return STRING_2 ; } else { VAR_4 = STRING_3 ; VAR_5 = VAR_1 . METHOD_3 ( ) ; return STRING_4 ; } },public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 == null ) { VAR_4 = STRING_1 ; return STRING_2 ; } else { VAR_4 = STRING_3 ; return STRING_4 ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6930
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6931
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) , 1 , new TYPE_3 ( ) ) ; VAR_2 = new TYPE_4 ( VAR_1 , INT_1 ) ; VAR_3 . start ( VAR_2 ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) , 1 , new TYPE_3 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6932
protected void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",6933
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_4 ( ) ; } },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6934
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6935
public void METHOD_1 ( ) { VAR_1 . set ( 0 ) ; VAR_2 = false ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . set ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6936
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; VAR_4 = null ; VAR_5 = null ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = false ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6937
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . getColor ( ) . a = 0 ; VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( FLOAT_1 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",6938
public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; java.lang.System.out.println ( STRING_2 ) ; },public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_1 = false ; java.lang.System.out.println ( STRING_2 ) ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6939
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",6942
public void METHOD_1 ( ) { while ( ! ( METHOD_2 ( ) ) ) ; this . VAR_1 . add ( new TYPE_1 ( this . VAR_2 ) ) ; VAR_3 = false ; },public void METHOD_1 ( ) { while ( VAR_3 ) ; VAR_3 = true ; this . VAR_1 . add ( new TYPE_1 ( this . VAR_2 ) ) ; VAR_3 = false ; },"['Insert Assignment', 'Insert FieldRead', 'Insert FieldWrite', 'Insert Literal', 'Delete Invocation', 'Delete UnaryOperator']",6943
"public void METHOD_1 ( java.util.Map VAR_1 , TYPE_1 context ) { VAR_2 = new TYPE_2 ( INT_1 , INT_1 , FLOAT_1 , FLOAT_2 , FLOAT_3 ) ; this . VAR_3 = context . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 , context ) ; }","public void METHOD_1 ( java.util.Map VAR_1 , TYPE_1 context ) { VAR_2 = new TYPE_2 ( INT_1 , INT_1 , FLOAT_1 , FLOAT_2 , FLOAT_3 ) ; super . METHOD_1 ( VAR_1 , context ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",6944
private void METHOD_1 ( ) { this . VAR_1 = 0 ; VAR_2 . METHOD_2 ( null ) ; VAR_2 = null ; this . VAR_3 = FLOAT_1 ; VAR_4 = 0 ; },private void METHOD_1 ( ) { this . VAR_1 = 0 ; VAR_2 . METHOD_2 ( null ) ; VAR_2 = null ; VAR_4 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6945
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 ? STRING_1 : STRING_2 ) ) ; VAR_3 = VAR_1 ; if ( ( ! ( METHOD_3 ( ) ) ) && ( ! VAR_1 ) ) { VAR_4 . METHOD_4 ( ) ; } },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 ? STRING_1 : STRING_2 ) ) ; if ( ( ! ( METHOD_3 ( ) ) ) && ( ! VAR_1 ) ) { VAR_4 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6946
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = false ; VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_3 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6948
private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } catch ( java.io.IOException VAR_2 ) { } if ( ( VAR_3 ) != null ) { TYPE_1 . METHOD_3 ( VAR_3 ) ; } },private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { } if ( ( VAR_3 ) != null ) { TYPE_1 . METHOD_3 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6949
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_2 = VAR_1 ; TYPE_2 VAR_3 = new TYPE_2 ( this . VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( this . VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6950
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_3 ( VAR_4 ) ; VAR_5 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_6 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6952
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_2 ; if ( ( VAR_4 ) != null ) { VAR_5 . delete ( VAR_1 , this ) ; } }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_4 ) != null ) { VAR_5 . delete ( VAR_1 , this ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6953
"public void start ( ) { super . start ( ) ; VAR_1 = false ; new TYPE_1 ( ) . METHOD_1 ( new TYPE_2 ( ) { public void METHOD_2 ( ) { METHOD_3 ( ) ; } } , VAR_2 ) ; }","public void start ( ) { super . start ( ) ; new TYPE_1 ( ) . METHOD_1 ( new TYPE_2 ( ) { public void METHOD_2 ( ) { METHOD_3 ( ) ; } } , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6954
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean b ) { VAR_3 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean b ) { VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6956
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = null ; },public void METHOD_1 ( ) throws TYPE_1 { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6957
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = true ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 = 0 ; } },public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { VAR_3 = true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6958
protected void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = TYPE_1 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = 0 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6960
public static void METHOD_1 ( java.io.File source ) { VAR_1 = source ; VAR_2 = true ; },public static void METHOD_1 ( java.io.File source ) { VAR_1 = source ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6961
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 . METHOD_2 ( false ) ; this . VAR_5 = null ; this . c = null ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 . METHOD_2 ( false ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6962
"public void METHOD_1 ( TYPE_1 listener ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = listener ; }","public void METHOD_1 ( TYPE_1 listener ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6963
void start ( ) { VAR_1 = VAR_2 ; VAR_3 = false ; },void start ( ) { VAR_1 = VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6964
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; if ( ( VAR_3 ) == 0 ) { VAR_3 = ( VAR_3 ) + 1 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",6965
private void init ( ) { VAR_1 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.Integer > ( ) ; },private void init ( ) { VAR_1 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",6966
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_3 class ) ; VAR_4 = TYPE_1 . METHOD_3 ( VAR_5 class ) ; VAR_6 = TYPE_1 . METHOD_3 ( VAR_7 class ) ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 = METHOD_3 ( VAR_3 class ) ; VAR_4 = METHOD_3 ( VAR_5 class ) ; VAR_6 = METHOD_3 ( VAR_7 class ) ; },"['Update TypeAccess', 'Update TypeAccess', 'Update TypeAccess', 'Update TypeAccess']",6967
public void METHOD_1 ( android.view.View view ) { x = java.lang.Integer.parseInt ( VAR_1 . getText ( ) . toString ( ) ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_1 ; VAR_1 . setText ( STRING_2 ) ; },public void METHOD_1 ( android.view.View view ) { x = java.lang.Integer.parseInt ( VAR_1 . getText ( ) . toString ( ) ) ; VAR_3 = STRING_1 ; VAR_1 . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6968
"protected void METHOD_1 ( java.lang.Boolean result ) { if ( result ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 = false ; VAR_3 = result ; VAR_4 . METHOD_3 ( VAR_5 , VAR_6 ) ; }","protected void METHOD_1 ( java.lang.Boolean result ) { if ( result ) { VAR_1 . METHOD_2 ( ) ; } VAR_4 . METHOD_3 ( VAR_5 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6970
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 = METHOD_3 ( VAR_3 ) ; if ( ( TYPE_2 ) != null ) { TYPE_2 . METHOD_4 ( this ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",6971
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_3 ; VAR_5 . METHOD_2 ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_5 . METHOD_2 ( VAR_3 ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",6972
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( true ) ; VAR_4 = true ; METHOD_5 ( VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",6973
"void init ( android.content.Context context ) { VAR_1 = context ; METHOD_1 ( this ) ; VAR_2 = new TYPE_1 ( VAR_1 , new TYPE_2 ( this ) ) ; }","void init ( android.content.Context context ) { METHOD_1 ( this ) ; VAR_2 = new TYPE_1 ( context , new TYPE_2 ( this ) ) ; }","['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",6975
"final void METHOD_1 ( java.lang.String var , java.lang.String type ) { this . VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; this . VAR_2 . add ( var ) ; this . type = type ; VAR_3 = VAR_4 . length ( ) ; }","final void METHOD_1 ( java.lang.String var , java.lang.String type ) { this . VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; this . VAR_2 . add ( var ) ; this . type = type ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",6976
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . add ( VAR_2 ) ; return VAR_1 ; },private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . add ( VAR_2 ) ; return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",6977
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; if ( VAR_3 ) { VAR_4 = 1 ; } else { VAR_4 = 0 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = STRING_1 ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",6978
public java.lang.Long METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = FLOAT_1 ; } java.lang.Long VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.Long VAR_3 = ( VAR_2 * INT_1 ) * INT_1 ; return VAR_3 ; },public java.lang.Long METHOD_1 ( ) { java.lang.Long VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.Long VAR_3 = ( VAR_2 * INT_1 ) * INT_1 ; return VAR_3 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6980
private void METHOD_1 ( ) { VAR_1 . set ( 0 ) ; VAR_2 . set ( VAR_3 ) ; VAR_4 = false ; VAR_5 . METHOD_2 ( ) ; VAR_5 = null ; },private void METHOD_1 ( ) { VAR_1 . set ( 0 ) ; VAR_2 . set ( VAR_3 ) ; VAR_5 . METHOD_2 ( ) ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6981
public void METHOD_1 ( TYPE_1 p ) { VAR_1 = VAR_2 ; VAR_3 . remove ( VAR_4 . getName ( ) ) ; VAR_5 . remove ( VAR_4 . getName ( ) ) ; VAR_6 . remove ( VAR_4 . getName ( ) ) ; },public void METHOD_1 ( TYPE_1 p ) { VAR_3 . remove ( VAR_4 . getName ( ) ) ; VAR_5 . remove ( VAR_4 . getName ( ) ) ; VAR_6 . remove ( VAR_4 . getName ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",6982
public static void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_2 ) ) ; VAR_3 . setEnabled ( true ) ; VAR_4 = 0 ; },public static void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6983
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; VAR_2 = true ; VAR_3 . METHOD_5 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; VAR_3 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6984
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",6986
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",6987
"void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; a = 0 ; VAR_4 = 0 ; VAR_5 . setText ( ""0"" ) ; }","void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; a = 0 ; VAR_5 . setText ( ""0"" ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6988
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 . METHOD_2 ( new android.content.Intent ( VAR_5 ) ) ; VAR_6 . i ( VAR_7 , STRING_1 ) ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = null ; VAR_2 = null ; VAR_6 . i ( VAR_7 , STRING_1 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation']",6989
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( ) ; } else { return VAR_1 ; } },"['Insert Block', 'Insert Return', 'Move Return', 'Move ConstructorCall', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment']",6990
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = false ; VAR_2 . start ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6991
"public void METHOD_1 ( TYPE_1 node , int VAR_1 ) { this . VAR_2 = node ; this . VAR_3 = VAR_1 ; }",public void METHOD_1 ( TYPE_1 node ) { this . VAR_2 = node ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",6992
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 1 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",6993
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( ) ; METHOD_4 ( VAR_2 ) ; }","['Update Invocation', 'Move Invocation', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Invocation']",6994
public void METHOD_1 ( ) { while ( ! ( this . VAR_1 . isEmpty ( ) ) ) { this . METHOD_2 ( this . VAR_2 . METHOD_3 ( ) ) ; this . VAR_3 = false ; } },public void METHOD_1 ( ) { while ( ! ( this . VAR_1 . isEmpty ( ) ) ) { this . METHOD_2 ( this . VAR_2 . METHOD_3 ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",6995
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = true ; METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 = METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",6996
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_5 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_4 = VAR_3 ; VAR_5 = true ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead']",6997
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = VAR_1 ; else VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",6998
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = VAR_1 ; VAR_1 = null ; VAR_3 = VAR_4 ; return VAR_2 ; } else { return null ; } },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = VAR_1 ; VAR_1 = null ; return VAR_2 ; } else { return null ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7000
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) || ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_1 = false ; VAR_2 = false ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) || ( VAR_2 ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7001
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_3 . getBoolean ( STRING_1 ) ; this . VAR_4 = VAR_1 . METHOD_2 ( STRING_2 ) ; this . VAR_5 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_3 . getBoolean ( STRING_1 ) ; this . VAR_4 = VAR_1 . METHOD_2 ( STRING_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7002
"public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_1 { VAR_3 = VAR_1 ; if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_1 { if ( ( VAR_4 ) != null ) return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; else throw new TYPE_2 ( ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7003
public void set ( TYPE_1 value ) { this . value = value ; this . error = null ; VAR_1 = true ; },public void set ( TYPE_1 value ) { this . value = value ; VAR_1 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7004
"static TYPE_1 METHOD_1 ( TYPE_2 [ ] data , int i , java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 f = new TYPE_1 ( ) ; VAR_3 = data ; VAR_4 = i ; VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; return f ; }","static TYPE_1 METHOD_1 ( TYPE_2 [ ] data , int i , java.lang.String VAR_1 ) { TYPE_1 f = new TYPE_1 ( ) ; VAR_3 = data ; VAR_4 = i ; VAR_5 = VAR_1 ; return f ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7005
private void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { ( VAR_1 ) -- ; ( VAR_2 ) -- ; } },private void METHOD_1 ( ) { ( VAR_1 ) -- ; if ( ( VAR_1 ) > 0 ) { ( VAR_2 ) -- ; } },['Move UnaryOperator'],7006
"public void METHOD_1 ( android.view.View VAR_1 ) { status = VAR_2 ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_2 ( STRING_1 , true ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_2 ( STRING_1 , true ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7007
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = false ; final java.util.List < TYPE_2 > VAR_3 = METHOD_2 ( ) ; VAR_4 . add ( new TYPE_2 ( VAR_1 ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { final java.util.List < TYPE_2 > VAR_3 = METHOD_2 ( ) ; VAR_4 . add ( new TYPE_2 ( VAR_1 ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7008
public void METHOD_1 ( TYPE_1 p ) { VAR_1 = ( VAR_2 . x ) - ( ( VAR_3 . METHOD_2 ( ) ) / INT_1 ) ; VAR_4 = ( VAR_2 . y ) - ( ( VAR_3 . METHOD_3 ( ) ) / INT_1 ) ; },public void METHOD_1 ( TYPE_1 p ) { VAR_1 = VAR_2 . x ; VAR_4 = VAR_2 . y ; },"['Move FieldRead', 'Move FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",7009
"private void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_4 . put ( VAR_5 . getName ( ) , VAR_2 ) ; } VAR_6 = true ; }","private void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_4 . put ( VAR_5 . getName ( ) , VAR_2 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7010
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = true ; METHOD_4 ( TYPE_3 . METHOD_5 ( ) , VAR_4 , null ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; METHOD_4 ( TYPE_3 . METHOD_5 ( ) , VAR_4 , null ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7011
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7012
public void METHOD_1 ( ) { if ( ( VAR_1 ) == INT_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( 0 ) ; } else METHOD_3 ( ( ( VAR_1 ) + 1 ) ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ( ( VAR_1 ) + 1 ) ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete Block', 'Delete If']",7013
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7014
public void METHOD_1 ( int i ) { VAR_1 = i ; },public void METHOD_1 ( int i ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7015
public void METHOD_1 ( ) { VAR_1 = ( VAR_1 ) == false ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Insert Literal', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator']",7016
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 . getId ( ) , VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 . addComponent ( VAR_1 ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_3 . getId ( ) , VAR_4 ) ; VAR_5 . METHOD_3 ( ) ; VAR_6 . addComponent ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7017
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = new TYPE_1 ( ) ; this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7018
public void set ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . item = VAR_1 . METHOD_1 ( ) ; if ( ( item ) instanceof TYPE_2 ) set ( TYPE_3 . METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ) ; },public void set ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) instanceof TYPE_2 ) set ( TYPE_3 . METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ) ; this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7019
void METHOD_1 ( ) { if ( ( i ) > 1 ) { i = ( i ) - 1 ; VAR_1 . setText ( ( ( i ) + STRING_1 ) ) ; } },void METHOD_1 ( ) { i = java.lang.Integer.parseInt ( VAR_1 . getText ( ) ) ; if ( ( i ) > 1 ) { ( i ) -- ; VAR_1 . setText ( ( ( i ) + STRING_1 ) ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Invocation', 'Insert TypeAccess', 'Insert Invocation', 'Insert UnaryOperator', 'Insert TypeAccess', 'Move FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",7020
public void METHOD_1 ( int i ) { VAR_1 = ( ( byte ) ( i ) ) ; },public void METHOD_1 ( int i ) { },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",7021
public boolean METHOD_1 ( java.lang.String query ) { if ( STRING_1 . equals ( query ) ) { VAR_1 . METHOD_2 ( ) ; } else { VAR_1 . METHOD_3 ( query ) ; } VAR_2 = query ; return true ; },public boolean METHOD_1 ( java.lang.String query ) { if ( STRING_1 . equals ( query ) ) { VAR_1 . METHOD_2 ( ) ; } else { VAR_1 . METHOD_3 ( query ) ; } return true ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7022
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( true ) ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_3 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( true ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7023
public final void METHOD_1 ( ) { p = new TYPE_1 ( ) ; a = new TYPE_2 ( ) ; },public final void METHOD_1 ( ) { p = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7024
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7025
public void METHOD_1 ( boolean b ) { this . VAR_1 = b ; this . VAR_2 = 0 ; },public void METHOD_1 ( boolean b ) { this . VAR_1 = b ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7026
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; for ( TYPE_2 VAR_4 : METHOD_5 ( ) ) { VAR_4 . METHOD_6 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; for ( TYPE_2 VAR_4 : METHOD_5 ( ) ) { VAR_4 . METHOD_6 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7027
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( VAR_4 ) ; VAR_5 = VAR_3 . METHOD_4 ( ) ; VAR_6 = VAR_3 . METHOD_5 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_3 ( VAR_4 ) . METHOD_4 ( ) ; }","['Insert Assignment', 'Move FieldWrite', 'Insert Invocation', 'Insert Invocation', 'Insert TypeAccess', 'Insert TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7028
"private void METHOD_1 ( android.content.Context context ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 = context ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( this , context ) ; VAR_4 . execute ( ) ; } }","private void METHOD_1 ( android.content.Context context ) { VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( this , context ) ; VAR_4 . execute ( ) ; }","['Move Assignment', 'Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7029
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; android.content.Intent intent = this . getIntent ( ) ; VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( intent . METHOD_4 ( STRING_1 ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete ThisAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",7030
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 = VAR_1 ; },public void METHOD_1 ( ) { VAR_2 = ( java.lang.Math.abs ( VAR_2 ) ) + 1 ; VAR_3 = ( java.lang.Math.abs ( VAR_3 ) ) + 1 ; },"['Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert BinaryOperator', 'Move FieldWrite', 'Insert BinaryOperator', 'Insert Invocation', 'Insert Literal', 'Insert Invocation', 'Insert Literal', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Insert TypeAccess', 'Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete Assignment', 'Delete Assignment']",7032
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; start . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = STRING_1 ; VAR_6 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; start . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7033
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 = null ; } catch ( java.lang.Exception VAR_4 ) { } },public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7034
"public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String ... VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_1 ( VAR_4 , VAR_1 ) ; return this ; }","public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String ... VAR_1 ) { VAR_3 . METHOD_1 ( VAR_4 , VAR_1 ) ; return this ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7035
public void METHOD_1 ( ) { this . status = VAR_1 ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7036
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 . setText ( java.lang.Integer.toString ( VAR_4 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",7037
public void METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; java.lang.System.out.println ( ( STRING_1 + index ) ) ; VAR_3 = VAR_2 . METHOD_4 ( ) . METHOD_5 ( index ) ; METHOD_6 ( VAR_3 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_6 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( index ) ) ; java.lang.System.out.println ( ( STRING_1 + index ) ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7038
public void METHOD_1 ( ) { this . VAR_1 = false ; this . x = this . VAR_2 ; this . y = this . VAR_3 ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",7039
public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_2 [ i ] = 0 ; } VAR_3 = 0 ; VAR_4 = 0 ; },public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_2 [ i ] = 0 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7040
"public void METHOD_1 ( TYPE_1 event ) { VAR_1 = event . METHOD_2 ( ) ; start ( event . METHOD_3 ( ) , event . METHOD_4 ( ) ) ; }","public void METHOD_1 ( TYPE_1 event ) { start ( event . METHOD_3 ( ) , event . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7041
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7042
public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 . METHOD_1 ( STRING_1 ) ; VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 . METHOD_1 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7043
"public boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = true ; if ( METHOD_2 ( VAR_1 ) ) { METHOD_3 ( ) . METHOD_4 ( VAR_4 , VAR_2 ) ; return true ; } return super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","public boolean METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( METHOD_2 ( VAR_1 ) ) { METHOD_3 ( ) . METHOD_4 ( VAR_4 , VAR_2 ) ; return true ; } return super . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7044
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7045
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_3 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } VAR_4 = VAR_1 ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } VAR_4 = VAR_1 ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7046
"public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final boolean VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_4 = true ; } else { VAR_4 = false ; } return VAR_5 ; }","public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , final boolean VAR_3 ) { VAR_4 = true ; return VAR_5 ; }","['Move Assignment', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7047
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7049
"private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = new TYPE_2 ( VAR_4 . METHOD_2 ( ) , VAR_2 , VAR_1 . METHOD_3 ( ) ) ; VAR_5 . response = this ; VAR_5 . execute ( ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 . METHOD_2 ( ) , VAR_2 , VAR_1 . METHOD_3 ( ) ) ; VAR_5 . response = this ; VAR_5 . execute ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",7050
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return false ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 = null ; return false ; } return true ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) != null ; },"['Update BinaryOperator', 'Move BinaryOperator', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Return', 'Delete Block', 'Delete If', 'Delete Literal']",7051
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = new TYPE_1 ( ) . METHOD_2 ( VAR_3 ) . METHOD_2 ( VAR_4 ) . METHOD_2 ( VAR_5 ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = new TYPE_1 ( ) . METHOD_2 ( VAR_3 ) . METHOD_2 ( VAR_4 ) . METHOD_2 ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7052
public void METHOD_1 ( java.lang.Throwable VAR_1 ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; },public void METHOD_1 ( java.lang.Throwable VAR_1 ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7053
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7054
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( this . VAR_3 ) ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_7 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( this . VAR_3 ) ; VAR_4 = this . VAR_5 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",7055
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = 0 ; VAR_3 = null ; n = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; n = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7056
"public void METHOD_1 ( int x , int y ) { VAR_1 = ( x * ( VAR_2 ) ) + INT_1 ; VAR_3 = ( y * ( VAR_2 ) ) + INT_2 ; METHOD_2 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( int x , int y ) { VAR_1 = x * ( VAR_2 ) ; VAR_3 = y * ( VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; }","['Move BinaryOperator', 'Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",7057
public void METHOD_1 ( java.lang.String data ) { this . data = data ; VAR_1 . setText ( data ) ; },public void METHOD_1 ( java.lang.String data ) { VAR_1 . setText ( data ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7058
public void METHOD_1 ( TYPE_1 field ) { name = TYPE_2 . METHOD_2 ( field ) ; VAR_1 = VAR_2 . getName ( ) ; },public void METHOD_1 ( TYPE_1 field ) { this . name = TYPE_2 . METHOD_2 ( field ) ; this . VAR_1 = VAR_2 . getName ( ) ; },"['Insert ThisAccess', 'Insert ThisAccess']",7059
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = false ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 . i ( VAR_2 , STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7060
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7061
public void METHOD_1 ( int state ) { VAR_1 = state ; },public void METHOD_1 ( int state ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7062
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; TYPE_2 . METHOD_1 ( ) ; },public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7063
public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 == null ) return this ; this . VAR_2 = VAR_1 * ( VAR_3 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 == null ) return this ; this . VAR_1 = VAR_1 ; return this ; },"['Update FieldWrite', 'Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",7065
protected TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_2 ( ) ; } return VAR_1 ; },protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",7066
public void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_2 = new java.util.ArrayList < > ( ) ; },public void init ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7068
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 a = METHOD_2 ( ) ; VAR_2 = null ; if ( VAR_1 ) { if ( ( VAR_3 ) != null ) { VAR_3 = VAR_4 ; } } return a ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 a = METHOD_2 ( ) ; VAR_2 = null ; return a ; },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",7069
protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . add ( STRING_1 ) ; VAR_3 . add ( STRING_2 ) ; VAR_4 = STRING_3 ; return ; },protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . add ( STRING_1 ) ; VAR_3 . add ( STRING_2 ) ; return ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7070
public void start ( ) throws java.io.IOException { if ( ! ( VAR_1 ) ) { this . METHOD_1 ( VAR_2 ) ; VAR_1 = true ; } },public void start ( ) throws java.io.IOException { if ( ! ( VAR_1 ) ) { this . METHOD_1 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7071
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) . build ( ) ; VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7072
public void start ( int VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) == false ) { new java.lang.Thread ( this ) . start ( ) ; } },public void start ( ) { new java.lang.Thread ( this ) . start ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",7073
public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7074
"public synchronized TYPE_1 get ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; }","public synchronized TYPE_1 get ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { VAR_2 = VAR_3 . put ( VAR_1 , new TYPE_1 ( VAR_1 ) ) ; } return VAR_2 ; }","['Move Invocation', 'Move ConstructorCall', 'Delete VariableRead']",7075
"void METHOD_1 ( ) { if ( VAR_1 . getText ( ) . equals ( STRING_1 ) ) { METHOD_2 ( VAR_2 , STRING_2 ) ; } else { VAR_3 = new TYPE_1 ( VAR_1 . getText ( ) , VAR_4 ) ; METHOD_3 ( ) ; } }","void METHOD_1 ( ) { if ( VAR_1 . getText ( ) . equals ( STRING_1 ) ) { METHOD_2 ( VAR_2 , STRING_2 ) ; } else { METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7076
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . start ( ) ; VAR_2 = true ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { VAR_1 . start ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7077
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = false ; return this . VAR_2 . get ( ( ( this . index ) ++ ) ) ; },public TYPE_1 METHOD_1 ( ) { return this . VAR_2 . get ( ( ( this . index ) ++ ) ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7078
"private void METHOD_1 ( ) { VAR_1 = true ; android.content.Intent VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; }","private void METHOD_1 ( ) { android.content.Intent VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7080
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + VAR_2 ) ) ; METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_5 = VAR_2 ; VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_8 = false ; }",public void METHOD_1 ( ) { METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_8 = false ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7082
private boolean METHOD_1 ( java.lang.Object VAR_1 ) { if ( isEmpty ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = VAR_4 = VAR_2 ; ( size ) ++ ; return true ; } else return false ; },private boolean METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; if ( isEmpty ( ) ) { VAR_3 = VAR_4 = VAR_2 ; return true ; } else return false ; },"['Move LocalVariable', 'Delete FieldWrite', 'Delete UnaryOperator']",7083
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = VAR_2 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7084
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; android.content.Intent intent = getIntent ( ) ; VAR_3 = intent . METHOD_3 ( VAR_4 , ( - 1 ) ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete UnaryOperator', 'Delete Invocation', 'Delete Assignment']",7085
public void update ( ) { VAR_1 = VAR_2 . METHOD_1 ( 0 ) ; VAR_3 = VAR_2 . METHOD_1 ( 1 ) ; },public void update ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",7086
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7088
"private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = METHOD_2 ( VAR_2 , VAR_5 ) ; VAR_6 = METHOD_2 ( VAR_7 , VAR_8 ) ; }","private void METHOD_1 ( ) { VAR_4 = METHOD_2 ( VAR_2 , VAR_5 ) ; VAR_6 = METHOD_2 ( VAR_7 , VAR_8 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7089
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( new TYPE_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete ConstructorCall', 'Delete Invocation']",7090
public TYPE_1 METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },"['Update TypeReference', 'Insert ThisAccess']",7091
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7092
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",7093
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; VAR_3 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7094
public java.util.Iterator < TYPE_1 > iterator ( ) { VAR_1 = 0 ; return this ; },public java.util.Iterator < TYPE_1 > iterator ( ) { return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7095
public static java.lang.Class METHOD_1 ( ) { java.lang.Class result = VAR_1 ; VAR_1 = null ; return result ; },public static java.lang.Class METHOD_1 ( ) { return VAR_1 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",7096
public void METHOD_1 ( TYPE_1 position ) { this . position = position ; this . VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( this ) ; } },public void METHOD_1 ( TYPE_1 position ) { this . position = position ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( this ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7097
"public void METHOD_1 ( boolean VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != VAR_1 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; if ( VAR_1 ) { VAR_5 . execute ( 0 ) ; } else { METHOD_2 ( ) ; } } }",public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_3 ) != VAR_1 ) { VAR_3 = VAR_1 ; if ( VAR_1 ) { VAR_5 . execute ( 0 ) ; } else { METHOD_2 ( ) ; } } },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7098
public static synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } return VAR_2 ; },public static synchronized TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7099
public final void METHOD_1 ( ) { VAR_1 = true ; },public final void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7100
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; state = VAR_3 ; VAR_4 . start ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_4 . start ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7101
public void METHOD_1 ( java.util.List < TYPE_1 > data ) { this . VAR_1 = data ; if ( ( VAR_2 ) != null ) { VAR_3 = true ; VAR_4 = null ; } VAR_5 = - 1 ; TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > data ) { this . VAR_1 = data ; TYPE_2 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7102
public final void METHOD_1 ( boolean b ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ( b ? VAR_3 : VAR_4 ) ) ; } else { VAR_5 = b ; } },public final void METHOD_1 ( boolean b ) { VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ( b ? VAR_3 : VAR_4 ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7103
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != 1 ) { VAR_2 = 1 ; } else { VAR_2 = 0 ; } VAR_3 . METHOD_2 ( false ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 1 ; VAR_3 . METHOD_2 ( false ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7104
"public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { super . METHOD_1 ( view , url ) ; if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } }","public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { super . METHOD_1 ( view , url ) ; METHOD_2 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7105
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7106
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7108
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( METHOD_2 ( ) . METHOD_3 ( ) . VAR_3 ) == ( VAR_4 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( true ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( true ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",7109
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) . VAR_4 ; TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_4 ( VAR_3 . METHOD_2 ( ) . VAR_4 ) ; },"['Insert Invocation', 'Move FieldRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7110
protected void METHOD_1 ( ) { this . VAR_1 = this . VAR_2 . METHOD_2 ( ) ; },protected void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",7111
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; VAR_3 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 . getId ( ) , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; METHOD_5 ( false , VAR_8 ) ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; METHOD_5 ( false , VAR_8 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7112
public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = VAR_13 ; return VAR_1 ; },public TYPE_1 build ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_3 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = VAR_13 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7113
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; } return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7114
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = ( VAR_2 ) - VAR_1 ; if ( ( this . VAR_2 ) < 0 ) { this . VAR_2 = 0 ; } },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = ( VAR_2 ) - VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7115
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_2 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert VariableRead', 'Delete FieldRead']",7116
public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 . size ( ) ) ) { VAR_1 = 0 ; } else { ( VAR_1 ) ++ ; } VAR_3 = VAR_2 . get ( VAR_1 ) ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 . size ( ) ) ) { VAR_1 = 0 ; } else { ( VAR_1 ) ++ ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7117
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( false ) ; VAR_3 = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( true ) ; VAR_4 = new TYPE_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( false ) ; VAR_3 = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( true ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7118
protected void METHOD_1 ( ) { VAR_1 . open ( ) ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_2 = true ; },protected void METHOD_1 ( ) { VAR_1 . open ( ) ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7119
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = 1 ; } else { ( VAR_1 ) ++ ; } },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7120
public java.lang.Integer METHOD_1 ( TYPE_1 value ) throws java.lang.Exception { int VAR_1 = ( id ) ++ ; if ( ( id ) == INT_1 ) id = 0 ; return VAR_1 ; },public java.lang.Integer METHOD_1 ( TYPE_1 value ) throws java.lang.Exception { return ( id ) ++ ; },"['Move UnaryOperator', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete VariableRead']",7121
public void METHOD_1 ( ) throws java.io.IOException { this . VAR_1 = true ; },public void METHOD_1 ( ) throws java.io.IOException { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7122
public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_1 ) == 0 ) { this . VAR_2 = VAR_3 ; } else { this . VAR_2 = VAR_4 ; } },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7123
"public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = TYPE_2 . METHOD_2 ( ) . build ( ) ; METHOD_3 ( STRING_1 , new TYPE_3 ( VAR_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_3 ( STRING_1 , new TYPE_3 ( VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7124
public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . data ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_3 = VAR_5 ; VAR_6 = null ; } else { VAR_3 = null ; } ( size ) -- ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . data ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_3 = VAR_5 ; } VAR_6 = null ; return VAR_1 ; },"['Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator']",7125
"public void init ( ) { this . METHOD_1 ( STRING_1 ) ; target = 0 ; VAR_1 = STRING_2 ; VAR_2 = STRING_2 ; VAR_3 = VAR_4 ; VAR_5 = new java.util.HashMap < java.lang.Integer , java.lang.String > ( ) ; this . METHOD_2 ( VAR_6 ) ; }","public void init ( ) { this . METHOD_1 ( STRING_1 ) ; target = 0 ; VAR_1 = STRING_2 ; VAR_3 = VAR_4 ; VAR_5 = new java.util.HashMap < java.lang.Integer , java.lang.String > ( ) ; this . METHOD_2 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7127
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_5 = VAR_1 . METHOD_4 ( VAR_6 ) ; return super . METHOD_1 ( VAR_1 ) ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; return super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7128
public TYPE_1 METHOD_1 ( int VAR_1 ) { output = new TYPE_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; return output ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; return output ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7129
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 ) ) ; x = VAR_4 ; VAR_4 = x ; } },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 ) ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7130
public void METHOD_1 ( ) { VAR_1 . setState ( new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; this . VAR_3 = true ; },public void METHOD_1 ( ) { VAR_1 . setState ( new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7131
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 = - 1 ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7132
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }",public void METHOD_1 ( java.lang.String VAR_2 ) { this . VAR_2 = VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7133
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7134
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7135
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 = null ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; VAR_4 = null ; } },private void METHOD_1 ( ) { VAR_2 = null ; VAR_1 . METHOD_2 ( null ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7136
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; VAR_3 . start ( ) ; setText ( STRING_1 ) ; VAR_4 = ! ( VAR_4 ) ; },private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) ; VAR_3 . start ( ) ; setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",7137
public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 = new TYPE_3 ( VAR_1 ) ; },public synchronized void init ( TYPE_1 VAR_1 ) { super . init ( VAR_1 ) ; VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment']",7138
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; TYPE_2 . METHOD_2 ( VAR_4 . getContext ( ) , STRING_1 , VAR_5 ) . show ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_4 . getContext ( ) , STRING_1 , VAR_5 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7139
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; this . VAR_1 = new TYPE_2 ( ) ; this . VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( INT_1 , VAR_2 ) ; VAR_3 = STRING_3 ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; this . VAR_1 = new TYPE_2 ( ) ; this . VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( INT_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7140
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_4 = false ; } else { VAR_4 = true ; } },public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_3 = VAR_1 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",7141
"private void METHOD_1 ( int VAR_1 ) { array = TYPE_1 . METHOD_2 ( array , VAR_1 ) ; VAR_2 = VAR_1 ; }","private void METHOD_1 ( int VAR_1 ) { array = TYPE_1 . METHOD_2 ( array , VAR_1 ) ; size = VAR_1 ; }",['Update FieldWrite'],7142
"public TYPE_1 METHOD_1 ( TYPE_2 param , java.util.Set < java.lang.String > VAR_1 ) { TYPE_1 p = super . METHOD_1 ( param , VAR_1 ) ; VAR_2 . put ( STRING_1 , METHOD_2 ( VAR_3 ) ) ; VAR_4 = METHOD_3 ( VAR_4 ) ; return p ; }","public TYPE_1 METHOD_1 ( TYPE_2 param , java.util.Set < java.lang.String > VAR_1 ) { TYPE_1 p = super . METHOD_1 ( param , VAR_1 ) ; VAR_2 . put ( STRING_1 , METHOD_2 ( VAR_3 ) ) ; return p ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7143
public void METHOD_1 ( TYPE_1 p ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } VAR_2 . add ( p ) ; },public void METHOD_1 ( TYPE_1 p ) { VAR_2 . add ( p ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7144
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long VAR_4 ) { VAR_5 . METHOD_2 ( ( ( int ) ( VAR_4 ) ) ) ; VAR_6 = null ; METHOD_3 ( false ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long VAR_4 ) { VAR_5 . METHOD_2 ( ( ( int ) ( VAR_4 ) ) ) ; METHOD_3 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7145
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 . get ( ) ) != null ) ) { VAR_3 = VAR_4 ; VAR_2 . get ( ) . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 . get ( ) ) != null ) ) { VAR_2 . get ( ) . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7146
public synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( ) ; } METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( ) ; } return VAR_1 = VAR_2 ; } return VAR_1 ; },"['Insert Return', 'Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",7147
private void METHOD_1 ( ) { setState ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = true ; },private void METHOD_1 ( ) { setState ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7148
public java.util.Set < TYPE_1 > METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new java.util.HashSet < > ( ) ; } return this . VAR_1 ; },public java.util.Set < TYPE_1 > METHOD_1 ( ) { return this . VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7149
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , this ) ; VAR_2 = 0 ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , this ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7150
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",7151
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) != null ) return VAR_1 ; VAR_1 = new java.util.ArrayList < > ( ) ; return VAR_1 ; },public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7152
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( 0 ) ; VAR_2 = STRING_1 ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7153
"private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { VAR_3 = VAR_4 ; VAR_5 = METHOD_2 ( VAR_6 ) ; VAR_7 = METHOD_2 ( VAR_8 ) ; } }","private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; } }","['Insert Assignment', 'Insert Assignment', 'Move FieldWrite', 'Insert FieldRead', 'Move FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7154
protected TYPE_1 METHOD_1 ( java.lang.Throwable error ) throws TYPE_1 { ( VAR_1 ) ++ ; return VAR_2 . METHOD_2 ( error ) ; },protected TYPE_1 METHOD_1 ( java.lang.Throwable error ) throws TYPE_1 { return VAR_2 . METHOD_2 ( error ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",7155
"protected void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this , VAR_3 ) ; TYPE_3 . METHOD_3 ( this ) . METHOD_4 ( ) . METHOD_5 ( this ) ; }",protected void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_3 ) ; TYPE_3 . METHOD_3 ( this ) . METHOD_4 ( ) . METHOD_5 ( this ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7156
public void METHOD_1 ( TYPE_1 context ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( VAR_1 instanceof TYPE_3 ) { ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( context ) ; } } },public void METHOD_1 ( TYPE_1 context ) { this . context = context ; for ( TYPE_2 VAR_1 : VAR_2 ) { if ( VAR_1 instanceof TYPE_3 ) { ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( context ) ; } } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",7158
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7159
public void METHOD_1 ( int VAR_1 ) { VAR_2 = true ; this . VAR_3 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7160
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( ) ; VAR_2 = this ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",7161
"private void METHOD_1 ( java.lang.String answer , TYPE_1 VAR_1 ) { if ( answer != ( VAR_2 ) ) { METHOD_2 ( VAR_1 ) ; } else { ( VAR_3 ) ++ ; } METHOD_3 ( VAR_4 ) ; if ( ( VAR_5 ) == INT_1 ) { } }","private void METHOD_1 ( java.lang.String answer , TYPE_1 VAR_1 ) { if ( answer != ( VAR_2 ) ) { METHOD_2 ( VAR_1 ) ; } METHOD_3 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",7162
public void handle ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = STRING_1 ; METHOD_1 ( ) ; },public void handle ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 . setText ( STRING_1 ) ; METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7163
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; METHOD_3 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7164
public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { VAR_2 = VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7165
public void setValue ( TYPE_1 value ) { VAR_1 = value ; VAR_2 . setValue ( VAR_3 . METHOD_1 ( value ) ) ; },public void setValue ( TYPE_1 value ) { VAR_2 . setValue ( VAR_3 . METHOD_1 ( value ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7166
public void METHOD_1 ( java.util.Date time ) { this . VAR_1 = time ; },public void METHOD_1 ( java.util.Date time ) { return null ; },"['Insert Return', 'Insert Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7167
public void METHOD_1 ( double VAR_1 ) { VAR_2 = ( ) - > VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",7168
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( position ) ; VAR_2 = VAR_3 ; VAR_4 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_2 = VAR_3 ; VAR_4 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7169
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = STRING_1 ; VAR_3 = 1 ; if ( METHOD_2 ( getActivity ( ) ) ) { VAR_4 . execute ( VAR_2 ) ; } },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = STRING_1 ; VAR_4 . execute ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",7170
public boolean METHOD_1 ( ) { VAR_1 = VAR_2 . size ( ) ; return ( VAR_1 ) > 0 ; },public boolean METHOD_1 ( ) { return ( VAR_1 ) > 0 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7171
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7172
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = METHOD_2 ( VAR_2 ) ; } else { METHOD_3 ( ) ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { METHOD_3 ( ) ; return VAR_2 ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7173
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7174
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( ) . open ( VAR_1 . METHOD_3 ( ) . get ( 0 ) . toString ( ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . open ( VAR_1 . METHOD_3 ( ) . get ( 0 ) . toString ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7175
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } VAR_1 = true ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7176
public void METHOD_1 ( TYPE_1 response ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( response ) ; VAR_2 . METHOD_3 ( true ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 response ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( response ) ; VAR_2 . METHOD_3 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7177
"public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { VAR_2 = new TYPE_2 ( ) ; this . VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) ; } return this . VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new TYPE_1 ( METHOD_2 ( ) , new TYPE_2 ( ) ) ; } return this . VAR_1 ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7178
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 = false ; } else { VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_1 = true ; } },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_4 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7179
"private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( STRING_1 , VAR_2 . get ( STRING_2 ) , INT_1 ) ; VAR_3 = METHOD_2 ( STRING_3 , VAR_2 . get ( STRING_4 ) , INT_1 ) ; }","private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( STRING_1 , VAR_2 . get ( STRING_2 ) , INT_1 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7180
private void METHOD_1 ( ) { VAR_1 = false ; byte [ ] data = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; new java.lang.Thread ( new TYPE_1 ( data ) ) . start ( ) ; },private void METHOD_1 ( ) { VAR_1 = false ; byte [ ] data = METHOD_2 ( ) ; VAR_2 = null ; new java.lang.Thread ( new TYPE_1 ( data ) ) . start ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",7181
protected void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7182
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7183
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { ( VAR_1 ) -- ; return false ; } else { METHOD_2 ( ) ; VAR_1 = INT_1 ; return true ; } },private boolean METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { ( VAR_1 ) -- ; return false ; } else { METHOD_2 ( ) ; return true ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7187
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_4 = new TYPE_2 ( VAR_1 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7188
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = false ; METHOD_3 ( ) . start ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7189
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7190
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( this . VAR_2 ) == null ) this . VAR_2 = new java.util.HashMap < > ( ) ; this . VAR_3 . put ( VAR_4 , VAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_3 . put ( VAR_4 , VAR_1 ) ; return this ; }","['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7191
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList ( VAR_1 ) ; VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 = VAR_1 ; },private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7192
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7193
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( ) ; VAR_3 = null ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7194
"private void start ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_1 ( VAR_3 , STRING_1 ) ; VAR_4 = true ; this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","private void start ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_1 ( VAR_3 , STRING_1 ) ; this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7195
"public void METHOD_1 ( int position , float VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 = position ; VAR_5 = VAR_2 ; METHOD_2 ( ) ; if ( ( VAR_6 ) != null ) { VAR_6 . METHOD_1 ( position , VAR_1 , VAR_2 ) ; } }","public void METHOD_1 ( int position , float VAR_1 , int VAR_2 ) { VAR_4 = position ; VAR_5 = VAR_2 ; METHOD_2 ( ) ; if ( ( VAR_6 ) != null ) { VAR_6 . METHOD_1 ( position , VAR_1 , VAR_2 ) ; } }","['Move Assignment', 'Delete FieldWrite', 'Delete Assignment']",7196
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7197
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( STRING_1 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_3 . METHOD_5 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation']",7198
"public void METHOD_1 ( TYPE_1 item ) { synchronized ( VAR_1 ) { VAR_2 . add ( 0 , VAR_3 . METHOD_2 ( item ) ) ; } VAR_4 = new TYPE_2 ( this . VAR_2 . size ( ) ) ; TYPE_3 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 item ) { synchronized ( VAR_1 ) { VAR_2 . add ( 0 , VAR_3 . METHOD_2 ( item ) ) ; } TYPE_3 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",7199
private double METHOD_1 ( double VAR_1 ) { VAR_2 = VAR_1 * ( VAR_3 [ VAR_4 ] ) ; return VAR_2 ; },private double METHOD_1 ( double VAR_1 ) { return VAR_1 * ( VAR_3 [ VAR_4 ] ) ; },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7200
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } },"['Move BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7201
"public void METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { ( VAR_3 ) ++ ; }","public void METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { }","['Delete FieldWrite', 'Delete UnaryOperator']",7202
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7203
public void add ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_1 ; ( size ) ++ ; },public void add ( ) { },"['Delete TypeReference', 'Delete Parameter', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete UnaryOperator']",7204
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( this . VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; this . METHOD_2 ( this . VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7205
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( this , 0 , METHOD_3 ( ) , VAR_3 ) ; }","public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( this , 0 , METHOD_3 ( ) , VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7206
public TYPE_1 METHOD_1 ( TYPE_2 listener ) { this . VAR_1 = listener ; return this ; },public TYPE_1 METHOD_1 ( TYPE_2 listener ) { this . listener = listener ; return this ; },['Update FieldWrite'],7207
"public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 ; if ( ! ( VAR_4 ) ) { VAR_4 = true ; METHOD_3 ( ) ; } }","public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; if ( ! ( VAR_4 ) ) { VAR_4 = true ; METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7208
"public void METHOD_1 ( android.view.View view ) { intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { METHOD_3 ( new android.content.Intent ( this , VAR_1 class ) ) ; }","['Insert Invocation', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Invocation']",7209
"public void METHOD_1 ( TYPE_1 key , TYPE_2 value ) { value . METHOD_1 ( VAR_1 , replace ) ; ( VAR_2 ) ++ ; if ( ( ( VAR_2 ) % ( VAR_3 ) ) == 0 ) { VAR_1 . METHOD_2 ( ) ; } }","public void METHOD_1 ( TYPE_1 key , TYPE_2 value ) { value . METHOD_1 ( VAR_1 , replace ) ; }","['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",7210
public void METHOD_1 ( ) { TYPE_1 VAR_1 = this . VAR_1 ; if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; } this . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; this . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",7211
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = ! ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",7213
"public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { TYPE_2 . METHOD_2 ( view , STRING_1 , VAR_4 ) . show ( ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_7 = false ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , byte [ ] VAR_3 , java.lang.Throwable error ) { }","['Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7214
public void METHOD_1 ( java.lang.Object values ) { this . values = METHOD_2 ( values ) ; },public void METHOD_1 ( java.util.List < java.lang.Object > values ) { this . values = values ; },"['Update TypeReference', 'Move VariableRead', 'Insert TypeReference', 'Delete Invocation']",7215
public void METHOD_1 ( ) { size = 0 ; VAR_1 = null ; VAR_1 = null ; this . VAR_2 = true ; VAR_3 = VAR_4 ; },public void METHOD_1 ( ) { size = 0 ; this . VAR_2 = true ; VAR_3 = VAR_4 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7217
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7218
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 = ( ( java.util.Date ) ( VAR_7 . METHOD_3 ( ) . getValue ( ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7219
public void METHOD_1 ( TYPE_1 add ) { VAR_1 = add ; },public void METHOD_1 ( TYPE_1 add ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7220
public final TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { result = METHOD_2 ( ) ; } return new TYPE_2 ( result ) ; },public final TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } return new TYPE_2 ( result ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7221
public void METHOD_1 ( ) { VAR_1 . remove ( this ) ; VAR_2 . remove ( this ) ; VAR_3 = false ; VAR_2 . remove ( VAR_4 ) ; },public void METHOD_1 ( ) { VAR_1 . remove ( this ) ; VAR_2 . remove ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",7222
"protected int init ( ) { if ( ( VAR_1 ) >= ( VAR_2 . METHOD_1 ( ) ) ) { METHOD_2 ( VAR_3 , STRING_1 ) ; state = VAR_4 ; } else { state = VAR_5 ; } return 1 ; }",protected int init ( ) { state = VAR_5 ; return 1 ; },"['Move Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7223
public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7224
public TYPE_1 METHOD_1 ( android.content.Intent intent ) { VAR_1 = true ; if ( ( VAR_2 ) == null ) VAR_2 = new java.lang.Thread ( this ) ; if ( VAR_3 . METHOD_2 ( ) ) VAR_4 . start ( ) ; return VAR_5 . METHOD_3 ( ) ; },public TYPE_1 METHOD_1 ( android.content.Intent intent ) { VAR_1 = true ; VAR_4 . start ( ) ; return VAR_5 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",7225
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . offset = null ; return true ; },protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = null ; VAR_4 = null ; VAR_5 . offset = null ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7227
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; if ( ! ( VAR_4 ) ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; }","['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7228
protected void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7229
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( this , VAR_4 ) ; VAR_5 . start ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7230
public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7231
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; VAR_3 = VAR_4 ; if ( ( VAR_5 ) > 0 ) { VAR_1 . METHOD_2 ( VAR_5 ) ; } VAR_6 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . start ( ) ; VAR_3 = VAR_4 ; if ( ( VAR_5 ) > 0 ) { VAR_1 . METHOD_2 ( VAR_5 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7233
public int METHOD_1 ( ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; } return this . VAR_1 ; },public int METHOD_1 ( ) { return this . VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7234
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) ) ; VAR_3 = new TYPE_3 ( METHOD_4 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",7236
public void METHOD_1 ( ) { this . VAR_1 . open = false ; if ( ( VAR_2 . METHOD_2 ( ) ) != null ) this . VAR_2 = this . VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { if ( ( VAR_2 . METHOD_2 ( ) ) != null ) this . VAR_2 = this . VAR_2 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7237
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7238
public void METHOD_1 ( java.lang.String id ) { this . VAR_1 = id ; },public void METHOD_1 ( java.lang.Long id ) { this . id = id ; },"['Update TypeReference', 'Update FieldWrite']",7239
public java.lang.String get ( ) throws java.io.IOException { VAR_1 = null ; VAR_2 = null ; TYPE_1 . METHOD_1 ( this ) ; return result ; },public java.lang.String get ( ) throws java.io.IOException { TYPE_1 . METHOD_1 ( this ) ; return result ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7240
"public void METHOD_1 ( float VAR_1 ) { if ( VAR_1 < 0 ) { return ; } VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { return ; } METHOD_2 ( VAR_1 , VAR_1 ) ; }","public void METHOD_1 ( float VAR_1 ) { if ( VAR_1 < 0 ) { return ; } if ( ( VAR_3 ) == null ) { return ; } METHOD_2 ( VAR_1 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7241
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 a = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( a != null ) { if ( VAR_2 ) { VAR_3 = true ; return true ; } } return false ; },public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 a = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( a != null ) { if ( VAR_2 ) { return true ; } } return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7242
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) . METHOD_2 ( ) ) ) ; format = new TYPE_3 ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) . METHOD_2 ( ) ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7243
public java.lang.String METHOD_1 ( ) { if ( VAR_1 ) java.lang.System.out.println ( VAR_2 ) ; else { java.lang.System.out.println ( STRING_1 ) ; VAR_2 = STRING_2 ; } return VAR_2 ; },public java.lang.String METHOD_1 ( ) { java.lang.System.out.println ( VAR_2 ) ; return VAR_2 ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7244
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_7 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_7 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7245
"public void METHOD_1 ( double p , double i , double VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_2 ( p , i , VAR_1 , VAR_4 , VAR_2 ) ; }","public void METHOD_1 ( double p , double i , double VAR_1 ) { VAR_3 = new TYPE_2 ( p , i , VAR_1 , VAR_4 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7246
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7247
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; VAR_2 = 0 ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7248
public TYPE_1 METHOD_1 ( java.lang.Class VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Class VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },['Update FieldWrite'],7249
"void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( STRING_1 , new TYPE_1 ( ) , this ) ; METHOD_3 ( ) ; }","void METHOD_1 ( ) { METHOD_2 ( STRING_1 , new TYPE_1 ( ) , this ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7250
"private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; VAR_2 = null ; VAR_3 = VAR_4 ; VAR_5 . METHOD_2 ( VAR_6 . field , 1 ) ; VAR_7 . METHOD_3 ( ) ; }",private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; VAR_7 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation']",7251
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 p = TYPE_2 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( p ) ; VAR_2 = p ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 p = TYPE_2 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( p ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7252
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7253
"public void METHOD_1 ( ) { VAR_1 = ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ) == ( VAR_6 ) ; if ( ! ( VAR_1 ) ) { VAR_7 = VAR_8 ; } }","public void METHOD_1 ( ) { VAR_1 = ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ) == ( VAR_6 ) ; }","['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7254
public TYPE_1 METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return params ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; return params ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7255
"public synchronized void METHOD_1 ( double VAR_1 ) { this . VAR_1 += VAR_1 ; this . VAR_1 = TYPE_1 . METHOD_2 ( this . VAR_1 , 0 , VAR_2 ) ; }","public synchronized void METHOD_1 ( double VAR_1 ) { this . VAR_1 += VAR_1 ; TYPE_1 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; }","['Move Invocation', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7256
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_4 [ VAR_2 ] . METHOD_1 ( VAR_1 ) ; ( this . VAR_5 ) ++ ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_4 [ VAR_2 ] . METHOD_1 ( VAR_1 ) ; return true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete UnaryOperator']",7257
public void METHOD_1 ( double f ) { if ( f >= 1 ) { METHOD_2 ( ) ; return ; } if ( f <= 0 ) { METHOD_3 ( ) ; return ; } VAR_1 = f ; VAR_2 = true ; },public void METHOD_1 ( float f ) { if ( f >= 1 ) { METHOD_2 ( ) ; return ; } if ( f <= 0 ) { METHOD_3 ( ) ; return ; } VAR_1 = f ; VAR_2 = true ; },['Update TypeReference'],7258
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . start ( ) ; VAR_3 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7259
public void METHOD_1 ( int x ) { position = position . METHOD_2 ( x ) ; },public void METHOD_1 ( int x ) { position . METHOD_2 ( x ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7260
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_2 ) != ( VAR_3 ) ) return ; VAR_2 = VAR_4 ; VAR_5 = true ; VAR_6 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_2 ) != ( VAR_3 ) ) return ; VAR_2 = VAR_4 ; VAR_6 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7261
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7262
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = 0 ; VAR_4 . setText ( ( STRING_1 + ( VAR_3 ) ) ) ; VAR_2 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",7265
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( INT_1 ) ; this . VAR_2 = ( VAR_2 ) + 1 ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( INT_1 ) ; this . VAR_2 = + 1 ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; },"['Insert UnaryOperator', 'Move Literal', 'Delete FieldRead', 'Delete BinaryOperator']",7266
public void METHOD_1 ( int VAR_1 ) { VAR_2 = INT_1 ; if ( METHOD_2 ( ) ) { } else { VAR_3 = true ; } },public void METHOD_1 ( int VAR_1 ) { VAR_2 = INT_1 ; if ( METHOD_2 ( ) ) { } else { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7267
"public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_2 = false ; VAR_3 = VAR_4 [ i ] ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int i ) { VAR_3 = VAR_4 [ i ] ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7268
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = null ; VAR_3 = null ; TYPE_2 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( this , true ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { TYPE_3 . METHOD_3 ( this , true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7269
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7270
public java.lang.Void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; return super . METHOD_1 ( VAR_1 ) ; },public java.lang.Void METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7271
public void METHOD_1 ( ) throws java.lang.Throwable { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; },public void METHOD_1 ( ) throws java.lang.Throwable { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7273
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = VAR_4 ; VAR_7 = VAR_2 ; },private void METHOD_1 ( ) { VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = VAR_4 ; VAR_7 = VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7274
public static void METHOD_1 ( ) { VAR_1 . remove ( VAR_2 . METHOD_2 ( ) ) ; VAR_3 = VAR_4 ; VAR_5 . METHOD_3 ( true ) ; },public static void METHOD_1 ( ) { VAR_1 . remove ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",7275
"public void METHOD_1 ( ) { VAR_1 = true ; super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7276
"public void init ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 = new java.util.HashMap < TYPE_2 , TYPE_3 > ( ) ; VAR_5 = true ; }","public void init ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_4 = new java.util.HashMap < TYPE_2 , TYPE_3 > ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7277
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( VAR_2 . get ( STRING_1 ) ) ) ) ; VAR_3 = METHOD_3 ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( VAR_2 . get ( STRING_1 ) ) ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7278
"public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 , 0 ) ; }",public static void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Literal', 'Delete Invocation']",7279
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7280
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . start ( ) ; } if ( ( VAR_3 ) != null ) { VAR_4 . start ( ) ; } VAR_5 . METHOD_2 ( ) ; VAR_6 = true ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . start ( ) ; } if ( ( VAR_3 ) != null ) { VAR_4 . start ( ) ; } VAR_5 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7281
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; super . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 < TYPE_4 > ( this ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 < TYPE_4 > ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7282
public void METHOD_1 ( java.lang.String id ) { this . id = id ; VAR_1 = id . METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) && ( METHOD_4 ( ) ) ) { VAR_2 = VAR_3 ; } },public void METHOD_1 ( java.lang.String id ) { this . id = id ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7283
public void METHOD_1 ( int [ ] VAR_1 ) { array = VAR_1 ; VAR_2 = 0 ; VAR_3 = 1 ; VAR_4 = false ; },public void METHOD_1 ( int [ ] VAR_1 ) { array = VAR_1 ; VAR_2 = 0 ; VAR_3 = 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7284
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = true ; VAR_5 = true ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_5 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7285
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) , VAR_2 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; },"['Delete FieldRead', 'Delete ConstructorCall']",7286
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( this ) ; },"['Insert ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7287
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ) - > VAR_2 = true ) . METHOD_4 ( ( ) - > { VAR_2 = false ; } ) . METHOD_5 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ) - > VAR_2 = true ) . METHOD_4 ( ( ) - > VAR_2 = false ) . METHOD_5 ( ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert Invocation', 'Move Assignment', 'Insert Invocation', 'Insert Assignment', 'Insert TypeAccess', 'Insert FieldWrite', 'Insert Literal']",7288
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { this . VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7289
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7290
public void METHOD_1 ( ) { VAR_1 += VAR_2 . METHOD_2 ( ) ; if ( ( VAR_1 ) > INT_1 ) VAR_1 = INT_1 ; },public void METHOD_1 ( ) { VAR_1 += VAR_2 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7291
"protected void METHOD_1 ( int VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { getContext ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) } ; VAR_4 . METHOD_4 ( new TYPE_2 ( VAR_2 , VAR_1 ) ) ; VAR_5 = VAR_1 ; }","protected void METHOD_1 ( int VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { getContext ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) } ; VAR_4 . METHOD_4 ( new TYPE_2 ( VAR_2 , VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7292
private void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = INT_1 ; time = 0 ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = INT_1 ; time = 0 ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7293
public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert FieldRead', 'Insert Literal', 'Insert Assignment', 'Insert FieldWrite', 'Insert ConstructorCall']",7295
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",7296
public void METHOD_1 ( ) { if ( ( VAR_1 ) != 1 ) { ( VAR_1 ) ++ ; VAR_2 = METHOD_2 ( ) ; } },public void METHOD_1 ( ) { ( VAR_1 ) ++ ; VAR_2 = METHOD_2 ( ) ; if ( ( VAR_2 ) == 0 ) { ( VAR_1 ) -- ; VAR_2 = METHOD_2 ( ) ; } },"['Move UnaryOperator', 'Move Assignment', 'Update BinaryOperator', 'Update FieldRead', 'Update Literal', 'Insert UnaryOperator', 'Insert Assignment', 'Insert FieldWrite', 'Insert FieldWrite', 'Insert Invocation']",7297
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = this . VAR_3 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Move VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7298
public void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( ( this . query ) != null ) { java.lang.String VAR_2 = ( STRING_1 + VAR_1 ) + STRING_2 ; this . VAR_3 = VAR_2 ; } },public void METHOD_1 ( java.lang.Integer VAR_1 ) { if ( ( this . query ) != null ) { java.lang.String VAR_2 = ( STRING_1 + VAR_1 ) + STRING_2 ; this . query = ( this . query ) + VAR_2 ; } },"['Update FieldWrite', 'Insert BinaryOperator', 'Insert FieldRead', 'Move VariableRead', 'Insert ThisAccess']",7299
"public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = true ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7301
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { VAR_1 . METHOD_3 ( STRING_1 ) ; METHOD_2 ( ) . METHOD_4 ( ) ; VAR_2 = METHOD_5 ( ) ; } },public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { VAR_1 . METHOD_3 ( STRING_1 ) ; METHOD_2 ( ) . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7302
"public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { buf = TYPE_2 . METHOD_2 ( buf , VAR_2 . length ) ; VAR_3 . put ( VAR_1 ) ; return this ; }","public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { TYPE_2 . METHOD_2 ( buf , VAR_2 . length ) ; VAR_3 . put ( VAR_1 ) ; return this ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7303
public void METHOD_1 ( ) { this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; this . VAR_2 = new java.util.ArrayList < java.lang.Integer > ( ) ; this . VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.ArrayList < java.lang.Integer > ( ) ; VAR_3 = false ; },"['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert FieldWrite', 'Move ConstructorCall', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7305
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7306
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( ( VAR_4 ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( ( VAR_4 ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ) ) ; },"['Update FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation']",7307
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7308
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; }","['Delete FieldRead', 'Delete FieldRead']",7309
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 = null ; },public void METHOD_1 ( TYPE_1 VAR_5 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; },"['Update Parameter', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7310
"public TYPE_1 METHOD_1 ( java.lang.String name ) { this . VAR_1 = new TYPE_2 ( name , null ) ; return this ; }",public TYPE_1 METHOD_1 ( java.lang.String name ) { this . name = name ; return this ; },"['Update FieldWrite', 'Move VariableRead', 'Delete Literal', 'Delete ConstructorCall']",7312
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7313
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_3 = STRING_1 ; } else { VAR_3 = null ; } if ( ( VAR_4 ) == null ) { } else { VAR_4 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_4 ) == null ) { } else { VAR_4 . METHOD_1 ( VAR_1 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7314
"public void METHOD_1 ( java.lang.String text ) { TYPE_1 message = VAR_1 . METHOD_2 ( text ) ; METHOD_3 ( ) ; VAR_2 = true ; METHOD_4 ( VAR_1 . METHOD_5 ( ) , message ) ; }","public void METHOD_1 ( java.lang.String text ) { TYPE_1 message = VAR_1 . METHOD_2 ( text ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) , message ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7315
private void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( ) { new TYPE_1 ( ) . execute ( ) ; },"['Insert Invocation', 'Move ConstructorCall', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeReference', 'Delete LocalVariable', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",7316
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 . setValue ( 0 ) ; METHOD_2 ( ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",7317
public void METHOD_1 ( int position ) { if ( position != ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; } VAR_1 = position ; },public void METHOD_1 ( int position ) { TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7318
public static void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 = false ; },public static void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7320
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) . METHOD_3 ( ) ) ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7321
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; VAR_2 = true ; VAR_3 = false ; VAR_4 . start ( ) ; }","public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; VAR_3 = false ; VAR_4 . start ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7322
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( null != ( VAR_2 ) ) { VAR_2 . METHOD_3 ( null ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7323
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) == VAR_3 ) { VAR_4 = VAR_5 ; VAR_6 . METHOD_3 ( null ) ; } METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) == VAR_3 ) { VAR_6 . METHOD_3 ( null ) ; } METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7324
public void METHOD_1 ( int [ ] VAR_1 ) { if ( VAR_2 . isEmpty ( ) ) { VAR_3 = 0 ; } else { VAR_4 . METHOD_2 ( VAR_2 . size ( ) ) ; } VAR_2 . add ( VAR_1 ) ; },public void METHOD_1 ( int [ ] VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",7326
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },public void METHOD_1 ( ) { VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7327
protected void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_4 . getValue ( ) ; METHOD_3 ( VAR_3 ) ; } },protected void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_4 . getValue ( ) ) ; } },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7328
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7329
private void METHOD_1 ( ) { java.io.File VAR_1 = new java.io.File ( STRING_1 ) ; if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } VAR_2 = VAR_1 ; },private void METHOD_1 ( ) { java.io.File VAR_1 = new java.io.File ( STRING_1 ) ; if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7330
public void METHOD_1 ( ) { VAR_1 = false ; try { this . METHOD_2 ( null ) ; } catch ( java.lang.Exception VAR_2 ) { } this . VAR_3 = - 1 ; this . VAR_4 = - 1 ; },public void METHOD_1 ( ) { VAR_1 = false ; try { this . METHOD_2 ( null ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7331
"private void METHOD_1 ( ) { try { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_7 = false ; VAR_8 = STRING_2 ; } }","private void METHOD_1 ( ) { try { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_7 = false ; VAR_8 = STRING_2 ; } }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7332
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) . show ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) . show ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7333
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = getActivity ( ) . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , this ) ; super . METHOD_1 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) . METHOD_4 ( VAR_3 , null , this ) ; super . METHOD_1 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7334
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; VAR_3 = getActivity ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7335
"protected void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; METHOD_3 ( ) ; }","protected void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { }","['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7336
void METHOD_1 ( ) { if ( ( VAR_1 ) < INT_1 ) { VAR_2 = true ; VAR_1 = INT_1 ; VAR_3 = FLOAT_1 ; } else { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_3 = FLOAT_2 ; } },void METHOD_1 ( ) { if ( ( VAR_1 ) < INT_1 ) { VAR_1 = INT_1 ; VAR_3 = FLOAT_1 ; } else { METHOD_2 ( ) ; VAR_1 = 0 ; VAR_3 = FLOAT_2 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7337
public void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 = context ; METHOD_4 ( context ) ; },public void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; METHOD_4 ( context ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7338
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = false ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7339
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; VAR_3 = true ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_3 = false ; },"['Update Literal', 'Delete Invocation', 'Delete Invocation']",7341
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; type = METHOD_2 ( ) . getString ( ""type"" , STRING_1 ) ; VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; type = METHOD_2 ( ) . getString ( ""type"" , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7342
"public void METHOD_1 ( ) { VAR_1 = true ; super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 . i ( VAR_4 , STRING_1 ) ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 . i ( VAR_4 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7343
public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( TYPE_1 ) ( view . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_4 ) ) ) ; },public void METHOD_1 ( android.view.View view ) { VAR_1 = ( ( TYPE_1 ) ( view . METHOD_2 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7344
public void METHOD_1 ( int position ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_3 ) ; } METHOD_3 ( position ) ; TYPE_1 . METHOD_4 ( this ) ; },public void METHOD_1 ( int position ) { VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( VAR_3 ) ; } METHOD_3 ( position ) ; TYPE_1 . METHOD_4 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7345
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 ; } else { VAR_1 = VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = VAR_1 . METHOD_2 ( ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7346
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( INT_1 , INT_1 ) ; this . VAR_5 = VAR_6 ; }",public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7347
"public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; if ( VAR_2 . equals ( STRING_1 ) ) text = VAR_1 ; else text = ( ( text ) + ""\n"" ) + VAR_1 ; }",public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; text = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete Block', 'Delete If']",7348
public void METHOD_1 ( TYPE_1 source ) { this . source = source ; TYPE_2 VAR_1 = new TYPE_2 ( source ) ; this . METHOD_2 ( VAR_1 ) ; VAR_2 = STRING_1 ; },public void METHOD_1 ( TYPE_1 source ) { this . source = source ; TYPE_2 VAR_1 = new TYPE_2 ( source ) ; this . METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7349
protected void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation']",7350
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_2 = VAR_1 . METHOD_3 ( ) ; } else { VAR_2 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",7351
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7352
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7353
"private void METHOD_1 ( ) { if ( VAR_1 . METHOD_1 ( VAR_2 , step , VAR_3 ) ) { step = INT_1 ; METHOD_2 ( ) ; } }","private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 , step , VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",7354
public void update ( TYPE_1 VAR_1 ) { super . update ( VAR_1 ) ; super . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; },public void update ( TYPE_1 VAR_1 ) { super . update ( VAR_1 ) ; super . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7355
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = false ; VAR_4 = STRING_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7356
protected void METHOD_1 ( ) { VAR_1 = false ; java.lang.System.out.println ( STRING_1 ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation']",7357
public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null ) ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7358
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = null ; VAR_4 = STRING_1 ; METHOD_3 ( ) ; VAR_5 . setText ( VAR_4 ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_4 ( ) ; VAR_3 = null ; METHOD_3 ( ) ; VAR_5 . setText ( STRING_1 ) ; },"['Move Invocation', 'Update TypeAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7359
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; VAR_4 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_3 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7360
protected void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) { VAR_2 . METHOD_3 ( ) ; } },protected void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) { VAR_2 . METHOD_3 ( ) ; output = null ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",7361
"public void METHOD_1 ( java.lang.CharSequence VAR_1 , int i , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_5 . toString ( ) ; }","public void METHOD_1 ( java.lang.CharSequence VAR_1 , int i , int VAR_2 , int VAR_3 ) { }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7362
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( true ) ; this . VAR_2 = true ; this . VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7363
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } METHOD_2 ( true ) ; VAR_6 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7364
public void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = true ; VAR_4 = VAR_1 ; VAR_2 . METHOD_2 ( ) ; } TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { VAR_4 = VAR_1 ; VAR_2 . METHOD_2 ( ) ; } TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7365
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_3 = false ; } super . METHOD_1 ( ) ; VAR_4 = null ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; VAR_4 = null ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7366
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . equals ( VAR_1 ) ) ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 . METHOD_2 ( ) ; },"['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7367
"public void METHOD_1 ( ) { try { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_1 ( VAR_5 ) ; } }","public void METHOD_1 ( ) { try { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_1 ( VAR_5 ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7368
public int METHOD_1 ( java.lang.String temp ) { int VAR_1 = VAR_2 ; if ( temp . METHOD_2 ( STRING_1 ) ) VAR_1 = VAR_3 ; else if ( temp . METHOD_2 ( STRING_2 ) ) VAR_1 = VAR_4 ; return VAR_1 ; },public boolean METHOD_1 ( java.lang.String temp ) { boolean VAR_1 = false ; if ( temp . METHOD_2 ( STRING_1 ) ) VAR_1 = false ; else if ( temp . METHOD_2 ( STRING_2 ) ) VAR_1 = true ; return VAR_1 ; },"['Update TypeReference', 'Update TypeReference', 'Insert Literal', 'Insert Literal', 'Insert Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead']",7369
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7370
"public TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_3 ( false , VAR_4 ) ; VAR_5 . start ( ) ; VAR_6 . METHOD_4 ( STRING_1 , METHOD_5 ( ) ) ; return VAR_3 ; }",public TYPE_1 METHOD_1 ( ) { return VAR_3 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",7371
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; if ( VAR_1 == null ) { return ; } VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 = VAR_1 ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7372
public boolean contains ( java.lang.String name ) { if ( ( names ) == null ) { names = new java.util.HashSet < java.lang.String > ( ) ; names . METHOD_1 ( VAR_1 . values ( ) ) ; } return VAR_2 . contains ( name ) ; },public boolean contains ( java.lang.String name ) { return VAR_2 . contains ( name ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",7373
public boolean remove ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = - 1 ; return VAR_4 . remove ( VAR_1 ) ; },public boolean remove ( TYPE_1 VAR_1 ) { return VAR_4 . remove ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7374
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7375
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , this . METHOD_3 ( ) ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",7376
"public void METHOD_1 ( android.view.View view ) { VAR_1 = false ; VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_3 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_3 ( intent ) ; METHOD_2 ( ) ; }","['Move Invocation', 'Update TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7377
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; METHOD_2 ( ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7378
"private void METHOD_1 ( java.util.ArrayList < java.lang.String > list ) { if ( VAR_1 . METHOD_2 ( ) ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this , list ) ; VAR_3 = true ; } } }","private void METHOD_1 ( java.util.ArrayList < java.lang.String > list ) { if ( VAR_1 . METHOD_2 ( ) ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( this , list ) ; } } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7379
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; TYPE_2 . METHOD_4 ( VAR_2 ) ; VAR_5 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; TYPE_2 . METHOD_4 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7380
"private TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; VAR_1 = true ; java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 , STRING_3 , STRING_4 ) . METHOD_3 ( VAR_3 ) . start ( ) ; return VAR_2 ; }","private TYPE_1 METHOD_1 ( ) throws java.io.IOException { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 , STRING_3 , STRING_4 ) . METHOD_3 ( VAR_3 ) . start ( ) ; return VAR_2 ; }","['Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7381
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 context = TYPE_4 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 = ( ( TYPE_5 ) ( context . METHOD_3 ( STRING_1 ) ) ) ; },public void init ( ) throws TYPE_2 { },"['Delete TypeReference', 'Delete Parameter', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7382
protected void execute ( ) { if ( ( VAR_1 ) == false ) { VAR_2 . METHOD_1 ( ) ; VAR_1 = true ; } else { VAR_2 . METHOD_2 ( ) ; VAR_1 = false ; } VAR_3 = true ; },protected void execute ( ) { if ( VAR_1 = false ) ; { VAR_2 . METHOD_1 ( ) ; VAR_1 = true ; } if ( VAR_1 = true ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = false ; } VAR_3 = true ; },"['Insert If', 'Move Invocation', 'Move Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Move Invocation', 'Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block']",7383
public void METHOD_1 ( java.lang.String url ) { this . VAR_1 = url ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = 1 ; VAR_5 . METHOD_4 ( url ) ; },public void METHOD_1 ( java.lang.String url ) { this . VAR_1 = url ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( url ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7384
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = new java.util.ArrayList ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( true ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( true ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess']",7385
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_1 ; METHOD_2 ( VAR_1 ) ; } else { VAR_2 = null ; METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 ) ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7386
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = true ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( null ) ; VAR_4 . METHOD_6 ( ) ; VAR_4 = null ; }",public void METHOD_1 ( ) { VAR_1 = true ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( null ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7387
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) , 0 , VAR_2 ) ; VAR_3 = true ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) , 0 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7388
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; } else { VAR_3 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; } else { VAR_3 = false ; VAR_2 = false ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",7389
public void METHOD_1 ( long VAR_1 ) { VAR_2 = ( ( int ) ( VAR_1 / INT_1 ) ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . setText ( java.lang.Integer.toString ( VAR_2 ) ) ; },public void METHOD_1 ( long VAR_1 ) { int VAR_2 = ( ( int ) ( VAR_1 / INT_1 ) ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . setText ( java.lang.Integer.toString ( VAR_2 ) ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7390
void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",7391
"public void show ( ) { VAR_1 = - 1 ; VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_4 ) ; VAR_5 = false ; if ( ! ( VAR_6 ) ) { VAR_3 . METHOD_2 ( VAR_7 , VAR_8 ) ; VAR_6 = true ; } }","public void show ( ) { VAR_1 = - 1 ; VAR_2 = false ; VAR_3 . METHOD_1 ( VAR_4 ) ; if ( ! ( VAR_6 ) ) { VAR_3 . METHOD_2 ( VAR_7 , VAR_8 ) ; VAR_6 = true ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7392
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7394
public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { METHOD_2 ( VAR_3 ) ; data . METHOD_1 ( ) ; } if ( VAR_4 ) { METHOD_3 ( ) ; VAR_4 = false ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { METHOD_2 ( VAR_3 ) ; data . METHOD_1 ( ) ; } },"['Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7396
"private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; VAR_3 = VAR_2 ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7398
"public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_2 ) ) ) ; return false ; }",public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",7399
"public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = FLOAT_1 ; this . VAR_2 = FLOAT_2 ; this . VAR_3 = 0 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = FLOAT_1 ; VAR_2 = FLOAT_2 ; VAR_3 = 0 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move Literal', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7400
public void METHOD_1 ( TYPE_1 msg ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( VAR_3 . str ) ; VAR_3 . str = STRING_1 ; },public void METHOD_1 ( TYPE_1 msg ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( VAR_3 . str ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7401
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = new java.lang.StringBuilder ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7402
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7403
"public boolean METHOD_1 ( int x , int y , int VAR_1 , int VAR_2 ) { VAR_3 = false ; VAR_4 = 0 ; return false ; }","public boolean METHOD_1 ( int x , int y , int VAR_1 , int VAR_2 ) { VAR_3 = false ; return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7404
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { getData ( ) ; } if ( ( VAR_1 ) != null ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_4 ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { getData ( ) ; } if ( ( VAR_1 ) != null ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; } return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7405
public void remove ( ) { first = VAR_1 . remove ( ) ; },public void remove ( ) { VAR_1 . remove ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7406
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 . getClass ( ) . getName ( ) ) ; } }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",7407
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7409
public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.Double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7410
public void METHOD_1 ( TYPE_1 b ) { VAR_1 = VAR_2 . getInt ( VAR_3 ) ; VAR_4 = VAR_2 . getString ( VAR_5 ) ; VAR_6 = VAR_2 . getInt ( VAR_7 ) ; },public void METHOD_1 ( TYPE_1 b ) { VAR_1 = VAR_2 . getInt ( VAR_3 ) ; VAR_4 = VAR_2 . getString ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7411
public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; TYPE_2 . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . show ( ) ; },public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . show ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7412
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { position = VAR_4 ; if ( VAR_3 != null ) { position = VAR_3 . METHOD_2 ( VAR_5 , VAR_6 ) ; } return VAR_1 . METHOD_3 ( VAR_7 , VAR_2 , false ) ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return VAR_1 . METHOD_3 ( VAR_7 , VAR_2 , false ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",7413
public void METHOD_1 ( java.lang.Long VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.lang.Long VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7415
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7417
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = VAR_4 ; METHOD_2 ( VAR_5 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7418
"public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 result = new TYPE_1 ( VAR_2 , VAR_3 , METHOD_2 ( ) , VAR_1 , VAR_4 , VAR_5 ) ; VAR_6 = VAR_7 ; return result ; }","public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , METHOD_2 ( ) , VAR_1 , VAR_4 , VAR_5 ) ; }","['Move ConstructorCall', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",7419
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( 0 ) ; VAR_3 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( 0 ) ; VAR_3 = false ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7420
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = null ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } super . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7421
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7422
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7423
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long VAR_4 ) { VAR_1 . METHOD_2 ( VAR_5 ) ; int VAR_6 = VAR_3 ; VAR_7 = VAR_6 ; VAR_8 . METHOD_3 ( VAR_9 [ VAR_6 ] ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View VAR_2 , int VAR_3 , long VAR_4 ) { VAR_1 . METHOD_2 ( VAR_5 ) ; int VAR_6 = VAR_3 ; VAR_8 . METHOD_3 ( VAR_9 [ VAR_6 ] ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7424
"public void METHOD_1 ( double x , double y ) { this . VAR_1 = x ; this . VAR_2 = y ; this . VAR_3 . METHOD_2 ( x ) ; this . VAR_3 . METHOD_3 ( y ) ; }","public void METHOD_1 ( double x , double y ) { this . VAR_3 . METHOD_2 ( x ) ; this . VAR_3 . METHOD_3 ( y ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7425
public void METHOD_1 ( ) { VAR_1 = null ; VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7426
public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( position ) . getView ( ) . METHOD_4 ( VAR_3 ) ) ; VAR_4 = ( ( TYPE_1 ) ( VAR_2 . METHOD_3 ( position ) ) ) . METHOD_5 ( ) ; },public void METHOD_1 ( int position ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( position ) . getView ( ) . METHOD_4 ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7427
"public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_4 = ( VAR_5 ) + 1 ; VAR_6 = VAR_7 ; VAR_8 . METHOD_2 ( VAR_2 , ( ( list . METHOD_3 ( ) ) - 1 ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_8 . METHOD_2 ( VAR_2 , list . METHOD_3 ( ) ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Literal', 'Delete BinaryOperator']",7428
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_6 ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7429
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7430
public void METHOD_1 ( ) { context = TYPE_1 . METHOD_2 ( 1 ) ; },public void METHOD_1 ( ) { this . context = TYPE_1 . METHOD_2 ( 1 ) ; },['Insert ThisAccess'],7431
public void METHOD_1 ( TYPE_1 name ) { METHOD_2 ( STRING_1 ) ; VAR_1 = false ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 name ) { METHOD_2 ( STRING_1 ) ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7432
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 += ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) . getText ( ) ; VAR_3 . setText ( VAR_2 ) ; VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 += ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) . getText ( ) ; VAR_3 . setText ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7434
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { if ( ( VAR_2 ) == null ) return ; VAR_3 = VAR_4 . get ( position ) ; VAR_5 = position ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_3 = VAR_4 . get ( position ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7435
public void METHOD_1 ( ) { VAR_1 = 0 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7436
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; listener = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7437
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7438
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; VAR_3 = null ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_3 = null ; VAR_1 = null ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7439
"public void METHOD_1 ( ) { ( VAR_1 ) ++ ; assertEquals ( VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) , STRING_1 ) ; }","public void METHOD_1 ( ) { assertEquals ( VAR_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) , STRING_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",7441
public void METHOD_1 ( android.view.View view ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; },public void METHOD_1 ( android.view.View view ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7442
"public boolean METHOD_1 ( TYPE_1 answer ) throws TYPE_2 { VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( 1 , answer . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; return true ; }",public boolean METHOD_1 ( TYPE_1 answer ) throws TYPE_2 { return true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7443
public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = 1.0 ; },public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7445
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 1 ] [ 1 ] ; VAR_3 = 1 ; VAR_4 = 1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ 1 ] [ 1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7446
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7447
"protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_1 == ( VAR_3 ) ) && ( VAR_2 == ( VAR_4 ) ) ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( VAR_5 ) ; VAR_6 = true ; } }","protected void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_1 == ( VAR_3 ) ) && ( VAR_2 == ( VAR_4 ) ) ) { java.lang.System.out.println ( STRING_1 ) ; METHOD_2 ( VAR_5 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7448
public void METHOD_1 ( java.lang.String writer ) { VAR_1 = writer ; },public void METHOD_1 ( java.lang.String writer ) { this . writer = writer ; },"['Update FieldWrite', 'Insert ThisAccess']",7449
public void METHOD_1 ( ) { if ( ( VAR_1 ) < INT_1 ) { VAR_1 = 0 ; METHOD_2 ( VAR_1 ) ; } else { VAR_1 -= INT_2 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { METHOD_2 ( VAR_1 ) ; } else { VAR_1 -= INT_2 ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } },"['Update BinaryOperator', 'Move Literal', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Assignment']",7450
"public void METHOD_1 ( ) { VAR_1 = 0 ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) , 0 ) ; VAR_2 . METHOD_5 ( ) ; }",public void METHOD_1 ( ) { VAR_2 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Literal', 'Delete Invocation']",7451
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) . METHOD_3 ( VAR_4 ) . build ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7452
"public static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 , java.lang.String [ ] VAR_2 ) { VAR_3 . put ( VAR_4 , VAR_2 [ 0 ] ) ; VAR_3 . put ( VAR_5 , VAR_2 [ 1 ] ) ; VAR_6 = VAR_2 ; }","public static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 , java.lang.String [ ] VAR_2 ) { VAR_3 . put ( VAR_4 , VAR_2 [ 0 ] ) ; VAR_3 . put ( VAR_5 , VAR_2 [ 1 ] ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7454
"public void METHOD_1 ( TYPE_1 VAR_1 , float x , float y , int VAR_2 , int VAR_3 ) { ( i ) ++ ; }","public void METHOD_1 ( TYPE_1 VAR_1 , float x , float y , int VAR_2 , int VAR_3 ) { }","['Delete FieldWrite', 'Delete UnaryOperator']",7456
public final void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 != null ) && ( ( this . VAR_1 ) == null ) ) { this . VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) ; } },public final void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 != null ) && ( ( this . VAR_1 ) == null ) ) { this . VAR_1 = VAR_1 ; } },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",7457
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_1 = VAR_4 . METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 = VAR_4 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7458
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7459
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; VAR_6 = INT_1 ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7460
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = null ; },public void METHOD_1 ( ) { this . VAR_2 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7461
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_2 ) == null ) && ( TYPE_1 . METHOD_2 ( ) ) ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; } VAR_3 = METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_2 ) == null ) && ( TYPE_1 . METHOD_2 ( ) ) ) { VAR_2 = new TYPE_2 ( VAR_3 ) ; } METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7462
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . append ( VAR_3 . toString ( ) ) ; VAR_4 . add ( VAR_1 ) ; VAR_5 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_2 . append ( VAR_3 . toString ( ) ) ; VAR_4 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7463
"public void METHOD_1 ( TYPE_1 n ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( new TYPE_2 ( new TYPE_3 ( VAR_5 , VAR_2 ) , VAR_3 ) ) ; }","public void METHOD_1 ( TYPE_1 n ) { VAR_3 = VAR_4 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( new TYPE_2 ( new TYPE_3 ( VAR_5 , VAR_2 ) , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7464
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; VAR_2 = false ; },public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7465
public java.lang.String METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) ; return STRING_1 ; },public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; return STRING_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7466
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( this . VAR_3 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( this . VAR_3 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7468
"public void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) { this . VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; } else { this . VAR_2 = new TYPE_1 ( STRING_1 , VAR_1 ) ; } }",public void METHOD_1 ( java.lang.Throwable VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) { this . VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block']",7469
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) && ( VAR_3 . equals ( STRING_1 ) ) ) { VAR_2 = false ; VAR_4 = TYPE_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) && ( VAR_3 . equals ( STRING_1 ) ) ) { VAR_2 = false ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7470
"private void METHOD_1 ( int x , int y , boolean open ) { VAR_1 . add ( x ) ; VAR_2 . add ( y ) ; VAR_3 . add ( open ) ; ( VAR_4 ) ++ ; }","private void METHOD_1 ( int x , int y , boolean open ) { VAR_1 . add ( x ) ; VAR_2 . add ( y ) ; VAR_3 . add ( open ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",7471
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_1 ( VAR_1 , view , position , id , METHOD_2 ( position , true ) ) ; VAR_3 = position - ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 . METHOD_1 ( VAR_1 , view , position , id , METHOD_2 ( position , true ) ) ; VAR_3 = position ; }","['Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",7472
"private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( 0.0 ) ; VAR_2 . METHOD_3 ( ""0"" ) ; } if ( VAR_3 ) { VAR_4 = new java.lang.StringBuilder ( ) ; VAR_3 = false ; } }","private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( 0.0 ) ; VAR_2 . METHOD_3 ( ""0"" ) ; } }","['Delete FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7474
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( this . VAR_1 ) != null ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",7475
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = true ; VAR_4 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_4 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7476
public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . output = 0 ; this . VAR_3 = VAR_4 . NULL ; this . VAR_5 = true ; this . VAR_6 = false ; },public void METHOD_1 ( ) { this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . output = 0 ; this . VAR_3 = VAR_4 . NULL ; this . VAR_5 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7477
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getText ( ) . length ( ) ) > 0 ) { java.lang.String VAR_3 = VAR_2 . getText ( ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 = VAR_6 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . getText ( ) . length ( ) ) > 0 ) { java.lang.String VAR_3 = VAR_2 . getText ( ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7478
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 = METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_2 = METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",7479
private void METHOD_1 ( ) { setState ( VAR_1 ) ; METHOD_2 ( ( - ( VAR_2 ) ) ) ; VAR_3 = true ; },private void METHOD_1 ( ) { setState ( VAR_1 ) ; METHOD_2 ( ( - ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7481
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) [ VAR_1 ] ; VAR_4 = true ; },public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) [ VAR_1 ] ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7482
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; },private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) return ; VAR_2 = false ; VAR_3 = false ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7483
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7484
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . length ( ) ) == 0 ) { VAR_3 = STRING_1 ; METHOD_2 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . length ( ) ) == 0 ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7485
"private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( false ) ; TYPE_1 . METHOD_3 ( 0 , true ) ; TYPE_2 . METHOD_3 ( 0 , true ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_4 ( ) ; VAR_2 = false ; }","private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( false ) ; TYPE_1 . METHOD_3 ( 0 , true ) ; TYPE_2 . METHOD_3 ( 0 , true ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7486
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = false ; } VAR_1 = null ; },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7487
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; init ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7488
public void METHOD_1 ( ) { VAR_1 = VAR_2 = VAR_3 = VAR_4 = VAR_5 = VAR_6 = 0 ; VAR_7 . METHOD_2 ( 0 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_7 . METHOD_2 ( 0 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment']",7489
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_4 = VAR_2 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7490
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7491
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; } METHOD_2 ( VAR_3 , TYPE_2 . METHOD_3 ( ) ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_3 , TYPE_2 . METHOD_3 ( ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7492
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; } VAR_5 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_5 . METHOD_4 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",7493
"public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_1 ) { VAR_2 = new TYPE_1 ( this . METHOD_2 ( ) , VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; }","public void METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( this . METHOD_2 ( ) , VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7494
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; VAR_3 = false ; VAR_4 = false ; METHOD_7 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; VAR_3 = false ; METHOD_7 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7495
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; VAR_2 = false ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7496
public boolean METHOD_1 ( ) throws TYPE_1 { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_1 = true ; } return ! ( VAR_2 . isEmpty ( ) ) ; },public boolean METHOD_1 ( ) throws TYPE_1 { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } return ! ( VAR_2 . isEmpty ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7497
"public void METHOD_1 ( TYPE_1 results ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) . replace ( VAR_2 , VAR_1 ) . commit ( ) ; VAR_3 = VAR_4 ; }",public void METHOD_1 ( TYPE_1 results ) { },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7498
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_2 ; VAR_5 = VAR_6 ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 , this ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_5 = VAR_6 ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 , this ) ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7499
public void METHOD_1 ( ) { try { VAR_1 = VAR_2 ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; } } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { try { if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; } } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7500
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; VAR_3 = true ; index = - 1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; index = - 1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7501
public synchronized void start ( ) { if ( this . VAR_1 ) { return ; } VAR_1 = true ; VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; },public synchronized void start ( ) { if ( this . VAR_1 ) { return ; } VAR_2 = new java.lang.Thread ( this ) ; VAR_3 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7503
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( 1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( new TYPE_1 ( STRING_1 ) ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( 1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( new TYPE_1 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7504
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_4 = VAR_3 ; VAR_5 = true ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { VAR_5 = true ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7505
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( ! ( VAR_3 . equals ( VAR_4 ) ) ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 = VAR_4 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7507
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7508
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) VAR_2 = VAR_4 ; else VAR_2 = VAR_3 ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = VAR_3 ; METHOD_2 ( ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7510
public void METHOD_1 ( ) { if ( VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; VAR_3 = ! ( VAR_4 ) ; } } },public void METHOD_1 ( ) { if ( VAR_1 ) { if ( ! ( VAR_2 ) ) { METHOD_2 ( ) ; } } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",7511
"void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_2 ) ) { METHOD_2 ( VAR_3 class ) ; VAR_2 = true ; VAR_1 . i ( STRING_1 , STRING_3 ) ; } }",void METHOD_1 ( ) { METHOD_2 ( VAR_3 class ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",7512
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = - 1 ; VAR_4 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7513
public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = this . VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",7516
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_2 ; this . VAR_4 = VAR_2 ; this . VAR_5 = VAR_2 ; this . VAR_6 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_2 ; this . VAR_6 . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7517
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; value = VAR_1 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead']",7518
public java.lang.String METHOD_1 ( ) { VAR_1 = new java.util.Scanner ( VAR_2 ) ; return VAR_1 . METHOD_2 ( ) ; },public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7519
"public static void METHOD_1 ( java.lang.String item , int VAR_1 , TYPE_1 output , java.lang.Object ... VAR_2 ) { VAR_3 . METHOD_2 ( item , VAR_1 , output , VAR_2 ) ; VAR_4 = VAR_5 ; }","public static void METHOD_1 ( java.lang.String item , int VAR_1 , TYPE_1 output , java.lang.Object ... VAR_2 ) { VAR_3 . METHOD_2 ( item , VAR_1 , output , VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7520
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7521
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 = new TYPE_2 ( null , false ) ; }",public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",7522
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7523
public void METHOD_1 ( ) { this . status = new TYPE_1 ( VAR_1 ) ; this . status . METHOD_2 ( VAR_2 ) ; this . VAR_3 = VAR_4 ; },public void METHOD_1 ( ) { this . status = new TYPE_1 ( VAR_1 ) ; this . status . METHOD_2 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7525
public final TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public final TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",7526
synchronized void METHOD_1 ( final boolean VAR_1 ) { if ( VAR_2 ) { VAR_3 = VAR_1 ; } else { VAR_4 = true ; VAR_5 = VAR_1 ; } },synchronized void METHOD_1 ( final boolean VAR_1 ) { VAR_4 = true ; VAR_5 = VAR_1 ; },"['Move Assignment', 'Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7527
"private void init ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( VAR_3 ) ; parameters = new TYPE_2 ( ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_1 ( VAR_2 ) ; offset = new TYPE_4 ( 0 , 0 ) ; }",private void init ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( VAR_3 ) ; parameters = new TYPE_2 ( ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_1 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",7528
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = true ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . add ( VAR_1 ) ; return this ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7529
protected void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7530
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( new TYPE_2 ( ) ) ; },public void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( new TYPE_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7531
"protected void METHOD_1 ( int VAR_1 ) { this . VAR_2 = new double [ VAR_1 ] ; TYPE_1 . METHOD_2 ( VAR_2 , 1.0 ) ; this . VAR_1 = VAR_1 ; }","protected void METHOD_1 ( int VAR_1 ) { this . VAR_2 = new double [ VAR_1 ] ; TYPE_1 . METHOD_2 ( VAR_2 , 1.0 ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7532
public java.lang.String execute ( ) throws java.lang.Exception { this . VAR_1 = TYPE_1 . METHOD_1 ( ) ; this . VAR_2 = TYPE_2 . METHOD_2 ( ) ; return VAR_3 ; },public java.lang.String execute ( ) throws java.lang.Exception { this . VAR_1 = TYPE_1 . METHOD_1 ( ) ; return VAR_3 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7533
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = false ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7534
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } } },void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7535
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; TYPE_3 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; TYPE_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7536
public TYPE_1 METHOD_1 ( long startTime ) { this . startTime = startTime ; VAR_1 = new TYPE_2 ( startTime ) . METHOD_2 ( VAR_2 ) ; return this ; },public TYPE_1 METHOD_1 ( long startTime ) { this . startTime = startTime ; VAR_1 = new TYPE_2 ( startTime ) ; return this ; },"['Move ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",7537
"public void METHOD_1 ( ) throws java.lang.Exception { p = new TYPE_1 ( ) ; p . METHOD_2 ( new TYPE_2 < java.lang.String , java.lang.String > ( ) ) ; VAR_1 = new TYPE_3 ( STRING_1 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { p = new TYPE_1 ( ) ; p . METHOD_2 ( new TYPE_2 < java.lang.String , java.lang.String > ( ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7538
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7539
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 = true ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7541
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_3 ) ) ) ; METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7542
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 = null ; VAR_3 = null ; return null ; },public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( false ) ; return null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7543
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { if ( ! ( VAR_3 . update ( ) ) ) { VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; ( VAR_5 ) -- ; } } },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 . values ( ) ) { if ( ! ( VAR_3 . update ( ) ) ) { VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } } },"['Delete FieldWrite', 'Delete UnaryOperator']",7544
private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; },private void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7545
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; METHOD_2 ( VAR_2 ) ; VAR_2 = null ; METHOD_2 ( VAR_3 ) ; VAR_3 = null ; METHOD_2 ( VAR_4 ) ; VAR_4 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7546
private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = true ; VAR_2 . add ( new TYPE_1 ( ) ) ; },private void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . add ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7547
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { TYPE_1 VAR_2 = new TYPE_2 ( ) ; this . VAR_1 = VAR_2 . METHOD_2 ( VAR_1 ) ; } else this . VAR_1 = null ; },public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_2 ( ) ; this . VAR_1 = VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Move LocalVariable', 'Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7548
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = false ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7549
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . add ( VAR_3 ) ; },private void METHOD_1 ( ) { VAR_2 . add ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7550
"public boolean METHOD_1 ( char c , boolean VAR_1 ) { this . VAR_2 = this . VAR_3 . METHOD_1 ( c , ( VAR_1 || ( this . VAR_2 ) ) ) ; return this . VAR_2 ; }","public boolean METHOD_1 ( char c , boolean VAR_1 ) { return this . VAR_3 . METHOD_1 ( c , ( VAR_1 || ( this . VAR_2 ) ) ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",7551
"public void set ( float x , float y , TYPE_1 VAR_1 , boolean VAR_2 ) { this . x = x ; this . y = y ; this . VAR_3 = null ; this . VAR_4 = VAR_1 ; this . VAR_2 = VAR_2 ; }","public void set ( float x , float y , TYPE_1 VAR_1 , boolean VAR_2 ) { this . x = x ; this . y = y ; this . VAR_4 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7552
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) . getString ( VAR_3 ) ) ; VAR_4 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) . getString ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7553
public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7554
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_2 = VAR_3 . METHOD_4 ( ) . get ( 1 ) . METHOD_5 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Literal', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7555
public void METHOD_1 ( ) { VAR_1 = true ; int c = VAR_2 ; while ( c == ( VAR_2 ) ) { } METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; VAR_1 = false ; },public void METHOD_1 ( ) { int c = VAR_2 ; while ( c == ( VAR_2 ) ) { } METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7556
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; VAR_4 = new TYPE_3 ( this , INT_1 , INT_2 , INT_2 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",7557
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( VAR_3 , VAR_1 ) ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( new TYPE_3 ( VAR_3 , VAR_1 ) ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",7558
public void init ( ) { VAR_1 = STRING_1 ; VAR_2 = 0 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; VAR_9 = STRING_1 ; VAR_10 = STRING_1 ; },public void init ( ) { VAR_1 = STRING_1 ; VAR_2 = 0 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; VAR_5 = STRING_1 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0 ; VAR_9 = STRING_1 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7560
"void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( VAR_2 , VAR_5 ) ; VAR_6 = result ; VAR_3 = false ; } else { VAR_4 . METHOD_2 ( VAR_6 , VAR_2 , VAR_5 ) ; } }","void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( VAR_2 , VAR_5 ) ; VAR_6 = result ; } else { VAR_4 . METHOD_2 ( VAR_6 , VAR_2 , VAR_5 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7561
public TYPE_1 METHOD_1 ( ) { try { return this . VAR_1 [ ( ( this . VAR_2 ) ++ ) ] ; } catch ( java.lang.Exception VAR_3 ) { this . VAR_2 = 0 ; return null ; } },public TYPE_1 METHOD_1 ( ) { try { return VAR_1 [ ( ( VAR_2 ) ++ ) ] ; } catch ( java.lang.Exception VAR_3 ) { java.lang.System.out.println ( VAR_3 ) ; return null ; } },"['Insert Invocation', 'Insert FieldRead', 'Insert VariableRead', 'Insert TypeAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7562
public int METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 & ( VAR_2 ) ) != 0 ) { VAR_3 = VAR_2 ; return VAR_2 ; } return VAR_4 ; },public int METHOD_1 ( int VAR_1 ) { return VAR_4 ; },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If']",7563
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String data ) { VAR_2 . data = data ; METHOD_2 ( VAR_2 . label , data , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String data ) { METHOD_2 ( VAR_2 . label , data , VAR_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7564
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7565
public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { VAR_1 . METHOD_2 ( ) . VAR_4 [ VAR_2 ] = null ; VAR_2 = VAR_3 ; } },public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) < ( VAR_3 ) ) VAR_1 . METHOD_2 ( ) . VAR_4 [ VAR_2 ] = null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7567
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { VAR_3 = TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_4 . get ( position ) ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long VAR_2 ) { TYPE_2 . METHOD_3 ( VAR_4 . get ( position ) ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7568
public final void METHOD_1 ( byte [ ] buf ) throws java.io.IOException { this . buf = buf ; this . VAR_1 = 0 ; this . VAR_2 = VAR_3 . length ; this . VAR_4 = false ; METHOD_2 ( ) ; },public final void METHOD_1 ( byte [ ] buf ) throws java.io.IOException { this . buf = buf ; this . VAR_1 = 0 ; this . VAR_2 = VAR_3 . length ; METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7569
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( STRING_1 , VAR_3 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7570
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , null ) ; VAR_5 = new TYPE_4 ( getActivity ( ) ) ; init ( ) ; METHOD_3 ( ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , null ) ; init ( ) ; METHOD_3 ( ) ; return view ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",7571
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = new java.io.File ( new java.io.File ( TYPE_1 . METHOD_4 ( STRING_1 ) ) , STRING_2 ) . METHOD_5 ( ) ; }",public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete Assignment']",7572
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; temp = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 . temp ) ) ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",7573
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7574
"public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int VAR_2 , long id ) { VAR_3 = VAR_2 ; VAR_4 = false ; METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int VAR_2 , long id ) { VAR_3 = VAR_2 ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7575
public void METHOD_1 ( ) { if ( ( count ) > 0 ) { i = 0 ; VAR_1 = STRING_1 ; VAR_2 = true ; VAR_3 = true ; VAR_4 = INT_1 ; } },public void METHOD_1 ( ) { if ( ( count ) > 0 ) { i = 0 ; VAR_1 = STRING_1 ; VAR_2 = true ; VAR_4 = INT_1 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7576
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7577
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( new TYPE_2 ( this , VAR_1 , VAR_3 , VAR_4 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( new TYPE_2 ( this , VAR_1 , VAR_3 , VAR_4 ) ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7578
void METHOD_1 ( ) { double k = 1 / ( VAR_1 ) ; VAR_1 += VAR_2 ; k *= VAR_1 ; VAR_3 = VAR_3 . METHOD_2 ( k ) ; },void METHOD_1 ( ) { double k = 1 / ( VAR_1 ) ; VAR_1 += VAR_2 ; k *= VAR_1 ; VAR_3 . METHOD_2 ( k ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7579
public void METHOD_1 ( ) { values . METHOD_1 ( ) ; size = 0 ; },public void METHOD_1 ( ) { values . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7580
"public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_1 == ( VAR_3 ) ) && ( VAR_2 == ( VAR_4 ) ) ) { VAR_5 = false ; METHOD_2 ( ) ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( ( VAR_1 == ( VAR_3 ) ) && ( VAR_2 == ( VAR_4 ) ) ) { METHOD_2 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7581
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 instanceof TYPE_2 ) && ( ( this . VAR_2 ) == null ) ) { this . VAR_2 = VAR_1 ; ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_2 ) instanceof TYPE_2 ) { ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( this ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move BinaryOperator', 'Insert FieldRead', 'Delete VariableRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",7582
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; VAR_4 = new TYPE_2 ( this ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7583
"public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_4 , VAR_2 ) ; VAR_5 = new TYPE_4 ( VAR_6 , VAR_1 . METHOD_2 ( ) ) ; }","public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = new TYPE_3 ( VAR_4 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",7585
protected void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7586
public void METHOD_1 ( ) { VAR_1 . end ( ) ; VAR_2 = true ; METHOD_2 ( VAR_3 ) ; VAR_4 = - INT_1 ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . end ( ) ; VAR_2 = true ; METHOD_2 ( VAR_3 ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",7587
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . field = TYPE_1 . METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String field ) { this . field = field ; },"['Update Parameter', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",7588
public void METHOD_1 ( java.lang.String title ) { this . VAR_1 . set ( title ) ; },public void METHOD_1 ( java.lang.String title ) { this . title = title ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7589
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) , TYPE_3 . METHOD_2 ( ) ) ; VAR_3 = TYPE_3 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( getActivity ( ) , TYPE_3 . METHOD_2 ( ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7590
public void METHOD_1 ( ) throws java.lang.Throwable { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },public void METHOD_1 ( ) throws java.lang.Throwable { VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7591
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( false ) ; },public void METHOD_1 ( ) { METHOD_2 ( false ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7593
public static TYPE_1 METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { TYPE_1 f = new TYPE_1 ( ) ; VAR_2 = VAR_1 ; return f ; },public static TYPE_1 METHOD_1 ( ) { TYPE_1 f = new TYPE_1 ( ) ; return f ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7595
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",7596
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = 0 ; VAR_4 = 0.0F ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7597
public static void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = 1.0F ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0.0F ; VAR_9 = 0.0F ; VAR_10 = false ; },public static void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_6 = 0 ; VAR_7 = 0 ; VAR_8 = 0.0F ; VAR_9 = 0.0F ; VAR_10 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7599
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_2 . isEmpty ( ) ) ) { VAR_1 = VAR_3 . METHOD_2 ( ) ; } VAR_4 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_4 . METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",7600
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; },private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7601
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . trim ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_2 . trim ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7602
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) return ; VAR_2 = true ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7603
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = false ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7604
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = 0 ; },public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7606
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7607
private void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_6 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_2 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7608
public static void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 = new TYPE_2 ( ) ; VAR_2 = INT_1 + ( ( VAR_3 ) * INT_2 ) ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_1 ( VAR_4 ) ; } },public static void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 = new TYPE_2 ( ) ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_1 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Assignment']",7609
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 . result = new java.util.ArrayList < > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { super . METHOD_1 ( VAR_1 ) ; VAR_2 . result = - 1 ; },"['Insert UnaryOperator', 'Insert Literal', 'Delete ConstructorCall']",7610
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } return new TYPE_1 ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7611
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 = VAR_2 ; },private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7612
public void METHOD_1 ( char VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) == 0 ) ( c ) ++ ; ( VAR_2 ) ++ ; super . METHOD_1 ( VAR_1 ) ; ( VAR_2 ) -- ; },public void METHOD_1 ( char VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator']",7613
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; METHOD_2 ( VAR_4 , VAR_2 ) ; VAR_1 = true ; } if ( VAR_5 ) METHOD_3 ( ) ; }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_5 ) METHOD_3 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7615
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7616
public void setText ( java.lang.String text ) { this . text = text ; VAR_1 = true ; },public void setText ( java.lang.String text ) { this . text = text ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7617
"public void METHOD_1 ( int VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_1 ( this , VAR_1 , VAR_3 ) ; VAR_4 = true ; METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_1 ( this , VAR_1 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7618
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . height = VAR_3 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7619
public java.io.File METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.lang.String ( STRING_1 ) ; } return new java.io.File ( VAR_1 ) ; },public java.io.File METHOD_1 ( ) { return new java.io.File ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7620
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7622
public void METHOD_1 ( ) { this . VAR_1 . METHOD_2 ( false ) ; this . VAR_2 = false ; this . VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7623
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; VAR_3 = TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { }","['Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7624
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 = null ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",7625
"public void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; if ( ( VAR_1 == 0 ) || VAR_2 ) VAR_4 = VAR_5 ; else VAR_4 = VAR_1 ; }","public void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; VAR_4 = VAR_1 ; }","['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7626
public void METHOD_1 ( ) { this . time = VAR_1 ; setValue ( ( ( time ) + STRING_1 ) ) ; },public void METHOD_1 ( ) { this . time = 0 ; setValue ( ( ( time ) + STRING_1 ) ) ; },"['Insert Literal', 'Delete FieldRead']",7627
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7628
"private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; VAR_3 = true ; VAR_4 . METHOD_1 ( VAR_2 ) ; }","private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7629
public void METHOD_1 ( ) { VAR_1 = false ; x = 0 ; y = 0 ; },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7630
"public void f ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args ) { VAR_3 = VAR_2 ; VAR_4 = args ; ( VAR_5 ) ++ ; }","public void f ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args ) { VAR_3 = VAR_2 ; VAR_4 = args ; }","['Delete FieldWrite', 'Delete UnaryOperator']",7631
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7632
public static void METHOD_1 ( android.content.Context context ) { if ( VAR_1 ) { context . METHOD_2 ( VAR_2 ) ; VAR_1 = false ; } },public static void METHOD_1 ( android.content.Context context ) { context . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7633
public void METHOD_1 ( ) { this . VAR_1 = true ; this . VAR_2 = false ; },public void METHOD_1 ( ) { this . VAR_1 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7634
public void init ( ) { VAR_1 = STRING_1 ; },public void init ( ) { java.lang.String VAR_1 = STRING_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move FieldRead', 'Delete FieldWrite', 'Delete Assignment']",7635
void METHOD_1 ( ) { VAR_1 = ( ( VAR_2 [ 0 ] ) - ( VAR_2 [ 1 ] ) ) / ( VAR_3 ) ; if ( ( VAR_3 ) == 0 ) VAR_1 = 0 ; },void METHOD_1 ( ) { VAR_1 = ( ( VAR_2 [ 0 ] ) - ( VAR_2 [ 1 ] ) ) / ( VAR_3 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7636
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7637
public void METHOD_1 ( java.lang.String filename ) { VAR_1 . filename = filename ; },public void METHOD_1 ( java.lang.String filename ) { this . filename = filename ; },['Insert ThisAccess'],7639
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = - 1 ; VAR_5 = - 1 ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7640
public void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } },public void METHOD_1 ( boolean VAR_1 ) throws TYPE_1 { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",7641
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . METHOD_2 ( ) ; this . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",7642
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , null , this ) . METHOD_4 ( ) ; VAR_3 = getActivity ( ) . METHOD_5 ( ) . getBoolean ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_2 , null , this ) . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7643
public boolean METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( STRING_1 ) ; VAR_6 = false ; break ; } return true ; },public boolean METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_5 . METHOD_3 ( STRING_1 ) ; break ; } return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7644
public void METHOD_1 ( java.lang.String data ) { VAR_1 = false ; try { VAR_2 . error ( new TYPE_1 ( data ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_2 . error ( VAR_3 . METHOD_2 ( ) ) ; } },public void METHOD_1 ( java.lang.String data ) { try { VAR_2 . error ( new TYPE_1 ( data ) ) ; } catch ( TYPE_2 VAR_3 ) { VAR_2 . error ( VAR_3 . METHOD_2 ( ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7645
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete TypeAccess', 'Delete Invocation']",7646
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( STRING_1 ) ; VAR_4 . setValue ( 0 ) ; },public void METHOD_1 ( ) { METHOD_3 ( STRING_1 ) ; VAR_4 . setValue ( 0 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",7647
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( null == ( VAR_1 ) ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7648
"private void put ( java.lang.Object value ) { VAR_1 . put ( TYPE_1 . METHOD_1 ( key ) , value ) ; key = null ; this . value = null ; }","private void put ( java.lang.Object value ) { VAR_1 . put ( TYPE_1 . METHOD_1 ( key ) , value ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7649
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 = true ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7652
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7653
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( STRING_1 . equals ( VAR_1 ) ) || ( STRING_2 . equals ( VAR_1 ) ) ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = STRING_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7656
"public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = this ; VAR_3 = this ; }","public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_3 = this ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",7657
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_5 = new TYPE_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7658
public void METHOD_1 ( final java.lang.String name ) { this . name = name ; },public void METHOD_1 ( final java.lang.String name ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7659
public static void main ( java.lang.String [ ] args ) { TYPE_1 TYPE_2 = new TYPE_1 ( ) ; VAR_1 = TYPE_2 . METHOD_1 ( VAR_2 ) ; java.lang.System.out.println ( VAR_1 ) ; },public static void main ( java.lang.String [ ] args ) { TYPE_1 TYPE_2 = new TYPE_1 ( ) ; java.lang.System.out.println ( TYPE_2 . METHOD_1 ( VAR_2 ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7660
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( VAR_1 ) { METHOD_3 ( VAR_2 ) ; VAR_1 = false ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7661
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 VAR_3 = new TYPE_2 ( ( ( TYPE_2 ) ( VAR_4 ) ) ) ; VAR_5 *= FLOAT_1 ; if ( VAR_6 . contains ( VAR_1 ) ) { METHOD_2 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( ( ( TYPE_2 ) ( VAR_4 ) ) ) ; VAR_5 *= FLOAT_1 ; if ( VAR_6 . contains ( VAR_1 ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7662
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = 0 ; },public void METHOD_1 ( ) { VAR_1 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7663
public void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = VAR_2 ; throw new TYPE_1 ( ) ; },public void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; throw new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7664
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7665
public void add ( TYPE_1 number ) { if ( ! ( VAR_1 ) ) { this . VAR_1 = true ; this . VAR_2 = ( ( TYPE_1 ) ( number . METHOD_1 ( ) ) ) ; return ; } VAR_3 . sum ( number ) ; },public void add ( TYPE_1 number ) { VAR_3 . sum ( number ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",7666
public void set ( float value ) { if ( ( java.lang.Math.abs ( ( ( VAR_1 ) - value ) ) ) > VAR_2 ) { VAR_1 = value ; out . METHOD_1 ( ) ; } },public void set ( float value ) { if ( ( java.lang.Math.abs ( ( ( VAR_1 ) - value ) ) ) > VAR_2 ) { out . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7667
private void METHOD_1 ( ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 [ i ] = 0 ; } VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; },private void METHOD_1 ( ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 [ i ] = 0 ; } VAR_2 = 0 ; VAR_3 = 0 ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7668
public void METHOD_1 ( ) { VAR_1 . set ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = false ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 . set ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7669
"public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_1 == VAR_2 ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_5 = true ; METHOD_2 ( VAR_3 ) ; VAR_6 = 0 ; } }","public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_1 == VAR_2 ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_5 = true ; METHOD_2 ( VAR_3 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7670
public void METHOD_1 ( TYPE_1 listener ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( this ) ; } VAR_1 . METHOD_1 ( listener ) ; },public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_1 ( listener ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7671
public void setValue ( java.lang.String value ) { this . VAR_1 = null ; this . value = value ; },public void setValue ( java.lang.String value ) { this . value = value ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7672
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > INT_1 ) { VAR_2 = INT_1 ; } else { VAR_2 = VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) > INT_1 ) { VAR_2 = INT_1 ; } else { VAR_2 = ( VAR_2 ) - VAR_1 ; } },"['Insert FieldRead', 'Insert BinaryOperator', 'Insert FieldRead', 'Move VariableRead', 'Delete VariableRead']",7673
public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ; METHOD_6 ( ) ; },public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ; METHOD_6 ( ) ; },"['Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7674
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = false ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7675
public TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; VAR_2 = null ; VAR_1 = VAR_3 ; return node ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; VAR_1 = VAR_3 ; return node ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7676
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = false ; VAR_3 = true ; },public void METHOD_1 ( ) { VAR_3 = VAR_2 = false ; },"['Insert Assignment', 'Move FieldWrite', 'Move Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete Assignment']",7677
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = INT_1 ; VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_4 = false ; VAR_1 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_2 = INT_1 ; VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7678
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; VAR_1 = true ; } },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7679
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; } super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; VAR_3 = null ; } super . METHOD_1 ( ) ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",7681
public TYPE_1 METHOD_1 ( int id ) { this . id = id ; VAR_1 = new TYPE_2 ( ) ; return this ; },public TYPE_1 METHOD_1 ( int id ) { this . id = id ; return this ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7682
"public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( 0 ) ) ; METHOD_4 ( 1 , view ) ; VAR_3 = true ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . get ( 0 ) ) ; METHOD_4 ( 1 , view ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7683
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_4 = VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) ; VAR_5 = VAR_2 . METHOD_2 ( ) . METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7684
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String title = this . VAR_2 . getText ( ) ; VAR_3 = VAR_4 ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7685
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 position ) { METHOD_2 ( position , new TYPE_2 ( VAR_2 , VAR_3 ) , VAR_1 ) ; VAR_4 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 position ) { METHOD_2 ( position , new TYPE_2 ( VAR_2 , VAR_3 ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7686
protected void METHOD_1 ( int n ) { this . VAR_1 = n ; },protected void METHOD_1 ( int n ) { VAR_1 = n ; },['Delete ThisAccess'],7687
protected void METHOD_1 ( ) { if ( VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_4 ; METHOD_2 ( ) ; } METHOD_3 ( ) ; VAR_5 = false ; VAR_1 = false ; } },protected void METHOD_1 ( ) { if ( VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 = VAR_4 ; METHOD_2 ( ) ; } METHOD_3 ( ) ; VAR_5 = false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7688
public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7689
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7690
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( long ) ( VAR_3 . get ( 0 ) ) ) ; if ( ( VAR_2 ) < 0 ) { ( VAR_2 ) -- ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( ( long ) ( VAR_3 . get ( 0 ) ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",7691
public boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_1 ( VAR_1 ) ) { this . VAR_4 = METHOD_2 ( ) ; return true ; } } return false ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_1 ( VAR_1 ) ) { return true ; } } return false ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7692
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = 0 ; VAR_7 = false ; VAR_8 = false ; },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = false ; VAR_6 = 0 ; VAR_7 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7693
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7694
"public void init ( ) { this . VAR_1 = false ; this . VAR_2 = 1.0F ; this . VAR_3 . put ( VAR_4 , VAR_5 class ) ; }","public void init ( ) { this . VAR_1 = false ; VAR_3 . put ( VAR_4 , VAR_5 class ) ; }","['Insert TypeAccess', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",7695
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = new TYPE_3 ( this ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",7696
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) return ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; VAR_2 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) return ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7697
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7698
public TYPE_1 getView ( ) { if ( ( view ) == null ) view = METHOD_1 ( ) ; return view ; },public TYPE_1 getView ( ) { if ( ( view ) == null ) METHOD_1 ( ) ; return view ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7699
"public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 , null ) ; VAR_3 = new TYPE_1 ( this ) ; METHOD_5 ( VAR_3 ) ; }","public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 , null ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7700
public void init ( ) { VAR_1 = new TYPE_1 ( ) ; filePath = METHOD_1 ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( filePath ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( METHOD_1 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7702
public void METHOD_1 ( ) { VAR_1 = false ; end = ( TYPE_1 . METHOD_2 ( ) ) + ( ( VAR_2 ) * INT_1 ) ; },public void METHOD_1 ( ) { end = ( TYPE_1 . METHOD_2 ( ) ) + ( ( VAR_2 ) * INT_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7703
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; if ( VAR_1 == ( - 1 ) ) { VAR_2 . METHOD_3 ( ) ; return ; } VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; if ( VAR_1 == ( - 1 ) ) { VAR_2 . METHOD_3 ( ) ; } this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Return', 'Delete TypeAccess', 'Delete Invocation']",7704
public void init ( ) { VAR_1 = false ; },public void init ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7705
"public void METHOD_1 ( TYPE_1 t ) { TYPE_2 < TYPE_1 > VAR_1 = new TYPE_2 < TYPE_1 > ( t , VAR_2 , null ) ; VAR_3 = VAR_1 ; VAR_2 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 t ) { TYPE_2 < TYPE_1 > VAR_1 = new TYPE_2 < TYPE_1 > ( t , VAR_2 , null ) ; VAR_3 = VAR_1 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7706
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; VAR_3 = STRING_1 ; VAR_4 . setText ( STRING_1 ) ; result = 0 ; VAR_5 = false ; VAR_6 = STRING_1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = 0 ; VAR_3 = STRING_1 ; VAR_4 . setText ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7707
protected TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( int offset ) { VAR_1 = false ; return TYPE_1 . METHOD_2 ( ) ; },protected TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( int offset ) { return TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7708
"public void add ( TYPE_1 item ) { list = new TYPE_2 < TYPE_1 > ( item , list ) ; ( size ) ++ ; }","public void add ( TYPE_1 item ) { list = new TYPE_2 < TYPE_1 > ( item , list ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",7709
public void start ( android.view.View view ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; VAR_5 = true ; if ( ( VAR_5 ) == true ) { METHOD_2 ( METHOD_3 ( VAR_6 ) ) ; } },public void start ( android.view.View view ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; METHOD_2 ( METHOD_3 ( VAR_6 ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",7710
public void METHOD_1 ( android.view.View VAR_1 ) { start . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { start . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7711
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = this ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",7713
void METHOD_1 ( TYPE_1 p ) { start = p ; VAR_1 = p ; },void METHOD_1 ( TYPE_1 p ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7714
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_5 = false ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_3 ) ) ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7715
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = 0 ; for ( int i : VAR_2 ) { VAR_3 . add ( i ) ; VAR_4 . METHOD_3 ( i ) ; } },public void METHOD_1 ( ) { METHOD_2 ( ) ; for ( int i : VAR_2 ) { VAR_3 . add ( i ) ; VAR_4 . METHOD_3 ( i ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7716
public void METHOD_1 ( ) { new TYPE_1 ( this ) ; VAR_1 = true ; },public void METHOD_1 ( ) { new TYPE_1 ( this ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7717
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 = true ; VAR_5 = true ; } else { METHOD_3 ( ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; VAR_3 = 0 ; VAR_4 = true ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7718
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = true ; VAR_3 = false ; METHOD_3 ( ) ; METHOD_4 ( VAR_4 , STRING_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = true ; METHOD_3 ( ) ; METHOD_4 ( VAR_4 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7719
"public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7720
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = true ; VAR_2 . start ( ) ; } },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7721
public boolean METHOD_1 ( TYPE_1 event ) { return ! ( VAR_1 ) ; },public boolean METHOD_1 ( TYPE_1 event ) { return VAR_1 = true ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete UnaryOperator']",7722
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( - 1 ) ) VAR_2 . METHOD_2 ( ) ; else VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If']",7723
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 . start ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . start ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7724
public java.util.Collection < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; return this . VAR_1 ; },public java.util.Collection < TYPE_1 > METHOD_1 ( ) { return this . VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7725
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = VAR_3 = VAR_4 = VAR_5 = 0 ; },private void METHOD_1 ( ) { VAR_2 = VAR_3 = VAR_4 = VAR_5 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7726
public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : METHOD_2 ( ) ; break ; case VAR_4 : METHOD_3 ( ) ; VAR_5 = false ; break ; case VAR_6 : METHOD_4 ( ) ; break ; } },public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_2 . getId ( ) ) { case VAR_3 : METHOD_2 ( ) ; break ; case VAR_4 : METHOD_3 ( ) ; break ; case VAR_6 : METHOD_4 ( ) ; break ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7727
public TYPE_1 METHOD_1 ( android.content.Intent intent ) { VAR_1 = STRING_1 ; return null ; },public TYPE_1 METHOD_1 ( android.content.Intent intent ) { return null ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7728
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = VAR_1 ; METHOD_2 ( VAR_3 ) ; },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7729
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7730
public void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = true ; },public void METHOD_1 ( ) { VAR_2 = true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7733
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . METHOD_2 ( VAR_1 ) ; this . a = INT_1 ; return this ; },"public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = new java.awt.Color ( VAR_1 , false ) ; return this ; }","['Update FieldWrite', 'Insert ConstructorCall', 'Move VariableRead', 'Insert Literal', 'Delete ThisAccess', 'Delete Invocation', 'Delete FieldRead']",7736
"public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = ""false"" ; return VAR_1 ; }",public java.lang.String METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7737
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7738
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_3 . getString ( VAR_4 ) ; VAR_5 = VAR_3 . getInt ( VAR_6 ) ; } },private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = VAR_3 . getString ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7739
public void METHOD_1 ( ) { this . VAR_1 = VAR_2 ; this . VAR_3 = null ; this . VAR_4 = null ; this . VAR_5 = null ; },public void METHOD_1 ( ) { this . VAR_3 = null ; this . VAR_4 = null ; this . VAR_5 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7740
"public void METHOD_1 ( android.content.Context context ) { VAR_1 = TYPE_1 . METHOD_2 ( context , VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( context , VAR_4 , 1 ) ; }","public void METHOD_1 ( android.content.Context context ) { VAR_1 = TYPE_1 . METHOD_2 ( context , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",7742
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_4 , VAR_3 , VAR_5 ) . METHOD_5 ( VAR_5 ) . commit ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_4 , TYPE_2 . METHOD_2 ( VAR_1 ) , VAR_5 ) . METHOD_5 ( VAR_5 ) . commit ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7743
"public void update ( ) { value = VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 , type ) ; VAR_3 = VAR_1 . METHOD_1 ( ) . METHOD_3 ( VAR_2 ) ; }","public void update ( ) { value = VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 , type ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7745
"private void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( INT_1 , INT_1 ) ; METHOD_3 ( ) ; }","private void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_1 ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7747
public void METHOD_1 ( TYPE_1 error ) { VAR_1 = false ; },public void METHOD_1 ( TYPE_1 error ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7748
"public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = VAR_6 ; } else { VAR_3 . METHOD_2 ( VAR_7 ) ; VAR_5 = VAR_8 ; } }","public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; } else { VAR_3 . METHOD_2 ( VAR_7 ) ; } }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7749
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { VAR_2 = null ; } else { VAR_3 = VAR_2 ; VAR_2 = VAR_1 . remove ( ) ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { VAR_3 = VAR_2 ; VAR_2 = VAR_1 . remove ( ) ; return VAR_2 ; },"['Move Assignment', 'Move Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7750
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) VAR_3 = METHOD_2 ( VAR_1 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",7751
"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; VAR_1 = null ; }","private void METHOD_1 ( ) { android.content.Intent VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7752
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = - 1 ; VAR_4 = 0 ; this . METHOD_2 ( VAR_5 class ) . METHOD_3 ( ) . METHOD_4 ( 0 ) ; VAR_6 = new TYPE_1 ( ) ; },private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = - 1 ; this . METHOD_2 ( VAR_5 class ) . METHOD_3 ( ) . METHOD_4 ( 0 ) ; VAR_6 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7753
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; VAR_5 = VAR_6 ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = this . VAR_4 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7754
"public boolean METHOD_1 ( float x , float y , int VAR_1 , int VAR_2 ) { VAR_3 = false ; return false ; }","public boolean METHOD_1 ( float x , float y , int VAR_1 , int VAR_2 ) { return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7755
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_3 = VAR_4 . getString ( VAR_2 ) ; } } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",7757
"public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( new java.io.File ( VAR_2 , VAR_3 . METHOD_3 ( ) ) , VAR_4 ) ; synchronized ( VAR_5 ) { VAR_6 = VAR_1 ; VAR_7 = null ; } }","public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( new java.io.File ( VAR_2 , VAR_3 . METHOD_3 ( ) ) , VAR_4 ) ; synchronized ( VAR_5 ) { this . VAR_7 = VAR_1 ; } }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7758
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; if ( VAR_2 <= 0 ) { throw new TYPE_3 ( STRING_1 ) ; } this . VAR_1 = VAR_1 ; return this ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; if ( VAR_2 <= 0 ) { throw new TYPE_3 ( STRING_1 ) ; } return this ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7759
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; },public static void METHOD_1 ( ) throws java.lang.Exception { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7760
public void METHOD_1 ( TYPE_1 event ) { ( VAR_1 ) -- ; METHOD_2 ( INT_1 ) ; },public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete TypeAccess']",7761
public void METHOD_1 ( android.view.View view ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( view ) ; VAR_1 = true ; } },public void METHOD_1 ( android.view.View view ) { VAR_2 . METHOD_2 ( view ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7763
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_3 = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( ) ) ) ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( ) ) ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7764
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_1 = ( TYPE_1 . METHOD_3 ( ) ) - ( startTime ) ; startTime = VAR_2 ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) VAR_1 = ( TYPE_1 . METHOD_3 ( ) ) - ( startTime ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7765
"public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_1 = false ; } VAR_3 . METHOD_3 ( VAR_4 , VAR_5 , VAR_4 ) ; }","public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_4 , VAR_5 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7766
public void METHOD_1 ( TYPE_1 buf ) { this . VAR_1 = buf . METHOD_2 ( ) ; this . VAR_2 = buf . METHOD_2 ( ) ; this . VAR_3 = buf . METHOD_2 ( ) ; this . VAR_4 = buf . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 buf ) { this . VAR_1 = buf . METHOD_2 ( ) ; this . VAR_2 = buf . METHOD_2 ( ) ; this . VAR_3 = buf . METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7767
public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( error . METHOD_3 ( ) ) ; VAR_1 = false ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 error ) { METHOD_2 ( error . METHOD_3 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7768
"public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { this . VAR_1 = VAR_1 ; this . position = position ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7769
"private void METHOD_1 ( long VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( this , VAR_2 , this . VAR_1 , VAR_1 ) ; this . VAR_1 = VAR_1 ; VAR_4 = TYPE_2 . METHOD_2 ( VAR_4 , VAR_3 ) ; }","private void METHOD_1 ( long VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( this , VAR_2 , this . VAR_1 , VAR_1 ) ; this . VAR_1 = VAR_1 ; TYPE_2 . METHOD_2 ( VAR_4 , VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7770
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = VAR_2 ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7771
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7772
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7773
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = METHOD_3 ( ) ; init ( view ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; init ( view ) ; return view ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7775
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; VAR_3 = null ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; },"['Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7776
"public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 = data ; VAR_3 . METHOD_2 ( data ) ; }","public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_3 . METHOD_2 ( data ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7777
public void METHOD_1 ( java.lang.String type ) { VAR_1 = type ; },public void METHOD_1 ( java.lang.String type ) { this . type = type ; },"['Update FieldWrite', 'Insert ThisAccess']",7778
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this , VAR_2 , VAR_3 ) ; VAR_4 . show ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_2 , VAR_3 ) . show ( ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7779
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; VAR_3 = VAR_1 ; METHOD_4 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation']",7780
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { int VAR_2 = java.lang.Integer.parseInt ( VAR_1 ) ; if ( VAR_2 < 1 ) { throw new TYPE_1 ( ) ; } else { this . VAR_1 = VAR_2 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { int VAR_2 = java.lang.Integer.parseInt ( VAR_1 ) ; if ( VAR_2 < 1 ) { throw new TYPE_1 ( ) ; } else { } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7781
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_3 ) ; VAR_4 = VAR_1 ; VAR_5 = this . VAR_6 ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_3 ) ; VAR_4 = VAR_1 ; return VAR_2 ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Assignment']",7782
public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_2 ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; },"['Insert TypeAccess', 'Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7783
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( INT_1 , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( INT_1 , VAR_2 ) ; this . VAR_1 = VAR_1 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",7784
protected void METHOD_1 ( ) { VAR_1 = false ; super . METHOD_1 ( ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7785
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7786
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( android.widget.Button ) ( VAR_1 ) ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( null ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( ( ( android.widget.Button ) ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Move Invocation', 'Update Invocation', 'Update Invocation', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete Literal', 'Delete TypeAccess']",7787
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( this ) ; VAR_3 = true ; if ( VAR_4 ) { METHOD_4 ( ) ; VAR_4 = false ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_3 = true ; if ( VAR_4 ) { METHOD_4 ( ) ; VAR_4 = false ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",7788
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_2 = new java.util.HashSet < > ( ) ; VAR_3 = new TYPE_2 ( ) ; },protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7789
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 class ) ; VAR_3 = new TYPE_4 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; },private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 class ) ; VAR_4 . METHOD_3 ( new TYPE_4 ( VAR_1 ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7790
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( this ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( this ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7791
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7792
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; getActivity ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; getActivity ( ) . METHOD_3 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7793
"public void METHOD_1 ( final TYPE_1 VAR_1 , final boolean VAR_2 ) { VAR_3 = true ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final boolean VAR_2 ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7794
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7795
private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) . add ( VAR_1 . getText ( ) ) ; VAR_2 = ( ( TYPE_3 ) ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; VAR_2 . METHOD_5 ( ) ; },private void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( ) . add ( VAR_1 . getText ( ) ) ; VAR_2 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7796
"public void METHOD_1 ( int position , float VAR_1 ) { VAR_2 = position ; METHOD_2 ( position ) ; METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( int position , float VAR_1 ) { METHOD_2 ( position ) ; METHOD_3 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7797
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 , FLOAT_1 , false ) ; VAR_2 = true ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( INT_1 , FLOAT_1 , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7798
public void METHOD_1 ( ) { VAR_1 = VAR_2 = 0 ; VAR_3 = VAR_4 = 0 ; VAR_5 = VAR_6 = 0 ; VAR_7 = VAR_8 = 0 ; VAR_9 = VAR_10 = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_3 = 0 ; VAR_5 = 0 ; VAR_7 = 0 ; VAR_9 = 0 ; },"['Move Assignment', 'Move Assignment', 'Move Assignment', 'Move Assignment', 'Move Assignment', 'Move FieldWrite', 'Move FieldWrite', 'Move FieldWrite', 'Move FieldWrite', 'Move FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete FieldWrite', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment', 'Delete Assignment']",7799
public void METHOD_1 ( ) { VAR_1 = false ; if ( TYPE_1 . METHOD_2 ( this ) ) { METHOD_3 ( false ) ; } METHOD_4 ( false ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( this ) ) { METHOD_3 ( false ) ; } METHOD_4 ( false ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7800
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7802
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) ) ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( false ) ; VAR_2 = VAR_3 . METHOD_4 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getActivity ( ) ) ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( false ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7803
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 . METHOD_1 ( ) ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7804
"public static TYPE_1 METHOD_1 ( java.util.HashMap < java.lang.Integer , java.lang.Boolean > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_5 ) ; return VAR_2 ; }","public static TYPE_1 METHOD_1 ( java.util.HashMap < java.lang.Integer , java.lang.Boolean > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_2 . METHOD_3 ( VAR_4 , VAR_5 ) ; return VAR_2 ; }","['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",7805
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . error ( VAR_1 ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . error ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7807
public void METHOD_1 ( java.lang.String VAR_1 ) { id = VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7808
"private void METHOD_1 ( ) { if ( this . VAR_1 ) { this . VAR_1 = true ; android.content.Intent VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; } }","private void METHOD_1 ( ) { android.content.Intent VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 ) ; }","['Move LocalVariable', 'Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7809
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = this . METHOD_2 ( ( ( this . VAR_2 ) - ( this . VAR_3 ) ) ) ; return this ; },public TYPE_1 METHOD_1 ( ) { this . VAR_1 = ( this . VAR_2 ) - ( this . VAR_3 ) ; return this ; },"['Move BinaryOperator', 'Delete ThisAccess', 'Delete Invocation']",7810
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = VAR_3 ; super . METHOD_1 ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7811
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_1 = - 1 ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7812
private void METHOD_1 ( ) { VAR_1 . field = VAR_2 . field ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; VAR_11 = VAR_12 ; view . METHOD_2 ( ) ; view . METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 . field = VAR_2 . field ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; view . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldRead', 'Delete Invocation']",7813
"private static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 message = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_1 ; VAR_4 . obj = VAR_2 ; VAR_5 . METHOD_3 ( message ) ; }","private static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { }","['Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation']",7814
private void METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = ( VAR_1 . METHOD_2 ( VAR_3 ) ) + 1 ; VAR_4 = VAR_2 ; },private int METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = ( VAR_1 . METHOD_2 ( VAR_3 ) ) + 1 ; return VAR_2 ; },"['Update TypeReference', 'Insert Return', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",7815
public void METHOD_1 ( long VAR_1 ) { VAR_2 = true ; },public void METHOD_1 ( long VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7816
"public void METHOD_1 ( TYPE_1 params ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) ; VAR_1 . METHOD_4 ( this , params ) ; VAR_4 = VAR_5 . METHOD_5 ( ) . METHOD_6 ( VAR_6 ) ; }","public void METHOD_1 ( TYPE_1 params ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) ; VAR_1 . METHOD_4 ( this , params ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7817
private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = - 1 ; },private void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7818
"protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = result ; VAR_2 . i ( STRING_1 , STRING_2 ) ; }",protected void METHOD_1 ( TYPE_1 result ) { },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",7819
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7820
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_3 ) ) ; VAR_4 = TYPE_2 . METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( METHOD_3 ( ) . getInt ( VAR_3 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7821
public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_1 = false ; VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7823
public void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) * ( VAR_3 ) ; VAR_4 = ( VAR_5 ) * ( VAR_6 ) ; METHOD_2 ( VAR_7 ) ; METHOD_3 ( VAR_1 ) ; VAR_8 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = ( VAR_2 ) * ( VAR_3 ) ; METHOD_2 ( VAR_7 ) ; METHOD_3 ( VAR_1 ) ; VAR_8 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",7824
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; METHOD_2 ( VAR_1 , true ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal']",7825
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return this . VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return this . VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7826
public void METHOD_1 ( ) throws TYPE_1 { if ( ! ( VAR_1 ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_2 = new java.lang.StringBuilder ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 = false ; },public void METHOD_1 ( ) throws TYPE_1 { if ( ! ( VAR_1 ) ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_2 = new java.lang.StringBuilder ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7827
public void METHOD_1 ( TYPE_1 node ) { if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 . name = STRING_2 ; } METHOD_2 ( VAR_2 . name ) ; },public void METHOD_1 ( TYPE_1 node ) { METHOD_2 ( VAR_2 . name ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7828
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) & ( VAR_3 ) ) { VAR_2 = false ; VAR_3 = false ; METHOD_2 ( ) ; } else { VAR_4 . setText ( STRING_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) & ( VAR_3 ) ) { METHOD_2 ( ) ; } else { VAR_4 . setText ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7829
"public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) { VAR_2 = METHOD_2 ( VAR_2 , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7830
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_1 instanceof TYPE_2 ) { VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ; } this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ; } this . VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7831
protected void METHOD_1 ( ) { if ( VAR_1 ) { return ; } VAR_1 = true ; super . METHOD_1 ( ) ; if ( VAR_2 ) { METHOD_2 ( ) ; } VAR_1 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_2 ) { METHOD_2 ( ) ; } },"['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7832
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; i = VAR_3 . getType ( ) ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",7833
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) . remove ( VAR_3 , VAR_4 . get ( position ) . getId ( ) ) ; VAR_5 = null ; METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( ) . remove ( VAR_3 , VAR_4 . get ( position ) . getId ( ) ) ; METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7834
private void METHOD_1 ( ) { this . VAR_1 = true ; TYPE_1 VAR_2 = VAR_3 . get ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; this . VAR_1 = false ; },private void METHOD_1 ( ) { TYPE_1 VAR_2 = VAR_3 . get ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7835
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_3 ( ) ; VAR_5 = false ; } return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_3 ( ) ; } return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7836
private void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_2 = 0 ; VAR_3 = false ; METHOD_2 ( VAR_1 ) ; },private void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7837
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { this . VAR_3 = ( ( TYPE_3 ) ( VAR_1 ) ) ; android.view.View view = METHOD_2 ( VAR_3 , VAR_2 ) ; return new TYPE_1 ( view ) ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { android.view.View view = METHOD_2 ( VAR_1 , VAR_2 ) ; return new TYPE_1 ( view ) ; }","['Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess']",7839
private void METHOD_1 ( TYPE_1 < TYPE_2 > . VAR_1 VAR_2 ) { VAR_3 = VAR_4 ; start = VAR_5 . start ; end = VAR_5 . end ; },private void METHOD_1 ( TYPE_1 < TYPE_2 > . VAR_1 VAR_2 ) { VAR_3 = VAR_4 ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7840
public void METHOD_1 ( ) { this . VAR_1 = null ; },public void METHOD_1 ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7841
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7842
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( METHOD_2 ( ) ) ) ; VAR_3 = null ; VAR_4 = null ; this . VAR_5 = VAR_2 ; return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( METHOD_2 ( ) ) ) ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7843
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , STRING_1 , VAR_3 ) . show ( ) ; VAR_4 = false ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , STRING_1 , VAR_3 ) . show ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7844
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",7845
"public void METHOD_1 ( java.lang.String VAR_1 , int status , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 ; }","public void METHOD_1 ( java.lang.String VAR_1 , int status , TYPE_1 VAR_2 ) { }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7846
public TYPE_1 METHOD_1 ( TYPE_1 p ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_4 ; this . VAR_5 = VAR_6 ; return this ; },public TYPE_1 METHOD_1 ( TYPE_1 p ) { this . VAR_1 = VAR_2 ; this . VAR_3 = VAR_4 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7847
public void METHOD_1 ( ) { VAR_1 = 0.0 ; VAR_2 = null ; },public void METHOD_1 ( ) { VAR_1 = 0.0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7848
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7849
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getActivity ( ) . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7850
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = false ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( 1 ) ; METHOD_4 ( VAR_3 ) . METHOD_5 ( METHOD_6 ( VAR_4 class ) ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( 1 ) ; METHOD_4 ( VAR_3 ) . METHOD_5 ( METHOD_6 ( VAR_4 class ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7851
public boolean METHOD_1 ( java.lang.String value ) { try { double VAR_1 = java.lang.Double . METHOD_2 ( value ) ; VAR_2 = true ; return true ; } catch ( TYPE_1 VAR_3 ) { VAR_2 = false ; return false ; } },public boolean METHOD_1 ( java.lang.String value ) { try { double VAR_1 = java.lang.Double . METHOD_2 ( value ) ; return true ; } catch ( TYPE_1 VAR_3 ) { return false ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7852
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( TYPE_3 . METHOD_1 ( ) , VAR_1 ) ; VAR_2 . height = INT_1 ; VAR_3 = INT_2 ; VAR_4 = true ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( TYPE_3 . METHOD_1 ( ) , VAR_1 ) ; VAR_2 . height = INT_1 ; VAR_3 = INT_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7853
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7854
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 . execute ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 . execute ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7855
private static void METHOD_1 ( ) { VAR_1 = new java.util.Random ( ) ; VAR_2 = ( VAR_1 . METHOD_2 ( VAR_3 . size ( ) ) ) + 0 ; VAR_4 = VAR_3 . get ( VAR_2 ) ; },private static void METHOD_1 ( ) { VAR_4 = VAR_3 . get ( 0 ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Assignment', 'Delete TypeAccess']",7856
public synchronized TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; if ( node != null ) { VAR_1 = node . METHOD_2 ( ) ; node . METHOD_3 ( null ) ; } ( length ) -- ; return node ; },public synchronized TYPE_1 METHOD_1 ( ) { TYPE_1 node = VAR_1 ; if ( node != null ) { VAR_1 = node . METHOD_2 ( ) ; node . METHOD_3 ( null ) ; } return node ; },"['Delete FieldWrite', 'Delete UnaryOperator']",7857
static TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_4 = true ; return VAR_2 ; },static TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7858
protected void METHOD_1 ( float VAR_1 ) { if ( ( VAR_2 ) && ( ( VAR_3 ) != null ) ) { METHOD_2 ( ) ; VAR_3 = null ; } else if ( ! ( VAR_2 ) ) METHOD_3 ( VAR_1 ) ; },protected void METHOD_1 ( float VAR_1 ) { },"['Delete FieldRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",7860
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Void context ) { if ( VAR_2 ) { return ; } VAR_2 = true ; VAR_3 . METHOD_2 ( new TYPE_2 ( ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Void context ) { VAR_3 . METHOD_2 ( new TYPE_2 ( ) ) ; }","['Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7861
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 ) ; VAR_1 = 0 ; VAR_2 = null ; METHOD_3 ( ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( INT_1 ) ; VAR_1 = 0 ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7862
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = VAR_4 ; VAR_7 = 0 ; value = 0 ; index = 0 ; },public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_3 = VAR_4 ; VAR_5 = VAR_4 ; VAR_6 = VAR_4 ; VAR_7 = 0 ; value = 0 ; index = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7863
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_2 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 . METHOD_3 ( ) ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7864
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getContext ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7866
public void METHOD_1 ( ) { source . METHOD_1 ( ) ; TYPE_1 handle = this . handle ; if ( handle != null ) { VAR_1 . remove ( ) ; this . handle = null ; } },public void METHOD_1 ( ) { source . METHOD_1 ( ) ; },"['Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7868
public void METHOD_1 ( ) { VAR_1 = null ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7869
"public void METHOD_1 ( ) { VAR_1 = height ; VAR_2 = ( VAR_3 ) / INT_1 ; VAR_4 = new TYPE_1 ( this , VAR_2 , VAR_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = height ; VAR_2 = ( VAR_3 ) / INT_1 ; VAR_4 = new TYPE_1 ( this ) ; },"['Update ConstructorCall', 'Delete FieldRead', 'Delete FieldRead']",7871
public void METHOD_1 ( ) { try { if ( VAR_1 ) VAR_2 . METHOD_2 ( false ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_1 = false ; } },public void METHOD_1 ( ) { try { VAR_2 . METHOD_2 ( false ) ; } catch ( java.lang.Exception VAR_3 ) { } },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7872
"public int METHOD_1 ( ) { if ( ( VAR_1 ) != 0 ) { return VAR_1 ; } VAR_1 = TYPE_1 . METHOD_2 ( name , type , VAR_2 ) ; return VAR_1 ; }",public int METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Return', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7873
"public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_1 ) . show ( ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; VAR_4 = false ; }",public void METHOD_1 ( android.view.View view ) { VAR_2 . METHOD_4 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7874
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( int ) ( VAR_3 . METHOD_2 ( ) ) ) ; TYPE_1 . METHOD_3 ( VAR_4 , ( STRING_1 + ( java.lang.Integer.toString ( VAR_2 ) ) ) ) ; VAR_5 . show ( ) ; }",public void METHOD_1 ( android.view.View VAR_1 ) { VAR_5 . show ( ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation']",7875
public void METHOD_1 ( ) { METHOD_2 ( ) ; this . VAR_1 = false ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7876
"public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = new TYPE_3 ( this , true ) ; VAR_3 = ( VAR_4 ) | ( VAR_5 ) ; VAR_6 = ( VAR_7 ) | INT_1 ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = new TYPE_3 ( this , true ) ; VAR_6 = ( VAR_7 ) | INT_1 ; return VAR_2 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",7877
"public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 ) ; VAR_1 . METHOD_4 ( ) ; }","public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7878
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = - 1 ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",7879
private void init ( ) { try { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_3 = null ; throw new TYPE_1 ( VAR_2 ) ; } },private void init ( ) { try { METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { throw new TYPE_1 ( VAR_2 ) ; } },"['Update TypeReference', 'Update ConstructorCall', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7880
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = STRING_1 ; VAR_3 . METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7881
public void METHOD_1 ( ) { if ( ( VAR_1 ) > FLOAT_1 ) { METHOD_2 ( ( ( METHOD_3 ( ) ) - FLOAT_2 ) ) ; } else { METHOD_4 ( false ) ; METHOD_5 ( 0 ) ; VAR_1 = INT_1 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) > FLOAT_1 ) { METHOD_2 ( ( ( METHOD_3 ( ) ) - FLOAT_2 ) ) ; } else { METHOD_4 ( false ) ; METHOD_5 ( 0 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7882
public void METHOD_1 ( TYPE_1 p ) { TYPE_1 temp = VAR_1 ; VAR_1 = p ; VAR_2 = temp ; },public void METHOD_1 ( TYPE_1 p ) { VAR_1 = p ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7883
public void update ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { } },public void update ( ) { },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",7884
public float METHOD_1 ( ) { if ( ( VAR_1 ) == ( - 1 ) ) { VAR_1 = ( this . METHOD_2 ( ) ) / INT_1 ; } return VAR_1 ; },public int METHOD_1 ( ) { return ( this . METHOD_2 ( ) ) / INT_1 ; },"['Update TypeReference', 'Move BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",7885
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_5 ) ; VAR_2 . METHOD_4 ( ) ; VAR_6 = METHOD_5 ( VAR_7 ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_5 ) ; VAR_2 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7886
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; VAR_3 = VAR_1 ; },void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7887
public void METHOD_1 ( ) { VAR_1 = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_2 ) ) ) + 1 ; },public void METHOD_1 ( ) { this . VAR_1 = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_2 ) ) ) + 1 ; },['Insert ThisAccess'],7888
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; },public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7889
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = STRING_1 ; } VAR_2 += VAR_1 ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 += VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7890
public void METHOD_1 ( int VAR_1 ) { VAR_2 . setText ( ( ( java.lang.Integer.toString ( VAR_1 ) ) + STRING_1 ) ) ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . setText ( ( ( java.lang.Integer.toString ( this . VAR_1 ) ) + STRING_1 ) ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert FieldRead', 'Insert ThisAccess']",7891
"public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { VAR_2 = VAR_1 == ( VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",7892
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; this . VAR_1 = java.lang.String.format ( ( STRING_2 + ( VAR_2 ) ) ) ; this . VAR_3 = java.lang.String.format ( ( STRING_2 + ( VAR_4 ) ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete Assignment']",7893
"public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 ) ; METHOD_2 ( VAR_1 , INT_1 ) ; VAR_3 = true ; }","public void METHOD_1 ( android.view.View view ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 ) ; METHOD_2 ( VAR_1 , INT_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7894
"public void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = false ; } VAR_4 = null ; METHOD_2 ( VAR_5 , VAR_1 , METHOD_3 ( VAR_1 ) , VAR_6 ) ; }","public void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = false ; } METHOD_2 ( VAR_5 , VAR_1 , METHOD_3 ( VAR_1 ) , VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7895
"protected void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_2 == 1 ) { VAR_1 . METHOD_2 ( ( ! ( VAR_3 ) ) ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; } }","protected void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_2 == 1 ) { VAR_3 = ! ( VAR_3 ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; } }","['Insert Assignment', 'Insert FieldWrite', 'Move UnaryOperator', 'Delete VariableRead', 'Delete Invocation']",7896
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_2 , VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_1 = null ; VAR_2 = null ; } }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_2 , VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_1 = null ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7897
public void METHOD_1 ( ) { TYPE_1 p = METHOD_2 ( ) ; if ( ( VAR_1 ) == true ) { if ( p != null ) { METHOD_3 ( ) ; p . METHOD_4 ( ) . METHOD_5 ( ) ; } VAR_1 = false ; } },public void METHOD_1 ( ) { TYPE_1 p = METHOD_2 ( ) ; if ( p != null ) { METHOD_3 ( ) ; p . METHOD_4 ( ) . METHOD_5 ( ) ; } },"['Move If', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7898
"public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_4 ( VAR_6 , VAR_7 , VAR_2 ) ; VAR_8 = VAR_2 ; }","public void METHOD_1 ( android.view.View VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_4 ( VAR_6 , VAR_7 ) ; }","['Delete VariableRead', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7899
"void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , boolean VAR_4 , int VAR_5 ) { VAR_6 = VAR_7 ; VAR_8 = VAR_2 ; VAR_9 = VAR_3 ; VAR_10 = VAR_4 ; VAR_11 = VAR_5 ; VAR_12 = false ; }","void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , boolean VAR_4 , int VAR_5 ) { VAR_6 = VAR_7 ; VAR_8 = VAR_2 ; VAR_9 = VAR_3 ; VAR_10 = VAR_4 ; VAR_11 = VAR_5 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7900
public int METHOD_1 ( int VAR_1 ) throws java.lang.Exception { VAR_2 = 0 ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return 0 ; },public int METHOD_1 ( int VAR_1 ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; return 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7901
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( this . VAR_1 ) ; this . VAR_1 = VAR_1 ; VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . remove ( this . VAR_1 ) ; this . VAR_1 = VAR_1 ; VAR_4 . METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( VAR_4 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",7902
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = null ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7903
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . getText ( ) . toString ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7904
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = ( ( android.widget.LinearLayout ) ( METHOD_3 ( VAR_2 ) ) ) ; VAR_3 = new java.util.ArrayList < > ( ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",7905
public TYPE_1 METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7906
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7907
private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_1 = false ; } },private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7908
public void METHOD_1 ( ) { date = null ; time = null ; VAR_1 = null ; VAR_2 = new java.util.HashMap < > ( ) ; },public void METHOD_1 ( ) { VAR_2 = new java.util.HashMap < > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7909
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_1 ( VAR_2 ) ; },public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; },"['Move VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7910
"public TYPE_1 METHOD_1 ( ) throws TYPE_2 { int VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { return VAR_2 . METHOD_2 ( INT_1 , VAR_3 ) ; } else { return VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; } }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_2 . METHOD_2 ( INT_1 , VAR_3 ) ; }","['Move Return', 'Delete TypeReference', 'Delete Literal', 'Delete LocalVariable', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",7912
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( STRING_1 ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7913
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_1 , INT_1 , INT_2 , TYPE_3 . METHOD_3 ( STRING_1 ) ) ) ; }","private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( new TYPE_2 ( new TYPE_1 ( VAR_2 ) , INT_1 , INT_2 , TYPE_3 . METHOD_3 ( STRING_1 ) ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",7914
"public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_4 class ) ; intent . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_1 ( intent , 0 ) ; }","public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { android.content.Intent intent = new android.content.Intent ( VAR_1 , VAR_4 class ) ; intent . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_1 ( intent , 0 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",7915
public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = STRING_1 ; VAR_1 = VAR_1 + STRING_2 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_5 . getText ( ) . toString ( ) ; METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = STRING_1 ; VAR_1 = VAR_1 + STRING_2 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",7916
"public void METHOD_1 ( int VAR_1 , TYPE_1 < TYPE_2 , ? > VAR_2 ) { VAR_3 = true ; METHOD_2 ( ) ; VAR_3 = false ; select ( VAR_1 , VAR_2 ) ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 < TYPE_2 , ? > VAR_2 ) { METHOD_2 ( ) ; select ( VAR_1 , VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7917
"public static void METHOD_1 ( android.content.Context context ) { if ( ! ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( context , true ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; VAR_1 = true ; } }","public static void METHOD_1 ( android.content.Context context ) { TYPE_1 . METHOD_2 ( context , true ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; }","['Move Invocation', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7918
"protected void update ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { METHOD_1 ( VAR_1 ) ; java.lang.String VAR_3 = METHOD_2 ( VAR_2 ) ; if ( VAR_3 != null ) { VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_5 = VAR_3 ; } }","protected void update ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { METHOD_1 ( VAR_1 ) ; java.lang.String VAR_3 = METHOD_2 ( VAR_2 ) ; if ( VAR_3 != null ) { VAR_4 . METHOD_3 ( VAR_3 ) ; } }","['Move VariableRead', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",7919
public void update ( ) { ++ ( counter ) ; if ( ( counter ) > INT_1 ) counter = 0 ; },public void update ( ) { },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7920
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = true ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; super . METHOD_1 ( ) ; },protected void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7922
public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_1 ) ) { METHOD_3 ( ) ; if ( VAR_2 ) { VAR_3 . METHOD_4 ( ) ; VAR_2 = false ; } } },public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_1 ) ) { METHOD_3 ( ) ; } },"['Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7923
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( this . VAR_3 , VAR_1 ) ; VAR_4 = true ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; this . METHOD_3 ( this . VAR_3 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7924
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7925
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7926
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",7928
"public void METHOD_1 ( TYPE_1 VAR_1 ) { assert ( ( VAR_2 ) != null ) && ( ( src ) != null ) ; VAR_3 . add ( new TYPE_2 ( VAR_2 , src , VAR_1 ) ) ; VAR_4 = VAR_5 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { assert ( ( VAR_2 ) != null ) && ( ( src ) != null ) ; VAR_3 . add ( new TYPE_2 ( VAR_2 , src , VAR_1 ) ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7929
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; if ( VAR_4 ) { } }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = false ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Delete FieldRead', 'Delete Block', 'Delete If']",7930
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 , false ) ; VAR_4 . commit ( ) ; VAR_5 = 0 ; METHOD_4 ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 , false ) ; VAR_4 . commit ( ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7932
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) { VAR_4 = true ; VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) { VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7933
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = false ; METHOD_3 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7934
"public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.CharSequence VAR_2 , java.lang.CharSequence VAR_3 ) { this . VAR_4 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; return this ; }","public TYPE_1 METHOD_1 ( int VAR_4 , java.lang.CharSequence VAR_2 , java.lang.CharSequence VAR_3 ) { this . VAR_4 = VAR_4 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; return this ; }","['Update Parameter', 'Update VariableRead']",7935
"private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; this . VAR_2 = true ; this . VAR_3 = new TYPE_2 ( 1 , VAR_1 ) ; VAR_4 . start ( ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; this . VAR_3 = new TYPE_2 ( 1 , VAR_1 ) ; VAR_4 . start ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7936
public void METHOD_1 ( int position ) { if ( ( VAR_1 . METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) VAR_1 . METHOD_4 ( position ) ; else VAR_2 = position ; },public void METHOD_1 ( int position ) { VAR_1 . METHOD_4 ( position ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7938
"public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 = false ; } else { METHOD_2 ( STRING_3 , STRING_4 ) ; VAR_1 = true ; } }","public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( STRING_1 , STRING_2 ) ; } else { METHOD_2 ( STRING_3 , STRING_4 ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7939
public void METHOD_1 ( ) { state = VAR_1 ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 . setText ( VAR_5 ) ; VAR_6 . setEnabled ( true ) ; VAR_7 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_2 ) ; VAR_4 . setText ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",7940
"public void METHOD_1 ( TYPE_1 context ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = context . METHOD_2 ( ) . getInt ( STRING_1 , VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 context ) { VAR_1 = null ; VAR_2 = null ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7941
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean b ) { if ( b ) { METHOD_2 ( ) ; VAR_2 = true ; } else { METHOD_3 ( ) ; VAR_2 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean b ) { if ( b ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7942
"public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 = false ; } VAR_4 . METHOD_3 ( event ) ; VAR_5 . METHOD_3 ( event ) ; return false ; }","public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { VAR_4 . METHOD_3 ( event ) ; VAR_5 . METHOD_3 ( event ) ; return false ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7943
public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_3 ( VAR_2 . context ) ; } return VAR_1 . METHOD_1 ( ) ; },public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",7944
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7945
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7946
public static void main ( java.lang.String [ ] args ) throws java.io.IOException { VAR_1 = new java.io.BufferedReader ( new java.io.FileReader ( STRING_1 ) ) ; VAR_2 . init ( ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] args ) throws java.io.IOException { VAR_2 . init ( ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",7947
public void METHOD_1 ( TYPE_1 i ) { VAR_1 = i ; TYPE_2 VAR_2 = new TYPE_2 ( i ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 i ) { VAR_1 = i ; },"['Delete TypeReference', 'Delete VariableRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7948
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ 0 ] ; VAR_3 = 0 ; VAR_4 = INT_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ 0 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7949
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . start ( ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { VAR_2 . start ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7950
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_3 ) ; VAR_4 = new TYPE_2 ( this ) ; METHOD_5 ( VAR_4 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_3 ) ; METHOD_5 ( new TYPE_2 ( this ) ) ; }","['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",7951
"public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; VAR_2 = false ; }","public void METHOD_1 ( java.net.URL url , TYPE_1 VAR_1 ) { METHOD_2 ( false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7953
public void METHOD_1 ( ) { this . VAR_1 = new TYPE_1 ( VAR_2 ) . VAR_3 ; this . VAR_4 = new TYPE_1 ( VAR_5 ) . VAR_3 ; this . VAR_6 = ( this . VAR_4 ) - ( this . VAR_1 ) ; },public void METHOD_1 ( int VAR_6 ) { this . VAR_6 = VAR_6 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete FieldRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete BinaryOperator']",7954
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; this . VAR_3 = null ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7955
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; VAR_3 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7956
"public void METHOD_1 ( ) { VAR_1 = true ; setState ( ( ( VAR_2 ) == ( VAR_3 ) ? VAR_4 : VAR_3 ) , true ) ; super . METHOD_1 ( ) ; VAR_1 = false ; }","public void METHOD_1 ( ) { setState ( ( ( VAR_2 ) == ( VAR_3 ) ? VAR_4 : VAR_3 ) , true ) ; super . METHOD_1 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7957
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7958
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } VAR_2 = false ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = false ; },"['Move Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7959
protected void METHOD_1 ( ) { VAR_1 = true ; },protected void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7961
"private void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = new TYPE_2 ( VAR_1 , this ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; }","private void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; VAR_4 = new TYPE_2 ( VAR_1 ) ; VAR_5 . METHOD_2 ( VAR_4 ) ; }","['Move Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move FieldWrite', 'Insert ConstructorCall', 'Move ThisAccess', 'Move VariableRead', 'Delete ConstructorCall', 'Delete FieldWrite']",7962
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_3 = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Update FieldWrite', 'Move VariableRead', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",7963
"public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_1 ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; VAR_1 = true ; } }","public void METHOD_1 ( ) { METHOD_1 ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7964
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; VAR_3 = false ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7965
"public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , event . METHOD_3 ( ) ) . METHOD_4 ( event . METHOD_3 ( ) ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; ++ ( VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , event . METHOD_3 ( ) ) . METHOD_4 ( event . METHOD_3 ( ) ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",7966
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( VAR_3 . METHOD_2 ( ) , getActivity ( ) ) ; VAR_4 = METHOD_3 ( ) . METHOD_4 ( ) . VAR_5 ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( VAR_3 . METHOD_2 ( ) , getActivity ( ) ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete Assignment']",7967
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( ( VAR_2 ) != null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } else { VAR_1 = VAR_3 ; } } return VAR_1 ; },public java.lang.String METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If', 'Delete FieldRead']",7968
public void METHOD_1 ( java.lang.String key ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } VAR_2 . add ( key ) ; },public void METHOD_1 ( java.lang.String key ) { this . VAR_2 . add ( key ) ; },"['Insert FieldRead', 'Insert ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess']",7969
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; },private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",7970
public void METHOD_1 ( ) { count = 0 ; },public void METHOD_1 ( ) { count = - 1 ; },"['Insert UnaryOperator', 'Insert Literal', 'Delete Literal']",7971
public boolean METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; METHOD_3 ( ) ; return false ; },public boolean METHOD_1 ( android.view.View VAR_1 ) { METHOD_3 ( ) ; return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",7973
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; final TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = false ; VAR_4 = true ; VAR_5 = new TYPE_2 ( ) ; METHOD_2 ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = true ; final TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = false ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",7974
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . getSelection ( ) ) { VAR_3 = ( VAR_4 ) * ( VAR_5 ) ; } else { VAR_2 . setText ( STRING_1 ) ; VAR_3 = 0 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . getSelection ( ) ) { VAR_3 = ( VAR_4 ) * ( VAR_5 ) ; } else { VAR_2 . setText ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7975
"public TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( VAR_2 ) ) { VAR_2 = false ; return VAR_1 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return VAR_1 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; return VAR_1 ; }","['Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7976
"public void METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { } VAR_2 . METHOD_2 ( this ) ; VAR_3 = false ; VAR_4 . i ( VAR_5 , STRING_1 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; }","public void METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { } VAR_2 . METHOD_2 ( this ) ; VAR_4 . i ( VAR_5 , STRING_1 ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7977
public void METHOD_1 ( java.lang.String date ) { this . VAR_1 = date ; },public void METHOD_1 ( java.lang.String date ) { this . date = date ; },['Update FieldWrite'],7978
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 . iterator ( ) ; VAR_5 = VAR_6 . iterator ( ) ; VAR_7 = null ; VAR_8 = null ; VAR_9 = false ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_4 . iterator ( ) ; VAR_5 = VAR_6 . iterator ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7979
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; VAR_4 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . i ( VAR_3 , STRING_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7980
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Invocation']",7981
"protected void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; VAR_2 = TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( this , intent , VAR_2 ) ; }","protected void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; TYPE_2 . METHOD_4 ( this , intent , null ) ; }","['Insert Literal', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess']",7982
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . start ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_1 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . start ( ) ; VAR_5 = VAR_1 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7983
"public void error ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( STRING_1 , STRING_1 ) ; VAR_2 = VAR_3 ; }",public void error ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",7985
public synchronized void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; VAR_3 = 0 ; },public synchronized void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = 0 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7986
public TYPE_1 remove ( ) { TYPE_1 item = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; METHOD_1 ( 0 ) ; ( size ) -- ; return item ; },public TYPE_1 remove ( ) { TYPE_1 item = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; METHOD_1 ( 0 ) ; return item ; },"['Delete FieldWrite', 'Delete UnaryOperator']",7987
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 . size ( ) ) == INT_1 ) { VAR_3 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_1 ) ; this . VAR_4 = METHOD_4 ( ) ; },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 . size ( ) ) == INT_1 ) { VAR_3 . METHOD_2 ( ) ; } VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",7988
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { this . VAR_3 = VAR_1 ; VAR_2 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7990
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { this . VAR_1 = 0 ; return true ; } else { return false ; } },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { ( this . VAR_1 ) -- ; return true ; } else { return false ; } },"['Insert UnaryOperator', 'Move FieldWrite', 'Delete Literal', 'Delete Assignment']",7991
public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { return ; } this . VAR_1 = METHOD_2 ( VAR_1 ) . getTime ( ) ; },public void METHOD_1 ( java.util.Date VAR_1 ) { if ( VAR_1 == null ) { return ; } this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation', 'Delete Invocation']",7992
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = null ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { VAR_1 = 0 ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7993
public void METHOD_1 ( ) { VAR_1 = 0 ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; },public void METHOD_1 ( ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",7994
"private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } , ( INT_1 * INT_2 ) ) ; }","private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } , ( INT_1 * INT_2 ) ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",7995
public void METHOD_1 ( final int VAR_1 ) { this . VAR_2 -= ( this . VAR_3 . METHOD_2 ( ) ) / VAR_1 ; if ( ( VAR_2 ) < INT_1 ) VAR_2 = INT_1 ; },public void METHOD_1 ( final int VAR_1 ) { this . VAR_2 -= ( this . VAR_3 . METHOD_2 ( ) ) / VAR_1 ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",7996
public void METHOD_1 ( ) { VAR_1 = true ; count = 0 ; },public void METHOD_1 ( ) { VAR_1 = ! ( VAR_1 ) ; count = 0 ; },"['Insert UnaryOperator', 'Insert FieldRead', 'Delete Literal']",7997
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",7998
"public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 , INT_1 ) ; }",public void METHOD_1 ( float VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete Invocation']",7999
"public void METHOD_1 ( android.content.Intent intent , int VAR_1 ) { VAR_2 = intent . METHOD_2 ( STRING_1 ) ; start ( intent . METHOD_3 ( STRING_2 ) ) ; }","public void METHOD_1 ( android.content.Intent intent , int VAR_1 ) { start ( intent . METHOD_3 ( STRING_2 ) ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8000
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_4 = TYPE_3 . METHOD_3 ( ) ; context = this ; TYPE_4 . METHOD_4 ( this ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_4 = TYPE_3 . METHOD_3 ( ) ; TYPE_4 . METHOD_4 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",8001
"public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8002
public void METHOD_1 ( java.util.List < java.lang.Double > VAR_1 ) { if ( ( VAR_2 . size ( ) ) == ( this . VAR_2 . size ( ) ) ) this . VAR_1 = VAR_1 ; },public void METHOD_1 ( java.util.List < java.lang.Double > VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8003
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; VAR_2 = null ; return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Move FieldRead', 'Delete TypeReference', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete VariableRead']",8004
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) ; VAR_5 = VAR_3 . METHOD_4 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8005
public void METHOD_1 ( TYPE_1 n ) { VAR_1 = VAR_2 . getName ( ) ; n . METHOD_2 ( STRING_1 ) ; VAR_3 . add ( n ) ; },public void METHOD_1 ( TYPE_1 n ) { n . METHOD_2 ( STRING_1 ) ; VAR_3 . add ( n ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8006
"public void METHOD_1 ( java.io.File file ) { METHOD_1 ( file , VAR_1 , true ) ; VAR_2 = file ; VAR_3 = file ; }","public void METHOD_1 ( java.io.File file ) { METHOD_1 ( file , VAR_1 , true ) ; VAR_2 = file ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8007
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( ) ; VAR_2 = new TYPE_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_1 , STRING_1 , VAR_10 , VAR_11 ) ; }",public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",8008
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_1 ( ) ; } return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8009
public void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_4 ( null ) ; super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_2 ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 . METHOD_4 ( null ) ; super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8010
"public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 listener ) throws TYPE_3 , TYPE_4 { super . METHOD_1 ( VAR_1 , listener ) ; METHOD_2 ( 0 ) ; VAR_2 = new java.util.HashMap < java.lang.String , java.util.List < TYPE_5 > > ( ) ; }","public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 listener ) throws TYPE_3 , TYPE_4 { super . METHOD_1 ( VAR_1 , listener ) ; METHOD_2 ( 0 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8012
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_4 = false ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8013
public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = null ; VAR_2 = VAR_1 ; VAR_3 . remove ( VAR_4 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; VAR_5 . METHOD_3 ( ) ; VAR_4 = VAR_2 ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = null ; VAR_2 = VAR_1 ; VAR_3 . remove ( VAR_4 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_2 ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8014
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = false ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8015
protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 = null ; },protected void METHOD_1 ( java.lang.Void VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8016
public void METHOD_1 ( TYPE_1 offset ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( this ) ; } VAR_1 . METHOD_1 ( offset ) ; },public void METHOD_1 ( TYPE_1 offset ) { this . offset = offset ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Move ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation']",8017
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . number = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8018
public void METHOD_1 ( TYPE_1 response ) { this . response = response ; },public void METHOD_1 ( TYPE_1 response ) { this . METHOD_1 ( response ) ; },"['Insert Invocation', 'Move ThisAccess', 'Move VariableRead', 'Delete FieldWrite', 'Delete Assignment']",8019
protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; },protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8020
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = 0 ; } catch ( TYPE_1 VAR_3 ) { } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8021
"public void METHOD_1 ( android.view.View view , boolean b ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } VAR_1 = b ; }","public void METHOD_1 ( android.view.View view , boolean b ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } if ( b ) { VAR_1 = true ; } else { VAR_1 = false ; } }","['Insert If', 'Move VariableRead', 'Insert Block', 'Insert Block', 'Move Assignment', 'Insert Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal']",8022
private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; },private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8023
"public void METHOD_1 ( ) { VAR_1 = true ; status = INT_1 ; VAR_2 = new TYPE_1 ( new TYPE_2 ( VAR_3 ) , VAR_4 , 1.0F ) ; }","public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 = new TYPE_1 ( new TYPE_2 ( VAR_3 ) , VAR_4 , 1.0F ) ; }","['Update Literal', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8024
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) VAR_3 = true ; if ( VAR_4 . METHOD_2 ( ) ) VAR_5 = true ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8025
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { VAR_4 = VAR_2 - INT_1 ; VAR_5 . setText ( ( ( VAR_4 ) + STRING_1 ) ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation']",8026
public static void main ( java.lang.String [ ] args ) throws TYPE_1 { VAR_1 = new TYPE_2 ( ) ; TYPE_3 . METHOD_1 ( ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; },public static void main ( java.lang.String [ ] args ) throws TYPE_1 { TYPE_3 . METHOD_1 ( ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8027
"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , android.content.Context c ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; VAR_4 = null ; return VAR_2 ; }","public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , android.content.Context c ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8028
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getContext ( ) ) ; VAR_2 = new TYPE_2 ( getContext ( ) , this ) ; VAR_2 . METHOD_2 ( false ) ; METHOD_3 ( false ) ; METHOD_4 ( false ) ; }",private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getContext ( ) ) ; METHOD_3 ( false ) ; METHOD_4 ( false ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8029
"public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 < java.lang.String > VAR_3 = new TYPE_1 ( context , VAR_4 , VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( VAR_3 ) ; }","public void METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_3 = new TYPE_1 ( context , VAR_4 , VAR_2 . METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( VAR_3 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8030
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8031
public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 = VAR_1 ; this . VAR_3 = TYPE_3 . METHOD_1 ( ) . METHOD_2 ( ) ; },public void init ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8032
private void METHOD_1 ( ) { boolean VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 = VAR_1 ; },private void METHOD_1 ( ) { VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8033
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; TYPE_1 [ ] VAR_3 = VAR_1 . METHOD_5 ( VAR_4 ) ; METHOD_6 ( ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; TYPE_1 [ ] VAR_3 = VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_2 = VAR_3 ; METHOD_6 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead']",8034
"public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = INT_1 ; VAR_3 . height = INT_2 ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","public static void main ( java.lang.String [ ] arg ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( new TYPE_3 ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8036
"public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_1 . info ( STRING_1 ) ; this . VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 ) ; this . VAR_4 = new TYPE_3 ( VAR_2 ) ; VAR_1 . info ( STRING_2 , VAR_2 ) ; return VAR_2 ; }","public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_1 . info ( STRING_1 ) ; this . VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 ) ; VAR_1 . info ( STRING_2 , VAR_2 ) ; return VAR_2 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",8037
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( this . VAR_3 . get ( 0 ) ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( this . VAR_3 . get ( 0 ) ) ; } return VAR_1 ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8038
"public static java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( ) ; } VAR_1 = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; return VAR_2 ; }","public static java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( ) { return VAR_2 ; }","['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8039
"public void METHOD_1 ( boolean select , java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 , select ) ; }","public void METHOD_1 ( boolean select , java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 , select ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8040
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) this . VAR_1 = true ; else this . VAR_1 = null ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Move VariableRead', 'Delete Literal', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8042
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ! ( VAR_2 ) ) VAR_3 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8044
"protected void METHOD_1 ( java.lang.Void VAR_1 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_4 class ) ) ; }","protected void METHOD_1 ( java.lang.Void VAR_1 ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; METHOD_3 ( new android.content.Intent ( this , VAR_4 class ) ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8045
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_1 ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8046
public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; switch ( id ) { case VAR_1 : VAR_2 = 1 ; METHOD_3 ( ) ; } return super . METHOD_1 ( item ) ; },public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; switch ( id ) { case VAR_1 : METHOD_3 ( ) ; } return super . METHOD_1 ( item ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8047
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . getString ( STRING_1 ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8048
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; event = new TYPE_3 ( ) ; event . METHOD_2 ( METHOD_3 ( ) . getString ( STRING_1 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; event = new TYPE_3 ( ) ; event . METHOD_2 ( METHOD_3 ( ) . getString ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete Assignment']",8049
public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { VAR_2 . METHOD_2 ( ) ; this . VAR_1 = null ; return true ; } return false ; },public boolean METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 = null ; return true ; } return false ; },"['Delete TypeAccess', 'Delete Invocation']",8050
"void setState ( TYPE_1 state ) { VAR_1 = true ; if ( ( this . state ) == state ) { return ; } this . state = state ; this . VAR_2 . METHOD_1 ( ) ; METHOD_2 ( state , VAR_2 ) ; }","void setState ( TYPE_1 state ) { if ( ( state == null ) || ( ( this . state ) == state ) ) { return ; } VAR_2 . METHOD_1 ( ) ; METHOD_2 ( state , VAR_2 ) ; }","['Insert BinaryOperator', 'Insert TypeAccess', 'Insert BinaryOperator', 'Move BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",8052
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = new TYPE_2 ( 0 , 0 , 0 , 0 , FLOAT_1 ) ; METHOD_2 ( ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete Literal', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation']",8053
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( ) ; } this . VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8054
public final void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { this . VAR_1 = new TYPE_2 ( ) ; return ; } this . VAR_1 = VAR_1 ; },public final void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { return ; } this . VAR_1 = VAR_1 ; },"['Update BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8055
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_2 ( VAR_2 ) ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8057
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 ) ) { VAR_4 = false ; METHOD_2 ( ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8058
public void METHOD_1 ( TYPE_1 to ) throws java.io.IOException { METHOD_2 ( to ) ; file = VAR_1 . file ; },public void METHOD_1 ( TYPE_1 to ) throws java.io.IOException { METHOD_2 ( to ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8059
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; index = VAR_3 . get ( VAR_4 class ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_2 . METHOD_3 ( ) ; index = VAR_3 . get ( VAR_4 class ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8062
public void METHOD_1 ( ) { data = null ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { getData ( ) ; },"['Update Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8063
"private void METHOD_1 ( ) { VAR_1 = true ; if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; VAR_2 = true ; } }","private void METHOD_1 ( ) { VAR_1 = true ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8064
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . append ( ""0"" ) ; VAR_3 . setText ( VAR_2 . toString ( ) ) ; if ( ( VAR_4 ) == true ) { VAR_4 = false ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . append ( ""0"" ) ; VAR_3 . setText ( VAR_2 . toString ( ) ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8065
"protected void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , false , false ) ; VAR_4 = false ; VAR_5 = true ; VAR_6 = true ; VAR_7 . add ( VAR_2 ) ; }","protected void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , false , false ) ; VAR_4 = false ; VAR_5 = true ; VAR_7 . add ( VAR_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8066
"public void METHOD_1 ( java.lang.String title , java.lang.String message ) { this . title = title ; this . message = message ; }",public void METHOD_1 ( java.lang.String message ) { this . message = message ; },"['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8067
public void update ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; VAR_1 = true ; } VAR_3 = ( VAR_4 . METHOD_1 ( ) ) / INT_1 ; VAR_5 = ( VAR_4 . METHOD_2 ( ) ) / INT_1 ; },public void update ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . start ( ) ; VAR_1 = true ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",8068
void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; VAR_2 = true ; METHOD_2 ( ) ; VAR_1 = false ; } },void METHOD_1 ( ) { VAR_2 = true ; METHOD_2 ( ) ; },"['Move Assignment', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8069
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; if ( VAR_3 != null ) { VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",8070
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( ) ; VAR_5 = VAR_6 ; } METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; METHOD_4 ( ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8071
public boolean METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 < TYPE_1 > METHOD_3 ( ) ) ; VAR_3 = METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; return true ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; },"['Update Literal', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8072
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = this ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = this ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",8073
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_4 . METHOD_2 ( ) . get ( 1 ) ) ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_4 . METHOD_2 ( ) . get ( 1 ) ) ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8074
public void METHOD_1 ( TYPE_1 error ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_3 ( VAR_4 ) ; } },public void METHOD_1 ( TYPE_1 error ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8075
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8076
public void METHOD_1 ( android.view.View VAR_1 ) { this . VAR_2 = java.lang.Double . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_3 . setText ( STRING_1 ) ; this . VAR_4 = STRING_2 ; this . counter = 0 ; },public void METHOD_1 ( android.view.View VAR_1 ) { this . VAR_2 = java.lang.Double . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; VAR_3 . setText ( STRING_1 ) ; this . VAR_4 = STRING_2 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8077
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( VAR_1 == null ) { VAR_3 . id = 0 ; } else { VAR_3 . id = VAR_4 . getId ( ) ; } return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 . id = VAR_4 . getId ( ) ; return VAR_2 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",8078
public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8079
"public void METHOD_1 ( TYPE_1 j , int VAR_1 , int VAR_2 ) { METHOD_2 ( j , VAR_2 , VAR_1 ) ; ( VAR_3 ) ++ ; METHOD_3 ( j , ( VAR_2 + 1 ) , VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 j , int VAR_1 , int VAR_2 ) { METHOD_2 ( j , VAR_2 , VAR_1 ) ; METHOD_3 ( j , ( VAR_2 + 1 ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",8080
public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 ) ; VAR_3 = true ; } },public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8081
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getActivity ( ) . METHOD_2 ( STRING_1 , VAR_3 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8082
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 ) ) ; }","private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 ) ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8083
protected TYPE_1 METHOD_1 ( ) { TYPE_2 msg = new TYPE_2 ( ) ; VAR_1 = VAR_2 new TYPE_3 ( VAR_3 ) ; msg . METHOD_2 ( VAR_4 ) ; msg . METHOD_3 ( VAR_1 ) ; return msg ; },protected TYPE_1 METHOD_1 ( ) { TYPE_2 msg = new TYPE_2 ( ) ; TYPE_3 VAR_1 = VAR_2 new TYPE_3 ( VAR_3 ) ; msg . METHOD_2 ( VAR_4 ) ; msg . METHOD_3 ( VAR_1 ) ; return msg ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move FieldRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8084
"public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this , ( STRING_1 + VAR_1 ) , VAR_3 ) . show ( ) ; VAR_4 . METHOD_4 ( ) ; filePath = null ; }","public void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this , ( STRING_1 + VAR_1 ) , VAR_3 ) . show ( ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8085
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_5 = METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8086
public static synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; },public static synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8087
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8088
"public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_4 = VAR_1 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) ; return true ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation']",8089
"protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 , int index ) { VAR_3 = false ; }","protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 , int index ) { }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8090
"public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 = true ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_4 . METHOD_3 ( VAR_5 , null ) ) ; } }","public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) != null ) { if ( VAR_2 . METHOD_1 ( VAR_1 ) ) { VAR_4 . METHOD_2 ( VAR_4 . METHOD_3 ( VAR_5 , null ) ) ; } } }","['Insert If', 'Move Invocation', 'Insert Block', 'Move Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8091
public void init ( ) { this . VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; this . VAR_1 . METHOD_2 ( VAR_3 ) ; },public void init ( ) { this . VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; this . VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8092
"private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = true ; VAR_4 . setText ( VAR_5 , VAR_6 ) ; METHOD_2 ( VAR_7 , VAR_8 ) ; METHOD_3 ( ) ; VAR_9 . METHOD_4 ( true ) ; VAR_2 = false ; }","private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = true ; VAR_4 . setText ( VAR_5 , VAR_6 ) ; VAR_9 . METHOD_2 ( VAR_7 , VAR_8 ) ; METHOD_3 ( ) ; VAR_9 . METHOD_4 ( true ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8093
"public void METHOD_1 ( final TYPE_1 VAR_1 , final int id ) { METHOD_2 ( new android.content.Intent ( VAR_2 ) , VAR_3 ) ; VAR_4 = false ; }","public void METHOD_1 ( final TYPE_1 VAR_1 , final int id ) { METHOD_2 ( new android.content.Intent ( VAR_2 ) , VAR_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8095
public final void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; this . METHOD_3 ( VAR_1 ) ; if ( VAR_1 ) { VAR_3 . METHOD_4 ( ) ; VAR_4 = null ; } },public final void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( this ) ; this . METHOD_3 ( VAR_1 ) ; if ( VAR_1 ) { VAR_3 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8096
"protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; super . METHOD_1 ( ) ; }",protected void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ) ; super . METHOD_1 ( ) ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8097
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; state = - 1 ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",8098
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_3 . length ) ; VAR_4 = false ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) + 1 ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8099
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; METHOD_3 ( view ) ; VAR_5 = new TYPE_4 ( getActivity ( ) ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",8100
public static void METHOD_1 ( ) { VAR_1 = false ; TYPE_1 . METHOD_2 ( ) ; },public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8102
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; try { VAR_3 = ( ( TYPE_2 ) ( VAR_1 ) ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_3 ( STRING_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; try { VAR_3 = ( ( TYPE_2 ) ( VAR_1 ) ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_3 ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8103
"public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = true ; listener . METHOD_2 ( true ) ; return true ; }","public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; listener . METHOD_2 ( true ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8104
public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( ( STRING_1 . equals ( VAR_2 ) ) || ( STRING_2 . equals ( VAR_2 ) ) ) { this . VAR_1 = STRING_3 ; } else { this . VAR_1 = VAR_3 . toString ( ) ; } },public void METHOD_1 ( java.lang.Object VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Insert VariableRead', 'Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",8105
public void METHOD_1 ( ) { fileName . METHOD_2 ( new java.lang.String ( VAR_1 . getText ( ) ) ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { fileName = new java.lang.String ( VAR_1 . getText ( ) ) ; VAR_2 = true ; VAR_3 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move ConstructorCall', 'Delete FieldRead', 'Delete Invocation']",8106
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; METHOD_2 ( ) ; VAR_2 = false ; VAR_3 . setText ( ( STRING_1 + ( ( int ) ( VAR_4 ) ) ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_3 . setText ( ( STRING_1 + ( ( int ) ( VAR_4 ) ) ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8107
"public void METHOD_1 ( TYPE_1 source , TYPE_2 target ) { src = source ; VAR_1 = target ; VAR_2 = VAR_3 . METHOD_2 ( src ) ; VAR_4 = VAR_5 . METHOD_3 ( VAR_1 ) ; }","public void METHOD_1 ( TYPE_1 source , TYPE_2 target ) { src = source ; VAR_1 = target ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8108
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == false ) TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; else VAR_2 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8109
public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; },public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8110
"private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_5 . METHOD_2 ( ) ; METHOD_3 ( VAR_6 ) ; VAR_1 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_7 , VAR_3 ) ) ; }","private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; METHOD_3 ( VAR_6 ) ; VAR_1 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_7 , VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8112
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = true ; return VAR_2 ; },public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8113
TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = 1.0F / VAR_1 ; VAR_3 = ( VAR_2 ) / INT_1 ; return this ; },TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = 1.0F / VAR_1 ; return this ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",8114
"public void METHOD_1 ( int index , double VAR_1 ) { final double VAR_2 = this . VAR_3 [ this . VAR_4 ] ; this . VAR_3 [ index ] = VAR_1 ; if ( VAR_1 < VAR_2 ) { this . VAR_4 = index ; } }","public void METHOD_1 ( int index , double VAR_1 ) { final double VAR_2 = this . VAR_3 [ this . VAR_4 ] ; if ( VAR_1 < VAR_2 ) { } this . VAR_3 [ index ] = VAR_1 ; }","['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8116
public TYPE_1 METHOD_1 ( int VAR_1 ) { index = VAR_1 ; return VAR_2 . get ( VAR_1 ) ; },public TYPE_1 METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8117
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8118
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new java.awt.Color ( INT_1 , INT_2 , INT_3 ) ; }","public void METHOD_1 ( ) { VAR_2 = new java.awt.Color ( INT_1 , INT_2 , INT_3 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8119
"public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; VAR_8 = new TYPE_1 ( VAR_9 , VAR_10 ) ; VAR_11 = TYPE_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( ) { VAR_3 = new TYPE_1 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; VAR_8 = new TYPE_1 ( VAR_9 , VAR_10 ) ; VAR_11 = TYPE_2 . METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8121
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.Throwable VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.Throwable VAR_3 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8122
"protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; }","protected void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8123
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getString ( STRING_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8124
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( int ) ( VAR_2 ) ) ) ; VAR_3 = ( ( int ) ( VAR_2 ) ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( int ) ( VAR_2 ) ) ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete Assignment']",8125
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 [ ] VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; VAR_3 = VAR_1 ; METHOD_4 ( ) . METHOD_6 ( ) ; VAR_4 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 [ ] VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; METHOD_4 ( ) . METHOD_6 ( ) ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8126
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_5 = METHOD_2 ( VAR_6 ) ; VAR_7 = METHOD_2 ( VAR_8 ) ; },public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8127
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( new TYPE_2 ( VAR_1 , VAR_4 ) ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_5 ( new TYPE_2 ( VAR_1 , VAR_4 ) ) ; VAR_5 . METHOD_6 ( VAR_6 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8128
"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( context , VAR_4 , VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_3 . METHOD_4 ( ) ; }","private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( context , VAR_4 , VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_3 . METHOD_4 ( ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess']",8129
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; },void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.System.out.println ( ( ( VAR_2 ) == null ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 = null ; },"['Insert Invocation', 'Insert FieldRead', 'Insert BinaryOperator', 'Insert TypeAccess', 'Insert FieldRead', 'Insert Literal', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",8130
public void METHOD_1 ( ) { state = VAR_1 ; VAR_2 . setEnabled ( true ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_2 ) ; VAR_5 . setText ( STRING_3 ) ; },public void METHOD_1 ( ) { VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_2 ) ; VAR_5 . setText ( STRING_3 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8131
void METHOD_1 ( ) { this . setState ( VAR_1 ) ; },void METHOD_1 ( ) { state = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",8132
"public TYPE_1 METHOD_1 ( ) { VAR_1 = true ; VAR_2 . put ( STRING_1 , STRING_2 ) ; return this ; }","public TYPE_1 METHOD_1 ( ) { VAR_2 . put ( STRING_1 , STRING_2 ) ; return this ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8133
public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } },public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8134
public TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = this . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",8135
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; VAR_6 = new java.util.ArrayList < > ( ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8136
"public void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 ) { METHOD_2 ( ) ; VAR_3 = false ; } }","public void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { }","['Delete FieldRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8138
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = ( ( TYPE_4 ) ( getActivity ( ) . METHOD_3 ( VAR_7 ) ) ) ; return VAR_4 ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; return VAR_4 ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8139
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = this ; METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",8140
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . append ( STRING_1 ) ; VAR_3 . setText ( VAR_2 . toString ( ) ) ; if ( ( VAR_4 ) == true ) { VAR_4 = false ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . append ( STRING_1 ) ; VAR_3 . setText ( VAR_2 . toString ( ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8141
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 . METHOD_2 ( ) . VAR_2 = true ; VAR_3 . METHOD_5 ( true ) ; METHOD_6 ( 0 ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_6 ( 0 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8142
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_3 = VAR_1 ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8143
public void METHOD_1 ( ) { VAR_1 = ( ( double ) ( VAR_2 ) ) / ( ( VAR_3 ) * ( VAR_4 ) ) ; },public void METHOD_1 ( ) { VAR_1 = ( ( double ) ( VAR_2 ) ) ; },"['Move FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",8145
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_3 ( ) ; } VAR_3 = VAR_4 ; METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Invocation']",8146
public double METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = java.lang.Double . METHOD_2 ( VAR_3 . format ( VAR_2 ) ) ; return VAR_2 ; },public double METHOD_1 ( ) { return VAR_2 ; },"['Delete TypeReference', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8147
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8149
private void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) + 1 ) % ( VAR_2 . size ( ) ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) == ( ( VAR_2 . size ( ) ) - 1 ) ) { VAR_1 = 0 ; } else { VAR_1 = ( VAR_1 ) + 1 ; } },"['Insert If', 'Insert BinaryOperator', 'Insert Block', 'Insert Block', 'Insert FieldRead', 'Update BinaryOperator', 'Move BinaryOperator', 'Insert Assignment', 'Move Assignment', 'Insert Literal', 'Insert FieldWrite', 'Insert Literal', 'Move BinaryOperator']",8150
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; VAR_2 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( METHOD_6 ( ) ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . METHOD_5 ( METHOD_6 ( ) ) ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8151
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > INT_1 ) { VAR_1 = 0 ; return false ; } else { VAR_1 = 0 ; return true ; } },public boolean METHOD_1 ( ) { if ( ( VAR_1 ) > INT_1 ) { return false ; } else { return true ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8152
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ) { VAR_4 = STRING_1 ; this . METHOD_3 ( ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) ; this . METHOD_3 ( ) ; },"['Move Invocation', 'Move Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8153
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . start ( ) ; VAR_5 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . start ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8156
public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 = true ; VAR_3 = VAR_4 ; VAR_5 . update ( ) ; },public void METHOD_1 ( ) { VAR_1 . start ( ) ; VAR_2 = true ; VAR_5 . update ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8157
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { init ( true ) ; } else { VAR_1 = true ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; init ( true ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8160
"private void add ( long time , long VAR_1 ) { sum += VAR_1 ; VAR_2 . put ( time , VAR_1 ) ; VAR_3 = VAR_1 ; METHOD_1 ( time ) ; }","private void add ( long time , long VAR_1 ) { sum += VAR_1 ; VAR_2 . put ( time , VAR_1 ) ; METHOD_1 ( time ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8161
public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_3 ; return this ; },public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8162
void METHOD_1 ( ) { state = null ; VAR_1 = - 1 ; VAR_2 = null ; VAR_3 . METHOD_2 ( ) ; },void METHOD_1 ( ) { state = null ; VAR_3 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8163
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } if ( ! ( VAR_3 ) ) { VAR_3 = true ; return ; } VAR_2 = null ; METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { return ; } VAR_2 = null ; METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",8164
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_5 = ( ( android.widget.LinearLayout ) ( METHOD_2 ( VAR_6 ) ) ) ; },private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8165
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 . METHOD_3 ( ) ) VAR_3 . METHOD_4 ( false ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",8166
public void METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 . METHOD_2 ( false ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8167
"public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , new TYPE_1 ( VAR_2 ) , new TYPE_2 ( VAR_3 ) ) ; ( VAR_4 ) ++ ; }","public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , new TYPE_1 ( VAR_2 ) , new TYPE_2 ( VAR_3 ) ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",8168
public void METHOD_1 ( java.lang.String name ) { VAR_1 = name ; VAR_2 = name ; },public void METHOD_1 ( java.lang.String name ) { VAR_1 = name ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8169
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . setText ( VAR_4 . getName ( ) ) ; },public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_3 . setText ( VAR_4 . getName ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8170
protected void METHOD_1 ( ) { VAR_1 = false ; view = null ; },protected void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8171
public java.util.List < TYPE_1 > METHOD_1 ( ) { args = METHOD_2 ( args ) ; return args ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { return args ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Invocation', 'Delete Assignment']",8172
public void METHOD_1 ( int VAR_1 ) { int VAR_2 = INT_1 ; VAR_3 = ( ( long ) ( VAR_1 ) ) * VAR_2 ; VAR_4 = METHOD_2 ( ) ; },public void METHOD_1 ( int VAR_1 ) { int VAR_2 = INT_1 ; VAR_3 = ( ( long ) ( VAR_1 ) ) * VAR_2 ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",8173
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 = VAR_3 . METHOD_2 ( VAR_4 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( this ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; return VAR_2 ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8174
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; count = 0 ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8175
"public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; METHOD_3 ( intent ) ; VAR_3 = null ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",8176
protected void METHOD_1 ( ) { VAR_1 = ( - ( VAR_2 ) ) / FLOAT_1 ; },protected void METHOD_1 ( ) { VAR_1 = - ( VAR_2 ) ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",8177
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } VAR_4 . METHOD_4 ( true ) ; VAR_5 = false ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } VAR_4 . METHOD_4 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8178
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; android.content.Intent intent = getIntent ( ) ; java.lang.String VAR_3 = intent . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( VAR_3 , title ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = getIntent ( ) ; java.lang.String VAR_3 = intent . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( VAR_3 , title ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8179
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = false ; METHOD_2 ( VAR_2 ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8180
"protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 ) ; }",protected void METHOD_1 ( ) { error = STRING_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8181
"private void METHOD_1 ( int VAR_1 , int [ ] VAR_2 ) { if ( VAR_1 == ( VAR_3 ) ) { if ( ( VAR_2 [ 0 ] ) == ( VAR_4 ) ) { } else { VAR_5 = true ; } } }","private void METHOD_1 ( int VAR_1 , int [ ] VAR_2 ) { if ( VAR_1 == ( VAR_3 ) ) { if ( ( VAR_2 [ 0 ] ) == ( VAR_4 ) ) { } else { } } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8182
public void METHOD_1 ( ) { if ( VAR_1 != null ) { VAR_2 = false ; VAR_1 . METHOD_2 ( VAR_3 ) ; query ( VAR_1 ) ; } },public void METHOD_1 ( ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( VAR_3 ) ; query ( VAR_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8183
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8185
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8186
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 = VAR_1 . METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8187
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = null ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8188
public void METHOD_1 ( ) { this . VAR_1 = ! ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Parameter', 'Insert TypeReference', 'Insert VariableRead', 'Delete FieldRead', 'Delete UnaryOperator']",8190
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_6 = true ; VAR_7 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8191
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8192
public int METHOD_1 ( ) { for ( TYPE_1 field : VAR_1 ) { if ( 0 == 0 ) { VAR_2 = METHOD_2 ( METHOD_3 ( field . METHOD_4 ( ) ) ) ; } } return VAR_2 ; },public int METHOD_1 ( ) { for ( TYPE_1 field : VAR_1 ) { if ( 0 == 0 ) { METHOD_3 ( field . METHOD_4 ( ) ) ; } } return 0 ; },"['Insert Literal', 'Move Invocation', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete FieldRead']",8193
public void METHOD_1 ( ) { VAR_1 = 0 ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8194
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_4 ) ) ) ; TYPE_2 . METHOD_4 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8195
public boolean METHOD_1 ( android.content.Intent intent ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 = false ; return false ; },public boolean METHOD_1 ( android.content.Intent intent ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; return false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8197
"public void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_3 = false ; VAR_4 = VAR_3 ; VAR_5 . METHOD_1 ( new TYPE_2 ( ) . METHOD_3 ( VAR_6 , STRING_2 ) ) ; }","public void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_4 = false ; VAR_3 = VAR_4 ; VAR_5 . METHOD_1 ( new TYPE_2 ( ) . METHOD_3 ( VAR_6 , STRING_2 ) ) ; }","['Move Assignment', 'Move Literal', 'Insert FieldRead', 'Delete FieldRead']",8198
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 = true ; VAR_2 . METHOD_4 ( ) ; VAR_5 = null ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = ( ( TYPE_2 ) ( getActivity ( ) ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8199
"public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( getActivity ( ) , VAR_1 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8200
private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = 0 ; VAR_4 = false ; VAR_5 = false ; },private void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; VAR_3 = 0 ; VAR_4 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8201
"public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { VAR_1 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int id ) { delete = false ; VAR_1 . METHOD_2 ( ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert Literal']",8202
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 , STRING_1 , false ) ; VAR_2 = new TYPE_1 ( 1 , java.util.Calendar.getInstance ( ) , STRING_2 , false , new java.util.ArrayList < TYPE_2 > ( ) ) ; }","public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( 1 , STRING_1 , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete ConstructorCall', 'Delete ConstructorCall', 'Delete Assignment']",8203
public void show ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 . METHOD_1 ( true ) ; VAR_5 = false ; },public void show ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_4 . METHOD_1 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8204
public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) ; VAR_2 = false ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8205
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess']",8206
public void METHOD_1 ( ) { if ( ( VAR_1 ) != ( - 1 ) ) { remove ( VAR_1 ) ; VAR_1 = - 1 ; VAR_2 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != ( - 1 ) ) { remove ( VAR_1 ) ; VAR_1 = - 1 ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8207
public void METHOD_1 ( java.util.List < TYPE_1 > list ) { this . list = list ; this . VAR_1 = null ; },public void METHOD_1 ( java.util.List < TYPE_1 > list ) { this . list = list ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8208
public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = 0 ; VAR_6 . METHOD_3 ( ) ; VAR_7 . setState ( VAR_8 ) ; VAR_9 = false ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_6 . METHOD_3 ( ) ; VAR_7 . setState ( VAR_8 ) ; VAR_9 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8210
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) ; ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_4 ( VAR_1 ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete Invocation', 'Delete TypeReference', 'Delete Invocation', 'Delete Invocation']",8211
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( getString ( VAR_2 ) ) ; VAR_1 . METHOD_3 ( getString ( VAR_3 ) ) ; VAR_4 . show ( ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",8212
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( getActivity ( ) ) ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",8213
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; VAR_3 = new TYPE_2 ( this ) . METHOD_3 ( VAR_4 ) . build ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8214
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; VAR_3 = false ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8215
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; },"['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess']",8216
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( this . VAR_1 ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } },"['Move VariableRead', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess', 'Delete FieldRead']",8218
public void METHOD_1 ( ) { init ( ) ; TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_3 = false ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { init ( ) ; TYPE_1 . METHOD_2 ( context ) . METHOD_3 ( ) ; VAR_1 . add ( VAR_2 ) ; METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8219
"public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; TYPE_3 . METHOD_2 ( VAR_4 , STRING_1 , VAR_2 ) ; if ( ( VAR_5 ) == 0 ) { METHOD_3 ( ) ; } }","public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { VAR_3 = VAR_1 ; TYPE_3 . METHOD_2 ( VAR_4 , STRING_1 , VAR_2 ) ; if ( ( ( VAR_5 ) -- ) == 0 ) { METHOD_3 ( ) ; } }","['Insert UnaryOperator', 'Insert FieldWrite', 'Delete FieldRead']",8220
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = 0 ; VAR_3 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; } },public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_3 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8221
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; VAR_3 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8222
public static void init ( ) { VAR_1 = VAR_2 ; VAR_3 = 0 ; VAR_4 . index = - 1 ; TYPE_1 . METHOD_1 ( ) ; },public static void init ( ) { VAR_3 = 0 ; VAR_4 . index = - 1 ; TYPE_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8223
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } this . VAR_3 = 0 ; this . VAR_4 = false ; },public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : this . VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } this . VAR_3 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8224
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } },private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8225
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) ) { VAR_1 = null ; VAR_3 = true ; } },public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) ) { VAR_1 = null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8226
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 . METHOD_1 ( VAR_7 ) ; VAR_8 . METHOD_1 ( VAR_9 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; },"['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8227
void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; },void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 = VAR_2 ; },"['Insert FieldRead', 'Delete VariableRead']",8228
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 = VAR_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) ) . METHOD_6 ( VAR_5 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( METHOD_5 ( ) ) . METHOD_6 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8229
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },public void METHOD_1 ( ) { VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8232
public java.util.Set < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashSet < > ( ) ; } return VAR_1 ; },public java.util.Set < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8233
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",8234
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = METHOD_4 ( VAR_4 ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( VAR_3 ) ; METHOD_2 ( VAR_2 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_5 ( METHOD_4 ( VAR_4 ) ) ; METHOD_6 ( METHOD_4 ( VAR_4 ) ) ; },"['Insert Invocation', 'Insert Invocation', 'Insert Invocation', 'Move Invocation', 'Insert TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation']",8237
"public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_1 = true ; VAR_2 = false ; VAR_3 . METHOD_2 ( 0 ) ; METHOD_3 ( ) ; }","public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { VAR_3 . METHOD_2 ( 0 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",8239
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8240
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) . height = TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) . VAR_4 = TYPE_2 . METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8241
protected void METHOD_1 ( java.lang.Void result ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } },protected void METHOD_1 ( java.lang.Void result ) { },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8242
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) VAR_1 . show ( ) ; VAR_2 = false ; },public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) VAR_1 . show ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8243
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 . METHOD_2 ( ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; this . VAR_2 = VAR_2 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Insert FieldRead']",8246
void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; },void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8248
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_2 . start ( ) ; VAR_3 = true ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_2 . start ( ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8249
public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; VAR_3 = true ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8250
public void METHOD_1 ( ) { VAR_1 = null ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; VAR_3 = null ; METHOD_3 ( VAR_4 ) ; } },public void METHOD_1 ( ) { VAR_1 = null ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",8251
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { synchronized ( VAR_3 ) { if ( VAR_1 != null ) { VAR_4 = VAR_1 ; VAR_5 = true ; } if ( VAR_2 != null ) { VAR_6 = VAR_2 ; } } }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { synchronized ( VAR_3 ) { if ( VAR_1 != null ) { VAR_4 = VAR_1 ; } if ( VAR_2 != null ) { VAR_6 = VAR_2 ; } } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8253
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = VAR_1 ; METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 = null ; METHOD_2 ( ) ; },"['Insert Literal', 'Delete FieldRead']",8254
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 = false ; return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = false ; TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; return true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8255
"public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_2 ) ; } }",public void METHOD_1 ( int VAR_1 ) { },"['Delete FieldRead', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",8256
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) . METHOD_2 ( false ) . METHOD_3 ( METHOD_4 ( ) ) . build ( ) ; VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; },public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) . METHOD_2 ( false ) . METHOD_3 ( METHOD_4 ( ) ) . build ( ) ; return new TYPE_1 ( VAR_1 ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8257
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; this . VAR_3 = VAR_1 . METHOD_2 ( ) ; this . VAR_4 = true ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . add ( VAR_1 ) ; this . VAR_4 = true ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8258
"public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { VAR_2 = VAR_3 . replace ( ( ( STRING_1 + VAR_1 ) + STRING_1 ) , value ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { VAR_3 . replace ( ( ( STRING_1 + VAR_1 ) + STRING_1 ) , value ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8259
"public void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = FLOAT_1 ; this . VAR_2 = INT_1 ; this . VAR_3 = FLOAT_2 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = FLOAT_1 ; VAR_2 = INT_1 ; VAR_3 = FLOAT_2 ; this . VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; }","['Insert Assignment', 'Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Insert FieldWrite', 'Move FieldRead', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment']",8260
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 ) ; if ( VAR_1 ) { return ; } VAR_2 . METHOD_3 ( ) . VAR_3 = true ; VAR_4 . METHOD_4 ( CHAR_1 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 ) ; if ( VAR_1 ) { return ; } VAR_4 . METHOD_4 ( CHAR_1 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8261
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( ) ; },public void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8262
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = this ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Assignment']",8263
public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_2 = - 1 ; this . VAR_3 = null ; this . VAR_4 = - 1 ; },public void METHOD_1 ( ) { this . VAR_1 = null ; this . VAR_3 = null ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",8264
public void METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( ) ; METHOD_3 ( ) . info ( STRING_1 ) ; },public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) . info ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8265
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } this . VAR_3 = null ; VAR_4 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) ) ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } VAR_4 . METHOD_4 ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8266
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; VAR_2 = TYPE_2 . METHOD_3 ( getActivity ( ) . getIntent ( ) . METHOD_4 ( VAR_3 ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8267
public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 == null ) return this ; this . VAR_2 = VAR_1 * INT_1 ; return this ; },public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 == null ) return this ; this . VAR_1 = VAR_1 ; return this ; },"['Update FieldWrite', 'Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator']",8268
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_2 ( false ) ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; METHOD_2 ( false ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8269
public void select ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_1 ( ) ; this . VAR_3 = VAR_4 ; this . VAR_5 = null ; },public void select ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = TYPE_1 . METHOD_1 ( ) ; this . VAR_3 = VAR_4 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8270
"public TYPE_1 METHOD_1 ( ) { VAR_1 = 1 ; VAR_2 . METHOD_2 ( ) ; VAR_2 = new TYPE_2 ( 1 , VAR_3 . METHOD_3 ( ) ) ; return this ; }",public TYPE_1 METHOD_1 ( ) { VAR_1 = 1 ; return this ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete TypeAccess', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",8271
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) == 0 ) { return null ; } ( size ) -- ; return VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; },public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) == 0 ) { return null ; } return VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",8272
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_1 ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_1 ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8273
public void show ( boolean VAR_1 ) { if ( VAR_2 ) return ; METHOD_1 ( ) ; VAR_2 = true ; VAR_3 = VAR_1 ; VAR_4 = false ; VAR_5 = VAR_6 ; },public void show ( boolean VAR_1 ) { if ( VAR_2 ) return ; METHOD_1 ( ) ; VAR_2 = true ; VAR_3 = VAR_1 ; VAR_5 = VAR_6 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8274
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",8275
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; t = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8276
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == false ) { VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_2 = true ; } else { VAR_4 . METHOD_3 ( true ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( ) ; },"['Insert LocalVariable', 'Insert Invocation', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Block', 'Delete If']",8277
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) + 1 ) == ( VAR_4 . size ( ) ) ) VAR_3 = 0 ; else ( VAR_3 ) ++ ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",8279
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } super . METHOD_1 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8280
"public void METHOD_1 ( java.util.Map VAR_1 , TYPE_1 context , TYPE_2 VAR_2 ) { VAR_3 = VAR_2 ; TYPE_3 . METHOD_2 ( ) . METHOD_3 ( context ) ; VAR_4 = new TYPE_4 ( context . METHOD_4 ( ) ) ; }","public void METHOD_1 ( java.util.Map VAR_1 , TYPE_1 context , TYPE_2 VAR_2 ) { VAR_3 = VAR_2 ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment']",8281
public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 = value ; this . VAR_2 = STRING_1 ; this . VAR_3 = VAR_4 ; },public void METHOD_1 ( TYPE_1 value ) { this . VAR_2 = STRING_1 ; this . VAR_3 = VAR_4 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8282
"public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = TYPE_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_6 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_7 . METHOD_4 ( VAR_3 . METHOD_6 ( ) ) ; }","public void METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 ) { VAR_4 . METHOD_3 ( VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",8283
"private void METHOD_1 ( java.lang.String name ) { VAR_1 = false ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , name ) ; METHOD_3 ( intent ) ; }","private void METHOD_1 ( java.lang.String name ) { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_2 ( STRING_1 , name ) ; METHOD_3 ( intent ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8284
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = 0 ; VAR_4 = STRING_1 ; synchronized ( VAR_5 ) { view . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; VAR_3 = 0 ; synchronized ( VAR_5 ) { view . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8285
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; intent = new android.content.Intent ( this , VAR_5 class ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",8286
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; sum = 0 ; },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8287
"public void METHOD_1 ( ) { status = VAR_1 ; METHOD_2 ( VAR_2 , false ) ; }",public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8288
public void start ( ) { VAR_1 = false ; METHOD_1 ( ) ; },public void start ( ) { METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8289
"public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , android.content.Context context ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_3 = context ; return VAR_2 ; }",public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new TYPE_1 ( VAR_1 ) ; return VAR_2 ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8290
"public boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getString ( VAR_1 ) , getString ( VAR_2 ) , getString ( VAR_3 ) ) ; VAR_4 = false ; VAR_5 = null ; METHOD_3 ( ) ; return false ; }","public boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getString ( VAR_1 ) , getString ( VAR_2 ) , getString ( VAR_3 ) ) ; VAR_4 = false ; METHOD_3 ( ) ; return false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8291
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { VAR_2 = true ; METHOD_2 ( ) ; } else { VAR_2 = false ; METHOD_3 ( ) ; } METHOD_4 ( ) ; },public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { } METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block']",8292
"private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( TYPE_1 item : VAR_2 ) { VAR_3 . METHOD_3 ( METHOD_4 ( item , VAR_4 ) ) ; } }","private void METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > list = TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( TYPE_1 item : list ) { VAR_3 . METHOD_3 ( METHOD_4 ( item , VAR_4 ) ) ; } }","['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Insert TypeReference', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",8293
"public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { this . VAR_3 = VAR_3 ; if ( VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; } else { METHOD_1 ( VAR_1 , VAR_2 ) ; } this . VAR_3 = false ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { if ( VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; } else { METHOD_1 ( VAR_1 , VAR_2 ) ; } }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8294
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_1 ) ; VAR_2 = null ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8295
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) return null ; VAR_3 [ VAR_4 . x ] [ VAR_4 . y ] [ VAR_5 ] = VAR_6 ; return VAR_2 ; },public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) return null ; VAR_3 [ VAR_4 . x ] [ VAR_4 . y ] [ VAR_5 ] = null ; return VAR_2 ; },"['Insert Literal', 'Delete FieldRead']",8296
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; for ( TYPE_3 t : VAR_2 . METHOD_3 ( ) ) t . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; for ( TYPE_3 t : VAR_2 . METHOD_3 ( ) ) t . METHOD_4 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8298
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_2 ) { ++ ( VAR_3 ) ; METHOD_2 ( VAR_4 ) ; METHOD_3 ( METHOD_4 ( VAR_4 ) ) ; } } },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_4 ) ; METHOD_3 ( METHOD_4 ( VAR_4 ) ) ; } } },"['Delete FieldWrite', 'Delete UnaryOperator']",8299
public void METHOD_1 ( ) { VAR_1 = false ; if ( ! ( ( ( VAR_2 ) || ( VAR_3 ) ) || ( isEmpty ) ) ) { isEmpty = true ; } },public void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8300
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == null ) this . VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; return VAR_3 . remove ( METHOD_2 ( VAR_1 ) ) ; },public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . remove ( METHOD_2 ( VAR_1 ) ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8301
private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_2 = false ; VAR_3 . setText ( STRING_1 ) ; VAR_4 = false ; VAR_5 . setEnabled ( false ) ; VAR_6 . setText ( STRING_2 ) ; },private void METHOD_1 ( ) { VAR_1 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_6 . setText ( STRING_2 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8302
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_5 , VAR_5 ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( this ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_5 , VAR_5 ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; }","['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8303
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( this ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( ) ; },"['Insert Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment']",8304
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return ( VAR_2 ) || ( METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ) ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) || ( METHOD_4 ( VAR_1 . METHOD_3 ( ) ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8305
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = new TYPE_1 ( this ) ; VAR_3 . execute ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( this ) . execute ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8308
public void METHOD_1 ( java.lang.Integer count ) { VAR_1 = count ; METHOD_2 ( count ) ; },public void METHOD_1 ( java.lang.Integer count ) { METHOD_2 ( ( count > 1 ) ) ; },"['Insert BinaryOperator', 'Move VariableRead', 'Insert Literal', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8309
public void METHOD_1 ( final int VAR_1 ) { this . VAR_2 = false ; this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_5 = - 1 ; },public void METHOD_1 ( final int VAR_1 ) { this . VAR_3 . METHOD_2 ( ) ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_5 = - 1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8310
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } VAR_3 = false ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } else { VAR_2 . METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",8311
"public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; VAR_2 = 0 ; return new TYPE_1 ( 0 , 0 , TYPE_2 . METHOD_2 ( ) , 0 , VAR_3 , VAR_4 , null ) ; }","public TYPE_1 METHOD_1 ( ) { VAR_1 = false ; return new TYPE_1 ( 0 , 0 , TYPE_2 . METHOD_2 ( ) , 0 , VAR_3 , VAR_4 , null ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8312
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 . METHOD_4 ( VAR_4 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 . METHOD_4 ( VAR_4 ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8314
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; METHOD_2 ( true ) ; VAR_6 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = VAR_3 ; METHOD_2 ( true ) ; VAR_6 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8315
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = null ; METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8317
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = STRING_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8318
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( ( VAR_2 ) - 1 ) + ( VAR_3 . length ) ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = ( ( VAR_2 ) - 1 ) % ( VAR_3 . length ) ; METHOD_2 ( ) ; },"['Update BinaryOperator', 'Move BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",8319
public int METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { METHOD_2 ( ) ; } if ( ( VAR_1 ) <= 0 ) { VAR_1 = INT_1 ; } return VAR_1 ; },public int METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { METHOD_2 ( ) ; } return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8320
void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; },void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8321
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8322
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8323
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . build ( VAR_3 , VAR_4 ) ; VAR_5 = true ; } }","public void METHOD_1 ( ) { VAR_2 . build ( VAR_3 , VAR_4 ) ; }","['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8324
"public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = STRING_1 ; android.content.Intent VAR_2 = new android.content.Intent ( ) ; VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { android.content.Intent VAR_2 = new android.content.Intent ( ) ; VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8325
void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { if ( ( VAR_2 . remove ( VAR_1 ) ) && ( VAR_2 . isEmpty ( ) ) ) { VAR_3 = null ; } },void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . remove ( VAR_1 ) ; },"['Move Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8327
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; },public void METHOD_1 ( ) { METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",8328
public void METHOD_1 ( double VAR_1 ) { if ( VAR_1 < 0 ) this . VAR_1 = 0 ; else if ( VAR_1 > INT_1 ) this . VAR_1 = INT_1 ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( double VAR_1 ) { if ( ( VAR_1 > 0 ) && ( VAR_1 <= INT_1 ) ) { this . VAR_1 = VAR_1 ; } },"['Move If', 'Insert BinaryOperator', 'Update BinaryOperator', 'Move BinaryOperator', 'Update BinaryOperator', 'Move BinaryOperator', 'Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",8329
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If']",8330
"public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( ( ( x ) - 1 ) + ( VAR_1 ) ) % ( VAR_1 ) ) , y , VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( ) { x = ( ( ( x ) - 1 ) + ( VAR_1 ) ) % ( VAR_1 ) ; },"['Update TypeReference', 'Insert Assignment', 'Insert FieldWrite', 'Move BinaryOperator', 'Delete FieldRead', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Return']",8331
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; VAR_3 = false ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8332
"public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( STRING_1 . equals ( VAR_1 ) ) VAR_3 = VAR_2 ; else VAR_4 = VAR_2 ; }","public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_2 ; }","['Move Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Block', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8333
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = ( ( VAR_3 . getName ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_2 ( ) ) ; VAR_4 = VAR_1 . METHOD_3 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = ( ( VAR_3 . getName ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8334
"public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 class ) ; VAR_5 = TYPE_1 . METHOD_2 ( VAR_6 class ) ; VAR_7 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_5 ) ; }","public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) ; VAR_7 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_5 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8337
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8339
private float METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 . length ) ) { VAR_3 = true ; return - 1 ; } return VAR_4 [ ( ( VAR_1 ) ++ ) ] ; },private float METHOD_1 ( ) { return VAR_4 [ ( ( VAR_1 ) ++ ) ] ; },"['Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Literal', 'Delete UnaryOperator', 'Delete Return', 'Delete Block', 'Delete If']",8340
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; } this . VAR_2 . METHOD_3 ( ) ; },public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; this . VAR_1 = null ; } this . VAR_2 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Insert Literal', 'Insert ThisAccess']",8341
"public void METHOD_1 ( ) { int VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = VAR_1 ; if ( ( VAR_5 ) != null ) VAR_5 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( ) ; }","public void METHOD_1 ( ) { int VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; }","['Move Invocation', 'Move VariableRead', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete If']",8342
public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; },public void METHOD_1 ( ) { VAR_2 . METHOD_1 ( ) ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; VAR_6 = null ; VAR_7 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8344
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ! ( METHOD_2 ( VAR_2 ) ) ; } return VAR_1 ; },public boolean METHOD_1 ( ) { return ! ( METHOD_2 ( VAR_2 ) ) ; },"['Move UnaryOperator', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",8345
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8346
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; METHOD_5 ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8347
public void error ( java.lang.String message ) { VAR_1 = VAR_2 ; this . message = message ; url = TYPE_1 . METHOD_1 ( message ) ; METHOD_2 ( ) ; },public void error ( java.lang.String message ) { VAR_1 = VAR_2 ; this . message = message ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8348
"public java.lang.String METHOD_1 ( ) throws java.io.IOException , TYPE_1 , TYPE_2 , TYPE_3 , TYPE_4 { VAR_1 . METHOD_2 ( ) ; VAR_2 = true ; return STRING_1 ; }","public java.lang.String METHOD_1 ( ) throws java.io.IOException , TYPE_1 , TYPE_2 , TYPE_3 , TYPE_4 { VAR_1 . METHOD_2 ( ) ; return STRING_1 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8349
private boolean METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = TYPE_2 . METHOD_4 ( STRING_1 ) ; VAR_4 = VAR_1 . METHOD_5 ( ) ; return ( VAR_4 ) != null ; },private boolean METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_5 ( ) ; return ( VAR_4 ) != null ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8350
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . get ( 0 ) ; } return VAR_1 ; },public TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",8351
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } VAR_6 = true ; METHOD_2 ( true ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } METHOD_2 ( true ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8352
"private void METHOD_1 ( TYPE_1 show , TYPE_2 VAR_1 ) { VAR_2 = true ; if ( VAR_3 . METHOD_2 ( VAR_1 ) ) VAR_4 . add ( show ) ; else VAR_5 . add ( show ) ; }","private void METHOD_1 ( TYPE_1 show , TYPE_2 VAR_1 ) { if ( VAR_3 . METHOD_2 ( VAR_1 ) ) VAR_4 . add ( show ) ; else VAR_5 . add ( show ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8353
"private TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 . add ( new TYPE_2 ( STRING_1 , null ) ) ; return VAR_1 ; }","private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 . add ( new TYPE_2 ( STRING_1 , null ) ) ; return VAR_1 ; }","['Insert LocalVariable', 'Insert Wra', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8354
"public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_2 ) ; VAR_3 = true ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8356
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 != null ) { this . VAR_2 = VAR_3 . getId ( ) ; } else { this . VAR_2 = null ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 != null ) { this . VAR_2 = VAR_3 . getId ( ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",8357
"public void METHOD_1 ( double VAR_1 , double height ) { VAR_2 . data = null ; VAR_3 . METHOD_2 ( VAR_4 , VAR_5 . METHOD_3 ( ) , VAR_6 . METHOD_3 ( ) , false ) ; }","public void METHOD_1 ( double VAR_1 , double height ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_5 . METHOD_3 ( ) , VAR_6 . METHOD_3 ( ) , false ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8359
public TYPE_1 METHOD_1 ( ) { try { VAR_1 = true ; return VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } finally { VAR_1 = false ; } },public TYPE_1 METHOD_1 ( ) { try { return VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { return null ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8360
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } VAR_3 = VAR_1 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8361
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = true ; VAR_3 = new TYPE_1 ( VAR_4 . getContext ( ) , VAR_1 ) ; VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; VAR_3 . METHOD_4 ( ) ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 = new TYPE_1 ( VAR_4 . getContext ( ) , VAR_1 ) ; VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; VAR_3 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8362
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . open ( ) ; VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 ) ; VAR_8 = VAR_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_3 . open ( ) ; VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 ) ; }","['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8363
"protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , 0 , ( - ( VAR_4 . METHOD_3 ( ) ) ) , 0 , VAR_5 ) ; METHOD_4 ( ) ; VAR_6 = VAR_7 ; }","protected void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , 0 , ( - ( VAR_4 . METHOD_3 ( ) ) ) , 0 , VAR_5 ) ; METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8364
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_4 ; VAR_1 . METHOD_2 ( VAR_5 . METHOD_3 ( ) , VAR_5 . METHOD_4 ( ) , VAR_5 . METHOD_5 ( ) , VAR_2 , VAR_3 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_1 . METHOD_2 ( VAR_5 . METHOD_3 ( ) , VAR_5 . METHOD_4 ( ) , VAR_5 . METHOD_5 ( ) , VAR_2 , VAR_3 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8365
public void handle ( TYPE_1 event ) { if ( first ) { first = false ; METHOD_1 ( ) ; } METHOD_2 ( ) ; },public void handle ( TYPE_1 event ) { METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",8366
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_2 ; if ( VAR_2 ) { VAR_4 . start ( ) ; } else { TYPE_2 . METHOD_2 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { VAR_4 . start ( ) ; } else { TYPE_2 . METHOD_2 ( ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8368
private void METHOD_1 ( ) { VAR_1 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_2 = new java.util.LinkedList < TYPE_1 > ( ) ; VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8369
"protected TYPE_1 METHOD_1 ( ) { VAR_1 = VAR_2 ; return new TYPE_1 ( this , VAR_2 ) ; }","protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this , VAR_2 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8371
public void METHOD_1 ( int a ) { VAR_1 = a ; if ( ( VAR_1 ) < 1 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = 1 ; } },public void METHOD_1 ( int a ) { VAR_1 = a ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8373
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 = VAR_1 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8374
"public void start ( ) { VAR_1 . start ( ) ; setState ( VAR_2 ) ; TYPE_1 . METHOD_1 ( STRING_1 , ( STRING_2 + ( METHOD_2 ( ) ) ) ) ; }","public void start ( ) { VAR_1 . start ( ) ; state = VAR_2 ; TYPE_1 . METHOD_1 ( STRING_1 , ( STRING_2 + ( METHOD_2 ( ) ) ) ) ; }","['Insert Assignment', 'Insert FieldWrite', 'Insert FieldRead', 'Delete TypeAccess', 'Delete Invocation']",8375
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; } METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 = true ; VAR_4 = true ; METHOD_4 ( VAR_5 ) ; },public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; } METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 = true ; METHOD_4 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8376
public int METHOD_1 ( ) { VAR_1 = VAR_2 . getConfig ( ) ; return VAR_3 . getInt ( ( ( STRING_1 + ( key ) ) + STRING_2 ) ) ; },public int METHOD_1 ( ) { return VAR_3 . getInt ( ( ( STRING_1 + ( key ) ) + STRING_2 ) ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8377
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8378
public boolean METHOD_1 ( ) { return ( ( ( VAR_1 [ 0 ] ) != null ) || ( ( VAR_2 ) != null ) ) || ( ( VAR_2 = VAR_3 . METHOD_2 ( ) ) != null ) ; },public boolean METHOD_1 ( ) { return ( ( VAR_1 [ 0 ] ) != null ) || ( ( VAR_3 . METHOD_2 ( ) ) != null ) ; },"['Move BinaryOperator', 'Move Invocation', 'Move Literal', 'Delete FieldRead', 'Delete Literal', 'Delete FieldWrite', 'Delete Assignment', 'Delete BinaryOperator', 'Delete BinaryOperator']",8379
public static void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_5 = new TYPE_1 ( VAR_6 ) ; VAR_7 = new TYPE_1 ( VAR_8 ) ; VAR_9 = new TYPE_1 ( VAR_10 ) ; },public void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_5 = new TYPE_1 ( VAR_6 ) ; VAR_7 = new TYPE_1 ( VAR_8 ) ; },"['Delete Wra', 'Delete FieldWrite', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment']",8380
public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } VAR_3 = true ; },public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8381
public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = null ; },public void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8382
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 += VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 ) ; this . VAR_4 = ( ( int ) ( VAR_3 . METHOD_3 ( ) ) ) ; return this ; },public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 += VAR_1 ; return this ; },"['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8383
"public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; if ( VAR_4 ) { VAR_5 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_6 ) ) ) ; VAR_7 . setText ( METHOD_3 ( ) ) ; } METHOD_4 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = false ; METHOD_4 ( ) ; }","['Delete FieldRead', 'Delete FieldWrite', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Block', 'Delete If']",8385
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this , 1 ) ; METHOD_3 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete Literal', 'Delete ConstructorCall', 'Delete Assignment']",8386
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; if ( VAR_1 ) { VAR_3 . METHOD_2 ( ) ; } else { METHOD_3 ( VAR_3 ) ; } },public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_3 . METHOD_2 ( ) ; } else { METHOD_3 ( VAR_3 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8387
public void METHOD_1 ( ) { java.lang.Thread . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 = true ; },public void METHOD_1 ( ) { java.lang.Thread . METHOD_2 ( ) . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8388
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( this . VAR_2 ) == null ) { this . VAR_2 = new java.util.HashSet < > ( ) ; } this . VAR_3 . add ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 . add ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8389
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( VAR_2 ) { VAR_3 = false ; METHOD_3 ( false ) ; } else { VAR_3 = true ; METHOD_4 ( 0 ) ; } },protected void METHOD_1 ( ) { if ( VAR_2 ) { METHOD_3 ( false ) ; } else { METHOD_4 ( 0 ) ; } },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8390
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 = false ; VAR_3 = ( ( VAR_3 ) + 1 ) % ( VAR_4 . length ) ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_3 = ( ( VAR_3 ) + 1 ) % ( VAR_4 . length ) ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8391
static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) . getConfig ( ) ; if ( VAR_3 . getBoolean ( STRING_2 ) ) { } },static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_3 . getBoolean ( STRING_2 ) ) { } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8392
protected java.util.List < ? extends TYPE_1 > METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } return this . VAR_1 ; },protected java.util.List < ? extends TYPE_1 > METHOD_1 ( ) { return VAR_1 ; },"['Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete ThisAccess']",8394
"private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { VAR_3 = VAR_2 ; VAR_4 = height ; VAR_1 . METHOD_2 ( 0 , 0 , VAR_2 , height ) ; }","private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int height ) { }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete Literal', 'Delete VariableRead', 'Delete VariableRead', 'Delete Invocation']",8395
public void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 . info ( STRING_1 ) ; VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_1 ( ) ; } finally { METHOD_3 ( ) ; } },public void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 . info ( STRING_1 ) ; VAR_4 . METHOD_1 ( ) ; } finally { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8396
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_2 = true ; },public void METHOD_1 ( ) { METHOD_3 ( VAR_1 ) ; },"['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8397
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) { this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { this . VAR_5 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8401
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; assertNotNull ( VAR_2 ) ; },public void METHOD_1 ( ) { assertNotNull ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",8402
public void METHOD_1 ( TYPE_1 event ) { ( count ) ++ ; java.lang.System.out.println ( VAR_1 . toString ( ) ) ; },public void METHOD_1 ( TYPE_1 event ) { java.lang.System.out.println ( VAR_1 . toString ( ) ) ; },"['Delete FieldWrite', 'Delete UnaryOperator']",8403
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; update ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { update ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8404
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( 0 ) ; VAR_2 = VAR_3 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( null ) ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( 0 ) ; VAR_1 . METHOD_5 ( null ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8405
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 && ( ! ( METHOD_2 ( ) ) ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_3 ( VAR_1 ) ; },"['Move VariableRead', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator']",8407
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( context , VAR_3 , STRING_2 ) ; VAR_4 = false ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( context , VAR_3 , STRING_2 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8408
private void METHOD_1 ( int VAR_1 ) { VAR_2 += ( VAR_3 ) * VAR_1 ; VAR_2 = ( VAR_2 ) % INT_1 ; METHOD_2 ( ) ; },private void METHOD_1 ( int VAR_1 ) { VAR_2 += ( VAR_3 ) * VAR_1 ; METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Assignment']",8409
"public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 , name , VAR_3 , VAR_4 ) ; METHOD_2 ( ) ; VAR_2 = STRING_1 ; name = STRING_1 ; VAR_3 = STRING_1 ; VAR_4 = STRING_1 ; return STRING_2 ; }","public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 , name , VAR_3 , VAR_4 ) ; METHOD_2 ( ) ; return STRING_2 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8410
public void update ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; VAR_4 = TYPE_1 . METHOD_1 ( ) ; VAR_5 = TYPE_1 . METHOD_2 ( ) ; },public void update ( ) { VAR_1 = VAR_2 . get ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8411
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; VAR_3 = true ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8412
"public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( true , false ) ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_3 ( ) ; } } }",public synchronized void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_3 ( ) ; } } },"['Insert Wra', 'Insert FieldRead', 'Insert Assignment', 'Insert FieldWrite', 'Move Literal', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation']",8413
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Update FieldWrite', 'Insert ThisAccess']",8414
"public static void end ( ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; }","public static void end ( ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8415
"public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 . METHOD_2 ( ) ; assertNotNull ( STRING_1 , VAR_10 ) ; assertNotNull ( STRING_2 , VAR_11 ) ; }","public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_9 . METHOD_2 ( ) ; assertNotNull ( STRING_1 , VAR_10 ) ; assertNotNull ( STRING_2 , VAR_11 ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8416
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8417
public int METHOD_1 ( ) { VAR_1 = 0 ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_4 ) > ( VAR_5 ) ) { ( VAR_1 ) ++ ; } } return VAR_1 ; },public int METHOD_1 ( ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_4 ) > ( VAR_5 ) ) { ( VAR_1 ) ++ ; } } return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8418
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 + ( VAR_2 ) ) < ( VAR_3 ) ) { VAR_2 = ( VAR_2 ) + VAR_1 ; } },public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 + ( this . VAR_2 ) ) < ( VAR_3 ) ) { this . VAR_2 = ( this . VAR_2 ) + VAR_1 ; } },"['Insert ThisAccess', 'Insert ThisAccess', 'Insert ThisAccess']",8419
public void put ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_2 = VAR_1 ; },public void put ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_1 ( VAR_1 ) ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete Assignment']",8420
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , 0 ) ; VAR_2 . i ( STRING_2 , STRING_3 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . i ( STRING_2 , STRING_3 ) ; }","['Delete FieldWrite', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete Assignment']",8421
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 = METHOD_4 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",8422
public void METHOD_1 ( boolean b ) { VAR_1 = b ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; VAR_2 = 0 ; } },public void METHOD_1 ( boolean b ) { VAR_1 = b ; if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8423
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8424
"public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 view ) { ( VAR_3 ) ++ ; VAR_4 = query ; METHOD_2 ( ) ; }","public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 view ) { ( VAR_3 ) ++ ; METHOD_2 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8426
"public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_3 , VAR_2 ) ; } VAR_4 = VAR_2 ; }","public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( ( listener ) != null ) { listener . METHOD_2 ( VAR_3 , VAR_2 ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8427
"public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , java.util.Map < java.lang.String , java.lang.Double > parameters ) throws java.lang.Exception { super . init ( VAR_1 , VAR_2 , VAR_3 , parameters ) ; this . VAR_4 = VAR_1 ; }","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , java.util.Map < java.lang.String , java.lang.Double > parameters ) throws java.lang.Exception { super . init ( VAR_1 , VAR_2 , VAR_3 , parameters ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8428
protected void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; },protected void METHOD_1 ( ) { VAR_1 = false ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8429
void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; },void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8430
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 != null ) this . VAR_1 = VAR_1 ; else this . VAR_1 = false ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete Block', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8431
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 = - 1 ; VAR_1 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_4 ( ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation']",8433
"public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( VAR_3 . METHOD_2 ( ) , VAR_1 ) ) ; VAR_1 = 0 ; } }","public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 . add ( new TYPE_1 ( VAR_3 . METHOD_2 ( ) , VAR_1 ) ) ; } }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8434
public void setText ( java.lang.CharSequence text ) { VAR_1 = text ; if ( ( VAR_2 ) != null ) { VAR_3 . setText ( text ) ; } },public void setText ( java.lang.CharSequence text ) { if ( ( VAR_2 ) != null ) { VAR_3 . setText ( text ) ; } },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8435
"public static void init ( int VAR_1 , int height ) { java.lang.System.out.println ( ( ( ( STRING_1 + VAR_1 ) + CHAR_1 ) + height ) ) ; VAR_2 = new TYPE_1 ( VAR_1 , height , VAR_3 ) ; VAR_4 = VAR_1 ; VAR_5 = height ; }","public static void init ( int VAR_1 , int height ) { java.lang.System.out.println ( ( ( ( STRING_1 + VAR_1 ) + CHAR_1 ) + height ) ) ; VAR_2 = new TYPE_1 ( VAR_1 , height , VAR_3 ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8436
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { ( VAR_2 ) ++ ; VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete UnaryOperator']",8437
"public void add ( TYPE_1 item , int VAR_1 ) { VAR_2 . put ( item , VAR_1 ) ; VAR_3 = true ; }","public void add ( TYPE_1 item , int VAR_1 ) { VAR_2 . put ( item , VAR_1 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8439
"public void METHOD_1 ( android.view.View VAR_1 , int position ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( position ) ; METHOD_4 ( VAR_4 . getString ( VAR_2 . METHOD_5 ( STRING_1 ) ) ) ; }","public void METHOD_1 ( android.view.View VAR_1 , int position ) { METHOD_4 ( ) ; }","['Insert Invocation', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Invocation']",8440
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 date , boolean VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + date ) ) ; VAR_4 = date ; METHOD_3 ( date ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 date , boolean VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_3 , ( STRING_1 + date ) ) ; METHOD_3 ( date ) ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8441
"public void remove ( int index ) { if ( index == 0 ) { VAR_1 = VAR_2 ; } else { remove ( VAR_1 , index ) ; } }","public void remove ( int index ) { remove ( VAR_1 , index ) ; }","['Move Invocation', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",8442
public void add ( TYPE_1 item ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( item ) ; if ( VAR_3 ) TYPE_2 . METHOD_1 ( ) ; },public void add ( TYPE_1 item ) { if ( ( VAR_1 ) == null ) return ; VAR_2 . add ( item ) ; if ( VAR_3 ) TYPE_2 . METHOD_1 ( ) ; },"['Insert Return', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8443
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_1 ) ; VAR_2 = VAR_3 ; } }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_2 ) ; METHOD_4 ( VAR_1 ) ; } },"['Move Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8444
"private void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; if ( ! ( VAR_3 ) ) { METHOD_2 ( VAR_1 ) ; VAR_3 = true ; } this . METHOD_3 ( ) ; }","private void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( VAR_1 ) ; this . METHOD_3 ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8445
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; } },public void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8447
public void METHOD_1 ( int k ) { if ( k == ( VAR_1 . select ) ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_3 = true ; } },public void METHOD_1 ( int k ) { },"['Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8448
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( this ) ; if ( ! ( VAR_2 ) ) VAR_3 = false ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( this ) ; VAR_3 = false ; } },"['Move If', 'Move BinaryOperator', 'Move Invocation', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If']",8449
public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_2 = ! ( VAR_2 ) ; } else { VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_2 = ! ( VAR_2 ) ; } },public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_2 = ! ( VAR_2 ) ; } else VAR_3 . METHOD_2 ( VAR_5 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Assignment']",8450
"public void METHOD_1 ( java.util.List < java.util.ArrayList > VAR_1 , java.util.ArrayList < TYPE_1 > VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }",public void METHOD_1 ( java.util.List < java.util.ArrayList > VAR_1 ) { VAR_3 = VAR_1 ; },"['Delete TypeReference', 'Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8451
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; VAR_5 = true ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8452
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( null ) ; VAR_1 = false ; return ; } VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_2 . METHOD_3 ( null ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_2 . METHOD_3 ( null ) ; },"['Delete FieldRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Literal', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Return', 'Delete Block', 'Delete If']",8453
"void METHOD_1 ( ) { VAR_1 = false ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , VAR_6 ) ; }","void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , VAR_6 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8454
public TYPE_1 [ ] METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . VAR_3 = STRING_1 ; return VAR_2 ; } return null ; },public TYPE_1 [ ] METHOD_1 ( ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ] { new TYPE_1 ( ) } ; VAR_2 [ 0 ] . VAR_3 = STRING_1 ; return VAR_2 ; },"['Move LocalVariable', 'Move Assignment', 'Move Return', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",8455
public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } this . METHOD_2 ( ) ; VAR_2 = true ; },public void METHOD_1 ( ) { if ( VAR_1 ) { return ; } this . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8456
"public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new TYPE_1 ( VAR_2 , VAR_2 ) ; return VAR_1 ; }",public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8458
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; new TYPE_2 ( VAR_3 , VAR_4 ) . start ( ) ; }","['Insert Invocation', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",8459
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = ( ( TYPE_2 ) ( getView ( ) . METHOD_2 ( VAR_3 ) ) ) ; new TYPE_3 ( ) . execute ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeReference', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation']",8461
"public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8462
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( 1 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) , METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; VAR_3 = true ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( 1 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) , METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8463
"public abstract void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 ;","public void init ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete Wra']",8464
private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } catch ( java.lang.Exception VAR_2 ) { } },private void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_2 ) { } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8465
public void METHOD_1 ( java.lang.String path ) { VAR_1 = false ; VAR_2 . METHOD_1 ( ) ; },public void METHOD_1 ( java.lang.String path ) { VAR_2 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8467
"public boolean METHOD_1 ( java.lang.String filename ) throws TYPE_1 , TYPE_2 , TYPE_3 { this . VAR_1 = TYPE_4 . METHOD_2 ( filename ) ; this . VAR_2 = TYPE_4 . METHOD_3 ( filename ) ; return true ; }","public boolean METHOD_1 ( java.lang.String filename ) throws TYPE_1 , TYPE_2 , TYPE_3 { this . VAR_1 = TYPE_4 . METHOD_2 ( filename ) ; return true ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8468
public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = METHOD_2 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.Integer VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move VariableRead', 'Delete Invocation']",8469
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . show ( VAR_1 , STRING_1 ) ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_3 . show ( METHOD_2 ( ) , STRING_1 ) ; }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess']",8470
"public java.lang.String METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) this . VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , true ) ; return VAR_1 ; }","public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , true ) ; }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",8472
public void METHOD_1 ( TYPE_1 b ) { METHOD_2 ( VAR_1 ) ; VAR_2 = b ; t = new java.lang.Thread ( VAR_2 ) ; VAR_3 . start ( ) ; },public void METHOD_1 ( TYPE_1 b ) { METHOD_2 ( VAR_1 ) ; VAR_2 = b ; new java.lang.Thread ( VAR_2 ) . start ( ) ; },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8473
"public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; this . VAR_1 . METHOD_3 ( true ) ; this . VAR_1 = null ; } super . METHOD_4 ( ) ; }","public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; this . VAR_1 . METHOD_3 ( true ) ; } super . METHOD_4 ( ) ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8474
"public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { this . VAR_3 = VAR_4 ; METHOD_3 ( ) ; METHOD_4 ( ) ; } else throw new TYPE_2 ( STRING_2 ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; if ( ( VAR_2 ) != null ) { VAR_3 = VAR_4 ; VAR_2 . METHOD_1 ( ) ; } else throw new TYPE_2 ( STRING_2 ) ; }","['Update Invocation', 'Delete ThisAccess', 'Delete Invocation']",8475
"public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object VAR_2 ) { VAR_3 = ( ( TYPE_2 ) ( VAR_2 ) ) ; super . METHOD_1 ( VAR_1 , position , VAR_2 ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , int position , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , position , VAR_2 ) ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete VariableRead', 'Delete Assignment']",8476
public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = true ; VAR_3 . add ( null ) ; VAR_4 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { VAR_1 = true ; VAR_3 . add ( null ) ; VAR_4 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8477
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = new java.util.ArrayList < > ( ) ; return VAR_1 ; },public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return new java.util.ArrayList < > ( ) ; return VAR_1 ; },"['Insert Return', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",8478
public void METHOD_1 ( int VAR_1 ) { this . label = VAR_1 ; this . VAR_2 = false ; },public void METHOD_1 ( int VAR_1 ) { this . label = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8480
"public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 , true ) ; VAR_2 . METHOD_3 ( ) ; if ( ! ( VAR_2 . METHOD_4 ( ) ) ) { VAR_3 . METHOD_5 ( ) ; } }","public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 , true ) ; VAR_2 . METHOD_3 ( ) ; if ( ! ( VAR_2 . METHOD_4 ( ) ) ) { ( VAR_3 ) -- ; } }","['Insert UnaryOperator', 'Insert FieldWrite', 'Delete TypeAccess', 'Delete Invocation']",8481
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_2 . equals ( VAR_3 ) ) ) ) { VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( VAR_1 ) ; VAR_3 = VAR_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { VAR_4 = new TYPE_1 ( ) ; VAR_5 . execute ( VAR_1 ) ; } },"['Move BinaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8482
public void init ( ) { this . VAR_1 = this . VAR_2 . getConfig ( ) ; this . view = new TYPE_1 ( ) ; VAR_3 . init ( ) ; this . VAR_4 . METHOD_1 ( this . view ) ; },public void init ( ) { this . VAR_1 = this . VAR_2 . getConfig ( ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ThisAccess', 'Delete FieldRead', 'Delete Invocation']",8483
"public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( null , null , null , null ) ; VAR_3 . METHOD_3 ( ( ( float ) ( FLOAT_1 ) ) ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = STRING_1 ; }","public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( null , null , null , null ) ; VAR_3 . METHOD_3 ( ( ( float ) ( FLOAT_1 ) ) ) ; VAR_4 . METHOD_4 ( ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8484
public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( ) ; } VAR_2 . METHOD_2 ( VAR_1 ) ; },public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } VAR_2 . METHOD_2 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8485
"public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( this , VAR_3 ) ; VAR_2 . METHOD_3 ( getIntent ( ) , this ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation']",8486
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 = false ; },public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8487
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { this . METHOD_2 ( null ) ; this . VAR_2 = null ; } else { VAR_2 = VAR_1 ; this . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { this . METHOD_2 ( null ) ; } else { VAR_2 = VAR_1 ; this . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8488
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; VAR_3 = false ; },protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 = true ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8489
"public void METHOD_1 ( double VAR_1 ) { put ( STRING_1 , VAR_1 ) ; }",public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",8490
TYPE_1 METHOD_1 ( ) { VAR_1 = null ; main . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; return this ; },void METHOD_1 ( ) { main . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete Return']",8491
"public void METHOD_1 ( float x , float y ) { this . x = x ; this . y = y ; this . VAR_1 = 0 ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; }","public void METHOD_1 ( float x , float y ) { this . x = x ; this . y = y ; this . VAR_1 = 0 ; this . VAR_2 = 0 ; }","['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8492
"public void add ( int index , TYPE_1 VAR_1 ) { this . VAR_2 = this . VAR_3 . METHOD_1 ( VAR_1 ) ; if ( this . VAR_2 ) { this . VAR_4 . add ( index , VAR_1 ) ; } }","public void add ( int index , TYPE_1 VAR_1 ) { if ( this . VAR_3 . METHOD_1 ( VAR_1 ) ) { this . VAR_4 . add ( index , VAR_1 ) ; } }","['Move Invocation', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldRead']",8493
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8494
final void start ( ) { this . VAR_1 = true ; },final void start ( ) { },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8495
public void init ( ) { VAR_1 = 0 ; },public void init ( ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8496
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . METHOD_2 ( 0 ) ; VAR_7 = VAR_8 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . METHOD_2 ( 0 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8497
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_1 ( listener ) ; this . VAR_2 = true ; },public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_1 ( listener ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8501
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; if ( ( VAR_3 ) == null ) { VAR_3 = VAR_1 ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8502
void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { VAR_2 = false ; VAR_1 = false ; VAR_3 . METHOD_2 ( ) ; } VAR_4 . METHOD_3 ( VAR_5 ) ; },void METHOD_1 ( TYPE_1 event ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8503
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; return VAR_1 ; } else { return VAR_1 ; } },public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return new TYPE_1 ( ) ; } else { return VAR_1 ; } },"['Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8505
public static void main ( final java.lang.String [ ] VAR_1 ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; TYPE_3 . METHOD_1 ( ) ; },public static void main ( final java.lang.String [ ] VAR_1 ) { },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8506
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 1 ) this . VAR_1 = 1 ; else if ( VAR_1 > INT_1 ) this . VAR_1 = INT_1 ; else this . VAR_1 = VAR_1 ; },public void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete VariableRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If', 'Delete Block', 'Delete If']",8507
public java.lang.String METHOD_1 ( ) { TYPE_1 c = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . delete ( c ) ; VAR_4 = null ; return STRING_1 ; },public void METHOD_1 ( ) { TYPE_1 c = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . delete ( c ) ; },"['Update TypeReference', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldRead', 'Delete Return']",8508
public void init ( int VAR_1 ) { startTime = VAR_2 . METHOD_1 ( ) ; VAR_3 = VAR_1 * INT_1 ; },public void init ( int VAR_1 ) { VAR_3 = VAR_1 * INT_1 ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8510
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = getIntent ( ) . METHOD_3 ( ) ; VAR_4 = VAR_3 . METHOD_4 ( STRING_1 ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete TypeReference', 'Delete Invocation', 'Delete Invocation', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8511
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 , true ) ) ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } else { VAR_4 = VAR_1 ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 , true ) ) ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Block']",8512
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new java.util.Random ( ) ; this . VAR_3 = new TYPE_2 < TYPE_3 , TYPE_4 > ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; }","protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = new TYPE_2 < TYPE_3 , TYPE_4 > ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_4 ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete ThisAccess', 'Delete VariableRead', 'Delete Invocation']",8513
private void METHOD_1 ( ) { ( VAR_1 ) ++ ; ( VAR_2 ) -- ; METHOD_2 ( VAR_3 . get ( VAR_2 ) ) ; },private void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete UnaryOperator', 'Delete FieldWrite', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation']",8514
public java.lang.String METHOD_1 ( ) { VAR_1 = null ; METHOD_2 ( ) ; return VAR_2 ; },public java.lang.String METHOD_1 ( ) { return VAR_2 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation']",8515
public static void METHOD_1 ( ) { VAR_1 = STRING_1 ; VAR_2 = 0 ; },public static void METHOD_1 ( ) { VAR_1 = STRING_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8516
public void start ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . start ( ) ; } else { VAR_3 = true ; } },public void start ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . start ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block']",8517
"public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 = intent . METHOD_2 ( STRING_1 ) ; VAR_4 = intent . METHOD_2 ( STRING_2 ) ; VAR_5 = VAR_6 . length ; VAR_7 = true ; return VAR_8 ; }","public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { VAR_3 = intent . METHOD_2 ( STRING_1 ) ; VAR_5 = VAR_6 . length ; return VAR_8 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8518
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_4 . getTime ( ) . getTime ( ) ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = METHOD_2 ( ) ; VAR_10 . METHOD_3 ( VAR_11 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = true ; VAR_3 = VAR_4 . getTime ( ) . getTime ( ) ; VAR_5 = VAR_6 ; VAR_9 = METHOD_2 ( ) ; VAR_10 . METHOD_3 ( VAR_11 ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8519
"public void METHOD_1 ( final float VAR_1 , final float VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; }","public void METHOD_1 ( final float VAR_1 , final float VAR_2 ) { this . VAR_3 = VAR_1 ; this . VAR_4 = VAR_2 ; }","['Insert Assignment', 'Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Insert ThisAccess', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldWrite', 'Delete Assignment']",8520
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) VAR_1 = TYPE_2 . METHOD_2 ( ) ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",8521
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { VAR_2 = VAR_3 . replace ( METHOD_3 ( VAR_1 ) , STRING_1 ) ; METHOD_4 ( ) ; } }","public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { VAR_3 . replace ( METHOD_3 ( VAR_1 ) , STRING_1 ) ; METHOD_4 ( ) ; } }","['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8522
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; VAR_1 = VAR_2 ; synchronized ( VAR_3 ) { for ( TYPE_1 VAR_4 : VAR_3 ) { VAR_4 . METHOD_1 ( ) ; } } },public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; synchronized ( VAR_3 ) { for ( TYPE_1 VAR_4 : VAR_3 ) { VAR_4 . METHOD_1 ( ) ; } } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8523
protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 ) ; VAR_3 = false ; METHOD_3 ( ) ; },protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8524
public void METHOD_1 ( ) { this . VAR_1 = null ; VAR_2 = false ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; VAR_3 = false ; } },public void METHOD_1 ( ) { VAR_2 = false ; if ( VAR_3 ) { VAR_4 . METHOD_2 ( ) ; VAR_3 = false ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8525
public static void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_1 ( ) ; VAR_3 = new java.util.HashMap < > ( ) ; VAR_4 = new java.util.HashMap < > ( ) ; },public static void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_2 = TYPE_1 . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8526
public int METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } return METHOD_3 ( VAR_1 ) ; },public int METHOD_1 ( ) { return METHOD_3 ( VAR_1 ) ; },"['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Block', 'Delete If']",8527
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( true ) ; VAR_3 = false ; METHOD_3 ( ) ; },public void METHOD_1 ( ) { VAR_3 = false ; METHOD_3 ( ) ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Literal', 'Delete Invocation']",8528
protected void execute ( ) { if ( ( ! ( VAR_1 ) ) && ( ( VAR_2 . get ( ) ) >= ( VAR_3 ) ) ) { VAR_4 . METHOD_1 ( VAR_5 ) ; VAR_6 . METHOD_2 ( ) ; VAR_1 = true ; } },protected void execute ( ) { if ( ( ! ( VAR_1 ) ) && ( ( VAR_2 . get ( ) ) >= ( VAR_3 ) ) ) { VAR_4 . METHOD_1 ( VAR_5 ) ; VAR_6 . METHOD_2 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8529
"public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; position . METHOD_2 ( ) ; position . METHOD_3 ( ) ; VAR_5 = new TYPE_3 ( this ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = VAR_1 ; VAR_4 = VAR_2 ; position . METHOD_2 ( ) ; position . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete Assignment']",8530
public TYPE_1 METHOD_1 ( int id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = STRING_3 ; VAR_5 = STRING_4 ; VAR_6 = STRING_5 ; VAR_7 = STRING_6 ; VAR_8 = STRING_7 ; return VAR_1 ; },public TYPE_1 METHOD_1 ( int id ) { return null ; },"['Insert Literal', 'Delete TypeReference', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete VariableRead']",8531
public void METHOD_1 ( long VAR_1 ) { VAR_2 . setText ( ( ( STRING_1 + ( VAR_1 / INT_1 ) ) + STRING_2 ) ) ; VAR_3 = VAR_1 ; },public void METHOD_1 ( long VAR_1 ) { VAR_2 . setText ( ( ( STRING_1 + ( VAR_1 / INT_1 ) ) + STRING_2 ) ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8532
public void METHOD_1 ( TYPE_1 position ) { VAR_1 = VAR_2 ; VAR_3 = VAR_4 ; if ( VAR_5 ) this . METHOD_2 ( position ) ; },public void METHOD_1 ( TYPE_1 position ) { if ( VAR_5 ) this . METHOD_2 ( position ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8533
public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_5 = false ; },public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8534
"public void METHOD_1 ( final byte [ ] VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; new TYPE_2 ( ) . execute ( VAR_1 ) ; }","public void METHOD_1 ( final byte [ ] VAR_1 , TYPE_1 VAR_3 ) { new TYPE_2 ( ) . execute ( VAR_1 ) ; }","['Update Parameter', 'Delete TypeAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8535
"public void METHOD_1 ( java.util.HashMap < java.lang.String , java.lang.String > context ) { this . context = context ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 = 0 ; }","public void METHOD_1 ( java.util.HashMap < java.lang.String , java.lang.String > context ) { this . context = context ; }","['Delete Invocation', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8536
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( true ) ; state = VAR_2 ; VAR_1 . METHOD_1 ( ) ; METHOD_4 ( ) ; } },public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; METHOD_4 ( VAR_2 ) ; } },"['Move Invocation', 'Update Invocation', 'Insert TypeAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Literal', 'Delete Invocation']",8537
"public void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; VAR_2 = false ; if ( ( VAR_3 ) != null ) { VAR_1 . i ( STRING_1 , STRING_3 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } }","public static void METHOD_1 ( ) { VAR_1 . i ( STRING_1 , STRING_2 ) ; if ( ( VAR_3 ) != null ) { VAR_1 . i ( STRING_1 , STRING_3 ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 = null ; } }","['Insert Wra', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8538
public boolean add ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . size ( ) ) >= ( size ) ) { return false ; } else { VAR_3 = VAR_2 . size ( ) ; VAR_2 . add ( VAR_1 ) ; return true ; } },public boolean add ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . size ( ) ) >= ( size ) ) { return false ; } else { VAR_2 . add ( VAR_1 ) ; return true ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8540
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8541
public void METHOD_1 ( ) throws java.io.IOException { if ( null != ( VAR_1 ) ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } },public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; return ; },"['Move Invocation', 'Insert Return', 'Delete Literal', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8542
public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = STRING_2 ; VAR_11 = true ; return VAR_1 ; },public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = STRING_1 ; VAR_3 = STRING_2 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = STRING_2 ; return VAR_1 ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8543
"public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 ) < 0 ) VAR_3 = VAR_1 ; VAR_4 = VAR_1 ; }","public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 ) < 0 ) VAR_3 = VAR_1 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8544
public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_1 ( ) ; },public static void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8545
public void METHOD_1 ( ) { java.io.File file = METHOD_2 ( ) ; if ( file != null ) { TYPE_1 data = METHOD_3 ( file ) ; METHOD_4 ( data ) ; VAR_1 = false ; } },public void METHOD_1 ( ) { java.io.File file = METHOD_2 ( ) ; if ( file != null ) { TYPE_1 data = METHOD_3 ( file ) ; METHOD_4 ( data ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8547
"public < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) == null ) VAR_2 = new java.util.HashMap < > ( ) ; VAR_3 . put ( VAR_4 . getName ( ) , VAR_1 ) ; }","public < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { VAR_3 . put ( VAR_4 . getName ( ) , VAR_1 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Block', 'Delete If']",8548
"public void METHOD_1 ( java.lang.String VAR_1 ) { ( VAR_2 ) ++ ; VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; }","public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; }","['Delete FieldWrite', 'Delete UnaryOperator']",8549
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( getActivity ( ) ) ; VAR_4 = VAR_3 . METHOD_4 ( ) ; VAR_5 = METHOD_5 ( ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = TYPE_3 . METHOD_3 ( getActivity ( ) ) ; VAR_4 = VAR_3 . METHOD_4 ( ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete Assignment']",8550
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( null != VAR_1 ) && ( ( VAR_2 . trim ( ) . length ( ) ) < INT_1 ) ) { this . VAR_1 = STRING_1 ; } else { this . VAR_1 = VAR_1 ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Move Assignment', 'Delete Literal', 'Delete VariableRead', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",8551
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = new TYPE_2 ( STRING_1 ) ; },public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 ) ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Delete FieldWrite', 'Delete Assignment']",8552
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = VAR_3 . get ( 0 ) ; METHOD_2 ( VAR_2 ) ; },public void METHOD_1 ( java.lang.Boolean VAR_1 ) { METHOD_2 ( VAR_3 . get ( 0 ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8553
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) . METHOD_4 ( VAR_1 ) ; },public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) . METHOD_4 ( VAR_1 ) ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8554
"public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = ( ( TYPE_4 ) ( view . METHOD_3 ( VAR_6 ) ) ) ; return view ; }","public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; return view ; }","['Delete FieldWrite', 'Delete TypeReference', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8556
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_2 . METHOD_3 ( ) ; },"['Insert Assignment', 'Insert FieldWrite', 'Move Invocation', 'Delete TypeAccess', 'Delete Invocation']",8557
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; key = STRING_1 ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8559
"public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 ; state = VAR_5 ; TYPE_2 . METHOD_2 ( ) ; }","public void METHOD_1 ( java.lang.String VAR_1 , android.view.View view , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8560
"public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = false ; this . VAR_3 . set ( new TYPE_1 ( 0 , INT_1 ) ) ; }","public void METHOD_1 ( ) { VAR_1 = true ; this . VAR_3 . set ( new TYPE_1 ( 0 , INT_1 ) ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8561
"public void METHOD_1 ( double x , double y ) { this . x = x % ( VAR_1 ) ; this . y = y % ( VAR_2 ) ; }","public void METHOD_1 ( double x , double y ) { this . x = x ; this . y = y ; }","['Move VariableRead', 'Move VariableRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete FieldRead', 'Delete BinaryOperator']",8562
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { VAR_1 = METHOD_2 ( ) ; return true ; } else { ( VAR_1 ) -- ; return false ; } },private boolean METHOD_1 ( ) { if ( ( VAR_1 ) <= 0 ) { VAR_1 = METHOD_2 ( ) ; return true ; } else { VAR_1 = ( VAR_1 ) - 1 ; return false ; } },"['Insert Assignment', 'Move FieldWrite', 'Insert BinaryOperator', 'Insert FieldRead', 'Insert Literal', 'Delete UnaryOperator']",8563
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8564
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 ) ) return false ; if ( VAR_3 ) VAR_3 = false ; else { VAR_3 = true ; METHOD_2 ( ) ; } return true ; },public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; },"['Move Return', 'Delete FieldRead', 'Delete UnaryOperator', 'Delete Block', 'Delete If', 'Delete FieldRead', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete Literal', 'Delete Return']",8565
private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = METHOD_3 ( ) ; VAR_3 = METHOD_4 ( ) ; VAR_4 = METHOD_5 ( ) ; },private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_3 = METHOD_5 ( ) ; },"['Move FieldWrite', 'Delete FieldWrite', 'Delete Invocation', 'Delete Assignment', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite']",8566
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { METHOD_3 ( ) ; } },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) { METHOD_3 ( ) ; } },"['Insert Assignment', 'Insert FieldWrite', 'Insert VariableRead', 'Insert ThisAccess']",8567
"public void METHOD_1 ( float VAR_1 , int VAR_2 ) { this . VAR_3 = ( ( ( long ) ( java.lang.Float . METHOD_2 ( VAR_1 ) ) ) < < INT_1 ) | VAR_2 ; }","public void METHOD_1 ( float VAR_1 , int VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; }","['Insert Assignment', 'Update FieldWrite', 'Move VariableRead', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeReference', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete BinaryOperator']",8568
"public void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 . set ( VAR_4 , VAR_1 ) ; ( VAR_4 ) ++ ; VAR_3 . set ( VAR_4 , VAR_2 ) ; ( VAR_4 ) ++ ; ( VAR_5 ) ++ ; }","public void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 . set ( VAR_4 , VAR_1 ) ; ( VAR_4 ) ++ ; VAR_3 . set ( VAR_4 , VAR_2 ) ; ( VAR_4 ) ++ ; }","['Delete FieldWrite', 'Delete UnaryOperator']",8569
public final void METHOD_1 ( ) { this . VAR_1 = false ; this . VAR_2 . METHOD_1 ( ) ; for ( TYPE_1 p : this . VAR_3 ) { p . METHOD_1 ( METHOD_2 ( ) ) ; } },public final void METHOD_1 ( ) { this . VAR_2 . METHOD_1 ( ) ; for ( TYPE_1 p : this . VAR_3 ) { p . METHOD_1 ( METHOD_2 ( ) ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8570
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_3 . METHOD_2 ( ) ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8571
"public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) ; VAR_4 = true ; METHOD_3 ( VAR_1 , VAR_2 ) ; return true ; }","public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; return true ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8572
public boolean set ( java.util.List < TYPE_1 > VAR_1 ) { synchronized ( this . VAR_1 ) { this . VAR_1 . METHOD_1 ( ) ; this . size = VAR_2 . size ( ) ; return this . VAR_1 . METHOD_2 ( VAR_1 ) ; } },public boolean set ( java.util.List < TYPE_1 > VAR_1 ) { synchronized ( this . VAR_1 ) { this . VAR_1 . METHOD_1 ( ) ; return this . VAR_1 . METHOD_2 ( VAR_1 ) ; } },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8573
public static void main ( java.lang.String [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; TYPE_3 . METHOD_1 ( ) ; VAR_4 = TYPE_3 . METHOD_2 ( ) ; },public static void main ( java.lang.String [ ] VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; TYPE_3 . METHOD_1 ( ) ; TYPE_3 . METHOD_2 ( ) ; },"['Move Invocation', 'Delete FieldWrite', 'Delete Assignment']",8574
"private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( ( VAR_1 ) == 0 ) { VAR_1 = INT_1 ; } }","private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }","['Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete Block', 'Delete If']",8575
"protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; METHOD_2 ( intent ) ; METHOD_3 ( intent , VAR_3 , VAR_4 ) ; VAR_5 = true ; METHOD_4 ( ) ; }",protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( ) ; },"['Delete TypeReference', 'Delete ThisAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete LocalVariable', 'Delete VariableRead', 'Delete Invocation', 'Delete VariableRead', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8576
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; },public void METHOD_1 ( ) { },"['Delete FieldWrite', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8577
"public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( context , this ) ; VAR_2 = ( VAR_1 . METHOD_3 ( ) ) - 1 ; } }","public void METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; VAR_1 . METHOD_2 ( context , this ) ; } }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Literal', 'Delete BinaryOperator', 'Delete Assignment']",8578
public synchronized void METHOD_1 ( ) { VAR_1 = false ; super . METHOD_1 ( ) ; },public synchronized void METHOD_1 ( ) { super . METHOD_1 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8579
"public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( VAR_2 , message , VAR_3 ) ; VAR_4 . show ( ) ; }","public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( VAR_2 , message , VAR_3 ) . show ( ) ; }","['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete TypeAccess', 'Delete Invocation', 'Delete Block', 'Delete If', 'Delete FieldWrite', 'Delete Assignment', 'Delete TypeAccess']",8580
"public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ INT_1 ] ; VAR_3 = INT_1 ; VAR_4 = INT_1 ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","public void METHOD_1 ( android.view.View view ) { VAR_1 = VAR_2 [ INT_1 ] [ INT_1 ] ; android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment', 'Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8581
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_4 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8582
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; },public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8583
public void METHOD_1 ( int VAR_1 ) { VAR_2 = false ; },public void METHOD_1 ( int VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8584
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = null ; this . VAR_1 = VAR_1 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8585
public java.lang.String METHOD_1 ( int position ) { int i = position ; VAR_1 = STRING_1 + ( java.lang.String . METHOD_2 ( i ) ) ; return VAR_1 ; },public java.lang.String METHOD_1 ( int position ) { int i = position ; java.lang.String VAR_1 = STRING_1 + ( java.lang.String . METHOD_2 ( i ) ) ; return VAR_1 ; },"['Insert LocalVariable', 'Insert TypeReference', 'Move BinaryOperator', 'Insert VariableRead', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8586
"public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; VAR_2 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; VAR_3 = context ; } return VAR_1 ; }","public static synchronized TYPE_1 METHOD_1 ( android.content.Context context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; VAR_2 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; } return VAR_1 ; }","['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8587
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_3 . startsWith ( VAR_4 ) ) METHOD_2 ( ) ; else METHOD_3 ( VAR_1 ) ; },public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_3 . startsWith ( VAR_4 ) ) METHOD_2 ( ) ; else METHOD_3 ( VAR_1 ) ; },"['Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8588
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this , VAR_1 , VAR_2 ) ; VAR_3 . i ( STRING_1 , ( STRING_2 + ( VAR_4 . toString ( ) ) ) ) ; VAR_5 = false ; }","protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( this , VAR_1 , VAR_2 ) ; }","['Delete TypeAccess', 'Delete TypeAccess', 'Delete FieldRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete BinaryOperator', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8589
public void METHOD_1 ( android.view.View view ) { VAR_1 = 0 ; METHOD_2 ( 0 ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_1 ) ; },public void METHOD_1 ( android.view.View view ) { METHOD_2 ( 0 ) ; METHOD_3 ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8590
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_2 = VAR_3 ; },public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_2 = 0 ; },"['Insert Literal', 'Delete FieldRead']",8591
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( INT_1 ) ; METHOD_3 ( ) ; VAR_1 = METHOD_2 ( INT_2 ) ; },public void METHOD_1 ( ) { METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8592
public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; VAR_5 = null ; VAR_6 = - 1 ; },public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete UnaryOperator', 'Delete Assignment']",8593
public void METHOD_1 ( ) { VAR_1 = - ( VAR_2 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; },public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete UnaryOperator', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8594
public void set ( TYPE_1 VAR_1 ) { super . set ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; METHOD_1 ( VAR_2 . METHOD_2 ( ) ) ; },public void set ( TYPE_1 VAR_1 ) { super . set ( VAR_1 ) ; METHOD_1 ( VAR_2 . METHOD_2 ( ) ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8595
public double METHOD_1 ( double VAR_1 ) throws java.io.IOException { VAR_2 = VAR_1 - ( VAR_3 ) ; return VAR_2 ; },public double METHOD_1 ( double VAR_1 ) throws java.io.IOException { return VAR_1 - ( VAR_3 ) ; },"['Move BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete FieldRead']",8596
public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } else { METHOD_3 ( ) ; VAR_1 = true ; } },public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { METHOD_2 ( ) ; VAR_1 = false ; } else { METHOD_3 ( ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8597
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) - ( VAR_2 ) ) <= 0 ) { this . VAR_3 = 1 ; } else { this . VAR_3 = ( VAR_1 ) - ( VAR_2 ) ; } },public void METHOD_1 ( ) { this . VAR_3 = ( VAR_1 ) - ( VAR_2 ) ; },"['Move Assignment', 'Delete FieldRead', 'Delete FieldRead', 'Delete BinaryOperator', 'Delete Literal', 'Delete BinaryOperator', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete Block', 'Delete If']",8598
"public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 new TYPE_3 ( ) , 0 , INT_1 ) ; }",public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; new java.lang.Thread ( VAR_1 ) . start ( ) ; },"['Update Invocation', 'Insert ConstructorCall', 'Insert FieldRead', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Literal', 'Delete TypeAccess']",8599
"public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { VAR_3 = null ; VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; }","public void METHOD_1 ( TYPE_1 VAR_1 , java.io.IOException VAR_2 ) { VAR_2 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8600
"public void METHOD_1 ( ) { METHOD_2 ( 0 , ( - ( VAR_1 ) ) ) ; VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; }","public void METHOD_1 ( ) { METHOD_2 ( 0 , ( - ( VAR_1 ) ) ) ; VAR_2 = VAR_3 ; }","['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8601
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_3 ; VAR_4 = VAR_1 ; return this ; },public TYPE_1 METHOD_1 ( ) { this . VAR_2 = VAR_3 ; return this ; },"['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8603
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8604
public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( ) ; VAR_2 = true ; },public void METHOD_1 ( android.view.View VAR_1 ) { listener . METHOD_2 ( ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8605
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_2 = false ; VAR_3 . METHOD_2 ( true ) ; } },public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { VAR_3 . METHOD_2 ( true ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8606
"public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_2 ) ; if ( METHOD_4 ( ) ) { VAR_5 = null ; METHOD_5 ( ) ; } }","public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent VAR_2 = new android.content.Intent ( ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_2 ) ; if ( METHOD_4 ( ) ) METHOD_5 ( ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8607
"public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( false ) ; VAR_2 = new java.util.HashMap < > ( ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( VAR_1 , METHOD_7 ( ) ) . METHOD_8 ( ) ; }","public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( false ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( VAR_1 , METHOD_7 ( ) ) . METHOD_8 ( ) ; }","['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8608
void METHOD_1 ( TYPE_1 event ) { VAR_1 = 0 ; java.lang.String file = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( file != null ) { VAR_3 = file ; VAR_4 . METHOD_3 ( ) . METHOD_4 ( file ) ; } },void METHOD_1 ( TYPE_1 event ) { java.lang.String file = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( file != null ) { VAR_3 = file ; VAR_4 . METHOD_3 ( ) . METHOD_4 ( file ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8609
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = new java.util.ArrayList < TYPE_3 > ( ) ; METHOD_3 ( ) ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( VAR_3 ) ) ) ; METHOD_3 ( ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment']",8610
public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } VAR_6 = true ; METHOD_2 ( ) ; },public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 ) { VAR_3 . setText ( VAR_4 ) ; } else { VAR_3 . setText ( VAR_5 ) ; } METHOD_2 ( true ) ; },"['Move Literal', 'Delete FieldWrite', 'Delete Assignment']",8611
public boolean METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( getContext ( ) ) ; return true ; },public boolean METHOD_1 ( ) { return false ; },"['Update Literal', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8612
public TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_2 ( this ) . METHOD_2 ( this ) . METHOD_3 ( this ) . METHOD_4 ( VAR_2 ) . build ( ) ; VAR_1 . METHOD_5 ( ) ; return new TYPE_1 ( ) ; },public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete ThisAccess', 'Delete Invocation', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8613
public boolean METHOD_1 ( ) { if ( ( state ) != ( VAR_1 ) ) return false ; state = VAR_2 ; return true ; },public boolean METHOD_1 ( ) { if ( ( state ) != ( VAR_1 ) ) return false ; return true ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8614
public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_4 ; METHOD_4 ( ) ; return true ; default : return super . METHOD_1 ( item ) ; } },public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; return true ; default : return super . METHOD_1 ( item ) ; } },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8615
public void METHOD_1 ( ) { this . VAR_1 = true ; this . METHOD_2 ( ) . METHOD_3 ( this ) ; this . VAR_2 = null ; this . position = null ; this . VAR_3 = null ; },public void METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( this ) ; this . VAR_2 = null ; this . VAR_1 = true ; },"['Move Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8616
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 ) == 1.0 ) { VAR_2 = 0.0 ; METHOD_2 ( ( VAR_1 + STRING_1 ) ) ; } },public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ( VAR_1 + STRING_1 ) ) ; },"['Move Invocation', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8617
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = true ; VAR_5 = false ; },private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 = true ; VAR_5 = false ; },"['Delete FieldWrite', 'Delete TypeAccess', 'Delete Invocation', 'Delete Assignment']",8618
"public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( VAR_2 , VAR_1 ) ) { VAR_2 = VAR_1 ; METHOD_3 ( ) ; } }",public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment', 'Delete Invocation', 'Delete Block', 'Delete If']",8619
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8621
"public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; VAR_1 = new TYPE_3 ( VAR_2 , null ) ; } return VAR_1 ; }","public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; TYPE_3 VAR_1 = new TYPE_3 ( VAR_2 , null ) ; return VAR_1 ; }","['Move LocalVariable', 'Insert LocalVariable', 'Insert TypeReference', 'Move ConstructorCall', 'Insert VariableRead', 'Delete FieldRead', 'Delete Literal', 'Delete BinaryOperator', 'Delete FieldWrite', 'Delete Assignment', 'Delete Block', 'Delete If', 'Delete FieldRead']",8622
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; this . VAR_4 = 0 ; this . VAR_5 = 0 ; },private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < > ( ) ; this . VAR_2 = 0 ; this . VAR_3 = 0 ; },"['Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete ThisAccess', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8623
private void METHOD_1 ( int n ) { VAR_1 = ( VAR_2 . METHOD_2 ( ( n - INT_1 ) ) ) + INT_1 ; },"private void METHOD_1 ( java.util.Random VAR_2 , int n ) { VAR_1 = ( VAR_2 . METHOD_2 ( n ) ) + INT_1 ; }","['Insert Parameter', 'Insert TypeReference', 'Update BinaryOperator', 'Move BinaryOperator', 'Insert Invocation', 'Insert VariableRead', 'Move VariableRead', 'Delete TypeAccess', 'Delete Invocation', 'Delete FieldRead', 'Delete BinaryOperator']",8624
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; VAR_3 = new TYPE_3 ( this ) . METHOD_4 ( VAR_4 ) . build ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; },"['Delete FieldWrite', 'Delete ThisAccess', 'Delete ConstructorCall', 'Delete TypeAccess', 'Delete Invocation', 'Delete Invocation', 'Delete Assignment']",8626
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 = VAR_2 ; },public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; },"['Delete FieldWrite', 'Delete FieldRead', 'Delete Assignment']",8627
"public static void METHOD_1 ( int VAR_1 , boolean VAR_2 , double VAR_3 , int VAR_4 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; VAR_8 = VAR_4 ; }","public static void METHOD_1 ( int VAR_1 , boolean VAR_2 , double VAR_3 ) { VAR_5 = VAR_1 ; VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; }","['Delete TypeReference', 'Delete Parameter', 'Delete FieldWrite', 'Delete VariableRead', 'Delete Assignment']",8628
"public void METHOD_1 ( java.lang.Exception VAR_1 , TYPE_1 result ) { VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( result ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 = true ; }","public void METHOD_1 ( java.lang.Exception VAR_1 , TYPE_1 result ) { VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( result ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8629
public void METHOD_1 ( ) { if ( VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( ) ; } } VAR_1 = false ; },public void METHOD_1 ( ) { if ( VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( ) ; } } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8630
private void init ( android.content.Context context ) throws java.io.IOException { METHOD_1 ( context ) ; METHOD_2 ( context ) ; VAR_1 = TYPE_1 . METHOD_3 ( context ) ; },public void init ( android.content.Context context ) throws java.io.IOException { METHOD_1 ( context ) ; METHOD_2 ( context ) ; },"['Update Wra', 'Delete FieldWrite', 'Delete TypeAccess', 'Delete VariableRead', 'Delete Invocation', 'Delete Assignment']",8631
"public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_1 , this ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } VAR_2 = false ; }","public void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_1 , this ) ; VAR_1 . METHOD_4 ( ) ; } VAR_2 = false ; }","['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8632
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; },public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; },"['Insert Assignment', 'Insert FieldWrite', 'Move VariableRead', 'Insert ThisAccess', 'Delete TypeAccess', 'Delete Invocation']",8633
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 ; try { VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 = true ; VAR_4 = true ; return VAR_1 ; } catch ( java.lang.Exception VAR_5 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } },public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 ; try { VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 ; } catch ( java.lang.Exception VAR_5 ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8634
public void METHOD_1 ( java.lang.Object ... args ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 = false ; },public void METHOD_1 ( java.lang.Object ... args ) { java.lang.System.out.println ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete Literal', 'Delete Assignment']",8635
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( METHOD_3 ( ) ) ; VAR_4 . open ( ) ; },protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; },"['Delete FieldWrite', 'Delete Invocation', 'Delete ConstructorCall', 'Delete Assignment', 'Delete TypeAccess', 'Delete Invocation']",8636
"public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new java.io.File ( STRING_1 ) ; VAR_4 = new TYPE_3 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_5 class , VAR_4 ) ; }",public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_3 = new java.io.File ( STRING_1 ) ; },"['Delete FieldWrite', 'Delete ConstructorCall', 'Delete Assignment', 'Delete Invocation', 'Delete Invocation', 'Delete TypeAccess', 'Delete TypeAccess', 'Delete Invocation']",8637
"protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; if ( ! ( VAR_2 ) ) { TYPE_1 . METHOD_3 ( this ) . METHOD_4 ( VAR_3 , new TYPE_2 ( VAR_4 ) ) ; VAR_2 = true ; } }",protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; },"['Delete FieldRead', 'Delete UnaryOperator', 'Delete TypeAccess', 'Delete ThisAccess', 'Delete Invocation', 'Delete TypeAccess', 'Delete FieldRead', 'Delete ConstructorCall', 'Delete Invocation', 'Delete FieldWrite', 'Delete Literal', 'Delete Assignment', 'Delete Block', 'Delete If']",8638
